{
    "boards.txt": [],
    "bootloader-tinyuf2.bin": [],
    "partitions-8MB-tinyuf2.csv": [],
    "pins_arduino.h": [],
    "tinyuf2.bin": [],
    "variant.cpp": [
        {
            "commit": "007badbbb2127e51ab2819adaed7108834c78d10",
            "timestamp": "2022-10-25T11:57:07+02:00",
            "author": "Wai Weng",
            "commit_message": "Add New Board: Cytron Maker Feather AIoT S3. (#7348)\n\n* Added support for Cytron Maker Feather AIoT S3.\r\n\r\n* 1. Select OPI PSRAM by default.\r\n2. Fixed pin name error in variant.cpp.\r\n3. Added definition for RGB_BUILTIN.\r\n\r\n* Define the RGB_BUILTIN as shown in #6979.\r\n\r\n* Added pin definition for A12 (Vin Sense).",
            "additions": 38,
            "deletions": 0,
            "change_type": "ADD",
            "diff": "@@ -0,0 +1,38 @@\n+/* \n+ * The MIT License (MIT)\n+ *\n+ * Copyright (c) 2022 Wai Weng for Cytron Technologies\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included in\n+ * all copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+ * THE SOFTWARE.\n+ */\n+\n+\n+#include \"esp32-hal-gpio.h\"\n+#include \"pins_arduino.h\"\n+\n+extern \"C\" {\n+\n+// Initialize variant/board, called before setup()\n+void initVariant(void)\n+{\n+  // Turn on VPeripheral by default.\n+  pinMode(VP_EN, OUTPUT);\n+  digitalWrite(VP_EN, HIGH);\n+}\n+}\n",
            "comment_added_diff": {
                "31": "// Initialize variant/board, called before setup()",
                "34": "  // Turn on VPeripheral by default."
            },
            "comment_deleted_diff": {},
            "comment_modified_diff": {}
        },
        {
            "commit": "7f4946375f826e5448b1cb71d5e658ab4322d469",
            "timestamp": "2023-02-06T14:31:06+02:00",
            "author": "Ha Thach",
            "commit_message": "add adafruit new board feather esp32s2 reserve tft (#7794)",
            "additions": 6,
            "deletions": 1,
            "change_type": "MODIFY",
            "diff": "@@ -31,7 +31,12 @@ extern \"C\" {\n // Initialize variant/board, called before setup()\n void initVariant(void)\n {\n-\n+  // This board has power control pins, and we must set them to output and high\n+  // in order to enable the NeoPixels, TFT & I2C\n+  pinMode(NEOPIXEL_POWER, OUTPUT);\n+  digitalWrite(NEOPIXEL_POWER, HIGH);\n+  pinMode(TFT_I2C_POWER, OUTPUT);\n+  digitalWrite(TFT_I2C_POWER, HIGH);\n }\n \n }\n",
            "comment_added_diff": {
                "34": "  // This board has power control pins, and we must set them to output and high",
                "35": "  // in order to enable the NeoPixels, TFT & I2C"
            },
            "comment_deleted_diff": {},
            "comment_modified_diff": {}
        },
        {
            "commit": "37c81dc2db500581079974d52e96da3ca2c6792e",
            "timestamp": "2023-02-06T21:12:06+02:00",
            "author": "surt",
            "commit_message": "Add LED_BUILTIN* definitions and initialization for LEDs to stop them floating. (#7636)\n\nCo-authored-by: Rodrigo Garcia <rodrigo.garcia@espressif.com>",
            "additions": 7,
            "deletions": 0,
            "change_type": "ADD",
            "diff": "@@ -0,0 +1,7 @@\n+#include \"Arduino.h\"\n+\n+extern \"C\" void initVariant(void){\n+\t// Stop LEDs floating\n+\tpinMode(LED_BUILTIN, OUTPUT); digitalWrite(LED_BUILTIN, LOW);\n+\tpinMode(LED_BUILTIN_AUX, OUTPUT); digitalWrite(LED_BUILTIN_AUX, LOW);\n+}\n\\ No newline at end of file\n",
            "comment_added_diff": {
                "4": "\t// Stop LEDs floating"
            },
            "comment_deleted_diff": {},
            "comment_modified_diff": {}
        },
        {
            "commit": "5b0a7d0138fa3de6fe3c9b250a8f88355fd16da1",
            "timestamp": "2023-02-08T12:34:54+02:00",
            "author": "Ha Thach",
            "commit_message": "add new board Adafruit Feather ESP32-S3 Reverse TFT (#7811)",
            "additions": 42,
            "deletions": 0,
            "change_type": "ADD",
            "diff": "@@ -0,0 +1,42 @@\n+/* \n+ * The MIT License (MIT)\n+ *\n+ * Copyright (c) 2021 Ha Thach (tinyusb.org) for Adafruit Industries\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included in\n+ * all copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+ * THE SOFTWARE.\n+ */\n+\n+\n+#include \"esp32-hal-gpio.h\"\n+#include \"pins_arduino.h\"\n+\n+extern \"C\" {\n+\n+// Initialize variant/board, called before setup()\n+void initVariant(void)\n+{\n+  // This board has power control pins, and we must set them to output and high\n+  // in order to enable the NeoPixels, TFT & I2C\n+  pinMode(NEOPIXEL_POWER, OUTPUT);\n+  digitalWrite(NEOPIXEL_POWER, HIGH);\n+  pinMode(TFT_I2C_POWER, OUTPUT);\n+  digitalWrite(TFT_I2C_POWER, HIGH);\n+}\n+\n+}\n",
            "comment_added_diff": {
                "31": "// Initialize variant/board, called before setup()",
                "34": "  // This board has power control pins, and we must set them to output and high",
                "35": "  // in order to enable the NeoPixels, TFT & I2C"
            },
            "comment_deleted_diff": {},
            "comment_modified_diff": {}
        },
        {
            "commit": "855f5261913c74e9f4f99fc0de184c847cc4db59",
            "timestamp": "2023-07-01T11:08:21+03:00",
            "author": "Ha Thach",
            "commit_message": "add Adafruit QT PY S3 with 4MB flash 2 MB PSRAM (#8370)\n\nalso re-order Adafruit boards a bit",
            "additions": 39,
            "deletions": 0,
            "change_type": "ADD",
            "diff": "@@ -0,0 +1,39 @@\n+/* \n+ * The MIT License (MIT)\n+ *\n+ * Copyright (c) 2021 Ha Thach (tinyusb.org) for Adafruit Industries\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included in\n+ * all copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+ * THE SOFTWARE.\n+ */\n+\n+\n+#include \"esp32-hal-gpio.h\"\n+#include \"pins_arduino.h\"\n+\n+extern \"C\" {\n+\n+// Initialize variant/board, called before setup()\n+void initVariant(void)\n+{\n+  // This board has a power control pin, and we must set it to output and high\n+  // in order to enable the NeoPixels.\n+  pinMode(NEOPIXEL_POWER, OUTPUT);\n+  digitalWrite(NEOPIXEL_POWER, HIGH);\n+}\n+}\n",
            "comment_added_diff": {
                "31": "// Initialize variant/board, called before setup()",
                "34": "  // This board has a power control pin, and we must set it to output and high",
                "35": "  // in order to enable the NeoPixels."
            },
            "comment_deleted_diff": {},
            "comment_modified_diff": {}
        },
        {
            "commit": "dbc060b181c325723356bde6ceedb8b829d2bc86",
            "timestamp": "2023-08-29T13:56:23+03:00",
            "author": "Ha Thach",
            "commit_message": "add Adafruit metro S3 16MB Flash, 8MB PSRam (#8478)\n\n* add Adafruit metro S3 16MB Flash, 8MB PSRam\r\n\r\nalso reorder to have feather boards next to each others\r\n\r\n* correct SS pin to 21, also add NEOPIXEL_PIN\r\n\r\n* change metro s3 psram type to opi, default SD_CS (SS) to input pull up\r\n\r\n* remove psram qspi option",
            "additions": 37,
            "deletions": 0,
            "change_type": "ADD",
            "diff": "@@ -0,0 +1,37 @@\n+/* \n+ * The MIT License (MIT)\n+ *\n+ * Copyright (c) 2021 Ha Thach (tinyusb.org) for Adafruit Industries\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included in\n+ * all copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+ * THE SOFTWARE.\n+ */\n+\n+\n+#include \"esp32-hal-gpio.h\"\n+#include \"pins_arduino.h\"\n+\n+extern \"C\" {\n+\n+// Initialize variant/board, called before setup()\n+void initVariant(void) {\n+  // default SD_CS to input pullup\n+  pinMode(SS, INPUT_PULLUP);\n+}\n+\n+}\n",
            "comment_added_diff": {
                "31": "// Initialize variant/board, called before setup()",
                "33": "  // default SD_CS to input pullup"
            },
            "comment_deleted_diff": {},
            "comment_modified_diff": {}
        },
        {
            "commit": "a0b5a0936e6a6c6dbee2aa281c611e98c23539d2",
            "timestamp": "2023-10-04T20:01:41+03:00",
            "author": "Melissa LeBlanc-Williams",
            "commit_message": "Add Additional Adafruit boards including the new Qualia ESP32-S3 and Camera ESP32-S3 (#8696)\n\n* Add MatrixPortal ESP32-S3 (WIP)\r\n\r\n* Update bootloader files, etc.\r\n\r\n* Add MatrixPortal S3 PSRAM setup to boards.txt\r\n\r\n* fix neopixel pin\r\n\r\n* initialize bsp\r\n\r\n* ?\r\n\r\n* new variant for tft board with RGB666 40-pin display contact\r\n\r\n* fix menu name\r\n\r\n* fix neopixel pins\r\n\r\n* more pin defs\r\n\r\n* second bootloader file\r\n\r\n* fix partition\r\n\r\n* Update variants/adafruit_camera_esp32s3/pins_arduino.h\r\n\r\nCo-authored-by: Jan Proch\u00e1zka <90197375+P-R-O-C-H-Y@users.noreply.github.com>\r\n\r\n* Update variants/adafruit_qualia_s3_rgb666/pins_arduino.h\r\n\r\nCo-authored-by: Jan Proch\u00e1zka <90197375+P-R-O-C-H-Y@users.noreply.github.com>\r\n\r\n* add some #'s\r\n\r\n* hardware design mistakes? in this economy? now we can use PSRAM and SPI at the same time :)\r\n\r\n---------\r\n\r\nCo-authored-by: Phillip Burgess <paintyourdragon@dslextreme.com>\r\nCo-authored-by: Limor \"Ladyada\" Fried <limor@ladyada.net>\r\nCo-authored-by: Jan Proch\u00e1zka <90197375+P-R-O-C-H-Y@users.noreply.github.com>",
            "additions": 36,
            "deletions": 0,
            "change_type": "ADD",
            "diff": "@@ -0,0 +1,36 @@\n+/* \n+ * The MIT License (MIT)\n+ *\n+ * Copyright (c) 2021 Ha Thach (tinyusb.org) for Adafruit Industries\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included in\n+ * all copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+ * THE SOFTWARE.\n+ */\n+\n+\n+#include \"esp32-hal-gpio.h\"\n+#include \"pins_arduino.h\"\n+\n+extern \"C\" {\n+\n+// Initialize variant/board, called before setup()\n+void initVariant(void)\n+{\n+\n+}\n+}\n",
            "comment_added_diff": {
                "31": "// Initialize variant/board, called before setup()"
            },
            "comment_deleted_diff": {},
            "comment_modified_diff": {}
        },
        {
            "commit": "a0b5a0936e6a6c6dbee2aa281c611e98c23539d2",
            "timestamp": "2023-10-04T20:01:41+03:00",
            "author": "Melissa LeBlanc-Williams",
            "commit_message": "Add Additional Adafruit boards including the new Qualia ESP32-S3 and Camera ESP32-S3 (#8696)\n\n* Add MatrixPortal ESP32-S3 (WIP)\r\n\r\n* Update bootloader files, etc.\r\n\r\n* Add MatrixPortal S3 PSRAM setup to boards.txt\r\n\r\n* fix neopixel pin\r\n\r\n* initialize bsp\r\n\r\n* ?\r\n\r\n* new variant for tft board with RGB666 40-pin display contact\r\n\r\n* fix menu name\r\n\r\n* fix neopixel pins\r\n\r\n* more pin defs\r\n\r\n* second bootloader file\r\n\r\n* fix partition\r\n\r\n* Update variants/adafruit_camera_esp32s3/pins_arduino.h\r\n\r\nCo-authored-by: Jan Proch\u00e1zka <90197375+P-R-O-C-H-Y@users.noreply.github.com>\r\n\r\n* Update variants/adafruit_qualia_s3_rgb666/pins_arduino.h\r\n\r\nCo-authored-by: Jan Proch\u00e1zka <90197375+P-R-O-C-H-Y@users.noreply.github.com>\r\n\r\n* add some #'s\r\n\r\n* hardware design mistakes? in this economy? now we can use PSRAM and SPI at the same time :)\r\n\r\n---------\r\n\r\nCo-authored-by: Phillip Burgess <paintyourdragon@dslextreme.com>\r\nCo-authored-by: Limor \"Ladyada\" Fried <limor@ladyada.net>\r\nCo-authored-by: Jan Proch\u00e1zka <90197375+P-R-O-C-H-Y@users.noreply.github.com>",
            "additions": 2,
            "deletions": 1,
            "change_type": "MODIFY",
            "diff": "@@ -30,7 +30,8 @@ extern \"C\" {\n \n // Initialize variant/board, called before setup()\n void initVariant(void) {\n-  // default SD_CS to input pullup\n+  // default SD_CS to input pullup (we cannot have built in pullup since its\n+  // a strapping pin!)\n   pinMode(SS, INPUT_PULLUP);\n }\n \n",
            "comment_added_diff": {
                "33": "  // default SD_CS to input pullup (we cannot have built in pullup since its",
                "34": "  // a strapping pin!)"
            },
            "comment_deleted_diff": {
                "33": "  // default SD_CS to input pullup"
            },
            "comment_modified_diff": {
                "33": "  // default SD_CS to input pullup"
            }
        },
        {
            "commit": "a0b5a0936e6a6c6dbee2aa281c611e98c23539d2",
            "timestamp": "2023-10-04T20:01:41+03:00",
            "author": "Melissa LeBlanc-Williams",
            "commit_message": "Add Additional Adafruit boards including the new Qualia ESP32-S3 and Camera ESP32-S3 (#8696)\n\n* Add MatrixPortal ESP32-S3 (WIP)\r\n\r\n* Update bootloader files, etc.\r\n\r\n* Add MatrixPortal S3 PSRAM setup to boards.txt\r\n\r\n* fix neopixel pin\r\n\r\n* initialize bsp\r\n\r\n* ?\r\n\r\n* new variant for tft board with RGB666 40-pin display contact\r\n\r\n* fix menu name\r\n\r\n* fix neopixel pins\r\n\r\n* more pin defs\r\n\r\n* second bootloader file\r\n\r\n* fix partition\r\n\r\n* Update variants/adafruit_camera_esp32s3/pins_arduino.h\r\n\r\nCo-authored-by: Jan Proch\u00e1zka <90197375+P-R-O-C-H-Y@users.noreply.github.com>\r\n\r\n* Update variants/adafruit_qualia_s3_rgb666/pins_arduino.h\r\n\r\nCo-authored-by: Jan Proch\u00e1zka <90197375+P-R-O-C-H-Y@users.noreply.github.com>\r\n\r\n* add some #'s\r\n\r\n* hardware design mistakes? in this economy? now we can use PSRAM and SPI at the same time :)\r\n\r\n---------\r\n\r\nCo-authored-by: Phillip Burgess <paintyourdragon@dslextreme.com>\r\nCo-authored-by: Limor \"Ladyada\" Fried <limor@ladyada.net>\r\nCo-authored-by: Jan Proch\u00e1zka <90197375+P-R-O-C-H-Y@users.noreply.github.com>",
            "additions": 37,
            "deletions": 0,
            "change_type": "ADD",
            "diff": "@@ -0,0 +1,37 @@\n+/* \n+ * The MIT License (MIT)\n+ *\n+ * Copyright (c) 2021 Ha Thach (tinyusb.org) for Adafruit Industries\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included in\n+ * all copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+ * THE SOFTWARE.\n+ */\n+\n+\n+#include \"esp32-hal-gpio.h\"\n+#include \"pins_arduino.h\"\n+\n+extern \"C\" {\n+\n+// Initialize variant/board, called before setup()\n+void initVariant(void) {\n+  // default SD_CS to input pullup\n+  pinMode(SS, INPUT_PULLUP);\n+}\n+\n+}\n",
            "comment_added_diff": {
                "31": "// Initialize variant/board, called before setup()",
                "33": "  // default SD_CS to input pullup"
            },
            "comment_deleted_diff": {},
            "comment_modified_diff": {}
        },
        {
            "commit": "ab6a25ed8db8431f6d0464b560445ed9e0e62be6",
            "timestamp": "2023-10-06T13:50:15+03:00",
            "author": "Rodrigo Garcia",
            "commit_message": "Master5.1 s3 gpio48 and platform txt review (#8726)\n\n* variants + S3 GPIO48\r\n\r\n* fixes unphone8.build.flash_type\r\n\r\n* fixes unphone8.build.flash_type\r\n\r\n* heltec board name issue step 1\r\n\r\n* heltec board name issue step 2\r\n\r\n* fixes defines and new boards\r\n\r\n* final review",
            "additions": 1,
            "deletions": 2,
            "change_type": "MODIFY",
            "diff": "@@ -30,8 +30,7 @@ extern \"C\" {\n \n // Initialize variant/board, called before setup()\n void initVariant(void) {\n-  // default SD_CS to input pullup (we cannot have built in pullup since its\n-  // a strapping pin!)\n+  // default SD_CS to input pullup\n   pinMode(SS, INPUT_PULLUP);\n }\n \n",
            "comment_added_diff": {
                "33": "  // default SD_CS to input pullup"
            },
            "comment_deleted_diff": {
                "33": "  // default SD_CS to input pullup (we cannot have built in pullup since its",
                "34": "  // a strapping pin!)"
            },
            "comment_modified_diff": {
                "33": "  // default SD_CS to input pullup (we cannot have built in pullup since its"
            }
        }
    ],
    "HardwareSerial.cpp": [
        {
            "commit": "2cebee4a4038fbc0b466eef366214e0873a64beb",
            "timestamp": "2022-11-02T12:30:02+02:00",
            "author": "Rodrigo Garcia",
            "commit_message": "fixes UART pin detach on end() (#7402)",
            "additions": 19,
            "deletions": 3,
            "change_type": "MODIFY",
            "diff": "@@ -145,6 +145,10 @@ _eventTask(NULL)\n #if !CONFIG_DISABLE_HAL_LOCKS\n     ,_lock(NULL)\n #endif\n+,_rxPin(-1) \n+,_txPin(-1)\n+,_ctsPin(-1)\n+,_rtsPin(-1)\n {\n #if !CONFIG_DISABLE_HAL_LOCKS\n     if(_lock == NULL){\n@@ -384,7 +388,8 @@ void HardwareSerial::begin(unsigned long baud, uint32_t config, int8_t rxPin, in\n \n     // Set UART RX timeout\n     uartSetRxTimeout(_uart, _rxTimeout);\n-\n+    _rxPin = rxPin;\n+    _txPin = txPin;\n     HSERIAL_MUTEX_UNLOCK();\n }\n \n@@ -403,6 +408,8 @@ void HardwareSerial::end(bool fullyTerminate)\n         if (uartGetDebug() == _uart_nr) {\n             uartSetDebug(0);\n         }\n+        uartDetachPins(_uart, _rxPin, _txPin, _ctsPin, _rtsPin);\n+        _rxPin = _txPin = _ctsPin = _rtsPin = -1;\n     }\n     delay(10);\n     uartEnd(_uart);\n@@ -507,10 +514,19 @@ void HardwareSerial::setRxInvert(bool invert)\n void HardwareSerial::setPins(int8_t rxPin, int8_t txPin, int8_t ctsPin, int8_t rtsPin)\n {\n     if(_uart == NULL) {\n-        log_e(\"setPins() shall be called after begin() - nothing done\");\n+        log_e(\"setPins() shall be called after begin() - nothing done\\n\");\n         return;\n     }\n-    uartSetPins(_uart, rxPin, txPin, ctsPin, rtsPin);\n+\n+    // uartSetPins() checks if pins are valid for each function and for the SoC \n+    if (uartSetPins(_uart, rxPin, txPin, ctsPin, rtsPin)) {\n+        _txPin = _txPin >= 0 ? txPin : _txPin;\n+        _rxPin = _rxPin >= 0 ? rxPin : _rxPin;\n+        _rtsPin = _rtsPin >= 0 ? rtsPin : _rtsPin;\n+        _ctsPin = _ctsPin >= 0 ? ctsPin : _ctsPin;\n+    } else {\n+        log_e(\"Error when setting Serial port Pins. Invalid Pin.\\n\");\n+    }\n }\n \n // Enables or disables Hardware Flow Control using RTS and/or CTS pins (must use setAllPins() before)\n",
            "comment_added_diff": {
                "521": "    // uartSetPins() checks if pins are valid for each function and for the SoC"
            },
            "comment_deleted_diff": {},
            "comment_modified_diff": {}
        },
        {
            "commit": "7cbd0371e486e5d48d9fb0f83c7085580d35b708",
            "timestamp": "2022-12-13T11:54:07+02:00",
            "author": "Rodrigo Garcia",
            "commit_message": "Improves UART reading performance (#7525)\n\n* Improves UART reading performance\r\n\r\n* overrides Stream::readBytes()\r\n\r\n* fixes override signature\r\n\r\n* adds some IDF error return  conditions",
            "additions": 12,
            "deletions": 13,
            "change_type": "MODIFY",
            "diff": "@@ -450,10 +450,12 @@ int HardwareSerial::peek(void)\n \n int HardwareSerial::read(void)\n {\n-    if(available()) {\n-        return uartRead(_uart);\n+    uint8_t c = 0;\n+    if (uartReadBytes(_uart, &c, 1, 0) == 1) {\n+        return c;\n+    } else {\n+        return -1;\n     }\n-    return -1;\n }\n \n // read characters into buffer\n@@ -462,16 +464,13 @@ int HardwareSerial::read(void)\n // the buffer is NOT null terminated.\n size_t HardwareSerial::read(uint8_t *buffer, size_t size)\n {\n-    size_t avail = available();\n-    if (size < avail) {\n-        avail = size;\n-    }\n-    size_t count = 0;\n-    while(count < avail) {\n-        *buffer++ = uartRead(_uart);\n-        count++;\n-    }\n-    return count;\n+    return uartReadBytes(_uart, buffer, size, 0);\n+}\n+\n+// Overrides Stream::readBytes() to be faster using IDF\n+size_t HardwareSerial::readBytes(uint8_t *buffer, size_t length)\n+{\n+    return uartReadBytes(_uart, buffer, length, (uint32_t)getTimeout());\n }\n \n void HardwareSerial::flush(void)\n",
            "comment_added_diff": {
                "470": "// Overrides Stream::readBytes() to be faster using IDF"
            },
            "comment_deleted_diff": {},
            "comment_modified_diff": {}
        },
        {
            "commit": "5dff15ce9d5fae0f026b9dba7482fa49fc1a84b9",
            "timestamp": "2022-12-21T18:47:17+02:00",
            "author": "Rodrigo Garcia",
            "commit_message": "Fixes inconsistencies and adds extended HardwareSerial examples (#7412)\n\n* adds extended HardwareSerial examples\r\n\r\n* Adds new example with Serial RxTimeout\r\n\r\n* adds and improves Serial onReceive expamples\r\n\r\n* adjust includes CMake - UART example\r\n\r\n* adjust includes CMake - UART example\r\n\r\n* fixes CMake and CI\r\n\r\n* adds ESP/Serial to CMakeList\r\n\r\n* adds ESP/Serial to CMakeList\r\n\r\n* fixes demo include\r\n\r\n* fixes BREAK demo\r\n\r\n* fixes onReceive demo\r\n\r\n* Changes FIFO Full criteria\r\n\r\nChanged the \"1-by-1\" Serial only when baud rate is 57600 or lower.\r\n\r\n* example code replacement\r\n\r\n* replaces functions in hal",
            "additions": 45,
            "deletions": 7,
            "change_type": "MODIFY",
            "diff": "@@ -139,8 +139,9 @@ _rxBufferSize(256),\n _txBufferSize(0), \n _onReceiveCB(NULL), \n _onReceiveErrorCB(NULL),\n-_onReceiveTimeout(true),\n+_onReceiveTimeout(false),\n _rxTimeout(2),\n+_rxFIFOFull(0),\n _eventTask(NULL)\n #if !CONFIG_DISABLE_HAL_LOCKS\n     ,_lock(NULL)\n@@ -206,12 +207,23 @@ void HardwareSerial::onReceive(OnReceiveCb function, bool onlyOnTimeout)\n     HSERIAL_MUTEX_LOCK();\n     // function may be NULL to cancel onReceive() from its respective task \n     _onReceiveCB = function;\n-    // When Rx timeout is Zero (disabled), there is only one possible option that is callback when FIFO reaches 120 bytes\n-    _onReceiveTimeout = _rxTimeout > 0 ? onlyOnTimeout : false;\n \n-    // this can be called after Serial.begin(), therefore it shall create the event task\n-    if (function != NULL && _uart != NULL && _eventTask == NULL) {\n-        _createEventTask(this); // Create event task\n+    // setting the callback to NULL will just disable it\n+    if (_onReceiveCB != NULL) {\n+        // When Rx timeout is Zero (disabled), there is only one possible option that is callback when FIFO reaches 120 bytes\n+        _onReceiveTimeout = _rxTimeout > 0 ? onlyOnTimeout : false;\n+\n+        // in case that onReceive() shall work only with RX Timeout, FIFO shall be high\n+        // this is a work around for an IDF issue with events and low FIFO Full value (< 3)\n+        if (_onReceiveTimeout) {\n+            uartSetRxFIFOFull(_uart, 120);\n+            log_w(\"OnReceive is set to Timeout only, thus FIFO Full is now 120 bytes.\");\n+        }\n+\n+        // this method can be called after Serial.begin(), therefore it shall create the event task\n+        if (_uart != NULL && _eventTask == NULL) {\n+            _createEventTask(this); // Create event task\n+        }\n     }\n     HSERIAL_MUTEX_UNLOCK();\n }\n@@ -224,7 +236,14 @@ void HardwareSerial::onReceive(OnReceiveCb function, bool onlyOnTimeout)\n void HardwareSerial::setRxFIFOFull(uint8_t fifoBytes)\n {\n     HSERIAL_MUTEX_LOCK();\n+    // in case that onReceive() shall work only with RX Timeout, FIFO shall be high\n+    // this is a work around for an IDF issue with events and low FIFO Full value (< 3)\n+    if (_onReceiveCB != NULL && _onReceiveTimeout) {\n+        fifoBytes = 120;\n+        log_w(\"OnReceive is set to Timeout only, thus FIFO Full is now 120 bytes.\");\n+    }\n     uartSetRxFIFOFull(_uart, fifoBytes); // Set new timeout\n+    if (fifoBytes > 0 && fifoBytes < SOC_UART_FIFO_LEN - 1) _rxFIFOFull = fifoBytes;\n     HSERIAL_MUTEX_UNLOCK();\n }\n \n@@ -299,7 +318,6 @@ void HardwareSerial::_uartEventTask(void *args)\n                 }\n                 if (currentErr != UART_NO_ERROR) {\n                     if(uart->_onReceiveErrorCB) uart->_onReceiveErrorCB(currentErr);\n-                    if(uart->_onReceiveCB && uart->available() > 0) uart->_onReceiveCB();   // forces User Callback too\n                 }\n             }\n         }\n@@ -388,8 +406,24 @@ void HardwareSerial::begin(unsigned long baud, uint32_t config, int8_t rxPin, in\n \n     // Set UART RX timeout\n     uartSetRxTimeout(_uart, _rxTimeout);\n+\n+    // Set UART FIFO Full depending on the baud rate. \n+    // Lower baud rates will force to emulate byte-by-byte reading\n+    // Higher baud rates will keep IDF default of 120 bytes for FIFO FULL Interrupt\n+    // It can also be changed by the application at any time \n+    if (!_rxFIFOFull) {    // it has not being changed before calling begin()\n+      //  set a default FIFO Full value for the IDF driver\n+      uint8_t fifoFull = 1;\n+      if (baud > 57600 || (_onReceiveCB != NULL && _onReceiveTimeout)) {\n+        fifoFull = 120;\n+      }\n+      uartSetRxFIFOFull(_uart, fifoFull);\n+      _rxFIFOFull = fifoFull;\n+    }\n+\n     _rxPin = rxPin;\n     _txPin = txPin;\n+\n     HSERIAL_MUTEX_UNLOCK();\n }\n \n@@ -408,8 +442,12 @@ void HardwareSerial::end(bool fullyTerminate)\n         if (uartGetDebug() == _uart_nr) {\n             uartSetDebug(0);\n         }\n+\n+        _rxFIFOFull = 0; \n+\n         uartDetachPins(_uart, _rxPin, _txPin, _ctsPin, _rtsPin);\n         _rxPin = _txPin = _ctsPin = _rtsPin = -1;\n+\n     }\n     delay(10);\n     uartEnd(_uart);\n",
            "comment_added_diff": {
                "211": "    // setting the callback to NULL will just disable it",
                "213": "        // When Rx timeout is Zero (disabled), there is only one possible option that is callback when FIFO reaches 120 bytes",
                "216": "        // in case that onReceive() shall work only with RX Timeout, FIFO shall be high",
                "217": "        // this is a work around for an IDF issue with events and low FIFO Full value (< 3)",
                "223": "        // this method can be called after Serial.begin(), therefore it shall create the event task",
                "225": "            _createEventTask(this); // Create event task",
                "239": "    // in case that onReceive() shall work only with RX Timeout, FIFO shall be high",
                "240": "    // this is a work around for an IDF issue with events and low FIFO Full value (< 3)",
                "410": "    // Set UART FIFO Full depending on the baud rate.",
                "411": "    // Lower baud rates will force to emulate byte-by-byte reading",
                "412": "    // Higher baud rates will keep IDF default of 120 bytes for FIFO FULL Interrupt",
                "413": "    // It can also be changed by the application at any time",
                "414": "    if (!_rxFIFOFull) {    // it has not being changed before calling begin()",
                "415": "      //  set a default FIFO Full value for the IDF driver"
            },
            "comment_deleted_diff": {
                "209": "    // When Rx timeout is Zero (disabled), there is only one possible option that is callback when FIFO reaches 120 bytes",
                "212": "    // this can be called after Serial.begin(), therefore it shall create the event task",
                "214": "        _createEventTask(this); // Create event task",
                "302": "                    if(uart->_onReceiveCB && uart->available() > 0) uart->_onReceiveCB();   // forces User Callback too"
            },
            "comment_modified_diff": {}
        },
        {
            "commit": "6f7a1ca76ada4d705d79ce863450c91349327a79",
            "timestamp": "2023-10-05T14:54:25+03:00",
            "author": "Me No Dev",
            "commit_message": "ESP-IDF v5.1 (#7733)\n\n* Initial changes to compile under ESP-IDF v5.1\r\n\r\n* Initial import for ESP-IDF v5.1 libs\r\n\r\n* Update toolchain\r\n\r\n* Update esp32-hal-psram.c\r\n\r\n* Add missing LDs\r\n\r\n* Update platform.txt\r\n\r\n* Stop some CI jobs, because they will always fail\r\n\r\n* Fix examples\r\n\r\n* Update app_httpd.cpp\r\n\r\n* Update ResetReason.ino\r\n\r\n* Warnings fixes\r\n\r\n* Added the example guideline and template (#7665)\r\n\r\n* Added the example guideline and template\r\n\r\n* PR review changes with some typos and grammar fixes\r\n\r\n* Changes according to the PR review\r\n\r\n* Added ESP32-S3 link to the datasheet (#7738)\r\n\r\n* Update HiFreq_ADC.ino\r\n\r\n* Replace periph_ctrl.h use because of deprecation\r\n\r\n* Replace esp_spi_flash.h use because of deprecation\r\n\r\n* Add includes to male mDNS::enableWorkstation compile\r\n\r\n* Fix ssl_client mbedtls_pk_parse_key callback\r\n\r\n* Update temperature sensor driver\r\n\r\n* Allow sketch_utils to compile with arduino-cli\r\n\r\n* Run CI with arduino-cli\r\n\r\n* Fix arduino-cli CI build on Windows\r\n\r\n* Refactor platform.txt to not use components installed through the board manager when running from git\r\n\r\n* Initial Peripheral Manager Implementation\r\n\r\n* Update SigmaDelta driver to use the new ESP-IDF driver API\r\n\r\n* Small improvements to peripheral manager and SigmaDelta\r\n\r\n* Remove deleted function from SigmaDelta header\r\n\r\n* Update DAC driver to use the new ESP-IDF driver API\r\n\r\n* Adds softAp(String) to make it compatible with ESP8266 (#7801)\r\n\r\n* Fix commentary (#7800)\r\n\r\nMinor fix based on observation done in https://github.com/espressif/arduino-esp32/issues/7795#issuecomment-1416868611\r\n\r\n* add adafruit new board feather esp32s2 reserve tft (#7794)\r\n\r\n* bugfix: add <stdint.h> for uint8_t to avoid compilation failure (GCC 11.2.0) (#7744)\r\n\r\n* Adding 3rd party boards for VALTRACK-V4-VTS-ESP32-C3 & VALTRACK-V4-MFW-ESP32-C3 (#7735)\r\n\r\n* Added VALTRACK-V4-VTS-ESP32-C3 board definition\r\n\r\nCreated pins_arduino.h & made changes to boards.txt with necessary changes\r\n\r\n* Modified the URL\r\n\r\n* Renamed json\r\n\r\n* renamed all auRL\r\n\r\n* Adding VALTRACK-V4 series board definitions\r\n\r\nAdded VALTRACK-V4-VTS-ESP32C3 & VALTRACK-V4-MFW-ESP32-C3 board variants\r\n\r\n* Adding VALTRACK-V4 series board definitions\r\n\r\nAdded VALTRACK-V4-VTS-ESP32C3 & VALTRACK-V4-MFW-ESP32-C3 board variants\r\n\r\n* Reverted package_esp32_index.template.json\r\n\r\nrestored package_esp32_index.template.json from edits\r\n\r\n* Reverted package_esp32_index.template.json\r\n\r\nAdded new line to package_esp32_index.template.json\r\n\r\n* Update Platformio CI (#7725)\r\n\r\n* WiFiClient example fix (#7711)\r\n\r\n* Modified WiFiClient example to use thingspeak instead of non-functionig sparkfun\r\n\r\n* Moved instructions to README\r\n\r\n* Fixed spelling\r\n\r\n* Added link to S3 datasheet\r\n\r\n---------\r\n\r\nCo-authored-by: Jan Proch\u00e1zka <90197375+P-R-O-C-H-Y@users.noreply.github.com>\r\n\r\n* Mirror update from Heltec repository (#7709)\r\n\r\nHeltec updated the I2C pins in https://github.com/Heltec-Aaron-Lee/WiFi_Kit_series/commit/b10f4bf85d13fd01be80dcdb0eb59e6a8c8ba19a\r\n\r\n* Fixes BLE data printing (#7699)\r\n\r\n* Fixes BLE data printing\r\n\r\nBLE data has no '\\0' terminator, therefore it can't be printed as a regular C string.\r\nThis fix just prints the BLE data based on its length.\r\n\r\n* Simplify printing to a single call\r\n\r\n* split menu options + lora_32_V3 fix (#7697)\r\n\r\n* Change header gaurd name (#7696)\r\n\r\n* Fix Name (#7691)\r\n\r\nWrong name in definitions.\r\n\r\n* Fix error in WiFiClient.cpp where the connect function fails for timeouts below 1 second (#7686)\r\n\r\n* Update WiFiClient.cpp\r\n\r\nThis change will allow specifying connect timeouts below 1 second. Without this change, if connect timeouts under 1 second are given, the connect defaults to 0ms and fails. \r\nThis will also allow timeouts in fractions of seconds, e.g. 1500ms. Without this change, connect timeouts are truncated to full second increments.\r\n\r\n* Make parameter timeout_ms clear\r\n\r\n* Change connection timeout_ms name for clarity\r\n\r\n---------\r\n\r\nCo-authored-by: Rodrigo Garcia <rodrigo.garcia@espressif.com>\r\n\r\n* fixed the function header (#7674)\r\n\r\n* fixed the function header\r\n\r\n* fixed function name and paramaters\r\n\r\n---------\r\n\r\nCo-authored-by: Jan Procha\u0301zka <90197375+P-R-O-C-H-Y@users.noreply.github.com>\r\n\r\n* Ticker fix solving #6155 (#7664)\r\n\r\n* Wrapped Ticker functions with #pragma disabling -Wcast-function-type\r\n\r\n* Revert \"Wrapped Ticker functions with #pragma disabling -Wcast-function-type\"\r\n\r\nThis reverts commit 160be7e67a10d01b6e44c4bf2521c0ccd6348976.\r\n\r\n* Fixed Ticker example\r\n\r\n* Modified Ticker example\r\n\r\n* Fixed LED_BUILTIN err for ESP32\r\n\r\n---------\r\n\r\nCo-authored-by: Jan Proch\u00e1zka <90197375+P-R-O-C-H-Y@users.noreply.github.com>\r\n\r\n* setPins fix ESP32 \"specified pins are not supported by this chip.\" (#7646)\r\n\r\n[ESP32: SDMMCFS::begin hardcodes the usage of slot 1, only check if the pins match slot 1 pins.]\r\n\r\nsetPins() was testing pins D1, D2 and D3 all against D1 ... fine in 1 pin mode when all are -1 not so much if you're trying to get 4 pin mode working.\r\nI now see this function doesn't really do anything on the ESP32...accept now correctly checks that you are trying to use the slot 1 pins.\r\n\r\nCo-authored-by: Jan Proch\u00e1zka <90197375+P-R-O-C-H-Y@users.noreply.github.com>\r\n\r\n* Allow passing IP as connect method parameter in WiFiClientSecure and skip unnecessary host-ip conversions (#7643)\r\n\r\n* Add LED_BUILTIN* definitions and initialization for LEDs to stop them floating. (#7636)\r\n\r\nCo-authored-by: Rodrigo Garcia <rodrigo.garcia@espressif.com>\r\n\r\n* Expand path to tinuf2 image when checking existence in platformio-build.py (#7631)\r\n\r\n* Expand path to tinuf2 image when checking existence\r\n\r\n* More isFiles fixed\r\n\r\n* Remove (useless) trailing semicolon from Print.cpp (#7622)\r\n\r\n* ADD: New variant Edgebox-ESP-100 (#7771)\r\n\r\n* ADD: New variant Edgebox-ESP-100\r\n\r\n* FIX: Edgebox-ESP-100 Board.txt usb mode option change back to default value as ESP32S3\r\n\r\n* Add Crabik Slot ESP32-S3 board (#7790)\r\n\r\n* Added Crabik Slot ESP32-S3\r\n\r\n* Adding CPU frequency settings and removing excess from partition scheme settings\r\n\r\n* new variant LilyGO T-Display-S3 (#7763)\r\n\r\n* new variant LilyGO T-Display-S3\r\n\r\nhttps://github.com/Xinyuan-LilyGO/T-Display-S3\r\n\r\n* Add boards.txt definition\r\n\r\n---------\r\n\r\nCo-authored-by: Me No Dev <me-no-dev@users.noreply.github.com>\r\n\r\n* Update get.py to support Apple ARM64\r\n\r\n* Update package_esp32_index.template.json\r\n\r\n* WString Return bool (#7774)\r\n\r\n* Add Roboheart Hercules development board to the esp32-core (#7672)\r\n\r\n* added Roboheart Hercules pin definitions and board.txt entries\r\n\r\n* added package_roboheat.json for prototyping\r\n\r\n* Roboheart Hercules pins\r\n\r\n* Updated the pins\r\n\r\n* Delete package_roboheart.json\r\n\r\n* Requested changes\r\n\r\n---------\r\n\r\nCo-authored-by: renebohne <rene.bohne@gmail.com>\r\n\r\n* Reword \"ESP-IDF as Component\" (#7812)\r\n\r\nI think \"Arduino as an ESP-IDF component\" or just \"As ESP-IDF component\" instead of  \"ESP-IDF as Component\" is more correct way to name the link.\r\n\r\n1. \"ESP-IDF as Component\" would imply that ESP-IDF is some sort of library for Arduino, which is (IMO) misleading, because it's true the other way around.\r\n2. It's written as \"Arduino as an ESP-IDF component\" on the webpage it points to as well.\r\n\r\n- Also I removed the capitalization from \"Component\" as I have not found a reason why is it capitalized.\r\n\r\n* add new board Adafruit Feather ESP32-S3 Reverse TFT (#7811)\r\n\r\n* Multi threading examples (tasks, queues, semaphores, mutexes) (#7660)\r\n\r\n* Moved and renamed example ESP32/FreeRTOS to MultiThreading/BasicMultiThreading\r\n\r\n* Added dummy files\r\n\r\n* Modified original example\r\n\r\n* Fixed BasicMultiThreading.ino\r\n\r\n* Added Example demonstrating use of queues\r\n\r\n* Extended info in BasicMultiThreading\r\n\r\n* Renamed Queues to singular Queue\r\n\r\n* Added Mutex example\r\n\r\n* Added Semaphore example\r\n\r\n* Moved info from example to README\r\n\r\n* Moved doc from Mutex to README\r\n\r\n* Added Queue README\r\n\r\n* Removed unecesary text\r\n\r\n* Fixed grammar\r\n\r\n* Increased stack size for Sempahore example\r\n\r\n* Added headers into .ino files\r\n\r\n* Added word Example at the end of title in README\r\n\r\n* removed unused line\r\n\r\n* Added forgotten README\r\n\r\n* Modified BasicMultiThreading example\r\n\r\n* Added missing S3 entry in README\r\n\r\n* moved location\r\n\r\n* Update ESP-IDF libs\r\n\r\n* Update CMakeLists.txt\r\n\r\n* Update esptool to v4.4\r\n\r\n* Add function timerAttachInterruptFlag (#7809)\r\n\r\n* Update esptool to v4.5\r\n\r\n* ADC refactoring (#7827)\r\n\r\n* Adc refactored + periman implementation\r\n\r\nPeripheral manager still needs to be checked if the implementation is right.\r\n\r\n* switched to working solution for milivolts read\r\n\r\n* Periman detachbus fix\r\n\r\n* coding style\r\n\r\n* fix CI warnings\r\n\r\n* fix FreeRTOS example\r\n\r\n* Update ETH.cpp\r\n\r\n* Update FunctionalInterruptStruct.ino\r\n\r\n* Update package_esp32_index.template.json\r\n\r\n* Update package_esp32_index.template.json\r\n\r\n* Fixes for the latest IDF v5.1\r\n\r\n* update esp-idf libs and toolchain\r\n\r\n* Turn OFF auto crystal frequency for ESP32 (needed by TWAI)\r\n\r\n* Update examples\r\n\r\n* Switch build to mostly use flags from files\r\n\r\nIncludes can not be done this way\r\n\r\n* Reorganize flag files\r\n\r\n* Optimize chip build flags further\r\n\r\n* Revert defines from file. MBEDTLS_CONFIG_FILE does not properly expand\r\n\r\n* Add support for includes and defines from file\r\n\r\n* Replace old sdk path references in platform.txt\r\n\r\n* use gcc-ar (#8013)\r\n\r\n* Makes F_CPU generic for all SoC (#8007)\r\n\r\nBased on CONFIG_ESP_DEFAULT_CPU_FREQ_MHZ that is correctly defined in the sdkconfig file for each SoC.\r\n\r\n* TIMER refactoring (#7904)\r\n\r\n* refactor using GPtimer\r\n\r\n* Updated timer HW test\r\n\r\n* fix examples\r\n\r\n* Add v2.0.7 in issue template (#7871)\r\n\r\n* refactor using GPtimer\r\n\r\n* Updated timer HW test\r\n\r\n* fix examples\r\n\r\n* Revert \"Add v2.0.7 in issue template (#7871)\"\r\n\r\nThis reverts commit fcc3b17d62ff57861f8913ca1f142fd5163b7457.\r\n\r\n* Update upload-artifact to v3 in HW CI\r\n\r\n* Revert \"Update upload-artifact to v3 in HW CI\"\r\n\r\nThis reverts commit 1ba228071718ba37c4e26d98db22f77b2a7364a6.\r\n\r\n* replace resolution with frequency\r\n\r\n* remove count_down option\r\n\r\n* countup removed from examples + header\r\n\r\n* Refactored timer object\r\n\r\n* code cleanup + examples and tests fixes\r\n\r\n* TimerAlarm fix\r\n\r\n---------\r\n\r\nCo-authored-by: Vojt\u011bch Barto\u0161ka <76958047+VojtechBartoska@users.noreply.github.com>\r\n\r\n* [Docs] ADC and Timer API Update (+some docs fixes) (#7906)\r\n\r\n* updated docs\r\n\r\n* remove hall sensor docs\r\n\r\nRemoved Hall sensor documentation as its no longer supported in IDF-5\r\n\r\n* Fixed ESPNow examples location in docs\r\n\r\n* Last timer refactored API + gpio small fix\r\n\r\n* AlarmWrite fix\r\n\r\n* Fixes APLL/PLL with RTC Frequency (#8025)\r\n\r\nlog_d() was displaying APLL for any SoC, but S3 and C3 has not such option, causing compilation errors.\r\n\r\n* Update IDF libs and fix OPI PSRAM on S3\r\n\r\n* Add setMode function HardwareSerial.c to set the esp32 uart mode for use with RS485 auto RTS (#7935)\r\n\r\n* Added setMode function to set the esp32 uart mode\r\n\r\nUsed to set the esp32 uart mode for use with RS485 Half Duplex and the auto RTS pin mode. This will set/clear the RTS pin output to control the RE/DE pin on most RS485 chips.\r\n\r\n* Add Success (bool) return in some functions\r\n\r\n* Add Success (bool) return code to some functions\r\n\r\n* Add Success (bool) return to some functions\r\n\r\n* Add Success (bool) return to some functions\r\n\r\n* Fix uartSetRxTimeout return type\r\n\r\n---------\r\n\r\nCo-authored-by: Rodrigo Garcia <rodrigo.garcia@espressif.com>\r\n\r\n* Add support for esp-elf-gdb\r\n\r\n* WFG Crashfix (#8044)\r\n\r\n* Update component libs\r\n\r\n* IDF release/v5.1 (#8061)\r\n\r\n* IDF release/v5.1 bb9200acec\r\n\r\n* Update Esp.cpp\r\n\r\n* IDF release/v5.1 420ebd208a\r\n\r\n* Update esp32-hal-psram.c\r\n\r\n* Switch SDK to be an external package\r\n\r\n* fix path (#8096)\r\n\r\n* Makes UART work at any APB Frequency (#8097)\r\n\r\nFixes HardwareSerial to work with IDF 5.1 on any CPU/APB Frequency (240MHz to 10MHZ), including user created low power modes.\r\n\r\n* Add required callbacks for TinyUSB DFU\r\n\r\n* Update version to 3.0.0\r\n\r\n* Add ESP.getCoreVersion() and update ESP.getChipModel()\r\n\r\n* Update timer hal for the latest 5.1\r\n\r\n* Use separate RX and TX buffer sizes in HTTP client\r\n\r\noptimizes download by allowing up to 4K packets to be received\r\n\r\n* Rename clock tree enum name in latest 5.1\r\n\r\n* ESP32-H4 support was removed in ESP-IDF v5.1\r\n\r\n* IDF release/v5.1 2004bf4e11 (#8165)\r\n\r\n* Deinit previous bus first (#8180)\r\n\r\n* TIMER - add timer_started flag, fix timerEnd() + timer HW test (#8135)\r\n\r\n* Add timer_started flag and stop before disable\r\n\r\n* Fix timer HW test\r\n\r\n* TOUCH - Peripheral manager implementation (#8129)\r\n\r\n* Touch periman implemented\r\n\r\n* Deinit previous bus first\r\n\r\n* LEDC Refactoring - Peripheral manager implemented (#8126)\r\n\r\n* LEDC periman implementation\r\n\r\n* Fix examples\r\n\r\n* Rework tone\r\n\r\n* Update ledc docs\r\n\r\n* fix missing bracket\r\n\r\n* Update analog funtions esp32-hal.h\r\n\r\n* Update CameraWebServer example\r\n\r\n* Fix HiFreq_ADC example\r\n\r\n* minor fixes - typos\r\n\r\n* Avoid calling tone/notone when tone already runs on dif. pin\r\n\r\n* Remove unused channels_resolution\r\n\r\n* GPIO - Peripheral manager implementation (#8179)\r\n\r\n* periman-implementation\r\n\r\n* fix RGB_BUILTIN and remove space\r\n\r\n* Enforces more consistency into Peripheral Manager (#8188)\r\n\r\n* Avoid log_i() message the first time a bus is assigned\r\n\r\n* Prevent operation with ESP32_BUS_TYPE_INIT\r\n\r\n* keeps coding style\r\n\r\n* do not print messages on INIT bus type\r\n\r\n* [Arduino Core 3.0.0] RMT IDF5.1 Refactoring (#7994)\r\n\r\n* RMT IDF5.1 refactoring\r\n\r\n* Fixes initial value setting\r\n\r\n* removed rmtRead() with user callback\r\n\r\n* simplify/remove Read data structure\r\n\r\n* Deep API simplification\r\n\r\n* fixes the examples\r\n\r\n* fix rmt.h\r\n\r\n* adds support to APB different frequencies\r\n\r\n* fixes CI and not defined RGB_BUILTIN\r\n\r\n* new RMT API and examples\r\n\r\n* fixing commentaties\r\n\r\n* Update esp32-hal-rgb-led.c\r\n\r\n* changes Filter API\r\n\r\n* Fixes example with Filter API\r\n\r\n* Update PlatformIO scripts for the upcoming 3.0 core (#8183)\r\n\r\n* Update PlatformIO scripts for the upcoming 3.0 core\r\n\r\n* Dynamically select proper framework-arduinoespressif32-libs package\r\n\r\nWith this change the dev-platform will be dynamically configured to\r\npull the latest .zip package with precompiled libraries from extracted from\r\npackage_esp32_index.template.json\r\n\r\n* free memory on detach (#8264)\r\n\r\n* SPI - Peripheral manager implementation  (#8255)\r\n\r\n* spi periman implementation\r\n\r\n* fix header file\r\n\r\n* remove unused struct\r\n\r\n* fix missing braces\r\n\r\n* Update esp32-hal-rmt.c (#8216)\r\n\r\nOptimizing Peripheral Manager Test\r\n\r\n* I2C - Peripheral manager implementation (#8220)\r\n\r\n* i2c-master periman initial commit\r\n\r\n* i2c-master make detachbus static + comment remove\r\n\r\n* i2c-slave periman implementation\r\n\r\n* SetPinBus to INIT on i2cDeinits\r\n\r\n* Fix slave pins deinit\r\n\r\n* remove dbg logs\r\n\r\n* set ret to ESP_FAIL instead of returning\r\n\r\n* Fix warnings in hal-spi caused by pariman transition\r\n\r\n* Update esptool.py to version 4.6\r\n\r\n* Add platform support for ESP_SR\r\n\r\n* Add USB Type and valid pin check to periman\r\n\r\n* replace bus with spi->num+1 (#8279)\r\n\r\n* Remove default pins from SPI HAL\r\n\r\n* Add commented out handlers for esptool.js in TinyUSB CDC\r\n\r\nFor future use\r\n\r\n* Add build defines for host os and fqbn (for debug purposes)\r\n\r\n* Provide proper memory caps total size\r\n\r\n* Update Esp.cpp\r\n\r\n* SDMMC - Peripheral manager implementation (#8289)\r\n\r\n* sdmmc periman implemented\r\n\r\n* save pins when SOC_SDMMC_USE_IOMUX\r\n\r\n* IDF release/v5.1 4bc762621d (#8292)\r\n\r\n* Adds missing pinMode (#8312)\r\n\r\n* Adds missing pinMode\r\n\r\nThe example code lacks a pinMode() to initialize the GPIO 0 (button). In Arduino Core 3.0.0, it prints an error message when trying to read a not initialized GPIO.\r\n\r\n* Update KeyboardLogout.ino\r\n\r\nAdds <buttonPin> to keep code standard\r\n\r\n* Update KeyboardReprogram.ino\r\n\r\nAdds <buttonPin> to keep code standard\r\n\r\n* LEDC Fade implementation (#8338)\r\n\r\n* fade API + pointer fixes\r\n\r\n* Add fade api\r\n\r\n* Add fade example\r\n\r\n* update ledc docs\r\n\r\n* remove unused variables\r\n\r\n* fix path to example\r\n\r\n* Adds USB to Peripheral Manager - Arduino Core 3.0.0 (#8335)\r\n\r\n* ETHERNET - Peripheral manager implementation (#8297)\r\n\r\n* Peripheral manager implemented\r\n\r\n* remove unused variable\r\n\r\n* Add all RMII pins\r\n\r\n* fix typo\r\n\r\n* Adds HardwareSerial to Peripheral Manager Arduino 3.0.0 (#8328)\r\n\r\n* Do not limit ETHERNET in periman to only ESP32. SPI is also an option\r\n\r\n* Initial support for ESP32-C6 (#8337)\r\n\r\n* Add checks for SOC defines (#8351)\r\n\r\n* Add checks for SOC defines\r\n\r\n* Add SoC checks to BLE library\r\n\r\n* fix i2c compilation error\r\n\r\n* fix wrong placement of include\r\n\r\n* add check to SPI library\r\n\r\n* add check to USB library\r\n\r\n* add checks to Wire library\r\n\r\n* Feature/esp32h2 support (#8373)\r\n\r\n* Initial support for ESP32H2\r\n\r\n* Additional changes for ESP32H2\r\n\r\n* Update libs for ESP32H2\r\n\r\n* Fix flashing on ESP32-H2\r\n\r\n* Fix GPIO Configs for ESP32-C6 and ESP32-H2\r\n\r\n* Update Timer test sketch\r\n\r\n* Fix upload flash parameters\r\n\r\n* Use ets_write_char_uart instead of ets_printf in log_printfv\r\n\r\n* Print full chip report when log level is sufficient (#8282)\r\n\r\n* ESP32-C3 does not have ets_write_char_uart\r\n\r\n* Fix BLE gap event name\r\n\r\n* HW Testing - Pytest update (#8389)\r\n\r\n* update tests requirements\r\n\r\n* remove already handled components\r\n\r\n* Update version of pytest\r\n\r\n* Add missing ESP32-H2 to hil.yml\r\n\r\n* Updated FreeRTOS names (#8418)\r\n\r\n* HW Testing -  ESP32-C6 + ESP32-H2 fixes (#8404)\r\n\r\n* add C6/H2 to tests cfg.json\r\n\r\n* remove ,\r\n\r\n* workflow runs-on runner by matrix\r\n\r\n* Add need for arduino tag to select runner\r\n\r\n* Add cryptography to requirements.txt\r\n\r\n* Removed duplicate TX1 define for H2 (#8402)\r\n\r\n* Fix broken examples\r\n\r\n* Fixes RMT filter & idle timing and setup (#8359)\r\n\r\n* Fixes Filter and Idle parameter to uint32\r\n\r\n* Fixes Filter and Idle setup\r\n\r\n* Fixes it to 5.1Libs branch\r\n\r\n* fix RMT CLK source and Filter API\r\n\r\n* fixes missing ;\r\n\r\n* fixes missing ;\r\n\r\n* fixes RMT example\r\n\r\n* IDF release/v5.1 a7b62bbcaf (#8438)\r\n\r\n* Add workflow to build executables from python scripts (#8290)\r\n\r\n* Add workflow to build executables from python scripts\r\n\r\n* Push binary to tools\r\n\r\n* Enable executable signing on Windows\r\n\r\n* Update get.py\r\n\r\n* Push binary to tools\r\n\r\n* Try with multiple files\r\n\r\n* Try more actions\r\n\r\n* Try powershell\r\n\r\n* Restore tools so they do not get rebuilt\r\n\r\n* Finalize scripts\r\n\r\n* Push binary to tools\r\n\r\n* App rollback should be after PSRAM is initialized\r\n\r\n* Correcting RX1 to GPIO4 and TX1 to GPIO5 to be consistent with documentation. Previous pin use works but is inconsistent with C6 docs.\r\n\r\n* Fixes Memory Leak (#8486)\r\n\r\n* fixes preprocessor test (#8485)\r\n\r\n* fixes preprocessor test\r\n\r\nWhen using `#define USE_SOFT_AP` \r\nChange\r\n`&& not USE_SOFT_AP` ==> `&& !defined(USE_SOFT_AP)`\r\n\r\n* Adds any BLE capable device in WiFiProv.ino\r\n\r\nRemoving ESP32 restriction for BLE Provisioning.\r\n\r\n* fix flash mode read out for C6\r\n\r\n* Add option for custom partitions without restrictions\r\n\r\n* SD_MMC update (#8298)\r\n\r\n* Updated SD_MMC lib and examples\r\n\r\n* Removed getter implementation and commented usage in examples\r\n\r\n* squashed updates\r\n\r\n* IDF release/v5.1 f0437b945f (#8599)\r\n\r\n* Update package_esp32_index.template.json\r\n\r\n* Fix printf format build error in BTAdvertisedDeviceSet.cpp\r\n\r\n---------\r\n\r\nCo-authored-by: Pedro Minatel <pedro.minatel@espressif.com>\r\nCo-authored-by: Rodrigo Garcia <rodrigo.garcia@espressif.com>\r\nCo-authored-by: Ha Thach <thach@tinyusb.org>\r\nCo-authored-by: Martin Turski <quiret@vfemail.net>\r\nCo-authored-by: raviypujar <raviypujar@gmail.com>\r\nCo-authored-by: Jason2866 <24528715+Jason2866@users.noreply.github.com>\r\nCo-authored-by: Tom\u00e1\u0161 Piln\u00fd <34927466+PilnyTomas@users.noreply.github.com>\r\nCo-authored-by: Jan Proch\u00e1zka <90197375+P-R-O-C-H-Y@users.noreply.github.com>\r\nCo-authored-by: Daniel Berlin <dberlin@dberlin.org>\r\nCo-authored-by: Nima Askari (\u0646\u06cc\u0645\u0627 \u0639\u0633\u06a9\u0631\u06cc) <nimaltd@yahoo.com>\r\nCo-authored-by: rtpmsys <106180646+rtpmsys@users.noreply.github.com>\r\nCo-authored-by: bytiful <55647551+bytiful@users.noreply.github.com>\r\nCo-authored-by: tmfarrington <tmfarrington@users.noreply.github.com>\r\nCo-authored-by: Krzysiek S <chris.streh@gmail.com>\r\nCo-authored-by: surt <carl.olsson@gmail.com>\r\nCo-authored-by: Max Scheffler <max.scheffler@pm.me>\r\nCo-authored-by: Clemens Kirchgatterer <clemens@1541.org>\r\nCo-authored-by: Peter Pan's Techland <twinkle-pirate@hotmail.com>\r\nCo-authored-by: Roman <programmeofficemilkyway@gmail.com>\r\nCo-authored-by: Eistee <Eistee82@users.noreply.github.com>\r\nCo-authored-by: David McCurley <44048235+mrengineer7777@users.noreply.github.com>\r\nCo-authored-by: Gaya3N25 <30388176+Gaya3N25@users.noreply.github.com>\r\nCo-authored-by: renebohne <rene.bohne@gmail.com>\r\nCo-authored-by: Oliv\u00e9r Rem\u00e9ny <25034625+remenyo@users.noreply.github.com>\r\nCo-authored-by: davidk88 <david.kotar@gmail.com>\r\nCo-authored-by: Vojt\u011bch Barto\u0161ka <76958047+VojtechBartoska@users.noreply.github.com>\r\nCo-authored-by: James Armstrong <jamesarmstrong3@me.com>\r\nCo-authored-by: Valerii Koval <valeros@users.noreply.github.com>\r\nCo-authored-by: Peter G. Jensen <root@petergjoel.dk>",
            "additions": 65,
            "deletions": 52,
            "change_type": "MODIFY",
            "diff": "@@ -28,6 +28,10 @@\n #define SOC_RX0 44\n #elif CONFIG_IDF_TARGET_ESP32C3\n #define SOC_RX0 20\n+#elif CONFIG_IDF_TARGET_ESP32C6\n+#define SOC_RX0 17\n+#elif CONFIG_IDF_TARGET_ESP32H2\n+#define SOC_RX0 23\n #endif\n #endif\n \n@@ -38,6 +42,10 @@\n #define SOC_TX0 43\n #elif CONFIG_IDF_TARGET_ESP32C3\n #define SOC_TX0 21\n+#elif CONFIG_IDF_TARGET_ESP32C6\n+#define SOC_TX0 16\n+#elif CONFIG_IDF_TARGET_ESP32H2\n+#define SOC_TX0 24\n #endif\n #endif\n \n@@ -55,6 +63,10 @@ void serialEvent(void) {}\n #define RX1 18\n #elif CONFIG_IDF_TARGET_ESP32S3\n #define RX1 15\n+#elif CONFIG_IDF_TARGET_ESP32C6\n+#define RX1 4\n+#elif CONFIG_IDF_TARGET_ESP32H2\n+#define RX1 0\n #endif\n #endif\n \n@@ -67,6 +79,10 @@ void serialEvent(void) {}\n #define TX1 19\n #elif CONFIG_IDF_TARGET_ESP32S3\n #define TX1 16\n+#elif CONFIG_IDF_TARGET_ESP32C6\n+#define TX1 5\n+#elif CONFIG_IDF_TARGET_ESP32H2\n+#define TX1 1\n #endif\n #endif\n \n@@ -79,7 +95,7 @@ void serialEvent1(void) {}\n #if CONFIG_IDF_TARGET_ESP32\n #define RX2 16\n #elif CONFIG_IDF_TARGET_ESP32S3\n-#define RX2 19 \n+#define RX2 19\n #endif\n #endif\n \n@@ -128,16 +144,16 @@ void serialEventRun(void)\n #define HSERIAL_MUTEX_LOCK()    do {} while (xSemaphoreTake(_lock, portMAX_DELAY) != pdPASS)\n #define HSERIAL_MUTEX_UNLOCK()  xSemaphoreGive(_lock)\n #else\n-#define HSERIAL_MUTEX_LOCK()    \n-#define HSERIAL_MUTEX_UNLOCK()  \n+#define HSERIAL_MUTEX_LOCK()\n+#define HSERIAL_MUTEX_UNLOCK()\n #endif\n \n-HardwareSerial::HardwareSerial(int uart_nr) : \n-_uart_nr(uart_nr), \n+HardwareSerial::HardwareSerial(int uart_nr) :\n+_uart_nr(uart_nr),\n _uart(NULL),\n _rxBufferSize(256),\n-_txBufferSize(0), \n-_onReceiveCB(NULL), \n+_txBufferSize(0),\n+_onReceiveCB(NULL),\n _onReceiveErrorCB(NULL),\n _onReceiveTimeout(false),\n _rxTimeout(2),\n@@ -146,10 +162,6 @@ _eventTask(NULL)\n #if !CONFIG_DISABLE_HAL_LOCKS\n     ,_lock(NULL)\n #endif\n-,_rxPin(-1) \n-,_txPin(-1)\n-,_ctsPin(-1)\n-,_rtsPin(-1)\n {\n #if !CONFIG_DISABLE_HAL_LOCKS\n     if(_lock == NULL){\n@@ -190,10 +202,10 @@ void HardwareSerial::_destroyEventTask(void)\n     }\n }\n \n-void HardwareSerial::onReceiveError(OnReceiveErrorCb function) \n+void HardwareSerial::onReceiveError(OnReceiveErrorCb function)\n {\n     HSERIAL_MUTEX_LOCK();\n-    // function may be NULL to cancel onReceive() from its respective task \n+    // function may be NULL to cancel onReceive() from its respective task\n     _onReceiveErrorCB = function;\n     // this can be called after Serial.begin(), therefore it shall create the event task\n     if (function != NULL && _uart != NULL && _eventTask == NULL) {\n@@ -205,7 +217,7 @@ void HardwareSerial::onReceiveError(OnReceiveErrorCb function)\n void HardwareSerial::onReceive(OnReceiveCb function, bool onlyOnTimeout)\n {\n     HSERIAL_MUTEX_LOCK();\n-    // function may be NULL to cancel onReceive() from its respective task \n+    // function may be NULL to cancel onReceive() from its respective task\n     _onReceiveCB = function;\n \n     // setting the callback to NULL will just disable it\n@@ -233,7 +245,7 @@ void HardwareSerial::onReceive(OnReceiveCb function, bool onlyOnTimeout)\n // A low value of FIFO Full bytes will consume more CPU time within the ISR\n // A high value of FIFO Full bytes will make the application wait longer to have byte available for the Stkech in a streaming scenario\n // Both RX FIFO Full and RX Timeout may affect when onReceive() will be called\n-void HardwareSerial::setRxFIFOFull(uint8_t fifoBytes)\n+bool HardwareSerial::setRxFIFOFull(uint8_t fifoBytes)\n {\n     HSERIAL_MUTEX_LOCK();\n     // in case that onReceive() shall work only with RX Timeout, FIFO shall be high\n@@ -242,32 +254,34 @@ void HardwareSerial::setRxFIFOFull(uint8_t fifoBytes)\n         fifoBytes = 120;\n         log_w(\"OnReceive is set to Timeout only, thus FIFO Full is now 120 bytes.\");\n     }\n-    uartSetRxFIFOFull(_uart, fifoBytes); // Set new timeout\n+    bool retCode = uartSetRxFIFOFull(_uart, fifoBytes); // Set new timeout\n     if (fifoBytes > 0 && fifoBytes < SOC_UART_FIFO_LEN - 1) _rxFIFOFull = fifoBytes;\n     HSERIAL_MUTEX_UNLOCK();\n+    return retCode;\n }\n \n // timout is calculates in time to receive UART symbols at the UART baudrate.\n // the estimation is about 11 bits per symbol (SERIAL_8N1)\n-void HardwareSerial::setRxTimeout(uint8_t symbols_timeout)\n+bool HardwareSerial::setRxTimeout(uint8_t symbols_timeout)\n {\n     HSERIAL_MUTEX_LOCK();\n-    \n+\n     // Zero disables timeout, thus, onReceive callback will only be called when RX FIFO reaches 120 bytes\n-    // Any non-zero value will activate onReceive callback based on UART baudrate with about 11 bits per symbol \n-    _rxTimeout = symbols_timeout;   \n-    if (!symbols_timeout) _onReceiveTimeout = false;  // only when RX timeout is disabled, we also must disable this flag \n+    // Any non-zero value will activate onReceive callback based on UART baudrate with about 11 bits per symbol\n+    _rxTimeout = symbols_timeout;\n+    if (!symbols_timeout) _onReceiveTimeout = false;  // only when RX timeout is disabled, we also must disable this flag\n+\n+    bool retCode = uartSetRxTimeout(_uart, _rxTimeout); // Set new timeout\n \n-    uartSetRxTimeout(_uart, _rxTimeout); // Set new timeout\n-    \n     HSERIAL_MUTEX_UNLOCK();\n+    return retCode;\n }\n \n void HardwareSerial::eventQueueReset()\n {\n     QueueHandle_t uartEventQueue = NULL;\n     if (_uart == NULL) {\n-\t    return;\n+      return;\n     }\n     uartGetEventQueue(_uart, &uartEventQueue);\n     if (uartEventQueue != NULL) {\n@@ -284,12 +298,12 @@ void HardwareSerial::_uartEventTask(void *args)\n     if (uartEventQueue != NULL) {\n         for(;;) {\n             //Waiting for UART event.\n-            if(xQueueReceive(uartEventQueue, (void * )&event, (portTickType)portMAX_DELAY)) {\n+            if(xQueueReceive(uartEventQueue, (void * )&event, (TickType_t)portMAX_DELAY)) {\n                 hardwareSerial_error_t currentErr = UART_NO_ERROR;\n                 switch(event.type) {\n                     case UART_DATA:\n-                        if(uart->_onReceiveCB && uart->available() > 0 && \n-                            ((uart->_onReceiveTimeout && event.timeout_flag) || !uart->_onReceiveTimeout) ) \n+                        if(uart->_onReceiveCB && uart->available() > 0 &&\n+                            ((uart->_onReceiveTimeout && event.timeout_flag) || !uart->_onReceiveTimeout) )\n                                 uart->_onReceiveCB();\n                         break;\n                     case UART_FIFO_OVF:\n@@ -396,7 +410,7 @@ void HardwareSerial::begin(unsigned long baud, uint32_t config, int8_t rxPin, in\n         }\n     }\n     // create a task to deal with Serial Events when, for example, calling begin() twice to change the baudrate,\n-    // or when setting the callback before calling begin() \n+    // or when setting the callback before calling begin()\n     if (_uart != NULL && (_onReceiveCB != NULL || _onReceiveErrorCB != NULL) && _eventTask == NULL) {\n         _createEventTask(this);\n     }\n@@ -404,10 +418,10 @@ void HardwareSerial::begin(unsigned long baud, uint32_t config, int8_t rxPin, in\n     // Set UART RX timeout\n     uartSetRxTimeout(_uart, _rxTimeout);\n \n-    // Set UART FIFO Full depending on the baud rate. \n+    // Set UART FIFO Full depending on the baud rate.\n     // Lower baud rates will force to emulate byte-by-byte reading\n     // Higher baud rates will keep IDF default of 120 bytes for FIFO FULL Interrupt\n-    // It can also be changed by the application at any time \n+    // It can also be changed by the application at any time\n     if (!_rxFIFOFull) {    // it has not being changed before calling begin()\n       //  set a default FIFO Full value for the IDF driver\n       uint8_t fifoFull = 1;\n@@ -418,20 +432,17 @@ void HardwareSerial::begin(unsigned long baud, uint32_t config, int8_t rxPin, in\n       _rxFIFOFull = fifoFull;\n     }\n \n-    _rxPin = rxPin;\n-    _txPin = txPin;\n-\n     HSERIAL_MUTEX_UNLOCK();\n }\n \n void HardwareSerial::updateBaudRate(unsigned long baud)\n {\n-\tuartSetBaudRate(_uart, baud);\n+  uartSetBaudRate(_uart, baud);\n }\n \n void HardwareSerial::end(bool fullyTerminate)\n {\n-    // default Serial.end() will completely disable HardwareSerial, \n+    // default Serial.end() will completely disable HardwareSerial,\n     // including any tasks or debug message channel (log_x()) - but not for IDF log messages!\n     if(fullyTerminate) {\n         _onReceiveCB = NULL;\n@@ -439,12 +450,11 @@ void HardwareSerial::end(bool fullyTerminate)\n         if (uartGetDebug() == _uart_nr) {\n             uartSetDebug(0);\n         }\n-\n-        _rxFIFOFull = 0; \n-\n-        uartDetachPins(_uart, _rxPin, _txPin, _ctsPin, _rtsPin);\n-        _rxPin = _txPin = _ctsPin = _rtsPin = -1;\n-\n+        _rxFIFOFull = 0;\n+        uartEnd(_uart);  // fully detach all pins and delete the UART driver\n+    } else {\n+      // do not invalidate callbacks, detach pins, invalidate DBG output\n+      uart_driver_delete(_uart_nr);\n     }\n \n     uartEnd(_uart);\n@@ -532,7 +542,7 @@ size_t HardwareSerial::write(const uint8_t *buffer, size_t size)\n uint32_t  HardwareSerial::baudRate()\n \n {\n-\treturn uartGetBaudRate(_uart);\n+  return uartGetBaudRate(_uart);\n }\n HardwareSerial::operator bool() const\n {\n@@ -545,28 +555,31 @@ void HardwareSerial::setRxInvert(bool invert)\n }\n \n // negative Pin value will keep it unmodified\n-void HardwareSerial::setPins(int8_t rxPin, int8_t txPin, int8_t ctsPin, int8_t rtsPin)\n+bool HardwareSerial::setPins(int8_t rxPin, int8_t txPin, int8_t ctsPin, int8_t rtsPin)\n {\n     if(_uart == NULL) {\n         log_e(\"setPins() shall be called after begin() - nothing done\\n\");\n-        return;\n+        return false;\n     }\n \n-    // uartSetPins() checks if pins are valid for each function and for the SoC \n+    // uartSetPins() checks if pins are valid for each function and for the SoC\n     if (uartSetPins(_uart, rxPin, txPin, ctsPin, rtsPin)) {\n-        _txPin = _txPin >= 0 ? txPin : _txPin;\n-        _rxPin = _rxPin >= 0 ? rxPin : _rxPin;\n-        _rtsPin = _rtsPin >= 0 ? rtsPin : _rtsPin;\n-        _ctsPin = _ctsPin >= 0 ? ctsPin : _ctsPin;\n+        return true;\n     } else {\n-        log_e(\"Error when setting Serial port Pins. Invalid Pin.\\n\");\n+        return false;\n     }\n }\n \n // Enables or disables Hardware Flow Control using RTS and/or CTS pins (must use setAllPins() before)\n-void HardwareSerial::setHwFlowCtrlMode(uint8_t mode, uint8_t threshold)\n+bool HardwareSerial::setHwFlowCtrlMode(uint8_t mode, uint8_t threshold)\n+{\n+    return uartSetHwFlowCtrlMode(_uart, mode, threshold);\n+}\n+\n+// Sets the uart mode in the esp32 uart for use with RS485 modes (HwFlowCtrl must be disabled and RTS pin set)\n+bool HardwareSerial::setMode(uint8_t mode)\n {\n-    uartSetHwFlowCtrlMode(_uart, mode, threshold);\n+    return uartSetMode(_uart, mode);\n }\n \n size_t HardwareSerial::setRxBufferSize(size_t new_size) {\n",
            "comment_added_diff": {
                "208": "    // function may be NULL to cancel onReceive() from its respective task",
                "220": "    // function may be NULL to cancel onReceive() from its respective task",
                "257": "    bool retCode = uartSetRxFIFOFull(_uart, fifoBytes); // Set new timeout",
                "270": "    // Any non-zero value will activate onReceive callback based on UART baudrate with about 11 bits per symbol",
                "272": "    if (!symbols_timeout) _onReceiveTimeout = false;  // only when RX timeout is disabled, we also must disable this flag",
                "274": "    bool retCode = uartSetRxTimeout(_uart, _rxTimeout); // Set new timeout",
                "413": "    // or when setting the callback before calling begin()",
                "421": "    // Set UART FIFO Full depending on the baud rate.",
                "424": "    // It can also be changed by the application at any time",
                "445": "    // default Serial.end() will completely disable HardwareSerial,",
                "454": "        uartEnd(_uart);  // fully detach all pins and delete the UART driver",
                "456": "      // do not invalidate callbacks, detach pins, invalidate DBG output",
                "565": "    // uartSetPins() checks if pins are valid for each function and for the SoC",
                "579": "// Sets the uart mode in the esp32 uart for use with RS485 modes (HwFlowCtrl must be disabled and RTS pin set)"
            },
            "comment_deleted_diff": {
                "196": "    // function may be NULL to cancel onReceive() from its respective task",
                "208": "    // function may be NULL to cancel onReceive() from its respective task",
                "245": "    uartSetRxFIFOFull(_uart, fifoBytes); // Set new timeout",
                "257": "    // Any non-zero value will activate onReceive callback based on UART baudrate with about 11 bits per symbol",
                "259": "    if (!symbols_timeout) _onReceiveTimeout = false;  // only when RX timeout is disabled, we also must disable this flag",
                "261": "    uartSetRxTimeout(_uart, _rxTimeout); // Set new timeout",
                "399": "    // or when setting the callback before calling begin()",
                "407": "    // Set UART FIFO Full depending on the baud rate.",
                "410": "    // It can also be changed by the application at any time",
                "434": "    // default Serial.end() will completely disable HardwareSerial,",
                "555": "    // uartSetPins() checks if pins are valid for each function and for the SoC"
            },
            "comment_modified_diff": {
                "208": "    // function may be NULL to cancel onReceive() from its respective task",
                "257": "    // Any non-zero value will activate onReceive callback based on UART baudrate with about 11 bits per symbol"
            }
        },
        {
            "commit": "6b1933b3f29e9db14cc70bfb3bdbf52e855b4914",
            "timestamp": "2023-10-06T13:45:56+03:00",
            "author": "Rodrigo Garcia",
            "commit_message": "3.0.0 - UART Peripheral Manager + Detach UART pins on begin()/setPins() (#8719)\n\n* detach UART pins\r\n\r\n* fixes uartEnd() call",
            "additions": 28,
            "deletions": 23,
            "change_type": "MODIFY",
            "diff": "@@ -149,7 +149,7 @@ void serialEventRun(void)\n #define HSERIAL_MUTEX_UNLOCK()\n #endif\n \n-HardwareSerial::HardwareSerial(int uart_nr) :\n+HardwareSerial::HardwareSerial(uint8_t uart_nr) :\n _uart_nr(uart_nr),\n _uart(NULL),\n _rxBufferSize(256),\n@@ -173,6 +173,12 @@ _eventTask(NULL)\n         }\n     }\n #endif\n+    // sets UART0 (default console) RX/TX pins as already configured in boot\n+    if (uart_nr == 0) {\n+        setPins(SOC_RX0, SOC_TX0);\n+    }\n+    // set deinit function in the Peripheral Manager\n+    uart_init_PeriMan();\n }\n \n HardwareSerial::~HardwareSerial()\n@@ -342,8 +348,8 @@ void HardwareSerial::_uartEventTask(void *args)\n \n void HardwareSerial::begin(unsigned long baud, uint32_t config, int8_t rxPin, int8_t txPin, bool invert, unsigned long timeout_ms, uint8_t rxfifo_full_thrhd)\n {\n-    if(0 > _uart_nr || _uart_nr >= SOC_UART_NUM) {\n-        log_e(\"Serial number is invalid, please use numers from 0 to %u\", SOC_UART_NUM - 1);\n+    if(_uart_nr >= SOC_UART_NUM) {\n+        log_e(\"Serial number is invalid, please use a number from 0 to %u\", SOC_UART_NUM - 1);\n         return;\n     }\n \n@@ -357,26 +363,32 @@ void HardwareSerial::begin(unsigned long baud, uint32_t config, int8_t rxPin, in\n     HSERIAL_MUTEX_LOCK();\n     // First Time or after end() --> set default Pins\n     if (!uartIsDriverInstalled(_uart)) {\n+        // get previously used RX/TX pins, if any.\n+        int8_t _rxPin = uart_get_RxPin(_uart_nr);\n+        int8_t _txPin = uart_get_TxPin(_uart_nr);\n         switch (_uart_nr) {\n             case UART_NUM_0:\n                 if (rxPin < 0 && txPin < 0) {\n-                    rxPin = SOC_RX0;\n-                    txPin = SOC_TX0;\n+                    // do not change RX0/TX0 if it has already been set before\n+                    rxPin = _rxPin < 0 ? SOC_RX0 : _rxPin;\n+                    txPin = _txPin < 0 ? SOC_TX0 : _txPin;\n                 }\n             break;\n #if SOC_UART_NUM > 1                   // may save some flash bytes...\n             case UART_NUM_1:\n                if (rxPin < 0 && txPin < 0) {\n-                    rxPin = RX1;\n-                    txPin = TX1;\n+                    // do not change RX1/TX1 if it has already been set before\n+                    rxPin = _rxPin < 0 ? RX1 : _rxPin;\n+                    txPin = _txPin < 0 ? TX1 : _txPin;\n                 }\n             break;\n #endif\n #if SOC_UART_NUM > 2                   // may save some flash bytes...\n             case UART_NUM_2:\n                if (rxPin < 0 && txPin < 0) {\n-                    rxPin = RX2;\n-                    txPin = TX2;\n+                    // do not change RX2/TX2 if it has already been set before\n+                    rxPin = _rxPin < 0 ? RX2 : _rxPin;\n+                    txPin = _txPin < 0 ? TX2 : _txPin;\n                 }\n             break;\n #endif\n@@ -390,6 +402,7 @@ void HardwareSerial::begin(unsigned long baud, uint32_t config, int8_t rxPin, in\n     }\n \n     // IDF UART driver keeps Pin setting on restarting. Negative Pin number will keep it unmodified.\n+    // it will detach previous UART attached pins\n     _uart = uartBegin(_uart_nr, baud ? baud : 9600, config, rxPin, txPin, _rxBufferSize, _txBufferSize, invert, rxfifo_full_thrhd);\n     if (!baud) {\n         // using baud rate as zero, forces it to try to detect the current baud rate in place\n@@ -452,13 +465,13 @@ void HardwareSerial::end(bool fullyTerminate)\n             uartSetDebug(0);\n         }\n         _rxFIFOFull = 0;\n-        uartEnd(_uart);  // fully detach all pins and delete the UART driver\n+        uartEnd(_uart_nr);  // fully detach all pins and delete the UART driver\n     } else {\n       // do not invalidate callbacks, detach pins, invalidate DBG output\n       uart_driver_delete(_uart_nr);\n     }\n \n-    uartEnd(_uart);\n+    uartEnd(_uart_nr);\n     _uart = 0;\n     _destroyEventTask();\n }\n@@ -540,8 +553,8 @@ size_t HardwareSerial::write(const uint8_t *buffer, size_t size)\n     uartWriteBuf(_uart, buffer, size);\n     return size;\n }\n-uint32_t  HardwareSerial::baudRate()\n \n+uint32_t  HardwareSerial::baudRate()\n {\n   return uartGetBaudRate(_uart);\n }\n@@ -556,19 +569,11 @@ void HardwareSerial::setRxInvert(bool invert)\n }\n \n // negative Pin value will keep it unmodified\n+// can be called after or before begin()\n bool HardwareSerial::setPins(int8_t rxPin, int8_t txPin, int8_t ctsPin, int8_t rtsPin)\n {\n-    if(_uart == NULL) {\n-        log_e(\"setPins() shall be called after begin() - nothing done\\n\");\n-        return false;\n-    }\n-\n-    // uartSetPins() checks if pins are valid for each function and for the SoC\n-    if (uartSetPins(_uart, rxPin, txPin, ctsPin, rtsPin)) {\n-        return true;\n-    } else {\n-        return false;\n-    }\n+    // uartSetPins() checks if pins are valid and, if necessary, detaches the previous ones\n+    return uartSetPins(_uart_nr, rxPin, txPin, ctsPin, rtsPin);\n }\n \n // Enables or disables Hardware Flow Control using RTS and/or CTS pins (must use setAllPins() before)\n",
            "comment_added_diff": {
                "176": "    // sets UART0 (default console) RX/TX pins as already configured in boot",
                "180": "    // set deinit function in the Peripheral Manager",
                "366": "        // get previously used RX/TX pins, if any.",
                "372": "                    // do not change RX0/TX0 if it has already been set before",
                "380": "                    // do not change RX1/TX1 if it has already been set before",
                "389": "                    // do not change RX2/TX2 if it has already been set before",
                "405": "    // it will detach previous UART attached pins",
                "468": "        uartEnd(_uart_nr);  // fully detach all pins and delete the UART driver",
                "572": "// can be called after or before begin()",
                "575": "    // uartSetPins() checks if pins are valid and, if necessary, detaches the previous ones"
            },
            "comment_deleted_diff": {
                "455": "        uartEnd(_uart);  // fully detach all pins and delete the UART driver",
                "566": "    // uartSetPins() checks if pins are valid for each function and for the SoC"
            },
            "comment_modified_diff": {}
        },
        {
            "commit": "b98b52a1a8a7fe32dd4b2e176cfe77212e74e153",
            "timestamp": "2023-10-06T13:46:40+03:00",
            "author": "Rodrigo Garcia",
            "commit_message": "Reorganize RS485 Mode - FlowCtrl (#8718)",
            "additions": 10,
            "deletions": 4,
            "change_type": "MODIFY",
            "diff": "@@ -576,14 +576,20 @@ bool HardwareSerial::setPins(int8_t rxPin, int8_t txPin, int8_t ctsPin, int8_t r\n     return uartSetPins(_uart_nr, rxPin, txPin, ctsPin, rtsPin);\n }\n \n-// Enables or disables Hardware Flow Control using RTS and/or CTS pins (must use setAllPins() before)\n-bool HardwareSerial::setHwFlowCtrlMode(uint8_t mode, uint8_t threshold)\n+// Enables or disables Hardware Flow Control using RTS and/or CTS pins \n+// must use setAllPins() in order to set RTS/CTS pins\n+// SerialHwFlowCtrl = UART_HW_FLOWCTRL_DISABLE, UART_HW_FLOWCTRL_RTS, \n+//                    UART_HW_FLOWCTRL_CTS, UART_HW_FLOWCTRL_CTS_RTS\n+bool HardwareSerial::setHwFlowCtrlMode(SerialHwFlowCtrl mode, uint8_t threshold)\n {\n     return uartSetHwFlowCtrlMode(_uart, mode, threshold);\n }\n \n-// Sets the uart mode in the esp32 uart for use with RS485 modes (HwFlowCtrl must be disabled and RTS pin set)\n-bool HardwareSerial::setMode(uint8_t mode)\n+// Sets the uart mode in the esp32 uart for use with RS485 modes \n+// HwFlowCtrl must be disabled and RTS pin set\n+// SerialMode = UART_MODE_UART, UART_MODE_RS485_HALF_DUPLEX, UART_MODE_IRDA, \n+// or testing mode: UART_MODE_RS485_COLLISION_DETECT, UART_MODE_RS485_APP_CTRL \n+bool HardwareSerial::setMode(SerialMode mode)\n {\n     return uartSetMode(_uart, mode);\n }\n",
            "comment_added_diff": {
                "579": "// Enables or disables Hardware Flow Control using RTS and/or CTS pins",
                "580": "// must use setAllPins() in order to set RTS/CTS pins",
                "581": "// SerialHwFlowCtrl = UART_HW_FLOWCTRL_DISABLE, UART_HW_FLOWCTRL_RTS,",
                "582": "//                    UART_HW_FLOWCTRL_CTS, UART_HW_FLOWCTRL_CTS_RTS",
                "588": "// Sets the uart mode in the esp32 uart for use with RS485 modes",
                "589": "// HwFlowCtrl must be disabled and RTS pin set",
                "590": "// SerialMode = UART_MODE_UART, UART_MODE_RS485_HALF_DUPLEX, UART_MODE_IRDA,",
                "591": "// or testing mode: UART_MODE_RS485_COLLISION_DETECT, UART_MODE_RS485_APP_CTRL"
            },
            "comment_deleted_diff": {
                "579": "// Enables or disables Hardware Flow Control using RTS and/or CTS pins (must use setAllPins() before)",
                "585": "// Sets the uart mode in the esp32 uart for use with RS485 modes (HwFlowCtrl must be disabled and RTS pin set)"
            },
            "comment_modified_diff": {
                "579": "// Enables or disables Hardware Flow Control using RTS and/or CTS pins (must use setAllPins() before)"
            }
        }
    ],
    "HardwareSerial.h": [],
    "esp32-hal-uart.c": [],
    "esp32-hal-uart.h": [],
    "WiFiGeneric.cpp": [
        {
            "commit": "f4d8a481addfa3d772d1d08935c299e95c060afe",
            "timestamp": "2022-11-02T12:30:43+02:00",
            "author": "Juan Luis Leal Contreras",
            "commit_message": "Fixed #7406 crash on WiFi STA_DISCONNECTED event with reason 0 (#7414)\n\nFixed #7406 . The \"reason2str\" macro in WiFiGeneric.cpp tries to read memory from index \"-1\"  in \"system_event_reasons\" array when handling STA_DISCONNECTED event with reason 0. Dealing with reason 0 as a reason 1 (WIFI_REASON_UNSPECIFIED) will solve the problem (the reason for this event to arrive with reason 0 is unknown). #7406",
            "additions": 3,
            "deletions": 0,
            "change_type": "MODIFY",
            "diff": "@@ -947,6 +947,9 @@ esp_err_t WiFiGenericClass::_eventCallback(arduino_event_t *event)\n         //esp_netif_create_ip6_linklocal(esp_netifs[ESP_IF_WIFI_STA]);\n     } else if(event->event_id == ARDUINO_EVENT_WIFI_STA_DISCONNECTED) {\n         uint8_t reason = event->event_info.wifi_sta_disconnected.reason;\n+        // Reason 0 causes crash, use reason 1 (UNSPECIFIED) instead\n+        if(!reason)\n+\t    reason = WIFI_REASON_UNSPECIFIED;\n         log_w(\"Reason: %u - %s\", reason, reason2str(reason));\n         if(reason == WIFI_REASON_NO_AP_FOUND) {\n             WiFiSTAClass::_setStatus(WL_NO_SSID_AVAIL);\n",
            "comment_added_diff": {
                "950": "        // Reason 0 causes crash, use reason 1 (UNSPECIFIED) instead"
            },
            "comment_deleted_diff": {},
            "comment_modified_diff": {}
        }
    ],
    "RMaker.cpp": [],
    "BLERemoteCharacteristic.cpp": [
        {
            "commit": "4ac71d2a7fe9933d2209674de0e1c38b521a5828",
            "timestamp": "2022-11-02T13:07:47+02:00",
            "author": "Rotzbua",
            "commit_message": "[BLE Client] Fix deadlock if connection loss ... (#7319)\n\n... while readValue",
            "additions": 2,
            "deletions": 0,
            "change_type": "MODIFY",
            "diff": "@@ -247,6 +247,8 @@ void BLERemoteCharacteristic::gattClientEventHandler(esp_gattc_cb_event_t event,\n \t\t\tbreak;\n \n \t\tcase ESP_GATTC_DISCONNECT_EVT:\n+\t\t\t// Cleanup semaphores to avoid deadlocks.\n+\t\t\tm_semaphoreReadCharEvt.give(1);\n \t\t\tm_semaphoreWriteCharEvt.give(1);\n \t\t\tbreak;\n \t\t\t\n",
            "comment_added_diff": {
                "250": "\t\t\t// Cleanup semaphores to avoid deadlocks."
            },
            "comment_deleted_diff": {},
            "comment_modified_diff": {}
        },
        {
            "commit": "822f252b353cfd808c77c9bc8369bc0cb4e0b5be",
            "timestamp": "2023-10-06T15:50:11+03:00",
            "author": "Me No Dev",
            "commit_message": "BLE upgrades (#8724)\n\n* Renamed library description\r\n\r\n* Updated Eddystone URL (not complete)\r\n\r\n* Updated Eddystone URL\r\n\r\n* Updated Eddystone classes and beacon scanner\r\n\r\n* Renamed examples - removing prefix BLE_\r\n\r\n* Renamed Beacon_Scanner\r\n\r\n* Updated TLM\r\n\r\n* Changed std::string to Arduino String\r\n\r\n* More std::string -> String\r\n\r\n* Changed String in forgotten file\r\n\r\n* Changed .data to .c_str\r\n\r\n* Reverting single String type change\r\n\r\n* Few more fixes related to the String transition\r\n\r\n* Fixed URL and Utils error\r\n\r\n* Added and modified compatibility safeguards for BLE5 examples\r\n\r\n* Added #include WString.h\r\n\r\n* Fixed Beacon_Scanner\r\n\r\n* Remove commented include\r\n\r\nCo-authored-by: Lucas Saavedra Vaz <lucassvaz@yahoo.com.br>\r\n\r\n---------\r\n\r\nCo-authored-by: Tomas Pilny <tomas.pilny@espressif.com>\r\nCo-authored-by: Lucas Saavedra Vaz <lucassvaz@yahoo.com.br>",
            "additions": 19,
            "deletions": 19,
            "change_type": "MODIFY",
            "diff": "@@ -187,7 +187,7 @@ void BLERemoteCharacteristic::gattClientEventHandler(esp_gattc_cb_event_t event,\n \t\t\t// At this point, we have determined that the event is for us, so now we save the value\n \t\t\t// and unlock the semaphore to ensure that the requestor of the data can continue.\n \t\t\tif (evtParam->read.status == ESP_GATT_OK) {\n-\t\t\t\tm_value = std::string((char*) evtParam->read.value, evtParam->read.value_len);\n+\t\t\t\tm_value = String((char*) evtParam->read.value, evtParam->read.value_len);\n \t\t\t\tif(m_rawData != nullptr) free(m_rawData);\n \t\t\t\tm_rawData = (uint8_t*) calloc(evtParam->read.value_len, sizeof(uint8_t));\n \t\t\t\tmemcpy(m_rawData, evtParam->read.value, evtParam->read.value_len);\n@@ -304,7 +304,7 @@ void BLERemoteCharacteristic::retrieveDescriptors() {\n \t\t\tthis\n \t\t);\n \n-\t\tm_descriptorMap.insert(std::pair<std::string, BLERemoteDescriptor*>(pNewRemoteDescriptor->getUUID().toString(), pNewRemoteDescriptor));\n+\t\tm_descriptorMap.insert(std::pair<String, BLERemoteDescriptor*>(pNewRemoteDescriptor->getUUID().toString(), pNewRemoteDescriptor));\n \n \t\toffset++;\n \t} // while true\n@@ -316,7 +316,7 @@ void BLERemoteCharacteristic::retrieveDescriptors() {\n /**\n  * @brief Retrieve the map of descriptors keyed by UUID.\n  */\n-std::map<std::string, BLERemoteDescriptor*>* BLERemoteCharacteristic::getDescriptors() {\n+std::map<String, BLERemoteDescriptor*>* BLERemoteCharacteristic::getDescriptors() {\n \treturn &m_descriptorMap;\n } // getDescriptors\n \n@@ -339,7 +339,7 @@ uint16_t BLERemoteCharacteristic::getHandle() {\n  */\n BLERemoteDescriptor* BLERemoteCharacteristic::getDescriptor(BLEUUID uuid) {\n \tlog_v(\">> getDescriptor: uuid: %s\", uuid.toString().c_str());\n-\tstd::string v = uuid.toString();\n+\tString v = uuid.toString();\n \tfor (auto &myPair : m_descriptorMap) {\n \t\tif (myPair.first == v) {\n \t\t\tlog_v(\"<< getDescriptor: found\");\n@@ -374,9 +374,9 @@ BLEUUID BLERemoteCharacteristic::getUUID() {\n  * @return The unsigned 16 bit value.\n  */\n uint16_t BLERemoteCharacteristic::readUInt16() {\n-\tstd::string value = readValue();\n+\tString value = readValue();\n \tif (value.length() >= 2) {\n-\t\treturn *(uint16_t*)(value.data());\n+\t\treturn *(uint16_t*)(value.c_str());\n \t}\n \treturn 0;\n } // readUInt16\n@@ -387,9 +387,9 @@ uint16_t BLERemoteCharacteristic::readUInt16() {\n  * @return the unsigned 32 bit value.\n  */\n uint32_t BLERemoteCharacteristic::readUInt32() {\n-\tstd::string value = readValue();\n+\tString value = readValue();\n \tif (value.length() >= 4) {\n-\t\treturn *(uint32_t*)(value.data());\n+\t\treturn *(uint32_t*)(value.c_str());\n \t}\n \treturn 0;\n } // readUInt32\n@@ -400,7 +400,7 @@ uint32_t BLERemoteCharacteristic::readUInt32() {\n  * @return The value as a byte\n  */\n uint8_t BLERemoteCharacteristic::readUInt8() {\n-\tstd::string value = readValue();\n+\tString value = readValue();\n \tif (value.length() >= 1) {\n \t\treturn (uint8_t)value[0];\n \t}\n@@ -412,9 +412,9 @@ uint8_t BLERemoteCharacteristic::readUInt8() {\n  * @return the float value.\n  */\n float BLERemoteCharacteristic::readFloat() {\n-\tstd::string value = readValue();\n+\tString value = readValue();\n \tif (value.length() >= 4) {\n-\t\treturn *(float*)(value.data());\n+\t\treturn *(float*)(value.c_str());\n \t}\n \treturn 0.0;\n } // readFloat\n@@ -423,13 +423,13 @@ float BLERemoteCharacteristic::readFloat() {\n  * @brief Read the value of the remote characteristic.\n  * @return The value of the remote characteristic.\n  */\n-std::string BLERemoteCharacteristic::readValue() {\n+String BLERemoteCharacteristic::readValue() {\n \tlog_v(\">> readValue(): uuid: %s, handle: %d 0x%.2x\", getUUID().toString().c_str(), getHandle(), getHandle());\n \n \t// Check to see that we are connected.\n \tif (!getRemoteService()->getClient()->isConnected()) {\n \t\tlog_e(\"Disconnected\");\n-\t\treturn std::string();\n+\t\treturn String();\n \t}\n \n \tm_semaphoreReadCharEvt.take(\"readValue\");\n@@ -448,7 +448,7 @@ std::string BLERemoteCharacteristic::readValue() {\n \t\treturn \"\";\n \t}\n \n-\t// Block waiting for the event that indicates that the read has completed.  When it has, the std::string found\n+\t// Block waiting for the event that indicates that the read has completed.  When it has, the String found\n \t// in m_value will contain our data.\n \tm_semaphoreReadCharEvt.wait(\"readValue\");\n \n@@ -531,8 +531,8 @@ void BLERemoteCharacteristic::removeDescriptors() {\n  * @brief Convert a BLERemoteCharacteristic to a string representation;\n  * @return a String representation.\n  */\n-std::string BLERemoteCharacteristic::toString() {\n-\tstd::string res = \"Characteristic: uuid: \" + m_uuid.toString();\n+String BLERemoteCharacteristic::toString() {\n+\tString res = \"Characteristic: uuid: \" + m_uuid.toString();\n \tchar val[6];\n \tres += \", handle: \";\n \tsnprintf(val, sizeof(val), \"%d\", getHandle());\n@@ -551,8 +551,8 @@ std::string BLERemoteCharacteristic::toString() {\n  * @param [in] response Do we expect a response?\n  * @return N/A.\n  */\n-void BLERemoteCharacteristic::writeValue(std::string newValue, bool response) {\n-\twriteValue((uint8_t*)newValue.data(), newValue.length(), response);\n+void BLERemoteCharacteristic::writeValue(String newValue, bool response) {\n+\twriteValue((uint8_t*)newValue.c_str(), newValue.length(), response);\n } // writeValue\n \n \n@@ -576,7 +576,7 @@ void BLERemoteCharacteristic::writeValue(uint8_t newValue, bool response) {\n  * @param [in] response Whether we require a response from the write.\n  */\n void BLERemoteCharacteristic::writeValue(uint8_t* data, size_t length, bool response) {\n-\t// writeValue(std::string((char*)data, length), response);\n+\t// writeValue(String((char*)data, length), response);\n \tlog_v(\">> writeValue(), length: %d\", length);\n \n \t// Check to see that we are connected.\n",
            "comment_added_diff": {
                "451": "\t// Block waiting for the event that indicates that the read has completed.  When it has, the String found",
                "579": "\t// writeValue(String((char*)data, length), response);"
            },
            "comment_deleted_diff": {
                "451": "\t// Block waiting for the event that indicates that the read has completed.  When it has, the std::string found",
                "579": "\t// writeValue(std::string((char*)data, length), response);"
            },
            "comment_modified_diff": {
                "451": "\t// Block waiting for the event that indicates that the read has completed.  When it has, the std::string found",
                "579": "\t// writeValue(std::string((char*)data, length), response);"
            }
        }
    ],
    "README.md": [],
    "RMakerDevice.cpp": [],
    "RMakerDevice.h": [],
    "WiFiGeneric.h": [],
    "rainmaker.rst": [],
    "RMakerCustom.ino": [],
    "RMakerCustomAirCooler.ino": [],
    "RMakerSonoffDualR3.ino": [],
    "RMakerSwitch.ino": [],
    "RMaker.h": [],
    "RMakerUtils.cpp": [],
    "FS.cpp": [],
    "FS.h": [],
    "FSImpl.h": [],
    "vfs_api.cpp": [
        {
            "commit": "fa9e0590054049905c5f5ac2178a16879f6fcd10",
            "timestamp": "2023-04-18T01:56:36+03:00",
            "author": "Dirk Carstensen",
            "commit_message": "getNextFileName: Get info whether filename is a file or directory (#8079)\n\nre-submit #8068",
            "additions": 26,
            "deletions": 0,
            "change_type": "MODIFY",
            "diff": "@@ -540,6 +540,32 @@ String VFSFileImpl::getNextFileName()\n     return name;\n }\n \n+String VFSFileImpl::getNextFileName(bool *isDir)\n+{\n+    if (!_isDirectory || !_d) {\n+        return \"\";\n+    }\n+    struct dirent *file = readdir(_d);\n+    if (file == NULL) {\n+        return \"\";\n+    }\n+    if (file->d_type != DT_REG && file->d_type != DT_DIR) {\n+        return \"\";\n+    }\n+    String fname = String(file->d_name);\n+    String name = String(_path);\n+    if (!fname.startsWith(\"/\") && !name.endsWith(\"/\")) {\n+        name += \"/\";\n+    }\n+    name += fname;\n+\n+    // check entry is a directory\n+    if (isDir) {\n+        *isDir = (file->d_type == DT_DIR);\n+    }\n+    return name;\n+}\n+\n void VFSFileImpl::rewindDirectory(void)\n {\n     if(!_isDirectory || !_d) {\n",
            "comment_added_diff": {
                "562": "    // check entry is a directory"
            },
            "comment_deleted_diff": {},
            "comment_modified_diff": {}
        }
    ],
    "vfs_api.h": [],
    "ssl_client.cpp": [
        {
            "commit": "05e55d8716678693306f675e7826160f75f794b4",
            "timestamp": "2022-12-07T18:27:02-03:00",
            "author": "Krzysiek S",
            "commit_message": "Fix unnecessary DNS query in hostByName and deadlock in ssl_client (#7351)\n\n* Fix hostByName to avoid asking DNS when valid IP is passed via hostname param\r\n* Fix hanging in send_ssl_data",
            "additions": 16,
            "deletions": 3,
            "change_type": "MODIFY",
            "diff": "@@ -90,6 +90,8 @@ int start_ssl_client(sslclient_context *ssl_client, const char *host, uint32_t p\n         timeout = 30000; // Milli seconds.\n     }\n \n+    ssl_client->socket_timeout = timeout;\n+\n     fd_set fdset;\n     struct timeval tv;\n     FD_ZERO(&fdset);\n@@ -341,12 +343,15 @@ void stop_ssl_socket(sslclient_context *ssl_client, const char *rootCABuff, cons\n     mbedtls_ctr_drbg_free(&ssl_client->drbg_ctx);\n     mbedtls_entropy_free(&ssl_client->entropy_ctx);\n     \n-    // save only interesting field\n-    int timeout = ssl_client->handshake_timeout;\n+    // save only interesting fields\n+    int handshake_timeout = ssl_client->handshake_timeout;\n+    int socket_timeout = ssl_client->socket_timeout;\n+\n     // reset embedded pointers to zero\n     memset(ssl_client, 0, sizeof(sslclient_context));\n     \n-    ssl_client->handshake_timeout = timeout;\n+    ssl_client->handshake_timeout = handshake_timeout;\n+    ssl_client->socket_timeout = socket_timeout;\n }\n \n \n@@ -369,11 +374,19 @@ int send_ssl_data(sslclient_context *ssl_client, const uint8_t *data, size_t len\n     log_v(\"Writing HTTP request with %d bytes...\", len); //for low level debug\n     int ret = -1;\n \n+    unsigned long write_start_time=millis();\n+\n     while ((ret = mbedtls_ssl_write(&ssl_client->ssl_ctx, data, len)) <= 0) {\n+        if((millis()-write_start_time)>ssl_client->socket_timeout) {\n+            log_v(\"SSL write timed out.\");\n+            return -1;\n+        }\n+\n         if (ret != MBEDTLS_ERR_SSL_WANT_READ && ret != MBEDTLS_ERR_SSL_WANT_WRITE && ret < 0) {\n             log_v(\"Handling error %d\", ret); //for low level debug\n             return handle_error(ret);\n         }\n+        \n         //wait for space to become available\n         vTaskDelay(2);\n     }\n",
            "comment_added_diff": {
                "346": "    // save only interesting fields"
            },
            "comment_deleted_diff": {
                "344": "    // save only interesting field"
            },
            "comment_modified_diff": {}
        }
    ],
    "ssl_client.h": [],
    "WiFiClient.h": [],
    "WiFiClientSecure.cpp": [],
    "WiFiClientSecure.h": [],
    "CameraWebServer.ino": [],
    "app_httpd.cpp": [
        {
            "commit": "ba68f318f4194755cd7d69ffbbb3814fddbc8a57",
            "timestamp": "2022-12-08T10:46:19-03:00",
            "author": "Jan Proch\u00e1zka",
            "commit_message": "Updated camera example (#7533)",
            "additions": 60,
            "deletions": 49,
            "change_type": "MODIFY",
            "diff": "@@ -16,16 +16,12 @@\n #include \"esp_camera.h\"\n #include \"img_converters.h\"\n #include \"fb_gfx.h\"\n-#include \"driver/ledc.h\"\n+#include \"esp32-hal-ledc.h\"\n #include \"sdkconfig.h\"\n #include \"camera_index.h\"\n \n #if defined(ARDUINO_ARCH_ESP32) && defined(CONFIG_ARDUHAL_ESP_LOG)\n #include \"esp32-hal-log.h\"\n-#define TAG \"\"\n-#else\n-#include \"esp_log.h\"\n-static const char *TAG = \"camera_httpd\";\n #endif\n \n // Face Detection will not work on boards without (or with disabled) PSRAM\n@@ -72,14 +68,18 @@ static const char *TAG = \"camera_httpd\";\n #define FACE_COLOR_PURPLE (FACE_COLOR_BLUE | FACE_COLOR_RED)\n #endif\n \n-#ifdef CONFIG_LED_ILLUMINATOR_ENABLED\n+// Enable LED FLASH setting\n+#define CONFIG_LED_ILLUMINATOR_ENABLED 1\n+\n+// LED FLASH setup\n+#if CONFIG_LED_ILLUMINATOR_ENABLED\n+\n+#define LED_LEDC_CHANNEL 2 //Using different ledc channel/timer than camera\n+#define CONFIG_LED_MAX_INTENSITY 255\n+\n int led_duty = 0;\n bool isStreaming = false;\n-#ifdef CONFIG_LED_LEDC_LOW_SPEED_MODE\n-#define CONFIG_LED_LEDC_SPEED_MODE LEDC_LOW_SPEED_MODE\n-#else\n-#define CONFIG_LED_LEDC_SPEED_MODE LEDC_HIGH_SPEED_MODE\n-#endif\n+\n #endif\n \n typedef struct\n@@ -263,7 +263,7 @@ static int run_face_recognition(fb_data_t *fb, std::list<dl::detect::result_t> *\n \n     if (enrolled_count < FACE_ID_SAVE_NUMBER && is_enrolling){\n         id = recognizer.enroll_id(tensor, landmarks, \"\", true);\n-        ESP_LOGI(TAG, \"Enrolled ID: %d\", id);\n+        log_i(\"Enrolled ID: %d\", id);\n         rgb_printf(fb, FACE_COLOR_CYAN, \"ID[%u]\", id);\n     }\n \n@@ -278,7 +278,7 @@ static int run_face_recognition(fb_data_t *fb, std::list<dl::detect::result_t> *\n #endif\n #endif\n \n-#ifdef CONFIG_LED_ILLUMINATOR_ENABLED\n+#if CONFIG_LED_ILLUMINATOR_ENABLED\n void enable_led(bool en)\n { // Turn LED On or Off\n     int duty = en ? led_duty : 0;\n@@ -286,9 +286,10 @@ void enable_led(bool en)\n     {\n         duty = CONFIG_LED_MAX_INTENSITY;\n     }\n-    ledc_set_duty(CONFIG_LED_LEDC_SPEED_MODE, CONFIG_LED_LEDC_CHANNEL, duty);\n-    ledc_update_duty(CONFIG_LED_LEDC_SPEED_MODE, CONFIG_LED_LEDC_CHANNEL);\n-    ESP_LOGI(TAG, \"Set LED intensity to %d\", duty);\n+    ledcWrite(LED_LEDC_CHANNEL, duty);\n+    //ledc_set_duty(CONFIG_LED_LEDC_SPEED_MODE, CONFIG_LED_LEDC_CHANNEL, duty);\n+    //ledc_update_duty(CONFIG_LED_LEDC_SPEED_MODE, CONFIG_LED_LEDC_CHANNEL);\n+    log_i(\"Set LED intensity to %d\", duty);\n }\n #endif\n \n@@ -302,7 +303,7 @@ static esp_err_t bmp_handler(httpd_req_t *req)\n     fb = esp_camera_fb_get();\n     if (!fb)\n     {\n-        ESP_LOGE(TAG, \"Camera capture failed\");\n+        log_e(\"Camera capture failed\");\n         httpd_resp_send_500(req);\n         return ESP_FAIL;\n     }\n@@ -321,7 +322,7 @@ static esp_err_t bmp_handler(httpd_req_t *req)\n     bool converted = frame2bmp(fb, &buf, &buf_len);\n     esp_camera_fb_return(fb);\n     if(!converted){\n-        ESP_LOGE(TAG, \"BMP Conversion failed\");\n+        log_e(\"BMP Conversion failed\");\n         httpd_resp_send_500(req);\n         return ESP_FAIL;\n     }\n@@ -330,7 +331,7 @@ static esp_err_t bmp_handler(httpd_req_t *req)\n #if ARDUHAL_LOG_LEVEL >= ARDUHAL_LOG_LEVEL_INFO\n     uint64_t fr_end = esp_timer_get_time();\n #endif\n-    ESP_LOGI(TAG, \"BMP: %llums, %uB\", (uint64_t)((fr_end - fr_start) / 1000), buf_len);\n+    log_i(\"BMP: %llums, %uB\", (uint64_t)((fr_end - fr_start) / 1000), buf_len);\n     return res;\n }\n \n@@ -357,7 +358,7 @@ static esp_err_t capture_handler(httpd_req_t *req)\n     int64_t fr_start = esp_timer_get_time();\n #endif\n \n-#ifdef CONFIG_LED_ILLUMINATOR_ENABLED\n+#if CONFIG_LED_ILLUMINATOR_ENABLED\n     enable_led(true);\n     vTaskDelay(150 / portTICK_PERIOD_MS); // The LED needs to be turned on ~150ms before the call to esp_camera_fb_get()\n     fb = esp_camera_fb_get();             // or it won't be visible in the frame. A better way to do this is needed.\n@@ -368,7 +369,7 @@ static esp_err_t capture_handler(httpd_req_t *req)\n \n     if (!fb)\n     {\n-        ESP_LOGE(TAG, \"Camera capture failed\");\n+        log_e(\"Camera capture failed\");\n         httpd_resp_send_500(req);\n         return ESP_FAIL;\n     }\n@@ -415,7 +416,7 @@ static esp_err_t capture_handler(httpd_req_t *req)\n #if ARDUHAL_LOG_LEVEL >= ARDUHAL_LOG_LEVEL_INFO\n         int64_t fr_end = esp_timer_get_time();\n #endif\n-        ESP_LOGI(TAG, \"JPG: %uB %ums\", (uint32_t)(fb_len), (uint32_t)((fr_end - fr_start) / 1000));\n+        log_i(\"JPG: %uB %ums\", (uint32_t)(fb_len), (uint32_t)((fr_end - fr_start) / 1000));\n         return res;\n #if CONFIG_ESP_FACE_DETECT_ENABLED\n     }\n@@ -457,7 +458,7 @@ static esp_err_t capture_handler(httpd_req_t *req)\n         out_height = fb->height;\n         out_buf = (uint8_t*)malloc(out_len);\n         if (!out_buf) {\n-            ESP_LOGE(TAG, \"out_buf malloc failed\");\n+            log_e(\"out_buf malloc failed\");\n             httpd_resp_send_500(req);\n             return ESP_FAIL;\n         }\n@@ -465,7 +466,7 @@ static esp_err_t capture_handler(httpd_req_t *req)\n         esp_camera_fb_return(fb);\n         if (!s) {\n             free(out_buf);\n-            ESP_LOGE(TAG, \"to rgb888 failed\");\n+            log_e(\"To rgb888 failed\");\n             httpd_resp_send_500(req);\n             return ESP_FAIL;\n         }\n@@ -504,14 +505,14 @@ static esp_err_t capture_handler(httpd_req_t *req)\n     }\n \n     if (!s) {\n-        ESP_LOGE(TAG, \"JPEG compression failed\");\n+        log_e(\"JPEG compression failed\");\n         httpd_resp_send_500(req);\n         return ESP_FAIL;\n     }\n #if ARDUHAL_LOG_LEVEL >= ARDUHAL_LOG_LEVEL_INFO\n     int64_t fr_end = esp_timer_get_time();\n #endif\n-    ESP_LOGI(TAG, \"FACE: %uB %ums %s%d\", (uint32_t)(jchunk.len), (uint32_t)((fr_end - fr_start) / 1000), detected ? \"DETECTED \" : \"\", face_id);\n+    log_i(\"FACE: %uB %ums %s%d\", (uint32_t)(jchunk.len), (uint32_t)((fr_end - fr_start) / 1000), detected ? \"DETECTED \" : \"\", face_id);\n     return res;\n #endif\n }\n@@ -560,7 +561,7 @@ static esp_err_t stream_handler(httpd_req_t *req)\n     httpd_resp_set_hdr(req, \"Access-Control-Allow-Origin\", \"*\");\n     httpd_resp_set_hdr(req, \"X-Framerate\", \"60\");\n \n-#ifdef CONFIG_LED_ILLUMINATOR_ENABLED\n+#if CONFIG_LED_ILLUMINATOR_ENABLED\n     enable_led(true);\n     isStreaming = true;\n #endif\n@@ -577,7 +578,7 @@ static esp_err_t stream_handler(httpd_req_t *req)\n         fb = esp_camera_fb_get();\n         if (!fb)\n         {\n-            ESP_LOGE(TAG, \"Camera capture failed\");\n+            log_e(\"Camera capture failed\");\n             res = ESP_FAIL;\n         }\n         else\n@@ -602,7 +603,7 @@ static esp_err_t stream_handler(httpd_req_t *req)\n                     fb = NULL;\n                     if (!jpeg_converted)\n                     {\n-                        ESP_LOGE(TAG, \"JPEG compression failed\");\n+                        log_e(\"JPEG compression failed\");\n                         res = ESP_FAIL;\n                     }\n                 }\n@@ -649,7 +650,7 @@ static esp_err_t stream_handler(httpd_req_t *req)\n                     esp_camera_fb_return(fb);\n                     fb = NULL;\n                     if (!s) {\n-                        ESP_LOGE(TAG, \"fmt2jpg failed\");\n+                        log_e(\"fmt2jpg failed\");\n                         res = ESP_FAIL;\n                     }\n #if CONFIG_ESP_FACE_DETECT_ENABLED && ARDUHAL_LOG_LEVEL >= ARDUHAL_LOG_LEVEL_INFO\n@@ -662,7 +663,7 @@ static esp_err_t stream_handler(httpd_req_t *req)\n                     out_height = fb->height;\n                     out_buf = (uint8_t*)malloc(out_len);\n                     if (!out_buf) {\n-                        ESP_LOGE(TAG, \"out_buf malloc failed\");\n+                        log_e(\"out_buf malloc failed\");\n                         res = ESP_FAIL;\n                     } else {\n                         s = fmt2rgb888(fb->buf, fb->len, fb->format, out_buf);\n@@ -670,7 +671,7 @@ static esp_err_t stream_handler(httpd_req_t *req)\n                         fb = NULL;\n                         if (!s) {\n                             free(out_buf);\n-                            ESP_LOGE(TAG, \"to rgb888 failed\");\n+                            log_e(\"To rgb888 failed\");\n                             res = ESP_FAIL;\n                         } else {\n #if ARDUHAL_LOG_LEVEL >= ARDUHAL_LOG_LEVEL_INFO\n@@ -713,7 +714,7 @@ static esp_err_t stream_handler(httpd_req_t *req)\n                             s = fmt2jpg(out_buf, out_len, out_width, out_height, PIXFORMAT_RGB888, 90, &_jpg_buf, &_jpg_buf_len);\n                             free(out_buf);\n                             if (!s) {\n-                                ESP_LOGE(TAG, \"fmt2jpg failed\");\n+                                log_e(\"fmt2jpg failed\");\n                                 res = ESP_FAIL;\n                             }\n #if CONFIG_ESP_FACE_DETECT_ENABLED && ARDUHAL_LOG_LEVEL >= ARDUHAL_LOG_LEVEL_INFO\n@@ -751,7 +752,7 @@ static esp_err_t stream_handler(httpd_req_t *req)\n         }\n         if (res != ESP_OK)\n         {\n-            ESP_LOGE(TAG, \"send frame failed failed\");\n+            log_e(\"Send frame failed\");\n             break;\n         }\n         int64_t fr_end = esp_timer_get_time();\n@@ -769,7 +770,7 @@ static esp_err_t stream_handler(httpd_req_t *req)\n #if ARDUHAL_LOG_LEVEL >= ARDUHAL_LOG_LEVEL_INFO\n         uint32_t avg_frame_time = ra_filter_run(&ra_filter, frame_time);\n #endif\n-        ESP_LOGI(TAG, \"MJPG: %uB %ums (%.1ffps), AVG: %ums (%.1ffps)\"\n+        log_i(\"MJPG: %uB %ums (%.1ffps), AVG: %ums (%.1ffps)\"\n #if CONFIG_ESP_FACE_DETECT_ENABLED\n                       \", %u+%u+%u+%u=%u %s%d\"\n #endif\n@@ -785,7 +786,7 @@ static esp_err_t stream_handler(httpd_req_t *req)\n         );\n     }\n \n-#ifdef CONFIG_LED_ILLUMINATOR_ENABLED\n+#if CONFIG_LED_ILLUMINATOR_ENABLED\n     isStreaming = false;\n     enable_led(false);\n #endif\n@@ -833,7 +834,7 @@ static esp_err_t cmd_handler(httpd_req_t *req)\n     free(buf);\n \n     int val = atoi(value);\n-    ESP_LOGI(TAG, \"%s = %d\", variable, val);\n+    log_i(\"%s = %d\", variable, val);\n     sensor_t *s = esp_camera_sensor_get();\n     int res = 0;\n \n@@ -888,7 +889,7 @@ static esp_err_t cmd_handler(httpd_req_t *req)\n         res = s->set_wb_mode(s, val);\n     else if (!strcmp(variable, \"ae_level\"))\n         res = s->set_ae_level(s, val);\n-#ifdef CONFIG_LED_ILLUMINATOR_ENABLED\n+#if CONFIG_LED_ILLUMINATOR_ENABLED\n     else if (!strcmp(variable, \"led_intensity\")) {\n         led_duty = val;\n         if (isStreaming)\n@@ -908,7 +909,7 @@ static esp_err_t cmd_handler(httpd_req_t *req)\n #if CONFIG_ESP_FACE_RECOGNITION_ENABLED\n     else if (!strcmp(variable, \"face_enroll\")){\n         is_enrolling = !is_enrolling;\n-        ESP_LOGI(TAG, \"Enrolling: %s\", is_enrolling?\"true\":\"false\");\n+        log_i(\"Enrolling: %s\", is_enrolling?\"true\":\"false\");\n     }\n     else if (!strcmp(variable, \"face_recognize\")) {\n         recognition_enabled = val;\n@@ -919,7 +920,7 @@ static esp_err_t cmd_handler(httpd_req_t *req)\n #endif\n #endif\n     else {\n-        ESP_LOGI(TAG, \"Unknown command: %s\", variable);\n+        log_i(\"Unknown command: %s\", variable);\n         res = -1;\n     }\n \n@@ -998,7 +999,7 @@ static esp_err_t status_handler(httpd_req_t *req)\n     p += sprintf(p, \"\\\"hmirror\\\":%u,\", s->status.hmirror);\n     p += sprintf(p, \"\\\"dcw\\\":%u,\", s->status.dcw);\n     p += sprintf(p, \"\\\"colorbar\\\":%u\", s->status.colorbar);\n-#ifdef CONFIG_LED_ILLUMINATOR_ENABLED\n+#if CONFIG_LED_ILLUMINATOR_ENABLED\n     p += sprintf(p, \",\\\"led_intensity\\\":%u\", led_duty);\n #else\n     p += sprintf(p, \",\\\"led_intensity\\\":%d\", -1);\n@@ -1033,7 +1034,7 @@ static esp_err_t xclk_handler(httpd_req_t *req)\n     free(buf);\n \n     int xclk = atoi(_xclk);\n-    ESP_LOGI(TAG, \"Set XCLK: %d MHz\", xclk);\n+    log_i(\"Set XCLK: %d MHz\", xclk);\n \n     sensor_t *s = esp_camera_sensor_get();\n     int res = s->set_xclk(s, LEDC_TIMER_0, xclk);\n@@ -1067,7 +1068,7 @@ static esp_err_t reg_handler(httpd_req_t *req)\n     int reg = atoi(_reg);\n     int mask = atoi(_mask);\n     int val = atoi(_val);\n-    ESP_LOGI(TAG, \"Set Register: reg: 0x%02x, mask: 0x%02x, value: 0x%02x\", reg, mask, val);\n+    log_i(\"Set Register: reg: 0x%02x, mask: 0x%02x, value: 0x%02x\", reg, mask, val);\n \n     sensor_t *s = esp_camera_sensor_get();\n     int res = s->set_reg(s, reg, mask, val);\n@@ -1103,7 +1104,7 @@ static esp_err_t greg_handler(httpd_req_t *req)\n     if (res < 0) {\n         return httpd_resp_send_500(req);\n     }\n-    ESP_LOGI(TAG, \"Get Register: reg: 0x%02x, mask: 0x%02x, value: 0x%02x\", reg, mask, res);\n+    log_i(\"Get Register: reg: 0x%02x, mask: 0x%02x, value: 0x%02x\", reg, mask, res);\n \n     char buffer[20];\n     const char * val = itoa(res, buffer, 10);\n@@ -1138,7 +1139,7 @@ static esp_err_t pll_handler(httpd_req_t *req)\n     int pclk = parse_get_var(buf, \"pclk\", 0);\n     free(buf);\n \n-    ESP_LOGI(TAG, \"Set Pll: bypass: %d, mul: %d, sys: %d, root: %d, pre: %d, seld5: %d, pclken: %d, pclk: %d\", bypass, mul, sys, root, pre, seld5, pclken, pclk);\n+    log_i(\"Set Pll: bypass: %d, mul: %d, sys: %d, root: %d, pre: %d, seld5: %d, pclken: %d, pclk: %d\", bypass, mul, sys, root, pre, seld5, pclken, pclk);\n     sensor_t *s = esp_camera_sensor_get();\n     int res = s->set_pll(s, bypass, mul, sys, root, pre, seld5, pclken, pclk);\n     if (res) {\n@@ -1171,7 +1172,7 @@ static esp_err_t win_handler(httpd_req_t *req)\n     bool binning = parse_get_var(buf, \"binning\", 0) == 1;\n     free(buf);\n \n-    ESP_LOGI(TAG, \"Set Window: Start: %d %d, End: %d %d, Offset: %d %d, Total: %d %d, Output: %d %d, Scale: %u, Binning: %u\", startX, startY, endX, endY, offsetX, offsetY, totalX, totalY, outputX, outputY, scale, binning);\n+    log_i(\"Set Window: Start: %d %d, End: %d %d, Offset: %d %d, Total: %d %d, Output: %d %d, Scale: %u, Binning: %u\", startX, startY, endX, endY, offsetX, offsetY, totalX, totalY, outputX, outputY, scale, binning);\n     sensor_t *s = esp_camera_sensor_get();\n     int res = s->set_res_raw(s, startX, startY, endX, endY, offsetX, offsetY, totalX, totalY, outputX, outputY, scale, binning);\n     if (res) {\n@@ -1196,7 +1197,7 @@ static esp_err_t index_handler(httpd_req_t *req)\n             return httpd_resp_send(req, (const char *)index_ov2640_html_gz, index_ov2640_html_gz_len);\n         }\n     } else {\n-        ESP_LOGE(TAG, \"Camera sensor not found\");\n+        log_e(\"Camera sensor not found\");\n         return httpd_resp_send_500(req);\n     }\n }\n@@ -1357,7 +1358,7 @@ void startCameraServer()\n     // load ids from flash partition\n     recognizer.set_ids_from_flash();\n #endif\n-    ESP_LOGI(TAG, \"Starting web server on port: '%d'\", config.server_port);\n+    log_i(\"Starting web server on port: '%d'\", config.server_port);\n     if (httpd_start(&camera_httpd, &config) == ESP_OK)\n     {\n         httpd_register_uri_handler(camera_httpd, &index_uri);\n@@ -1375,9 +1376,19 @@ void startCameraServer()\n \n     config.server_port += 1;\n     config.ctrl_port += 1;\n-    ESP_LOGI(TAG, \"Starting stream server on port: '%d'\", config.server_port);\n+    log_i(\"Starting stream server on port: '%d'\", config.server_port);\n     if (httpd_start(&stream_httpd, &config) == ESP_OK)\n     {\n         httpd_register_uri_handler(stream_httpd, &stream_uri);\n     }\n }\n+\n+void setupLedFlash(int pin) \n+{\n+    #if CONFIG_LED_ILLUMINATOR_ENABLED\n+    ledcSetup(LED_LEDC_CHANNEL, 5000, 8);\n+    ledcAttachPin(pin, LED_LEDC_CHANNEL);\n+    #else\n+    log_i(\"LED flash is disabled -> CONFIG_LED_ILLUMINATOR_ENABLED = 0\");\n+    #endif\n+}\n",
            "comment_added_diff": {
                "71": "// Enable LED FLASH setting",
                "74": "// LED FLASH setup"
            },
            "comment_deleted_diff": {},
            "comment_modified_diff": {}
        }
    ],
    "camera_pins.h": [],
    "USB.cpp": [],
    "esp_crt_bundle.c": [],
    "esp_crt_bundle.h": [],
    "HWCDC.cpp": [
        {
            "commit": "1d595fd35c9755bbf42e8c1193200a616e81d536",
            "timestamp": "2022-12-14T12:47:29+02:00",
            "author": "Rodrigo Garcia",
            "commit_message": "Workaround for when USB CDC is unplugged (#7583)\n\n* Workaround for when USB CDC is unplugged\r\n\r\n* Considers default TX timeout\r\n\r\nSets back default TX timeout whenever USB is plugged, otherwise it is kept as zero.\r\n\r\n* fixed left over code",
            "additions": 14,
            "deletions": 2,
            "change_type": "MODIFY",
            "diff": "@@ -32,7 +32,11 @@ static uint8_t rx_data_buf[64];\n static intr_handle_t intr_handle = NULL;\n static volatile bool initial_empty = false;\n static xSemaphoreHandle tx_lock = NULL;\n-static uint32_t tx_timeout_ms = 200;\n+\n+// workaround for when USB CDC is not connected\n+static uint32_t tx_timeout_ms = 0;\n+static bool tx_timeout_change_request = false;\n+\n static esp_event_loop_handle_t arduino_hw_cdc_event_loop_handle = NULL;\n \n static esp_err_t arduino_hw_cdc_event_post(esp_event_base_t event_base, int32_t event_id, void *event_data, size_t event_data_size, BaseType_t *task_unblocked){\n@@ -72,9 +76,14 @@ static void hw_cdc_isr_handler(void *arg) {\n         if (usb_serial_jtag_ll_txfifo_writable() == 1) {\n             // We disable the interrupt here so that the interrupt won't be triggered if there is no data to send.\n             usb_serial_jtag_ll_disable_intr_mask(USB_SERIAL_JTAG_INTR_SERIAL_IN_EMPTY);\n-\n             if(!initial_empty){\n                 initial_empty = true;\n+                // First time USB is plugged and the application has not explicitly set TX Timeout, set it to default 100ms.\n+                // Otherwise, USB is still unplugged and the timeout will be kept as Zero in order to avoid any delay in the\n+                // application whenever it uses write() and the TX Queue gets full.\n+                if (!tx_timeout_change_request) {\n+                    tx_timeout_ms = 100;\n+                }\n                 //send event?\n                 //ets_printf(\"CONNECTED\\n\");\n                 arduino_hw_cdc_event_post(ARDUINO_HW_CDC_EVENTS, ARDUINO_HW_CDC_CONNECTED_EVENT, &event, sizeof(arduino_hw_cdc_event_data_t), &xTaskWoken);\n@@ -197,6 +206,9 @@ void HWCDC::end()\n \n void HWCDC::setTxTimeoutMs(uint32_t timeout){\n     tx_timeout_ms = timeout;\n+    // it registers that the user has explicitly requested to use a value as TX timeout\n+    // used for the workaround with unplugged USB and TX Queue Full that causes a delay on every write()\n+    tx_timeout_change_request = true;\n }\n \n /*\n",
            "comment_added_diff": {
                "36": "// workaround for when USB CDC is not connected",
                "81": "                // First time USB is plugged and the application has not explicitly set TX Timeout, set it to default 100ms.",
                "82": "                // Otherwise, USB is still unplugged and the timeout will be kept as Zero in order to avoid any delay in the",
                "83": "                // application whenever it uses write() and the TX Queue gets full.",
                "209": "    // it registers that the user has explicitly requested to use a value as TX timeout",
                "210": "    // used for the workaround with unplugged USB and TX Queue Full that causes a delay on every write()"
            },
            "comment_deleted_diff": {},
            "comment_modified_diff": {}
        },
        {
            "commit": "6f7a1ca76ada4d705d79ce863450c91349327a79",
            "timestamp": "2023-10-05T14:54:25+03:00",
            "author": "Me No Dev",
            "commit_message": "ESP-IDF v5.1 (#7733)\n\n* Initial changes to compile under ESP-IDF v5.1\r\n\r\n* Initial import for ESP-IDF v5.1 libs\r\n\r\n* Update toolchain\r\n\r\n* Update esp32-hal-psram.c\r\n\r\n* Add missing LDs\r\n\r\n* Update platform.txt\r\n\r\n* Stop some CI jobs, because they will always fail\r\n\r\n* Fix examples\r\n\r\n* Update app_httpd.cpp\r\n\r\n* Update ResetReason.ino\r\n\r\n* Warnings fixes\r\n\r\n* Added the example guideline and template (#7665)\r\n\r\n* Added the example guideline and template\r\n\r\n* PR review changes with some typos and grammar fixes\r\n\r\n* Changes according to the PR review\r\n\r\n* Added ESP32-S3 link to the datasheet (#7738)\r\n\r\n* Update HiFreq_ADC.ino\r\n\r\n* Replace periph_ctrl.h use because of deprecation\r\n\r\n* Replace esp_spi_flash.h use because of deprecation\r\n\r\n* Add includes to male mDNS::enableWorkstation compile\r\n\r\n* Fix ssl_client mbedtls_pk_parse_key callback\r\n\r\n* Update temperature sensor driver\r\n\r\n* Allow sketch_utils to compile with arduino-cli\r\n\r\n* Run CI with arduino-cli\r\n\r\n* Fix arduino-cli CI build on Windows\r\n\r\n* Refactor platform.txt to not use components installed through the board manager when running from git\r\n\r\n* Initial Peripheral Manager Implementation\r\n\r\n* Update SigmaDelta driver to use the new ESP-IDF driver API\r\n\r\n* Small improvements to peripheral manager and SigmaDelta\r\n\r\n* Remove deleted function from SigmaDelta header\r\n\r\n* Update DAC driver to use the new ESP-IDF driver API\r\n\r\n* Adds softAp(String) to make it compatible with ESP8266 (#7801)\r\n\r\n* Fix commentary (#7800)\r\n\r\nMinor fix based on observation done in https://github.com/espressif/arduino-esp32/issues/7795#issuecomment-1416868611\r\n\r\n* add adafruit new board feather esp32s2 reserve tft (#7794)\r\n\r\n* bugfix: add <stdint.h> for uint8_t to avoid compilation failure (GCC 11.2.0) (#7744)\r\n\r\n* Adding 3rd party boards for VALTRACK-V4-VTS-ESP32-C3 & VALTRACK-V4-MFW-ESP32-C3 (#7735)\r\n\r\n* Added VALTRACK-V4-VTS-ESP32-C3 board definition\r\n\r\nCreated pins_arduino.h & made changes to boards.txt with necessary changes\r\n\r\n* Modified the URL\r\n\r\n* Renamed json\r\n\r\n* renamed all auRL\r\n\r\n* Adding VALTRACK-V4 series board definitions\r\n\r\nAdded VALTRACK-V4-VTS-ESP32C3 & VALTRACK-V4-MFW-ESP32-C3 board variants\r\n\r\n* Adding VALTRACK-V4 series board definitions\r\n\r\nAdded VALTRACK-V4-VTS-ESP32C3 & VALTRACK-V4-MFW-ESP32-C3 board variants\r\n\r\n* Reverted package_esp32_index.template.json\r\n\r\nrestored package_esp32_index.template.json from edits\r\n\r\n* Reverted package_esp32_index.template.json\r\n\r\nAdded new line to package_esp32_index.template.json\r\n\r\n* Update Platformio CI (#7725)\r\n\r\n* WiFiClient example fix (#7711)\r\n\r\n* Modified WiFiClient example to use thingspeak instead of non-functionig sparkfun\r\n\r\n* Moved instructions to README\r\n\r\n* Fixed spelling\r\n\r\n* Added link to S3 datasheet\r\n\r\n---------\r\n\r\nCo-authored-by: Jan Proch\u00e1zka <90197375+P-R-O-C-H-Y@users.noreply.github.com>\r\n\r\n* Mirror update from Heltec repository (#7709)\r\n\r\nHeltec updated the I2C pins in https://github.com/Heltec-Aaron-Lee/WiFi_Kit_series/commit/b10f4bf85d13fd01be80dcdb0eb59e6a8c8ba19a\r\n\r\n* Fixes BLE data printing (#7699)\r\n\r\n* Fixes BLE data printing\r\n\r\nBLE data has no '\\0' terminator, therefore it can't be printed as a regular C string.\r\nThis fix just prints the BLE data based on its length.\r\n\r\n* Simplify printing to a single call\r\n\r\n* split menu options + lora_32_V3 fix (#7697)\r\n\r\n* Change header gaurd name (#7696)\r\n\r\n* Fix Name (#7691)\r\n\r\nWrong name in definitions.\r\n\r\n* Fix error in WiFiClient.cpp where the connect function fails for timeouts below 1 second (#7686)\r\n\r\n* Update WiFiClient.cpp\r\n\r\nThis change will allow specifying connect timeouts below 1 second. Without this change, if connect timeouts under 1 second are given, the connect defaults to 0ms and fails. \r\nThis will also allow timeouts in fractions of seconds, e.g. 1500ms. Without this change, connect timeouts are truncated to full second increments.\r\n\r\n* Make parameter timeout_ms clear\r\n\r\n* Change connection timeout_ms name for clarity\r\n\r\n---------\r\n\r\nCo-authored-by: Rodrigo Garcia <rodrigo.garcia@espressif.com>\r\n\r\n* fixed the function header (#7674)\r\n\r\n* fixed the function header\r\n\r\n* fixed function name and paramaters\r\n\r\n---------\r\n\r\nCo-authored-by: Jan Procha\u0301zka <90197375+P-R-O-C-H-Y@users.noreply.github.com>\r\n\r\n* Ticker fix solving #6155 (#7664)\r\n\r\n* Wrapped Ticker functions with #pragma disabling -Wcast-function-type\r\n\r\n* Revert \"Wrapped Ticker functions with #pragma disabling -Wcast-function-type\"\r\n\r\nThis reverts commit 160be7e67a10d01b6e44c4bf2521c0ccd6348976.\r\n\r\n* Fixed Ticker example\r\n\r\n* Modified Ticker example\r\n\r\n* Fixed LED_BUILTIN err for ESP32\r\n\r\n---------\r\n\r\nCo-authored-by: Jan Proch\u00e1zka <90197375+P-R-O-C-H-Y@users.noreply.github.com>\r\n\r\n* setPins fix ESP32 \"specified pins are not supported by this chip.\" (#7646)\r\n\r\n[ESP32: SDMMCFS::begin hardcodes the usage of slot 1, only check if the pins match slot 1 pins.]\r\n\r\nsetPins() was testing pins D1, D2 and D3 all against D1 ... fine in 1 pin mode when all are -1 not so much if you're trying to get 4 pin mode working.\r\nI now see this function doesn't really do anything on the ESP32...accept now correctly checks that you are trying to use the slot 1 pins.\r\n\r\nCo-authored-by: Jan Proch\u00e1zka <90197375+P-R-O-C-H-Y@users.noreply.github.com>\r\n\r\n* Allow passing IP as connect method parameter in WiFiClientSecure and skip unnecessary host-ip conversions (#7643)\r\n\r\n* Add LED_BUILTIN* definitions and initialization for LEDs to stop them floating. (#7636)\r\n\r\nCo-authored-by: Rodrigo Garcia <rodrigo.garcia@espressif.com>\r\n\r\n* Expand path to tinuf2 image when checking existence in platformio-build.py (#7631)\r\n\r\n* Expand path to tinuf2 image when checking existence\r\n\r\n* More isFiles fixed\r\n\r\n* Remove (useless) trailing semicolon from Print.cpp (#7622)\r\n\r\n* ADD: New variant Edgebox-ESP-100 (#7771)\r\n\r\n* ADD: New variant Edgebox-ESP-100\r\n\r\n* FIX: Edgebox-ESP-100 Board.txt usb mode option change back to default value as ESP32S3\r\n\r\n* Add Crabik Slot ESP32-S3 board (#7790)\r\n\r\n* Added Crabik Slot ESP32-S3\r\n\r\n* Adding CPU frequency settings and removing excess from partition scheme settings\r\n\r\n* new variant LilyGO T-Display-S3 (#7763)\r\n\r\n* new variant LilyGO T-Display-S3\r\n\r\nhttps://github.com/Xinyuan-LilyGO/T-Display-S3\r\n\r\n* Add boards.txt definition\r\n\r\n---------\r\n\r\nCo-authored-by: Me No Dev <me-no-dev@users.noreply.github.com>\r\n\r\n* Update get.py to support Apple ARM64\r\n\r\n* Update package_esp32_index.template.json\r\n\r\n* WString Return bool (#7774)\r\n\r\n* Add Roboheart Hercules development board to the esp32-core (#7672)\r\n\r\n* added Roboheart Hercules pin definitions and board.txt entries\r\n\r\n* added package_roboheat.json for prototyping\r\n\r\n* Roboheart Hercules pins\r\n\r\n* Updated the pins\r\n\r\n* Delete package_roboheart.json\r\n\r\n* Requested changes\r\n\r\n---------\r\n\r\nCo-authored-by: renebohne <rene.bohne@gmail.com>\r\n\r\n* Reword \"ESP-IDF as Component\" (#7812)\r\n\r\nI think \"Arduino as an ESP-IDF component\" or just \"As ESP-IDF component\" instead of  \"ESP-IDF as Component\" is more correct way to name the link.\r\n\r\n1. \"ESP-IDF as Component\" would imply that ESP-IDF is some sort of library for Arduino, which is (IMO) misleading, because it's true the other way around.\r\n2. It's written as \"Arduino as an ESP-IDF component\" on the webpage it points to as well.\r\n\r\n- Also I removed the capitalization from \"Component\" as I have not found a reason why is it capitalized.\r\n\r\n* add new board Adafruit Feather ESP32-S3 Reverse TFT (#7811)\r\n\r\n* Multi threading examples (tasks, queues, semaphores, mutexes) (#7660)\r\n\r\n* Moved and renamed example ESP32/FreeRTOS to MultiThreading/BasicMultiThreading\r\n\r\n* Added dummy files\r\n\r\n* Modified original example\r\n\r\n* Fixed BasicMultiThreading.ino\r\n\r\n* Added Example demonstrating use of queues\r\n\r\n* Extended info in BasicMultiThreading\r\n\r\n* Renamed Queues to singular Queue\r\n\r\n* Added Mutex example\r\n\r\n* Added Semaphore example\r\n\r\n* Moved info from example to README\r\n\r\n* Moved doc from Mutex to README\r\n\r\n* Added Queue README\r\n\r\n* Removed unecesary text\r\n\r\n* Fixed grammar\r\n\r\n* Increased stack size for Sempahore example\r\n\r\n* Added headers into .ino files\r\n\r\n* Added word Example at the end of title in README\r\n\r\n* removed unused line\r\n\r\n* Added forgotten README\r\n\r\n* Modified BasicMultiThreading example\r\n\r\n* Added missing S3 entry in README\r\n\r\n* moved location\r\n\r\n* Update ESP-IDF libs\r\n\r\n* Update CMakeLists.txt\r\n\r\n* Update esptool to v4.4\r\n\r\n* Add function timerAttachInterruptFlag (#7809)\r\n\r\n* Update esptool to v4.5\r\n\r\n* ADC refactoring (#7827)\r\n\r\n* Adc refactored + periman implementation\r\n\r\nPeripheral manager still needs to be checked if the implementation is right.\r\n\r\n* switched to working solution for milivolts read\r\n\r\n* Periman detachbus fix\r\n\r\n* coding style\r\n\r\n* fix CI warnings\r\n\r\n* fix FreeRTOS example\r\n\r\n* Update ETH.cpp\r\n\r\n* Update FunctionalInterruptStruct.ino\r\n\r\n* Update package_esp32_index.template.json\r\n\r\n* Update package_esp32_index.template.json\r\n\r\n* Fixes for the latest IDF v5.1\r\n\r\n* update esp-idf libs and toolchain\r\n\r\n* Turn OFF auto crystal frequency for ESP32 (needed by TWAI)\r\n\r\n* Update examples\r\n\r\n* Switch build to mostly use flags from files\r\n\r\nIncludes can not be done this way\r\n\r\n* Reorganize flag files\r\n\r\n* Optimize chip build flags further\r\n\r\n* Revert defines from file. MBEDTLS_CONFIG_FILE does not properly expand\r\n\r\n* Add support for includes and defines from file\r\n\r\n* Replace old sdk path references in platform.txt\r\n\r\n* use gcc-ar (#8013)\r\n\r\n* Makes F_CPU generic for all SoC (#8007)\r\n\r\nBased on CONFIG_ESP_DEFAULT_CPU_FREQ_MHZ that is correctly defined in the sdkconfig file for each SoC.\r\n\r\n* TIMER refactoring (#7904)\r\n\r\n* refactor using GPtimer\r\n\r\n* Updated timer HW test\r\n\r\n* fix examples\r\n\r\n* Add v2.0.7 in issue template (#7871)\r\n\r\n* refactor using GPtimer\r\n\r\n* Updated timer HW test\r\n\r\n* fix examples\r\n\r\n* Revert \"Add v2.0.7 in issue template (#7871)\"\r\n\r\nThis reverts commit fcc3b17d62ff57861f8913ca1f142fd5163b7457.\r\n\r\n* Update upload-artifact to v3 in HW CI\r\n\r\n* Revert \"Update upload-artifact to v3 in HW CI\"\r\n\r\nThis reverts commit 1ba228071718ba37c4e26d98db22f77b2a7364a6.\r\n\r\n* replace resolution with frequency\r\n\r\n* remove count_down option\r\n\r\n* countup removed from examples + header\r\n\r\n* Refactored timer object\r\n\r\n* code cleanup + examples and tests fixes\r\n\r\n* TimerAlarm fix\r\n\r\n---------\r\n\r\nCo-authored-by: Vojt\u011bch Barto\u0161ka <76958047+VojtechBartoska@users.noreply.github.com>\r\n\r\n* [Docs] ADC and Timer API Update (+some docs fixes) (#7906)\r\n\r\n* updated docs\r\n\r\n* remove hall sensor docs\r\n\r\nRemoved Hall sensor documentation as its no longer supported in IDF-5\r\n\r\n* Fixed ESPNow examples location in docs\r\n\r\n* Last timer refactored API + gpio small fix\r\n\r\n* AlarmWrite fix\r\n\r\n* Fixes APLL/PLL with RTC Frequency (#8025)\r\n\r\nlog_d() was displaying APLL for any SoC, but S3 and C3 has not such option, causing compilation errors.\r\n\r\n* Update IDF libs and fix OPI PSRAM on S3\r\n\r\n* Add setMode function HardwareSerial.c to set the esp32 uart mode for use with RS485 auto RTS (#7935)\r\n\r\n* Added setMode function to set the esp32 uart mode\r\n\r\nUsed to set the esp32 uart mode for use with RS485 Half Duplex and the auto RTS pin mode. This will set/clear the RTS pin output to control the RE/DE pin on most RS485 chips.\r\n\r\n* Add Success (bool) return in some functions\r\n\r\n* Add Success (bool) return code to some functions\r\n\r\n* Add Success (bool) return to some functions\r\n\r\n* Add Success (bool) return to some functions\r\n\r\n* Fix uartSetRxTimeout return type\r\n\r\n---------\r\n\r\nCo-authored-by: Rodrigo Garcia <rodrigo.garcia@espressif.com>\r\n\r\n* Add support for esp-elf-gdb\r\n\r\n* WFG Crashfix (#8044)\r\n\r\n* Update component libs\r\n\r\n* IDF release/v5.1 (#8061)\r\n\r\n* IDF release/v5.1 bb9200acec\r\n\r\n* Update Esp.cpp\r\n\r\n* IDF release/v5.1 420ebd208a\r\n\r\n* Update esp32-hal-psram.c\r\n\r\n* Switch SDK to be an external package\r\n\r\n* fix path (#8096)\r\n\r\n* Makes UART work at any APB Frequency (#8097)\r\n\r\nFixes HardwareSerial to work with IDF 5.1 on any CPU/APB Frequency (240MHz to 10MHZ), including user created low power modes.\r\n\r\n* Add required callbacks for TinyUSB DFU\r\n\r\n* Update version to 3.0.0\r\n\r\n* Add ESP.getCoreVersion() and update ESP.getChipModel()\r\n\r\n* Update timer hal for the latest 5.1\r\n\r\n* Use separate RX and TX buffer sizes in HTTP client\r\n\r\noptimizes download by allowing up to 4K packets to be received\r\n\r\n* Rename clock tree enum name in latest 5.1\r\n\r\n* ESP32-H4 support was removed in ESP-IDF v5.1\r\n\r\n* IDF release/v5.1 2004bf4e11 (#8165)\r\n\r\n* Deinit previous bus first (#8180)\r\n\r\n* TIMER - add timer_started flag, fix timerEnd() + timer HW test (#8135)\r\n\r\n* Add timer_started flag and stop before disable\r\n\r\n* Fix timer HW test\r\n\r\n* TOUCH - Peripheral manager implementation (#8129)\r\n\r\n* Touch periman implemented\r\n\r\n* Deinit previous bus first\r\n\r\n* LEDC Refactoring - Peripheral manager implemented (#8126)\r\n\r\n* LEDC periman implementation\r\n\r\n* Fix examples\r\n\r\n* Rework tone\r\n\r\n* Update ledc docs\r\n\r\n* fix missing bracket\r\n\r\n* Update analog funtions esp32-hal.h\r\n\r\n* Update CameraWebServer example\r\n\r\n* Fix HiFreq_ADC example\r\n\r\n* minor fixes - typos\r\n\r\n* Avoid calling tone/notone when tone already runs on dif. pin\r\n\r\n* Remove unused channels_resolution\r\n\r\n* GPIO - Peripheral manager implementation (#8179)\r\n\r\n* periman-implementation\r\n\r\n* fix RGB_BUILTIN and remove space\r\n\r\n* Enforces more consistency into Peripheral Manager (#8188)\r\n\r\n* Avoid log_i() message the first time a bus is assigned\r\n\r\n* Prevent operation with ESP32_BUS_TYPE_INIT\r\n\r\n* keeps coding style\r\n\r\n* do not print messages on INIT bus type\r\n\r\n* [Arduino Core 3.0.0] RMT IDF5.1 Refactoring (#7994)\r\n\r\n* RMT IDF5.1 refactoring\r\n\r\n* Fixes initial value setting\r\n\r\n* removed rmtRead() with user callback\r\n\r\n* simplify/remove Read data structure\r\n\r\n* Deep API simplification\r\n\r\n* fixes the examples\r\n\r\n* fix rmt.h\r\n\r\n* adds support to APB different frequencies\r\n\r\n* fixes CI and not defined RGB_BUILTIN\r\n\r\n* new RMT API and examples\r\n\r\n* fixing commentaties\r\n\r\n* Update esp32-hal-rgb-led.c\r\n\r\n* changes Filter API\r\n\r\n* Fixes example with Filter API\r\n\r\n* Update PlatformIO scripts for the upcoming 3.0 core (#8183)\r\n\r\n* Update PlatformIO scripts for the upcoming 3.0 core\r\n\r\n* Dynamically select proper framework-arduinoespressif32-libs package\r\n\r\nWith this change the dev-platform will be dynamically configured to\r\npull the latest .zip package with precompiled libraries from extracted from\r\npackage_esp32_index.template.json\r\n\r\n* free memory on detach (#8264)\r\n\r\n* SPI - Peripheral manager implementation  (#8255)\r\n\r\n* spi periman implementation\r\n\r\n* fix header file\r\n\r\n* remove unused struct\r\n\r\n* fix missing braces\r\n\r\n* Update esp32-hal-rmt.c (#8216)\r\n\r\nOptimizing Peripheral Manager Test\r\n\r\n* I2C - Peripheral manager implementation (#8220)\r\n\r\n* i2c-master periman initial commit\r\n\r\n* i2c-master make detachbus static + comment remove\r\n\r\n* i2c-slave periman implementation\r\n\r\n* SetPinBus to INIT on i2cDeinits\r\n\r\n* Fix slave pins deinit\r\n\r\n* remove dbg logs\r\n\r\n* set ret to ESP_FAIL instead of returning\r\n\r\n* Fix warnings in hal-spi caused by pariman transition\r\n\r\n* Update esptool.py to version 4.6\r\n\r\n* Add platform support for ESP_SR\r\n\r\n* Add USB Type and valid pin check to periman\r\n\r\n* replace bus with spi->num+1 (#8279)\r\n\r\n* Remove default pins from SPI HAL\r\n\r\n* Add commented out handlers for esptool.js in TinyUSB CDC\r\n\r\nFor future use\r\n\r\n* Add build defines for host os and fqbn (for debug purposes)\r\n\r\n* Provide proper memory caps total size\r\n\r\n* Update Esp.cpp\r\n\r\n* SDMMC - Peripheral manager implementation (#8289)\r\n\r\n* sdmmc periman implemented\r\n\r\n* save pins when SOC_SDMMC_USE_IOMUX\r\n\r\n* IDF release/v5.1 4bc762621d (#8292)\r\n\r\n* Adds missing pinMode (#8312)\r\n\r\n* Adds missing pinMode\r\n\r\nThe example code lacks a pinMode() to initialize the GPIO 0 (button). In Arduino Core 3.0.0, it prints an error message when trying to read a not initialized GPIO.\r\n\r\n* Update KeyboardLogout.ino\r\n\r\nAdds <buttonPin> to keep code standard\r\n\r\n* Update KeyboardReprogram.ino\r\n\r\nAdds <buttonPin> to keep code standard\r\n\r\n* LEDC Fade implementation (#8338)\r\n\r\n* fade API + pointer fixes\r\n\r\n* Add fade api\r\n\r\n* Add fade example\r\n\r\n* update ledc docs\r\n\r\n* remove unused variables\r\n\r\n* fix path to example\r\n\r\n* Adds USB to Peripheral Manager - Arduino Core 3.0.0 (#8335)\r\n\r\n* ETHERNET - Peripheral manager implementation (#8297)\r\n\r\n* Peripheral manager implemented\r\n\r\n* remove unused variable\r\n\r\n* Add all RMII pins\r\n\r\n* fix typo\r\n\r\n* Adds HardwareSerial to Peripheral Manager Arduino 3.0.0 (#8328)\r\n\r\n* Do not limit ETHERNET in periman to only ESP32. SPI is also an option\r\n\r\n* Initial support for ESP32-C6 (#8337)\r\n\r\n* Add checks for SOC defines (#8351)\r\n\r\n* Add checks for SOC defines\r\n\r\n* Add SoC checks to BLE library\r\n\r\n* fix i2c compilation error\r\n\r\n* fix wrong placement of include\r\n\r\n* add check to SPI library\r\n\r\n* add check to USB library\r\n\r\n* add checks to Wire library\r\n\r\n* Feature/esp32h2 support (#8373)\r\n\r\n* Initial support for ESP32H2\r\n\r\n* Additional changes for ESP32H2\r\n\r\n* Update libs for ESP32H2\r\n\r\n* Fix flashing on ESP32-H2\r\n\r\n* Fix GPIO Configs for ESP32-C6 and ESP32-H2\r\n\r\n* Update Timer test sketch\r\n\r\n* Fix upload flash parameters\r\n\r\n* Use ets_write_char_uart instead of ets_printf in log_printfv\r\n\r\n* Print full chip report when log level is sufficient (#8282)\r\n\r\n* ESP32-C3 does not have ets_write_char_uart\r\n\r\n* Fix BLE gap event name\r\n\r\n* HW Testing - Pytest update (#8389)\r\n\r\n* update tests requirements\r\n\r\n* remove already handled components\r\n\r\n* Update version of pytest\r\n\r\n* Add missing ESP32-H2 to hil.yml\r\n\r\n* Updated FreeRTOS names (#8418)\r\n\r\n* HW Testing -  ESP32-C6 + ESP32-H2 fixes (#8404)\r\n\r\n* add C6/H2 to tests cfg.json\r\n\r\n* remove ,\r\n\r\n* workflow runs-on runner by matrix\r\n\r\n* Add need for arduino tag to select runner\r\n\r\n* Add cryptography to requirements.txt\r\n\r\n* Removed duplicate TX1 define for H2 (#8402)\r\n\r\n* Fix broken examples\r\n\r\n* Fixes RMT filter & idle timing and setup (#8359)\r\n\r\n* Fixes Filter and Idle parameter to uint32\r\n\r\n* Fixes Filter and Idle setup\r\n\r\n* Fixes it to 5.1Libs branch\r\n\r\n* fix RMT CLK source and Filter API\r\n\r\n* fixes missing ;\r\n\r\n* fixes missing ;\r\n\r\n* fixes RMT example\r\n\r\n* IDF release/v5.1 a7b62bbcaf (#8438)\r\n\r\n* Add workflow to build executables from python scripts (#8290)\r\n\r\n* Add workflow to build executables from python scripts\r\n\r\n* Push binary to tools\r\n\r\n* Enable executable signing on Windows\r\n\r\n* Update get.py\r\n\r\n* Push binary to tools\r\n\r\n* Try with multiple files\r\n\r\n* Try more actions\r\n\r\n* Try powershell\r\n\r\n* Restore tools so they do not get rebuilt\r\n\r\n* Finalize scripts\r\n\r\n* Push binary to tools\r\n\r\n* App rollback should be after PSRAM is initialized\r\n\r\n* Correcting RX1 to GPIO4 and TX1 to GPIO5 to be consistent with documentation. Previous pin use works but is inconsistent with C6 docs.\r\n\r\n* Fixes Memory Leak (#8486)\r\n\r\n* fixes preprocessor test (#8485)\r\n\r\n* fixes preprocessor test\r\n\r\nWhen using `#define USE_SOFT_AP` \r\nChange\r\n`&& not USE_SOFT_AP` ==> `&& !defined(USE_SOFT_AP)`\r\n\r\n* Adds any BLE capable device in WiFiProv.ino\r\n\r\nRemoving ESP32 restriction for BLE Provisioning.\r\n\r\n* fix flash mode read out for C6\r\n\r\n* Add option for custom partitions without restrictions\r\n\r\n* SD_MMC update (#8298)\r\n\r\n* Updated SD_MMC lib and examples\r\n\r\n* Removed getter implementation and commented usage in examples\r\n\r\n* squashed updates\r\n\r\n* IDF release/v5.1 f0437b945f (#8599)\r\n\r\n* Update package_esp32_index.template.json\r\n\r\n* Fix printf format build error in BTAdvertisedDeviceSet.cpp\r\n\r\n---------\r\n\r\nCo-authored-by: Pedro Minatel <pedro.minatel@espressif.com>\r\nCo-authored-by: Rodrigo Garcia <rodrigo.garcia@espressif.com>\r\nCo-authored-by: Ha Thach <thach@tinyusb.org>\r\nCo-authored-by: Martin Turski <quiret@vfemail.net>\r\nCo-authored-by: raviypujar <raviypujar@gmail.com>\r\nCo-authored-by: Jason2866 <24528715+Jason2866@users.noreply.github.com>\r\nCo-authored-by: Tom\u00e1\u0161 Piln\u00fd <34927466+PilnyTomas@users.noreply.github.com>\r\nCo-authored-by: Jan Proch\u00e1zka <90197375+P-R-O-C-H-Y@users.noreply.github.com>\r\nCo-authored-by: Daniel Berlin <dberlin@dberlin.org>\r\nCo-authored-by: Nima Askari (\u0646\u06cc\u0645\u0627 \u0639\u0633\u06a9\u0631\u06cc) <nimaltd@yahoo.com>\r\nCo-authored-by: rtpmsys <106180646+rtpmsys@users.noreply.github.com>\r\nCo-authored-by: bytiful <55647551+bytiful@users.noreply.github.com>\r\nCo-authored-by: tmfarrington <tmfarrington@users.noreply.github.com>\r\nCo-authored-by: Krzysiek S <chris.streh@gmail.com>\r\nCo-authored-by: surt <carl.olsson@gmail.com>\r\nCo-authored-by: Max Scheffler <max.scheffler@pm.me>\r\nCo-authored-by: Clemens Kirchgatterer <clemens@1541.org>\r\nCo-authored-by: Peter Pan's Techland <twinkle-pirate@hotmail.com>\r\nCo-authored-by: Roman <programmeofficemilkyway@gmail.com>\r\nCo-authored-by: Eistee <Eistee82@users.noreply.github.com>\r\nCo-authored-by: David McCurley <44048235+mrengineer7777@users.noreply.github.com>\r\nCo-authored-by: Gaya3N25 <30388176+Gaya3N25@users.noreply.github.com>\r\nCo-authored-by: renebohne <rene.bohne@gmail.com>\r\nCo-authored-by: Oliv\u00e9r Rem\u00e9ny <25034625+remenyo@users.noreply.github.com>\r\nCo-authored-by: davidk88 <david.kotar@gmail.com>\r\nCo-authored-by: Vojt\u011bch Barto\u0161ka <76958047+VojtechBartoska@users.noreply.github.com>\r\nCo-authored-by: James Armstrong <jamesarmstrong3@me.com>\r\nCo-authored-by: Valerii Koval <valeros@users.noreply.github.com>\r\nCo-authored-by: Peter G. Jensen <root@petergjoel.dk>",
            "additions": 40,
            "deletions": 4,
            "change_type": "MODIFY",
            "diff": "@@ -12,9 +12,10 @@\n // See the License for the specific language governing permissions and\n // limitations under the License.\n #include \"USB.h\"\n-#if CONFIG_IDF_TARGET_ESP32C3 || CONFIG_IDF_TARGET_ESP32S3\n+#if SOC_USB_SERIAL_JTAG_SUPPORTED\n \n #include \"esp32-hal.h\"\n+#include \"esp32-hal-periman.h\"\n #include \"HWCDC.h\"\n #include \"freertos/FreeRTOS.h\"\n #include \"freertos/semphr.h\"\n@@ -22,16 +23,20 @@\n #include \"freertos/ringbuf.h\"\n #include \"esp_intr_alloc.h\"\n #include \"soc/periph_defs.h\"\n+#include \"soc/io_mux_reg.h\"\n+#pragma GCC diagnostic ignored \"-Wvolatile\"\n #include \"hal/usb_serial_jtag_ll.h\"\n+#pragma GCC diagnostic warning \"-Wvolatile\"\n+#include \"rom/ets_sys.h\"\n \n ESP_EVENT_DEFINE_BASE(ARDUINO_HW_CDC_EVENTS);\n \n static RingbufHandle_t tx_ring_buf = NULL;\n-static xQueueHandle rx_queue = NULL;\n+static QueueHandle_t rx_queue = NULL;\n static uint8_t rx_data_buf[64] = {0};\n static intr_handle_t intr_handle = NULL;\n static volatile bool initial_empty = false;\n-static xSemaphoreHandle tx_lock = NULL;\n+static SemaphoreHandle_t tx_lock = NULL;\n \n // workaround for when USB CDC is not connected\n static uint32_t tx_timeout_ms = 0;\n@@ -168,6 +173,28 @@ void HWCDC::onEvent(arduino_hw_cdc_event_t event, esp_event_handler_t callback){\n     arduino_hw_cdc_event_handler_register_with(ARDUINO_HW_CDC_EVENTS, event, callback, this);\n }\n \n+bool HWCDC::deinit(void * busptr) \n+{\n+    // avoid any recursion issue with Peripheral Manager perimanSetPinBus() call\n+    static bool running = false;\n+    if (running) return true;\n+    running = true; \n+    // Setting USB D+ D- pins\n+    bool retCode = true;\n+    retCode &= perimanSetPinBus(USB_DM_GPIO_NUM, ESP32_BUS_TYPE_INIT, NULL);\n+    retCode &= perimanSetPinBus(USB_DP_GPIO_NUM, ESP32_BUS_TYPE_INIT, NULL);\n+    if (retCode) {\n+        // Force the host to re-enumerate (BUS_RESET)\n+        pinMode(USB_DM_GPIO_NUM, OUTPUT_OPEN_DRAIN);\n+        pinMode(USB_DP_GPIO_NUM, OUTPUT_OPEN_DRAIN);\n+        digitalWrite(USB_DM_GPIO_NUM, LOW);\n+        digitalWrite(USB_DP_GPIO_NUM, LOW);\n+    }\n+    // release the flag\n+    running = false;\n+    return retCode;\n+}\n+\n void HWCDC::begin(unsigned long baud)\n {\n     if(tx_lock == NULL) {\n@@ -193,6 +220,14 @@ void HWCDC::begin(unsigned long baud)\n         end();\n         return;\n     }\n+    if (perimanSetBusDeinit(ESP32_BUS_TYPE_USB, HWCDC::deinit)) {\n+        // Setting USB D+ D- pins\n+        perimanSetPinBus(USB_DM_GPIO_NUM, ESP32_BUS_TYPE_USB, (void *) this);\n+        perimanSetPinBus(USB_DP_GPIO_NUM, ESP32_BUS_TYPE_USB, (void *) this);\n+    } else {\n+        log_e(\"Serial JTAG Pins can't be set into Peripheral Manager.\");\n+    }\n+\n     usb_serial_jtag_ll_txfifo_flush();\n }\n \n@@ -212,6 +247,7 @@ void HWCDC::end()\n         esp_event_loop_delete(arduino_hw_cdc_event_loop_handle);\n         arduino_hw_cdc_event_loop_handle = NULL;\n     }\n+    HWCDC::deinit(this);\n }\n \n void HWCDC::setTxTimeoutMs(uint32_t timeout){\n@@ -408,4 +444,4 @@ HWCDC USBSerial;\n #endif\n #endif\n \n-#endif /* CONFIG_TINYUSB_CDC_ENABLED */\n+#endif /* SOC_USB_SERIAL_JTAG_SUPPORTED */\n",
            "comment_added_diff": {
                "178": "    // avoid any recursion issue with Peripheral Manager perimanSetPinBus() call",
                "182": "    // Setting USB D+ D- pins",
                "187": "        // Force the host to re-enumerate (BUS_RESET)",
                "193": "    // release the flag",
                "224": "        // Setting USB D+ D- pins"
            },
            "comment_deleted_diff": {},
            "comment_modified_diff": {}
        }
    ],
    "DNSServer.cpp": [],
    "BLEServer.cpp": [
        {
            "commit": "5d614f52389b8b7b21f93838e92c2fbbc6d0b48d",
            "timestamp": "2022-12-14T17:17:20+02:00",
            "author": "RM-Alltrons",
            "commit_message": "Added onDisconnect with gatt parameters to BLUEServerCallbacks, equivalent to the existing onConnect (#7559)\n\nCo-authored-by: Admin <admin@wlan-244060.nbw.tue.nl>",
            "additions": 6,
            "deletions": 0,
            "change_type": "MODIFY",
            "diff": "@@ -374,6 +374,12 @@ void BLEServerCallbacks::onDisconnect(BLEServer* pServer) {\n \tlog_d(\"BLEServerCallbacks\", \"<< onDisconnect()\");\n } // onDisconnect\n \n+void BLEServerCallbacks::onDisconnect(BLEServer* pServer, esp_ble_gatts_cb_param_t* param) {\n+\tlog_d(\"BLEServerCallbacks\", \">> onDisconnect(): Default\");\n+\tlog_d(\"BLEServerCallbacks\", \"Device: %s\", BLEDevice::toString().c_str());\n+\tlog_d(\"BLEServerCallbacks\", \"<< onDisconnect()\");\n+} // onDisconnect\n+\n void BLEServerCallbacks::onMtuChanged(BLEServer* pServer, esp_ble_gatts_cb_param_t* param) {\n \tlog_d(\"BLEServerCallbacks\", \">> onMtuChanged(): Default\");\n \tlog_d(\"BLEServerCallbacks\", \"Device: %s MTU: %d\", BLEDevice::toString().c_str(), param->mtu.mtu);\n",
            "comment_added_diff": {
                "381": "} // onDisconnect"
            },
            "comment_deleted_diff": {},
            "comment_modified_diff": {}
        },
        {
            "commit": "6f7a1ca76ada4d705d79ce863450c91349327a79",
            "timestamp": "2023-10-05T14:54:25+03:00",
            "author": "Me No Dev",
            "commit_message": "ESP-IDF v5.1 (#7733)\n\n* Initial changes to compile under ESP-IDF v5.1\r\n\r\n* Initial import for ESP-IDF v5.1 libs\r\n\r\n* Update toolchain\r\n\r\n* Update esp32-hal-psram.c\r\n\r\n* Add missing LDs\r\n\r\n* Update platform.txt\r\n\r\n* Stop some CI jobs, because they will always fail\r\n\r\n* Fix examples\r\n\r\n* Update app_httpd.cpp\r\n\r\n* Update ResetReason.ino\r\n\r\n* Warnings fixes\r\n\r\n* Added the example guideline and template (#7665)\r\n\r\n* Added the example guideline and template\r\n\r\n* PR review changes with some typos and grammar fixes\r\n\r\n* Changes according to the PR review\r\n\r\n* Added ESP32-S3 link to the datasheet (#7738)\r\n\r\n* Update HiFreq_ADC.ino\r\n\r\n* Replace periph_ctrl.h use because of deprecation\r\n\r\n* Replace esp_spi_flash.h use because of deprecation\r\n\r\n* Add includes to male mDNS::enableWorkstation compile\r\n\r\n* Fix ssl_client mbedtls_pk_parse_key callback\r\n\r\n* Update temperature sensor driver\r\n\r\n* Allow sketch_utils to compile with arduino-cli\r\n\r\n* Run CI with arduino-cli\r\n\r\n* Fix arduino-cli CI build on Windows\r\n\r\n* Refactor platform.txt to not use components installed through the board manager when running from git\r\n\r\n* Initial Peripheral Manager Implementation\r\n\r\n* Update SigmaDelta driver to use the new ESP-IDF driver API\r\n\r\n* Small improvements to peripheral manager and SigmaDelta\r\n\r\n* Remove deleted function from SigmaDelta header\r\n\r\n* Update DAC driver to use the new ESP-IDF driver API\r\n\r\n* Adds softAp(String) to make it compatible with ESP8266 (#7801)\r\n\r\n* Fix commentary (#7800)\r\n\r\nMinor fix based on observation done in https://github.com/espressif/arduino-esp32/issues/7795#issuecomment-1416868611\r\n\r\n* add adafruit new board feather esp32s2 reserve tft (#7794)\r\n\r\n* bugfix: add <stdint.h> for uint8_t to avoid compilation failure (GCC 11.2.0) (#7744)\r\n\r\n* Adding 3rd party boards for VALTRACK-V4-VTS-ESP32-C3 & VALTRACK-V4-MFW-ESP32-C3 (#7735)\r\n\r\n* Added VALTRACK-V4-VTS-ESP32-C3 board definition\r\n\r\nCreated pins_arduino.h & made changes to boards.txt with necessary changes\r\n\r\n* Modified the URL\r\n\r\n* Renamed json\r\n\r\n* renamed all auRL\r\n\r\n* Adding VALTRACK-V4 series board definitions\r\n\r\nAdded VALTRACK-V4-VTS-ESP32C3 & VALTRACK-V4-MFW-ESP32-C3 board variants\r\n\r\n* Adding VALTRACK-V4 series board definitions\r\n\r\nAdded VALTRACK-V4-VTS-ESP32C3 & VALTRACK-V4-MFW-ESP32-C3 board variants\r\n\r\n* Reverted package_esp32_index.template.json\r\n\r\nrestored package_esp32_index.template.json from edits\r\n\r\n* Reverted package_esp32_index.template.json\r\n\r\nAdded new line to package_esp32_index.template.json\r\n\r\n* Update Platformio CI (#7725)\r\n\r\n* WiFiClient example fix (#7711)\r\n\r\n* Modified WiFiClient example to use thingspeak instead of non-functionig sparkfun\r\n\r\n* Moved instructions to README\r\n\r\n* Fixed spelling\r\n\r\n* Added link to S3 datasheet\r\n\r\n---------\r\n\r\nCo-authored-by: Jan Proch\u00e1zka <90197375+P-R-O-C-H-Y@users.noreply.github.com>\r\n\r\n* Mirror update from Heltec repository (#7709)\r\n\r\nHeltec updated the I2C pins in https://github.com/Heltec-Aaron-Lee/WiFi_Kit_series/commit/b10f4bf85d13fd01be80dcdb0eb59e6a8c8ba19a\r\n\r\n* Fixes BLE data printing (#7699)\r\n\r\n* Fixes BLE data printing\r\n\r\nBLE data has no '\\0' terminator, therefore it can't be printed as a regular C string.\r\nThis fix just prints the BLE data based on its length.\r\n\r\n* Simplify printing to a single call\r\n\r\n* split menu options + lora_32_V3 fix (#7697)\r\n\r\n* Change header gaurd name (#7696)\r\n\r\n* Fix Name (#7691)\r\n\r\nWrong name in definitions.\r\n\r\n* Fix error in WiFiClient.cpp where the connect function fails for timeouts below 1 second (#7686)\r\n\r\n* Update WiFiClient.cpp\r\n\r\nThis change will allow specifying connect timeouts below 1 second. Without this change, if connect timeouts under 1 second are given, the connect defaults to 0ms and fails. \r\nThis will also allow timeouts in fractions of seconds, e.g. 1500ms. Without this change, connect timeouts are truncated to full second increments.\r\n\r\n* Make parameter timeout_ms clear\r\n\r\n* Change connection timeout_ms name for clarity\r\n\r\n---------\r\n\r\nCo-authored-by: Rodrigo Garcia <rodrigo.garcia@espressif.com>\r\n\r\n* fixed the function header (#7674)\r\n\r\n* fixed the function header\r\n\r\n* fixed function name and paramaters\r\n\r\n---------\r\n\r\nCo-authored-by: Jan Procha\u0301zka <90197375+P-R-O-C-H-Y@users.noreply.github.com>\r\n\r\n* Ticker fix solving #6155 (#7664)\r\n\r\n* Wrapped Ticker functions with #pragma disabling -Wcast-function-type\r\n\r\n* Revert \"Wrapped Ticker functions with #pragma disabling -Wcast-function-type\"\r\n\r\nThis reverts commit 160be7e67a10d01b6e44c4bf2521c0ccd6348976.\r\n\r\n* Fixed Ticker example\r\n\r\n* Modified Ticker example\r\n\r\n* Fixed LED_BUILTIN err for ESP32\r\n\r\n---------\r\n\r\nCo-authored-by: Jan Proch\u00e1zka <90197375+P-R-O-C-H-Y@users.noreply.github.com>\r\n\r\n* setPins fix ESP32 \"specified pins are not supported by this chip.\" (#7646)\r\n\r\n[ESP32: SDMMCFS::begin hardcodes the usage of slot 1, only check if the pins match slot 1 pins.]\r\n\r\nsetPins() was testing pins D1, D2 and D3 all against D1 ... fine in 1 pin mode when all are -1 not so much if you're trying to get 4 pin mode working.\r\nI now see this function doesn't really do anything on the ESP32...accept now correctly checks that you are trying to use the slot 1 pins.\r\n\r\nCo-authored-by: Jan Proch\u00e1zka <90197375+P-R-O-C-H-Y@users.noreply.github.com>\r\n\r\n* Allow passing IP as connect method parameter in WiFiClientSecure and skip unnecessary host-ip conversions (#7643)\r\n\r\n* Add LED_BUILTIN* definitions and initialization for LEDs to stop them floating. (#7636)\r\n\r\nCo-authored-by: Rodrigo Garcia <rodrigo.garcia@espressif.com>\r\n\r\n* Expand path to tinuf2 image when checking existence in platformio-build.py (#7631)\r\n\r\n* Expand path to tinuf2 image when checking existence\r\n\r\n* More isFiles fixed\r\n\r\n* Remove (useless) trailing semicolon from Print.cpp (#7622)\r\n\r\n* ADD: New variant Edgebox-ESP-100 (#7771)\r\n\r\n* ADD: New variant Edgebox-ESP-100\r\n\r\n* FIX: Edgebox-ESP-100 Board.txt usb mode option change back to default value as ESP32S3\r\n\r\n* Add Crabik Slot ESP32-S3 board (#7790)\r\n\r\n* Added Crabik Slot ESP32-S3\r\n\r\n* Adding CPU frequency settings and removing excess from partition scheme settings\r\n\r\n* new variant LilyGO T-Display-S3 (#7763)\r\n\r\n* new variant LilyGO T-Display-S3\r\n\r\nhttps://github.com/Xinyuan-LilyGO/T-Display-S3\r\n\r\n* Add boards.txt definition\r\n\r\n---------\r\n\r\nCo-authored-by: Me No Dev <me-no-dev@users.noreply.github.com>\r\n\r\n* Update get.py to support Apple ARM64\r\n\r\n* Update package_esp32_index.template.json\r\n\r\n* WString Return bool (#7774)\r\n\r\n* Add Roboheart Hercules development board to the esp32-core (#7672)\r\n\r\n* added Roboheart Hercules pin definitions and board.txt entries\r\n\r\n* added package_roboheat.json for prototyping\r\n\r\n* Roboheart Hercules pins\r\n\r\n* Updated the pins\r\n\r\n* Delete package_roboheart.json\r\n\r\n* Requested changes\r\n\r\n---------\r\n\r\nCo-authored-by: renebohne <rene.bohne@gmail.com>\r\n\r\n* Reword \"ESP-IDF as Component\" (#7812)\r\n\r\nI think \"Arduino as an ESP-IDF component\" or just \"As ESP-IDF component\" instead of  \"ESP-IDF as Component\" is more correct way to name the link.\r\n\r\n1. \"ESP-IDF as Component\" would imply that ESP-IDF is some sort of library for Arduino, which is (IMO) misleading, because it's true the other way around.\r\n2. It's written as \"Arduino as an ESP-IDF component\" on the webpage it points to as well.\r\n\r\n- Also I removed the capitalization from \"Component\" as I have not found a reason why is it capitalized.\r\n\r\n* add new board Adafruit Feather ESP32-S3 Reverse TFT (#7811)\r\n\r\n* Multi threading examples (tasks, queues, semaphores, mutexes) (#7660)\r\n\r\n* Moved and renamed example ESP32/FreeRTOS to MultiThreading/BasicMultiThreading\r\n\r\n* Added dummy files\r\n\r\n* Modified original example\r\n\r\n* Fixed BasicMultiThreading.ino\r\n\r\n* Added Example demonstrating use of queues\r\n\r\n* Extended info in BasicMultiThreading\r\n\r\n* Renamed Queues to singular Queue\r\n\r\n* Added Mutex example\r\n\r\n* Added Semaphore example\r\n\r\n* Moved info from example to README\r\n\r\n* Moved doc from Mutex to README\r\n\r\n* Added Queue README\r\n\r\n* Removed unecesary text\r\n\r\n* Fixed grammar\r\n\r\n* Increased stack size for Sempahore example\r\n\r\n* Added headers into .ino files\r\n\r\n* Added word Example at the end of title in README\r\n\r\n* removed unused line\r\n\r\n* Added forgotten README\r\n\r\n* Modified BasicMultiThreading example\r\n\r\n* Added missing S3 entry in README\r\n\r\n* moved location\r\n\r\n* Update ESP-IDF libs\r\n\r\n* Update CMakeLists.txt\r\n\r\n* Update esptool to v4.4\r\n\r\n* Add function timerAttachInterruptFlag (#7809)\r\n\r\n* Update esptool to v4.5\r\n\r\n* ADC refactoring (#7827)\r\n\r\n* Adc refactored + periman implementation\r\n\r\nPeripheral manager still needs to be checked if the implementation is right.\r\n\r\n* switched to working solution for milivolts read\r\n\r\n* Periman detachbus fix\r\n\r\n* coding style\r\n\r\n* fix CI warnings\r\n\r\n* fix FreeRTOS example\r\n\r\n* Update ETH.cpp\r\n\r\n* Update FunctionalInterruptStruct.ino\r\n\r\n* Update package_esp32_index.template.json\r\n\r\n* Update package_esp32_index.template.json\r\n\r\n* Fixes for the latest IDF v5.1\r\n\r\n* update esp-idf libs and toolchain\r\n\r\n* Turn OFF auto crystal frequency for ESP32 (needed by TWAI)\r\n\r\n* Update examples\r\n\r\n* Switch build to mostly use flags from files\r\n\r\nIncludes can not be done this way\r\n\r\n* Reorganize flag files\r\n\r\n* Optimize chip build flags further\r\n\r\n* Revert defines from file. MBEDTLS_CONFIG_FILE does not properly expand\r\n\r\n* Add support for includes and defines from file\r\n\r\n* Replace old sdk path references in platform.txt\r\n\r\n* use gcc-ar (#8013)\r\n\r\n* Makes F_CPU generic for all SoC (#8007)\r\n\r\nBased on CONFIG_ESP_DEFAULT_CPU_FREQ_MHZ that is correctly defined in the sdkconfig file for each SoC.\r\n\r\n* TIMER refactoring (#7904)\r\n\r\n* refactor using GPtimer\r\n\r\n* Updated timer HW test\r\n\r\n* fix examples\r\n\r\n* Add v2.0.7 in issue template (#7871)\r\n\r\n* refactor using GPtimer\r\n\r\n* Updated timer HW test\r\n\r\n* fix examples\r\n\r\n* Revert \"Add v2.0.7 in issue template (#7871)\"\r\n\r\nThis reverts commit fcc3b17d62ff57861f8913ca1f142fd5163b7457.\r\n\r\n* Update upload-artifact to v3 in HW CI\r\n\r\n* Revert \"Update upload-artifact to v3 in HW CI\"\r\n\r\nThis reverts commit 1ba228071718ba37c4e26d98db22f77b2a7364a6.\r\n\r\n* replace resolution with frequency\r\n\r\n* remove count_down option\r\n\r\n* countup removed from examples + header\r\n\r\n* Refactored timer object\r\n\r\n* code cleanup + examples and tests fixes\r\n\r\n* TimerAlarm fix\r\n\r\n---------\r\n\r\nCo-authored-by: Vojt\u011bch Barto\u0161ka <76958047+VojtechBartoska@users.noreply.github.com>\r\n\r\n* [Docs] ADC and Timer API Update (+some docs fixes) (#7906)\r\n\r\n* updated docs\r\n\r\n* remove hall sensor docs\r\n\r\nRemoved Hall sensor documentation as its no longer supported in IDF-5\r\n\r\n* Fixed ESPNow examples location in docs\r\n\r\n* Last timer refactored API + gpio small fix\r\n\r\n* AlarmWrite fix\r\n\r\n* Fixes APLL/PLL with RTC Frequency (#8025)\r\n\r\nlog_d() was displaying APLL for any SoC, but S3 and C3 has not such option, causing compilation errors.\r\n\r\n* Update IDF libs and fix OPI PSRAM on S3\r\n\r\n* Add setMode function HardwareSerial.c to set the esp32 uart mode for use with RS485 auto RTS (#7935)\r\n\r\n* Added setMode function to set the esp32 uart mode\r\n\r\nUsed to set the esp32 uart mode for use with RS485 Half Duplex and the auto RTS pin mode. This will set/clear the RTS pin output to control the RE/DE pin on most RS485 chips.\r\n\r\n* Add Success (bool) return in some functions\r\n\r\n* Add Success (bool) return code to some functions\r\n\r\n* Add Success (bool) return to some functions\r\n\r\n* Add Success (bool) return to some functions\r\n\r\n* Fix uartSetRxTimeout return type\r\n\r\n---------\r\n\r\nCo-authored-by: Rodrigo Garcia <rodrigo.garcia@espressif.com>\r\n\r\n* Add support for esp-elf-gdb\r\n\r\n* WFG Crashfix (#8044)\r\n\r\n* Update component libs\r\n\r\n* IDF release/v5.1 (#8061)\r\n\r\n* IDF release/v5.1 bb9200acec\r\n\r\n* Update Esp.cpp\r\n\r\n* IDF release/v5.1 420ebd208a\r\n\r\n* Update esp32-hal-psram.c\r\n\r\n* Switch SDK to be an external package\r\n\r\n* fix path (#8096)\r\n\r\n* Makes UART work at any APB Frequency (#8097)\r\n\r\nFixes HardwareSerial to work with IDF 5.1 on any CPU/APB Frequency (240MHz to 10MHZ), including user created low power modes.\r\n\r\n* Add required callbacks for TinyUSB DFU\r\n\r\n* Update version to 3.0.0\r\n\r\n* Add ESP.getCoreVersion() and update ESP.getChipModel()\r\n\r\n* Update timer hal for the latest 5.1\r\n\r\n* Use separate RX and TX buffer sizes in HTTP client\r\n\r\noptimizes download by allowing up to 4K packets to be received\r\n\r\n* Rename clock tree enum name in latest 5.1\r\n\r\n* ESP32-H4 support was removed in ESP-IDF v5.1\r\n\r\n* IDF release/v5.1 2004bf4e11 (#8165)\r\n\r\n* Deinit previous bus first (#8180)\r\n\r\n* TIMER - add timer_started flag, fix timerEnd() + timer HW test (#8135)\r\n\r\n* Add timer_started flag and stop before disable\r\n\r\n* Fix timer HW test\r\n\r\n* TOUCH - Peripheral manager implementation (#8129)\r\n\r\n* Touch periman implemented\r\n\r\n* Deinit previous bus first\r\n\r\n* LEDC Refactoring - Peripheral manager implemented (#8126)\r\n\r\n* LEDC periman implementation\r\n\r\n* Fix examples\r\n\r\n* Rework tone\r\n\r\n* Update ledc docs\r\n\r\n* fix missing bracket\r\n\r\n* Update analog funtions esp32-hal.h\r\n\r\n* Update CameraWebServer example\r\n\r\n* Fix HiFreq_ADC example\r\n\r\n* minor fixes - typos\r\n\r\n* Avoid calling tone/notone when tone already runs on dif. pin\r\n\r\n* Remove unused channels_resolution\r\n\r\n* GPIO - Peripheral manager implementation (#8179)\r\n\r\n* periman-implementation\r\n\r\n* fix RGB_BUILTIN and remove space\r\n\r\n* Enforces more consistency into Peripheral Manager (#8188)\r\n\r\n* Avoid log_i() message the first time a bus is assigned\r\n\r\n* Prevent operation with ESP32_BUS_TYPE_INIT\r\n\r\n* keeps coding style\r\n\r\n* do not print messages on INIT bus type\r\n\r\n* [Arduino Core 3.0.0] RMT IDF5.1 Refactoring (#7994)\r\n\r\n* RMT IDF5.1 refactoring\r\n\r\n* Fixes initial value setting\r\n\r\n* removed rmtRead() with user callback\r\n\r\n* simplify/remove Read data structure\r\n\r\n* Deep API simplification\r\n\r\n* fixes the examples\r\n\r\n* fix rmt.h\r\n\r\n* adds support to APB different frequencies\r\n\r\n* fixes CI and not defined RGB_BUILTIN\r\n\r\n* new RMT API and examples\r\n\r\n* fixing commentaties\r\n\r\n* Update esp32-hal-rgb-led.c\r\n\r\n* changes Filter API\r\n\r\n* Fixes example with Filter API\r\n\r\n* Update PlatformIO scripts for the upcoming 3.0 core (#8183)\r\n\r\n* Update PlatformIO scripts for the upcoming 3.0 core\r\n\r\n* Dynamically select proper framework-arduinoespressif32-libs package\r\n\r\nWith this change the dev-platform will be dynamically configured to\r\npull the latest .zip package with precompiled libraries from extracted from\r\npackage_esp32_index.template.json\r\n\r\n* free memory on detach (#8264)\r\n\r\n* SPI - Peripheral manager implementation  (#8255)\r\n\r\n* spi periman implementation\r\n\r\n* fix header file\r\n\r\n* remove unused struct\r\n\r\n* fix missing braces\r\n\r\n* Update esp32-hal-rmt.c (#8216)\r\n\r\nOptimizing Peripheral Manager Test\r\n\r\n* I2C - Peripheral manager implementation (#8220)\r\n\r\n* i2c-master periman initial commit\r\n\r\n* i2c-master make detachbus static + comment remove\r\n\r\n* i2c-slave periman implementation\r\n\r\n* SetPinBus to INIT on i2cDeinits\r\n\r\n* Fix slave pins deinit\r\n\r\n* remove dbg logs\r\n\r\n* set ret to ESP_FAIL instead of returning\r\n\r\n* Fix warnings in hal-spi caused by pariman transition\r\n\r\n* Update esptool.py to version 4.6\r\n\r\n* Add platform support for ESP_SR\r\n\r\n* Add USB Type and valid pin check to periman\r\n\r\n* replace bus with spi->num+1 (#8279)\r\n\r\n* Remove default pins from SPI HAL\r\n\r\n* Add commented out handlers for esptool.js in TinyUSB CDC\r\n\r\nFor future use\r\n\r\n* Add build defines for host os and fqbn (for debug purposes)\r\n\r\n* Provide proper memory caps total size\r\n\r\n* Update Esp.cpp\r\n\r\n* SDMMC - Peripheral manager implementation (#8289)\r\n\r\n* sdmmc periman implemented\r\n\r\n* save pins when SOC_SDMMC_USE_IOMUX\r\n\r\n* IDF release/v5.1 4bc762621d (#8292)\r\n\r\n* Adds missing pinMode (#8312)\r\n\r\n* Adds missing pinMode\r\n\r\nThe example code lacks a pinMode() to initialize the GPIO 0 (button). In Arduino Core 3.0.0, it prints an error message when trying to read a not initialized GPIO.\r\n\r\n* Update KeyboardLogout.ino\r\n\r\nAdds <buttonPin> to keep code standard\r\n\r\n* Update KeyboardReprogram.ino\r\n\r\nAdds <buttonPin> to keep code standard\r\n\r\n* LEDC Fade implementation (#8338)\r\n\r\n* fade API + pointer fixes\r\n\r\n* Add fade api\r\n\r\n* Add fade example\r\n\r\n* update ledc docs\r\n\r\n* remove unused variables\r\n\r\n* fix path to example\r\n\r\n* Adds USB to Peripheral Manager - Arduino Core 3.0.0 (#8335)\r\n\r\n* ETHERNET - Peripheral manager implementation (#8297)\r\n\r\n* Peripheral manager implemented\r\n\r\n* remove unused variable\r\n\r\n* Add all RMII pins\r\n\r\n* fix typo\r\n\r\n* Adds HardwareSerial to Peripheral Manager Arduino 3.0.0 (#8328)\r\n\r\n* Do not limit ETHERNET in periman to only ESP32. SPI is also an option\r\n\r\n* Initial support for ESP32-C6 (#8337)\r\n\r\n* Add checks for SOC defines (#8351)\r\n\r\n* Add checks for SOC defines\r\n\r\n* Add SoC checks to BLE library\r\n\r\n* fix i2c compilation error\r\n\r\n* fix wrong placement of include\r\n\r\n* add check to SPI library\r\n\r\n* add check to USB library\r\n\r\n* add checks to Wire library\r\n\r\n* Feature/esp32h2 support (#8373)\r\n\r\n* Initial support for ESP32H2\r\n\r\n* Additional changes for ESP32H2\r\n\r\n* Update libs for ESP32H2\r\n\r\n* Fix flashing on ESP32-H2\r\n\r\n* Fix GPIO Configs for ESP32-C6 and ESP32-H2\r\n\r\n* Update Timer test sketch\r\n\r\n* Fix upload flash parameters\r\n\r\n* Use ets_write_char_uart instead of ets_printf in log_printfv\r\n\r\n* Print full chip report when log level is sufficient (#8282)\r\n\r\n* ESP32-C3 does not have ets_write_char_uart\r\n\r\n* Fix BLE gap event name\r\n\r\n* HW Testing - Pytest update (#8389)\r\n\r\n* update tests requirements\r\n\r\n* remove already handled components\r\n\r\n* Update version of pytest\r\n\r\n* Add missing ESP32-H2 to hil.yml\r\n\r\n* Updated FreeRTOS names (#8418)\r\n\r\n* HW Testing -  ESP32-C6 + ESP32-H2 fixes (#8404)\r\n\r\n* add C6/H2 to tests cfg.json\r\n\r\n* remove ,\r\n\r\n* workflow runs-on runner by matrix\r\n\r\n* Add need for arduino tag to select runner\r\n\r\n* Add cryptography to requirements.txt\r\n\r\n* Removed duplicate TX1 define for H2 (#8402)\r\n\r\n* Fix broken examples\r\n\r\n* Fixes RMT filter & idle timing and setup (#8359)\r\n\r\n* Fixes Filter and Idle parameter to uint32\r\n\r\n* Fixes Filter and Idle setup\r\n\r\n* Fixes it to 5.1Libs branch\r\n\r\n* fix RMT CLK source and Filter API\r\n\r\n* fixes missing ;\r\n\r\n* fixes missing ;\r\n\r\n* fixes RMT example\r\n\r\n* IDF release/v5.1 a7b62bbcaf (#8438)\r\n\r\n* Add workflow to build executables from python scripts (#8290)\r\n\r\n* Add workflow to build executables from python scripts\r\n\r\n* Push binary to tools\r\n\r\n* Enable executable signing on Windows\r\n\r\n* Update get.py\r\n\r\n* Push binary to tools\r\n\r\n* Try with multiple files\r\n\r\n* Try more actions\r\n\r\n* Try powershell\r\n\r\n* Restore tools so they do not get rebuilt\r\n\r\n* Finalize scripts\r\n\r\n* Push binary to tools\r\n\r\n* App rollback should be after PSRAM is initialized\r\n\r\n* Correcting RX1 to GPIO4 and TX1 to GPIO5 to be consistent with documentation. Previous pin use works but is inconsistent with C6 docs.\r\n\r\n* Fixes Memory Leak (#8486)\r\n\r\n* fixes preprocessor test (#8485)\r\n\r\n* fixes preprocessor test\r\n\r\nWhen using `#define USE_SOFT_AP` \r\nChange\r\n`&& not USE_SOFT_AP` ==> `&& !defined(USE_SOFT_AP)`\r\n\r\n* Adds any BLE capable device in WiFiProv.ino\r\n\r\nRemoving ESP32 restriction for BLE Provisioning.\r\n\r\n* fix flash mode read out for C6\r\n\r\n* Add option for custom partitions without restrictions\r\n\r\n* SD_MMC update (#8298)\r\n\r\n* Updated SD_MMC lib and examples\r\n\r\n* Removed getter implementation and commented usage in examples\r\n\r\n* squashed updates\r\n\r\n* IDF release/v5.1 f0437b945f (#8599)\r\n\r\n* Update package_esp32_index.template.json\r\n\r\n* Fix printf format build error in BTAdvertisedDeviceSet.cpp\r\n\r\n---------\r\n\r\nCo-authored-by: Pedro Minatel <pedro.minatel@espressif.com>\r\nCo-authored-by: Rodrigo Garcia <rodrigo.garcia@espressif.com>\r\nCo-authored-by: Ha Thach <thach@tinyusb.org>\r\nCo-authored-by: Martin Turski <quiret@vfemail.net>\r\nCo-authored-by: raviypujar <raviypujar@gmail.com>\r\nCo-authored-by: Jason2866 <24528715+Jason2866@users.noreply.github.com>\r\nCo-authored-by: Tom\u00e1\u0161 Piln\u00fd <34927466+PilnyTomas@users.noreply.github.com>\r\nCo-authored-by: Jan Proch\u00e1zka <90197375+P-R-O-C-H-Y@users.noreply.github.com>\r\nCo-authored-by: Daniel Berlin <dberlin@dberlin.org>\r\nCo-authored-by: Nima Askari (\u0646\u06cc\u0645\u0627 \u0639\u0633\u06a9\u0631\u06cc) <nimaltd@yahoo.com>\r\nCo-authored-by: rtpmsys <106180646+rtpmsys@users.noreply.github.com>\r\nCo-authored-by: bytiful <55647551+bytiful@users.noreply.github.com>\r\nCo-authored-by: tmfarrington <tmfarrington@users.noreply.github.com>\r\nCo-authored-by: Krzysiek S <chris.streh@gmail.com>\r\nCo-authored-by: surt <carl.olsson@gmail.com>\r\nCo-authored-by: Max Scheffler <max.scheffler@pm.me>\r\nCo-authored-by: Clemens Kirchgatterer <clemens@1541.org>\r\nCo-authored-by: Peter Pan's Techland <twinkle-pirate@hotmail.com>\r\nCo-authored-by: Roman <programmeofficemilkyway@gmail.com>\r\nCo-authored-by: Eistee <Eistee82@users.noreply.github.com>\r\nCo-authored-by: David McCurley <44048235+mrengineer7777@users.noreply.github.com>\r\nCo-authored-by: Gaya3N25 <30388176+Gaya3N25@users.noreply.github.com>\r\nCo-authored-by: renebohne <rene.bohne@gmail.com>\r\nCo-authored-by: Oliv\u00e9r Rem\u00e9ny <25034625+remenyo@users.noreply.github.com>\r\nCo-authored-by: davidk88 <david.kotar@gmail.com>\r\nCo-authored-by: Vojt\u011bch Barto\u0161ka <76958047+VojtechBartoska@users.noreply.github.com>\r\nCo-authored-by: James Armstrong <jamesarmstrong3@me.com>\r\nCo-authored-by: Valerii Koval <valeros@users.noreply.github.com>\r\nCo-authored-by: Peter G. Jensen <root@petergjoel.dk>",
            "additions": 4,
            "deletions": 1,
            "change_type": "MODIFY",
            "diff": "@@ -4,6 +4,8 @@\n  *  Created on: Apr 16, 2017\n  *      Author: kolban\n  */\n+#include \"soc/soc_caps.h\"\n+#if SOC_BLE_SUPPORTED\n \n #include \"sdkconfig.h\"\n #if defined(CONFIG_BLUEDROID_ENABLED)\n@@ -439,4 +441,5 @@ void BLEServer::disconnect(uint16_t connId) {\n \tesp_ble_gatts_close(m_gatts_if, connId);\n }\n \n-#endif // CONFIG_BLUEDROID_ENABLED\n+#endif /* CONFIG_BLUEDROID_ENABLED */\n+#endif /* SOC_BLE_SUPPORTED */\n",
            "comment_added_diff": {},
            "comment_deleted_diff": {
                "442": "#endif // CONFIG_BLUEDROID_ENABLED"
            },
            "comment_modified_diff": {}
        }
    ],
    "BLEServer.h": [],
    "ETH.cpp": [
        {
            "commit": "a13520c9668e9a274b9c08d89d08bdd01e1767d0",
            "timestamp": "2023-02-06T14:29:58+02:00",
            "author": "Rodrigo Garcia",
            "commit_message": "Fix commentary (#7800)\n\nMinor fix based on observation done in https://github.com/espressif/arduino-esp32/issues/7795#issuecomment-1416868611",
            "additions": 1,
            "deletions": 1,
            "change_type": "MODIFY",
            "diff": "@@ -392,7 +392,7 @@ bool ETHClass::begin(uint8_t phy_addr, int power, int mdc, int mdio, eth_phy_typ\n         log_e(\"esp_eth_init error: %d\", err);\n     }\n #endif\n-    // holds a few microseconds to let DHCP start and enter into a good state\n+    // holds a few milliseconds to let DHCP start and enter into a good state\n     // FIX ME -- adresses issue https://github.com/espressif/arduino-esp32/issues/5733\n     delay(50);\n \n",
            "comment_added_diff": {
                "395": "    // holds a few milliseconds to let DHCP start and enter into a good state"
            },
            "comment_deleted_diff": {
                "395": "    // holds a few microseconds to let DHCP start and enter into a good state"
            },
            "comment_modified_diff": {
                "395": "    // holds a few microseconds to let DHCP start and enter into a good state"
            }
        },
        {
            "commit": "e2487b128d59a717ecada6cb36566addc3ddc769",
            "timestamp": "2023-10-06T13:47:54+03:00",
            "author": "Me No Dev",
            "commit_message": "[ETH] Implement SPI support, multiple interfaces and more (#8712)",
            "additions": 750,
            "deletions": 424,
            "change_type": "MODIFY",
            "diff": "@@ -20,23 +20,17 @@\n \n #include \"ETH.h\"\n #include \"esp_system.h\"\n-#if ESP_IDF_VERSION_MAJOR > 3\n-    #include \"esp_event.h\"\n-    #include \"esp_eth.h\"\n-    #include \"esp_eth_mac.h\"\n-    #include \"esp_eth_com.h\"\n-#if CONFIG_IDF_TARGET_ESP32\n-    #include \"soc/emac_ext_struct.h\"\n-    #include \"soc/rtc.h\"\n-    //#include \"soc/io_mux_reg.h\"\n-    //#include \"hal/gpio_hal.h\"\n-#endif\n-    #include \"esp32-hal-periman.h\"\n-#else\n-    #include \"eth_phy/phy.h\"\n-    #include \"eth_phy/phy_tlk110.h\"\n-    #include \"eth_phy/phy_lan8720.h\"\n-#endif\n+#include \"esp_event.h\"\n+#include \"esp_eth.h\"\n+#include \"esp_eth_mac.h\"\n+#include \"esp_eth_com.h\"\n+#include \"driver/gpio.h\"\n+#include \"driver/spi_master.h\"\n+#if CONFIG_ETH_USE_ESP32_EMAC\n+#include \"soc/emac_ext_struct.h\"\n+#include \"soc/rtc.h\"\n+#endif /* CONFIG_ETH_USE_ESP32_EMAC */\n+#include \"esp32-hal-periman.h\"\n #include \"lwip/err.h\"\n #include \"lwip/dns.h\"\n #include \"esp_mac.h\"\n@@ -48,336 +42,167 @@\n extern void tcpipInit();\n extern void add_esp_interface_netif(esp_interface_t interface, esp_netif_t* esp_netif); /* from WiFiGeneric */\n \n-#if ESP_IDF_VERSION_MAJOR > 3\n-\n-/**\n-* @brief Callback function invoked when lowlevel initialization is finished\n-*\n-* @param[in] eth_handle: handle of Ethernet driver\n-*\n-* @return\n-*       - ESP_OK: process extra lowlevel initialization successfully\n-*       - ESP_FAIL: error occurred when processing extra lowlevel initialization\n-*/\n-\n-static eth_clock_mode_t eth_clock_mode = ETH_CLK_MODE;\n-\n-#if CONFIG_ETH_RMII_CLK_INPUT\n-/*\n-static void emac_config_apll_clock(void)\n-{\n-    // apll_freq = xtal_freq * (4 + sdm2 + sdm1/256 + sdm0/65536)/((o_div + 2) * 2)\n-    rtc_xtal_freq_t rtc_xtal_freq = rtc_clk_xtal_freq_get();\n-    switch (rtc_xtal_freq) {\n-    case RTC_XTAL_FREQ_40M: // Recommended\n-        // 50 MHz = 40MHz * (4 + 6) / (2 * (2 + 2) = 50.000\n-        // sdm0 = 0, sdm1 = 0, sdm2 = 6, o_div = 2\n-        rtc_clk_apll_enable(true, 0, 0, 6, 2);\n-        break;\n-    case RTC_XTAL_FREQ_26M:\n-        // 50 MHz = 26MHz * (4 + 15 + 118 / 256 + 39/65536) / ((3 + 2) * 2) = 49.999992\n-        // sdm0 = 39, sdm1 = 118, sdm2 = 15, o_div = 3\n-        rtc_clk_apll_enable(true, 39, 118, 15, 3);\n-        break;\n-    case RTC_XTAL_FREQ_24M:\n-        // 50 MHz = 24MHz * (4 + 12 + 255 / 256 + 255/65536) / ((2 + 2) * 2) = 49.499977\n-        // sdm0 = 255, sdm1 = 255, sdm2 = 12, o_div = 2\n-        rtc_clk_apll_enable(true, 255, 255, 12, 2);\n-        break;\n-    default: // Assume we have a 40M xtal\n-        rtc_clk_apll_enable(true, 0, 0, 6, 2);\n-        break;\n-    }\n-}\n-*/\n-#endif\n-\n-/*\n-static esp_err_t on_lowlevel_init_done(esp_eth_handle_t eth_handle){\n-#if CONFIG_IDF_TARGET_ESP32\n-    if(eth_clock_mode > ETH_CLOCK_GPIO17_OUT){\n-        return ESP_FAIL;\n-    }\n-    // First deinit current config if different\n-#if CONFIG_ETH_RMII_CLK_INPUT\n-    if(eth_clock_mode != ETH_CLOCK_GPIO0_IN && eth_clock_mode != ETH_CLOCK_GPIO0_OUT){\n-        pinMode(0, INPUT);\n-    }\n-#endif\n-\n-#if CONFIG_ETH_RMII_CLK_OUTPUT\n-#if CONFIG_ETH_RMII_CLK_OUTPUT_GPIO0\n-    if(eth_clock_mode > ETH_CLOCK_GPIO0_OUT){\n-        pinMode(0, INPUT);\n-    }\n-#elif CONFIG_ETH_RMII_CLK_OUT_GPIO == 16\n-    if(eth_clock_mode != ETH_CLOCK_GPIO16_OUT){\n-        pinMode(16, INPUT);\n-    }\n-#elif CONFIG_ETH_RMII_CLK_OUT_GPIO == 17\n-    if(eth_clock_mode != ETH_CLOCK_GPIO17_OUT){\n-        pinMode(17, INPUT);\n-    }\n-#endif\n-#endif\n-\n-    // Setup interface for the correct pin\n-#if CONFIG_ETH_PHY_INTERFACE_MII\n-    EMAC_EXT.ex_phyinf_conf.phy_intf_sel = 4;\n-#endif\n \n-    if(eth_clock_mode == ETH_CLOCK_GPIO0_IN){\n-#ifndef CONFIG_ETH_RMII_CLK_INPUT\n-        // RMII clock (50MHz) input to GPIO0\n-        //gpio_hal_iomux_func_sel(PERIPHS_IO_MUX_GPIO0_U, FUNC_GPIO0_EMAC_TX_CLK);\n-        //PIN_INPUT_ENABLE(GPIO_PIN_MUX_REG[0]);\n-        pinMode(0, INPUT);\n-        PIN_FUNC_SELECT(GPIO_PIN_MUX_REG[0], 5);\n-        EMAC_EXT.ex_clk_ctrl.ext_en = 1;\n-        EMAC_EXT.ex_clk_ctrl.int_en = 0;\n-        EMAC_EXT.ex_oscclk_conf.clk_sel = 1;\n+ETHClass::ETHClass(uint8_t eth_index)\n+    :_eth_started(false)\n+    ,_eth_handle(NULL)\n+    ,_esp_netif(NULL)\n+    ,_eth_index(eth_index)\n+    ,_phy_type(ETH_PHY_MAX)\n+#if ETH_SPI_SUPPORTS_CUSTOM\n+    ,_spi(NULL)\n #endif\n-    } else {\n-        if(eth_clock_mode == ETH_CLOCK_GPIO0_OUT){\n-#ifndef CONFIG_ETH_RMII_CLK_OUTPUT_GPIO0\n-            // APLL clock output to GPIO0 (must be configured to 50MHz!)\n-            //gpio_hal_iomux_func_sel(PERIPHS_IO_MUX_GPIO0_U, FUNC_GPIO0_CLK_OUT1);\n-            //PIN_INPUT_DISABLE(GPIO_PIN_MUX_REG[0]);\n-            pinMode(0, OUTPUT);\n-            PIN_FUNC_SELECT(GPIO_PIN_MUX_REG[0], 1);\n-            // Choose the APLL clock to output on GPIO\n-            REG_WRITE(PIN_CTRL, 6);\n-#endif\n-        } else if(eth_clock_mode == ETH_CLOCK_GPIO16_OUT){\n-#if CONFIG_ETH_RMII_CLK_OUT_GPIO != 16\n-            // RMII CLK (50MHz) output to GPIO16\n-            //gpio_hal_iomux_func_sel(PERIPHS_IO_MUX_GPIO16_U, FUNC_GPIO16_EMAC_CLK_OUT);\n-            //PIN_INPUT_DISABLE(GPIO_PIN_MUX_REG[16]);\n-            pinMode(16, OUTPUT);\n-            PIN_FUNC_SELECT(GPIO_PIN_MUX_REG[16], 5);\n-#endif\n-        } else if(eth_clock_mode == ETH_CLOCK_GPIO17_OUT){\n-#if CONFIG_ETH_RMII_CLK_OUT_GPIO != 17\n-            // RMII CLK (50MHz) output to GPIO17\n-            //gpio_hal_iomux_func_sel(PERIPHS_IO_MUX_GPIO17_U, FUNC_GPIO17_EMAC_CLK_OUT_180);\n-            //PIN_INPUT_DISABLE(GPIO_PIN_MUX_REG[17]);\n-            pinMode(17, OUTPUT);\n-            PIN_FUNC_SELECT(GPIO_PIN_MUX_REG[17], 5);\n-#endif\n-        }\n-#if CONFIG_ETH_RMII_CLK_INPUT\n-        EMAC_EXT.ex_clk_ctrl.ext_en = 0;\n-        EMAC_EXT.ex_clk_ctrl.int_en = 1;\n-        EMAC_EXT.ex_oscclk_conf.clk_sel = 0;\n-        emac_config_apll_clock();\n-        EMAC_EXT.ex_clkout_conf.div_num = 0;\n-        EMAC_EXT.ex_clkout_conf.h_div_num = 0;\n-#endif\n-    }\n-#endif\n-    return ESP_OK;\n-}\n-*/\n-\n-\n-/**\n-* @brief Callback function invoked when lowlevel deinitialization is finished\n-*\n-* @param[in] eth_handle: handle of Ethernet driver\n-*\n-* @return\n-*       - ESP_OK: process extra lowlevel deinitialization successfully\n-*       - ESP_FAIL: error occurred when processing extra lowlevel deinitialization\n-*/\n-//static esp_err_t on_lowlevel_deinit_done(esp_eth_handle_t eth_handle){\n-//    return ESP_OK;\n-//}\n-\n-\n-\n-#else\n-static int _eth_phy_mdc_pin = -1;\n-static int _eth_phy_mdio_pin = -1;\n-static int _eth_phy_power_pin = -1;\n-static eth_phy_power_enable_func _eth_phy_power_enable_orig = NULL;\n-\n-static void _eth_phy_config_gpio(void)\n-{\n-    if(_eth_phy_mdc_pin < 0 || _eth_phy_mdio_pin < 0){\n-        log_e(\"MDC and MDIO pins are not configured!\");\n-        return;\n-    }\n-    phy_rmii_configure_data_interface_pins();\n-    phy_rmii_smi_configure_pins(_eth_phy_mdc_pin, _eth_phy_mdio_pin);\n-}\n-\n-static void _eth_phy_power_enable(bool enable)\n-{\n-    pinMode(_eth_phy_power_pin, OUTPUT);\n-    digitalWrite(_eth_phy_power_pin, enable);\n-    delay(1);\n-}\n-#endif\n-\n-ETHClass::ETHClass()\n-    :initialized(false)\n-    ,staticIP(false)\n-#if ESP_IDF_VERSION_MAJOR > 3\n-     ,eth_handle(NULL)\n-#endif\n-     ,_started(false)\n-{\n-}\n+    ,_spi_freq_mhz(20)\n+    ,_pin_cs(-1)\n+    ,_pin_irq(-1)\n+    ,_pin_rst(-1)\n+    ,_pin_sck(-1)\n+    ,_pin_miso(-1)\n+    ,_pin_mosi(-1)\n+#if CONFIG_ETH_USE_ESP32_EMAC\n+    ,_pin_mcd(-1)\n+    ,_pin_mdio(-1)\n+    ,_pin_power(-1)\n+    ,_pin_rmii_clock(-1)\n+#endif /* CONFIG_ETH_USE_ESP32_EMAC */\n+{}\n \n ETHClass::~ETHClass()\n {}\n \n bool ETHClass::ethDetachBus(void * bus_pointer){\n     ETHClass *bus = (ETHClass *) bus_pointer;\n-    if(bus->_started) {\n+    if(bus->_eth_started){\n         bus->end();\n     }\n     return true;\n }\n \n-bool ETHClass::begin(uint8_t phy_addr, int power, int mdc, int mdio, eth_phy_type_t type, eth_clock_mode_t clock_mode, bool use_mac_from_efuse)\n+#if CONFIG_ETH_USE_ESP32_EMAC\n+bool ETHClass::begin(eth_phy_type_t type, uint8_t phy_addr, int mdc, int mdio, int power, eth_clock_mode_t clock_mode)\n {\n-#if ESP_IDF_VERSION_MAJOR > 3\n-    if(esp_netif != NULL){\n+    esp_err_t ret = ESP_OK;\n+    if(_esp_netif != NULL){\n         return true;\n     }\n     perimanSetBusDeinit(ESP32_BUS_TYPE_ETHERNET, ETHClass::ethDetachBus);\n \n-    eth_clock_mode = clock_mode;\n     tcpipInit();\n \n-    if (use_mac_from_efuse)\n-    {\n-        uint8_t p[6] = { 0x00,0x00,0x00,0x00,0x00,0x00 };\n-        esp_efuse_mac_get_custom(p);\n-        esp_base_mac_addr_set(p);\n-    }\n+    eth_esp32_emac_config_t mac_config = ETH_ESP32_EMAC_DEFAULT_CONFIG();\n+    mac_config.clock_config.rmii.clock_mode = (clock_mode) ? EMAC_CLK_OUT : EMAC_CLK_EXT_IN;\n+    mac_config.clock_config.rmii.clock_gpio = (1 == clock_mode) ? EMAC_APPL_CLK_OUT_GPIO : (2 == clock_mode) ? EMAC_CLK_OUT_GPIO : (3 == clock_mode) ? EMAC_CLK_OUT_180_GPIO : EMAC_CLK_IN_GPIO;\n+    mac_config.smi_mdc_gpio_num = mdc;\n+    mac_config.smi_mdio_gpio_num = mdio;\n \n-    //tcpip_adapter_set_default_eth_handlers();\n-    \n-    esp_netif_config_t cfg = ESP_NETIF_DEFAULT_ETH();\n-    esp_netif = esp_netif_new(&cfg);\n+    _pin_mcd = mdc;\n+    _pin_mdio = mdio;\n+    _pin_rmii_clock = mac_config.clock_config.rmii.clock_gpio;\n+    _pin_power = power;\n \n-    esp_eth_mac_t *eth_mac = NULL;\n-#if CONFIG_ETH_SPI_ETHERNET_DM9051\n-    if(type == ETH_PHY_DM9051){\n-        return false;//todo\n-    } else {\n-#endif\n-#if CONFIG_ETH_USE_ESP32_EMAC\n-        eth_esp32_emac_config_t mac_config = ETH_ESP32_EMAC_DEFAULT_CONFIG();\n-        mac_config.clock_config.rmii.clock_mode = (eth_clock_mode) ? EMAC_CLK_OUT : EMAC_CLK_EXT_IN;\n-        mac_config.clock_config.rmii.clock_gpio = (1 == eth_clock_mode) ? EMAC_APPL_CLK_OUT_GPIO : (2 == eth_clock_mode) ? EMAC_CLK_OUT_GPIO : (3 == eth_clock_mode) ? EMAC_CLK_OUT_180_GPIO : EMAC_CLK_IN_GPIO;\n-        mac_config.smi_mdc_gpio_num = mdc;\n-        mac_config.smi_mdio_gpio_num = mdio;\n-\n-        _pin_mcd = mdc;\n-        _pin_mdio = mdio;\n-        _pin_rmii_clock = mac_config.clock_config.rmii.clock_gpio;\n-\n-        if(!perimanSetPinBus(_pin_rmii_clock, ESP32_BUS_TYPE_INIT, NULL)){ return false; }\n-        if(!perimanSetPinBus(_pin_mcd, ESP32_BUS_TYPE_INIT, NULL)){ return false; }\n-        if(!perimanSetPinBus(_pin_mdio,  ESP32_BUS_TYPE_INIT, NULL)){ return false; }\n-\n-        eth_mac_config_t eth_mac_config = ETH_MAC_DEFAULT_CONFIG();\n-        eth_mac_config.sw_reset_timeout_ms = 1000;\n-\n-        eth_mac = esp_eth_mac_new_esp32(&mac_config, &eth_mac_config);\n-\n-        if(!perimanSetPinBus(ETH_RMII_TX_EN, ESP32_BUS_TYPE_INIT, NULL)){ return false; }\n-        if(!perimanSetPinBus(ETH_RMII_TX0, ESP32_BUS_TYPE_INIT, NULL)){ return false; }\n-        if(!perimanSetPinBus(ETH_RMII_TX1, ESP32_BUS_TYPE_INIT, NULL)){ return false; }\n-        if(!perimanSetPinBus(ETH_RMII_RX0, ESP32_BUS_TYPE_INIT, NULL)){ return false; }\n-        if(!perimanSetPinBus(ETH_RMII_RX1_EN, ESP32_BUS_TYPE_INIT, NULL)){ return false; }\n-        if(!perimanSetPinBus(ETH_RMII_CRS_DV, ESP32_BUS_TYPE_INIT, NULL)){ return false; }\n-#endif\n-#if CONFIG_ETH_SPI_ETHERNET_DM9051\n+    if(!perimanSetPinBus(_pin_rmii_clock, ESP32_BUS_TYPE_INIT, NULL)){ return false; }\n+    if(!perimanSetPinBus(_pin_mcd, ESP32_BUS_TYPE_INIT, NULL)){ return false; }\n+    if(!perimanSetPinBus(_pin_mdio,  ESP32_BUS_TYPE_INIT, NULL)){ return false; }\n+    if(!perimanSetPinBus(ETH_RMII_TX_EN, ESP32_BUS_TYPE_INIT, NULL)){ return false; }\n+    if(!perimanSetPinBus(ETH_RMII_TX0, ESP32_BUS_TYPE_INIT, NULL)){ return false; }\n+    if(!perimanSetPinBus(ETH_RMII_TX1, ESP32_BUS_TYPE_INIT, NULL)){ return false; }\n+    if(!perimanSetPinBus(ETH_RMII_RX0, ESP32_BUS_TYPE_INIT, NULL)){ return false; }\n+    if(!perimanSetPinBus(ETH_RMII_RX1_EN, ESP32_BUS_TYPE_INIT, NULL)){ return false; }\n+    if(!perimanSetPinBus(ETH_RMII_CRS_DV, ESP32_BUS_TYPE_INIT, NULL)){ return false; }\n+    if(_pin_power != -1){\n+        if(!perimanSetPinBus(_pin_power,  ESP32_BUS_TYPE_INIT, NULL)){ return false; }\n     }\n-#endif\n \n-    if(eth_mac == NULL){\n+    eth_mac_config_t eth_mac_config = ETH_MAC_DEFAULT_CONFIG();\n+    eth_mac_config.sw_reset_timeout_ms = 1000;\n+\n+    esp_eth_mac_t * mac = esp_eth_mac_new_esp32(&mac_config, &eth_mac_config);\n+    if(mac == NULL){\n         log_e(\"esp_eth_mac_new_esp32 failed\");\n         return false;\n     }\n \n-    _pin_power = power;\n-    if(_pin_power != -1){\n-        if(!perimanSetPinBus(_pin_power,  ESP32_BUS_TYPE_INIT, NULL)){ return false; }\n-    }\n-\n     eth_phy_config_t phy_config = ETH_PHY_DEFAULT_CONFIG();\n     phy_config.phy_addr = phy_addr;\n     phy_config.reset_gpio_num = power;\n \n-    esp_eth_phy_t *eth_phy = NULL;\n+    esp_eth_phy_t *phy = NULL;\n     switch(type){\n         case ETH_PHY_LAN8720:\n-            eth_phy = esp_eth_phy_new_lan87xx(&phy_config);\n+            phy = esp_eth_phy_new_lan87xx(&phy_config);\n             break;\n         case ETH_PHY_TLK110:\n-            eth_phy = esp_eth_phy_new_ip101(&phy_config);\n+            phy = esp_eth_phy_new_ip101(&phy_config);\n             break;\n         case ETH_PHY_RTL8201:\n-            eth_phy = esp_eth_phy_new_rtl8201(&phy_config);\n+            phy = esp_eth_phy_new_rtl8201(&phy_config);\n             break;\n         case ETH_PHY_DP83848:\n-            eth_phy = esp_eth_phy_new_dp83848(&phy_config);\n-            break;\n-#if CONFIG_ETH_SPI_ETHERNET_DM9051\n-        case ETH_PHY_DM9051:\n-            eth_phy = esp_eth_phy_new_dm9051(&phy_config);\n+            phy = esp_eth_phy_new_dp83848(&phy_config);\n             break;\n-#endif\n         case ETH_PHY_KSZ8041:\n-#if ESP_IDF_VERSION >= ESP_IDF_VERSION_VAL(4,4,0)\n-            eth_phy = esp_eth_phy_new_ksz80xx(&phy_config);\n-#else\n-            log_e(\"unsupported ethernet type 'ETH_PHY_KSZ8041'\");\n-#endif\n+            phy = esp_eth_phy_new_ksz80xx(&phy_config);\n             break;\n         case ETH_PHY_KSZ8081:\n-#if ESP_IDF_VERSION >= ESP_IDF_VERSION_VAL(4,4,0)\n-            eth_phy = esp_eth_phy_new_ksz80xx(&phy_config);\n-#else\n-            log_e(\"unsupported ethernet type 'ETH_PHY_KSZ8081'\");\n-#endif\n+            phy = esp_eth_phy_new_ksz80xx(&phy_config);\n             break;\n         default:\n+            log_e(\"Unsupported PHY %d\", type);\n             break;\n     }\n-    if(eth_phy == NULL){\n+    if(phy == NULL){\n         log_e(\"esp_eth_phy_new failed\");\n         return false;\n     }\n \n-    eth_handle = NULL;\n-    esp_eth_config_t eth_config = ETH_DEFAULT_CONFIG(eth_mac, eth_phy);\n-    //eth_config.on_lowlevel_init_done = on_lowlevel_init_done;\n-    //eth_config.on_lowlevel_deinit_done = on_lowlevel_deinit_done;\n-    if(esp_eth_driver_install(&eth_config, &eth_handle) != ESP_OK || eth_handle == NULL){\n-        log_e(\"esp_eth_driver_install failed\");\n+    _eth_handle = NULL;\n+    esp_eth_config_t eth_config = ETH_DEFAULT_CONFIG(mac, phy);\n+    ret = esp_eth_driver_install(&eth_config, &_eth_handle);\n+    if(ret != ESP_OK){\n+        log_e(\"SPI Ethernet driver install failed: %d\", ret);\n+        return false;\n+    }\n+    if(_eth_handle == NULL){\n+        log_e(\"esp_eth_driver_install failed! eth_handle is NULL\");\n         return false;\n     }\n     \n+    esp_netif_config_t cfg = ESP_NETIF_DEFAULT_ETH();\n+\n+    // Use ESP_NETIF_INHERENT_DEFAULT_ETH when multiple Ethernet interfaces are used and so you need to modify\n+    // esp-netif configuration parameters for each interface (name, priority, etc.).\n+    char if_key_str[10];\n+    char if_desc_str[10];\n+    char num_str[3];\n+    itoa(_eth_index, num_str, 10);\n+    strcat(strcpy(if_key_str, \"ETH_\"), num_str);\n+    strcat(strcpy(if_desc_str, \"eth\"), num_str);\n+\n+    esp_netif_inherent_config_t esp_netif_config = ESP_NETIF_INHERENT_DEFAULT_ETH();\n+    esp_netif_config.if_key = if_key_str;\n+    esp_netif_config.if_desc = if_desc_str;\n+    esp_netif_config.route_prio -= _eth_index*5;\n+\n+    cfg.base = &esp_netif_config;\n+\n+    _esp_netif = esp_netif_new(&cfg);\n+\n     /* attach Ethernet driver to TCP/IP stack */\n-    if(esp_netif_attach(esp_netif, esp_eth_new_netif_glue(eth_handle)) != ESP_OK){\n-        log_e(\"esp_netif_attach failed\");\n+    ret = esp_netif_attach(_esp_netif, esp_eth_new_netif_glue(_eth_handle));\n+    if(ret != ESP_OK){\n+        log_e(\"esp_netif_attach failed: %d\", ret);\n         return false;\n     }\n \n     /* attach to WiFiGeneric to receive events */\n-    add_esp_interface_netif(ESP_IF_ETH, esp_netif);\n+    add_esp_interface_netif(ESP_IF_ETH, _esp_netif);\n \n-    if(esp_eth_start(eth_handle) != ESP_OK){\n-        log_e(\"esp_eth_start failed\");\n+    ret = esp_eth_start(_eth_handle);\n+    if(ret != ESP_OK){\n+        log_e(\"esp_eth_start failed: %d\", ret);\n         return false;\n     }\n-    _started = true;\n+    _eth_started = true;\n \n     if(!perimanSetPinBus(_pin_rmii_clock, ESP32_BUS_TYPE_ETHERNET, (void *)(this))){ goto err; }\n     if(!perimanSetPinBus(_pin_mcd, ESP32_BUS_TYPE_ETHERNET, (void *)(this))){ goto err; }\n@@ -393,70 +218,378 @@ bool ETHClass::begin(uint8_t phy_addr, int power, int mdc, int mdio, eth_phy_typ\n     if(_pin_power != -1){\n         if(!perimanSetPinBus(_pin_power,  ESP32_BUS_TYPE_ETHERNET, (void *)(this))){ goto err; }\n     }\n-#else\n-    esp_err_t err;\n-    if(initialized){\n-        err = esp_eth_enable();\n-        if(err){\n-            log_e(\"esp_eth_enable error: %d\", err);\n-            return false;\n+    // holds a few milliseconds to let DHCP start and enter into a good state\n+    // FIX ME -- adresses issue https://github.com/espressif/arduino-esp32/issues/5733\n+    delay(50);\n+\n+    return true;\n+\n+err:\n+    log_e(\"Failed to set all pins bus to ETHERNET\");\n+    ETHClass::ethDetachBus((void *)(this));\n+    return false;\n+}\n+#endif /* CONFIG_ETH_USE_ESP32_EMAC */\n+\n+#if ETH_SPI_SUPPORTS_CUSTOM\n+static void *_eth_spi_init(const void *ctx){\n+    return (void*)ctx;\n+}\n+\n+static esp_err_t _eth_spi_deinit(void *ctx){\n+    return ESP_OK;\n+}\n+\n+esp_err_t ETHClass::_eth_spi_read(void *ctx, uint32_t cmd, uint32_t addr, void *data, uint32_t data_len){\n+    return ((ETHClass*)ctx)->eth_spi_read(cmd, addr, data, data_len);\n+}\n+\n+esp_err_t ETHClass::_eth_spi_write(void *ctx, uint32_t cmd, uint32_t addr, const void *data, uint32_t data_len){\n+    return ((ETHClass*)ctx)->eth_spi_write(cmd, addr, data, data_len);\n+}\n+\n+esp_err_t ETHClass::eth_spi_read(uint32_t cmd, uint32_t addr, void *data, uint32_t data_len){\n+    if(_spi == NULL){\n+        return ESP_FAIL;\n+    }\n+    // log_i(\" 0x%04lx 0x%04lx %lu\", cmd, addr, data_len);\n+    _spi->beginTransaction(SPISettings(_spi_freq_mhz * 1000 * 1000, MSBFIRST, SPI_MODE0));\n+    digitalWrite(_pin_cs, LOW);\n+\n+#if CONFIG_ETH_SPI_ETHERNET_DM9051\n+    if(_phy_type == ETH_PHY_DM9051){\n+        _spi->write(((cmd & 0x01) << 7) | (addr & 0x7F));\n+    } else\n+#endif\n+#if CONFIG_ETH_SPI_ETHERNET_W5500\n+    if(_phy_type == ETH_PHY_W5500){\n+        _spi->write16(cmd);\n+        _spi->write(addr);\n+    } else\n+#endif\n+#if CONFIG_ETH_SPI_ETHERNET_KSZ8851SNL\n+    if(_phy_type == ETH_PHY_KSZ8851){\n+        if(cmd > 1){\n+            _spi->write(cmd << 6 | addr);\n+        } else {\n+            _spi->write16(cmd << 14 | addr);\n+        }\n+    } else\n+#endif\n+    {\n+        log_e(\"Unsupported PHY module: %d\", _phy_type);\n+        digitalWrite(_pin_cs, HIGH);\n+        _spi->endTransaction();\n+        return ESP_FAIL;\n+    }\n+    _spi->transferBytes(NULL, (uint8_t *)data, data_len);\n+\n+    digitalWrite(_pin_cs, HIGH);\n+    _spi->endTransaction();\n+    return ESP_OK;\n+}\n+\n+esp_err_t ETHClass::eth_spi_write(uint32_t cmd, uint32_t addr, const void *data, uint32_t data_len){\n+    if(_spi == NULL){\n+        return ESP_FAIL;\n+    }\n+    // log_i(\"0x%04lx 0x%04lx %lu\", cmd, addr, data_len);\n+    _spi->beginTransaction(SPISettings(_spi_freq_mhz * 1000 * 1000, MSBFIRST, SPI_MODE0));\n+    digitalWrite(_pin_cs, LOW);\n+\n+#if CONFIG_ETH_SPI_ETHERNET_DM9051\n+    if(_phy_type == ETH_PHY_DM9051){\n+        _spi->write(((cmd & 0x01) << 7) | (addr & 0x7F));\n+    } else\n+#endif\n+#if CONFIG_ETH_SPI_ETHERNET_W5500\n+    if(_phy_type == ETH_PHY_W5500){\n+        _spi->write16(cmd);\n+        _spi->write(addr);\n+    } else\n+#endif\n+#if CONFIG_ETH_SPI_ETHERNET_KSZ8851SNL\n+    if(_phy_type == ETH_PHY_KSZ8851){\n+        if(cmd > 1){\n+            _spi->write(cmd << 6 | addr);\n+        } else {\n+            _spi->write16(cmd << 14 | addr);\n         }\n-        _started = true;\n+    } else\n+#endif\n+    {\n+        log_e(\"Unsupported PHY module: %d\", _phy_type);\n+        digitalWrite(_pin_cs, HIGH);\n+        _spi->endTransaction();\n+        return ESP_FAIL;\n+    }\n+    _spi->writeBytes((const uint8_t *)data, data_len);\n+\n+    digitalWrite(_pin_cs, HIGH);\n+    _spi->endTransaction();\n+    return ESP_OK;\n+}\n+#endif\n+\n+bool ETHClass::beginSPI(eth_phy_type_t type, uint8_t phy_addr, int cs, int irq, int rst, \n+#if ETH_SPI_SUPPORTS_CUSTOM\n+    SPIClass *spi, \n+#endif\n+    int sck, int miso, int mosi, spi_host_device_t spi_host, uint8_t spi_freq_mhz){\n+    esp_err_t ret = ESP_OK;\n+\n+    if(_eth_started || _esp_netif != NULL || _eth_handle != NULL){\n+        log_w(\"ETH Already Started\");\n         return true;\n     }\n-    _eth_phy_mdc_pin = mdc;\n-    _eth_phy_mdio_pin = mdio;\n-    _eth_phy_power_pin = power;\n-\n-    if(type == ETH_PHY_LAN8720){\n-        eth_config_t config = phy_lan8720_default_ethernet_config;\n-        memcpy(&eth_config, &config, sizeof(eth_config_t));\n-    } else if(type == ETH_PHY_TLK110){\n-        eth_config_t config = phy_tlk110_default_ethernet_config;\n-        memcpy(&eth_config, &config, sizeof(eth_config_t));\n-    } else if(type == ETH_PHY_IP101) {\n-      eth_config_t config = phy_ip101_default_ethernet_config;\n-      memcpy(&eth_config, &config, sizeof(eth_config_t));\n-    } else {\n-        log_e(\"Bad ETH_PHY type: %u\", (uint8_t)type);\n+    if(cs < 0 || irq < 0){\n+        log_e(\"CS and IRQ pins must be defined!\");\n         return false;\n     }\n \n-    eth_config.phy_addr = (eth_phy_base_t)phy_addr;\n-    eth_config.clock_mode = clock_mode;\n-    eth_config.gpio_config = _eth_phy_config_gpio;\n-    eth_config.tcpip_input = tcpip_adapter_eth_input;\n-    if(_eth_phy_power_pin >= 0){\n-        _eth_phy_power_enable_orig = eth_config.phy_power_enable;\n-        eth_config.phy_power_enable = _eth_phy_power_enable;\n+    perimanSetBusDeinit(ESP32_BUS_TYPE_ETHERNET, ETHClass::ethDetachBus);\n+\n+    if(_pin_cs != -1){\n+        if(!perimanSetPinBus(_pin_cs, ESP32_BUS_TYPE_INIT, NULL)){ return false; }\n+    }\n+    if(_pin_rst != -1){\n+        if(!perimanSetPinBus(_pin_rst, ESP32_BUS_TYPE_INIT, NULL)){ return false; }\n+    }\n+    if(_pin_irq != -1){\n+        if(!perimanSetPinBus(_pin_irq, ESP32_BUS_TYPE_INIT, NULL)){ return false; }\n+    }\n+    if(_pin_sck != -1){\n+        if(!perimanSetPinBus(_pin_sck,  ESP32_BUS_TYPE_INIT, NULL)){ return false; }\n+    }\n+    if(_pin_miso != -1){\n+        if(!perimanSetPinBus(_pin_miso, ESP32_BUS_TYPE_INIT, NULL)){ return false; }\n+    }\n+    if(_pin_mosi != -1){\n+        if(!perimanSetPinBus(_pin_mosi, ESP32_BUS_TYPE_INIT, NULL)){ return false; }\n+    }\n+\n+#if ETH_SPI_SUPPORTS_CUSTOM\n+    _spi = spi;\n+#endif\n+    if(spi_freq_mhz){\n+        _spi_freq_mhz = spi_freq_mhz;\n+    }\n+    _phy_type = type;\n+    _pin_cs = cs;\n+    _pin_irq = irq;\n+    _pin_rst = rst;\n+    _pin_sck = sck;\n+    _pin_miso = miso;\n+    _pin_mosi = mosi;\n+\n+#if ETH_SPI_SUPPORTS_CUSTOM\n+    if(_spi != NULL){\n+        pinMode(_pin_cs, OUTPUT);\n+        digitalWrite(_pin_cs, HIGH);\n+    }\n+#endif\n+\n+    // Init SPI bus\n+    if(_pin_sck >= 0 && _pin_miso >= 0 && _pin_mosi >= 0){\n+        spi_bus_config_t buscfg = {\n+            .mosi_io_num = _pin_mosi,\n+            .miso_io_num = _pin_miso,\n+            .sclk_io_num = _pin_sck,\n+            .quadwp_io_num = -1,\n+            .quadhd_io_num = -1,\n+        };\n+        ret = spi_bus_initialize(spi_host, &buscfg, SPI_DMA_CH_AUTO);\n+        if(ret != ESP_OK){\n+            log_e(\"SPI bus initialize failed: %d\", ret);\n+            return false;\n+        }\n     }\n \n     tcpipInit();\n \n-    if (use_mac_from_efuse)\n-    {\n-        uint8_t p[6] = { 0x00,0x00,0x00,0x00,0x00,0x00 };\n-        esp_efuse_mac_get_custom(p);\n-        esp_base_mac_addr_set(p);\n+    // Install GPIO ISR handler to be able to service SPI Eth modules interrupts\n+    ret = gpio_install_isr_service(0);\n+    if(ret != ESP_OK && ret != ESP_ERR_INVALID_STATE){\n+        log_e(\"GPIO ISR handler install failed: %d\", ret);\n+        return false;\n     }\n \n-    err = esp_eth_init(&eth_config);\n-    if(!err){\n-        initialized = true;\n-        err = esp_eth_enable();\n-        if(err){\n-            log_e(\"esp_eth_enable error: %d\", err);\n-        } else {\n-            _started = true;\n-            return true;\n+    // Init common MAC and PHY configs to default\n+    eth_mac_config_t eth_mac_config = ETH_MAC_DEFAULT_CONFIG();\n+    eth_phy_config_t phy_config = ETH_PHY_DEFAULT_CONFIG();\n+\n+    // Update PHY config based on board specific configuration\n+    phy_config.phy_addr = phy_addr;\n+    phy_config.reset_gpio_num = _pin_rst;\n+\n+    // Configure SPI interface for specific SPI module\n+    spi_device_interface_config_t spi_devcfg = {\n+        .mode = 0,\n+        .clock_speed_hz = _spi_freq_mhz * 1000 * 1000,\n+        .input_delay_ns = 20,\n+        .spics_io_num = _pin_cs,\n+        .queue_size = 20,\n+    };\n+\n+    esp_eth_mac_t *mac = NULL;\n+    esp_eth_phy_t *phy = NULL;\n+#if CONFIG_ETH_SPI_ETHERNET_W5500\n+    if(type == ETH_PHY_W5500){\n+        eth_w5500_config_t mac_config = ETH_W5500_DEFAULT_CONFIG(spi_host, &spi_devcfg);\n+        mac_config.int_gpio_num = _pin_irq;\n+#if ETH_SPI_SUPPORTS_CUSTOM\n+        if(_spi != NULL){\n+            mac_config.custom_spi_driver.config = this;\n+            mac_config.custom_spi_driver.init = _eth_spi_init;\n+            mac_config.custom_spi_driver.deinit = _eth_spi_deinit;\n+            mac_config.custom_spi_driver.read = _eth_spi_read;\n+            mac_config.custom_spi_driver.write = _eth_spi_write;\n         }\n-    } else {\n-        log_e(\"esp_eth_init error: %d\", err);\n+#endif\n+        mac = esp_eth_mac_new_w5500(&mac_config, &eth_mac_config);\n+        phy = esp_eth_phy_new_w5500(&phy_config);\n+    } else \n+#endif\n+#if CONFIG_ETH_SPI_ETHERNET_DM9051\n+    if(type == ETH_PHY_DM9051){\n+        eth_dm9051_config_t mac_config = ETH_DM9051_DEFAULT_CONFIG(spi_host, &spi_devcfg);\n+        mac_config.int_gpio_num = _pin_irq;\n+#if ETH_SPI_SUPPORTS_CUSTOM\n+        if(_spi != NULL){\n+            mac_config.custom_spi_driver.config = this;\n+            mac_config.custom_spi_driver.init = _eth_spi_init;\n+            mac_config.custom_spi_driver.deinit = _eth_spi_deinit;\n+            mac_config.custom_spi_driver.read = _eth_spi_read;\n+            mac_config.custom_spi_driver.write = _eth_spi_write;\n+        }\n+#endif\n+        mac = esp_eth_mac_new_dm9051(&mac_config, &eth_mac_config);\n+        phy = esp_eth_phy_new_dm9051(&phy_config);\n+    } else\n+#endif\n+#if CONFIG_ETH_SPI_ETHERNET_KSZ8851SNL\n+    if(type == ETH_PHY_KSZ8851){\n+        eth_ksz8851snl_config_t mac_config = ETH_KSZ8851SNL_DEFAULT_CONFIG(spi_host, &spi_devcfg);\n+        mac_config.int_gpio_num = _pin_irq;\n+#if ETH_SPI_SUPPORTS_CUSTOM\n+        if(_spi != NULL){\n+            mac_config.custom_spi_driver.config = this;\n+            mac_config.custom_spi_driver.init = _eth_spi_init;\n+            mac_config.custom_spi_driver.deinit = _eth_spi_deinit;\n+            mac_config.custom_spi_driver.read = _eth_spi_read;\n+            mac_config.custom_spi_driver.write = _eth_spi_write;\n+        }\n+#endif\n+        mac = esp_eth_mac_new_ksz8851snl(&mac_config, &eth_mac_config);\n+        phy = esp_eth_phy_new_ksz8851snl(&phy_config);\n+    } else\n+#endif\n+    {\n+        log_e(\"Unsupported PHY module: %d\", (int)type);\n+        return false;\n+    }\n+\n+    // Init Ethernet driver to default and install it\n+    esp_eth_config_t eth_config = ETH_DEFAULT_CONFIG(mac, phy);\n+    ret = esp_eth_driver_install(&eth_config, &_eth_handle);\n+    if(ret != ESP_OK){\n+        log_e(\"SPI Ethernet driver install failed: %d\", ret);\n+        return false;\n+    }\n+    if(_eth_handle == NULL){\n+        log_e(\"esp_eth_driver_install failed! eth_handle is NULL\");\n+        return false;\n+    }\n+\n+    // Derive a new MAC address for this interface\n+    uint8_t base_mac_addr[ETH_ADDR_LEN];\n+    ret = esp_efuse_mac_get_default(base_mac_addr);\n+    if(ret != ESP_OK){\n+        log_e(\"Get EFUSE MAC failed: %d\", ret);\n+        return false;\n+    }\n+    uint8_t mac_addr[ETH_ADDR_LEN];\n+    base_mac_addr[ETH_ADDR_LEN - 1] += _eth_index; //Increment by the ETH number\n+    esp_derive_local_mac(mac_addr, base_mac_addr);\n+\n+    ret = esp_eth_ioctl(_eth_handle, ETH_CMD_S_MAC_ADDR, mac_addr);\n+    if(ret != ESP_OK){\n+        log_e(\"SPI Ethernet MAC address config failed: %d\", ret);\n+        return false;\n     }\n+\n+    // Use ESP_NETIF_DEFAULT_ETH when just one Ethernet interface is used and you don't need to modify\n+    // default esp-netif configuration parameters.\n+    esp_netif_config_t cfg = ESP_NETIF_DEFAULT_ETH();\n+\n+    // Use ESP_NETIF_INHERENT_DEFAULT_ETH when multiple Ethernet interfaces are used and so you need to modify\n+    // esp-netif configuration parameters for each interface (name, priority, etc.).\n+    char if_key_str[10];\n+    char if_desc_str[10];\n+    char num_str[3];\n+    itoa(_eth_index, num_str, 10);\n+    strcat(strcpy(if_key_str, \"ETH_\"), num_str);\n+    strcat(strcpy(if_desc_str, \"eth\"), num_str);\n+\n+    esp_netif_inherent_config_t esp_netif_config = ESP_NETIF_INHERENT_DEFAULT_ETH();\n+    esp_netif_config.if_key = if_key_str;\n+    esp_netif_config.if_desc = if_desc_str;\n+    esp_netif_config.route_prio -= _eth_index*5;\n+\n+    cfg.base = &esp_netif_config;\n+\n+    _esp_netif = esp_netif_new(&cfg);\n+    if(_esp_netif == NULL){\n+        log_e(\"esp_netif_new failed\");\n+        return false;\n+    }\n+    // Attach Ethernet driver to TCP/IP stack\n+    esp_eth_netif_glue_handle_t new_netif_glue = esp_eth_new_netif_glue(_eth_handle);\n+    if(new_netif_glue == NULL){\n+        log_e(\"esp_eth_new_netif_glue failed\");\n+        return false;\n+    }\n+\n+    ret = esp_netif_attach(_esp_netif, new_netif_glue);\n+    if(ret != ESP_OK){\n+        log_e(\"esp_netif_attach failed: %d\", ret);\n+        return false;\n+    }\n+\n+    // attach to WiFiGeneric to receive events\n+    add_esp_interface_netif(ESP_IF_ETH, _esp_netif);\n+\n+    // Start Ethernet driver state machine\n+    ret = esp_eth_start(_eth_handle);\n+    if(ret != ESP_OK){\n+        log_e(\"esp_eth_start failed: %d\", ret);\n+        return false;\n+    }\n+\n+    _eth_started = true;\n+\n+    // If Arduino's SPI is used, cs pin is in GPIO mode\n+#if ETH_SPI_SUPPORTS_CUSTOM\n+    if(_spi == NULL){\n #endif\n-    // holds a few milliseconds to let DHCP start and enter into a good state\n-    // FIX ME -- adresses issue https://github.com/espressif/arduino-esp32/issues/5733\n-    delay(50);\n+        if(!perimanSetPinBus(_pin_cs, ESP32_BUS_TYPE_ETHERNET, (void *)(this))){ goto err; }\n+#if ETH_SPI_SUPPORTS_CUSTOM\n+    }\n+#endif\n+    if(!perimanSetPinBus(_pin_irq, ESP32_BUS_TYPE_ETHERNET, (void *)(this))){ goto err; }\n+\n+    if(_pin_sck != -1){\n+        if(!perimanSetPinBus(_pin_sck, ESP32_BUS_TYPE_ETHERNET, (void *)(this))){ goto err; }\n+    }\n+    if(_pin_miso != -1){\n+        if(!perimanSetPinBus(_pin_miso, ESP32_BUS_TYPE_ETHERNET, (void *)(this))){ goto err; }\n+    }\n+    if(_pin_mosi != -1){\n+        if(!perimanSetPinBus(_pin_mosi,  ESP32_BUS_TYPE_ETHERNET, (void *)(this))){ goto err; }\n+    }\n+    if(_pin_rst != -1){\n+        if(!perimanSetPinBus(_pin_rst,  ESP32_BUS_TYPE_ETHERNET, (void *)(this))){ goto err; }\n+    }\n \n     return true;\n \n@@ -466,57 +599,149 @@ err:\n     return false;\n }\n \n+#if ETH_SPI_SUPPORTS_CUSTOM\n+bool ETHClass::begin(eth_phy_type_t type, uint8_t phy_addr, int cs, int irq, int rst, SPIClass &spi, uint8_t spi_freq_mhz){\n+\n+    return beginSPI(type, phy_addr, cs, irq, rst, &spi, -1, -1, -1, SPI2_HOST, spi_freq_mhz);\n+}\n+#endif\n+\n+bool ETHClass::begin(eth_phy_type_t type, uint8_t phy_addr, int cs, int irq, int rst, spi_host_device_t spi_host, int sck, int miso, int mosi, uint8_t spi_freq_mhz){\n+\n+    return beginSPI(type, phy_addr, cs, irq, rst,\n+#if ETH_SPI_SUPPORTS_CUSTOM \n+        NULL, \n+#endif\n+        sck, miso, mosi, spi_host, spi_freq_mhz);\n+}\n+\n+void ETHClass::end(void)\n+{\n+    _eth_started = false;\n+\n+    if(_esp_netif != NULL){\n+        esp_netif_destroy(_esp_netif);\n+        _esp_netif = NULL;\n+    }\n+\n+    if(_eth_handle != NULL){\n+        if(esp_eth_stop(_eth_handle) != ESP_OK){\n+            log_e(\"Failed to stop Ethernet\");\n+            return;\n+        }\n+        if(esp_eth_driver_uninstall(_eth_handle) != ESP_OK){\n+            log_e(\"Failed to stop Ethernet\");\n+            return;\n+        }\n+        _eth_handle = NULL;\n+    }\n+\n+#if ETH_SPI_SUPPORTS_CUSTOM\n+    _spi = NULL;\n+#endif\n+\n+#if CONFIG_ETH_USE_ESP32_EMAC\n+    if(_pin_rmii_clock != -1 && _pin_mcd != -1 && _pin_mdio != -1){\n+        perimanSetPinBus(_pin_rmii_clock, ESP32_BUS_TYPE_INIT, NULL);\n+        perimanSetPinBus(_pin_mcd, ESP32_BUS_TYPE_INIT, NULL);\n+        perimanSetPinBus(_pin_mdio, ESP32_BUS_TYPE_INIT, NULL);\n+\n+        perimanSetPinBus(ETH_RMII_TX_EN, ESP32_BUS_TYPE_INIT, NULL);\n+        perimanSetPinBus(ETH_RMII_TX0, ESP32_BUS_TYPE_INIT, NULL);\n+        perimanSetPinBus(ETH_RMII_TX1, ESP32_BUS_TYPE_INIT, NULL);\n+        perimanSetPinBus(ETH_RMII_RX0, ESP32_BUS_TYPE_INIT, NULL);\n+        perimanSetPinBus(ETH_RMII_RX1_EN, ESP32_BUS_TYPE_INIT, NULL);\n+        perimanSetPinBus(ETH_RMII_CRS_DV, ESP32_BUS_TYPE_INIT, NULL);\n+\n+        _pin_rmii_clock = -1;\n+        _pin_mcd = -1;\n+        _pin_mdio = -1;\n+    }\n+\n+    if(_pin_power != -1){\n+        perimanSetPinBus(_pin_power, ESP32_BUS_TYPE_INIT, NULL);\n+        _pin_power = -1;\n+    }\n+#endif /* CONFIG_ETH_USE_ESP32_EMAC */\n+    if(_pin_cs != -1){\n+        perimanSetPinBus(_pin_cs, ESP32_BUS_TYPE_INIT, NULL);\n+        _pin_cs = -1;\n+    }\n+    if(_pin_irq != -1){\n+        perimanSetPinBus(_pin_irq, ESP32_BUS_TYPE_INIT, NULL);\n+        _pin_irq = -1;\n+    }\n+    if(_pin_sck != -1){\n+        perimanSetPinBus(_pin_sck,  ESP32_BUS_TYPE_INIT, NULL);\n+        _pin_sck = -1;\n+    }\n+    if(_pin_miso != -1){\n+        perimanSetPinBus(_pin_miso, ESP32_BUS_TYPE_INIT, NULL);\n+        _pin_miso = -1;\n+    }\n+    if(_pin_mosi != -1){\n+        perimanSetPinBus(_pin_mosi, ESP32_BUS_TYPE_INIT, NULL);\n+        _pin_mosi = -1;\n+    }\n+    if(_pin_rst != -1){\n+        perimanSetPinBus(_pin_rst, ESP32_BUS_TYPE_INIT, NULL);\n+        _pin_rst = -1;\n+    }\n+}\n+\n bool ETHClass::config(IPAddress local_ip, IPAddress gateway, IPAddress subnet, IPAddress dns1, IPAddress dns2)\n {\n+    if(_esp_netif == NULL){\n+        return false;\n+    }\n     esp_err_t err = ESP_OK;\n     esp_netif_ip_info_t info;\n+    esp_netif_dns_info_t d1;\n+    esp_netif_dns_info_t d2;\n+    d1.ip.type = IPADDR_TYPE_V4;\n+    d2.ip.type = IPADDR_TYPE_V4;\n \n     if(static_cast<uint32_t>(local_ip) != 0){\n         info.ip.addr = static_cast<uint32_t>(local_ip);\n         info.gw.addr = static_cast<uint32_t>(gateway);\n         info.netmask.addr = static_cast<uint32_t>(subnet);\n+        d1.ip.u_addr.ip4.addr = static_cast<uint32_t>(dns1);\n+        d2.ip.u_addr.ip4.addr = static_cast<uint32_t>(dns2);\n     } else {\n         info.ip.addr = 0;\n         info.gw.addr = 0;\n         info.netmask.addr = 0;\n+        d1.ip.u_addr.ip4.addr = 0;\n+        d2.ip.u_addr.ip4.addr = 0;\n \t}\n \n-    err = esp_netif_dhcpc_stop(esp_netif);\n+    // Stop DHCPC\n+    err = esp_netif_dhcpc_stop(_esp_netif);\n     if(err != ESP_OK && err != ESP_ERR_ESP_NETIF_DHCP_ALREADY_STOPPED){\n         log_e(\"DHCP could not be stopped! Error: %d\", err);\n         return false;\n     }\n \n-    err = esp_netif_set_ip_info(esp_netif, &info);\n+    // Set IPv4, Netmask, Gateway\n+    err = esp_netif_set_ip_info(_esp_netif, &info);\n     if(err != ERR_OK){\n         log_e(\"ETH IP could not be configured! Error: %d\", err);\n         return false;\n     }\n     \n-    if(info.ip.addr){\n-        staticIP = true;\n-    } else {\n-        err = esp_netif_dhcpc_start(esp_netif);\n+    // Set DNS1-Server\n+    esp_netif_set_dns_info(_esp_netif, ESP_NETIF_DNS_MAIN, &d1);\n+\n+    // Set DNS2-Server\n+    esp_netif_set_dns_info(_esp_netif, ESP_NETIF_DNS_BACKUP, &d2);\n+\n+    // Start DHCPC if static IP was set\n+    if(info.ip.addr == 0){\n+        err = esp_netif_dhcpc_start(_esp_netif);\n         if(err != ESP_OK && err != ESP_ERR_ESP_NETIF_DHCP_ALREADY_STARTED){\n             log_w(\"DHCP could not be started! Error: %d\", err);\n             return false;\n         }\n-        staticIP = false;\n-    }\n-\n-    esp_netif_dns_info_t d;\n-    d.ip.type = IPADDR_TYPE_V4;\n-\n-    if(static_cast<uint32_t>(dns1) != 0) {\n-        // Set DNS1-Server\n-        d.ip.u_addr.ip4.addr = static_cast<uint32_t>(dns1);\n-        esp_netif_set_dns_info(esp_netif, ESP_NETIF_DNS_MAIN, &d);\n-    }\n-\n-    if(static_cast<uint32_t>(dns2) != 0) {\n-        // Set DNS2-Server\n-        d.ip.u_addr.ip4.addr = static_cast<uint32_t>(dns2);\n-        esp_netif_set_dns_info(esp_netif, ESP_NETIF_DNS_BACKUP, &d);\n     }\n \n     return true;\n@@ -524,8 +749,11 @@ bool ETHClass::config(IPAddress local_ip, IPAddress gateway, IPAddress subnet, I\n \n IPAddress ETHClass::localIP()\n {\n+    if(_esp_netif == NULL){\n+        return IPAddress();\n+    }\n     esp_netif_ip_info_t ip;\n-    if(esp_netif_get_ip_info(esp_netif, &ip)){\n+    if(esp_netif_get_ip_info(_esp_netif, &ip)){\n         return IPAddress();\n     }\n     return IPAddress(ip.ip.addr);\n@@ -533,8 +761,11 @@ IPAddress ETHClass::localIP()\n \n IPAddress ETHClass::subnetMask()\n {\n+    if(_esp_netif == NULL){\n+        return IPAddress();\n+    }\n     esp_netif_ip_info_t ip;\n-    if(esp_netif_get_ip_info(esp_netif, &ip)){\n+    if(esp_netif_get_ip_info(_esp_netif, &ip)){\n         return IPAddress();\n     }\n     return IPAddress(ip.netmask.addr);\n@@ -542,8 +773,11 @@ IPAddress ETHClass::subnetMask()\n \n IPAddress ETHClass::gatewayIP()\n {\n+    if(_esp_netif == NULL){\n+        return IPAddress();\n+    }\n     esp_netif_ip_info_t ip;\n-    if(esp_netif_get_ip_info(esp_netif, &ip)){\n+    if(esp_netif_get_ip_info(_esp_netif, &ip)){\n         return IPAddress();\n     }\n     return IPAddress(ip.gw.addr);\n@@ -551,8 +785,11 @@ IPAddress ETHClass::gatewayIP()\n \n IPAddress ETHClass::dnsIP(uint8_t dns_no)\n {\n+    if(_esp_netif == NULL){\n+        return IPAddress();\n+    }\n     esp_netif_dns_info_t d;\n-    if(esp_netif_get_dns_info(esp_netif, dns_no?ESP_NETIF_DNS_BACKUP:ESP_NETIF_DNS_MAIN, &d) != ESP_OK){\n+    if(esp_netif_get_dns_info(_esp_netif, dns_no?ESP_NETIF_DNS_BACKUP:ESP_NETIF_DNS_MAIN, &d) != ESP_OK){\n         return IPAddress();\n     }\n     return IPAddress(d.ip.u_addr.ip4.addr);\n@@ -560,8 +797,11 @@ IPAddress ETHClass::dnsIP(uint8_t dns_no)\n \n IPAddress ETHClass::broadcastIP()\n {\n+    if(_esp_netif == NULL){\n+        return IPAddress();\n+    }\n     esp_netif_ip_info_t ip;\n-    if(esp_netif_get_ip_info(esp_netif, &ip)){\n+    if(esp_netif_get_ip_info(_esp_netif, &ip)){\n         return IPAddress();\n     }\n     return WiFiGenericClass::calculateBroadcast(IPAddress(ip.gw.addr), IPAddress(ip.netmask.addr));\n@@ -569,8 +809,11 @@ IPAddress ETHClass::broadcastIP()\n \n IPAddress ETHClass::networkID()\n {\n+    if(_esp_netif == NULL){\n+        return IPAddress();\n+    }\n     esp_netif_ip_info_t ip;\n-    if(esp_netif_get_ip_info(esp_netif, &ip)){\n+    if(esp_netif_get_ip_info(_esp_netif, &ip)){\n         return IPAddress();\n     }\n     return WiFiGenericClass::calculateNetworkID(IPAddress(ip.gw.addr), IPAddress(ip.netmask.addr));\n@@ -578,8 +821,11 @@ IPAddress ETHClass::networkID()\n \n uint8_t ETHClass::subnetCIDR()\n {\n+    if(_esp_netif == NULL){\n+        return (uint8_t)0;\n+    }\n     esp_netif_ip_info_t ip;\n-    if(esp_netif_get_ip_info(esp_netif, &ip)){\n+    if(esp_netif_get_ip_info(_esp_netif, &ip)){\n         return (uint8_t)0;\n     }\n     return WiFiGenericClass::calculateSubnetCIDR(IPAddress(ip.netmask.addr));\n@@ -587,8 +833,11 @@ uint8_t ETHClass::subnetCIDR()\n \n const char * ETHClass::getHostname()\n {\n+    if(_esp_netif == NULL){\n+        return \"\";\n+    }\n     const char * hostname;\n-    if(esp_netif_get_hostname(esp_netif, &hostname)){\n+    if(esp_netif_get_hostname(_esp_netif, &hostname)){\n         return NULL;\n     }\n     return hostname;\n@@ -596,64 +845,129 @@ const char * ETHClass::getHostname()\n \n bool ETHClass::setHostname(const char * hostname)\n {\n-    return esp_netif_set_hostname(esp_netif, hostname) == 0;\n+    if(_esp_netif == NULL){\n+        return false;\n+    }\n+    return esp_netif_set_hostname(_esp_netif, hostname) == 0;\n }\n \n-bool ETHClass::fullDuplex()\n+bool ETHClass::enableIpV6()\n {\n-#if ESP_IDF_VERSION_MAJOR > 3\n-    eth_duplex_t link_duplex;\n-    esp_eth_ioctl(eth_handle, ETH_CMD_G_DUPLEX_MODE, &link_duplex);\n-    return (link_duplex == ETH_DUPLEX_FULL);\n-#else\n-    return eth_config.phy_get_duplex_mode();\n-#endif\n+    if(_esp_netif == NULL){\n+        return false;\n+    }\n+    return esp_netif_create_ip6_linklocal(_esp_netif) == 0;\n }\n \n-bool ETHClass::linkUp()\n+IPv6Address ETHClass::localIPv6()\n+{\n+    if(_esp_netif == NULL){\n+        return IPv6Address();\n+    }\n+    static esp_ip6_addr_t addr;\n+    if(esp_netif_get_ip6_linklocal(_esp_netif, &addr)){\n+        return IPv6Address();\n+    }\n+    return IPv6Address(addr.addr);\n+}\n+\n+const char * ETHClass::ifkey(void)\n+{\n+    if(_esp_netif == NULL){\n+        return \"\";\n+    }\n+    return esp_netif_get_ifkey(_esp_netif);\n+}\n+\n+const char * ETHClass::desc(void)\n+{\n+    if(_esp_netif == NULL){\n+        return \"\";\n+    }\n+    return esp_netif_get_desc(_esp_netif);\n+}\n+\n+String ETHClass::impl_name(void)\n+{\n+    if(_esp_netif == NULL){\n+        return String(\"\");\n+    }\n+    char netif_name[8];\n+    esp_err_t err = esp_netif_get_netif_impl_name(_esp_netif, netif_name);\n+    if(err != ESP_OK){\n+        log_e(\"Failed to get netif impl_name: %d\", err);\n+        return String(\"\");\n+    }\n+    return String(netif_name);\n+}\n+\n+bool ETHClass::connected()\n {\n-#if ESP_IDF_VERSION_MAJOR > 3\n     return WiFiGenericClass::getStatusBits() & ETH_CONNECTED_BIT;\n-#else\n-    return eth_config.phy_check_link();\n-#endif\n }\n \n-uint8_t ETHClass::linkSpeed()\n+bool ETHClass::hasIP()\n {\n-#if ESP_IDF_VERSION_MAJOR > 3\n-    eth_speed_t link_speed;\n-    esp_eth_ioctl(eth_handle, ETH_CMD_G_SPEED, &link_speed);\n-    return (link_speed == ETH_SPEED_10M)?10:100;\n-#else\n-    return eth_config.phy_get_speed_mode()?100:10;\n-#endif\n+    return WiFiGenericClass::getStatusBits() & ETH_HAS_IP_BIT;\n }\n \n-bool ETHClass::enableIpV6()\n+bool ETHClass::linkUp()\n {\n-    return esp_netif_create_ip6_linklocal(esp_netif) == 0;\n+    if(_esp_netif == NULL){\n+        return false;\n+    }\n+    return esp_netif_is_netif_up(_esp_netif);\n }\n \n-IPv6Address ETHClass::localIPv6()\n+bool ETHClass::fullDuplex()\n {\n-    static esp_ip6_addr_t addr;\n-    if(esp_netif_get_ip6_linklocal(esp_netif, &addr)){\n-        return IPv6Address();\n+    if(_eth_handle == NULL){\n+        return false;\n     }\n-    return IPv6Address(addr.addr);\n+    eth_duplex_t link_duplex;\n+    esp_eth_ioctl(_eth_handle, ETH_CMD_G_DUPLEX_MODE, &link_duplex);\n+    return (link_duplex == ETH_DUPLEX_FULL);\n+}\n+\n+bool ETHClass::autoNegotiation()\n+{\n+    if(_eth_handle == NULL){\n+        return false;\n+    }\n+    bool auto_nego;\n+    esp_eth_ioctl(_eth_handle, ETH_CMD_G_AUTONEGO, &auto_nego);\n+    return auto_nego;\n+}\n+\n+uint32_t ETHClass::phyAddr()\n+{\n+    if(_eth_handle == NULL){\n+        return 0;\n+    }\n+    uint32_t phy_addr;\n+    esp_eth_ioctl(_eth_handle, ETH_CMD_G_PHY_ADDR, &phy_addr);\n+    return phy_addr;\n+}\n+\n+uint8_t ETHClass::linkSpeed()\n+{\n+    if(_eth_handle == NULL){\n+        return 0;\n+    }\n+    eth_speed_t link_speed;\n+    esp_eth_ioctl(_eth_handle, ETH_CMD_G_SPEED, &link_speed);\n+    return (link_speed == ETH_SPEED_10M)?10:100;\n }\n \n uint8_t * ETHClass::macAddress(uint8_t* mac)\n {\n+    if(_eth_handle == NULL){\n+        return NULL;\n+    }\n     if(!mac){\n         return NULL;\n     }\n-#ifdef ESP_IDF_VERSION_MAJOR\n-    esp_eth_ioctl(eth_handle, ETH_CMD_G_MAC_ADDR, mac);\n-#else\n-    esp_eth_get_mac(mac);\n-#endif\n+    esp_eth_ioctl(_eth_handle, ETH_CMD_G_MAC_ADDR, mac);\n     return mac;\n }\n \n@@ -666,36 +980,48 @@ String ETHClass::macAddress(void)\n     return String(macStr);\n }\n \n-#if ESP_IDF_VERSION_MAJOR > 3\n-\n-void ETHClass::end(void)\n-{\n-    if(esp_eth_stop(eth_handle) != ESP_OK) {\n-        log_e(\"Failed to stop Ehternet\");\n-        return;\n+void ETHClass::printInfo(Print & out){\n+    out.print(desc());\n+    out.print(\":\");\n+    if(linkUp()){\n+        out.print(\" <UP\");\n+    } else {\n+        out.print(\" <DOWN\");\n     }\n-    if(esp_eth_driver_uninstall(eth_handle) != ESP_OK) {\n-        log_e(\"Failed to stop Ethernet\");\n-        return;\n+    out.print(\",\");\n+    out.print(linkSpeed());\n+    out.print(\"M\");\n+    if(fullDuplex()){\n+        out.print(\",FULL_DUPLEX\");\n     }\n-    _started = false;\n-\n-    perimanSetPinBus(_pin_rmii_clock, ESP32_BUS_TYPE_INIT, NULL);\n-    perimanSetPinBus(_pin_mcd, ESP32_BUS_TYPE_INIT, NULL);\n-    perimanSetPinBus(_pin_mdio, ESP32_BUS_TYPE_INIT, NULL);\n-\n-    perimanSetPinBus(ETH_RMII_TX_EN, ESP32_BUS_TYPE_INIT, NULL);\n-    perimanSetPinBus(ETH_RMII_TX0, ESP32_BUS_TYPE_INIT, NULL);\n-    perimanSetPinBus(ETH_RMII_TX1, ESP32_BUS_TYPE_INIT, NULL);\n-    perimanSetPinBus(ETH_RMII_RX0, ESP32_BUS_TYPE_INIT, NULL);\n-    perimanSetPinBus(ETH_RMII_RX1_EN, ESP32_BUS_TYPE_INIT, NULL);\n-    perimanSetPinBus(ETH_RMII_CRS_DV, ESP32_BUS_TYPE_INIT, NULL);\n-\n-    if(_pin_power != -1){\n-        perimanSetPinBus(_pin_power, ESP32_BUS_TYPE_INIT, NULL);\n+    if(autoNegotiation()){\n+        out.print(\",AUTO\");\n     }\n+    out.println(\">\");\n+\n+    out.print(\"      \");\n+    out.print(\"ether \");\n+    out.print(macAddress());\n+    out.printf(\" phy 0x%lX\", phyAddr());\n+    out.println();\n+\n+    out.print(\"      \");\n+    out.print(\"inet \");\n+    out.print(localIP());\n+    out.print(\" netmask \");\n+    out.print(subnetMask());\n+    out.print(\" broadcast \");\n+    out.print(broadcastIP());\n+    out.println();\n+\n+    out.print(\"      \");\n+    out.print(\"gateway \");\n+    out.print(gatewayIP());\n+    out.print(\" dns \");\n+    out.print(dnsIP());\n+    out.println();\n+\n+    out.println();\n }\n \n-#endif\n-\n ETHClass ETH;\n",
            "comment_added_diff": {
                "172": "    // Use ESP_NETIF_INHERENT_DEFAULT_ETH when multiple Ethernet interfaces are used and so you need to modify",
                "173": "    // esp-netif configuration parameters for each interface (name, priority, etc.).",
                "221": "    // holds a few milliseconds to let DHCP start and enter into a good state",
                "222": "    // FIX ME -- adresses issue https://github.com/espressif/arduino-esp32/issues/5733",
                "255": "    // log_i(\" 0x%04lx 0x%04lx %lu\", cmd, addr, data_len);",
                "296": "    // log_i(\"0x%04lx 0x%04lx %lu\", cmd, addr, data_len);",
                "392": "    // Init SPI bus",
                "410": "    // Install GPIO ISR handler to be able to service SPI Eth modules interrupts",
                "417": "    // Init common MAC and PHY configs to default",
                "421": "    // Update PHY config based on board specific configuration",
                "425": "    // Configure SPI interface for specific SPI module",
                "492": "    // Init Ethernet driver to default and install it",
                "504": "    // Derive a new MAC address for this interface",
                "521": "    // Use ESP_NETIF_DEFAULT_ETH when just one Ethernet interface is used and you don't need to modify",
                "522": "    // default esp-netif configuration parameters.",
                "525": "    // Use ESP_NETIF_INHERENT_DEFAULT_ETH when multiple Ethernet interfaces are used and so you need to modify",
                "526": "    // esp-netif configuration parameters for each interface (name, priority, etc.).",
                "546": "    // Attach Ethernet driver to TCP/IP stack",
                "559": "    // attach to WiFiGeneric to receive events",
                "562": "    // Start Ethernet driver state machine",
                "571": "    // If Arduino's SPI is used, cs pin is in GPIO mode",
                "718": "    // Stop DHCPC",
                "725": "    // Set IPv4, Netmask, Gateway",
                "732": "    // Set DNS1-Server",
                "735": "    // Set DNS2-Server",
                "738": "    // Start DHCPC if static IP was set"
            },
            "comment_deleted_diff": {
                "69": "    // apll_freq = xtal_freq * (4 + sdm2 + sdm1/256 + sdm0/65536)/((o_div + 2) * 2)",
                "72": "    case RTC_XTAL_FREQ_40M: // Recommended",
                "73": "        // 50 MHz = 40MHz * (4 + 6) / (2 * (2 + 2) = 50.000",
                "74": "        // sdm0 = 0, sdm1 = 0, sdm2 = 6, o_div = 2",
                "78": "        // 50 MHz = 26MHz * (4 + 15 + 118 / 256 + 39/65536) / ((3 + 2) * 2) = 49.999992",
                "79": "        // sdm0 = 39, sdm1 = 118, sdm2 = 15, o_div = 3",
                "83": "        // 50 MHz = 24MHz * (4 + 12 + 255 / 256 + 255/65536) / ((2 + 2) * 2) = 49.499977",
                "84": "        // sdm0 = 255, sdm1 = 255, sdm2 = 12, o_div = 2",
                "87": "    default: // Assume we have a 40M xtal",
                "101": "    // First deinit current config if different",
                "124": "    // Setup interface for the correct pin",
                "131": "        // RMII clock (50MHz) input to GPIO0",
                "143": "            // APLL clock output to GPIO0 (must be configured to 50MHz!)",
                "148": "            // Choose the APLL clock to output on GPIO",
                "153": "            // RMII CLK (50MHz) output to GPIO16",
                "161": "            // RMII CLK (50MHz) output to GPIO17",
                "193": "//    return ESP_OK;",
                "457": "    // holds a few milliseconds to let DHCP start and enter into a good state",
                "458": "    // FIX ME -- adresses issue https://github.com/espressif/arduino-esp32/issues/5733",
                "511": "        // Set DNS1-Server",
                "517": "        // Set DNS2-Server"
            },
            "comment_modified_diff": {}
        }
    ],
    "ETH.h": [],
    "BluetoothSerial.cpp": [
        {
            "commit": "2ddce3c1f233a4329162444d5c89b83cc9642ccd",
            "timestamp": "2023-02-13T12:32:47+02:00",
            "author": "Tom\u00e1\u0161 Piln\u00fd",
            "commit_message": "Added methods + example to retrive local MAC for BT (#7778)\n\n* Added methods + example to retrive local MAC for BT\r\n\r\n* Added .skip files in the new example folder\r\n\r\n* Fixed typos and formatting + added doxygen comments\r\n\r\n* changed std::string to String\r\n\r\n* another std::string -> String\r\n\r\n* Changed std::string to String\r\n\r\n* chaged string type in example",
            "additions": 27,
            "deletions": 2,
            "change_type": "MODIFY",
            "diff": "@@ -661,8 +661,6 @@ static bool _init_bt(const char *deviceName)\n         }\n     }\n \n-    // Why only master need this?  Slave need this during pairing as well\n-//    if (_isMaster && esp_bt_gap_register_callback(esp_bt_gap_cb) != ESP_OK) {\n     if (esp_bt_gap_register_callback(esp_bt_gap_cb) != ESP_OK) {\n         log_e(\"gap register failed\");\n         return false;\n@@ -1183,4 +1181,31 @@ std::map<int, std::string> BluetoothSerial::getChannels(const BTAddress &remoteA\n     return sdpRecords;\n }\n \n+/**\n+ * @brief      Gets the MAC address of local BT device in byte array.\n+ *\n+ * @param      mac [out]  The mac\n+ */\n+void BluetoothSerial::getBtAddress(uint8_t *mac) {\n+    const uint8_t *dev_mac = esp_bt_dev_get_address();\n+    memcpy(mac, dev_mac, ESP_BD_ADDR_LEN);\n+}\n+/**\n+ * @brief      Gets the MAC address of local BT device as BTAddress object.\n+ *\n+ * @return     The BTAddress object.\n+ */\n+BTAddress BluetoothSerial::getBtAddressObject() {\n+    uint8_t mac_arr[ESP_BD_ADDR_LEN];\n+    getBtAddress(mac_arr);\n+    return BTAddress(mac_arr);\n+}\n+/**\n+ * @brief      Gets the MAC address of local BT device as string.\n+ *\n+ * @return     The BT MAC address string.\n+ */\n+String BluetoothSerial::getBtAddressString() {\n+    return getBtAddressObject().toString(true);\n+}\n #endif\n",
            "comment_added_diff": {},
            "comment_deleted_diff": {
                "664": "    // Why only master need this?  Slave need this during pairing as well",
                "665": "//    if (_isMaster && esp_bt_gap_register_callback(esp_bt_gap_cb) != ESP_OK) {"
            },
            "comment_modified_diff": {}
        },
        {
            "commit": "02e7fd884ab96f1e3cdfb47f4f05bdfd86cb4cdd",
            "timestamp": "2023-10-06T15:49:51+03:00",
            "author": "Me No Dev",
            "commit_message": "BT serial: SSP improvements, added missing events (#8723)\n\n* Renamed SerialToSerialBT_SSP_pairing\r\n\r\n* Clarified useage of SPP example\r\n\r\n* Added missing events\r\n\r\n* Implemented dropCache() method to remove bonded devices\r\n\r\n* Removed legacy pairing, enhaced SSP\r\n\r\n* Minor updates to examples\r\n\r\n* Updated README + asociated comments in source and example\r\n\r\n* Implemented more methods to manipulate bonded devices + modified example\r\n\r\n* Added SPP event\r\n\r\n* Reordered event to match enum declaration; added missing events; added comments\r\n\r\n* Re-implemented legacy pairing support\r\n\r\n* Spelling fixes in README\r\n\r\n* Removed unnecessary test in discover()\r\n\r\n* Updates\r\n\r\n---------\r\n\r\nCo-authored-by: Tomas Pilny <tomas.pilny@espressif.com>\r\nCo-authored-by: Tom\u00e1\u0161 Piln\u00fd <pilnyt@seznam.cz>",
            "additions": 367,
            "deletions": 187,
            "change_type": "MODIFY",
            "diff": "@@ -24,10 +24,11 @@\n #if defined(CONFIG_BT_ENABLED) && defined(CONFIG_BLUEDROID_ENABLED)\n \n #ifdef ARDUINO_ARCH_ESP32\n-#include \"esp32-hal-log.h\"\n+  #include \"esp32-hal-log.h\"\n #endif\n \n #include \"BluetoothSerial.h\"\n+#include \"BTAdvertisedDevice.h\"\n \n #include \"esp_bt.h\"\n #include \"esp_bt_main.h\"\n@@ -58,7 +59,10 @@ static esp_spp_cb_t * custom_spp_callback = NULL;\n static BluetoothSerialDataCb custom_data_callback = NULL;\n static esp_bd_addr_t current_bd_addr;\n static ConfirmRequestCb confirm_request_callback = NULL;\n+static KeyRequestCb key_request_callback = NULL;\n static AuthCompleteCb auth_complete_callback = NULL;\n+static bool _rmt_name_valid = false;\n+static uint8_t _rmt_name[ESP_BT_GAP_MAX_BDNAME_LEN + 1] = {0};\n \n #define INQ_LEN 0x10\n #define INQ_NUM_RSPS 20\n@@ -68,10 +72,13 @@ static esp_bd_addr_t _peer_bd_addr;\n static char _remote_name[ESP_BT_GAP_MAX_BDNAME_LEN + 1];\n static bool _isRemoteAddressSet;\n static bool _isMaster;\n-static esp_bt_pin_code_t _pin_code;\n-static int _pin_len;\n-static bool _isPinSet;\n-static bool _enableSSP;\n+#ifdef CONFIG_BT_SSP_ENABLED\n+  static bool _enableSSP;\n+  static bool _IO_CAP_INPUT;\n+  static bool _IO_CAP_OUTPUT;\n+#endif\n+esp_bt_pin_code_t _pin_code = {0};\n+uint8_t _pin_code_len = 0; // Number of valid Bytes in the esp_bt_pin_code_t array\n static esp_spp_sec_t _sec_mask;\n static esp_spp_role_t _role;\n // start connect on ESP_SPP_DISCOVERY_COMP_EVT or save entry for getChannels\n@@ -139,22 +146,6 @@ static bool get_name_from_eir(uint8_t *eir, char *bdname, uint8_t *bdname_len)\n     return false;\n }\n \n-static bool btSetPin() {\n-    esp_bt_pin_type_t pin_type;\n-    if (_isPinSet) {\n-        if (_pin_len) {\n-            log_i(\"pin set\");\n-            pin_type = ESP_BT_PIN_TYPE_FIXED;\n-        } else {\n-            _isPinSet = false;\n-            log_i(\"pin reset\");\n-            pin_type = ESP_BT_PIN_TYPE_VARIABLE; // pin_code would be ignored (default)\n-        }\n-        return (esp_bt_gap_set_pin(pin_type, _pin_len, _pin_code) == ESP_OK);        \n-    }\n-    return false;\n-}\n-\n static esp_err_t _spp_queue_packet(uint8_t *data, size_t len){\n     if(!data || !len){\n         log_w(\"No data provided\");\n@@ -259,7 +250,7 @@ static void esp_spp_cb(esp_spp_cb_event_t event, esp_spp_cb_param_t *param)\n {\n     switch (event)\n     {\n-    case ESP_SPP_INIT_EVT:\n+    case ESP_SPP_INIT_EVT: // Enum 0 - When SPP is initialized\n         log_i(\"ESP_SPP_INIT_EVT\");\n #ifdef ESP_IDF_VERSION_MAJOR\n         esp_bt_gap_set_scan_mode(ESP_BT_CONNECTABLE, ESP_BT_GENERAL_DISCOVERABLE);\n@@ -273,80 +264,11 @@ static void esp_spp_cb(esp_spp_cb_event_t event, esp_spp_cb_param_t *param)\n         xEventGroupSetBits(_spp_event_group, SPP_RUNNING);\n         break;\n \n-    case ESP_SPP_SRV_OPEN_EVT://Server connection open\n-        if (param->srv_open.status == ESP_SPP_SUCCESS) {\n-            log_i(\"ESP_SPP_SRV_OPEN_EVT: %u\", _spp_client);\n-            if (!_spp_client){\n-                _spp_client = param->srv_open.handle;\n-                _spp_tx_buffer_len = 0;\n-            } else {\n-                secondConnectionAttempt = true;\n-                esp_spp_disconnect(param->srv_open.handle);\n-            }\n-            xEventGroupClearBits(_spp_event_group, SPP_DISCONNECTED);\n-            xEventGroupSetBits(_spp_event_group, SPP_CONNECTED);\n-        } else {\n-            log_e(\"ESP_SPP_SRV_OPEN_EVT Failed!, status:%d\", param->srv_open.status);\n-        }\n-        break;\n-\n-    case ESP_SPP_CLOSE_EVT://Client connection closed\n-        if ((param->close.async == false && param->close.status == ESP_SPP_SUCCESS) || param->close.async) {\n-            log_i(\"ESP_SPP_CLOSE_EVT status:%d handle:%d close_by_remote:%d attempt %u\", param->close.status,\n-                 param->close.handle, param->close.async, secondConnectionAttempt);\n-            if(secondConnectionAttempt) {\n-                secondConnectionAttempt = false;\n-            } else {\n-                _spp_client = 0;\n-                xEventGroupSetBits(_spp_event_group, SPP_DISCONNECTED);\n-                xEventGroupSetBits(_spp_event_group, SPP_CONGESTED);\n-                xEventGroupSetBits(_spp_event_group, SPP_CLOSED);\n-                xEventGroupClearBits(_spp_event_group, SPP_CONNECTED);\n-            }        \n-        } else {\n-            log_e(\"ESP_SPP_CLOSE_EVT failed!, status:%d\", param->close.status);\n-        }\n-        break;\n-\n-    case ESP_SPP_CONG_EVT://connection congestion status changed\n-        if(param->cong.cong){\n-            xEventGroupClearBits(_spp_event_group, SPP_CONGESTED);\n-        } else {\n-            xEventGroupSetBits(_spp_event_group, SPP_CONGESTED);\n-        }\n-        log_v(\"ESP_SPP_CONG_EVT: %s\", param->cong.cong?\"CONGESTED\":\"FREE\");\n-        break;\n-\n-    case ESP_SPP_WRITE_EVT://write operation completed\n-        if (param->write.status == ESP_SPP_SUCCESS) {\n-            if(param->write.cong){\n-                xEventGroupClearBits(_spp_event_group, SPP_CONGESTED);\n-            }\n-            log_v(\"ESP_SPP_WRITE_EVT: %u %s\", param->write.len, param->write.cong?\"CONGESTED\":\"\");\n-        } else {\n-            log_e(\"ESP_SPP_WRITE_EVT failed!, status:%d\", param->write.status);\n-        }\n-        xSemaphoreGive(_spp_tx_done);//we can try to send another packet\n-        break;\n-\n-    case ESP_SPP_DATA_IND_EVT://connection received data\n-        log_v(\"ESP_SPP_DATA_IND_EVT len=%d handle=%d\", param->data_ind.len, param->data_ind.handle);\n-        //esp_log_buffer_hex(\"\",param->data_ind.data,param->data_ind.len); //for low level debug\n-        //ets_printf(\"r:%u\\n\", param->data_ind.len);\n-\n-        if(custom_data_callback){\n-            custom_data_callback(param->data_ind.data, param->data_ind.len);\n-        } else if (_spp_rx_queue != NULL){\n-            for (int i = 0; i < param->data_ind.len; i++){\n-                if(xQueueSend(_spp_rx_queue, param->data_ind.data + i, (TickType_t)0) != pdTRUE){\n-                    log_e(\"RX Full! Discarding %u bytes\", param->data_ind.len - i);\n-                    break;\n-                }\n-            }\n-        }\n+    case ESP_SPP_UNINIT_EVT: // Enum 1 - When SPP is deinitialized\n+        log_i(\"ESP_SPP_UNINIT_EVT: SPP is deinitialized\");\n         break;\n \n-    case ESP_SPP_DISCOVERY_COMP_EVT://discovery complete\n+    case ESP_SPP_DISCOVERY_COMP_EVT: // Enum 8 - When SDP discovery complete\n         log_i(\"ESP_SPP_DISCOVERY_COMP_EVT num=%d\", param->disc_comp.scn_num);\n         if (param->disc_comp.status == ESP_SPP_SUCCESS) {\n             for(int i=0; i < param->disc_comp.scn_num; i++) {\n@@ -380,7 +302,7 @@ static void esp_spp_cb(esp_spp_cb_event_t event, esp_spp_cb_param_t *param)\n         xEventGroupSetBits(_bt_event_group, BT_SDP_COMPLETED);\n         break;\n \n-    case ESP_SPP_OPEN_EVT://Client connection open\n+    case ESP_SPP_OPEN_EVT: // Enum 26 - When SPP Client connection open\n         log_i(\"ESP_SPP_OPEN_EVT\");\n         if (!_spp_client){\n                 _spp_client = param->open.handle;\n@@ -393,11 +315,29 @@ static void esp_spp_cb(esp_spp_cb_event_t event, esp_spp_cb_param_t *param)\n         xEventGroupSetBits(_spp_event_group, SPP_CONGESTED);\n         break;\n \n-    case ESP_SPP_START_EVT://server started\n+    case ESP_SPP_CLOSE_EVT: // Enum 27 - When SPP connection closed\n+        if ((param->close.async == false && param->close.status == ESP_SPP_SUCCESS) || param->close.async) {\n+            log_i(\"ESP_SPP_CLOSE_EVT status:%d handle:%d close_by_remote:%d attempt %u\", param->close.status,\n+                 param->close.handle, param->close.async, secondConnectionAttempt);\n+            if(secondConnectionAttempt) {\n+                secondConnectionAttempt = false;\n+            } else {\n+                _spp_client = 0;\n+                xEventGroupSetBits(_spp_event_group, SPP_DISCONNECTED);\n+                xEventGroupSetBits(_spp_event_group, SPP_CONGESTED);\n+                xEventGroupSetBits(_spp_event_group, SPP_CLOSED);\n+                xEventGroupClearBits(_spp_event_group, SPP_CONNECTED);\n+            }\n+        } else {\n+            log_e(\"ESP_SPP_CLOSE_EVT failed!, status:%d\", param->close.status);\n+        }\n+        break;\n+\n+    case ESP_SPP_START_EVT: // Enum 28 - When SPP server started\n         log_i(\"ESP_SPP_START_EVT\");\n         break;\n \n-    case ESP_SPP_CL_INIT_EVT://client initiated a connection\n+    case ESP_SPP_CL_INIT_EVT: // Enum 29 - When SPP client initiated a connection\n         if (param->cl_init.status == ESP_SPP_SUCCESS) {\n             log_i(\"ESP_SPP_CL_INIT_EVT handle:%d sec_id:%d\", param->cl_init.handle, param->cl_init.sec_id);\n         } else {\n@@ -405,8 +345,75 @@ static void esp_spp_cb(esp_spp_cb_event_t event, esp_spp_cb_param_t *param)\n         }\n         break;\n \n+    case ESP_SPP_DATA_IND_EVT: // Enum 30 - When SPP connection received data, only for ESP_SPP_MODE_CB\n+        log_v(\"ESP_SPP_DATA_IND_EVT len=%d handle=%d\", param->data_ind.len, param->data_ind.handle);\n+        //esp_log_buffer_hex(\"\",param->data_ind.data,param->data_ind.len); //for low level debug\n+        //ets_printf(\"r:%u\\n\", param->data_ind.len);\n+\n+        if(custom_data_callback){\n+            custom_data_callback(param->data_ind.data, param->data_ind.len);\n+        } else if (_spp_rx_queue != NULL){\n+            for (int i = 0; i < param->data_ind.len; i++){\n+                if(xQueueSend(_spp_rx_queue, param->data_ind.data + i, (TickType_t)0) != pdTRUE){\n+                    log_e(\"RX Full! Discarding %u bytes\", param->data_ind.len - i);\n+                    break;\n+                }\n+            }\n+        }\n+        break;\n+\n+    case ESP_SPP_CONG_EVT: // Enum 31 - When SPP connection congestion status changed, only for ESP_SPP_MODE_CB\n+        if(param->cong.cong){\n+            xEventGroupClearBits(_spp_event_group, SPP_CONGESTED);\n+        } else {\n+            xEventGroupSetBits(_spp_event_group, SPP_CONGESTED);\n+        }\n+        log_v(\"ESP_SPP_CONG_EVT: %s\", param->cong.cong?\"CONGESTED\":\"FREE\");\n+        break;\n+\n+    case ESP_SPP_WRITE_EVT: // Enum 33 - When SPP write operation completes, only for ESP_SPP_MODE_CB\n+        if (param->write.status == ESP_SPP_SUCCESS) {\n+            if(param->write.cong){\n+                xEventGroupClearBits(_spp_event_group, SPP_CONGESTED);\n+            }\n+            log_v(\"ESP_SPP_WRITE_EVT: %u %s\", param->write.len, param->write.cong?\"CONGESTED\":\"\");\n+        } else {\n+            log_e(\"ESP_SPP_WRITE_EVT failed!, status:%d\", param->write.status);\n+        }\n+        xSemaphoreGive(_spp_tx_done);//we can try to send another packet\n+        break;\n+\n+    case ESP_SPP_SRV_OPEN_EVT: // Enum 34 - When SPP Server connection open\n+        if (param->srv_open.status == ESP_SPP_SUCCESS) {\n+            log_i(\"ESP_SPP_SRV_OPEN_EVT: %u\", _spp_client);\n+            if (!_spp_client){\n+                _spp_client = param->srv_open.handle;\n+                _spp_tx_buffer_len = 0;\n+            } else {\n+                secondConnectionAttempt = true;\n+                esp_spp_disconnect(param->srv_open.handle);\n+            }\n+            xEventGroupClearBits(_spp_event_group, SPP_DISCONNECTED);\n+            xEventGroupSetBits(_spp_event_group, SPP_CONNECTED);\n+        } else {\n+            log_e(\"ESP_SPP_SRV_OPEN_EVT Failed!, status:%d\", param->srv_open.status);\n+        }\n+        break;\n+\n+    case ESP_SPP_SRV_STOP_EVT: // Enum 35 - When SPP server stopped\n+        log_i(\"ESP_SPP_SRV_STOP_EVT\");\n+        break;\n+\n+    case ESP_SPP_VFS_REGISTER_EVT: // Enum 36 - When SPP VFS register\n+        log_i(\"ESP_SPP_VFS_REGISTER_EVT\");\n+        break;\n+\n+    case ESP_SPP_VFS_UNREGISTER_EVT: // Enum 37 - When SPP VFS unregister\n+        log_i(\"ESP_SPP_VFS_UNREGISTER_EVT\");\n+        break;\n+\n     default:\n-        log_i(\"ESP_SPP_* event unhandled %d\", event);\n+        log_i(\"ESP_SPP_* event #%d unhandled\", event);\n         break;\n     }\n     if(custom_spp_callback)(*custom_spp_callback)(event, param);\n@@ -416,10 +423,11 @@ void BluetoothSerial::onData(BluetoothSerialDataCb cb){\n     custom_data_callback = cb;\n }\n \n+\n static void esp_bt_gap_cb(esp_bt_gap_cb_event_t event, esp_bt_gap_cb_param_t *param)\n {\n     switch(event){\n-        case ESP_BT_GAP_DISC_RES_EVT: {\n+        case ESP_BT_GAP_DISC_RES_EVT: { // Enum 0 - Device discovery result event\n             log_i(\"ESP_BT_GAP_DISC_RES_EVT properties=%d\", param->disc_res.num_prop);\n #if (ARDUHAL_LOG_LEVEL >= ARDUHAL_LOG_LEVEL_INFO)\n             char bda_str[18];\n@@ -430,21 +438,7 @@ static void esp_bt_gap_cb(esp_bt_gap_cb_event_t event, esp_bt_gap_cb_param_t *pa\n             char peer_bdname[ESP_BT_GAP_MAX_BDNAME_LEN + 1];\n             for (int i = 0; i < param->disc_res.num_prop; i++) {\n                 switch(param->disc_res.prop[i].type) {\n-                    case ESP_BT_GAP_DEV_PROP_EIR:  \n-                        if (get_name_from_eir((uint8_t*)param->disc_res.prop[i].val, peer_bdname, &peer_bdname_len)) {\n-                            log_i(\"ESP_BT_GAP_DISC_RES_EVT : EIR : %s : %d\", peer_bdname, peer_bdname_len);\n-                            if (strlen(_remote_name) == peer_bdname_len\n-                                && strncmp(peer_bdname, _remote_name, peer_bdname_len) == 0) {\n-                                log_v(\"ESP_BT_GAP_DISC_RES_EVT : SPP_START_DISCOVERY_EIR : %s\", peer_bdname, peer_bdname_len);\n-                                _isRemoteAddressSet = true;\n-                                memcpy(_peer_bd_addr, param->disc_res.bda, ESP_BD_ADDR_LEN);\n-                                esp_bt_gap_cancel_discovery();\n-                                esp_spp_start_discovery(_peer_bd_addr);\n-                            }\n-                        }\n-                        break;\n-\n-                    case ESP_BT_GAP_DEV_PROP_BDNAME:\n+                    case ESP_BT_GAP_DEV_PROP_BDNAME: // Enum 1 - Bluetooth device name, value type is int8_t []\n                         peer_bdname_len = param->disc_res.prop[i].len;\n                         memcpy(peer_bdname, param->disc_res.prop[i].val, peer_bdname_len);\n                         peer_bdname_len--; // len includes 0 terminator\n@@ -456,10 +450,10 @@ static void esp_bt_gap_cb(esp_bt_gap_cb_event_t event, esp_bt_gap_cb_param_t *pa\n                             memcpy(_peer_bd_addr, param->disc_res.bda, ESP_BD_ADDR_LEN);\n                             esp_bt_gap_cancel_discovery();\n                             esp_spp_start_discovery(_peer_bd_addr);\n-                        } \n+                        }\n                         break;\n \n-                    case ESP_BT_GAP_DEV_PROP_COD:\n+                    case ESP_BT_GAP_DEV_PROP_COD: // Enum 2 - Class of Device, value type is uint32_t\n                         if (param->disc_res.prop[i].len <= sizeof(int)) {\n                             uint32_t cod = 0;\n                             memcpy(&cod, param->disc_res.prop[i].val, param->disc_res.prop[i].len);\n@@ -470,7 +464,7 @@ static void esp_bt_gap_cb(esp_bt_gap_cb_event_t event, esp_bt_gap_cb_param_t *pa\n                         }\n                         break;\n \n-                    case ESP_BT_GAP_DEV_PROP_RSSI:\n+                    case ESP_BT_GAP_DEV_PROP_RSSI: // Enum 3 - Received Signal strength Indication, value type is int8_t, ranging from -128 to 127\n                         if (param->disc_res.prop[i].len <= sizeof(int)) {\n                             uint8_t rssi = 0;\n                             memcpy(&rssi, param->disc_res.prop[i].val, param->disc_res.prop[i].len);\n@@ -480,7 +474,21 @@ static void esp_bt_gap_cb(esp_bt_gap_cb_event_t event, esp_bt_gap_cb_param_t *pa\n                             log_d(\"ESP_BT_GAP_DEV_PROP_RSSI invalid RSSI: Value size larger than integer\");\n                         }\n                         break;\n-                        \n+\n+                    case ESP_BT_GAP_DEV_PROP_EIR: // Enum 4 - Extended Inquiry Response, value type is uint8_t []\n+                        if (get_name_from_eir((uint8_t*)param->disc_res.prop[i].val, peer_bdname, &peer_bdname_len)) {\n+                            log_i(\"ESP_BT_GAP_DISC_RES_EVT : EIR : %s : %d\", peer_bdname, peer_bdname_len);\n+                            if (strlen(_remote_name) == peer_bdname_len\n+                                && strncmp(peer_bdname, _remote_name, peer_bdname_len) == 0) {\n+                                log_v(\"ESP_BT_GAP_DISC_RES_EVT : SPP_START_DISCOVERY_EIR : %s\", peer_bdname, peer_bdname_len);\n+                                _isRemoteAddressSet = true;\n+                                memcpy(_peer_bd_addr, param->disc_res.bda, ESP_BD_ADDR_LEN);\n+                                esp_bt_gap_cancel_discovery();\n+                                esp_spp_start_discovery(_peer_bd_addr);\n+                            }\n+                        }\n+                        break;\n+\n                     default:\n                         log_i(\"ESP_BT_GAP_DISC_RES_EVT unknown property [%d]:type:%d\", i, param->disc_res.prop[i].type);\n                         break;\n@@ -498,7 +506,7 @@ static void esp_bt_gap_cb(esp_bt_gap_cb_event_t event, esp_bt_gap_cb_param_t *pa\n         }\n         break;\n \n-        case ESP_BT_GAP_DISC_STATE_CHANGED_EVT:\n+        case ESP_BT_GAP_DISC_STATE_CHANGED_EVT: // Enum 1 - Discovery state changed event\n             if (param->disc_st_chg.state == ESP_BT_GAP_DISCOVERY_STOPPED) {\n                 log_i(\"ESP_BT_GAP_DISC_STATE_CHANGED_EVT stopped\");\n                 xEventGroupClearBits(_bt_event_group, BT_DISCOVERY_RUNNING);\n@@ -510,15 +518,15 @@ static void esp_bt_gap_cb(esp_bt_gap_cb_event_t event, esp_bt_gap_cb_param_t *pa\n             }\n             break;\n \n-        case ESP_BT_GAP_RMT_SRVCS_EVT:\n+        case ESP_BT_GAP_RMT_SRVCS_EVT: // Enum 2 - Get remote services event\n             log_i( \"ESP_BT_GAP_RMT_SRVCS_EVT: status = %d, num_uuids = %d\", param->rmt_srvcs.stat, param->rmt_srvcs.num_uuids);\n             break;\n \n-        case ESP_BT_GAP_RMT_SRVC_REC_EVT:\n+        case ESP_BT_GAP_RMT_SRVC_REC_EVT: // Enum 3 - Get remote service record event\n             log_i(\"ESP_BT_GAP_RMT_SRVC_REC_EVT: status = %d\", param->rmt_srvc_rec.stat);\n             break;\n \n-        case ESP_BT_GAP_AUTH_CMPL_EVT:\n+        case ESP_BT_GAP_AUTH_CMPL_EVT: // Enum 4 - Authentication complete event\n             if (param->auth_cmpl.stat == ESP_BT_STATUS_SUCCESS) {\n                 log_v(\"authentication success: %s\", param->auth_cmpl.device_name);\n                 if (auth_complete_callback) {\n@@ -531,58 +539,89 @@ static void esp_bt_gap_cb(esp_bt_gap_cb_event_t event, esp_bt_gap_cb_param_t *pa\n                 }\n             }\n             break;\n-\n-        case ESP_BT_GAP_PIN_REQ_EVT:\n-            // default pairing pins\n-            log_i(\"ESP_BT_GAP_PIN_REQ_EVT min_16_digit:%d\", param->pin_req.min_16_digit);\n-            if (param->pin_req.min_16_digit) {\n-                log_i(\"Input pin code: 0000 0000 0000 0000\");\n-                esp_bt_pin_code_t pin_code;\n-                memset(pin_code, '0', ESP_BT_PIN_CODE_LEN);\n-                esp_bt_gap_pin_reply(param->pin_req.bda, true, 16, pin_code);\n+        case ESP_BT_GAP_PIN_REQ_EVT: // Enum 5 - Legacy Pairing Pin code request\n+            log_i(\"ESP_BT_GAP_PIN_REQ_EVT (min_16_digit=%d)\", param->pin_req.min_16_digit);\n+            if (param->pin_req.min_16_digit && _pin_code_len < 16) {\n+                esp_bt_gap_pin_reply(param->pin_req.bda, false, 0, NULL);\n             } else {\n-                log_i(\"Input pin code: 1234\");\n-                esp_bt_pin_code_t pin_code;\n-                memcpy(pin_code, \"1234\", 4);\n-                esp_bt_gap_pin_reply(param->pin_req.bda, true, 4, pin_code);\n+                //log_i(\"Input pin code: \\\"%s\\\"=0x%x\", _pin_code);\n+                log_i(\"Input pin code: \\\"%.*s\\\"=0x%x\", _pin_code_len, _pin_code, *(int*)_pin_code);\n+                esp_bt_gap_pin_reply(param->pin_req.bda, true, _pin_code_len, _pin_code);\n             }\n             break;\n-       \n-        case ESP_BT_GAP_CFM_REQ_EVT:\n+#ifdef CONFIG_BT_SSP_ENABLED\n+        case ESP_BT_GAP_CFM_REQ_EVT: // Enum 6 - Security Simple Pairing User Confirmation request.\n             log_i(\"ESP_BT_GAP_CFM_REQ_EVT Please compare the numeric value: %d\", param->cfm_req.num_val);\n             if (confirm_request_callback) {\n                 memcpy(current_bd_addr, param->cfm_req.bda, sizeof(esp_bd_addr_t));\n                 confirm_request_callback(param->cfm_req.num_val);\n             }\n             else {\n-                esp_bt_gap_ssp_confirm_reply(param->cfm_req.bda, true);\n+                log_w(\"ESP_BT_GAP_CFM_REQ_EVT: confirm_request_callback does not exist - refusing pairing\");\n+                esp_bt_gap_ssp_confirm_reply(param->cfm_req.bda, false);\n             }\n             break;\n+#endif\n \n-        case ESP_BT_GAP_KEY_NOTIF_EVT:\n+        case ESP_BT_GAP_KEY_NOTIF_EVT: // Enum 7 - Security Simple Pairing Passkey Notification\n             log_i(\"ESP_BT_GAP_KEY_NOTIF_EVT passkey:%d\", param->key_notif.passkey);\n             break;\n \n-        case ESP_BT_GAP_KEY_REQ_EVT:\n+#ifdef CONFIG_BT_SSP_ENABLED\n+        case ESP_BT_GAP_KEY_REQ_EVT: // Enum 8 - Security Simple Pairing Passkey request\n             log_i(\"ESP_BT_GAP_KEY_REQ_EVT Please enter passkey!\");\n+            if (key_request_callback) {\n+                memcpy(current_bd_addr, param->cfm_req.bda, sizeof(esp_bd_addr_t));\n+                key_request_callback();\n+            } else {\n+                log_w(\"ESP_BT_GAP_KEY_REQ_EVT: key_request_callback does not exist - refuseing pairing\");\n+                esp_bt_gap_ssp_confirm_reply(param->cfm_req.bda, false);\n+            }\n             break;\n+#endif\n \n-        case ESP_BT_GAP_CONFIG_EIR_DATA_EVT:\n+        case ESP_BT_GAP_READ_RSSI_DELTA_EVT: // Enum 9 - Read rssi event\n+            log_i(\"ESP_BT_GAP_READ_RSSI_DELTA_EVT Read rssi event\");\n+            break;\n+        case ESP_BT_GAP_CONFIG_EIR_DATA_EVT: // Enum 10 - Config EIR data event\n             log_i(\"ESP_BT_GAP_CONFIG_EIR_DATA_EVT: stat:%d num:%d\", param->config_eir_data.stat, param->config_eir_data.eir_type_num);\n             break;\n \n-        case ESP_BT_GAP_READ_REMOTE_NAME_EVT:\n+        case ESP_BT_GAP_SET_AFH_CHANNELS_EVT: // Enum 11 - Set AFH channels event\n+            log_i(\"ESP_BT_GAP_SET_AFH_CHANNELS_EVT Set AFH channels event\");\n+            break;\n+\n+        case ESP_BT_GAP_READ_REMOTE_NAME_EVT: // Enum 12 - Read Remote Name event\n             if (param->read_rmt_name.stat == ESP_BT_STATUS_SUCCESS ) {\n                 log_i(\"ESP_BT_GAP_READ_REMOTE_NAME_EVT: %s\", param->read_rmt_name.rmt_name);\n+                memcpy(_rmt_name, param->read_rmt_name.rmt_name, ESP_BT_GAP_MAX_BDNAME_LEN + 1);\n+                _rmt_name_valid = true;\n             } else {\n                 log_i(\"ESP_BT_GAP_READ_REMOTE_NAME_EVT: no success stat:%d\", param->read_rmt_name.stat);\n             }\n             break;\n \n-        case ESP_BT_GAP_MODE_CHG_EVT:\n+\n+        case ESP_BT_GAP_MODE_CHG_EVT: // Enum 13\n             log_i(\"ESP_BT_GAP_MODE_CHG_EVT: mode: %d\", param->mode_chg.mode);\n             break;\n \n+        case ESP_BT_GAP_REMOVE_BOND_DEV_COMPLETE_EVT: // Enum - 14 remove bond device complete event\n+            log_i(\"ESP_BT_GAP_REMOVE_BOND_DEV_COMPLETE_EVT remove bond device complete event\");\n+            break;\n+\n+        case ESP_BT_GAP_QOS_CMPL_EVT: // Enum 15 - QOS complete event\n+            log_i(\"ESP_BT_GAP_QOS_CMPL_EVT QOS complete event\");\n+            break;\n+\n+        case ESP_BT_GAP_ACL_CONN_CMPL_STAT_EVT: // Enum 16 - ACL connection complete status event\n+            log_i(\"ESP_BT_GAP_ACL_CONN_CMPL_STAT_EVT ACL connection complete status event\");\n+            break;\n+\n+        case ESP_BT_GAP_ACL_DISCONN_CMPL_STAT_EVT: // Enum 17 - ACL disconnection complete status event\n+            log_i(\"ESP_BT_GAP_ACL_DISCONN_CMPL_STAT_EVT ACL disconnection complete status event: reason %d, handle %d\", param->acl_disconn_cmpl_stat.reason, param->acl_disconn_cmpl_stat.handle);\n+            break;\n+\n         default:\n             log_i(\"ESP-BT_GAP_* unknown message: %d\", event);\n             break;\n@@ -678,24 +717,26 @@ static bool _init_bt(const char *deviceName)\n         return false;\n     }\n \n-    // if (esp_bt_sleep_disable() != ESP_OK){\n-    //     log_e(\"esp_bt_sleep_disable failed\");\n-    // }\n-\n     log_i(\"device name set\");\n     esp_bt_dev_set_device_name(deviceName);\n \n-    if (_isPinSet) {\n-        log_i(\"pin set\");\n-        btSetPin();\n-    }\n-\n+#ifdef CONFIG_BT_SSP_ENABLED\n     if (_enableSSP) {\n         log_i(\"Simple Secure Pairing\");\n         esp_bt_sp_param_t param_type = ESP_BT_SP_IOCAP_MODE;\n-        esp_bt_io_cap_t iocap = ESP_BT_IO_CAP_IO;\n+        esp_bt_io_cap_t iocap;\n+        if(_IO_CAP_INPUT && _IO_CAP_OUTPUT){\n+            iocap = ESP_BT_IO_CAP_IO; // Display with prompt\n+        }else if(!_IO_CAP_INPUT && _IO_CAP_OUTPUT){\n+            iocap = ESP_BT_IO_CAP_OUT; // DisplayOnly\n+        }else if(_IO_CAP_INPUT && !_IO_CAP_OUTPUT){\n+            iocap = ESP_BT_IO_CAP_IN; // Input only\n+        }else if(!_IO_CAP_INPUT && !_IO_CAP_OUTPUT){\n+            iocap = ESP_BT_IO_CAP_NONE; // No input/output\n+        }\n         esp_bt_gap_set_security_param(param_type, &iocap, sizeof(uint8_t));\n     }\n+#endif\n \n     // the default BTA_DM_COD_LOUDSPEAKER does not work with the macOS BT stack\n     esp_bt_cod_t cod;\n@@ -871,11 +912,22 @@ void BluetoothSerial::end()\n     _stop_bt();\n }\n \n+#ifdef CONFIG_BT_SSP_ENABLED\n void BluetoothSerial::onConfirmRequest(ConfirmRequestCb cb)\n {\n     confirm_request_callback = cb;\n }\n \n+void BluetoothSerial::onKeyRequest(KeyRequestCb cb)\n+{\n+    key_request_callback = cb;\n+}\n+\n+void BluetoothSerial::respondPasskey(uint32_t passkey){\n+    esp_bt_gap_ssp_passkey_reply(current_bd_addr, true, passkey);\n+}\n+#endif\n+\n void BluetoothSerial::onAuthComplete(AuthCompleteCb cb)\n {\n     auth_complete_callback = cb;\n@@ -883,7 +935,7 @@ void BluetoothSerial::onAuthComplete(AuthCompleteCb cb)\n \n void BluetoothSerial::confirmReply(boolean confirm)\n {\n-    esp_bt_gap_ssp_confirm_reply(current_bd_addr, confirm);  \n+    esp_bt_gap_ssp_confirm_reply(current_bd_addr, confirm);\n }\n \n \n@@ -893,32 +945,54 @@ esp_err_t BluetoothSerial::register_callback(esp_spp_cb_t * callback)\n     return ESP_OK;\n }\n \n-//Simple Secure Pairing\n+#ifdef CONFIG_BT_SSP_ENABLED\n+// Enable Simple Secure Pairing (using generated PIN)\n+// This must be called before calling begin, otherwise has no effect!\n void BluetoothSerial::enableSSP() {\n+    if(isReady(false, READY_TIMEOUT)){\n+        log_i(\"Attempted to enable SSP for already initialized driver. Restart to take effect with end() followed by begin()\");\n+        return;\n+    }\n     _enableSSP = true;\n+    _IO_CAP_INPUT = true;\n+    _IO_CAP_OUTPUT = true;\n }\n-/*\n-     * Set default parameters for Legacy Pairing\n-     * Use fixed pin code\n-*/\n-bool BluetoothSerial::setPin(const char *pin) {\n-    log_i(\"pin: %s\", pin);\n-    bool isEmpty =  !(pin  && *pin);\n-    if (isEmpty && !_isPinSet) {\n-        return true; // nothing to do\n-    } else if (!isEmpty){\n-        _pin_len = strlen(pin);\n-        memcpy(_pin_code, pin, _pin_len);\n-    } else {\n-        _pin_len = 0; // resetting pin to none (default)\n-    }\n-    _pin_code[_pin_len] = 0;\n-    _isPinSet = true;\n-    if (isReady(false, READY_TIMEOUT)) {\n-        btSetPin();\n+\n+// Enable Simple Secure Pairing (using generated PIN)\n+// This must be called before calling begin, otherwise has no effect!\n+// Behavior description:\n+// When both Input and Output are false only the other device authenticates pairing without any pin.\n+// When Output is true and Input is false only the other device authenticates pairing without any pin.\n+// When both Input and Output are true both devices display randomly generated code and if they match authenticate pairing on both devices\n+//   - This must be implemented by registering callback via onConfirmRequest() and in this callback request user input and call confirmReply(true); if the authenticated\n+//      otherwise call `confirmReply(false)` to reject the pairing.\n+// When Input is true and Output is false User will be required to input the passkey to the ESP32 device to authenticate.\n+//   - This must be implemented by registering callback via onKeyRequest() and in this callback the entered passkey will be responded via respondPasskey(passkey);\n+void BluetoothSerial::enableSSP(bool inputCpability, bool outputCapability) {\n+    log_i(\"Enabling SSP: input capability=%d; output capability=%d\", inputCpability, outputCapability);\n+    _enableSSP = true;\n+    _IO_CAP_INPUT = inputCpability;\n+    _IO_CAP_OUTPUT = outputCapability;\n+}\n+\n+// Disable Simple Secure Pairing (using generated PIN)\n+// This must be called before calling begin, otherwise has no effect!\n+void BluetoothSerial::disableSSP() {\n+    _enableSSP = false;\n+}\n+\n+#else\n+\n+bool BluetoothSerial::setPin(const char *pin, uint8_t pin_code_len){\n+    if(pin_code_len == 0 || pin_code_len > 16){\n+        log_e(\"PIN code must be 1-16 Bytes long! Called with length %d\", pin_code_len);\n+        return false;\n     }\n-    return true;\n+    _pin_code_len = pin_code_len;\n+    memcpy(_pin_code, pin, pin_code_len);\n+    return (esp_bt_gap_set_pin(ESP_BT_PIN_TYPE_FIXED, _pin_code_len, _pin_code) == ESP_OK);\n }\n+#endif\n \n bool BluetoothSerial::connect(String remoteName)\n {\n@@ -931,9 +1005,9 @@ bool BluetoothSerial::connect(String remoteName)\n     }\n     disconnect();\n     _doConnect = true;\n-    _isRemoteAddressSet = false;\n-\t_sec_mask = ESP_SPP_SEC_ENCRYPT|ESP_SPP_SEC_AUTHENTICATE;\n-\t_role = ESP_SPP_ROLE_MASTER;\n+    _isRemoteAddressSet = true;\n+    _sec_mask = ESP_SPP_SEC_ENCRYPT|ESP_SPP_SEC_AUTHENTICATE;\n+    _role = ESP_SPP_ROLE_MASTER;\n     strncpy(_remote_name, remoteName.c_str(), ESP_BT_GAP_MAX_BDNAME_LEN);\n     _remote_name[ESP_BT_GAP_MAX_BDNAME_LEN] = 0;\n     log_i(\"master : remoteName\");\n@@ -974,8 +1048,8 @@ bool BluetoothSerial::connect(uint8_t remoteAddress[], int channel, esp_spp_sec_\n     _doConnect = true;\n     _remote_name[0] = 0;\n     _isRemoteAddressSet = true;\n-\t_sec_mask = sec_mask;\n-\t_role = role;\n+    _sec_mask = sec_mask;\n+    _role = role;\n     memcpy(_peer_bd_addr, remoteAddress, ESP_BD_ADDR_LEN);\n     log_i(\"master : remoteAddress\");\n     xEventGroupClearBits(_spp_event_group, SPP_CLOSED);\n@@ -987,7 +1061,7 @@ bool BluetoothSerial::connect(uint8_t remoteAddress[], int channel, esp_spp_sec_\n             channel);\n #endif\n         if(esp_spp_connect(sec_mask, role, channel, _peer_bd_addr) != ESP_OK ) {\n-\t\t\tlog_e(\"spp connect failed\");\n+            log_e(\"spp connect failed\");\n       retval = false;\n     } else {\n       retval = waitForConnect(READY_TIMEOUT);\n@@ -1088,14 +1162,16 @@ bool BluetoothSerial::isReady(bool checkMaster, int timeout) {\n \n /**\n  * @brief           RemoteName or address are not allowed to be set during discovery\n- *                  (otherwhise it might connect automatically and stop discovery)\n+ *                  (otherwise it might connect automatically and stop discovery)\n  * @param[in]       timeoutMs can range from MIN_INQ_TIME to MAX_INQ_TIME\n  * @return          in case of Error immediately Empty ScanResults.\n  */\n BTScanResults* BluetoothSerial::discover(int timeoutMs) {\n     scanResults.clear();\n-    if (timeoutMs < MIN_INQ_TIME || timeoutMs > MAX_INQ_TIME || strlen(_remote_name) || _isRemoteAddressSet)\n+    if (timeoutMs < MIN_INQ_TIME || timeoutMs > MAX_INQ_TIME){\n+        log_e(\"Timeout out of bounds: MIN=%d; MAX=%d; requested=%d\", MIN_INQ_TIME, MAX_INQ_TIME, timeoutMs);\n         return nullptr;\n+    }\n     int timeout = timeoutMs / INQ_TIME;\n     log_i(\"discover::disconnect\");\n     disconnect();\n@@ -1112,11 +1188,11 @@ BTScanResults* BluetoothSerial::discover(int timeoutMs) {\n \n /**\n  * @brief           RemoteName or address are not allowed to be set during discovery\n- *                  (otherwhise it might connect automatically and stop discovery)\n+ *                  (otherwise it might connect automatically and stop discovery)\n  * @param[in]       cb called when a [b]new[/b] device has been discovered\n  * @param[in]       timeoutMs can be 0 or range from MIN_INQ_TIME to MAX_INQ_TIME\n  *\n- * @return          Wheter start was successfull or problems with params\n+ * @return          Whether start was successful or problems with params\n  */\n bool BluetoothSerial::discoverAsync(BTAdvertisedDeviceCb cb, int timeoutMs) {\n     scanResults.clear();\n@@ -1139,7 +1215,7 @@ void BluetoothSerial::discoverAsyncStop() {\n     advertisedDeviceCb = nullptr;\n }\n \n-/** @brief      Clears scanresult entries */\n+/** @brief      Clears scanResult entries */\n void BluetoothSerial::discoverClear() {\n     scanResults.clear();\n }\n@@ -1211,4 +1287,108 @@ BTAddress BluetoothSerial::getBtAddressObject() {\n String BluetoothSerial::getBtAddressString() {\n     return getBtAddressObject().toString(true);\n }\n-#endif\n+\n+// Send a request to the remote device defined by the remoteAddress to send back its name.\n+// The name will be read by background task and stored. It can be later read with radRemoteName()\n+void BluetoothSerial::requestRemoteName(uint8_t remoteAddress[]){\n+    if(isReady(false, READY_TIMEOUT)){\n+        esp_bt_gap_read_remote_name(remoteAddress);\n+    }\n+}\n+\n+// If remote name is valid (was already received) this function will copy the name to the aprameter rmt_name\n+// The buffer must have size at least ESP_BT_GAP_MAX_BDNAME_LEN + 1\n+// If the name is valid the function will return true\n+// If the name is not valid (was not read yet) returns false\n+bool BluetoothSerial::readRemoteName(char rmt_name[ESP_BT_GAP_MAX_BDNAME_LEN + 1]){\n+    if(_rmt_name_valid){\n+        memcpy(rmt_name, _rmt_name, ESP_BT_GAP_MAX_BDNAME_LEN + 1);\n+        return true;\n+    }\n+    return false;\n+}\n+\n+// Set validity of remote name before reading name from different device\n+void BluetoothSerial::invalidateRemoteName(){\n+    _rmt_name_valid = false;\n+}\n+\n+int BluetoothSerial::getNumberOfBondedDevices(){\n+    return esp_bt_gap_get_bond_device_num();\n+}\n+\n+// Accepts the maximum number of devices that can fit in given array dev_list.\n+// Create you list this way: esp_bd_addr_t dev_list[dev_num];\n+// Returns number of retrieved devices (on error returns 0)\n+int BluetoothSerial::getBondedDevices(uint dev_num, esp_bd_addr_t *dev_list){\n+    // typedef uint8_t esp_bd_addr_t[ESP_BD_ADDR_LEN]\n+    if(dev_list == NULL){\n+        log_e(\"Device list is NULL\");\n+        return 0;\n+    }\n+    if(dev_num == 0){\n+        log_e(\"Device number must be larger than 0!\");\n+        return 0;\n+    }\n+    int _dev_num = dev_num;\n+    esp_bt_gap_get_bond_device_list(&_dev_num, dev_list);\n+    return _dev_num;\n+}\n+\n+bool BluetoothSerial::deleteBondedDevice(uint8_t *remoteAddress){\n+    esp_err_t ret = esp_bt_gap_remove_bond_device(remoteAddress);\n+    if(ret == ESP_OK){\n+        return true;\n+    }else{\n+        return false;\n+    }\n+}\n+\n+void BluetoothSerial::deleteAllBondedDevices(){\n+    if(!isReady(false, READY_TIMEOUT)){\n+        log_w(\"Attempted to drop cache for uninitialized driver. First call begin()\");\n+        return;\n+    }\n+\n+    int expected_dev_num = esp_bt_gap_get_bond_device_num();\n+    if(expected_dev_num == 0){\n+        log_i(\"No devices in cache.\");\n+        return;\n+    } else {\n+        log_d(\"Found %d bonded devices\", expected_dev_num);\n+    }\n+    esp_err_t ret;\n+\n+    // typedef uint8_t esp_bd_addr_t[ESP_BD_ADDR_LEN] // ESP_BD_ADDR_LEN = 6\n+    esp_bd_addr_t *dev_list = NULL;\n+    log_d(\"Allocate buffer: sizeof(esp_bd_addr_t)=%d * expected_dev_num=%d\", sizeof(esp_bd_addr_t), expected_dev_num);\n+    dev_list = (esp_bd_addr_t*) malloc(sizeof(esp_bd_addr_t) * expected_dev_num);\n+    if(dev_list == NULL){\n+        log_e(\"Could not allocated BT device buffer!\");\n+        return;\n+    }\n+    //uint8_t dev_list [20][6];\n+\n+    int dev_num;\n+    ret = esp_bt_gap_get_bond_device_list(&dev_num, dev_list);\n+    log_d(\"esp_bt_gap_get_bond_device_list ret = %d\", ret);\n+    if(ret == ESP_OK){\n+        if(dev_num != expected_dev_num){\n+            log_w(\"Inconsistent number of bonded devices. Expected %d; returned %d\",expected_dev_num, dev_num);\n+        }\n+        for(int i=0; i<dev_num; ++i){\n+            ret = esp_bt_gap_remove_bond_device(dev_list[i]);\n+            log_d(\"esp_bt_gap_remove_bond_device ret = %d\", ret);\n+            if(ret == ESP_OK){\n+                log_d(\"Removed bonded device #%d\", i);\n+            } else {\n+                log_w(\"Failed to removed bonded device #%d\", i);\n+            }\n+            //btc_storage_remove_bonded_device(dev_list[i]);\n+        }\n+        log_d(\"device num after delete = %d\", esp_bt_gap_get_bond_device_num());\n+    }else{\n+        log_w(\"Function esp_bt_gap_get_bond_device_list() returned code %d\", ret);\n+    }\n+}\n+#endif // defined(CONFIG_BT_ENABLED) && defined(CONFIG_BLUEDROID_ENABLED)\n",
            "comment_added_diff": {
                "81": "uint8_t _pin_code_len = 0; // Number of valid Bytes in the esp_bt_pin_code_t array",
                "253": "    case ESP_SPP_INIT_EVT: // Enum 0 - When SPP is initialized",
                "267": "    case ESP_SPP_UNINIT_EVT: // Enum 1 - When SPP is deinitialized",
                "271": "    case ESP_SPP_DISCOVERY_COMP_EVT: // Enum 8 - When SDP discovery complete",
                "305": "    case ESP_SPP_OPEN_EVT: // Enum 26 - When SPP Client connection open",
                "318": "    case ESP_SPP_CLOSE_EVT: // Enum 27 - When SPP connection closed",
                "336": "    case ESP_SPP_START_EVT: // Enum 28 - When SPP server started",
                "340": "    case ESP_SPP_CL_INIT_EVT: // Enum 29 - When SPP client initiated a connection",
                "348": "    case ESP_SPP_DATA_IND_EVT: // Enum 30 - When SPP connection received data, only for ESP_SPP_MODE_CB",
                "365": "    case ESP_SPP_CONG_EVT: // Enum 31 - When SPP connection congestion status changed, only for ESP_SPP_MODE_CB",
                "374": "    case ESP_SPP_WRITE_EVT: // Enum 33 - When SPP write operation completes, only for ESP_SPP_MODE_CB",
                "386": "    case ESP_SPP_SRV_OPEN_EVT: // Enum 34 - When SPP Server connection open",
                "403": "    case ESP_SPP_SRV_STOP_EVT: // Enum 35 - When SPP server stopped",
                "407": "    case ESP_SPP_VFS_REGISTER_EVT: // Enum 36 - When SPP VFS register",
                "411": "    case ESP_SPP_VFS_UNREGISTER_EVT: // Enum 37 - When SPP VFS unregister",
                "430": "        case ESP_BT_GAP_DISC_RES_EVT: { // Enum 0 - Device discovery result event",
                "441": "                    case ESP_BT_GAP_DEV_PROP_BDNAME: // Enum 1 - Bluetooth device name, value type is int8_t []",
                "456": "                    case ESP_BT_GAP_DEV_PROP_COD: // Enum 2 - Class of Device, value type is uint32_t",
                "467": "                    case ESP_BT_GAP_DEV_PROP_RSSI: // Enum 3 - Received Signal strength Indication, value type is int8_t, ranging from -128 to 127",
                "478": "                    case ESP_BT_GAP_DEV_PROP_EIR: // Enum 4 - Extended Inquiry Response, value type is uint8_t []",
                "509": "        case ESP_BT_GAP_DISC_STATE_CHANGED_EVT: // Enum 1 - Discovery state changed event",
                "521": "        case ESP_BT_GAP_RMT_SRVCS_EVT: // Enum 2 - Get remote services event",
                "525": "        case ESP_BT_GAP_RMT_SRVC_REC_EVT: // Enum 3 - Get remote service record event",
                "529": "        case ESP_BT_GAP_AUTH_CMPL_EVT: // Enum 4 - Authentication complete event",
                "542": "        case ESP_BT_GAP_PIN_REQ_EVT: // Enum 5 - Legacy Pairing Pin code request",
                "553": "        case ESP_BT_GAP_CFM_REQ_EVT: // Enum 6 - Security Simple Pairing User Confirmation request.",
                "566": "        case ESP_BT_GAP_KEY_NOTIF_EVT: // Enum 7 - Security Simple Pairing Passkey Notification",
                "571": "        case ESP_BT_GAP_KEY_REQ_EVT: // Enum 8 - Security Simple Pairing Passkey request",
                "583": "        case ESP_BT_GAP_READ_RSSI_DELTA_EVT: // Enum 9 - Read rssi event",
                "586": "        case ESP_BT_GAP_CONFIG_EIR_DATA_EVT: // Enum 10 - Config EIR data event",
                "590": "        case ESP_BT_GAP_SET_AFH_CHANNELS_EVT: // Enum 11 - Set AFH channels event",
                "594": "        case ESP_BT_GAP_READ_REMOTE_NAME_EVT: // Enum 12 - Read Remote Name event",
                "605": "        case ESP_BT_GAP_MODE_CHG_EVT: // Enum 13",
                "609": "        case ESP_BT_GAP_REMOVE_BOND_DEV_COMPLETE_EVT: // Enum - 14 remove bond device complete event",
                "613": "        case ESP_BT_GAP_QOS_CMPL_EVT: // Enum 15 - QOS complete event",
                "617": "        case ESP_BT_GAP_ACL_CONN_CMPL_STAT_EVT: // Enum 16 - ACL connection complete status event",
                "621": "        case ESP_BT_GAP_ACL_DISCONN_CMPL_STAT_EVT: // Enum 17 - ACL disconnection complete status event",
                "729": "            iocap = ESP_BT_IO_CAP_IO; // Display with prompt",
                "731": "            iocap = ESP_BT_IO_CAP_OUT; // DisplayOnly",
                "733": "            iocap = ESP_BT_IO_CAP_IN; // Input only",
                "735": "            iocap = ESP_BT_IO_CAP_NONE; // No input/output",
                "949": "// Enable Simple Secure Pairing (using generated PIN)",
                "950": "// This must be called before calling begin, otherwise has no effect!",
                "961": "// Enable Simple Secure Pairing (using generated PIN)",
                "962": "// This must be called before calling begin, otherwise has no effect!",
                "963": "// Behavior description:",
                "964": "// When both Input and Output are false only the other device authenticates pairing without any pin.",
                "965": "// When Output is true and Input is false only the other device authenticates pairing without any pin.",
                "966": "// When both Input and Output are true both devices display randomly generated code and if they match authenticate pairing on both devices",
                "967": "//   - This must be implemented by registering callback via onConfirmRequest() and in this callback request user input and call confirmReply(true); if the authenticated",
                "968": "//      otherwise call `confirmReply(false)` to reject the pairing.",
                "969": "// When Input is true and Output is false User will be required to input the passkey to the ESP32 device to authenticate.",
                "970": "//   - This must be implemented by registering callback via onKeyRequest() and in this callback the entered passkey will be responded via respondPasskey(passkey);",
                "978": "// Disable Simple Secure Pairing (using generated PIN)",
                "979": "// This must be called before calling begin, otherwise has no effect!",
                "1291": "// Send a request to the remote device defined by the remoteAddress to send back its name.",
                "1292": "// The name will be read by background task and stored. It can be later read with radRemoteName()",
                "1299": "// If remote name is valid (was already received) this function will copy the name to the aprameter rmt_name",
                "1300": "// The buffer must have size at least ESP_BT_GAP_MAX_BDNAME_LEN + 1",
                "1301": "// If the name is valid the function will return true",
                "1302": "// If the name is not valid (was not read yet) returns false",
                "1311": "// Set validity of remote name before reading name from different device",
                "1320": "// Accepts the maximum number of devices that can fit in given array dev_list.",
                "1321": "// Create you list this way: esp_bd_addr_t dev_list[dev_num];",
                "1322": "// Returns number of retrieved devices (on error returns 0)",
                "1324": "    // typedef uint8_t esp_bd_addr_t[ESP_BD_ADDR_LEN]",
                "1362": "    // typedef uint8_t esp_bd_addr_t[ESP_BD_ADDR_LEN] // ESP_BD_ADDR_LEN = 6",
                "1394": "#endif // defined(CONFIG_BT_ENABLED) && defined(CONFIG_BLUEDROID_ENABLED)"
            },
            "comment_deleted_diff": {
                "151": "            pin_type = ESP_BT_PIN_TYPE_VARIABLE; // pin_code would be ignored (default)",
                "536": "            // default pairing pins",
                "681": "    // if (esp_bt_sleep_disable() != ESP_OK){",
                "682": "    //     log_e(\"esp_bt_sleep_disable failed\");",
                "683": "    // }",
                "908": "        return true; // nothing to do",
                "913": "        _pin_len = 0; // resetting pin to none (default)"
            },
            "comment_modified_diff": {}
        }
    ],
    "EEPROM.cpp": [],
    "BLEAdvertisedDevice.cpp": [],
    "OnReceiveError_BREAK_Demo.ino": [],
    "OnReceive_Demo.ino": [],
    "RxFIFOFull_Demo.ino": [],
    "RxTimeout_Demo.ino": [],
    "Print.cpp": [
        {
            "commit": "2333df5ac650fd9ebc0a1a0d7df93851c86a95e1",
            "timestamp": "2022-12-21T18:48:10+02:00",
            "author": "Rodrigo Garcia",
            "commit_message": "Removes a few Warnings and fixes Math rand() to work like Arduino mainstream (#7613)\n\n* fixes warnings and rand function\r\n\r\n* removes extra space - style",
            "additions": 1,
            "deletions": 1,
            "change_type": "MODIFY",
            "diff": "@@ -58,7 +58,7 @@ size_t Print::printf(const char *format, ...)\n         va_end(arg);\n         return 0;\n     };\n-    if(len >= sizeof(loc_buf)){\n+    if(len >= (int)sizeof(loc_buf)){  // comparation of same sign type for the compiler\n         temp = (char*) malloc(len+1);\n         if(temp == NULL) {\n             va_end(arg);\n",
            "comment_added_diff": {
                "61": "    if(len >= (int)sizeof(loc_buf)){  // comparation of same sign type for the compiler"
            },
            "comment_deleted_diff": {},
            "comment_modified_diff": {}
        }
    ],
    "WMath.cpp": [
        {
            "commit": "1e3717bcdf14db8aecb0d1adf06b601670c1a988",
            "timestamp": "2023-02-15T13:26:18+02:00",
            "author": "Rodrigo Garcia",
            "commit_message": "Adds pseudo random numbers generation (#7848)",
            "additions": 15,
            "deletions": 1,
            "change_type": "MODIFY",
            "diff": "@@ -29,10 +29,22 @@ extern \"C\" {\n }\n #include \"esp32-hal-log.h\"\n \n+// Allows the user to choose between Real Hardware\n+// or Software Pseudo random generators for the\n+// Arduino random() functions\n+static bool s_useRandomHW = true;\n+void useRealRandomGenerator(bool useRandomHW) {\n+  s_useRandomHW = useRandomHW;\n+}\n+\n+// Calling randomSeed() will force the\n+// Pseudo Random generator like in \n+// Arduino mainstream API\n void randomSeed(unsigned long seed)\n {\n     if(seed != 0) {\n         srand(seed);\n+        s_useRandomHW = false;\n     }\n }\n \n@@ -46,7 +58,9 @@ long random( long howbig )\n   if (howbig < 0) {\n     return (random(0, -howbig));\n   }\n-  return esp_random() % howbig;\n+  // if randomSeed was called, fall back to software PRNG\n+  uint32_t val = (s_useRandomHW) ? esp_random() : rand();\n+  return val % howbig;\n }\n \n long random(long howsmall, long howbig)\n",
            "comment_added_diff": {
                "32": "// Allows the user to choose between Real Hardware",
                "33": "// or Software Pseudo random generators for the",
                "34": "// Arduino random() functions",
                "40": "// Calling randomSeed() will force the",
                "41": "// Pseudo Random generator like in",
                "42": "// Arduino mainstream API",
                "61": "  // if randomSeed was called, fall back to software PRNG"
            },
            "comment_deleted_diff": {},
            "comment_modified_diff": {}
        }
    ],
    "esp32-hal-rmt.c": [],
    "esp32-hal-spi.c": [],
    "esp32-hal-timer.c": [],
    "stdlib_noniso.c": [],
    "BLEDevice.cpp": [
        {
            "commit": "6f7a1ca76ada4d705d79ce863450c91349327a79",
            "timestamp": "2023-10-05T14:54:25+03:00",
            "author": "Me No Dev",
            "commit_message": "ESP-IDF v5.1 (#7733)\n\n* Initial changes to compile under ESP-IDF v5.1\r\n\r\n* Initial import for ESP-IDF v5.1 libs\r\n\r\n* Update toolchain\r\n\r\n* Update esp32-hal-psram.c\r\n\r\n* Add missing LDs\r\n\r\n* Update platform.txt\r\n\r\n* Stop some CI jobs, because they will always fail\r\n\r\n* Fix examples\r\n\r\n* Update app_httpd.cpp\r\n\r\n* Update ResetReason.ino\r\n\r\n* Warnings fixes\r\n\r\n* Added the example guideline and template (#7665)\r\n\r\n* Added the example guideline and template\r\n\r\n* PR review changes with some typos and grammar fixes\r\n\r\n* Changes according to the PR review\r\n\r\n* Added ESP32-S3 link to the datasheet (#7738)\r\n\r\n* Update HiFreq_ADC.ino\r\n\r\n* Replace periph_ctrl.h use because of deprecation\r\n\r\n* Replace esp_spi_flash.h use because of deprecation\r\n\r\n* Add includes to male mDNS::enableWorkstation compile\r\n\r\n* Fix ssl_client mbedtls_pk_parse_key callback\r\n\r\n* Update temperature sensor driver\r\n\r\n* Allow sketch_utils to compile with arduino-cli\r\n\r\n* Run CI with arduino-cli\r\n\r\n* Fix arduino-cli CI build on Windows\r\n\r\n* Refactor platform.txt to not use components installed through the board manager when running from git\r\n\r\n* Initial Peripheral Manager Implementation\r\n\r\n* Update SigmaDelta driver to use the new ESP-IDF driver API\r\n\r\n* Small improvements to peripheral manager and SigmaDelta\r\n\r\n* Remove deleted function from SigmaDelta header\r\n\r\n* Update DAC driver to use the new ESP-IDF driver API\r\n\r\n* Adds softAp(String) to make it compatible with ESP8266 (#7801)\r\n\r\n* Fix commentary (#7800)\r\n\r\nMinor fix based on observation done in https://github.com/espressif/arduino-esp32/issues/7795#issuecomment-1416868611\r\n\r\n* add adafruit new board feather esp32s2 reserve tft (#7794)\r\n\r\n* bugfix: add <stdint.h> for uint8_t to avoid compilation failure (GCC 11.2.0) (#7744)\r\n\r\n* Adding 3rd party boards for VALTRACK-V4-VTS-ESP32-C3 & VALTRACK-V4-MFW-ESP32-C3 (#7735)\r\n\r\n* Added VALTRACK-V4-VTS-ESP32-C3 board definition\r\n\r\nCreated pins_arduino.h & made changes to boards.txt with necessary changes\r\n\r\n* Modified the URL\r\n\r\n* Renamed json\r\n\r\n* renamed all auRL\r\n\r\n* Adding VALTRACK-V4 series board definitions\r\n\r\nAdded VALTRACK-V4-VTS-ESP32C3 & VALTRACK-V4-MFW-ESP32-C3 board variants\r\n\r\n* Adding VALTRACK-V4 series board definitions\r\n\r\nAdded VALTRACK-V4-VTS-ESP32C3 & VALTRACK-V4-MFW-ESP32-C3 board variants\r\n\r\n* Reverted package_esp32_index.template.json\r\n\r\nrestored package_esp32_index.template.json from edits\r\n\r\n* Reverted package_esp32_index.template.json\r\n\r\nAdded new line to package_esp32_index.template.json\r\n\r\n* Update Platformio CI (#7725)\r\n\r\n* WiFiClient example fix (#7711)\r\n\r\n* Modified WiFiClient example to use thingspeak instead of non-functionig sparkfun\r\n\r\n* Moved instructions to README\r\n\r\n* Fixed spelling\r\n\r\n* Added link to S3 datasheet\r\n\r\n---------\r\n\r\nCo-authored-by: Jan Proch\u00e1zka <90197375+P-R-O-C-H-Y@users.noreply.github.com>\r\n\r\n* Mirror update from Heltec repository (#7709)\r\n\r\nHeltec updated the I2C pins in https://github.com/Heltec-Aaron-Lee/WiFi_Kit_series/commit/b10f4bf85d13fd01be80dcdb0eb59e6a8c8ba19a\r\n\r\n* Fixes BLE data printing (#7699)\r\n\r\n* Fixes BLE data printing\r\n\r\nBLE data has no '\\0' terminator, therefore it can't be printed as a regular C string.\r\nThis fix just prints the BLE data based on its length.\r\n\r\n* Simplify printing to a single call\r\n\r\n* split menu options + lora_32_V3 fix (#7697)\r\n\r\n* Change header gaurd name (#7696)\r\n\r\n* Fix Name (#7691)\r\n\r\nWrong name in definitions.\r\n\r\n* Fix error in WiFiClient.cpp where the connect function fails for timeouts below 1 second (#7686)\r\n\r\n* Update WiFiClient.cpp\r\n\r\nThis change will allow specifying connect timeouts below 1 second. Without this change, if connect timeouts under 1 second are given, the connect defaults to 0ms and fails. \r\nThis will also allow timeouts in fractions of seconds, e.g. 1500ms. Without this change, connect timeouts are truncated to full second increments.\r\n\r\n* Make parameter timeout_ms clear\r\n\r\n* Change connection timeout_ms name for clarity\r\n\r\n---------\r\n\r\nCo-authored-by: Rodrigo Garcia <rodrigo.garcia@espressif.com>\r\n\r\n* fixed the function header (#7674)\r\n\r\n* fixed the function header\r\n\r\n* fixed function name and paramaters\r\n\r\n---------\r\n\r\nCo-authored-by: Jan Procha\u0301zka <90197375+P-R-O-C-H-Y@users.noreply.github.com>\r\n\r\n* Ticker fix solving #6155 (#7664)\r\n\r\n* Wrapped Ticker functions with #pragma disabling -Wcast-function-type\r\n\r\n* Revert \"Wrapped Ticker functions with #pragma disabling -Wcast-function-type\"\r\n\r\nThis reverts commit 160be7e67a10d01b6e44c4bf2521c0ccd6348976.\r\n\r\n* Fixed Ticker example\r\n\r\n* Modified Ticker example\r\n\r\n* Fixed LED_BUILTIN err for ESP32\r\n\r\n---------\r\n\r\nCo-authored-by: Jan Proch\u00e1zka <90197375+P-R-O-C-H-Y@users.noreply.github.com>\r\n\r\n* setPins fix ESP32 \"specified pins are not supported by this chip.\" (#7646)\r\n\r\n[ESP32: SDMMCFS::begin hardcodes the usage of slot 1, only check if the pins match slot 1 pins.]\r\n\r\nsetPins() was testing pins D1, D2 and D3 all against D1 ... fine in 1 pin mode when all are -1 not so much if you're trying to get 4 pin mode working.\r\nI now see this function doesn't really do anything on the ESP32...accept now correctly checks that you are trying to use the slot 1 pins.\r\n\r\nCo-authored-by: Jan Proch\u00e1zka <90197375+P-R-O-C-H-Y@users.noreply.github.com>\r\n\r\n* Allow passing IP as connect method parameter in WiFiClientSecure and skip unnecessary host-ip conversions (#7643)\r\n\r\n* Add LED_BUILTIN* definitions and initialization for LEDs to stop them floating. (#7636)\r\n\r\nCo-authored-by: Rodrigo Garcia <rodrigo.garcia@espressif.com>\r\n\r\n* Expand path to tinuf2 image when checking existence in platformio-build.py (#7631)\r\n\r\n* Expand path to tinuf2 image when checking existence\r\n\r\n* More isFiles fixed\r\n\r\n* Remove (useless) trailing semicolon from Print.cpp (#7622)\r\n\r\n* ADD: New variant Edgebox-ESP-100 (#7771)\r\n\r\n* ADD: New variant Edgebox-ESP-100\r\n\r\n* FIX: Edgebox-ESP-100 Board.txt usb mode option change back to default value as ESP32S3\r\n\r\n* Add Crabik Slot ESP32-S3 board (#7790)\r\n\r\n* Added Crabik Slot ESP32-S3\r\n\r\n* Adding CPU frequency settings and removing excess from partition scheme settings\r\n\r\n* new variant LilyGO T-Display-S3 (#7763)\r\n\r\n* new variant LilyGO T-Display-S3\r\n\r\nhttps://github.com/Xinyuan-LilyGO/T-Display-S3\r\n\r\n* Add boards.txt definition\r\n\r\n---------\r\n\r\nCo-authored-by: Me No Dev <me-no-dev@users.noreply.github.com>\r\n\r\n* Update get.py to support Apple ARM64\r\n\r\n* Update package_esp32_index.template.json\r\n\r\n* WString Return bool (#7774)\r\n\r\n* Add Roboheart Hercules development board to the esp32-core (#7672)\r\n\r\n* added Roboheart Hercules pin definitions and board.txt entries\r\n\r\n* added package_roboheat.json for prototyping\r\n\r\n* Roboheart Hercules pins\r\n\r\n* Updated the pins\r\n\r\n* Delete package_roboheart.json\r\n\r\n* Requested changes\r\n\r\n---------\r\n\r\nCo-authored-by: renebohne <rene.bohne@gmail.com>\r\n\r\n* Reword \"ESP-IDF as Component\" (#7812)\r\n\r\nI think \"Arduino as an ESP-IDF component\" or just \"As ESP-IDF component\" instead of  \"ESP-IDF as Component\" is more correct way to name the link.\r\n\r\n1. \"ESP-IDF as Component\" would imply that ESP-IDF is some sort of library for Arduino, which is (IMO) misleading, because it's true the other way around.\r\n2. It's written as \"Arduino as an ESP-IDF component\" on the webpage it points to as well.\r\n\r\n- Also I removed the capitalization from \"Component\" as I have not found a reason why is it capitalized.\r\n\r\n* add new board Adafruit Feather ESP32-S3 Reverse TFT (#7811)\r\n\r\n* Multi threading examples (tasks, queues, semaphores, mutexes) (#7660)\r\n\r\n* Moved and renamed example ESP32/FreeRTOS to MultiThreading/BasicMultiThreading\r\n\r\n* Added dummy files\r\n\r\n* Modified original example\r\n\r\n* Fixed BasicMultiThreading.ino\r\n\r\n* Added Example demonstrating use of queues\r\n\r\n* Extended info in BasicMultiThreading\r\n\r\n* Renamed Queues to singular Queue\r\n\r\n* Added Mutex example\r\n\r\n* Added Semaphore example\r\n\r\n* Moved info from example to README\r\n\r\n* Moved doc from Mutex to README\r\n\r\n* Added Queue README\r\n\r\n* Removed unecesary text\r\n\r\n* Fixed grammar\r\n\r\n* Increased stack size for Sempahore example\r\n\r\n* Added headers into .ino files\r\n\r\n* Added word Example at the end of title in README\r\n\r\n* removed unused line\r\n\r\n* Added forgotten README\r\n\r\n* Modified BasicMultiThreading example\r\n\r\n* Added missing S3 entry in README\r\n\r\n* moved location\r\n\r\n* Update ESP-IDF libs\r\n\r\n* Update CMakeLists.txt\r\n\r\n* Update esptool to v4.4\r\n\r\n* Add function timerAttachInterruptFlag (#7809)\r\n\r\n* Update esptool to v4.5\r\n\r\n* ADC refactoring (#7827)\r\n\r\n* Adc refactored + periman implementation\r\n\r\nPeripheral manager still needs to be checked if the implementation is right.\r\n\r\n* switched to working solution for milivolts read\r\n\r\n* Periman detachbus fix\r\n\r\n* coding style\r\n\r\n* fix CI warnings\r\n\r\n* fix FreeRTOS example\r\n\r\n* Update ETH.cpp\r\n\r\n* Update FunctionalInterruptStruct.ino\r\n\r\n* Update package_esp32_index.template.json\r\n\r\n* Update package_esp32_index.template.json\r\n\r\n* Fixes for the latest IDF v5.1\r\n\r\n* update esp-idf libs and toolchain\r\n\r\n* Turn OFF auto crystal frequency for ESP32 (needed by TWAI)\r\n\r\n* Update examples\r\n\r\n* Switch build to mostly use flags from files\r\n\r\nIncludes can not be done this way\r\n\r\n* Reorganize flag files\r\n\r\n* Optimize chip build flags further\r\n\r\n* Revert defines from file. MBEDTLS_CONFIG_FILE does not properly expand\r\n\r\n* Add support for includes and defines from file\r\n\r\n* Replace old sdk path references in platform.txt\r\n\r\n* use gcc-ar (#8013)\r\n\r\n* Makes F_CPU generic for all SoC (#8007)\r\n\r\nBased on CONFIG_ESP_DEFAULT_CPU_FREQ_MHZ that is correctly defined in the sdkconfig file for each SoC.\r\n\r\n* TIMER refactoring (#7904)\r\n\r\n* refactor using GPtimer\r\n\r\n* Updated timer HW test\r\n\r\n* fix examples\r\n\r\n* Add v2.0.7 in issue template (#7871)\r\n\r\n* refactor using GPtimer\r\n\r\n* Updated timer HW test\r\n\r\n* fix examples\r\n\r\n* Revert \"Add v2.0.7 in issue template (#7871)\"\r\n\r\nThis reverts commit fcc3b17d62ff57861f8913ca1f142fd5163b7457.\r\n\r\n* Update upload-artifact to v3 in HW CI\r\n\r\n* Revert \"Update upload-artifact to v3 in HW CI\"\r\n\r\nThis reverts commit 1ba228071718ba37c4e26d98db22f77b2a7364a6.\r\n\r\n* replace resolution with frequency\r\n\r\n* remove count_down option\r\n\r\n* countup removed from examples + header\r\n\r\n* Refactored timer object\r\n\r\n* code cleanup + examples and tests fixes\r\n\r\n* TimerAlarm fix\r\n\r\n---------\r\n\r\nCo-authored-by: Vojt\u011bch Barto\u0161ka <76958047+VojtechBartoska@users.noreply.github.com>\r\n\r\n* [Docs] ADC and Timer API Update (+some docs fixes) (#7906)\r\n\r\n* updated docs\r\n\r\n* remove hall sensor docs\r\n\r\nRemoved Hall sensor documentation as its no longer supported in IDF-5\r\n\r\n* Fixed ESPNow examples location in docs\r\n\r\n* Last timer refactored API + gpio small fix\r\n\r\n* AlarmWrite fix\r\n\r\n* Fixes APLL/PLL with RTC Frequency (#8025)\r\n\r\nlog_d() was displaying APLL for any SoC, but S3 and C3 has not such option, causing compilation errors.\r\n\r\n* Update IDF libs and fix OPI PSRAM on S3\r\n\r\n* Add setMode function HardwareSerial.c to set the esp32 uart mode for use with RS485 auto RTS (#7935)\r\n\r\n* Added setMode function to set the esp32 uart mode\r\n\r\nUsed to set the esp32 uart mode for use with RS485 Half Duplex and the auto RTS pin mode. This will set/clear the RTS pin output to control the RE/DE pin on most RS485 chips.\r\n\r\n* Add Success (bool) return in some functions\r\n\r\n* Add Success (bool) return code to some functions\r\n\r\n* Add Success (bool) return to some functions\r\n\r\n* Add Success (bool) return to some functions\r\n\r\n* Fix uartSetRxTimeout return type\r\n\r\n---------\r\n\r\nCo-authored-by: Rodrigo Garcia <rodrigo.garcia@espressif.com>\r\n\r\n* Add support for esp-elf-gdb\r\n\r\n* WFG Crashfix (#8044)\r\n\r\n* Update component libs\r\n\r\n* IDF release/v5.1 (#8061)\r\n\r\n* IDF release/v5.1 bb9200acec\r\n\r\n* Update Esp.cpp\r\n\r\n* IDF release/v5.1 420ebd208a\r\n\r\n* Update esp32-hal-psram.c\r\n\r\n* Switch SDK to be an external package\r\n\r\n* fix path (#8096)\r\n\r\n* Makes UART work at any APB Frequency (#8097)\r\n\r\nFixes HardwareSerial to work with IDF 5.1 on any CPU/APB Frequency (240MHz to 10MHZ), including user created low power modes.\r\n\r\n* Add required callbacks for TinyUSB DFU\r\n\r\n* Update version to 3.0.0\r\n\r\n* Add ESP.getCoreVersion() and update ESP.getChipModel()\r\n\r\n* Update timer hal for the latest 5.1\r\n\r\n* Use separate RX and TX buffer sizes in HTTP client\r\n\r\noptimizes download by allowing up to 4K packets to be received\r\n\r\n* Rename clock tree enum name in latest 5.1\r\n\r\n* ESP32-H4 support was removed in ESP-IDF v5.1\r\n\r\n* IDF release/v5.1 2004bf4e11 (#8165)\r\n\r\n* Deinit previous bus first (#8180)\r\n\r\n* TIMER - add timer_started flag, fix timerEnd() + timer HW test (#8135)\r\n\r\n* Add timer_started flag and stop before disable\r\n\r\n* Fix timer HW test\r\n\r\n* TOUCH - Peripheral manager implementation (#8129)\r\n\r\n* Touch periman implemented\r\n\r\n* Deinit previous bus first\r\n\r\n* LEDC Refactoring - Peripheral manager implemented (#8126)\r\n\r\n* LEDC periman implementation\r\n\r\n* Fix examples\r\n\r\n* Rework tone\r\n\r\n* Update ledc docs\r\n\r\n* fix missing bracket\r\n\r\n* Update analog funtions esp32-hal.h\r\n\r\n* Update CameraWebServer example\r\n\r\n* Fix HiFreq_ADC example\r\n\r\n* minor fixes - typos\r\n\r\n* Avoid calling tone/notone when tone already runs on dif. pin\r\n\r\n* Remove unused channels_resolution\r\n\r\n* GPIO - Peripheral manager implementation (#8179)\r\n\r\n* periman-implementation\r\n\r\n* fix RGB_BUILTIN and remove space\r\n\r\n* Enforces more consistency into Peripheral Manager (#8188)\r\n\r\n* Avoid log_i() message the first time a bus is assigned\r\n\r\n* Prevent operation with ESP32_BUS_TYPE_INIT\r\n\r\n* keeps coding style\r\n\r\n* do not print messages on INIT bus type\r\n\r\n* [Arduino Core 3.0.0] RMT IDF5.1 Refactoring (#7994)\r\n\r\n* RMT IDF5.1 refactoring\r\n\r\n* Fixes initial value setting\r\n\r\n* removed rmtRead() with user callback\r\n\r\n* simplify/remove Read data structure\r\n\r\n* Deep API simplification\r\n\r\n* fixes the examples\r\n\r\n* fix rmt.h\r\n\r\n* adds support to APB different frequencies\r\n\r\n* fixes CI and not defined RGB_BUILTIN\r\n\r\n* new RMT API and examples\r\n\r\n* fixing commentaties\r\n\r\n* Update esp32-hal-rgb-led.c\r\n\r\n* changes Filter API\r\n\r\n* Fixes example with Filter API\r\n\r\n* Update PlatformIO scripts for the upcoming 3.0 core (#8183)\r\n\r\n* Update PlatformIO scripts for the upcoming 3.0 core\r\n\r\n* Dynamically select proper framework-arduinoespressif32-libs package\r\n\r\nWith this change the dev-platform will be dynamically configured to\r\npull the latest .zip package with precompiled libraries from extracted from\r\npackage_esp32_index.template.json\r\n\r\n* free memory on detach (#8264)\r\n\r\n* SPI - Peripheral manager implementation  (#8255)\r\n\r\n* spi periman implementation\r\n\r\n* fix header file\r\n\r\n* remove unused struct\r\n\r\n* fix missing braces\r\n\r\n* Update esp32-hal-rmt.c (#8216)\r\n\r\nOptimizing Peripheral Manager Test\r\n\r\n* I2C - Peripheral manager implementation (#8220)\r\n\r\n* i2c-master periman initial commit\r\n\r\n* i2c-master make detachbus static + comment remove\r\n\r\n* i2c-slave periman implementation\r\n\r\n* SetPinBus to INIT on i2cDeinits\r\n\r\n* Fix slave pins deinit\r\n\r\n* remove dbg logs\r\n\r\n* set ret to ESP_FAIL instead of returning\r\n\r\n* Fix warnings in hal-spi caused by pariman transition\r\n\r\n* Update esptool.py to version 4.6\r\n\r\n* Add platform support for ESP_SR\r\n\r\n* Add USB Type and valid pin check to periman\r\n\r\n* replace bus with spi->num+1 (#8279)\r\n\r\n* Remove default pins from SPI HAL\r\n\r\n* Add commented out handlers for esptool.js in TinyUSB CDC\r\n\r\nFor future use\r\n\r\n* Add build defines for host os and fqbn (for debug purposes)\r\n\r\n* Provide proper memory caps total size\r\n\r\n* Update Esp.cpp\r\n\r\n* SDMMC - Peripheral manager implementation (#8289)\r\n\r\n* sdmmc periman implemented\r\n\r\n* save pins when SOC_SDMMC_USE_IOMUX\r\n\r\n* IDF release/v5.1 4bc762621d (#8292)\r\n\r\n* Adds missing pinMode (#8312)\r\n\r\n* Adds missing pinMode\r\n\r\nThe example code lacks a pinMode() to initialize the GPIO 0 (button). In Arduino Core 3.0.0, it prints an error message when trying to read a not initialized GPIO.\r\n\r\n* Update KeyboardLogout.ino\r\n\r\nAdds <buttonPin> to keep code standard\r\n\r\n* Update KeyboardReprogram.ino\r\n\r\nAdds <buttonPin> to keep code standard\r\n\r\n* LEDC Fade implementation (#8338)\r\n\r\n* fade API + pointer fixes\r\n\r\n* Add fade api\r\n\r\n* Add fade example\r\n\r\n* update ledc docs\r\n\r\n* remove unused variables\r\n\r\n* fix path to example\r\n\r\n* Adds USB to Peripheral Manager - Arduino Core 3.0.0 (#8335)\r\n\r\n* ETHERNET - Peripheral manager implementation (#8297)\r\n\r\n* Peripheral manager implemented\r\n\r\n* remove unused variable\r\n\r\n* Add all RMII pins\r\n\r\n* fix typo\r\n\r\n* Adds HardwareSerial to Peripheral Manager Arduino 3.0.0 (#8328)\r\n\r\n* Do not limit ETHERNET in periman to only ESP32. SPI is also an option\r\n\r\n* Initial support for ESP32-C6 (#8337)\r\n\r\n* Add checks for SOC defines (#8351)\r\n\r\n* Add checks for SOC defines\r\n\r\n* Add SoC checks to BLE library\r\n\r\n* fix i2c compilation error\r\n\r\n* fix wrong placement of include\r\n\r\n* add check to SPI library\r\n\r\n* add check to USB library\r\n\r\n* add checks to Wire library\r\n\r\n* Feature/esp32h2 support (#8373)\r\n\r\n* Initial support for ESP32H2\r\n\r\n* Additional changes for ESP32H2\r\n\r\n* Update libs for ESP32H2\r\n\r\n* Fix flashing on ESP32-H2\r\n\r\n* Fix GPIO Configs for ESP32-C6 and ESP32-H2\r\n\r\n* Update Timer test sketch\r\n\r\n* Fix upload flash parameters\r\n\r\n* Use ets_write_char_uart instead of ets_printf in log_printfv\r\n\r\n* Print full chip report when log level is sufficient (#8282)\r\n\r\n* ESP32-C3 does not have ets_write_char_uart\r\n\r\n* Fix BLE gap event name\r\n\r\n* HW Testing - Pytest update (#8389)\r\n\r\n* update tests requirements\r\n\r\n* remove already handled components\r\n\r\n* Update version of pytest\r\n\r\n* Add missing ESP32-H2 to hil.yml\r\n\r\n* Updated FreeRTOS names (#8418)\r\n\r\n* HW Testing -  ESP32-C6 + ESP32-H2 fixes (#8404)\r\n\r\n* add C6/H2 to tests cfg.json\r\n\r\n* remove ,\r\n\r\n* workflow runs-on runner by matrix\r\n\r\n* Add need for arduino tag to select runner\r\n\r\n* Add cryptography to requirements.txt\r\n\r\n* Removed duplicate TX1 define for H2 (#8402)\r\n\r\n* Fix broken examples\r\n\r\n* Fixes RMT filter & idle timing and setup (#8359)\r\n\r\n* Fixes Filter and Idle parameter to uint32\r\n\r\n* Fixes Filter and Idle setup\r\n\r\n* Fixes it to 5.1Libs branch\r\n\r\n* fix RMT CLK source and Filter API\r\n\r\n* fixes missing ;\r\n\r\n* fixes missing ;\r\n\r\n* fixes RMT example\r\n\r\n* IDF release/v5.1 a7b62bbcaf (#8438)\r\n\r\n* Add workflow to build executables from python scripts (#8290)\r\n\r\n* Add workflow to build executables from python scripts\r\n\r\n* Push binary to tools\r\n\r\n* Enable executable signing on Windows\r\n\r\n* Update get.py\r\n\r\n* Push binary to tools\r\n\r\n* Try with multiple files\r\n\r\n* Try more actions\r\n\r\n* Try powershell\r\n\r\n* Restore tools so they do not get rebuilt\r\n\r\n* Finalize scripts\r\n\r\n* Push binary to tools\r\n\r\n* App rollback should be after PSRAM is initialized\r\n\r\n* Correcting RX1 to GPIO4 and TX1 to GPIO5 to be consistent with documentation. Previous pin use works but is inconsistent with C6 docs.\r\n\r\n* Fixes Memory Leak (#8486)\r\n\r\n* fixes preprocessor test (#8485)\r\n\r\n* fixes preprocessor test\r\n\r\nWhen using `#define USE_SOFT_AP` \r\nChange\r\n`&& not USE_SOFT_AP` ==> `&& !defined(USE_SOFT_AP)`\r\n\r\n* Adds any BLE capable device in WiFiProv.ino\r\n\r\nRemoving ESP32 restriction for BLE Provisioning.\r\n\r\n* fix flash mode read out for C6\r\n\r\n* Add option for custom partitions without restrictions\r\n\r\n* SD_MMC update (#8298)\r\n\r\n* Updated SD_MMC lib and examples\r\n\r\n* Removed getter implementation and commented usage in examples\r\n\r\n* squashed updates\r\n\r\n* IDF release/v5.1 f0437b945f (#8599)\r\n\r\n* Update package_esp32_index.template.json\r\n\r\n* Fix printf format build error in BTAdvertisedDeviceSet.cpp\r\n\r\n---------\r\n\r\nCo-authored-by: Pedro Minatel <pedro.minatel@espressif.com>\r\nCo-authored-by: Rodrigo Garcia <rodrigo.garcia@espressif.com>\r\nCo-authored-by: Ha Thach <thach@tinyusb.org>\r\nCo-authored-by: Martin Turski <quiret@vfemail.net>\r\nCo-authored-by: raviypujar <raviypujar@gmail.com>\r\nCo-authored-by: Jason2866 <24528715+Jason2866@users.noreply.github.com>\r\nCo-authored-by: Tom\u00e1\u0161 Piln\u00fd <34927466+PilnyTomas@users.noreply.github.com>\r\nCo-authored-by: Jan Proch\u00e1zka <90197375+P-R-O-C-H-Y@users.noreply.github.com>\r\nCo-authored-by: Daniel Berlin <dberlin@dberlin.org>\r\nCo-authored-by: Nima Askari (\u0646\u06cc\u0645\u0627 \u0639\u0633\u06a9\u0631\u06cc) <nimaltd@yahoo.com>\r\nCo-authored-by: rtpmsys <106180646+rtpmsys@users.noreply.github.com>\r\nCo-authored-by: bytiful <55647551+bytiful@users.noreply.github.com>\r\nCo-authored-by: tmfarrington <tmfarrington@users.noreply.github.com>\r\nCo-authored-by: Krzysiek S <chris.streh@gmail.com>\r\nCo-authored-by: surt <carl.olsson@gmail.com>\r\nCo-authored-by: Max Scheffler <max.scheffler@pm.me>\r\nCo-authored-by: Clemens Kirchgatterer <clemens@1541.org>\r\nCo-authored-by: Peter Pan's Techland <twinkle-pirate@hotmail.com>\r\nCo-authored-by: Roman <programmeofficemilkyway@gmail.com>\r\nCo-authored-by: Eistee <Eistee82@users.noreply.github.com>\r\nCo-authored-by: David McCurley <44048235+mrengineer7777@users.noreply.github.com>\r\nCo-authored-by: Gaya3N25 <30388176+Gaya3N25@users.noreply.github.com>\r\nCo-authored-by: renebohne <rene.bohne@gmail.com>\r\nCo-authored-by: Oliv\u00e9r Rem\u00e9ny <25034625+remenyo@users.noreply.github.com>\r\nCo-authored-by: davidk88 <david.kotar@gmail.com>\r\nCo-authored-by: Vojt\u011bch Barto\u0161ka <76958047+VojtechBartoska@users.noreply.github.com>\r\nCo-authored-by: James Armstrong <jamesarmstrong3@me.com>\r\nCo-authored-by: Valerii Koval <valeros@users.noreply.github.com>\r\nCo-authored-by: Peter G. Jensen <root@petergjoel.dk>",
            "additions": 5,
            "deletions": 1,
            "change_type": "MODIFY",
            "diff": "@@ -4,6 +4,9 @@\n  *  Created on: Mar 16, 2017\n  *      Author: kolban\n  */\n+#include \"soc/soc_caps.h\"\n+#if SOC_BLE_SUPPORTED\n+\n #include \"sdkconfig.h\"\n #if defined(CONFIG_BLUEDROID_ENABLED)\n #include <freertos/FreeRTOS.h>\n@@ -674,4 +677,5 @@ void BLEDevice::setCustomGattsHandler(gatts_event_handler handler) {\n \tm_customGattsHandler = handler;\n }\n \n-#endif // CONFIG_BLUEDROID_ENABLED\n+#endif /* CONFIG_BLUEDROID_ENABLED */\n+#endif /* SOC_BLE_SUPPORTED */\n",
            "comment_added_diff": {},
            "comment_deleted_diff": {
                "677": "#endif // CONFIG_BLUEDROID_ENABLED"
            },
            "comment_modified_diff": {}
        }
    ],
    "BLEDevice.h": [],
    "CMakeLists.txt": [],
    "insights.rst": [],
    "DiagnosticsSmokeTest.ino": [],
    "MinimalDiagnostics.ino": [],
    "library.properties": [],
    "Insights.cpp": [
        {
            "commit": "161b1673d9ad2804ff5a60a8db89464ad9bf69e7",
            "timestamp": "2022-12-22T17:42:56+02:00",
            "author": "Sanket Wadekar",
            "commit_message": "Draft: Esp insights library support (#7566)\n\n* ESP Insights: Added library support\r\n\r\n* ESP Insights: Added Examples\r\n\r\n* ESP Insights: Added custom partitions file\r\n\r\n* ESP Insights: Added API documentation.\r\n\r\n* Added recipe and script to create Insights package\r\n\r\n* Updated ESP Insights examples.\r\n\r\n* Changed Insights Firmware package output directory\r\n\r\n* Changed license to include SPDX license\r\n\r\n* Fix Insights package for Windows\r\n\r\n* Updated .exe of insights script\r\n\r\n* Added coredump partition to all schemes\r\n\r\n* Updated header files of Insights diagnostics\r\n\r\n* hotfix: Added elf-sha256-offset flag in elf2bin\r\nbuilder\r\n\r\n* Update API to be more Arduino-like and partitions offsets\r\n\r\nCo-authored-by: Me No Dev <me-no-dev@users.noreply.github.com>",
            "additions": 283,
            "deletions": 0,
            "change_type": "ADD",
            "diff": "@@ -0,0 +1,283 @@\n+/*\n+ * SPDX-FileCopyrightText: 2022 Espressif Systems (Shanghai) CO LTD\n+ *\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+#include \"Insights.h\"\n+#ifdef CONFIG_ESP_INSIGHTS_ENABLED\n+#include \"esp_insights.h\"\n+#include \"esp_diagnostics.h\"\n+#include \"esp_diagnostics_metrics.h\"\n+#include \"esp_diagnostics_system_metrics.h\"\n+#include \"esp_diagnostics_variables.h\"\n+#include \"esp_diagnostics_network_variables.h\"\n+\n+const char * ERROR_INSIGHTS_NOT_INIT = \"ESP Insights not initialized\";\n+\n+#define BOOL_FN_OR_ERROR(f,e) \\\n+    if(!initialized){ \\\n+        log_e(\"%s\",ERROR_INSIGHTS_NOT_INIT); \\\n+        return false; \\\n+    } \\\n+    esp_err_t err = f; \\\n+    if (err != ESP_OK) { \\\n+        log_e(\"ESP Insights \" e \", err:0x%x\", err); \\\n+    } \\\n+    return err == ESP_OK;\n+\n+#define BOOL_FN_OR_ERROR_ARG(f,e,a) \\\n+    if(!initialized){ \\\n+        log_e(\"%s\",ERROR_INSIGHTS_NOT_INIT); \\\n+        return false; \\\n+    } \\\n+    esp_err_t err = f; \\\n+    if (err != ESP_OK) { \\\n+        log_e(\"ESP Insights \" e \", err:0x%x\", a, err); \\\n+    } \\\n+    return err == ESP_OK;\n+\n+#define VOID_FN_OR_ERROR(f) \\\n+    if(!initialized){ \\\n+        log_e(\"%s\",ERROR_INSIGHTS_NOT_INIT); \\\n+        return; \\\n+    } \\\n+    f;\n+\n+ESPInsightsClass::ESPInsightsClass(): initialized(false){}\n+\n+ESPInsightsClass::~ESPInsightsClass(){\n+    end();\n+}\n+\n+bool ESPInsightsClass::begin(const char *auth_key, const char *node_id, uint32_t log_type, bool alloc_ext_ram){\n+    if(!initialized){\n+        if(log_type == 0xFFFFFFFF){\n+            log_type = (ESP_DIAG_LOG_TYPE_ERROR | ESP_DIAG_LOG_TYPE_WARNING | ESP_DIAG_LOG_TYPE_EVENT);\n+        }\n+        esp_insights_config_t config = {.log_type = log_type, .node_id = node_id, .auth_key = auth_key, .alloc_ext_ram = alloc_ext_ram};\n+        esp_err_t err = esp_insights_init(&config);\n+        if (err != ESP_OK) {\n+            log_e(\"Failed to initialize ESP Insights, err:0x%x\", err);\n+        }\n+        initialized = err == ESP_OK;\n+        metrics.setInitialized(initialized);\n+        variables.setInitialized(initialized);\n+    } else {\n+        log_i(\"ESP Insights already initialized\");\n+    }\n+    return initialized;\n+}\n+\n+void ESPInsightsClass::end(){\n+    if(initialized){\n+        esp_insights_deinit();\n+        initialized = false;\n+        metrics.setInitialized(initialized);\n+        variables.setInitialized(initialized);\n+    }\n+}\n+\n+const char * ESPInsightsClass::nodeID(){\n+    if(!initialized){\n+        log_e(\"%s\",ERROR_INSIGHTS_NOT_INIT);\n+        return \"\";\n+    }\n+    return esp_insights_get_node_id();\n+}\n+\n+bool ESPInsightsClass::event(const char *tag, const char *format, ...){\n+    if(!initialized){\n+        log_e(\"%s\",ERROR_INSIGHTS_NOT_INIT);\n+        return false;\n+    }\n+\n+    char loc_buf[64];\n+    char * temp = loc_buf;\n+    va_list arg;\n+    va_list copy;\n+    va_start(arg, format);\n+    va_copy(copy, arg);\n+    int len = vsnprintf(temp, sizeof(loc_buf), format, copy);\n+    va_end(copy);\n+    if(len < 0) {\n+        va_end(arg);\n+        return false;\n+    };\n+    if(len >= (int)sizeof(loc_buf)){  // comparation of same sign type for the compiler\n+        temp = (char*) malloc(len+1);\n+        if(temp == NULL) {\n+            va_end(arg);\n+            return false;\n+        }\n+        len = vsnprintf(temp, len+1, format, arg);\n+    }\n+    va_end(arg);\n+    esp_err_t err = esp_diag_log_event(tag, \"%s\", temp);\n+    if(temp != loc_buf){\n+        free(temp);\n+    }\n+    if (err != ESP_OK) {\n+        log_e(\"Failed to send ESP Insights event, err:0x%x\", err);\n+    }\n+    return err == ESP_OK;\n+}\n+\n+bool ESPInsightsClass::send(){\n+    BOOL_FN_OR_ERROR(esp_insights_send_data(),\"Failed to send\");\n+}\n+\n+void ESPInsightsClass::dumpTasksStatus(){\n+    VOID_FN_OR_ERROR(esp_diag_task_snapshot_dump());\n+}\n+\n+// ESPInsightsMetricsClass\n+\n+bool ESPInsightsMetricsClass::addBool(const char *tag, const char *key, const char *label, const char *path){\n+    BOOL_FN_OR_ERROR_ARG(esp_diag_metrics_register(tag, key, label, path, ESP_DIAG_DATA_TYPE_BOOL),\"Failed to add metric '%s'\",key);\n+}\n+\n+bool ESPInsightsMetricsClass::addInt(const char *tag, const char *key, const char *label, const char *path){\n+    BOOL_FN_OR_ERROR_ARG(esp_diag_metrics_register(tag, key, label, path, ESP_DIAG_DATA_TYPE_INT),\"Failed to add metric '%s'\",key);\n+}\n+\n+bool ESPInsightsMetricsClass::addUint(const char *tag, const char *key, const char *label, const char *path){\n+    BOOL_FN_OR_ERROR_ARG(esp_diag_metrics_register(tag, key, label, path, ESP_DIAG_DATA_TYPE_UINT),\"Failed to add metric '%s'\",key);\n+}\n+\n+bool ESPInsightsMetricsClass::addFloat(const char *tag, const char *key, const char *label, const char *path){\n+    BOOL_FN_OR_ERROR_ARG(esp_diag_metrics_register(tag, key, label, path, ESP_DIAG_DATA_TYPE_FLOAT),\"Failed to add metric '%s'\",key);\n+}\n+\n+bool ESPInsightsMetricsClass::addString(const char *tag, const char *key, const char *label, const char *path){\n+    BOOL_FN_OR_ERROR_ARG(esp_diag_metrics_register(tag, key, label, path, ESP_DIAG_DATA_TYPE_STR),\"Failed to add metric '%s'\",key);\n+}\n+\n+bool ESPInsightsMetricsClass::addIPv4(const char *tag, const char *key, const char *label, const char *path){\n+    BOOL_FN_OR_ERROR_ARG(esp_diag_metrics_register(tag, key, label, path, ESP_DIAG_DATA_TYPE_IPv4),\"Failed to add metric '%s'\",key);\n+}\n+\n+bool ESPInsightsMetricsClass::addMAC(const char *tag, const char *key, const char *label, const char *path){\n+    BOOL_FN_OR_ERROR_ARG(esp_diag_metrics_register(tag, key, label, path, ESP_DIAG_DATA_TYPE_MAC),\"Failed to add metric '%s'\",key);\n+}\n+\n+bool ESPInsightsMetricsClass::setBool(const char *key, bool b){\n+    BOOL_FN_OR_ERROR_ARG(esp_diag_metrics_add_bool(key, b),\"Failed to set metric '%s'\",key);\n+}\n+\n+bool ESPInsightsMetricsClass::setInt(const char *key, int32_t i){\n+    BOOL_FN_OR_ERROR_ARG(esp_diag_metrics_add_int(key, i),\"Failed to set metric '%s'\",key);\n+}\n+\n+bool ESPInsightsMetricsClass::setUint(const char *key, uint32_t u){\n+    BOOL_FN_OR_ERROR_ARG(esp_diag_metrics_add_uint(key, u),\"Failed to set metric '%s'\",key);\n+}\n+\n+bool ESPInsightsMetricsClass::setFloat(const char *key, float f){\n+    BOOL_FN_OR_ERROR_ARG(esp_diag_metrics_add_float(key, f),\"Failed to set metric '%s'\",key);\n+}\n+\n+bool ESPInsightsMetricsClass::setString(const char *key, const char *str){\n+    BOOL_FN_OR_ERROR_ARG(esp_diag_metrics_add_str(key, str),\"Failed to set metric '%s'\",key);\n+}\n+\n+bool ESPInsightsMetricsClass::setIPv4(const char *key, uint32_t ip){\n+    BOOL_FN_OR_ERROR_ARG(esp_diag_metrics_add_ipv4(key, ip),\"Failed to set metric '%s'\",key);\n+}\n+\n+bool ESPInsightsMetricsClass::setMAC(const char *key, uint8_t *mac){\n+    BOOL_FN_OR_ERROR_ARG(esp_diag_metrics_add_mac(key, mac),\"Failed to set metric '%s'\",key);\n+}\n+\n+bool ESPInsightsMetricsClass::remove(const char *key){\n+    BOOL_FN_OR_ERROR_ARG(esp_diag_metrics_unregister(key),\"Failed to remove metric '%s'\",key);\n+}\n+\n+bool ESPInsightsMetricsClass::removeAll(){\n+    BOOL_FN_OR_ERROR(esp_diag_metrics_unregister_all(),\"Failed to remove metrics\");\n+}\n+\n+void ESPInsightsMetricsClass::setHeapPeriod(uint32_t seconds){\n+    VOID_FN_OR_ERROR(esp_diag_heap_metrics_reset_interval(seconds));\n+}\n+\n+bool ESPInsightsMetricsClass::dumpHeap(){\n+    BOOL_FN_OR_ERROR(esp_diag_heap_metrics_dump(),\"Failed to send heap metrics\");\n+}\n+\n+void ESPInsightsMetricsClass::setWiFiPeriod(uint32_t seconds){\n+    VOID_FN_OR_ERROR(esp_diag_wifi_metrics_reset_interval(seconds));\n+}\n+\n+bool ESPInsightsMetricsClass::dumpWiFi(){\n+    BOOL_FN_OR_ERROR(esp_diag_wifi_metrics_dump(),\"Failed to send wifi metrics\");\n+}\n+\n+// ESPInsightsVariablesClass\n+\n+bool ESPInsightsVariablesClass::addBool(const char *tag, const char *key, const char *label, const char *path){\n+    BOOL_FN_OR_ERROR_ARG(esp_diag_variable_register(tag, key, label, path, ESP_DIAG_DATA_TYPE_BOOL),\"Failed to add variable '%s'\",key);\n+}\n+\n+bool ESPInsightsVariablesClass::addInt(const char *tag, const char *key, const char *label, const char *path){\n+    BOOL_FN_OR_ERROR_ARG(esp_diag_variable_register(tag, key, label, path, ESP_DIAG_DATA_TYPE_INT),\"Failed to add variable '%s'\",key);\n+}\n+\n+bool ESPInsightsVariablesClass::addUint(const char *tag, const char *key, const char *label, const char *path){\n+    BOOL_FN_OR_ERROR_ARG(esp_diag_variable_register(tag, key, label, path, ESP_DIAG_DATA_TYPE_UINT),\"Failed to add variable '%s'\",key);\n+}\n+\n+bool ESPInsightsVariablesClass::addFloat(const char *tag, const char *key, const char *label, const char *path){\n+    BOOL_FN_OR_ERROR_ARG(esp_diag_variable_register(tag, key, label, path, ESP_DIAG_DATA_TYPE_FLOAT),\"Failed to add variable '%s'\",key);\n+}\n+\n+bool ESPInsightsVariablesClass::addString(const char *tag, const char *key, const char *label, const char *path){\n+    BOOL_FN_OR_ERROR_ARG(esp_diag_variable_register(tag, key, label, path, ESP_DIAG_DATA_TYPE_STR),\"Failed to add variable '%s'\",key);\n+}\n+\n+bool ESPInsightsVariablesClass::addIPv4(const char *tag, const char *key, const char *label, const char *path){\n+    BOOL_FN_OR_ERROR_ARG(esp_diag_variable_register(tag, key, label, path, ESP_DIAG_DATA_TYPE_IPv4),\"Failed to add variable '%s'\",key);\n+}\n+\n+bool ESPInsightsVariablesClass::addMAC(const char *tag, const char *key, const char *label, const char *path){\n+    BOOL_FN_OR_ERROR_ARG(esp_diag_variable_register(tag, key, label, path, ESP_DIAG_DATA_TYPE_MAC),\"Failed to add variable '%s'\",key);\n+}\n+\n+bool ESPInsightsVariablesClass::setBool(const char *key, bool b){\n+    BOOL_FN_OR_ERROR_ARG(esp_diag_variable_add_bool(key, b),\"Failed to set variable '%s'\",key);\n+}\n+\n+bool ESPInsightsVariablesClass::setInt(const char *key, int32_t i){\n+    BOOL_FN_OR_ERROR_ARG(esp_diag_variable_add_int(key, i),\"Failed to set variable '%s'\",key);\n+}\n+\n+bool ESPInsightsVariablesClass::setUint(const char *key, uint32_t u){\n+    BOOL_FN_OR_ERROR_ARG(esp_diag_variable_add_uint(key, u),\"Failed to set variable '%s'\",key);\n+}\n+\n+bool ESPInsightsVariablesClass::setFloat(const char *key, float f){\n+    BOOL_FN_OR_ERROR_ARG(esp_diag_variable_add_float(key, f),\"Failed to set variable '%s'\",key);\n+}\n+\n+bool ESPInsightsVariablesClass::setString(const char *key, const char *str){\n+    BOOL_FN_OR_ERROR_ARG(esp_diag_variable_add_str(key, str),\"Failed to set variable '%s'\",key);\n+}\n+\n+bool ESPInsightsVariablesClass::setIPv4(const char *key, uint32_t ip){\n+    BOOL_FN_OR_ERROR_ARG(esp_diag_variable_add_ipv4(key, ip),\"Failed to set variable '%s'\",key);\n+}\n+\n+bool ESPInsightsVariablesClass::setMAC(const char *key, uint8_t *mac){\n+    BOOL_FN_OR_ERROR_ARG(esp_diag_variable_add_mac(key, mac),\"Failed to set variable '%s'\",key);\n+}\n+\n+bool ESPInsightsVariablesClass::remove(const char *key){\n+    BOOL_FN_OR_ERROR_ARG(esp_diag_variable_unregister(key),\"Failed to remove variable '%s'\",key);\n+}\n+\n+bool ESPInsightsVariablesClass::removeAll(){\n+    BOOL_FN_OR_ERROR(esp_diag_variable_unregister_all(),\"Failed to remove variables\");\n+}\n+\n+ESPInsightsClass Insights;\n+\n+#endif\n",
            "comment_added_diff": {
                "106": "    if(len >= (int)sizeof(loc_buf)){  // comparation of same sign type for the compiler",
                "133": "// ESPInsightsMetricsClass",
                "215": "// ESPInsightsVariablesClass"
            },
            "comment_deleted_diff": {},
            "comment_modified_diff": {}
        }
    ],
    "Insights.h": [],
    "platform.txt": [],
    "gen_insights_package.exe": [],
    "gen_insights_package.py": [],
    "app3M_fat9M_16MB.csv": [],
    "bare_minimum_2MB.csv": [],
    "default.csv": [],
    "default_16MB.csv": [],
    "default_8MB.csv": [],
    "default_ffat.csv": [],
    "ffat.csv": [],
    "huge_app.csv": [],
    "large_spiffs_16MB.csv": [],
    "max_app_8MB.csv": [],
    "min_spiffs.csv": [],
    "minimal.csv": [],
    "no_ota.csv": [],
    "noota_3g.csv": [],
    "noota_3gffat.csv": [],
    "noota_ffat.csv": [],
    "rainmaker.csv": [],
    "platformio-build.py": [],
    "esp_diagnostics.h": [],
    "WiFiClientConnect.ino": [],
    "BluetoothSerial.h": [],
    "WiFiClient.cpp": [],
    "SD_MMC.cpp": [
        {
            "commit": "6bdef28532b180b78e98f2219255e6a306597790",
            "timestamp": "2023-08-30T16:23:51+03:00",
            "author": "Tom\u00e1\u0161 Piln\u00fd",
            "commit_message": "Doc update: Troubleshooting + SD libs (#8241)\n\n* Updated preferences.rst\r\n\r\n* Added into FAQ info about SPIFFS failed mount\r\n\r\n* Updated troubleshooting\r\n\r\n* Moved SPIFFS paragraph from FAQ to troubleshooting\r\n\r\n* Minor updates\r\n\r\n* Updated troubleshooting\r\n\r\n* Updated SD README files and example comments\r\n\r\n* Updated troubleshooting with SD issue\r\n\r\n* Added note about S3 pins\r\n\r\n* Updated SDMMC test setPins calls + added definition for default pins\r\n\r\n* Updated SD_MMC comments\r\n\r\n* Added pin table to SD_MMC readme\r\n\r\n* Updated table in SD_SPI\r\n\r\n* Updated based on comments\r\n\r\n* Update io_mux.rst\r\n\r\n* Update README.md",
            "additions": 1,
            "deletions": 1,
            "change_type": "MODIFY",
            "diff": "@@ -93,7 +93,7 @@ bool SDMMCFS::begin(const char * mountpoint, bool mode1bit, bool format_if_mount\n     sdmmc_slot_config_t slot_config = SDMMC_SLOT_CONFIG_DEFAULT();\n #ifdef SOC_SDMMC_USE_GPIO_MATRIX\n     // SoC supports SDMMC pin configuration via GPIO matrix.\n-    // Chech that the pins have been set either in the constructor or setPins function.\n+    // Check that the pins have been set either in the constructor or setPins function.\n     if (_pin_cmd == -1 || _pin_clk == -1 || _pin_d0 == -1\n         || (!mode1bit && (_pin_d1 == -1 || _pin_d2 == -1 || _pin_d3 == -1))) {\n         log_e(\"SDMMCFS: some SD pins are not set\");\n",
            "comment_added_diff": {
                "96": "    // Check that the pins have been set either in the constructor or setPins function."
            },
            "comment_deleted_diff": {
                "96": "    // Chech that the pins have been set either in the constructor or setPins function."
            },
            "comment_modified_diff": {
                "96": "    // Chech that the pins have been set either in the constructor or setPins function."
            }
        },
        {
            "commit": "6f7a1ca76ada4d705d79ce863450c91349327a79",
            "timestamp": "2023-10-05T14:54:25+03:00",
            "author": "Me No Dev",
            "commit_message": "ESP-IDF v5.1 (#7733)\n\n* Initial changes to compile under ESP-IDF v5.1\r\n\r\n* Initial import for ESP-IDF v5.1 libs\r\n\r\n* Update toolchain\r\n\r\n* Update esp32-hal-psram.c\r\n\r\n* Add missing LDs\r\n\r\n* Update platform.txt\r\n\r\n* Stop some CI jobs, because they will always fail\r\n\r\n* Fix examples\r\n\r\n* Update app_httpd.cpp\r\n\r\n* Update ResetReason.ino\r\n\r\n* Warnings fixes\r\n\r\n* Added the example guideline and template (#7665)\r\n\r\n* Added the example guideline and template\r\n\r\n* PR review changes with some typos and grammar fixes\r\n\r\n* Changes according to the PR review\r\n\r\n* Added ESP32-S3 link to the datasheet (#7738)\r\n\r\n* Update HiFreq_ADC.ino\r\n\r\n* Replace periph_ctrl.h use because of deprecation\r\n\r\n* Replace esp_spi_flash.h use because of deprecation\r\n\r\n* Add includes to male mDNS::enableWorkstation compile\r\n\r\n* Fix ssl_client mbedtls_pk_parse_key callback\r\n\r\n* Update temperature sensor driver\r\n\r\n* Allow sketch_utils to compile with arduino-cli\r\n\r\n* Run CI with arduino-cli\r\n\r\n* Fix arduino-cli CI build on Windows\r\n\r\n* Refactor platform.txt to not use components installed through the board manager when running from git\r\n\r\n* Initial Peripheral Manager Implementation\r\n\r\n* Update SigmaDelta driver to use the new ESP-IDF driver API\r\n\r\n* Small improvements to peripheral manager and SigmaDelta\r\n\r\n* Remove deleted function from SigmaDelta header\r\n\r\n* Update DAC driver to use the new ESP-IDF driver API\r\n\r\n* Adds softAp(String) to make it compatible with ESP8266 (#7801)\r\n\r\n* Fix commentary (#7800)\r\n\r\nMinor fix based on observation done in https://github.com/espressif/arduino-esp32/issues/7795#issuecomment-1416868611\r\n\r\n* add adafruit new board feather esp32s2 reserve tft (#7794)\r\n\r\n* bugfix: add <stdint.h> for uint8_t to avoid compilation failure (GCC 11.2.0) (#7744)\r\n\r\n* Adding 3rd party boards for VALTRACK-V4-VTS-ESP32-C3 & VALTRACK-V4-MFW-ESP32-C3 (#7735)\r\n\r\n* Added VALTRACK-V4-VTS-ESP32-C3 board definition\r\n\r\nCreated pins_arduino.h & made changes to boards.txt with necessary changes\r\n\r\n* Modified the URL\r\n\r\n* Renamed json\r\n\r\n* renamed all auRL\r\n\r\n* Adding VALTRACK-V4 series board definitions\r\n\r\nAdded VALTRACK-V4-VTS-ESP32C3 & VALTRACK-V4-MFW-ESP32-C3 board variants\r\n\r\n* Adding VALTRACK-V4 series board definitions\r\n\r\nAdded VALTRACK-V4-VTS-ESP32C3 & VALTRACK-V4-MFW-ESP32-C3 board variants\r\n\r\n* Reverted package_esp32_index.template.json\r\n\r\nrestored package_esp32_index.template.json from edits\r\n\r\n* Reverted package_esp32_index.template.json\r\n\r\nAdded new line to package_esp32_index.template.json\r\n\r\n* Update Platformio CI (#7725)\r\n\r\n* WiFiClient example fix (#7711)\r\n\r\n* Modified WiFiClient example to use thingspeak instead of non-functionig sparkfun\r\n\r\n* Moved instructions to README\r\n\r\n* Fixed spelling\r\n\r\n* Added link to S3 datasheet\r\n\r\n---------\r\n\r\nCo-authored-by: Jan Proch\u00e1zka <90197375+P-R-O-C-H-Y@users.noreply.github.com>\r\n\r\n* Mirror update from Heltec repository (#7709)\r\n\r\nHeltec updated the I2C pins in https://github.com/Heltec-Aaron-Lee/WiFi_Kit_series/commit/b10f4bf85d13fd01be80dcdb0eb59e6a8c8ba19a\r\n\r\n* Fixes BLE data printing (#7699)\r\n\r\n* Fixes BLE data printing\r\n\r\nBLE data has no '\\0' terminator, therefore it can't be printed as a regular C string.\r\nThis fix just prints the BLE data based on its length.\r\n\r\n* Simplify printing to a single call\r\n\r\n* split menu options + lora_32_V3 fix (#7697)\r\n\r\n* Change header gaurd name (#7696)\r\n\r\n* Fix Name (#7691)\r\n\r\nWrong name in definitions.\r\n\r\n* Fix error in WiFiClient.cpp where the connect function fails for timeouts below 1 second (#7686)\r\n\r\n* Update WiFiClient.cpp\r\n\r\nThis change will allow specifying connect timeouts below 1 second. Without this change, if connect timeouts under 1 second are given, the connect defaults to 0ms and fails. \r\nThis will also allow timeouts in fractions of seconds, e.g. 1500ms. Without this change, connect timeouts are truncated to full second increments.\r\n\r\n* Make parameter timeout_ms clear\r\n\r\n* Change connection timeout_ms name for clarity\r\n\r\n---------\r\n\r\nCo-authored-by: Rodrigo Garcia <rodrigo.garcia@espressif.com>\r\n\r\n* fixed the function header (#7674)\r\n\r\n* fixed the function header\r\n\r\n* fixed function name and paramaters\r\n\r\n---------\r\n\r\nCo-authored-by: Jan Procha\u0301zka <90197375+P-R-O-C-H-Y@users.noreply.github.com>\r\n\r\n* Ticker fix solving #6155 (#7664)\r\n\r\n* Wrapped Ticker functions with #pragma disabling -Wcast-function-type\r\n\r\n* Revert \"Wrapped Ticker functions with #pragma disabling -Wcast-function-type\"\r\n\r\nThis reverts commit 160be7e67a10d01b6e44c4bf2521c0ccd6348976.\r\n\r\n* Fixed Ticker example\r\n\r\n* Modified Ticker example\r\n\r\n* Fixed LED_BUILTIN err for ESP32\r\n\r\n---------\r\n\r\nCo-authored-by: Jan Proch\u00e1zka <90197375+P-R-O-C-H-Y@users.noreply.github.com>\r\n\r\n* setPins fix ESP32 \"specified pins are not supported by this chip.\" (#7646)\r\n\r\n[ESP32: SDMMCFS::begin hardcodes the usage of slot 1, only check if the pins match slot 1 pins.]\r\n\r\nsetPins() was testing pins D1, D2 and D3 all against D1 ... fine in 1 pin mode when all are -1 not so much if you're trying to get 4 pin mode working.\r\nI now see this function doesn't really do anything on the ESP32...accept now correctly checks that you are trying to use the slot 1 pins.\r\n\r\nCo-authored-by: Jan Proch\u00e1zka <90197375+P-R-O-C-H-Y@users.noreply.github.com>\r\n\r\n* Allow passing IP as connect method parameter in WiFiClientSecure and skip unnecessary host-ip conversions (#7643)\r\n\r\n* Add LED_BUILTIN* definitions and initialization for LEDs to stop them floating. (#7636)\r\n\r\nCo-authored-by: Rodrigo Garcia <rodrigo.garcia@espressif.com>\r\n\r\n* Expand path to tinuf2 image when checking existence in platformio-build.py (#7631)\r\n\r\n* Expand path to tinuf2 image when checking existence\r\n\r\n* More isFiles fixed\r\n\r\n* Remove (useless) trailing semicolon from Print.cpp (#7622)\r\n\r\n* ADD: New variant Edgebox-ESP-100 (#7771)\r\n\r\n* ADD: New variant Edgebox-ESP-100\r\n\r\n* FIX: Edgebox-ESP-100 Board.txt usb mode option change back to default value as ESP32S3\r\n\r\n* Add Crabik Slot ESP32-S3 board (#7790)\r\n\r\n* Added Crabik Slot ESP32-S3\r\n\r\n* Adding CPU frequency settings and removing excess from partition scheme settings\r\n\r\n* new variant LilyGO T-Display-S3 (#7763)\r\n\r\n* new variant LilyGO T-Display-S3\r\n\r\nhttps://github.com/Xinyuan-LilyGO/T-Display-S3\r\n\r\n* Add boards.txt definition\r\n\r\n---------\r\n\r\nCo-authored-by: Me No Dev <me-no-dev@users.noreply.github.com>\r\n\r\n* Update get.py to support Apple ARM64\r\n\r\n* Update package_esp32_index.template.json\r\n\r\n* WString Return bool (#7774)\r\n\r\n* Add Roboheart Hercules development board to the esp32-core (#7672)\r\n\r\n* added Roboheart Hercules pin definitions and board.txt entries\r\n\r\n* added package_roboheat.json for prototyping\r\n\r\n* Roboheart Hercules pins\r\n\r\n* Updated the pins\r\n\r\n* Delete package_roboheart.json\r\n\r\n* Requested changes\r\n\r\n---------\r\n\r\nCo-authored-by: renebohne <rene.bohne@gmail.com>\r\n\r\n* Reword \"ESP-IDF as Component\" (#7812)\r\n\r\nI think \"Arduino as an ESP-IDF component\" or just \"As ESP-IDF component\" instead of  \"ESP-IDF as Component\" is more correct way to name the link.\r\n\r\n1. \"ESP-IDF as Component\" would imply that ESP-IDF is some sort of library for Arduino, which is (IMO) misleading, because it's true the other way around.\r\n2. It's written as \"Arduino as an ESP-IDF component\" on the webpage it points to as well.\r\n\r\n- Also I removed the capitalization from \"Component\" as I have not found a reason why is it capitalized.\r\n\r\n* add new board Adafruit Feather ESP32-S3 Reverse TFT (#7811)\r\n\r\n* Multi threading examples (tasks, queues, semaphores, mutexes) (#7660)\r\n\r\n* Moved and renamed example ESP32/FreeRTOS to MultiThreading/BasicMultiThreading\r\n\r\n* Added dummy files\r\n\r\n* Modified original example\r\n\r\n* Fixed BasicMultiThreading.ino\r\n\r\n* Added Example demonstrating use of queues\r\n\r\n* Extended info in BasicMultiThreading\r\n\r\n* Renamed Queues to singular Queue\r\n\r\n* Added Mutex example\r\n\r\n* Added Semaphore example\r\n\r\n* Moved info from example to README\r\n\r\n* Moved doc from Mutex to README\r\n\r\n* Added Queue README\r\n\r\n* Removed unecesary text\r\n\r\n* Fixed grammar\r\n\r\n* Increased stack size for Sempahore example\r\n\r\n* Added headers into .ino files\r\n\r\n* Added word Example at the end of title in README\r\n\r\n* removed unused line\r\n\r\n* Added forgotten README\r\n\r\n* Modified BasicMultiThreading example\r\n\r\n* Added missing S3 entry in README\r\n\r\n* moved location\r\n\r\n* Update ESP-IDF libs\r\n\r\n* Update CMakeLists.txt\r\n\r\n* Update esptool to v4.4\r\n\r\n* Add function timerAttachInterruptFlag (#7809)\r\n\r\n* Update esptool to v4.5\r\n\r\n* ADC refactoring (#7827)\r\n\r\n* Adc refactored + periman implementation\r\n\r\nPeripheral manager still needs to be checked if the implementation is right.\r\n\r\n* switched to working solution for milivolts read\r\n\r\n* Periman detachbus fix\r\n\r\n* coding style\r\n\r\n* fix CI warnings\r\n\r\n* fix FreeRTOS example\r\n\r\n* Update ETH.cpp\r\n\r\n* Update FunctionalInterruptStruct.ino\r\n\r\n* Update package_esp32_index.template.json\r\n\r\n* Update package_esp32_index.template.json\r\n\r\n* Fixes for the latest IDF v5.1\r\n\r\n* update esp-idf libs and toolchain\r\n\r\n* Turn OFF auto crystal frequency for ESP32 (needed by TWAI)\r\n\r\n* Update examples\r\n\r\n* Switch build to mostly use flags from files\r\n\r\nIncludes can not be done this way\r\n\r\n* Reorganize flag files\r\n\r\n* Optimize chip build flags further\r\n\r\n* Revert defines from file. MBEDTLS_CONFIG_FILE does not properly expand\r\n\r\n* Add support for includes and defines from file\r\n\r\n* Replace old sdk path references in platform.txt\r\n\r\n* use gcc-ar (#8013)\r\n\r\n* Makes F_CPU generic for all SoC (#8007)\r\n\r\nBased on CONFIG_ESP_DEFAULT_CPU_FREQ_MHZ that is correctly defined in the sdkconfig file for each SoC.\r\n\r\n* TIMER refactoring (#7904)\r\n\r\n* refactor using GPtimer\r\n\r\n* Updated timer HW test\r\n\r\n* fix examples\r\n\r\n* Add v2.0.7 in issue template (#7871)\r\n\r\n* refactor using GPtimer\r\n\r\n* Updated timer HW test\r\n\r\n* fix examples\r\n\r\n* Revert \"Add v2.0.7 in issue template (#7871)\"\r\n\r\nThis reverts commit fcc3b17d62ff57861f8913ca1f142fd5163b7457.\r\n\r\n* Update upload-artifact to v3 in HW CI\r\n\r\n* Revert \"Update upload-artifact to v3 in HW CI\"\r\n\r\nThis reverts commit 1ba228071718ba37c4e26d98db22f77b2a7364a6.\r\n\r\n* replace resolution with frequency\r\n\r\n* remove count_down option\r\n\r\n* countup removed from examples + header\r\n\r\n* Refactored timer object\r\n\r\n* code cleanup + examples and tests fixes\r\n\r\n* TimerAlarm fix\r\n\r\n---------\r\n\r\nCo-authored-by: Vojt\u011bch Barto\u0161ka <76958047+VojtechBartoska@users.noreply.github.com>\r\n\r\n* [Docs] ADC and Timer API Update (+some docs fixes) (#7906)\r\n\r\n* updated docs\r\n\r\n* remove hall sensor docs\r\n\r\nRemoved Hall sensor documentation as its no longer supported in IDF-5\r\n\r\n* Fixed ESPNow examples location in docs\r\n\r\n* Last timer refactored API + gpio small fix\r\n\r\n* AlarmWrite fix\r\n\r\n* Fixes APLL/PLL with RTC Frequency (#8025)\r\n\r\nlog_d() was displaying APLL for any SoC, but S3 and C3 has not such option, causing compilation errors.\r\n\r\n* Update IDF libs and fix OPI PSRAM on S3\r\n\r\n* Add setMode function HardwareSerial.c to set the esp32 uart mode for use with RS485 auto RTS (#7935)\r\n\r\n* Added setMode function to set the esp32 uart mode\r\n\r\nUsed to set the esp32 uart mode for use with RS485 Half Duplex and the auto RTS pin mode. This will set/clear the RTS pin output to control the RE/DE pin on most RS485 chips.\r\n\r\n* Add Success (bool) return in some functions\r\n\r\n* Add Success (bool) return code to some functions\r\n\r\n* Add Success (bool) return to some functions\r\n\r\n* Add Success (bool) return to some functions\r\n\r\n* Fix uartSetRxTimeout return type\r\n\r\n---------\r\n\r\nCo-authored-by: Rodrigo Garcia <rodrigo.garcia@espressif.com>\r\n\r\n* Add support for esp-elf-gdb\r\n\r\n* WFG Crashfix (#8044)\r\n\r\n* Update component libs\r\n\r\n* IDF release/v5.1 (#8061)\r\n\r\n* IDF release/v5.1 bb9200acec\r\n\r\n* Update Esp.cpp\r\n\r\n* IDF release/v5.1 420ebd208a\r\n\r\n* Update esp32-hal-psram.c\r\n\r\n* Switch SDK to be an external package\r\n\r\n* fix path (#8096)\r\n\r\n* Makes UART work at any APB Frequency (#8097)\r\n\r\nFixes HardwareSerial to work with IDF 5.1 on any CPU/APB Frequency (240MHz to 10MHZ), including user created low power modes.\r\n\r\n* Add required callbacks for TinyUSB DFU\r\n\r\n* Update version to 3.0.0\r\n\r\n* Add ESP.getCoreVersion() and update ESP.getChipModel()\r\n\r\n* Update timer hal for the latest 5.1\r\n\r\n* Use separate RX and TX buffer sizes in HTTP client\r\n\r\noptimizes download by allowing up to 4K packets to be received\r\n\r\n* Rename clock tree enum name in latest 5.1\r\n\r\n* ESP32-H4 support was removed in ESP-IDF v5.1\r\n\r\n* IDF release/v5.1 2004bf4e11 (#8165)\r\n\r\n* Deinit previous bus first (#8180)\r\n\r\n* TIMER - add timer_started flag, fix timerEnd() + timer HW test (#8135)\r\n\r\n* Add timer_started flag and stop before disable\r\n\r\n* Fix timer HW test\r\n\r\n* TOUCH - Peripheral manager implementation (#8129)\r\n\r\n* Touch periman implemented\r\n\r\n* Deinit previous bus first\r\n\r\n* LEDC Refactoring - Peripheral manager implemented (#8126)\r\n\r\n* LEDC periman implementation\r\n\r\n* Fix examples\r\n\r\n* Rework tone\r\n\r\n* Update ledc docs\r\n\r\n* fix missing bracket\r\n\r\n* Update analog funtions esp32-hal.h\r\n\r\n* Update CameraWebServer example\r\n\r\n* Fix HiFreq_ADC example\r\n\r\n* minor fixes - typos\r\n\r\n* Avoid calling tone/notone when tone already runs on dif. pin\r\n\r\n* Remove unused channels_resolution\r\n\r\n* GPIO - Peripheral manager implementation (#8179)\r\n\r\n* periman-implementation\r\n\r\n* fix RGB_BUILTIN and remove space\r\n\r\n* Enforces more consistency into Peripheral Manager (#8188)\r\n\r\n* Avoid log_i() message the first time a bus is assigned\r\n\r\n* Prevent operation with ESP32_BUS_TYPE_INIT\r\n\r\n* keeps coding style\r\n\r\n* do not print messages on INIT bus type\r\n\r\n* [Arduino Core 3.0.0] RMT IDF5.1 Refactoring (#7994)\r\n\r\n* RMT IDF5.1 refactoring\r\n\r\n* Fixes initial value setting\r\n\r\n* removed rmtRead() with user callback\r\n\r\n* simplify/remove Read data structure\r\n\r\n* Deep API simplification\r\n\r\n* fixes the examples\r\n\r\n* fix rmt.h\r\n\r\n* adds support to APB different frequencies\r\n\r\n* fixes CI and not defined RGB_BUILTIN\r\n\r\n* new RMT API and examples\r\n\r\n* fixing commentaties\r\n\r\n* Update esp32-hal-rgb-led.c\r\n\r\n* changes Filter API\r\n\r\n* Fixes example with Filter API\r\n\r\n* Update PlatformIO scripts for the upcoming 3.0 core (#8183)\r\n\r\n* Update PlatformIO scripts for the upcoming 3.0 core\r\n\r\n* Dynamically select proper framework-arduinoespressif32-libs package\r\n\r\nWith this change the dev-platform will be dynamically configured to\r\npull the latest .zip package with precompiled libraries from extracted from\r\npackage_esp32_index.template.json\r\n\r\n* free memory on detach (#8264)\r\n\r\n* SPI - Peripheral manager implementation  (#8255)\r\n\r\n* spi periman implementation\r\n\r\n* fix header file\r\n\r\n* remove unused struct\r\n\r\n* fix missing braces\r\n\r\n* Update esp32-hal-rmt.c (#8216)\r\n\r\nOptimizing Peripheral Manager Test\r\n\r\n* I2C - Peripheral manager implementation (#8220)\r\n\r\n* i2c-master periman initial commit\r\n\r\n* i2c-master make detachbus static + comment remove\r\n\r\n* i2c-slave periman implementation\r\n\r\n* SetPinBus to INIT on i2cDeinits\r\n\r\n* Fix slave pins deinit\r\n\r\n* remove dbg logs\r\n\r\n* set ret to ESP_FAIL instead of returning\r\n\r\n* Fix warnings in hal-spi caused by pariman transition\r\n\r\n* Update esptool.py to version 4.6\r\n\r\n* Add platform support for ESP_SR\r\n\r\n* Add USB Type and valid pin check to periman\r\n\r\n* replace bus with spi->num+1 (#8279)\r\n\r\n* Remove default pins from SPI HAL\r\n\r\n* Add commented out handlers for esptool.js in TinyUSB CDC\r\n\r\nFor future use\r\n\r\n* Add build defines for host os and fqbn (for debug purposes)\r\n\r\n* Provide proper memory caps total size\r\n\r\n* Update Esp.cpp\r\n\r\n* SDMMC - Peripheral manager implementation (#8289)\r\n\r\n* sdmmc periman implemented\r\n\r\n* save pins when SOC_SDMMC_USE_IOMUX\r\n\r\n* IDF release/v5.1 4bc762621d (#8292)\r\n\r\n* Adds missing pinMode (#8312)\r\n\r\n* Adds missing pinMode\r\n\r\nThe example code lacks a pinMode() to initialize the GPIO 0 (button). In Arduino Core 3.0.0, it prints an error message when trying to read a not initialized GPIO.\r\n\r\n* Update KeyboardLogout.ino\r\n\r\nAdds <buttonPin> to keep code standard\r\n\r\n* Update KeyboardReprogram.ino\r\n\r\nAdds <buttonPin> to keep code standard\r\n\r\n* LEDC Fade implementation (#8338)\r\n\r\n* fade API + pointer fixes\r\n\r\n* Add fade api\r\n\r\n* Add fade example\r\n\r\n* update ledc docs\r\n\r\n* remove unused variables\r\n\r\n* fix path to example\r\n\r\n* Adds USB to Peripheral Manager - Arduino Core 3.0.0 (#8335)\r\n\r\n* ETHERNET - Peripheral manager implementation (#8297)\r\n\r\n* Peripheral manager implemented\r\n\r\n* remove unused variable\r\n\r\n* Add all RMII pins\r\n\r\n* fix typo\r\n\r\n* Adds HardwareSerial to Peripheral Manager Arduino 3.0.0 (#8328)\r\n\r\n* Do not limit ETHERNET in periman to only ESP32. SPI is also an option\r\n\r\n* Initial support for ESP32-C6 (#8337)\r\n\r\n* Add checks for SOC defines (#8351)\r\n\r\n* Add checks for SOC defines\r\n\r\n* Add SoC checks to BLE library\r\n\r\n* fix i2c compilation error\r\n\r\n* fix wrong placement of include\r\n\r\n* add check to SPI library\r\n\r\n* add check to USB library\r\n\r\n* add checks to Wire library\r\n\r\n* Feature/esp32h2 support (#8373)\r\n\r\n* Initial support for ESP32H2\r\n\r\n* Additional changes for ESP32H2\r\n\r\n* Update libs for ESP32H2\r\n\r\n* Fix flashing on ESP32-H2\r\n\r\n* Fix GPIO Configs for ESP32-C6 and ESP32-H2\r\n\r\n* Update Timer test sketch\r\n\r\n* Fix upload flash parameters\r\n\r\n* Use ets_write_char_uart instead of ets_printf in log_printfv\r\n\r\n* Print full chip report when log level is sufficient (#8282)\r\n\r\n* ESP32-C3 does not have ets_write_char_uart\r\n\r\n* Fix BLE gap event name\r\n\r\n* HW Testing - Pytest update (#8389)\r\n\r\n* update tests requirements\r\n\r\n* remove already handled components\r\n\r\n* Update version of pytest\r\n\r\n* Add missing ESP32-H2 to hil.yml\r\n\r\n* Updated FreeRTOS names (#8418)\r\n\r\n* HW Testing -  ESP32-C6 + ESP32-H2 fixes (#8404)\r\n\r\n* add C6/H2 to tests cfg.json\r\n\r\n* remove ,\r\n\r\n* workflow runs-on runner by matrix\r\n\r\n* Add need for arduino tag to select runner\r\n\r\n* Add cryptography to requirements.txt\r\n\r\n* Removed duplicate TX1 define for H2 (#8402)\r\n\r\n* Fix broken examples\r\n\r\n* Fixes RMT filter & idle timing and setup (#8359)\r\n\r\n* Fixes Filter and Idle parameter to uint32\r\n\r\n* Fixes Filter and Idle setup\r\n\r\n* Fixes it to 5.1Libs branch\r\n\r\n* fix RMT CLK source and Filter API\r\n\r\n* fixes missing ;\r\n\r\n* fixes missing ;\r\n\r\n* fixes RMT example\r\n\r\n* IDF release/v5.1 a7b62bbcaf (#8438)\r\n\r\n* Add workflow to build executables from python scripts (#8290)\r\n\r\n* Add workflow to build executables from python scripts\r\n\r\n* Push binary to tools\r\n\r\n* Enable executable signing on Windows\r\n\r\n* Update get.py\r\n\r\n* Push binary to tools\r\n\r\n* Try with multiple files\r\n\r\n* Try more actions\r\n\r\n* Try powershell\r\n\r\n* Restore tools so they do not get rebuilt\r\n\r\n* Finalize scripts\r\n\r\n* Push binary to tools\r\n\r\n* App rollback should be after PSRAM is initialized\r\n\r\n* Correcting RX1 to GPIO4 and TX1 to GPIO5 to be consistent with documentation. Previous pin use works but is inconsistent with C6 docs.\r\n\r\n* Fixes Memory Leak (#8486)\r\n\r\n* fixes preprocessor test (#8485)\r\n\r\n* fixes preprocessor test\r\n\r\nWhen using `#define USE_SOFT_AP` \r\nChange\r\n`&& not USE_SOFT_AP` ==> `&& !defined(USE_SOFT_AP)`\r\n\r\n* Adds any BLE capable device in WiFiProv.ino\r\n\r\nRemoving ESP32 restriction for BLE Provisioning.\r\n\r\n* fix flash mode read out for C6\r\n\r\n* Add option for custom partitions without restrictions\r\n\r\n* SD_MMC update (#8298)\r\n\r\n* Updated SD_MMC lib and examples\r\n\r\n* Removed getter implementation and commented usage in examples\r\n\r\n* squashed updates\r\n\r\n* IDF release/v5.1 f0437b945f (#8599)\r\n\r\n* Update package_esp32_index.template.json\r\n\r\n* Fix printf format build error in BTAdvertisedDeviceSet.cpp\r\n\r\n---------\r\n\r\nCo-authored-by: Pedro Minatel <pedro.minatel@espressif.com>\r\nCo-authored-by: Rodrigo Garcia <rodrigo.garcia@espressif.com>\r\nCo-authored-by: Ha Thach <thach@tinyusb.org>\r\nCo-authored-by: Martin Turski <quiret@vfemail.net>\r\nCo-authored-by: raviypujar <raviypujar@gmail.com>\r\nCo-authored-by: Jason2866 <24528715+Jason2866@users.noreply.github.com>\r\nCo-authored-by: Tom\u00e1\u0161 Piln\u00fd <34927466+PilnyTomas@users.noreply.github.com>\r\nCo-authored-by: Jan Proch\u00e1zka <90197375+P-R-O-C-H-Y@users.noreply.github.com>\r\nCo-authored-by: Daniel Berlin <dberlin@dberlin.org>\r\nCo-authored-by: Nima Askari (\u0646\u06cc\u0645\u0627 \u0639\u0633\u06a9\u0631\u06cc) <nimaltd@yahoo.com>\r\nCo-authored-by: rtpmsys <106180646+rtpmsys@users.noreply.github.com>\r\nCo-authored-by: bytiful <55647551+bytiful@users.noreply.github.com>\r\nCo-authored-by: tmfarrington <tmfarrington@users.noreply.github.com>\r\nCo-authored-by: Krzysiek S <chris.streh@gmail.com>\r\nCo-authored-by: surt <carl.olsson@gmail.com>\r\nCo-authored-by: Max Scheffler <max.scheffler@pm.me>\r\nCo-authored-by: Clemens Kirchgatterer <clemens@1541.org>\r\nCo-authored-by: Peter Pan's Techland <twinkle-pirate@hotmail.com>\r\nCo-authored-by: Roman <programmeofficemilkyway@gmail.com>\r\nCo-authored-by: Eistee <Eistee82@users.noreply.github.com>\r\nCo-authored-by: David McCurley <44048235+mrengineer7777@users.noreply.github.com>\r\nCo-authored-by: Gaya3N25 <30388176+Gaya3N25@users.noreply.github.com>\r\nCo-authored-by: renebohne <rene.bohne@gmail.com>\r\nCo-authored-by: Oliv\u00e9r Rem\u00e9ny <25034625+remenyo@users.noreply.github.com>\r\nCo-authored-by: davidk88 <david.kotar@gmail.com>\r\nCo-authored-by: Vojt\u011bch Barto\u0161ka <76958047+VojtechBartoska@users.noreply.github.com>\r\nCo-authored-by: James Armstrong <jamesarmstrong3@me.com>\r\nCo-authored-by: Valerii Koval <valeros@users.noreply.github.com>\r\nCo-authored-by: Peter G. Jensen <root@petergjoel.dk>",
            "additions": 64,
            "deletions": 10,
            "change_type": "MODIFY",
            "diff": "@@ -24,10 +24,10 @@\n #include \"sdmmc_cmd.h\"\n #include \"soc/sdmmc_pins.h\"\n #include \"ff.h\"\n+#include \"esp32-hal-periman.h\"\n \n using namespace fs;\n \n-\n SDMMCFS::SDMMCFS(FSImplPtr impl)\n     : FS(impl), _card(nullptr)\n {\n@@ -40,7 +40,25 @@ SDMMCFS::SDMMCFS(FSImplPtr impl)\n     _pin_d2 = SDMMC_D2;\n     _pin_d3 = SDMMC_D3;\n #endif // BOARD_HAS_1BIT_SDMMC\n-#endif // defined(SOC_SDMMC_USE_GPIO_MATRIX) && defined(BOARD_HAS_SDMMC)\n+\n+#elif SOC_SDMMC_USE_IOMUX\n+    _pin_clk = SDMMC_SLOT1_IOMUX_PIN_NUM_CLK;\n+    _pin_cmd = SDMMC_SLOT1_IOMUX_PIN_NUM_CMD;\n+    _pin_d0 = SDMMC_SLOT1_IOMUX_PIN_NUM_D0;\n+#ifndef BOARD_HAS_1BIT_SDMMC\n+    _pin_d1 = SDMMC_SLOT1_IOMUX_PIN_NUM_D1;\n+    _pin_d2 = SDMMC_SLOT1_IOMUX_PIN_NUM_D2;\n+    _pin_d3 = SDMMC_SLOT1_IOMUX_PIN_NUM_D3;\n+#endif // BOARD_HAS_1BIT_SDMMC\n+#endif\n+}\n+\n+bool SDMMCFS::sdmmcDetachBus(void * bus_pointer){\n+    SDMMCFS *bus = (SDMMCFS *) bus_pointer;\n+    if(bus->_card) {\n+        bus->end();\n+    }\n+    return true;\n }\n \n bool SDMMCFS::setPins(int clk, int cmd, int d0)\n@@ -68,12 +86,12 @@ bool SDMMCFS::setPins(int clk, int cmd, int d0, int d1, int d2, int d3)\n     // Since SDMMCFS::begin hardcodes the usage of slot 1, only check if\n     // the pins match slot 1 pins.\n     bool pins_ok = (clk == (int)SDMMC_SLOT1_IOMUX_PIN_NUM_CLK) &&\n-        (cmd == (int)SDMMC_SLOT1_IOMUX_PIN_NUM_CMD) &&\n-        (d0 == (int)SDMMC_SLOT1_IOMUX_PIN_NUM_D0) &&\n-        (((d1 == -1) && (d2 == -1) && (d3 == -1)) ||\n-         ((d1 == (int)SDMMC_SLOT1_IOMUX_PIN_NUM_D1) &&\n-         (d2 == (int)SDMMC_SLOT1_IOMUX_PIN_NUM_D2) &&\n-         (d3 == (int)SDMMC_SLOT1_IOMUX_PIN_NUM_D3)));\n+                   (cmd == (int)SDMMC_SLOT1_IOMUX_PIN_NUM_CMD) &&\n+                   (d0 == (int)SDMMC_SLOT1_IOMUX_PIN_NUM_D0) &&\n+                   (((d1 == -1) && (d2 == -1) && (d3 == -1)) ||\n+                   ((d1 == (int)SDMMC_SLOT1_IOMUX_PIN_NUM_D1) &&\n+                   (d2 == (int)SDMMC_SLOT1_IOMUX_PIN_NUM_D2) &&\n+                   (d3 == (int)SDMMC_SLOT1_IOMUX_PIN_NUM_D3)));\n     if (!pins_ok) {\n         log_e(\"SDMMCFS: specified pins are not supported by this chip.\");\n         return false;\n@@ -89,6 +107,8 @@ bool SDMMCFS::begin(const char * mountpoint, bool mode1bit, bool format_if_mount\n     if(_card) {\n         return true;\n     }\n+    perimanSetBusDeinit(ESP32_BUS_TYPE_SDMMC, SDMMCFS::sdmmcDetachBus);\n+\n     //mount\n     sdmmc_slot_config_t slot_config = SDMMC_SLOT_CONFIG_DEFAULT();\n #ifdef SOC_SDMMC_USE_GPIO_MATRIX\n@@ -108,6 +128,16 @@ bool SDMMCFS::begin(const char * mountpoint, bool mode1bit, bool format_if_mount\n     slot_config.d3 = (gpio_num_t) _pin_d3;\n     slot_config.width = 4;\n #endif // SOC_SDMMC_USE_GPIO_MATRIX\n+\n+    if(!perimanSetPinBus(_pin_cmd, ESP32_BUS_TYPE_INIT, NULL)){ return false; }\n+    if(!perimanSetPinBus(_pin_clk, ESP32_BUS_TYPE_INIT, NULL)){ return false; }\n+    if(!perimanSetPinBus(_pin_d0,  ESP32_BUS_TYPE_INIT, NULL)){ return false; }\n+    if(!mode1bit) {\n+        if(!perimanSetPinBus(_pin_d1, ESP32_BUS_TYPE_INIT, NULL)){ return false; }\n+        if(!perimanSetPinBus(_pin_d2, ESP32_BUS_TYPE_INIT, NULL)){ return false; }\n+        if(!perimanSetPinBus(_pin_d3, ESP32_BUS_TYPE_INIT, NULL)){ return false; }\n+    }\n+    \n     sdmmc_host_t host = SDMMC_HOST_DEFAULT();\n     host.flags = SDMMC_HOST_FLAG_4BIT;\n     host.slot = SDMMC_HOST_SLOT_1;\n@@ -119,11 +149,13 @@ bool SDMMCFS::begin(const char * mountpoint, bool mode1bit, bool format_if_mount\n         host.flags = SDMMC_HOST_FLAG_1BIT; //use 1-line SD mode\n         slot_config.width = 1;\n     }\n+    _mode1bit = mode1bit;\n \n     esp_vfs_fat_sdmmc_mount_config_t mount_config = {\n         .format_if_mount_failed = format_if_mount_failed,\n         .max_files = maxOpenFiles,\n-        .allocation_unit_size = 0\n+        .allocation_unit_size = 0,\n+        .disk_status_check_enable = false\n     };\n \n     esp_err_t ret = esp_vfs_fat_sdmmc_mount(mountpoint, &host, &slot_config, &mount_config, &_card);\n@@ -141,15 +173,37 @@ bool SDMMCFS::begin(const char * mountpoint, bool mode1bit, bool format_if_mount\n         return false;\n     }\n     _impl->mountpoint(mountpoint);\n+\n+    if(!perimanSetPinBus(_pin_cmd, ESP32_BUS_TYPE_SDMMC, (void *)(this))){ goto err; }\n+    if(!perimanSetPinBus(_pin_clk, ESP32_BUS_TYPE_SDMMC, (void *)(this))){ goto err; }\n+    if(!perimanSetPinBus(_pin_d0,  ESP32_BUS_TYPE_SDMMC, (void *)(this))){ goto err; }\n+    if(!mode1bit) {\n+        if(!perimanSetPinBus(_pin_d1, ESP32_BUS_TYPE_SDMMC, (void *)(this))){ goto err; }\n+        if(!perimanSetPinBus(_pin_d2, ESP32_BUS_TYPE_SDMMC, (void *)(this))){ goto err; }\n+        if(!perimanSetPinBus(_pin_d3, ESP32_BUS_TYPE_SDMMC, (void *)(this))){ goto err; }\n+    }\n     return true;\n+\n+err:\n+    log_e(\"Failed to set all pins bus to SDMMC\");\n+    SDMMCFS::sdmmcDetachBus((void *)(this));\n+    return false;\n }\n \n void SDMMCFS::end()\n {\n     if(_card) {\n-        esp_vfs_fat_sdmmc_unmount();\n+        esp_vfs_fat_sdcard_unmount(_impl->mountpoint(), _card);\n         _impl->mountpoint(NULL);\n         _card = NULL;\n+        perimanSetPinBus(_pin_cmd, ESP32_BUS_TYPE_INIT, NULL);\n+        perimanSetPinBus(_pin_clk, ESP32_BUS_TYPE_INIT, NULL);\n+        perimanSetPinBus(_pin_d0,  ESP32_BUS_TYPE_INIT, NULL);\n+        if(!_mode1bit) {\n+            perimanSetPinBus(_pin_d1, ESP32_BUS_TYPE_INIT, NULL);\n+            perimanSetPinBus(_pin_d2, ESP32_BUS_TYPE_INIT, NULL);\n+            perimanSetPinBus(_pin_d3, ESP32_BUS_TYPE_INIT, NULL);\n+        }\n     }\n }\n \n",
            "comment_added_diff": {
                "52": "#endif // BOARD_HAS_1BIT_SDMMC"
            },
            "comment_deleted_diff": {
                "43": "#endif // defined(SOC_SDMMC_USE_GPIO_MATRIX) && defined(BOARD_HAS_SDMMC)"
            },
            "comment_modified_diff": {}
        }
    ],
    "WString.cpp": [
        {
            "commit": "345e3c637ae60c33d93c9c7c8c08087077a3bd60",
            "timestamp": "2023-02-15T14:22:30+02:00",
            "author": "David McCurley",
            "commit_message": "WString Fix int64_t (#7765)\n\nWString Fix int64_t\r\n\r\nFixed int64_t String support. Resolves issue #7760.\r\n\r\nBackground:\r\nsprintf on esp32 doesn't support \"%lld\" parameter.  It's possible to recompile the underlying libraries to add that option, but I have an easier solution.\r\nThis has already been solved in ESP8266 version of WString by replacing sprintf() with itoa/ltoa/lltoa.\r\n\r\nThis PR does the following:\r\nFixes integer print issues by replacing sprintf() with itoa/ltoa/lltoa\r\nMoves concat(long long num), concat(unsigned long long num) location (match ESP8266)\r\nCleans up code formatting (matches ESP8266)\r\n\r\nCo-authored-by: Me No Dev <me-no-dev@users.noreply.github.com>",
            "additions": 50,
            "deletions": 63,
            "change_type": "MODIFY",
            "diff": "@@ -21,7 +21,7 @@\n  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA\n  */\n \n-#include <Arduino.h>\n+#include \"Arduino.h\"\n #include \"WString.h\"\n #include \"stdlib_noniso.h\"\n #include \"esp32-hal-log.h\"\n@@ -80,11 +80,7 @@ String::String(unsigned char value, unsigned char base) {\n String::String(int value, unsigned char base) {\n     init();\n     char buf[2 + 8 * sizeof(int)];\n-    if (base == 10) {\n-        sprintf(buf, \"%d\", value);\n-    } else {\n-        itoa(value, buf, base);\n-    }\n+    itoa(value, buf, base);\n     *this = buf;\n }\n \n@@ -98,11 +94,7 @@ String::String(unsigned int value, unsigned char base) {\n String::String(long value, unsigned char base) {\n     init();\n     char buf[2 + 8 * sizeof(long)];\n-    if (base==10) {\n-        sprintf(buf, \"%ld\", value);\n-    } else {\n-        ltoa(value, buf, base);\n-    }\n+    ltoa(value, buf, base);\n     *this = buf;\n }\n \n@@ -140,11 +132,7 @@ String::String(double value, unsigned int decimalPlaces) {\n String::String(long long value, unsigned char base) {\n     init();\n     char buf[2 + 8 * sizeof(long long)];\n-    if (base==10) {\n-        sprintf(buf, \"%lld\", value);   // NOT SURE - NewLib Nano ... does it support %lld? \n-    } else {\n-        lltoa(value, buf, base);\n-    }\n+    lltoa(value, buf, base);\n     *this = buf;\n }\n \n@@ -159,9 +147,9 @@ String::~String() {\n     invalidate();\n }\n \n-// /*********************************************/\n-// /*  Memory Management                        */\n-// /*********************************************/\n+/*********************************************/\n+/*  Memory Management                        */\n+/*********************************************/\n \n inline void String::init(void) {\n     setSSO(false);\n@@ -221,8 +209,7 @@ bool String::changeBuffer(unsigned int maxStrLen) {\n             // Copy the SSO buffer into allocated space\n             memmove(newbuffer, sso.buff, sizeof(sso.buff));\n         }\n-        if (newSize > oldSize)\n-        {\n+        if (newSize > oldSize) {\n             memset(newbuffer + oldSize, 0, newSize - oldSize);\n         }\n         setSSO(false);\n@@ -234,9 +221,9 @@ bool String::changeBuffer(unsigned int maxStrLen) {\n     return false;\n }\n \n-// /*********************************************/\n-// /*  Copy and Move                            */\n-// /*********************************************/\n+/*********************************************/\n+/*  Copy and Move                            */\n+/*********************************************/\n \n String & String::copy(const char *cstr, unsigned int length) {\n     if(!reserve(length)) {\n@@ -292,12 +279,10 @@ void String::move(String &rhs) {\n String & String::operator =(const String &rhs) {\n     if(this == &rhs)\n         return *this;\n-\n     if(rhs.buffer())\n         copy(rhs.buffer(), rhs.len());\n     else\n         invalidate();\n-\n     return *this;\n }\n \n@@ -320,7 +305,6 @@ String & String::operator =(const char *cstr) {\n         copy(cstr, strlen(cstr));\n     else\n         invalidate();\n-\n     return *this;\n }\n \n@@ -333,9 +317,9 @@ String & String::operator =(const __FlashStringHelper *pstr) {\n     return *this;\n }\n \n-// /*********************************************/\n-// /*  concat                                   */\n-// /*********************************************/\n+/*********************************************/\n+/*  concat                                   */\n+/*********************************************/\n \n bool String::concat(const String &s) {\n     // Special case if we're concatting ourself (s += s;) since we may end up\n@@ -388,12 +372,14 @@ bool String::concat(char c) {\n \n bool String::concat(unsigned char num) {\n     char buf[1 + 3 * sizeof(unsigned char)];\n-    return concat(buf, sprintf(buf, \"%d\", num));\n+    utoa(num, buf, 10);\n+    return concat(buf, strlen(buf));\n }\n \n bool String::concat(int num) {\n     char buf[2 + 3 * sizeof(int)];\n-    return concat(buf, sprintf(buf, \"%d\", num));\n+    itoa(num, buf, 10);\n+    return concat(buf, strlen(buf));\n }\n \n bool String::concat(unsigned int num) {\n@@ -404,7 +390,8 @@ bool String::concat(unsigned int num) {\n \n bool String::concat(long num) {\n     char buf[2 + 3 * sizeof(long)];\n-    return concat(buf, sprintf(buf, \"%ld\", num));\n+    ltoa(num, buf, 10);\n+    return concat(buf, strlen(buf));\n }\n \n bool String::concat(unsigned long num) {\n@@ -413,6 +400,18 @@ bool String::concat(unsigned long num) {\n     return concat(buf, strlen(buf));\n }\n \n+bool String::concat(long long num) {\n+    char buf[2 + 3 * sizeof(long long)];\n+    lltoa(num, buf, 10);\n+    return concat(buf, strlen(buf));\n+}\n+\n+bool String::concat(unsigned long long num) {\n+    char buf[1 + 3 * sizeof(unsigned long long)];\n+    ulltoa(num, buf, 10);\n+    return concat(buf, strlen(buf));\n+}\n+\n bool String::concat(float num) {\n     char buf[20];\n     char* string = dtostrf(num, 4, 2, buf);\n@@ -425,17 +424,6 @@ bool String::concat(double num) {\n     return concat(string, strlen(string));\n }\n \n-bool String::concat(long long num) {\n-    char buf[2 + 3 * sizeof(long long)];\n-    return concat(buf, sprintf(buf, \"%lld\", num));    // NOT SURE - NewLib Nano ... does it support %lld?\n-}\n-\n-bool String::concat(unsigned long long num) {\n-    char buf[1 + 3 * sizeof(unsigned long long)];\n-    ulltoa(num, buf, 10);\n-    return concat(buf, strlen(buf));\n-}\n-\n bool String::concat(const __FlashStringHelper * str) {\n     if (!str)\n         return false;\n@@ -546,9 +534,9 @@ StringSumHelper & operator + (const StringSumHelper &lhs, const __FlashStringHel\n     return a;\n }\n \n-// /*********************************************/\n-// /*  Comparison                               */\n-// /*********************************************/\n+/*********************************************/\n+/*  Comparison                               */\n+/*********************************************/\n \n int String::compareTo(const String &s) const {\n     if(!buffer() || !s.buffer()) {\n@@ -650,9 +638,9 @@ bool String::endsWith(const String &s2) const {\n     return strcmp(&buffer()[len() - s2.len()], s2.buffer()) == 0;\n }\n \n-// /*********************************************/\n-// /*  Character Access                         */\n-// /*********************************************/\n+/*********************************************/\n+/*  Character Access                         */\n+/*********************************************/\n \n char String::charAt(unsigned int loc) const {\n     return operator[](loc);\n@@ -692,9 +680,9 @@ void String::getBytes(unsigned char *buf, unsigned int bufsize, unsigned int ind\n     buf[n] = 0;\n }\n \n-// /*********************************************/\n-// /*  Search                                   */\n-// /*********************************************/\n+/*********************************************/\n+/*  Search                                   */\n+/*********************************************/\n \n int String::indexOf(char c) const {\n     return indexOf(c, 0);\n@@ -703,7 +691,7 @@ int String::indexOf(char c) const {\n int String::indexOf(char ch, unsigned int fromIndex) const {\n     if(fromIndex >= len())\n         return -1;\n-    const char* temp = strchr(buffer() + fromIndex, ch);\n+    const char *temp = strchr(buffer() + fromIndex, ch);\n     if(temp == NULL)\n         return -1;\n     return temp - buffer();\n@@ -773,9 +761,9 @@ String String::substring(unsigned int left, unsigned int right) const {\n     return out;\n }\n \n-// /*********************************************/\n-// /*  Modification                             */\n-// /*********************************************/\n+/*********************************************/\n+/*  Modification                             */\n+/*********************************************/\n \n void String::replace(char find, char replace) {\n     if(!buffer())\n@@ -786,7 +774,7 @@ void String::replace(char find, char replace) {\n     }\n }\n \n-void String::replace(const String& find, const String& replace) {\n+void String::replace(const String &find, const String &replace) {\n     if(len() == 0 || find.len() == 0)\n         return;\n     int diff = replace.len() - find.len();\n@@ -892,9 +880,9 @@ void String::trim(void) {\n     wbuffer()[newlen] = 0;\n }\n \n-// /*********************************************/\n-// /*  Parsing / Conversion                     */\n-// /*********************************************/\n+/*********************************************/\n+/*  Parsing / Conversion                     */\n+/*********************************************/\n \n long String::toInt(void) const {\n     if (buffer())\n@@ -908,8 +896,7 @@ float String::toFloat(void) const {\n     return 0;\n }\n \n-double String::toDouble(void) const\n-{\n+double String::toDouble(void) const {\n     if (buffer())\n         return atof(buffer());\n     return 0.0;\n",
            "comment_added_diff": {},
            "comment_deleted_diff": {
                "144": "        sprintf(buf, \"%lld\", value);   // NOT SURE - NewLib Nano ... does it support %lld?",
                "162": "// /*********************************************/",
                "163": "// /*  Memory Management                        */",
                "164": "// /*********************************************/",
                "237": "// /*********************************************/",
                "238": "// /*  Copy and Move                            */",
                "239": "// /*********************************************/",
                "336": "// /*********************************************/",
                "337": "// /*  concat                                   */",
                "338": "// /*********************************************/",
                "430": "    return concat(buf, sprintf(buf, \"%lld\", num));    // NOT SURE - NewLib Nano ... does it support %lld?",
                "549": "// /*********************************************/",
                "550": "// /*  Comparison                               */",
                "551": "// /*********************************************/",
                "653": "// /*********************************************/",
                "654": "// /*  Character Access                         */",
                "655": "// /*********************************************/",
                "695": "// /*********************************************/",
                "696": "// /*  Search                                   */",
                "697": "// /*********************************************/",
                "776": "// /*********************************************/",
                "777": "// /*  Modification                             */",
                "778": "// /*********************************************/",
                "895": "// /*********************************************/",
                "896": "// /*  Parsing / Conversion                     */",
                "897": "// /*********************************************/"
            },
            "comment_modified_diff": {}
        },
        {
            "commit": "b98255d8d1be7280e767f15a8c759e13e00f4b4a",
            "timestamp": "2023-04-06T13:32:21+03:00",
            "author": "Dirk O. Kaar",
            "commit_message": "Completely inline the helper pure abstract __FlashStringHelper class (#7941)\n\n* Remove __FlashStringHelper from ESP32, it's not needed - all the files using it are different from their ESP8266 counterparts anyway.\r\n\r\n* Revert removal of class __FlashStringHelper forward for continued compatibility with external libs\r\n\r\n* Improved fix, works for libs that return const __FlashStringHelper*\r\n\r\n* Inline all wrappers using const __FlashStringHelper*.",
            "additions": 0,
            "deletions": 46,
            "change_type": "MODIFY",
            "diff": "@@ -47,11 +47,6 @@ String::String(const String &value) {\n     *this = value;\n }\n \n-String::String(const __FlashStringHelper *pstr) {\n-    init();\n-    *this = pstr; // see operator =\n-}\n-\n #ifdef __GXX_EXPERIMENTAL_CXX0X__\n String::String(String &&rval) {\n     init();\n@@ -235,16 +230,6 @@ String & String::copy(const char *cstr, unsigned int length) {\n     return *this;\n }\n \n-String & String::copy(const __FlashStringHelper *pstr, unsigned int length) {\n-    if (!reserve(length)) {\n-        invalidate();\n-        return *this;\n-    }\n-    memcpy_P(wbuffer(), (PGM_P)pstr, length + 1); // We know wbuffer() cannot ever be in PROGMEM, so memcpy safe here\n-    setLen(length);\n-    return *this;\n-}\n-\n #ifdef __GXX_EXPERIMENTAL_CXX0X__\n void String::move(String &rhs) {\n     if(buffer()) {\n@@ -308,15 +293,6 @@ String & String::operator =(const char *cstr) {\n     return *this;\n }\n \n-String & String::operator =(const __FlashStringHelper *pstr) {\n-    if(pstr)\n-        copy(pstr, strlen_P((PGM_P)pstr));\n-    else\n-        invalidate();\n-\n-    return *this;\n-}\n-\n /*********************************************/\n /*  concat                                   */\n /*********************************************/\n@@ -424,20 +400,6 @@ bool String::concat(double num) {\n     return concat(string, strlen(string));\n }\n \n-bool String::concat(const __FlashStringHelper * str) {\n-    if (!str)\n-        return false;\n-    int length = strlen_P((PGM_P)str);\n-    if (length == 0)\n-        return true;\n-    unsigned int newlen = len() + length;\n-    if (!reserve(newlen))\n-        return false;\n-    memcpy_P(wbuffer() + len(), (PGM_P)str, length + 1);\n-    setLen(newlen);\n-    return true;\n-}\n-\n /*********************************************/\n /*  Concatenate                              */\n /*********************************************/\n@@ -526,14 +488,6 @@ StringSumHelper & operator +(const StringSumHelper &lhs, unsigned long long num)\n     return a;\n }\n \n-StringSumHelper & operator + (const StringSumHelper &lhs, const __FlashStringHelper *rhs)\n-{\n-    StringSumHelper &a = const_cast<StringSumHelper&>(lhs);\n-    if (!a.concat(rhs))\n-        a.invalidate();\n-    return a;\n-}\n-\n /*********************************************/\n /*  Comparison                               */\n /*********************************************/\n",
            "comment_added_diff": {},
            "comment_deleted_diff": {
                "52": "    *this = pstr; // see operator =",
                "243": "    memcpy_P(wbuffer(), (PGM_P)pstr, length + 1); // We know wbuffer() cannot ever be in PROGMEM, so memcpy safe here"
            },
            "comment_modified_diff": {}
        }
    ],
    "WString.h": [],
    "partitions-4MB-tinyuf2.csv": [],
    "WiFiAccessPoint.ino": [],
    "WiFiAP.cpp": [
        {
            "commit": "efe966d506ea07049f6dd7f881d382e75b10d03d",
            "timestamp": "2023-02-13T12:28:50+02:00",
            "author": "Rodrigo Garcia",
            "commit_message": "Avoid starting AP Mode even when the password is too short (#7832)\n\n* Avoid starting AP Mode even when the password is too short\r\n\r\n* Check SoftAP return code in case of failure",
            "additions": 7,
            "deletions": 6,
            "change_type": "MODIFY",
            "diff": "@@ -136,12 +136,6 @@ void wifi_softap_config(wifi_config_t *wifi_config, const char * ssid=NULL, cons\n bool WiFiAPClass::softAP(const char* ssid, const char* passphrase, int channel, int ssid_hidden, int max_connection, bool ftm_responder)\n {\n \n-    if(!WiFi.enableAP(true)) {\n-        // enable AP failed\n-        log_e(\"enable AP first!\");\n-        return false;\n-    }\n-\n     if(!ssid || *ssid == 0) {\n         // fail SSID missing\n         log_e(\"SSID missing!\");\n@@ -154,6 +148,13 @@ bool WiFiAPClass::softAP(const char* ssid, const char* passphrase, int channel,\n         return false;\n     }\n \n+    // last step after checking the SSID and password\n+    if(!WiFi.enableAP(true)) {\n+        // enable AP failed\n+        log_e(\"enable AP first!\");\n+        return false;\n+    }\n+\n     wifi_config_t conf;\n     wifi_config_t conf_current;\n     wifi_softap_config(&conf, ssid, passphrase, channel, WIFI_AUTH_WPA2_PSK, ssid_hidden, max_connection, ftm_responder);\n",
            "comment_added_diff": {
                "151": "    // last step after checking the SSID and password",
                "153": "        // enable AP failed"
            },
            "comment_deleted_diff": {
                "140": "        // enable AP failed"
            },
            "comment_modified_diff": {}
        }
    ],
    ".skip.esp32c3": [],
    ".skip.esp32s2": [],
    ".skip.esp32s3": [],
    "GetLocalMAC.ino": [],
    "BTAddress.cpp": [],
    "BTAddress.h": [],
    "BTAdvertisedDeviceSet.cpp": [],
    "BTScanResultsSet.cpp": [],
    "Arduino.h": [],
    "BLE_Beacon_Scanner.ino": [],
    "BLE_EddystoneTLM_Beacon.ino": [],
    "BLEBeacon.cpp": [],
    "BLEEddystoneTLM.cpp": [
        {
            "commit": "b8ea455f45c13992884ad0c6c87c27c7eee20510",
            "timestamp": "2023-02-20T13:30:04+02:00",
            "author": "Tom\u00e1\u0161 Piln\u00fd",
            "commit_message": "Fix for negative temp in Eddystone TLM; solving #7618 (#7791)\n\n* Changed data type of temperature\r\n\r\n* Changed data type in EddystoneTLM class and example\r\n\r\n* Revert \"Changed data type in EddystoneTLM class and example\"\r\n\r\nThis reverts commit 1f3a9414ee13341f80bd6d51cdbd57254aadfe97.\r\n\r\n* Draft of Eddystone TLM example\r\n\r\n* Adds MACROs to convert beacon temperature \r\n\r\n2 Macros\r\nEDDYSTONE_TEMP_U16_TO_FLOAT(tempU16)  - takes the TLM BigEndian 8.8 fixed point representation and returns its float value \r\nEDDYSTONE_TEMP_FLOAT_TO_U16(tempFloat)  - takes a float (temperature) and returns its BigEndian 8.8 fixed point representation\r\n\r\n* Fixed temp\r\n\r\n* Changed to conform with PR comments\r\n\r\n* Fixed comment on closing bracket\r\n\r\n* Prints negative TEMP big endian as just 2 bytes\r\n\r\n* Extacts correct Eddyston Service Data\r\n\r\n* Fixes BLEEddystoneTLM::toString() negative temp\r\n\r\n* Fixes URL field length\r\n\r\n* Fixes Eddystone URL decoding\r\n\r\n* Fixes MSB for iBeacon UUID\r\n\r\niBeacons use big endian BLE fields.\r\n\r\n* Fix to detect iBeacon that also has Service UUID\r\n\r\nThis fix makes the BLE_iBeacon.ino to work correctly with the BLE_Beacon_Scanner.ino example\r\n\r\n---------\r\n\r\nCo-authored-by: Rodrigo Garcia <rodrigo.garcia@espressif.com>",
            "additions": 22,
            "deletions": 5,
            "change_type": "MODIFY",
            "diff": "@@ -17,8 +17,6 @@\n #include \"BLEEddystoneTLM.h\"\n \n static const char LOG_TAG[] = \"BLEEddystoneTLM\";\n-#define ENDIAN_CHANGE_U16(x) ((((x)&0xFF00)>>8) + (((x)&0xFF)<<8))\n-#define ENDIAN_CHANGE_U32(x) ((((x)&0xFF000000)>>24) + (((x)&0x00FF0000)>>8)) + ((((x)&0xFF00)<<8) + (((x)&0xFF)<<24))\n \n BLEEddystoneTLM::BLEEddystoneTLM() {\n \tbeaconUUID = 0xFEAA;\n@@ -47,9 +45,13 @@ uint16_t BLEEddystoneTLM::getVolt() {\n } // getVolt\n \n float BLEEddystoneTLM::getTemp() {\n-\treturn ENDIAN_CHANGE_U16(m_eddystoneData.temp) / 256.0f;\n+  return EDDYSTONE_TEMP_U16_TO_FLOAT(m_eddystoneData.temp);\n } // getTemp\n \n+uint16_t BLEEddystoneTLM::getRawTemp() {\n+\treturn ENDIAN_CHANGE_U16(m_eddystoneData.temp);\n+} // getRawTemp\n+\n uint32_t BLEEddystoneTLM::getCount() {\n \treturn ENDIAN_CHANGE_U32(m_eddystoneData.advCount);\n } // getCount\n@@ -73,7 +75,7 @@ std::string BLEEddystoneTLM::toString() {\n   out += \" mV\\n\";\n \n   out += \"Temperature \";\n-  snprintf(val, sizeof(val), \"%.2f\", ENDIAN_CHANGE_U16(m_eddystoneData.temp) / 256.0f);\n+  snprintf(val, sizeof(val), \"%.2f\", ((int16_t)ENDIAN_CHANGE_U16(m_eddystoneData.temp)) / 256.0f);\n   out += val;\n   out += \" C\\n\";\n \n@@ -110,6 +112,21 @@ std::string BLEEddystoneTLM::toString() {\n \n /**\n  * Set the raw data for the beacon record.\n+ * Example:\n+ * uint8_t *payLoad = advertisedDevice.getPayload();\n+ * eddystoneTLM.setData(std::string((char*)payLoad+22, advertisedDevice.getPayloadLength() - 22));\n+ * Note: the offset 22 works for current implementation of example BLE_EddystoneTLM Beacon.ino, however it is not static and will be reimplemented\n+ * Data frame:\n+ * | Field  || Len | Type | UUID        | EddyStone TLM |\n+ * | Offset || 0   | 1    | 2           | 4             |\n+ * | Len    || 1 B | 1 B  | 2 B         | 14 B          |\n+ * | Data   || ??  | ??   | 0xAA | 0xFE | ???           |\n+ *\n+ * EddyStone TLM frame:\n+ * | Field  || Type  | Version | Batt mV     | Beacon temp | Cnt since boot | Time since boot |\n+ * | Offset || 0     | 1       | 2           | 4           | 6              | 10              |\n+ * | Len    || 1 B   | 1 B     | 2 B         | 2 B         | 4 B            | 4 B             |\n+ * | Data   || 0x20  | ??      | ??   | ??   | ??    | ??  |   |   |   |    |   |   |   |     |\n  */\n void BLEEddystoneTLM::setData(std::string data) {\n \tif (data.length() != sizeof(m_eddystoneData)) {\n@@ -132,7 +149,7 @@ void BLEEddystoneTLM::setVolt(uint16_t volt) {\n } // setVolt\n \n void BLEEddystoneTLM::setTemp(float temp) {\n-\tm_eddystoneData.temp = (uint16_t)temp;\n+\tm_eddystoneData.temp = EDDYSTONE_TEMP_FLOAT_TO_U16(temp);\n } // setTemp\n \n void BLEEddystoneTLM::setCount(uint32_t advCount) {\n",
            "comment_added_diff": {
                "53": "} // getRawTemp"
            },
            "comment_deleted_diff": {},
            "comment_modified_diff": {}
        },
        {
            "commit": "822f252b353cfd808c77c9bc8369bc0cb4e0b5be",
            "timestamp": "2023-10-06T15:50:11+03:00",
            "author": "Me No Dev",
            "commit_message": "BLE upgrades (#8724)\n\n* Renamed library description\r\n\r\n* Updated Eddystone URL (not complete)\r\n\r\n* Updated Eddystone URL\r\n\r\n* Updated Eddystone classes and beacon scanner\r\n\r\n* Renamed examples - removing prefix BLE_\r\n\r\n* Renamed Beacon_Scanner\r\n\r\n* Updated TLM\r\n\r\n* Changed std::string to Arduino String\r\n\r\n* More std::string -> String\r\n\r\n* Changed String in forgotten file\r\n\r\n* Changed .data to .c_str\r\n\r\n* Reverting single String type change\r\n\r\n* Few more fixes related to the String transition\r\n\r\n* Fixed URL and Utils error\r\n\r\n* Added and modified compatibility safeguards for BLE5 examples\r\n\r\n* Added #include WString.h\r\n\r\n* Fixed Beacon_Scanner\r\n\r\n* Remove commented include\r\n\r\nCo-authored-by: Lucas Saavedra Vaz <lucassvaz@yahoo.com.br>\r\n\r\n---------\r\n\r\nCo-authored-by: Tomas Pilny <tomas.pilny@espressif.com>\r\nCo-authored-by: Lucas Saavedra Vaz <lucassvaz@yahoo.com.br>",
            "additions": 48,
            "deletions": 36,
            "change_type": "MODIFY",
            "diff": "@@ -22,29 +22,39 @@\n static const char LOG_TAG[] = \"BLEEddystoneTLM\";\n \n BLEEddystoneTLM::BLEEddystoneTLM() {\n-\tbeaconUUID = 0xFEAA;\n-\tm_eddystoneData.frameType = EDDYSTONE_TLM_FRAME_TYPE;\n-\tm_eddystoneData.version = 0;\n-\tm_eddystoneData.volt = 3300; // 3300mV = 3.3V\n-\tm_eddystoneData.temp = (uint16_t) ((float) 23.00)/256;\n-\tm_eddystoneData.advCount = 0;\n-\tm_eddystoneData.tmil = 0;\n+  m_eddystoneData.frameType = EDDYSTONE_TLM_FRAME_TYPE;\n+  m_eddystoneData.version = 0;\n+  m_eddystoneData.volt = 3300; // 3300mV = 3.3V\n+  m_eddystoneData.temp = (uint16_t) ((float) 23.00)/256;\n+  m_eddystoneData.advCount = 0;\n+  m_eddystoneData.tmil = 0;\n } // BLEEddystoneTLM\n \n-std::string BLEEddystoneTLM::getData() {\n-\treturn std::string((char*) &m_eddystoneData, sizeof(m_eddystoneData));\n+BLEEddystoneTLM::BLEEddystoneTLM(BLEAdvertisedDevice *advertisedDevice){\n+  char* payload = (char*)advertisedDevice->getPayload();\n+  for(int i = 0; i < advertisedDevice->getPayloadLength(); ++i){\n+    if(payload[i] == 0x16 && advertisedDevice->getPayloadLength() >= i+2+sizeof(m_eddystoneData) && payload[i+1] == 0xAA && payload[i+2] == 0xFE && payload[i+3] == 0x20){\n+      log_d(\"Eddystone TLM data frame starting at byte [%d]\", i+3);\n+      setData(String(payload+i+3, sizeof(m_eddystoneData)));\n+      break;\n+    }\n+  }\n+}\n+\n+String BLEEddystoneTLM::getData() {\n+  return String((char*) &m_eddystoneData, sizeof(m_eddystoneData));\n } // getData\n \n BLEUUID BLEEddystoneTLM::getUUID() {\n-\treturn BLEUUID(beaconUUID);\n+  return beaconUUID;\n } // getUUID\n \n uint8_t BLEEddystoneTLM::getVersion() {\n-\treturn m_eddystoneData.version;\n+  return m_eddystoneData.version;\n } // getVersion\n \n uint16_t BLEEddystoneTLM::getVolt() {\n-\treturn ENDIAN_CHANGE_U16(m_eddystoneData.volt);\n+  return ENDIAN_CHANGE_U16(m_eddystoneData.volt);\n } // getVolt\n \n float BLEEddystoneTLM::getTemp() {\n@@ -52,25 +62,25 @@ float BLEEddystoneTLM::getTemp() {\n } // getTemp\n \n uint16_t BLEEddystoneTLM::getRawTemp() {\n-\treturn ENDIAN_CHANGE_U16(m_eddystoneData.temp);\n+  return ENDIAN_CHANGE_U16(m_eddystoneData.temp);\n } // getRawTemp\n \n uint32_t BLEEddystoneTLM::getCount() {\n-\treturn ENDIAN_CHANGE_U32(m_eddystoneData.advCount);\n+  return ENDIAN_CHANGE_U32(m_eddystoneData.advCount);\n } // getCount\n \n uint32_t BLEEddystoneTLM::getTime() {\n-\treturn (ENDIAN_CHANGE_U32(m_eddystoneData.tmil)) / 10;\n+  return (ENDIAN_CHANGE_U32(m_eddystoneData.tmil)) / 10;\n } // getTime\n \n-std::string BLEEddystoneTLM::toString() {\n-  std::string out = \"\";\n+String BLEEddystoneTLM::toString() {\n+  String out = \"\";\n   uint32_t rawsec = ENDIAN_CHANGE_U32(m_eddystoneData.tmil);\n   char val[12];\n \n-  out += \"Version \"; // + std::string(m_eddystoneData.version);\n-  snprintf(val, sizeof(val), \"%d\", m_eddystoneData.version);\n-  out += val;\n+  out += \"Version \" + String(m_eddystoneData.version);\n+  //snprintf(val, sizeof(val), \"%d\", m_eddystoneData.version);\n+  //out += val;\n   out += \"\\n\";\n   out += \"Battery Voltage \"; // + ENDIAN_CHANGE_U16(m_eddystoneData.volt);\n   snprintf(val, sizeof(val), \"%d\", ENDIAN_CHANGE_U16(m_eddystoneData.volt));\n@@ -116,9 +126,10 @@ std::string BLEEddystoneTLM::toString() {\n /**\n  * Set the raw data for the beacon record.\n  * Example:\n- * uint8_t *payLoad = advertisedDevice.getPayload();\n- * eddystoneTLM.setData(std::string((char*)payLoad+22, advertisedDevice.getPayloadLength() - 22));\n- * Note: the offset 22 works for current implementation of example BLE_EddystoneTLM Beacon.ino, however it is not static and will be reimplemented\n+ * uint8_t *payload = advertisedDevice.getPayload();\n+ * eddystoneTLM.setData(String((char*)payload+22, advertisedDevice.getPayloadLength() - 22));\n+ * Note: the offset 22 works for current implementation of example BLE_EddystoneTLM Beacon.ino, however\n+ *   the position is not static and it is programmers responsibility to align the data.\n  * Data frame:\n  * | Field  || Len | Type | UUID        | EddyStone TLM |\n  * | Offset || 0   | 1    | 2           | 4             |\n@@ -131,37 +142,38 @@ std::string BLEEddystoneTLM::toString() {\n  * | Len    || 1 B   | 1 B     | 2 B         | 2 B         | 4 B            | 4 B             |\n  * | Data   || 0x20  | ??      | ??   | ??   | ??    | ??  |   |   |   |    |   |   |   |     |\n  */\n-void BLEEddystoneTLM::setData(std::string data) {\n-\tif (data.length() != sizeof(m_eddystoneData)) {\n-\t\tlog_e(\"Unable to set the data ... length passed in was %d and expected %d\", data.length(), sizeof(m_eddystoneData));\n-\t\treturn;\n-\t}\n-  memcpy(&m_eddystoneData, data.data(), data.length());\n+void BLEEddystoneTLM::setData(String data) {\n+  if (data.length() != sizeof(m_eddystoneData)) {\n+    log_e(\"Unable to set the data ... length passed in was %d and expected %d\", data.length(), sizeof(m_eddystoneData));\n+    return;\n+  }\n+  memcpy(&m_eddystoneData, data.c_str(), data.length());\n } // setData\n \n void BLEEddystoneTLM::setUUID(BLEUUID l_uuid) {\n-\tbeaconUUID = l_uuid.getNative()->uuid.uuid16;\n+  beaconUUID = l_uuid;\n } // setUUID\n \n void BLEEddystoneTLM::setVersion(uint8_t version) {\n-\tm_eddystoneData.version = version;\n+  m_eddystoneData.version = version;\n } // setVersion\n \n+// Set voltage in ESP32 native Big endian and convert it to little endian used for BLE Frame\n void BLEEddystoneTLM::setVolt(uint16_t volt) {\n-\tm_eddystoneData.volt = volt;\n+  m_eddystoneData.volt = ENDIAN_CHANGE_U16(volt);\n } // setVolt\n \n void BLEEddystoneTLM::setTemp(float temp) {\n-\tm_eddystoneData.temp = EDDYSTONE_TEMP_FLOAT_TO_U16(temp);\n+  m_eddystoneData.temp = EDDYSTONE_TEMP_FLOAT_TO_U16(temp);\n } // setTemp\n \n void BLEEddystoneTLM::setCount(uint32_t advCount) {\n-\tm_eddystoneData.advCount = advCount;\n+  m_eddystoneData.advCount = advCount;\n } // setCount\n \n void BLEEddystoneTLM::setTime(uint32_t tmil) {\n-\tm_eddystoneData.tmil = tmil;\n+  m_eddystoneData.tmil = tmil;\n } // setTime\n \n-#endif\n+#endif /* CONFIG_BLUEDROID_ENABLED */\n #endif /* SOC_BLE_SUPPORTED */\n",
            "comment_added_diff": {
                "27": "  m_eddystoneData.volt = 3300; // 3300mV = 3.3V",
                "161": "// Set voltage in ESP32 native Big endian and convert it to little endian used for BLE Frame"
            },
            "comment_deleted_diff": {
                "28": "\tm_eddystoneData.volt = 3300; // 3300mV = 3.3V",
                "71": "  out += \"Version \"; // + std::string(m_eddystoneData.version);"
            },
            "comment_modified_diff": {}
        }
    ],
    "BLEEddystoneTLM.h": [],
    "BLEEddystoneURL.h": [],
    "WiFiUdp.cpp": [],
    "HTTPClient.cpp": [
        {
            "commit": "6f7a1ca76ada4d705d79ce863450c91349327a79",
            "timestamp": "2023-10-05T14:54:25+03:00",
            "author": "Me No Dev",
            "commit_message": "ESP-IDF v5.1 (#7733)\n\n* Initial changes to compile under ESP-IDF v5.1\r\n\r\n* Initial import for ESP-IDF v5.1 libs\r\n\r\n* Update toolchain\r\n\r\n* Update esp32-hal-psram.c\r\n\r\n* Add missing LDs\r\n\r\n* Update platform.txt\r\n\r\n* Stop some CI jobs, because they will always fail\r\n\r\n* Fix examples\r\n\r\n* Update app_httpd.cpp\r\n\r\n* Update ResetReason.ino\r\n\r\n* Warnings fixes\r\n\r\n* Added the example guideline and template (#7665)\r\n\r\n* Added the example guideline and template\r\n\r\n* PR review changes with some typos and grammar fixes\r\n\r\n* Changes according to the PR review\r\n\r\n* Added ESP32-S3 link to the datasheet (#7738)\r\n\r\n* Update HiFreq_ADC.ino\r\n\r\n* Replace periph_ctrl.h use because of deprecation\r\n\r\n* Replace esp_spi_flash.h use because of deprecation\r\n\r\n* Add includes to male mDNS::enableWorkstation compile\r\n\r\n* Fix ssl_client mbedtls_pk_parse_key callback\r\n\r\n* Update temperature sensor driver\r\n\r\n* Allow sketch_utils to compile with arduino-cli\r\n\r\n* Run CI with arduino-cli\r\n\r\n* Fix arduino-cli CI build on Windows\r\n\r\n* Refactor platform.txt to not use components installed through the board manager when running from git\r\n\r\n* Initial Peripheral Manager Implementation\r\n\r\n* Update SigmaDelta driver to use the new ESP-IDF driver API\r\n\r\n* Small improvements to peripheral manager and SigmaDelta\r\n\r\n* Remove deleted function from SigmaDelta header\r\n\r\n* Update DAC driver to use the new ESP-IDF driver API\r\n\r\n* Adds softAp(String) to make it compatible with ESP8266 (#7801)\r\n\r\n* Fix commentary (#7800)\r\n\r\nMinor fix based on observation done in https://github.com/espressif/arduino-esp32/issues/7795#issuecomment-1416868611\r\n\r\n* add adafruit new board feather esp32s2 reserve tft (#7794)\r\n\r\n* bugfix: add <stdint.h> for uint8_t to avoid compilation failure (GCC 11.2.0) (#7744)\r\n\r\n* Adding 3rd party boards for VALTRACK-V4-VTS-ESP32-C3 & VALTRACK-V4-MFW-ESP32-C3 (#7735)\r\n\r\n* Added VALTRACK-V4-VTS-ESP32-C3 board definition\r\n\r\nCreated pins_arduino.h & made changes to boards.txt with necessary changes\r\n\r\n* Modified the URL\r\n\r\n* Renamed json\r\n\r\n* renamed all auRL\r\n\r\n* Adding VALTRACK-V4 series board definitions\r\n\r\nAdded VALTRACK-V4-VTS-ESP32C3 & VALTRACK-V4-MFW-ESP32-C3 board variants\r\n\r\n* Adding VALTRACK-V4 series board definitions\r\n\r\nAdded VALTRACK-V4-VTS-ESP32C3 & VALTRACK-V4-MFW-ESP32-C3 board variants\r\n\r\n* Reverted package_esp32_index.template.json\r\n\r\nrestored package_esp32_index.template.json from edits\r\n\r\n* Reverted package_esp32_index.template.json\r\n\r\nAdded new line to package_esp32_index.template.json\r\n\r\n* Update Platformio CI (#7725)\r\n\r\n* WiFiClient example fix (#7711)\r\n\r\n* Modified WiFiClient example to use thingspeak instead of non-functionig sparkfun\r\n\r\n* Moved instructions to README\r\n\r\n* Fixed spelling\r\n\r\n* Added link to S3 datasheet\r\n\r\n---------\r\n\r\nCo-authored-by: Jan Proch\u00e1zka <90197375+P-R-O-C-H-Y@users.noreply.github.com>\r\n\r\n* Mirror update from Heltec repository (#7709)\r\n\r\nHeltec updated the I2C pins in https://github.com/Heltec-Aaron-Lee/WiFi_Kit_series/commit/b10f4bf85d13fd01be80dcdb0eb59e6a8c8ba19a\r\n\r\n* Fixes BLE data printing (#7699)\r\n\r\n* Fixes BLE data printing\r\n\r\nBLE data has no '\\0' terminator, therefore it can't be printed as a regular C string.\r\nThis fix just prints the BLE data based on its length.\r\n\r\n* Simplify printing to a single call\r\n\r\n* split menu options + lora_32_V3 fix (#7697)\r\n\r\n* Change header gaurd name (#7696)\r\n\r\n* Fix Name (#7691)\r\n\r\nWrong name in definitions.\r\n\r\n* Fix error in WiFiClient.cpp where the connect function fails for timeouts below 1 second (#7686)\r\n\r\n* Update WiFiClient.cpp\r\n\r\nThis change will allow specifying connect timeouts below 1 second. Without this change, if connect timeouts under 1 second are given, the connect defaults to 0ms and fails. \r\nThis will also allow timeouts in fractions of seconds, e.g. 1500ms. Without this change, connect timeouts are truncated to full second increments.\r\n\r\n* Make parameter timeout_ms clear\r\n\r\n* Change connection timeout_ms name for clarity\r\n\r\n---------\r\n\r\nCo-authored-by: Rodrigo Garcia <rodrigo.garcia@espressif.com>\r\n\r\n* fixed the function header (#7674)\r\n\r\n* fixed the function header\r\n\r\n* fixed function name and paramaters\r\n\r\n---------\r\n\r\nCo-authored-by: Jan Procha\u0301zka <90197375+P-R-O-C-H-Y@users.noreply.github.com>\r\n\r\n* Ticker fix solving #6155 (#7664)\r\n\r\n* Wrapped Ticker functions with #pragma disabling -Wcast-function-type\r\n\r\n* Revert \"Wrapped Ticker functions with #pragma disabling -Wcast-function-type\"\r\n\r\nThis reverts commit 160be7e67a10d01b6e44c4bf2521c0ccd6348976.\r\n\r\n* Fixed Ticker example\r\n\r\n* Modified Ticker example\r\n\r\n* Fixed LED_BUILTIN err for ESP32\r\n\r\n---------\r\n\r\nCo-authored-by: Jan Proch\u00e1zka <90197375+P-R-O-C-H-Y@users.noreply.github.com>\r\n\r\n* setPins fix ESP32 \"specified pins are not supported by this chip.\" (#7646)\r\n\r\n[ESP32: SDMMCFS::begin hardcodes the usage of slot 1, only check if the pins match slot 1 pins.]\r\n\r\nsetPins() was testing pins D1, D2 and D3 all against D1 ... fine in 1 pin mode when all are -1 not so much if you're trying to get 4 pin mode working.\r\nI now see this function doesn't really do anything on the ESP32...accept now correctly checks that you are trying to use the slot 1 pins.\r\n\r\nCo-authored-by: Jan Proch\u00e1zka <90197375+P-R-O-C-H-Y@users.noreply.github.com>\r\n\r\n* Allow passing IP as connect method parameter in WiFiClientSecure and skip unnecessary host-ip conversions (#7643)\r\n\r\n* Add LED_BUILTIN* definitions and initialization for LEDs to stop them floating. (#7636)\r\n\r\nCo-authored-by: Rodrigo Garcia <rodrigo.garcia@espressif.com>\r\n\r\n* Expand path to tinuf2 image when checking existence in platformio-build.py (#7631)\r\n\r\n* Expand path to tinuf2 image when checking existence\r\n\r\n* More isFiles fixed\r\n\r\n* Remove (useless) trailing semicolon from Print.cpp (#7622)\r\n\r\n* ADD: New variant Edgebox-ESP-100 (#7771)\r\n\r\n* ADD: New variant Edgebox-ESP-100\r\n\r\n* FIX: Edgebox-ESP-100 Board.txt usb mode option change back to default value as ESP32S3\r\n\r\n* Add Crabik Slot ESP32-S3 board (#7790)\r\n\r\n* Added Crabik Slot ESP32-S3\r\n\r\n* Adding CPU frequency settings and removing excess from partition scheme settings\r\n\r\n* new variant LilyGO T-Display-S3 (#7763)\r\n\r\n* new variant LilyGO T-Display-S3\r\n\r\nhttps://github.com/Xinyuan-LilyGO/T-Display-S3\r\n\r\n* Add boards.txt definition\r\n\r\n---------\r\n\r\nCo-authored-by: Me No Dev <me-no-dev@users.noreply.github.com>\r\n\r\n* Update get.py to support Apple ARM64\r\n\r\n* Update package_esp32_index.template.json\r\n\r\n* WString Return bool (#7774)\r\n\r\n* Add Roboheart Hercules development board to the esp32-core (#7672)\r\n\r\n* added Roboheart Hercules pin definitions and board.txt entries\r\n\r\n* added package_roboheat.json for prototyping\r\n\r\n* Roboheart Hercules pins\r\n\r\n* Updated the pins\r\n\r\n* Delete package_roboheart.json\r\n\r\n* Requested changes\r\n\r\n---------\r\n\r\nCo-authored-by: renebohne <rene.bohne@gmail.com>\r\n\r\n* Reword \"ESP-IDF as Component\" (#7812)\r\n\r\nI think \"Arduino as an ESP-IDF component\" or just \"As ESP-IDF component\" instead of  \"ESP-IDF as Component\" is more correct way to name the link.\r\n\r\n1. \"ESP-IDF as Component\" would imply that ESP-IDF is some sort of library for Arduino, which is (IMO) misleading, because it's true the other way around.\r\n2. It's written as \"Arduino as an ESP-IDF component\" on the webpage it points to as well.\r\n\r\n- Also I removed the capitalization from \"Component\" as I have not found a reason why is it capitalized.\r\n\r\n* add new board Adafruit Feather ESP32-S3 Reverse TFT (#7811)\r\n\r\n* Multi threading examples (tasks, queues, semaphores, mutexes) (#7660)\r\n\r\n* Moved and renamed example ESP32/FreeRTOS to MultiThreading/BasicMultiThreading\r\n\r\n* Added dummy files\r\n\r\n* Modified original example\r\n\r\n* Fixed BasicMultiThreading.ino\r\n\r\n* Added Example demonstrating use of queues\r\n\r\n* Extended info in BasicMultiThreading\r\n\r\n* Renamed Queues to singular Queue\r\n\r\n* Added Mutex example\r\n\r\n* Added Semaphore example\r\n\r\n* Moved info from example to README\r\n\r\n* Moved doc from Mutex to README\r\n\r\n* Added Queue README\r\n\r\n* Removed unecesary text\r\n\r\n* Fixed grammar\r\n\r\n* Increased stack size for Sempahore example\r\n\r\n* Added headers into .ino files\r\n\r\n* Added word Example at the end of title in README\r\n\r\n* removed unused line\r\n\r\n* Added forgotten README\r\n\r\n* Modified BasicMultiThreading example\r\n\r\n* Added missing S3 entry in README\r\n\r\n* moved location\r\n\r\n* Update ESP-IDF libs\r\n\r\n* Update CMakeLists.txt\r\n\r\n* Update esptool to v4.4\r\n\r\n* Add function timerAttachInterruptFlag (#7809)\r\n\r\n* Update esptool to v4.5\r\n\r\n* ADC refactoring (#7827)\r\n\r\n* Adc refactored + periman implementation\r\n\r\nPeripheral manager still needs to be checked if the implementation is right.\r\n\r\n* switched to working solution for milivolts read\r\n\r\n* Periman detachbus fix\r\n\r\n* coding style\r\n\r\n* fix CI warnings\r\n\r\n* fix FreeRTOS example\r\n\r\n* Update ETH.cpp\r\n\r\n* Update FunctionalInterruptStruct.ino\r\n\r\n* Update package_esp32_index.template.json\r\n\r\n* Update package_esp32_index.template.json\r\n\r\n* Fixes for the latest IDF v5.1\r\n\r\n* update esp-idf libs and toolchain\r\n\r\n* Turn OFF auto crystal frequency for ESP32 (needed by TWAI)\r\n\r\n* Update examples\r\n\r\n* Switch build to mostly use flags from files\r\n\r\nIncludes can not be done this way\r\n\r\n* Reorganize flag files\r\n\r\n* Optimize chip build flags further\r\n\r\n* Revert defines from file. MBEDTLS_CONFIG_FILE does not properly expand\r\n\r\n* Add support for includes and defines from file\r\n\r\n* Replace old sdk path references in platform.txt\r\n\r\n* use gcc-ar (#8013)\r\n\r\n* Makes F_CPU generic for all SoC (#8007)\r\n\r\nBased on CONFIG_ESP_DEFAULT_CPU_FREQ_MHZ that is correctly defined in the sdkconfig file for each SoC.\r\n\r\n* TIMER refactoring (#7904)\r\n\r\n* refactor using GPtimer\r\n\r\n* Updated timer HW test\r\n\r\n* fix examples\r\n\r\n* Add v2.0.7 in issue template (#7871)\r\n\r\n* refactor using GPtimer\r\n\r\n* Updated timer HW test\r\n\r\n* fix examples\r\n\r\n* Revert \"Add v2.0.7 in issue template (#7871)\"\r\n\r\nThis reverts commit fcc3b17d62ff57861f8913ca1f142fd5163b7457.\r\n\r\n* Update upload-artifact to v3 in HW CI\r\n\r\n* Revert \"Update upload-artifact to v3 in HW CI\"\r\n\r\nThis reverts commit 1ba228071718ba37c4e26d98db22f77b2a7364a6.\r\n\r\n* replace resolution with frequency\r\n\r\n* remove count_down option\r\n\r\n* countup removed from examples + header\r\n\r\n* Refactored timer object\r\n\r\n* code cleanup + examples and tests fixes\r\n\r\n* TimerAlarm fix\r\n\r\n---------\r\n\r\nCo-authored-by: Vojt\u011bch Barto\u0161ka <76958047+VojtechBartoska@users.noreply.github.com>\r\n\r\n* [Docs] ADC and Timer API Update (+some docs fixes) (#7906)\r\n\r\n* updated docs\r\n\r\n* remove hall sensor docs\r\n\r\nRemoved Hall sensor documentation as its no longer supported in IDF-5\r\n\r\n* Fixed ESPNow examples location in docs\r\n\r\n* Last timer refactored API + gpio small fix\r\n\r\n* AlarmWrite fix\r\n\r\n* Fixes APLL/PLL with RTC Frequency (#8025)\r\n\r\nlog_d() was displaying APLL for any SoC, but S3 and C3 has not such option, causing compilation errors.\r\n\r\n* Update IDF libs and fix OPI PSRAM on S3\r\n\r\n* Add setMode function HardwareSerial.c to set the esp32 uart mode for use with RS485 auto RTS (#7935)\r\n\r\n* Added setMode function to set the esp32 uart mode\r\n\r\nUsed to set the esp32 uart mode for use with RS485 Half Duplex and the auto RTS pin mode. This will set/clear the RTS pin output to control the RE/DE pin on most RS485 chips.\r\n\r\n* Add Success (bool) return in some functions\r\n\r\n* Add Success (bool) return code to some functions\r\n\r\n* Add Success (bool) return to some functions\r\n\r\n* Add Success (bool) return to some functions\r\n\r\n* Fix uartSetRxTimeout return type\r\n\r\n---------\r\n\r\nCo-authored-by: Rodrigo Garcia <rodrigo.garcia@espressif.com>\r\n\r\n* Add support for esp-elf-gdb\r\n\r\n* WFG Crashfix (#8044)\r\n\r\n* Update component libs\r\n\r\n* IDF release/v5.1 (#8061)\r\n\r\n* IDF release/v5.1 bb9200acec\r\n\r\n* Update Esp.cpp\r\n\r\n* IDF release/v5.1 420ebd208a\r\n\r\n* Update esp32-hal-psram.c\r\n\r\n* Switch SDK to be an external package\r\n\r\n* fix path (#8096)\r\n\r\n* Makes UART work at any APB Frequency (#8097)\r\n\r\nFixes HardwareSerial to work with IDF 5.1 on any CPU/APB Frequency (240MHz to 10MHZ), including user created low power modes.\r\n\r\n* Add required callbacks for TinyUSB DFU\r\n\r\n* Update version to 3.0.0\r\n\r\n* Add ESP.getCoreVersion() and update ESP.getChipModel()\r\n\r\n* Update timer hal for the latest 5.1\r\n\r\n* Use separate RX and TX buffer sizes in HTTP client\r\n\r\noptimizes download by allowing up to 4K packets to be received\r\n\r\n* Rename clock tree enum name in latest 5.1\r\n\r\n* ESP32-H4 support was removed in ESP-IDF v5.1\r\n\r\n* IDF release/v5.1 2004bf4e11 (#8165)\r\n\r\n* Deinit previous bus first (#8180)\r\n\r\n* TIMER - add timer_started flag, fix timerEnd() + timer HW test (#8135)\r\n\r\n* Add timer_started flag and stop before disable\r\n\r\n* Fix timer HW test\r\n\r\n* TOUCH - Peripheral manager implementation (#8129)\r\n\r\n* Touch periman implemented\r\n\r\n* Deinit previous bus first\r\n\r\n* LEDC Refactoring - Peripheral manager implemented (#8126)\r\n\r\n* LEDC periman implementation\r\n\r\n* Fix examples\r\n\r\n* Rework tone\r\n\r\n* Update ledc docs\r\n\r\n* fix missing bracket\r\n\r\n* Update analog funtions esp32-hal.h\r\n\r\n* Update CameraWebServer example\r\n\r\n* Fix HiFreq_ADC example\r\n\r\n* minor fixes - typos\r\n\r\n* Avoid calling tone/notone when tone already runs on dif. pin\r\n\r\n* Remove unused channels_resolution\r\n\r\n* GPIO - Peripheral manager implementation (#8179)\r\n\r\n* periman-implementation\r\n\r\n* fix RGB_BUILTIN and remove space\r\n\r\n* Enforces more consistency into Peripheral Manager (#8188)\r\n\r\n* Avoid log_i() message the first time a bus is assigned\r\n\r\n* Prevent operation with ESP32_BUS_TYPE_INIT\r\n\r\n* keeps coding style\r\n\r\n* do not print messages on INIT bus type\r\n\r\n* [Arduino Core 3.0.0] RMT IDF5.1 Refactoring (#7994)\r\n\r\n* RMT IDF5.1 refactoring\r\n\r\n* Fixes initial value setting\r\n\r\n* removed rmtRead() with user callback\r\n\r\n* simplify/remove Read data structure\r\n\r\n* Deep API simplification\r\n\r\n* fixes the examples\r\n\r\n* fix rmt.h\r\n\r\n* adds support to APB different frequencies\r\n\r\n* fixes CI and not defined RGB_BUILTIN\r\n\r\n* new RMT API and examples\r\n\r\n* fixing commentaties\r\n\r\n* Update esp32-hal-rgb-led.c\r\n\r\n* changes Filter API\r\n\r\n* Fixes example with Filter API\r\n\r\n* Update PlatformIO scripts for the upcoming 3.0 core (#8183)\r\n\r\n* Update PlatformIO scripts for the upcoming 3.0 core\r\n\r\n* Dynamically select proper framework-arduinoespressif32-libs package\r\n\r\nWith this change the dev-platform will be dynamically configured to\r\npull the latest .zip package with precompiled libraries from extracted from\r\npackage_esp32_index.template.json\r\n\r\n* free memory on detach (#8264)\r\n\r\n* SPI - Peripheral manager implementation  (#8255)\r\n\r\n* spi periman implementation\r\n\r\n* fix header file\r\n\r\n* remove unused struct\r\n\r\n* fix missing braces\r\n\r\n* Update esp32-hal-rmt.c (#8216)\r\n\r\nOptimizing Peripheral Manager Test\r\n\r\n* I2C - Peripheral manager implementation (#8220)\r\n\r\n* i2c-master periman initial commit\r\n\r\n* i2c-master make detachbus static + comment remove\r\n\r\n* i2c-slave periman implementation\r\n\r\n* SetPinBus to INIT on i2cDeinits\r\n\r\n* Fix slave pins deinit\r\n\r\n* remove dbg logs\r\n\r\n* set ret to ESP_FAIL instead of returning\r\n\r\n* Fix warnings in hal-spi caused by pariman transition\r\n\r\n* Update esptool.py to version 4.6\r\n\r\n* Add platform support for ESP_SR\r\n\r\n* Add USB Type and valid pin check to periman\r\n\r\n* replace bus with spi->num+1 (#8279)\r\n\r\n* Remove default pins from SPI HAL\r\n\r\n* Add commented out handlers for esptool.js in TinyUSB CDC\r\n\r\nFor future use\r\n\r\n* Add build defines for host os and fqbn (for debug purposes)\r\n\r\n* Provide proper memory caps total size\r\n\r\n* Update Esp.cpp\r\n\r\n* SDMMC - Peripheral manager implementation (#8289)\r\n\r\n* sdmmc periman implemented\r\n\r\n* save pins when SOC_SDMMC_USE_IOMUX\r\n\r\n* IDF release/v5.1 4bc762621d (#8292)\r\n\r\n* Adds missing pinMode (#8312)\r\n\r\n* Adds missing pinMode\r\n\r\nThe example code lacks a pinMode() to initialize the GPIO 0 (button). In Arduino Core 3.0.0, it prints an error message when trying to read a not initialized GPIO.\r\n\r\n* Update KeyboardLogout.ino\r\n\r\nAdds <buttonPin> to keep code standard\r\n\r\n* Update KeyboardReprogram.ino\r\n\r\nAdds <buttonPin> to keep code standard\r\n\r\n* LEDC Fade implementation (#8338)\r\n\r\n* fade API + pointer fixes\r\n\r\n* Add fade api\r\n\r\n* Add fade example\r\n\r\n* update ledc docs\r\n\r\n* remove unused variables\r\n\r\n* fix path to example\r\n\r\n* Adds USB to Peripheral Manager - Arduino Core 3.0.0 (#8335)\r\n\r\n* ETHERNET - Peripheral manager implementation (#8297)\r\n\r\n* Peripheral manager implemented\r\n\r\n* remove unused variable\r\n\r\n* Add all RMII pins\r\n\r\n* fix typo\r\n\r\n* Adds HardwareSerial to Peripheral Manager Arduino 3.0.0 (#8328)\r\n\r\n* Do not limit ETHERNET in periman to only ESP32. SPI is also an option\r\n\r\n* Initial support for ESP32-C6 (#8337)\r\n\r\n* Add checks for SOC defines (#8351)\r\n\r\n* Add checks for SOC defines\r\n\r\n* Add SoC checks to BLE library\r\n\r\n* fix i2c compilation error\r\n\r\n* fix wrong placement of include\r\n\r\n* add check to SPI library\r\n\r\n* add check to USB library\r\n\r\n* add checks to Wire library\r\n\r\n* Feature/esp32h2 support (#8373)\r\n\r\n* Initial support for ESP32H2\r\n\r\n* Additional changes for ESP32H2\r\n\r\n* Update libs for ESP32H2\r\n\r\n* Fix flashing on ESP32-H2\r\n\r\n* Fix GPIO Configs for ESP32-C6 and ESP32-H2\r\n\r\n* Update Timer test sketch\r\n\r\n* Fix upload flash parameters\r\n\r\n* Use ets_write_char_uart instead of ets_printf in log_printfv\r\n\r\n* Print full chip report when log level is sufficient (#8282)\r\n\r\n* ESP32-C3 does not have ets_write_char_uart\r\n\r\n* Fix BLE gap event name\r\n\r\n* HW Testing - Pytest update (#8389)\r\n\r\n* update tests requirements\r\n\r\n* remove already handled components\r\n\r\n* Update version of pytest\r\n\r\n* Add missing ESP32-H2 to hil.yml\r\n\r\n* Updated FreeRTOS names (#8418)\r\n\r\n* HW Testing -  ESP32-C6 + ESP32-H2 fixes (#8404)\r\n\r\n* add C6/H2 to tests cfg.json\r\n\r\n* remove ,\r\n\r\n* workflow runs-on runner by matrix\r\n\r\n* Add need for arduino tag to select runner\r\n\r\n* Add cryptography to requirements.txt\r\n\r\n* Removed duplicate TX1 define for H2 (#8402)\r\n\r\n* Fix broken examples\r\n\r\n* Fixes RMT filter & idle timing and setup (#8359)\r\n\r\n* Fixes Filter and Idle parameter to uint32\r\n\r\n* Fixes Filter and Idle setup\r\n\r\n* Fixes it to 5.1Libs branch\r\n\r\n* fix RMT CLK source and Filter API\r\n\r\n* fixes missing ;\r\n\r\n* fixes missing ;\r\n\r\n* fixes RMT example\r\n\r\n* IDF release/v5.1 a7b62bbcaf (#8438)\r\n\r\n* Add workflow to build executables from python scripts (#8290)\r\n\r\n* Add workflow to build executables from python scripts\r\n\r\n* Push binary to tools\r\n\r\n* Enable executable signing on Windows\r\n\r\n* Update get.py\r\n\r\n* Push binary to tools\r\n\r\n* Try with multiple files\r\n\r\n* Try more actions\r\n\r\n* Try powershell\r\n\r\n* Restore tools so they do not get rebuilt\r\n\r\n* Finalize scripts\r\n\r\n* Push binary to tools\r\n\r\n* App rollback should be after PSRAM is initialized\r\n\r\n* Correcting RX1 to GPIO4 and TX1 to GPIO5 to be consistent with documentation. Previous pin use works but is inconsistent with C6 docs.\r\n\r\n* Fixes Memory Leak (#8486)\r\n\r\n* fixes preprocessor test (#8485)\r\n\r\n* fixes preprocessor test\r\n\r\nWhen using `#define USE_SOFT_AP` \r\nChange\r\n`&& not USE_SOFT_AP` ==> `&& !defined(USE_SOFT_AP)`\r\n\r\n* Adds any BLE capable device in WiFiProv.ino\r\n\r\nRemoving ESP32 restriction for BLE Provisioning.\r\n\r\n* fix flash mode read out for C6\r\n\r\n* Add option for custom partitions without restrictions\r\n\r\n* SD_MMC update (#8298)\r\n\r\n* Updated SD_MMC lib and examples\r\n\r\n* Removed getter implementation and commented usage in examples\r\n\r\n* squashed updates\r\n\r\n* IDF release/v5.1 f0437b945f (#8599)\r\n\r\n* Update package_esp32_index.template.json\r\n\r\n* Fix printf format build error in BTAdvertisedDeviceSet.cpp\r\n\r\n---------\r\n\r\nCo-authored-by: Pedro Minatel <pedro.minatel@espressif.com>\r\nCo-authored-by: Rodrigo Garcia <rodrigo.garcia@espressif.com>\r\nCo-authored-by: Ha Thach <thach@tinyusb.org>\r\nCo-authored-by: Martin Turski <quiret@vfemail.net>\r\nCo-authored-by: raviypujar <raviypujar@gmail.com>\r\nCo-authored-by: Jason2866 <24528715+Jason2866@users.noreply.github.com>\r\nCo-authored-by: Tom\u00e1\u0161 Piln\u00fd <34927466+PilnyTomas@users.noreply.github.com>\r\nCo-authored-by: Jan Proch\u00e1zka <90197375+P-R-O-C-H-Y@users.noreply.github.com>\r\nCo-authored-by: Daniel Berlin <dberlin@dberlin.org>\r\nCo-authored-by: Nima Askari (\u0646\u06cc\u0645\u0627 \u0639\u0633\u06a9\u0631\u06cc) <nimaltd@yahoo.com>\r\nCo-authored-by: rtpmsys <106180646+rtpmsys@users.noreply.github.com>\r\nCo-authored-by: bytiful <55647551+bytiful@users.noreply.github.com>\r\nCo-authored-by: tmfarrington <tmfarrington@users.noreply.github.com>\r\nCo-authored-by: Krzysiek S <chris.streh@gmail.com>\r\nCo-authored-by: surt <carl.olsson@gmail.com>\r\nCo-authored-by: Max Scheffler <max.scheffler@pm.me>\r\nCo-authored-by: Clemens Kirchgatterer <clemens@1541.org>\r\nCo-authored-by: Peter Pan's Techland <twinkle-pirate@hotmail.com>\r\nCo-authored-by: Roman <programmeofficemilkyway@gmail.com>\r\nCo-authored-by: Eistee <Eistee82@users.noreply.github.com>\r\nCo-authored-by: David McCurley <44048235+mrengineer7777@users.noreply.github.com>\r\nCo-authored-by: Gaya3N25 <30388176+Gaya3N25@users.noreply.github.com>\r\nCo-authored-by: renebohne <rene.bohne@gmail.com>\r\nCo-authored-by: Oliv\u00e9r Rem\u00e9ny <25034625+remenyo@users.noreply.github.com>\r\nCo-authored-by: davidk88 <david.kotar@gmail.com>\r\nCo-authored-by: Vojt\u011bch Barto\u0161ka <76958047+VojtechBartoska@users.noreply.github.com>\r\nCo-authored-by: James Armstrong <jamesarmstrong3@me.com>\r\nCo-authored-by: Valerii Koval <valeros@users.noreply.github.com>\r\nCo-authored-by: Peter G. Jensen <root@petergjoel.dk>",
            "additions": 14,
            "deletions": 11,
            "change_type": "MODIFY",
            "diff": "@@ -740,7 +740,7 @@ int HTTPClient::sendRequest(const char * type, Stream * stream, size_t size)\n         return returnError(HTTPC_ERROR_SEND_HEADER_FAILED);\n     }\n \n-    int buff_size = HTTP_TCP_BUFFER_SIZE;\n+    int buff_size = HTTP_TCP_TX_BUFFER_SIZE;\n \n     int len = size;\n     int bytesWritten = 0;\n@@ -749,8 +749,8 @@ int HTTPClient::sendRequest(const char * type, Stream * stream, size_t size)\n         len = -1;\n     }\n \n-    // if possible create smaller buffer then HTTP_TCP_BUFFER_SIZE\n-    if((len > 0) && (len < HTTP_TCP_BUFFER_SIZE)) {\n+    // if possible create smaller buffer then HTTP_TCP_TX_BUFFER_SIZE\n+    if((len > 0) && (len < buff_size)) {\n         buff_size = len;\n     }\n \n@@ -843,7 +843,7 @@ int HTTPClient::sendRequest(const char * type, Stream * stream, size_t size)\n         }\n \n     } else {\n-        log_d(\"too less ram! need %d\", HTTP_TCP_BUFFER_SIZE);\n+        log_d(\"too less ram! need %d\", buff_size);\n         return returnError(HTTPC_ERROR_TOO_LESS_RAM);\n     }\n \n@@ -933,7 +933,7 @@ int HTTPClient::writeToStream(Stream * stream)\n             // read size of chunk\n             len = (uint32_t) strtol((const char *) chunkHeader.c_str(), NULL, 16);\n             size += len;\n-            log_d(\" read chunk len: %d\", len);\n+            log_v(\" read chunk len: %d\", len);\n \n             // data left?\n             if(len > 0) {\n@@ -1364,12 +1364,12 @@ int HTTPClient::handleHeaderResponse()\n  */\n int HTTPClient::writeToStreamDataBlock(Stream * stream, int size)\n {\n-    int buff_size = HTTP_TCP_BUFFER_SIZE;\n+    int buff_size = HTTP_TCP_RX_BUFFER_SIZE;\n     int len = size;\n     int bytesWritten = 0;\n \n-    // if possible create smaller buffer then HTTP_TCP_BUFFER_SIZE\n-    if((len > 0) && (len < HTTP_TCP_BUFFER_SIZE)) {\n+    // if possible create smaller buffer then HTTP_TCP_RX_BUFFER_SIZE\n+    if((len > 0) && (len < buff_size)) {\n         buff_size = len;\n     }\n \n@@ -1381,7 +1381,10 @@ int HTTPClient::writeToStreamDataBlock(Stream * stream, int size)\n         while(connected() && (len > 0 || len == -1)) {\n \n             // get available data size\n-            size_t sizeAvailable = _client->available();\n+            size_t sizeAvailable = buff_size;\n+            if(len < 0){\n+                sizeAvailable = _client->available();\n+            }\n \n             if(sizeAvailable) {\n \n@@ -1457,7 +1460,7 @@ int HTTPClient::writeToStreamDataBlock(Stream * stream, int size)\n \n         free(buff);\n \n-        log_d(\"connection closed or file end (written: %d).\", bytesWritten);\n+        log_v(\"connection closed or file end (written: %d).\", bytesWritten);\n \n         if((size > 0) && (size != bytesWritten)) {\n             log_d(\"bytesWritten %d and size %d mismatch!.\", bytesWritten, size);\n@@ -1465,7 +1468,7 @@ int HTTPClient::writeToStreamDataBlock(Stream * stream, int size)\n         }\n \n     } else {\n-        log_w(\"too less ram! need %d\", HTTP_TCP_BUFFER_SIZE);\n+        log_w(\"too less ram! need %d\", buff_size);\n         return HTTPC_ERROR_TOO_LESS_RAM;\n     }\n \n",
            "comment_added_diff": {
                "752": "    // if possible create smaller buffer then HTTP_TCP_TX_BUFFER_SIZE",
                "1371": "    // if possible create smaller buffer then HTTP_TCP_RX_BUFFER_SIZE"
            },
            "comment_deleted_diff": {
                "752": "    // if possible create smaller buffer then HTTP_TCP_BUFFER_SIZE",
                "1371": "    // if possible create smaller buffer then HTTP_TCP_BUFFER_SIZE"
            },
            "comment_modified_diff": {
                "752": "    // if possible create smaller buffer then HTTP_TCP_BUFFER_SIZE",
                "1371": "    // if possible create smaller buffer then HTTP_TCP_BUFFER_SIZE"
            }
        }
    ],
    "espnow.rst": [],
    "Esp.cpp": [
        {
            "commit": "6f7a1ca76ada4d705d79ce863450c91349327a79",
            "timestamp": "2023-10-05T14:54:25+03:00",
            "author": "Me No Dev",
            "commit_message": "ESP-IDF v5.1 (#7733)\n\n* Initial changes to compile under ESP-IDF v5.1\r\n\r\n* Initial import for ESP-IDF v5.1 libs\r\n\r\n* Update toolchain\r\n\r\n* Update esp32-hal-psram.c\r\n\r\n* Add missing LDs\r\n\r\n* Update platform.txt\r\n\r\n* Stop some CI jobs, because they will always fail\r\n\r\n* Fix examples\r\n\r\n* Update app_httpd.cpp\r\n\r\n* Update ResetReason.ino\r\n\r\n* Warnings fixes\r\n\r\n* Added the example guideline and template (#7665)\r\n\r\n* Added the example guideline and template\r\n\r\n* PR review changes with some typos and grammar fixes\r\n\r\n* Changes according to the PR review\r\n\r\n* Added ESP32-S3 link to the datasheet (#7738)\r\n\r\n* Update HiFreq_ADC.ino\r\n\r\n* Replace periph_ctrl.h use because of deprecation\r\n\r\n* Replace esp_spi_flash.h use because of deprecation\r\n\r\n* Add includes to male mDNS::enableWorkstation compile\r\n\r\n* Fix ssl_client mbedtls_pk_parse_key callback\r\n\r\n* Update temperature sensor driver\r\n\r\n* Allow sketch_utils to compile with arduino-cli\r\n\r\n* Run CI with arduino-cli\r\n\r\n* Fix arduino-cli CI build on Windows\r\n\r\n* Refactor platform.txt to not use components installed through the board manager when running from git\r\n\r\n* Initial Peripheral Manager Implementation\r\n\r\n* Update SigmaDelta driver to use the new ESP-IDF driver API\r\n\r\n* Small improvements to peripheral manager and SigmaDelta\r\n\r\n* Remove deleted function from SigmaDelta header\r\n\r\n* Update DAC driver to use the new ESP-IDF driver API\r\n\r\n* Adds softAp(String) to make it compatible with ESP8266 (#7801)\r\n\r\n* Fix commentary (#7800)\r\n\r\nMinor fix based on observation done in https://github.com/espressif/arduino-esp32/issues/7795#issuecomment-1416868611\r\n\r\n* add adafruit new board feather esp32s2 reserve tft (#7794)\r\n\r\n* bugfix: add <stdint.h> for uint8_t to avoid compilation failure (GCC 11.2.0) (#7744)\r\n\r\n* Adding 3rd party boards for VALTRACK-V4-VTS-ESP32-C3 & VALTRACK-V4-MFW-ESP32-C3 (#7735)\r\n\r\n* Added VALTRACK-V4-VTS-ESP32-C3 board definition\r\n\r\nCreated pins_arduino.h & made changes to boards.txt with necessary changes\r\n\r\n* Modified the URL\r\n\r\n* Renamed json\r\n\r\n* renamed all auRL\r\n\r\n* Adding VALTRACK-V4 series board definitions\r\n\r\nAdded VALTRACK-V4-VTS-ESP32C3 & VALTRACK-V4-MFW-ESP32-C3 board variants\r\n\r\n* Adding VALTRACK-V4 series board definitions\r\n\r\nAdded VALTRACK-V4-VTS-ESP32C3 & VALTRACK-V4-MFW-ESP32-C3 board variants\r\n\r\n* Reverted package_esp32_index.template.json\r\n\r\nrestored package_esp32_index.template.json from edits\r\n\r\n* Reverted package_esp32_index.template.json\r\n\r\nAdded new line to package_esp32_index.template.json\r\n\r\n* Update Platformio CI (#7725)\r\n\r\n* WiFiClient example fix (#7711)\r\n\r\n* Modified WiFiClient example to use thingspeak instead of non-functionig sparkfun\r\n\r\n* Moved instructions to README\r\n\r\n* Fixed spelling\r\n\r\n* Added link to S3 datasheet\r\n\r\n---------\r\n\r\nCo-authored-by: Jan Proch\u00e1zka <90197375+P-R-O-C-H-Y@users.noreply.github.com>\r\n\r\n* Mirror update from Heltec repository (#7709)\r\n\r\nHeltec updated the I2C pins in https://github.com/Heltec-Aaron-Lee/WiFi_Kit_series/commit/b10f4bf85d13fd01be80dcdb0eb59e6a8c8ba19a\r\n\r\n* Fixes BLE data printing (#7699)\r\n\r\n* Fixes BLE data printing\r\n\r\nBLE data has no '\\0' terminator, therefore it can't be printed as a regular C string.\r\nThis fix just prints the BLE data based on its length.\r\n\r\n* Simplify printing to a single call\r\n\r\n* split menu options + lora_32_V3 fix (#7697)\r\n\r\n* Change header gaurd name (#7696)\r\n\r\n* Fix Name (#7691)\r\n\r\nWrong name in definitions.\r\n\r\n* Fix error in WiFiClient.cpp where the connect function fails for timeouts below 1 second (#7686)\r\n\r\n* Update WiFiClient.cpp\r\n\r\nThis change will allow specifying connect timeouts below 1 second. Without this change, if connect timeouts under 1 second are given, the connect defaults to 0ms and fails. \r\nThis will also allow timeouts in fractions of seconds, e.g. 1500ms. Without this change, connect timeouts are truncated to full second increments.\r\n\r\n* Make parameter timeout_ms clear\r\n\r\n* Change connection timeout_ms name for clarity\r\n\r\n---------\r\n\r\nCo-authored-by: Rodrigo Garcia <rodrigo.garcia@espressif.com>\r\n\r\n* fixed the function header (#7674)\r\n\r\n* fixed the function header\r\n\r\n* fixed function name and paramaters\r\n\r\n---------\r\n\r\nCo-authored-by: Jan Procha\u0301zka <90197375+P-R-O-C-H-Y@users.noreply.github.com>\r\n\r\n* Ticker fix solving #6155 (#7664)\r\n\r\n* Wrapped Ticker functions with #pragma disabling -Wcast-function-type\r\n\r\n* Revert \"Wrapped Ticker functions with #pragma disabling -Wcast-function-type\"\r\n\r\nThis reverts commit 160be7e67a10d01b6e44c4bf2521c0ccd6348976.\r\n\r\n* Fixed Ticker example\r\n\r\n* Modified Ticker example\r\n\r\n* Fixed LED_BUILTIN err for ESP32\r\n\r\n---------\r\n\r\nCo-authored-by: Jan Proch\u00e1zka <90197375+P-R-O-C-H-Y@users.noreply.github.com>\r\n\r\n* setPins fix ESP32 \"specified pins are not supported by this chip.\" (#7646)\r\n\r\n[ESP32: SDMMCFS::begin hardcodes the usage of slot 1, only check if the pins match slot 1 pins.]\r\n\r\nsetPins() was testing pins D1, D2 and D3 all against D1 ... fine in 1 pin mode when all are -1 not so much if you're trying to get 4 pin mode working.\r\nI now see this function doesn't really do anything on the ESP32...accept now correctly checks that you are trying to use the slot 1 pins.\r\n\r\nCo-authored-by: Jan Proch\u00e1zka <90197375+P-R-O-C-H-Y@users.noreply.github.com>\r\n\r\n* Allow passing IP as connect method parameter in WiFiClientSecure and skip unnecessary host-ip conversions (#7643)\r\n\r\n* Add LED_BUILTIN* definitions and initialization for LEDs to stop them floating. (#7636)\r\n\r\nCo-authored-by: Rodrigo Garcia <rodrigo.garcia@espressif.com>\r\n\r\n* Expand path to tinuf2 image when checking existence in platformio-build.py (#7631)\r\n\r\n* Expand path to tinuf2 image when checking existence\r\n\r\n* More isFiles fixed\r\n\r\n* Remove (useless) trailing semicolon from Print.cpp (#7622)\r\n\r\n* ADD: New variant Edgebox-ESP-100 (#7771)\r\n\r\n* ADD: New variant Edgebox-ESP-100\r\n\r\n* FIX: Edgebox-ESP-100 Board.txt usb mode option change back to default value as ESP32S3\r\n\r\n* Add Crabik Slot ESP32-S3 board (#7790)\r\n\r\n* Added Crabik Slot ESP32-S3\r\n\r\n* Adding CPU frequency settings and removing excess from partition scheme settings\r\n\r\n* new variant LilyGO T-Display-S3 (#7763)\r\n\r\n* new variant LilyGO T-Display-S3\r\n\r\nhttps://github.com/Xinyuan-LilyGO/T-Display-S3\r\n\r\n* Add boards.txt definition\r\n\r\n---------\r\n\r\nCo-authored-by: Me No Dev <me-no-dev@users.noreply.github.com>\r\n\r\n* Update get.py to support Apple ARM64\r\n\r\n* Update package_esp32_index.template.json\r\n\r\n* WString Return bool (#7774)\r\n\r\n* Add Roboheart Hercules development board to the esp32-core (#7672)\r\n\r\n* added Roboheart Hercules pin definitions and board.txt entries\r\n\r\n* added package_roboheat.json for prototyping\r\n\r\n* Roboheart Hercules pins\r\n\r\n* Updated the pins\r\n\r\n* Delete package_roboheart.json\r\n\r\n* Requested changes\r\n\r\n---------\r\n\r\nCo-authored-by: renebohne <rene.bohne@gmail.com>\r\n\r\n* Reword \"ESP-IDF as Component\" (#7812)\r\n\r\nI think \"Arduino as an ESP-IDF component\" or just \"As ESP-IDF component\" instead of  \"ESP-IDF as Component\" is more correct way to name the link.\r\n\r\n1. \"ESP-IDF as Component\" would imply that ESP-IDF is some sort of library for Arduino, which is (IMO) misleading, because it's true the other way around.\r\n2. It's written as \"Arduino as an ESP-IDF component\" on the webpage it points to as well.\r\n\r\n- Also I removed the capitalization from \"Component\" as I have not found a reason why is it capitalized.\r\n\r\n* add new board Adafruit Feather ESP32-S3 Reverse TFT (#7811)\r\n\r\n* Multi threading examples (tasks, queues, semaphores, mutexes) (#7660)\r\n\r\n* Moved and renamed example ESP32/FreeRTOS to MultiThreading/BasicMultiThreading\r\n\r\n* Added dummy files\r\n\r\n* Modified original example\r\n\r\n* Fixed BasicMultiThreading.ino\r\n\r\n* Added Example demonstrating use of queues\r\n\r\n* Extended info in BasicMultiThreading\r\n\r\n* Renamed Queues to singular Queue\r\n\r\n* Added Mutex example\r\n\r\n* Added Semaphore example\r\n\r\n* Moved info from example to README\r\n\r\n* Moved doc from Mutex to README\r\n\r\n* Added Queue README\r\n\r\n* Removed unecesary text\r\n\r\n* Fixed grammar\r\n\r\n* Increased stack size for Sempahore example\r\n\r\n* Added headers into .ino files\r\n\r\n* Added word Example at the end of title in README\r\n\r\n* removed unused line\r\n\r\n* Added forgotten README\r\n\r\n* Modified BasicMultiThreading example\r\n\r\n* Added missing S3 entry in README\r\n\r\n* moved location\r\n\r\n* Update ESP-IDF libs\r\n\r\n* Update CMakeLists.txt\r\n\r\n* Update esptool to v4.4\r\n\r\n* Add function timerAttachInterruptFlag (#7809)\r\n\r\n* Update esptool to v4.5\r\n\r\n* ADC refactoring (#7827)\r\n\r\n* Adc refactored + periman implementation\r\n\r\nPeripheral manager still needs to be checked if the implementation is right.\r\n\r\n* switched to working solution for milivolts read\r\n\r\n* Periman detachbus fix\r\n\r\n* coding style\r\n\r\n* fix CI warnings\r\n\r\n* fix FreeRTOS example\r\n\r\n* Update ETH.cpp\r\n\r\n* Update FunctionalInterruptStruct.ino\r\n\r\n* Update package_esp32_index.template.json\r\n\r\n* Update package_esp32_index.template.json\r\n\r\n* Fixes for the latest IDF v5.1\r\n\r\n* update esp-idf libs and toolchain\r\n\r\n* Turn OFF auto crystal frequency for ESP32 (needed by TWAI)\r\n\r\n* Update examples\r\n\r\n* Switch build to mostly use flags from files\r\n\r\nIncludes can not be done this way\r\n\r\n* Reorganize flag files\r\n\r\n* Optimize chip build flags further\r\n\r\n* Revert defines from file. MBEDTLS_CONFIG_FILE does not properly expand\r\n\r\n* Add support for includes and defines from file\r\n\r\n* Replace old sdk path references in platform.txt\r\n\r\n* use gcc-ar (#8013)\r\n\r\n* Makes F_CPU generic for all SoC (#8007)\r\n\r\nBased on CONFIG_ESP_DEFAULT_CPU_FREQ_MHZ that is correctly defined in the sdkconfig file for each SoC.\r\n\r\n* TIMER refactoring (#7904)\r\n\r\n* refactor using GPtimer\r\n\r\n* Updated timer HW test\r\n\r\n* fix examples\r\n\r\n* Add v2.0.7 in issue template (#7871)\r\n\r\n* refactor using GPtimer\r\n\r\n* Updated timer HW test\r\n\r\n* fix examples\r\n\r\n* Revert \"Add v2.0.7 in issue template (#7871)\"\r\n\r\nThis reverts commit fcc3b17d62ff57861f8913ca1f142fd5163b7457.\r\n\r\n* Update upload-artifact to v3 in HW CI\r\n\r\n* Revert \"Update upload-artifact to v3 in HW CI\"\r\n\r\nThis reverts commit 1ba228071718ba37c4e26d98db22f77b2a7364a6.\r\n\r\n* replace resolution with frequency\r\n\r\n* remove count_down option\r\n\r\n* countup removed from examples + header\r\n\r\n* Refactored timer object\r\n\r\n* code cleanup + examples and tests fixes\r\n\r\n* TimerAlarm fix\r\n\r\n---------\r\n\r\nCo-authored-by: Vojt\u011bch Barto\u0161ka <76958047+VojtechBartoska@users.noreply.github.com>\r\n\r\n* [Docs] ADC and Timer API Update (+some docs fixes) (#7906)\r\n\r\n* updated docs\r\n\r\n* remove hall sensor docs\r\n\r\nRemoved Hall sensor documentation as its no longer supported in IDF-5\r\n\r\n* Fixed ESPNow examples location in docs\r\n\r\n* Last timer refactored API + gpio small fix\r\n\r\n* AlarmWrite fix\r\n\r\n* Fixes APLL/PLL with RTC Frequency (#8025)\r\n\r\nlog_d() was displaying APLL for any SoC, but S3 and C3 has not such option, causing compilation errors.\r\n\r\n* Update IDF libs and fix OPI PSRAM on S3\r\n\r\n* Add setMode function HardwareSerial.c to set the esp32 uart mode for use with RS485 auto RTS (#7935)\r\n\r\n* Added setMode function to set the esp32 uart mode\r\n\r\nUsed to set the esp32 uart mode for use with RS485 Half Duplex and the auto RTS pin mode. This will set/clear the RTS pin output to control the RE/DE pin on most RS485 chips.\r\n\r\n* Add Success (bool) return in some functions\r\n\r\n* Add Success (bool) return code to some functions\r\n\r\n* Add Success (bool) return to some functions\r\n\r\n* Add Success (bool) return to some functions\r\n\r\n* Fix uartSetRxTimeout return type\r\n\r\n---------\r\n\r\nCo-authored-by: Rodrigo Garcia <rodrigo.garcia@espressif.com>\r\n\r\n* Add support for esp-elf-gdb\r\n\r\n* WFG Crashfix (#8044)\r\n\r\n* Update component libs\r\n\r\n* IDF release/v5.1 (#8061)\r\n\r\n* IDF release/v5.1 bb9200acec\r\n\r\n* Update Esp.cpp\r\n\r\n* IDF release/v5.1 420ebd208a\r\n\r\n* Update esp32-hal-psram.c\r\n\r\n* Switch SDK to be an external package\r\n\r\n* fix path (#8096)\r\n\r\n* Makes UART work at any APB Frequency (#8097)\r\n\r\nFixes HardwareSerial to work with IDF 5.1 on any CPU/APB Frequency (240MHz to 10MHZ), including user created low power modes.\r\n\r\n* Add required callbacks for TinyUSB DFU\r\n\r\n* Update version to 3.0.0\r\n\r\n* Add ESP.getCoreVersion() and update ESP.getChipModel()\r\n\r\n* Update timer hal for the latest 5.1\r\n\r\n* Use separate RX and TX buffer sizes in HTTP client\r\n\r\noptimizes download by allowing up to 4K packets to be received\r\n\r\n* Rename clock tree enum name in latest 5.1\r\n\r\n* ESP32-H4 support was removed in ESP-IDF v5.1\r\n\r\n* IDF release/v5.1 2004bf4e11 (#8165)\r\n\r\n* Deinit previous bus first (#8180)\r\n\r\n* TIMER - add timer_started flag, fix timerEnd() + timer HW test (#8135)\r\n\r\n* Add timer_started flag and stop before disable\r\n\r\n* Fix timer HW test\r\n\r\n* TOUCH - Peripheral manager implementation (#8129)\r\n\r\n* Touch periman implemented\r\n\r\n* Deinit previous bus first\r\n\r\n* LEDC Refactoring - Peripheral manager implemented (#8126)\r\n\r\n* LEDC periman implementation\r\n\r\n* Fix examples\r\n\r\n* Rework tone\r\n\r\n* Update ledc docs\r\n\r\n* fix missing bracket\r\n\r\n* Update analog funtions esp32-hal.h\r\n\r\n* Update CameraWebServer example\r\n\r\n* Fix HiFreq_ADC example\r\n\r\n* minor fixes - typos\r\n\r\n* Avoid calling tone/notone when tone already runs on dif. pin\r\n\r\n* Remove unused channels_resolution\r\n\r\n* GPIO - Peripheral manager implementation (#8179)\r\n\r\n* periman-implementation\r\n\r\n* fix RGB_BUILTIN and remove space\r\n\r\n* Enforces more consistency into Peripheral Manager (#8188)\r\n\r\n* Avoid log_i() message the first time a bus is assigned\r\n\r\n* Prevent operation with ESP32_BUS_TYPE_INIT\r\n\r\n* keeps coding style\r\n\r\n* do not print messages on INIT bus type\r\n\r\n* [Arduino Core 3.0.0] RMT IDF5.1 Refactoring (#7994)\r\n\r\n* RMT IDF5.1 refactoring\r\n\r\n* Fixes initial value setting\r\n\r\n* removed rmtRead() with user callback\r\n\r\n* simplify/remove Read data structure\r\n\r\n* Deep API simplification\r\n\r\n* fixes the examples\r\n\r\n* fix rmt.h\r\n\r\n* adds support to APB different frequencies\r\n\r\n* fixes CI and not defined RGB_BUILTIN\r\n\r\n* new RMT API and examples\r\n\r\n* fixing commentaties\r\n\r\n* Update esp32-hal-rgb-led.c\r\n\r\n* changes Filter API\r\n\r\n* Fixes example with Filter API\r\n\r\n* Update PlatformIO scripts for the upcoming 3.0 core (#8183)\r\n\r\n* Update PlatformIO scripts for the upcoming 3.0 core\r\n\r\n* Dynamically select proper framework-arduinoespressif32-libs package\r\n\r\nWith this change the dev-platform will be dynamically configured to\r\npull the latest .zip package with precompiled libraries from extracted from\r\npackage_esp32_index.template.json\r\n\r\n* free memory on detach (#8264)\r\n\r\n* SPI - Peripheral manager implementation  (#8255)\r\n\r\n* spi periman implementation\r\n\r\n* fix header file\r\n\r\n* remove unused struct\r\n\r\n* fix missing braces\r\n\r\n* Update esp32-hal-rmt.c (#8216)\r\n\r\nOptimizing Peripheral Manager Test\r\n\r\n* I2C - Peripheral manager implementation (#8220)\r\n\r\n* i2c-master periman initial commit\r\n\r\n* i2c-master make detachbus static + comment remove\r\n\r\n* i2c-slave periman implementation\r\n\r\n* SetPinBus to INIT on i2cDeinits\r\n\r\n* Fix slave pins deinit\r\n\r\n* remove dbg logs\r\n\r\n* set ret to ESP_FAIL instead of returning\r\n\r\n* Fix warnings in hal-spi caused by pariman transition\r\n\r\n* Update esptool.py to version 4.6\r\n\r\n* Add platform support for ESP_SR\r\n\r\n* Add USB Type and valid pin check to periman\r\n\r\n* replace bus with spi->num+1 (#8279)\r\n\r\n* Remove default pins from SPI HAL\r\n\r\n* Add commented out handlers for esptool.js in TinyUSB CDC\r\n\r\nFor future use\r\n\r\n* Add build defines for host os and fqbn (for debug purposes)\r\n\r\n* Provide proper memory caps total size\r\n\r\n* Update Esp.cpp\r\n\r\n* SDMMC - Peripheral manager implementation (#8289)\r\n\r\n* sdmmc periman implemented\r\n\r\n* save pins when SOC_SDMMC_USE_IOMUX\r\n\r\n* IDF release/v5.1 4bc762621d (#8292)\r\n\r\n* Adds missing pinMode (#8312)\r\n\r\n* Adds missing pinMode\r\n\r\nThe example code lacks a pinMode() to initialize the GPIO 0 (button). In Arduino Core 3.0.0, it prints an error message when trying to read a not initialized GPIO.\r\n\r\n* Update KeyboardLogout.ino\r\n\r\nAdds <buttonPin> to keep code standard\r\n\r\n* Update KeyboardReprogram.ino\r\n\r\nAdds <buttonPin> to keep code standard\r\n\r\n* LEDC Fade implementation (#8338)\r\n\r\n* fade API + pointer fixes\r\n\r\n* Add fade api\r\n\r\n* Add fade example\r\n\r\n* update ledc docs\r\n\r\n* remove unused variables\r\n\r\n* fix path to example\r\n\r\n* Adds USB to Peripheral Manager - Arduino Core 3.0.0 (#8335)\r\n\r\n* ETHERNET - Peripheral manager implementation (#8297)\r\n\r\n* Peripheral manager implemented\r\n\r\n* remove unused variable\r\n\r\n* Add all RMII pins\r\n\r\n* fix typo\r\n\r\n* Adds HardwareSerial to Peripheral Manager Arduino 3.0.0 (#8328)\r\n\r\n* Do not limit ETHERNET in periman to only ESP32. SPI is also an option\r\n\r\n* Initial support for ESP32-C6 (#8337)\r\n\r\n* Add checks for SOC defines (#8351)\r\n\r\n* Add checks for SOC defines\r\n\r\n* Add SoC checks to BLE library\r\n\r\n* fix i2c compilation error\r\n\r\n* fix wrong placement of include\r\n\r\n* add check to SPI library\r\n\r\n* add check to USB library\r\n\r\n* add checks to Wire library\r\n\r\n* Feature/esp32h2 support (#8373)\r\n\r\n* Initial support for ESP32H2\r\n\r\n* Additional changes for ESP32H2\r\n\r\n* Update libs for ESP32H2\r\n\r\n* Fix flashing on ESP32-H2\r\n\r\n* Fix GPIO Configs for ESP32-C6 and ESP32-H2\r\n\r\n* Update Timer test sketch\r\n\r\n* Fix upload flash parameters\r\n\r\n* Use ets_write_char_uart instead of ets_printf in log_printfv\r\n\r\n* Print full chip report when log level is sufficient (#8282)\r\n\r\n* ESP32-C3 does not have ets_write_char_uart\r\n\r\n* Fix BLE gap event name\r\n\r\n* HW Testing - Pytest update (#8389)\r\n\r\n* update tests requirements\r\n\r\n* remove already handled components\r\n\r\n* Update version of pytest\r\n\r\n* Add missing ESP32-H2 to hil.yml\r\n\r\n* Updated FreeRTOS names (#8418)\r\n\r\n* HW Testing -  ESP32-C6 + ESP32-H2 fixes (#8404)\r\n\r\n* add C6/H2 to tests cfg.json\r\n\r\n* remove ,\r\n\r\n* workflow runs-on runner by matrix\r\n\r\n* Add need for arduino tag to select runner\r\n\r\n* Add cryptography to requirements.txt\r\n\r\n* Removed duplicate TX1 define for H2 (#8402)\r\n\r\n* Fix broken examples\r\n\r\n* Fixes RMT filter & idle timing and setup (#8359)\r\n\r\n* Fixes Filter and Idle parameter to uint32\r\n\r\n* Fixes Filter and Idle setup\r\n\r\n* Fixes it to 5.1Libs branch\r\n\r\n* fix RMT CLK source and Filter API\r\n\r\n* fixes missing ;\r\n\r\n* fixes missing ;\r\n\r\n* fixes RMT example\r\n\r\n* IDF release/v5.1 a7b62bbcaf (#8438)\r\n\r\n* Add workflow to build executables from python scripts (#8290)\r\n\r\n* Add workflow to build executables from python scripts\r\n\r\n* Push binary to tools\r\n\r\n* Enable executable signing on Windows\r\n\r\n* Update get.py\r\n\r\n* Push binary to tools\r\n\r\n* Try with multiple files\r\n\r\n* Try more actions\r\n\r\n* Try powershell\r\n\r\n* Restore tools so they do not get rebuilt\r\n\r\n* Finalize scripts\r\n\r\n* Push binary to tools\r\n\r\n* App rollback should be after PSRAM is initialized\r\n\r\n* Correcting RX1 to GPIO4 and TX1 to GPIO5 to be consistent with documentation. Previous pin use works but is inconsistent with C6 docs.\r\n\r\n* Fixes Memory Leak (#8486)\r\n\r\n* fixes preprocessor test (#8485)\r\n\r\n* fixes preprocessor test\r\n\r\nWhen using `#define USE_SOFT_AP` \r\nChange\r\n`&& not USE_SOFT_AP` ==> `&& !defined(USE_SOFT_AP)`\r\n\r\n* Adds any BLE capable device in WiFiProv.ino\r\n\r\nRemoving ESP32 restriction for BLE Provisioning.\r\n\r\n* fix flash mode read out for C6\r\n\r\n* Add option for custom partitions without restrictions\r\n\r\n* SD_MMC update (#8298)\r\n\r\n* Updated SD_MMC lib and examples\r\n\r\n* Removed getter implementation and commented usage in examples\r\n\r\n* squashed updates\r\n\r\n* IDF release/v5.1 f0437b945f (#8599)\r\n\r\n* Update package_esp32_index.template.json\r\n\r\n* Fix printf format build error in BTAdvertisedDeviceSet.cpp\r\n\r\n---------\r\n\r\nCo-authored-by: Pedro Minatel <pedro.minatel@espressif.com>\r\nCo-authored-by: Rodrigo Garcia <rodrigo.garcia@espressif.com>\r\nCo-authored-by: Ha Thach <thach@tinyusb.org>\r\nCo-authored-by: Martin Turski <quiret@vfemail.net>\r\nCo-authored-by: raviypujar <raviypujar@gmail.com>\r\nCo-authored-by: Jason2866 <24528715+Jason2866@users.noreply.github.com>\r\nCo-authored-by: Tom\u00e1\u0161 Piln\u00fd <34927466+PilnyTomas@users.noreply.github.com>\r\nCo-authored-by: Jan Proch\u00e1zka <90197375+P-R-O-C-H-Y@users.noreply.github.com>\r\nCo-authored-by: Daniel Berlin <dberlin@dberlin.org>\r\nCo-authored-by: Nima Askari (\u0646\u06cc\u0645\u0627 \u0639\u0633\u06a9\u0631\u06cc) <nimaltd@yahoo.com>\r\nCo-authored-by: rtpmsys <106180646+rtpmsys@users.noreply.github.com>\r\nCo-authored-by: bytiful <55647551+bytiful@users.noreply.github.com>\r\nCo-authored-by: tmfarrington <tmfarrington@users.noreply.github.com>\r\nCo-authored-by: Krzysiek S <chris.streh@gmail.com>\r\nCo-authored-by: surt <carl.olsson@gmail.com>\r\nCo-authored-by: Max Scheffler <max.scheffler@pm.me>\r\nCo-authored-by: Clemens Kirchgatterer <clemens@1541.org>\r\nCo-authored-by: Peter Pan's Techland <twinkle-pirate@hotmail.com>\r\nCo-authored-by: Roman <programmeofficemilkyway@gmail.com>\r\nCo-authored-by: Eistee <Eistee82@users.noreply.github.com>\r\nCo-authored-by: David McCurley <44048235+mrengineer7777@users.noreply.github.com>\r\nCo-authored-by: Gaya3N25 <30388176+Gaya3N25@users.noreply.github.com>\r\nCo-authored-by: renebohne <rene.bohne@gmail.com>\r\nCo-authored-by: Oliv\u00e9r Rem\u00e9ny <25034625+remenyo@users.noreply.github.com>\r\nCo-authored-by: davidk88 <david.kotar@gmail.com>\r\nCo-authored-by: Vojt\u011bch Barto\u0161ka <76958047+VojtechBartoska@users.noreply.github.com>\r\nCo-authored-by: James Armstrong <jamesarmstrong3@me.com>\r\nCo-authored-by: Valerii Koval <valeros@users.noreply.github.com>\r\nCo-authored-by: Peter G. Jensen <root@petergjoel.dk>",
            "additions": 38,
            "deletions": 17,
            "change_type": "MODIFY",
            "diff": "@@ -20,7 +20,7 @@\n #include \"Arduino.h\"\n #include \"Esp.h\"\n #include \"esp_sleep.h\"\n-#include \"esp_spi_flash.h\"\n+#include \"spi_flash_mmap.h\"\n #include <memory>\n #include <soc/soc.h>\n #include <esp_partition.h>\n@@ -32,6 +32,9 @@ extern \"C\" {\n \n #include \"soc/spi_reg.h\"\n #include \"esp_system.h\"\n+#include \"esp_chip_info.h\"\n+#include \"esp_mac.h\"\n+#include \"esp_flash.h\"\n #ifdef ESP_IDF_VERSION_MAJOR // IDF 4+\n #if CONFIG_IDF_TARGET_ESP32 // ESP32/PICO-D4\n #include \"esp32/rom/spi_flash.h\"\n@@ -48,6 +51,12 @@ extern \"C\" {\n #elif CONFIG_IDF_TARGET_ESP32C3\n #include \"esp32c3/rom/spi_flash.h\"\n #define ESP_FLASH_IMAGE_BASE 0x0000     // Esp32c3 is located at 0x0000\n+#elif CONFIG_IDF_TARGET_ESP32C6\n+#include \"esp32c6/rom/spi_flash.h\"\n+#define ESP_FLASH_IMAGE_BASE 0x0000     // Esp32c6 is located at 0x0000\n+#elif CONFIG_IDF_TARGET_ESP32H2\n+#include \"esp32h2/rom/spi_flash.h\"\n+#define ESP_FLASH_IMAGE_BASE 0x0000     // Esp32h2 is located at 0x0000\n #else \n #error Target CONFIG_IDF_TARGET is not supported\n #endif\n@@ -131,9 +140,7 @@ void EspClass::restart(void)\n \n uint32_t EspClass::getHeapSize(void)\n {\n-    multi_heap_info_t info;\n-    heap_caps_get_info(&info, MALLOC_CAP_INTERNAL);\n-    return info.total_free_bytes + info.total_allocated_bytes;\n+    return heap_caps_get_total_size(MALLOC_CAP_INTERNAL);\n }\n \n uint32_t EspClass::getFreeHeap(void)\n@@ -154,9 +161,7 @@ uint32_t EspClass::getMaxAllocHeap(void)\n uint32_t EspClass::getPsramSize(void)\n {\n \tif(psramFound()){\n-\t    multi_heap_info_t info;\n-\t    heap_caps_get_info(&info, MALLOC_CAP_SPIRAM);\n-\t    return info.total_free_bytes + info.total_allocated_bytes;\n+\t    return heap_caps_get_total_size(MALLOC_CAP_SPIRAM);\n \t}\n \treturn 0;\n }\n@@ -255,7 +260,7 @@ uint32_t EspClass::getFreeSketchSpace () {\n     return _partition->size;\n }\n \n-uint8_t EspClass::getChipRevision(void)\n+uint16_t EspClass::getChipRevision(void)\n {\n     esp_chip_info_t chip_info;\n     esp_chip_info(&chip_info);\n@@ -265,7 +270,7 @@ uint8_t EspClass::getChipRevision(void)\n const char * EspClass::getChipModel(void)\n {\n #if CONFIG_IDF_TARGET_ESP32\n-    uint32_t chip_ver = REG_GET_FIELD(EFUSE_BLK0_RDATA3_REG, EFUSE_RD_CHIP_VER_PKG);\n+    uint32_t chip_ver = REG_GET_FIELD(EFUSE_BLK0_RDATA3_REG, EFUSE_RD_CHIP_PACKAGE);\n     uint32_t pkg_ver = chip_ver & 0x7;\n     switch (pkg_ver) {\n         case EFUSE_RD_CHIP_VER_PKG_ESP32D0WDQ6 :\n@@ -303,10 +308,17 @@ const char * EspClass::getChipModel(void)\n     default:\n       return \"ESP32-S2 (Unknown)\";\n     }\n-#elif CONFIG_IDF_TARGET_ESP32S3\n-    return \"ESP32-S3\";\n-#elif CONFIG_IDF_TARGET_ESP32C3\n-    return \"ESP32-C3\";\n+#else\n+    esp_chip_info_t chip_info;\n+    esp_chip_info(&chip_info);\n+    switch(chip_info.model){\n+        case CHIP_ESP32S3: return \"ESP32-S3\";\n+        case CHIP_ESP32C3: return \"ESP32-C3\";\n+        case CHIP_ESP32C2: return \"ESP32-C2\";\n+        case CHIP_ESP32C6: return \"ESP32-C6\";\n+        case CHIP_ESP32H2: return \"ESP32-H2\";\n+        default: return \"UNKNOWN\";\n+    }\n #endif\n }\n \n@@ -322,6 +334,11 @@ const char * EspClass::getSdkVersion(void)\n     return esp_get_idf_version();\n }\n \n+const char * EspClass::getCoreVersion(void)\n+{\n+    return ESP_ARDUINO_VERSION_STR;\n+}\n+\n uint32_t ESP_getFlashChipId(void)\n {\n   uint32_t id = g_rom_flashchip.device_id;\n@@ -338,7 +355,7 @@ uint32_t EspClass::getFlashChipSize(void)\n uint32_t EspClass::getFlashChipSpeed(void)\n {\n     esp_image_header_t fhdr;\n-    if(flashRead(ESP_FLASH_IMAGE_BASE, (uint32_t*)&fhdr, sizeof(esp_image_header_t)) && fhdr.magic != ESP_IMAGE_HEADER_MAGIC) {\n+    if(esp_flash_read(esp_flash_default_chip, (void*)&fhdr, ESP_FLASH_IMAGE_BASE, sizeof(esp_image_header_t)) && fhdr.magic != ESP_IMAGE_HEADER_MAGIC) {\n         return 0;\n     }\n     return magicFlashChipSpeed(fhdr.spi_speed);\n@@ -349,8 +366,12 @@ FlashMode_t EspClass::getFlashChipMode(void)\n    #if CONFIG_IDF_TARGET_ESP32S2\n    uint32_t spi_ctrl = REG_READ(PERIPHS_SPI_FLASH_CTRL);\n    #else\n+   #if CONFIG_IDF_TARGET_ESP32H2 || CONFIG_IDF_TARGET_ESP32C6\n+   uint32_t spi_ctrl = REG_READ(DR_REG_SPI0_BASE + 0x8);\n+   #else\n    uint32_t spi_ctrl = REG_READ(SPI_CTRL_REG(0));\n    #endif\n+   #endif\n    /* Not all of the following constants are already defined in older versions of spi_reg.h, so do it manually for now*/\n    if (spi_ctrl & BIT(24)) { //SPI_FREAD_QIO\n        return (FM_QIO);\n@@ -413,18 +434,18 @@ FlashMode_t EspClass::magicFlashChipMode(uint8_t byte)\n \n bool EspClass::flashEraseSector(uint32_t sector)\n {\n-    return spi_flash_erase_sector(sector) == ESP_OK;\n+    return esp_flash_erase_region(esp_flash_default_chip, sector * SPI_FLASH_SEC_SIZE, SPI_FLASH_SEC_SIZE) == ESP_OK;\n }\n \n // Warning: These functions do not work with encrypted flash\n bool EspClass::flashWrite(uint32_t offset, uint32_t *data, size_t size)\n {\n-    return spi_flash_write(offset, (uint32_t*) data, size) == ESP_OK;\n+    return esp_flash_write(esp_flash_default_chip, (const void*) data, offset, size) == ESP_OK;\n }\n \n bool EspClass::flashRead(uint32_t offset, uint32_t *data, size_t size)\n {\n-    return spi_flash_read(offset, (uint32_t*) data, size) == ESP_OK;\n+    return esp_flash_read(esp_flash_default_chip, (void*) data, offset, size) == ESP_OK;\n }\n \n bool EspClass::partitionEraseRange(const esp_partition_t *partition, uint32_t offset, size_t size) \n",
            "comment_added_diff": {
                "56": "#define ESP_FLASH_IMAGE_BASE 0x0000     // Esp32c6 is located at 0x0000",
                "59": "#define ESP_FLASH_IMAGE_BASE 0x0000     // Esp32h2 is located at 0x0000"
            },
            "comment_deleted_diff": {},
            "comment_modified_diff": {}
        }
    ],
    "httpUpdateSecure.ino": [],
    "HTTPUpdate.cpp": [],
    "HTTPUpdate.h": [],
    "Print.h": [],
    "Uri.h": [],
    "AppInsights.cpp": [],
    "AppInsights.h": [],
    "WiFiSTA.cpp": [],
    "WiFiSTA.h": [],
    "ESPmDNS.cpp": [],
    "ESPmDNS.h": [],
    "WiFiProv.ino": [],
    "WiFiProv.cpp": [
        {
            "commit": "82227e6d7e70aed17158bf1cd2ca007cb3729d94",
            "timestamp": "2023-05-31T14:37:34+03:00",
            "author": "Tom\u00e1\u0161 Piln\u00fd",
            "commit_message": "Provisioning fix and upgrades (#8209)\n\n* Added printQR function to library\r\n\r\n* Upgraded example\r\n\r\n* Upgraded README\r\n\r\n* Safegueard for qrcode.h include\r\n\r\n* Updated Safegueard for qrcode.h include",
            "additions": 37,
            "deletions": 5,
            "change_type": "MODIFY",
            "diff": "@@ -26,6 +26,9 @@\n #include <esp_wifi.h>\n #include <esp_event.h>\n #include <esp32-hal.h>\n+#if __has_include(\"qrcode.h\")\n+  #include \"qrcode.h\"\n+#endif\n \n #include <nvs_flash.h>\n #if CONFIG_BLUEDROID_ENABLED\n@@ -66,7 +69,7 @@ static void get_device_service_name(prov_scheme_t prov_scheme, char *service_nam\n #endif\n }\n \n-void WiFiProvClass :: beginProvision(prov_scheme_t prov_scheme, scheme_handler_t scheme_handler, wifi_prov_security_t security, const char * pop, const char *service_name, const char *service_key, uint8_t * uuid)\n+void WiFiProvClass :: beginProvision(prov_scheme_t prov_scheme, scheme_handler_t scheme_handler, wifi_prov_security_t security, const char * pop, const char *service_name, const char *service_key, uint8_t * uuid, bool reset_provisioned)\n {\n     bool provisioned = false;\n     static char service_name_temp[32];\n@@ -107,10 +110,13 @@ void WiFiProvClass :: beginProvision(prov_scheme_t prov_scheme, scheme_handler_t\n     \tlog_e(\"wifi_prov_mgr_init failed!\");\n     \treturn;\n     }\n-    if(wifi_prov_mgr_is_provisioned(&provisioned) != ESP_OK){\n-    \tlog_e(\"wifi_prov_mgr_is_provisioned failed!\");\n-    \twifi_prov_mgr_deinit();\n-    \treturn;\n+    if(reset_provisioned){\n+      log_i(\"Resetting provisioned data.\");\n+      wifi_prov_mgr_reset_provisioning();\n+    }else if(wifi_prov_mgr_is_provisioned(&provisioned) != ESP_OK){\n+      log_e(\"wifi_prov_mgr_is_provisioned failed!\");\n+      wifi_prov_mgr_deinit();\n+      return;\n     }\n     if(provisioned == false) {\n #if CONFIG_BLUEDROID_ENABLED\n@@ -158,4 +164,30 @@ void WiFiProvClass :: beginProvision(prov_scheme_t prov_scheme, scheme_handler_t\n     }\n }\n \n+// Copied from IDF example\n+void  WiFiProvClass :: printQR(const char *name, const char *pop, const char *transport){\n+    if (!name || !transport) {\n+        log_w(\"Cannot generate QR code payload. Data missing.\");\n+        return;\n+    }\n+    char payload[150] = {0};\n+    if (pop) {\n+        snprintf(payload, sizeof(payload), \"{\\\"ver\\\":\\\"%s\\\",\\\"name\\\":\\\"%s\\\"\" \\\n+                    \",\\\"pop\\\":\\\"%s\\\",\\\"transport\\\":\\\"%s\\\"}\",\n+                    \"v1\", name, pop, transport);\n+    } else {\n+        snprintf(payload, sizeof(payload), \"{\\\"ver\\\":\\\"%s\\\",\\\"name\\\":\\\"%s\\\"\" \\\n+                    \",\\\"transport\\\":\\\"%s\\\"}\",\n+                    \"v1\", name, transport);\n+    }\n+#if __has_include(\"qrcode.h\")\n+    log_i(\"Scan this QR code from the provisioning application for Provisioning.\");\n+    esp_qrcode_config_t cfg = ESP_QRCODE_CONFIG_DEFAULT();\n+    esp_qrcode_generate(&cfg, payload);\n+#else\n+    log_i(\"If QR code is not visible, copy paste the below URL in a browser.\\n%s?data=%s\", \"https://espressif.github.io/esp-jumpstart/qrcode.html\", payload);\n+    log_i(\"If you are using Arduino as IDF component, install ESP Rainmaker:\\nhttps://github.com/espressif/esp-rainmaker\");\n+#endif\n+}\n+\n WiFiProvClass WiFiProv;\n",
            "comment_added_diff": {
                "167": "// Copied from IDF example"
            },
            "comment_deleted_diff": {},
            "comment_modified_diff": {}
        }
    ],
    "WiFiProv.h": [],
    "WebServer.cpp": [],
    "wifi.rst": [],
    "WiFiAP.h": [],
    "sd_diskio.cpp": [],
    "SD.cpp": [],
    "partitions-16MB-tinyuf2.csv": [],
    "Update.h": [],
    "Updater.cpp": [],
    "faq.rst": [],
    "troubleshooting.rst": [],
    "cdc_dfu_flash.rst": [],
    "io_mux.rst": [],
    "SDMMC_Test.ino": [],
    "partitions-4MB-1ota.csv": [],
    "Sign-File.ps1": [],
    "espressif.ico": [],
    "install-platformio-esp32.sh": [],
    "on-push.sh": [],
    "on-release.sh": [],
    "sketch_utils.sh": [],
    "upload_py_tools.sh": [],
    "build_py_tools.yml": [],
    "hil.yml": [],
    "lib.yml": [],
    "push.yml": [],
    ".gitignore": [],
    "Esp.h": [],
    "FirmwareMSC.cpp": [],
    "HWCDC.h": [],
    "MD5Builder.cpp": [],
    "Tone.cpp": [
        {
            "commit": "6f7a1ca76ada4d705d79ce863450c91349327a79",
            "timestamp": "2023-10-05T14:54:25+03:00",
            "author": "Me No Dev",
            "commit_message": "ESP-IDF v5.1 (#7733)\n\n* Initial changes to compile under ESP-IDF v5.1\r\n\r\n* Initial import for ESP-IDF v5.1 libs\r\n\r\n* Update toolchain\r\n\r\n* Update esp32-hal-psram.c\r\n\r\n* Add missing LDs\r\n\r\n* Update platform.txt\r\n\r\n* Stop some CI jobs, because they will always fail\r\n\r\n* Fix examples\r\n\r\n* Update app_httpd.cpp\r\n\r\n* Update ResetReason.ino\r\n\r\n* Warnings fixes\r\n\r\n* Added the example guideline and template (#7665)\r\n\r\n* Added the example guideline and template\r\n\r\n* PR review changes with some typos and grammar fixes\r\n\r\n* Changes according to the PR review\r\n\r\n* Added ESP32-S3 link to the datasheet (#7738)\r\n\r\n* Update HiFreq_ADC.ino\r\n\r\n* Replace periph_ctrl.h use because of deprecation\r\n\r\n* Replace esp_spi_flash.h use because of deprecation\r\n\r\n* Add includes to male mDNS::enableWorkstation compile\r\n\r\n* Fix ssl_client mbedtls_pk_parse_key callback\r\n\r\n* Update temperature sensor driver\r\n\r\n* Allow sketch_utils to compile with arduino-cli\r\n\r\n* Run CI with arduino-cli\r\n\r\n* Fix arduino-cli CI build on Windows\r\n\r\n* Refactor platform.txt to not use components installed through the board manager when running from git\r\n\r\n* Initial Peripheral Manager Implementation\r\n\r\n* Update SigmaDelta driver to use the new ESP-IDF driver API\r\n\r\n* Small improvements to peripheral manager and SigmaDelta\r\n\r\n* Remove deleted function from SigmaDelta header\r\n\r\n* Update DAC driver to use the new ESP-IDF driver API\r\n\r\n* Adds softAp(String) to make it compatible with ESP8266 (#7801)\r\n\r\n* Fix commentary (#7800)\r\n\r\nMinor fix based on observation done in https://github.com/espressif/arduino-esp32/issues/7795#issuecomment-1416868611\r\n\r\n* add adafruit new board feather esp32s2 reserve tft (#7794)\r\n\r\n* bugfix: add <stdint.h> for uint8_t to avoid compilation failure (GCC 11.2.0) (#7744)\r\n\r\n* Adding 3rd party boards for VALTRACK-V4-VTS-ESP32-C3 & VALTRACK-V4-MFW-ESP32-C3 (#7735)\r\n\r\n* Added VALTRACK-V4-VTS-ESP32-C3 board definition\r\n\r\nCreated pins_arduino.h & made changes to boards.txt with necessary changes\r\n\r\n* Modified the URL\r\n\r\n* Renamed json\r\n\r\n* renamed all auRL\r\n\r\n* Adding VALTRACK-V4 series board definitions\r\n\r\nAdded VALTRACK-V4-VTS-ESP32C3 & VALTRACK-V4-MFW-ESP32-C3 board variants\r\n\r\n* Adding VALTRACK-V4 series board definitions\r\n\r\nAdded VALTRACK-V4-VTS-ESP32C3 & VALTRACK-V4-MFW-ESP32-C3 board variants\r\n\r\n* Reverted package_esp32_index.template.json\r\n\r\nrestored package_esp32_index.template.json from edits\r\n\r\n* Reverted package_esp32_index.template.json\r\n\r\nAdded new line to package_esp32_index.template.json\r\n\r\n* Update Platformio CI (#7725)\r\n\r\n* WiFiClient example fix (#7711)\r\n\r\n* Modified WiFiClient example to use thingspeak instead of non-functionig sparkfun\r\n\r\n* Moved instructions to README\r\n\r\n* Fixed spelling\r\n\r\n* Added link to S3 datasheet\r\n\r\n---------\r\n\r\nCo-authored-by: Jan Proch\u00e1zka <90197375+P-R-O-C-H-Y@users.noreply.github.com>\r\n\r\n* Mirror update from Heltec repository (#7709)\r\n\r\nHeltec updated the I2C pins in https://github.com/Heltec-Aaron-Lee/WiFi_Kit_series/commit/b10f4bf85d13fd01be80dcdb0eb59e6a8c8ba19a\r\n\r\n* Fixes BLE data printing (#7699)\r\n\r\n* Fixes BLE data printing\r\n\r\nBLE data has no '\\0' terminator, therefore it can't be printed as a regular C string.\r\nThis fix just prints the BLE data based on its length.\r\n\r\n* Simplify printing to a single call\r\n\r\n* split menu options + lora_32_V3 fix (#7697)\r\n\r\n* Change header gaurd name (#7696)\r\n\r\n* Fix Name (#7691)\r\n\r\nWrong name in definitions.\r\n\r\n* Fix error in WiFiClient.cpp where the connect function fails for timeouts below 1 second (#7686)\r\n\r\n* Update WiFiClient.cpp\r\n\r\nThis change will allow specifying connect timeouts below 1 second. Without this change, if connect timeouts under 1 second are given, the connect defaults to 0ms and fails. \r\nThis will also allow timeouts in fractions of seconds, e.g. 1500ms. Without this change, connect timeouts are truncated to full second increments.\r\n\r\n* Make parameter timeout_ms clear\r\n\r\n* Change connection timeout_ms name for clarity\r\n\r\n---------\r\n\r\nCo-authored-by: Rodrigo Garcia <rodrigo.garcia@espressif.com>\r\n\r\n* fixed the function header (#7674)\r\n\r\n* fixed the function header\r\n\r\n* fixed function name and paramaters\r\n\r\n---------\r\n\r\nCo-authored-by: Jan Procha\u0301zka <90197375+P-R-O-C-H-Y@users.noreply.github.com>\r\n\r\n* Ticker fix solving #6155 (#7664)\r\n\r\n* Wrapped Ticker functions with #pragma disabling -Wcast-function-type\r\n\r\n* Revert \"Wrapped Ticker functions with #pragma disabling -Wcast-function-type\"\r\n\r\nThis reverts commit 160be7e67a10d01b6e44c4bf2521c0ccd6348976.\r\n\r\n* Fixed Ticker example\r\n\r\n* Modified Ticker example\r\n\r\n* Fixed LED_BUILTIN err for ESP32\r\n\r\n---------\r\n\r\nCo-authored-by: Jan Proch\u00e1zka <90197375+P-R-O-C-H-Y@users.noreply.github.com>\r\n\r\n* setPins fix ESP32 \"specified pins are not supported by this chip.\" (#7646)\r\n\r\n[ESP32: SDMMCFS::begin hardcodes the usage of slot 1, only check if the pins match slot 1 pins.]\r\n\r\nsetPins() was testing pins D1, D2 and D3 all against D1 ... fine in 1 pin mode when all are -1 not so much if you're trying to get 4 pin mode working.\r\nI now see this function doesn't really do anything on the ESP32...accept now correctly checks that you are trying to use the slot 1 pins.\r\n\r\nCo-authored-by: Jan Proch\u00e1zka <90197375+P-R-O-C-H-Y@users.noreply.github.com>\r\n\r\n* Allow passing IP as connect method parameter in WiFiClientSecure and skip unnecessary host-ip conversions (#7643)\r\n\r\n* Add LED_BUILTIN* definitions and initialization for LEDs to stop them floating. (#7636)\r\n\r\nCo-authored-by: Rodrigo Garcia <rodrigo.garcia@espressif.com>\r\n\r\n* Expand path to tinuf2 image when checking existence in platformio-build.py (#7631)\r\n\r\n* Expand path to tinuf2 image when checking existence\r\n\r\n* More isFiles fixed\r\n\r\n* Remove (useless) trailing semicolon from Print.cpp (#7622)\r\n\r\n* ADD: New variant Edgebox-ESP-100 (#7771)\r\n\r\n* ADD: New variant Edgebox-ESP-100\r\n\r\n* FIX: Edgebox-ESP-100 Board.txt usb mode option change back to default value as ESP32S3\r\n\r\n* Add Crabik Slot ESP32-S3 board (#7790)\r\n\r\n* Added Crabik Slot ESP32-S3\r\n\r\n* Adding CPU frequency settings and removing excess from partition scheme settings\r\n\r\n* new variant LilyGO T-Display-S3 (#7763)\r\n\r\n* new variant LilyGO T-Display-S3\r\n\r\nhttps://github.com/Xinyuan-LilyGO/T-Display-S3\r\n\r\n* Add boards.txt definition\r\n\r\n---------\r\n\r\nCo-authored-by: Me No Dev <me-no-dev@users.noreply.github.com>\r\n\r\n* Update get.py to support Apple ARM64\r\n\r\n* Update package_esp32_index.template.json\r\n\r\n* WString Return bool (#7774)\r\n\r\n* Add Roboheart Hercules development board to the esp32-core (#7672)\r\n\r\n* added Roboheart Hercules pin definitions and board.txt entries\r\n\r\n* added package_roboheat.json for prototyping\r\n\r\n* Roboheart Hercules pins\r\n\r\n* Updated the pins\r\n\r\n* Delete package_roboheart.json\r\n\r\n* Requested changes\r\n\r\n---------\r\n\r\nCo-authored-by: renebohne <rene.bohne@gmail.com>\r\n\r\n* Reword \"ESP-IDF as Component\" (#7812)\r\n\r\nI think \"Arduino as an ESP-IDF component\" or just \"As ESP-IDF component\" instead of  \"ESP-IDF as Component\" is more correct way to name the link.\r\n\r\n1. \"ESP-IDF as Component\" would imply that ESP-IDF is some sort of library for Arduino, which is (IMO) misleading, because it's true the other way around.\r\n2. It's written as \"Arduino as an ESP-IDF component\" on the webpage it points to as well.\r\n\r\n- Also I removed the capitalization from \"Component\" as I have not found a reason why is it capitalized.\r\n\r\n* add new board Adafruit Feather ESP32-S3 Reverse TFT (#7811)\r\n\r\n* Multi threading examples (tasks, queues, semaphores, mutexes) (#7660)\r\n\r\n* Moved and renamed example ESP32/FreeRTOS to MultiThreading/BasicMultiThreading\r\n\r\n* Added dummy files\r\n\r\n* Modified original example\r\n\r\n* Fixed BasicMultiThreading.ino\r\n\r\n* Added Example demonstrating use of queues\r\n\r\n* Extended info in BasicMultiThreading\r\n\r\n* Renamed Queues to singular Queue\r\n\r\n* Added Mutex example\r\n\r\n* Added Semaphore example\r\n\r\n* Moved info from example to README\r\n\r\n* Moved doc from Mutex to README\r\n\r\n* Added Queue README\r\n\r\n* Removed unecesary text\r\n\r\n* Fixed grammar\r\n\r\n* Increased stack size for Sempahore example\r\n\r\n* Added headers into .ino files\r\n\r\n* Added word Example at the end of title in README\r\n\r\n* removed unused line\r\n\r\n* Added forgotten README\r\n\r\n* Modified BasicMultiThreading example\r\n\r\n* Added missing S3 entry in README\r\n\r\n* moved location\r\n\r\n* Update ESP-IDF libs\r\n\r\n* Update CMakeLists.txt\r\n\r\n* Update esptool to v4.4\r\n\r\n* Add function timerAttachInterruptFlag (#7809)\r\n\r\n* Update esptool to v4.5\r\n\r\n* ADC refactoring (#7827)\r\n\r\n* Adc refactored + periman implementation\r\n\r\nPeripheral manager still needs to be checked if the implementation is right.\r\n\r\n* switched to working solution for milivolts read\r\n\r\n* Periman detachbus fix\r\n\r\n* coding style\r\n\r\n* fix CI warnings\r\n\r\n* fix FreeRTOS example\r\n\r\n* Update ETH.cpp\r\n\r\n* Update FunctionalInterruptStruct.ino\r\n\r\n* Update package_esp32_index.template.json\r\n\r\n* Update package_esp32_index.template.json\r\n\r\n* Fixes for the latest IDF v5.1\r\n\r\n* update esp-idf libs and toolchain\r\n\r\n* Turn OFF auto crystal frequency for ESP32 (needed by TWAI)\r\n\r\n* Update examples\r\n\r\n* Switch build to mostly use flags from files\r\n\r\nIncludes can not be done this way\r\n\r\n* Reorganize flag files\r\n\r\n* Optimize chip build flags further\r\n\r\n* Revert defines from file. MBEDTLS_CONFIG_FILE does not properly expand\r\n\r\n* Add support for includes and defines from file\r\n\r\n* Replace old sdk path references in platform.txt\r\n\r\n* use gcc-ar (#8013)\r\n\r\n* Makes F_CPU generic for all SoC (#8007)\r\n\r\nBased on CONFIG_ESP_DEFAULT_CPU_FREQ_MHZ that is correctly defined in the sdkconfig file for each SoC.\r\n\r\n* TIMER refactoring (#7904)\r\n\r\n* refactor using GPtimer\r\n\r\n* Updated timer HW test\r\n\r\n* fix examples\r\n\r\n* Add v2.0.7 in issue template (#7871)\r\n\r\n* refactor using GPtimer\r\n\r\n* Updated timer HW test\r\n\r\n* fix examples\r\n\r\n* Revert \"Add v2.0.7 in issue template (#7871)\"\r\n\r\nThis reverts commit fcc3b17d62ff57861f8913ca1f142fd5163b7457.\r\n\r\n* Update upload-artifact to v3 in HW CI\r\n\r\n* Revert \"Update upload-artifact to v3 in HW CI\"\r\n\r\nThis reverts commit 1ba228071718ba37c4e26d98db22f77b2a7364a6.\r\n\r\n* replace resolution with frequency\r\n\r\n* remove count_down option\r\n\r\n* countup removed from examples + header\r\n\r\n* Refactored timer object\r\n\r\n* code cleanup + examples and tests fixes\r\n\r\n* TimerAlarm fix\r\n\r\n---------\r\n\r\nCo-authored-by: Vojt\u011bch Barto\u0161ka <76958047+VojtechBartoska@users.noreply.github.com>\r\n\r\n* [Docs] ADC and Timer API Update (+some docs fixes) (#7906)\r\n\r\n* updated docs\r\n\r\n* remove hall sensor docs\r\n\r\nRemoved Hall sensor documentation as its no longer supported in IDF-5\r\n\r\n* Fixed ESPNow examples location in docs\r\n\r\n* Last timer refactored API + gpio small fix\r\n\r\n* AlarmWrite fix\r\n\r\n* Fixes APLL/PLL with RTC Frequency (#8025)\r\n\r\nlog_d() was displaying APLL for any SoC, but S3 and C3 has not such option, causing compilation errors.\r\n\r\n* Update IDF libs and fix OPI PSRAM on S3\r\n\r\n* Add setMode function HardwareSerial.c to set the esp32 uart mode for use with RS485 auto RTS (#7935)\r\n\r\n* Added setMode function to set the esp32 uart mode\r\n\r\nUsed to set the esp32 uart mode for use with RS485 Half Duplex and the auto RTS pin mode. This will set/clear the RTS pin output to control the RE/DE pin on most RS485 chips.\r\n\r\n* Add Success (bool) return in some functions\r\n\r\n* Add Success (bool) return code to some functions\r\n\r\n* Add Success (bool) return to some functions\r\n\r\n* Add Success (bool) return to some functions\r\n\r\n* Fix uartSetRxTimeout return type\r\n\r\n---------\r\n\r\nCo-authored-by: Rodrigo Garcia <rodrigo.garcia@espressif.com>\r\n\r\n* Add support for esp-elf-gdb\r\n\r\n* WFG Crashfix (#8044)\r\n\r\n* Update component libs\r\n\r\n* IDF release/v5.1 (#8061)\r\n\r\n* IDF release/v5.1 bb9200acec\r\n\r\n* Update Esp.cpp\r\n\r\n* IDF release/v5.1 420ebd208a\r\n\r\n* Update esp32-hal-psram.c\r\n\r\n* Switch SDK to be an external package\r\n\r\n* fix path (#8096)\r\n\r\n* Makes UART work at any APB Frequency (#8097)\r\n\r\nFixes HardwareSerial to work with IDF 5.1 on any CPU/APB Frequency (240MHz to 10MHZ), including user created low power modes.\r\n\r\n* Add required callbacks for TinyUSB DFU\r\n\r\n* Update version to 3.0.0\r\n\r\n* Add ESP.getCoreVersion() and update ESP.getChipModel()\r\n\r\n* Update timer hal for the latest 5.1\r\n\r\n* Use separate RX and TX buffer sizes in HTTP client\r\n\r\noptimizes download by allowing up to 4K packets to be received\r\n\r\n* Rename clock tree enum name in latest 5.1\r\n\r\n* ESP32-H4 support was removed in ESP-IDF v5.1\r\n\r\n* IDF release/v5.1 2004bf4e11 (#8165)\r\n\r\n* Deinit previous bus first (#8180)\r\n\r\n* TIMER - add timer_started flag, fix timerEnd() + timer HW test (#8135)\r\n\r\n* Add timer_started flag and stop before disable\r\n\r\n* Fix timer HW test\r\n\r\n* TOUCH - Peripheral manager implementation (#8129)\r\n\r\n* Touch periman implemented\r\n\r\n* Deinit previous bus first\r\n\r\n* LEDC Refactoring - Peripheral manager implemented (#8126)\r\n\r\n* LEDC periman implementation\r\n\r\n* Fix examples\r\n\r\n* Rework tone\r\n\r\n* Update ledc docs\r\n\r\n* fix missing bracket\r\n\r\n* Update analog funtions esp32-hal.h\r\n\r\n* Update CameraWebServer example\r\n\r\n* Fix HiFreq_ADC example\r\n\r\n* minor fixes - typos\r\n\r\n* Avoid calling tone/notone when tone already runs on dif. pin\r\n\r\n* Remove unused channels_resolution\r\n\r\n* GPIO - Peripheral manager implementation (#8179)\r\n\r\n* periman-implementation\r\n\r\n* fix RGB_BUILTIN and remove space\r\n\r\n* Enforces more consistency into Peripheral Manager (#8188)\r\n\r\n* Avoid log_i() message the first time a bus is assigned\r\n\r\n* Prevent operation with ESP32_BUS_TYPE_INIT\r\n\r\n* keeps coding style\r\n\r\n* do not print messages on INIT bus type\r\n\r\n* [Arduino Core 3.0.0] RMT IDF5.1 Refactoring (#7994)\r\n\r\n* RMT IDF5.1 refactoring\r\n\r\n* Fixes initial value setting\r\n\r\n* removed rmtRead() with user callback\r\n\r\n* simplify/remove Read data structure\r\n\r\n* Deep API simplification\r\n\r\n* fixes the examples\r\n\r\n* fix rmt.h\r\n\r\n* adds support to APB different frequencies\r\n\r\n* fixes CI and not defined RGB_BUILTIN\r\n\r\n* new RMT API and examples\r\n\r\n* fixing commentaties\r\n\r\n* Update esp32-hal-rgb-led.c\r\n\r\n* changes Filter API\r\n\r\n* Fixes example with Filter API\r\n\r\n* Update PlatformIO scripts for the upcoming 3.0 core (#8183)\r\n\r\n* Update PlatformIO scripts for the upcoming 3.0 core\r\n\r\n* Dynamically select proper framework-arduinoespressif32-libs package\r\n\r\nWith this change the dev-platform will be dynamically configured to\r\npull the latest .zip package with precompiled libraries from extracted from\r\npackage_esp32_index.template.json\r\n\r\n* free memory on detach (#8264)\r\n\r\n* SPI - Peripheral manager implementation  (#8255)\r\n\r\n* spi periman implementation\r\n\r\n* fix header file\r\n\r\n* remove unused struct\r\n\r\n* fix missing braces\r\n\r\n* Update esp32-hal-rmt.c (#8216)\r\n\r\nOptimizing Peripheral Manager Test\r\n\r\n* I2C - Peripheral manager implementation (#8220)\r\n\r\n* i2c-master periman initial commit\r\n\r\n* i2c-master make detachbus static + comment remove\r\n\r\n* i2c-slave periman implementation\r\n\r\n* SetPinBus to INIT on i2cDeinits\r\n\r\n* Fix slave pins deinit\r\n\r\n* remove dbg logs\r\n\r\n* set ret to ESP_FAIL instead of returning\r\n\r\n* Fix warnings in hal-spi caused by pariman transition\r\n\r\n* Update esptool.py to version 4.6\r\n\r\n* Add platform support for ESP_SR\r\n\r\n* Add USB Type and valid pin check to periman\r\n\r\n* replace bus with spi->num+1 (#8279)\r\n\r\n* Remove default pins from SPI HAL\r\n\r\n* Add commented out handlers for esptool.js in TinyUSB CDC\r\n\r\nFor future use\r\n\r\n* Add build defines for host os and fqbn (for debug purposes)\r\n\r\n* Provide proper memory caps total size\r\n\r\n* Update Esp.cpp\r\n\r\n* SDMMC - Peripheral manager implementation (#8289)\r\n\r\n* sdmmc periman implemented\r\n\r\n* save pins when SOC_SDMMC_USE_IOMUX\r\n\r\n* IDF release/v5.1 4bc762621d (#8292)\r\n\r\n* Adds missing pinMode (#8312)\r\n\r\n* Adds missing pinMode\r\n\r\nThe example code lacks a pinMode() to initialize the GPIO 0 (button). In Arduino Core 3.0.0, it prints an error message when trying to read a not initialized GPIO.\r\n\r\n* Update KeyboardLogout.ino\r\n\r\nAdds <buttonPin> to keep code standard\r\n\r\n* Update KeyboardReprogram.ino\r\n\r\nAdds <buttonPin> to keep code standard\r\n\r\n* LEDC Fade implementation (#8338)\r\n\r\n* fade API + pointer fixes\r\n\r\n* Add fade api\r\n\r\n* Add fade example\r\n\r\n* update ledc docs\r\n\r\n* remove unused variables\r\n\r\n* fix path to example\r\n\r\n* Adds USB to Peripheral Manager - Arduino Core 3.0.0 (#8335)\r\n\r\n* ETHERNET - Peripheral manager implementation (#8297)\r\n\r\n* Peripheral manager implemented\r\n\r\n* remove unused variable\r\n\r\n* Add all RMII pins\r\n\r\n* fix typo\r\n\r\n* Adds HardwareSerial to Peripheral Manager Arduino 3.0.0 (#8328)\r\n\r\n* Do not limit ETHERNET in periman to only ESP32. SPI is also an option\r\n\r\n* Initial support for ESP32-C6 (#8337)\r\n\r\n* Add checks for SOC defines (#8351)\r\n\r\n* Add checks for SOC defines\r\n\r\n* Add SoC checks to BLE library\r\n\r\n* fix i2c compilation error\r\n\r\n* fix wrong placement of include\r\n\r\n* add check to SPI library\r\n\r\n* add check to USB library\r\n\r\n* add checks to Wire library\r\n\r\n* Feature/esp32h2 support (#8373)\r\n\r\n* Initial support for ESP32H2\r\n\r\n* Additional changes for ESP32H2\r\n\r\n* Update libs for ESP32H2\r\n\r\n* Fix flashing on ESP32-H2\r\n\r\n* Fix GPIO Configs for ESP32-C6 and ESP32-H2\r\n\r\n* Update Timer test sketch\r\n\r\n* Fix upload flash parameters\r\n\r\n* Use ets_write_char_uart instead of ets_printf in log_printfv\r\n\r\n* Print full chip report when log level is sufficient (#8282)\r\n\r\n* ESP32-C3 does not have ets_write_char_uart\r\n\r\n* Fix BLE gap event name\r\n\r\n* HW Testing - Pytest update (#8389)\r\n\r\n* update tests requirements\r\n\r\n* remove already handled components\r\n\r\n* Update version of pytest\r\n\r\n* Add missing ESP32-H2 to hil.yml\r\n\r\n* Updated FreeRTOS names (#8418)\r\n\r\n* HW Testing -  ESP32-C6 + ESP32-H2 fixes (#8404)\r\n\r\n* add C6/H2 to tests cfg.json\r\n\r\n* remove ,\r\n\r\n* workflow runs-on runner by matrix\r\n\r\n* Add need for arduino tag to select runner\r\n\r\n* Add cryptography to requirements.txt\r\n\r\n* Removed duplicate TX1 define for H2 (#8402)\r\n\r\n* Fix broken examples\r\n\r\n* Fixes RMT filter & idle timing and setup (#8359)\r\n\r\n* Fixes Filter and Idle parameter to uint32\r\n\r\n* Fixes Filter and Idle setup\r\n\r\n* Fixes it to 5.1Libs branch\r\n\r\n* fix RMT CLK source and Filter API\r\n\r\n* fixes missing ;\r\n\r\n* fixes missing ;\r\n\r\n* fixes RMT example\r\n\r\n* IDF release/v5.1 a7b62bbcaf (#8438)\r\n\r\n* Add workflow to build executables from python scripts (#8290)\r\n\r\n* Add workflow to build executables from python scripts\r\n\r\n* Push binary to tools\r\n\r\n* Enable executable signing on Windows\r\n\r\n* Update get.py\r\n\r\n* Push binary to tools\r\n\r\n* Try with multiple files\r\n\r\n* Try more actions\r\n\r\n* Try powershell\r\n\r\n* Restore tools so they do not get rebuilt\r\n\r\n* Finalize scripts\r\n\r\n* Push binary to tools\r\n\r\n* App rollback should be after PSRAM is initialized\r\n\r\n* Correcting RX1 to GPIO4 and TX1 to GPIO5 to be consistent with documentation. Previous pin use works but is inconsistent with C6 docs.\r\n\r\n* Fixes Memory Leak (#8486)\r\n\r\n* fixes preprocessor test (#8485)\r\n\r\n* fixes preprocessor test\r\n\r\nWhen using `#define USE_SOFT_AP` \r\nChange\r\n`&& not USE_SOFT_AP` ==> `&& !defined(USE_SOFT_AP)`\r\n\r\n* Adds any BLE capable device in WiFiProv.ino\r\n\r\nRemoving ESP32 restriction for BLE Provisioning.\r\n\r\n* fix flash mode read out for C6\r\n\r\n* Add option for custom partitions without restrictions\r\n\r\n* SD_MMC update (#8298)\r\n\r\n* Updated SD_MMC lib and examples\r\n\r\n* Removed getter implementation and commented usage in examples\r\n\r\n* squashed updates\r\n\r\n* IDF release/v5.1 f0437b945f (#8599)\r\n\r\n* Update package_esp32_index.template.json\r\n\r\n* Fix printf format build error in BTAdvertisedDeviceSet.cpp\r\n\r\n---------\r\n\r\nCo-authored-by: Pedro Minatel <pedro.minatel@espressif.com>\r\nCo-authored-by: Rodrigo Garcia <rodrigo.garcia@espressif.com>\r\nCo-authored-by: Ha Thach <thach@tinyusb.org>\r\nCo-authored-by: Martin Turski <quiret@vfemail.net>\r\nCo-authored-by: raviypujar <raviypujar@gmail.com>\r\nCo-authored-by: Jason2866 <24528715+Jason2866@users.noreply.github.com>\r\nCo-authored-by: Tom\u00e1\u0161 Piln\u00fd <34927466+PilnyTomas@users.noreply.github.com>\r\nCo-authored-by: Jan Proch\u00e1zka <90197375+P-R-O-C-H-Y@users.noreply.github.com>\r\nCo-authored-by: Daniel Berlin <dberlin@dberlin.org>\r\nCo-authored-by: Nima Askari (\u0646\u06cc\u0645\u0627 \u0639\u0633\u06a9\u0631\u06cc) <nimaltd@yahoo.com>\r\nCo-authored-by: rtpmsys <106180646+rtpmsys@users.noreply.github.com>\r\nCo-authored-by: bytiful <55647551+bytiful@users.noreply.github.com>\r\nCo-authored-by: tmfarrington <tmfarrington@users.noreply.github.com>\r\nCo-authored-by: Krzysiek S <chris.streh@gmail.com>\r\nCo-authored-by: surt <carl.olsson@gmail.com>\r\nCo-authored-by: Max Scheffler <max.scheffler@pm.me>\r\nCo-authored-by: Clemens Kirchgatterer <clemens@1541.org>\r\nCo-authored-by: Peter Pan's Techland <twinkle-pirate@hotmail.com>\r\nCo-authored-by: Roman <programmeofficemilkyway@gmail.com>\r\nCo-authored-by: Eistee <Eistee82@users.noreply.github.com>\r\nCo-authored-by: David McCurley <44048235+mrengineer7777@users.noreply.github.com>\r\nCo-authored-by: Gaya3N25 <30388176+Gaya3N25@users.noreply.github.com>\r\nCo-authored-by: renebohne <rene.bohne@gmail.com>\r\nCo-authored-by: Oliv\u00e9r Rem\u00e9ny <25034625+remenyo@users.noreply.github.com>\r\nCo-authored-by: davidk88 <david.kotar@gmail.com>\r\nCo-authored-by: Vojt\u011bch Barto\u0161ka <76958047+VojtechBartoska@users.noreply.github.com>\r\nCo-authored-by: James Armstrong <jamesarmstrong3@me.com>\r\nCo-authored-by: Valerii Koval <valeros@users.noreply.github.com>\r\nCo-authored-by: Peter G. Jensen <root@petergjoel.dk>",
            "additions": 47,
            "deletions": 53,
            "change_type": "MODIFY",
            "diff": "@@ -6,12 +6,11 @@\n \n static TaskHandle_t _tone_task = NULL;\n static QueueHandle_t _tone_queue = NULL;\n-static uint8_t _channel = 0;\n+static int8_t _pin = -1;\n \n typedef enum{\n   TONE_START,\n-  TONE_END,\n-  TONE_SET_CHANNEL\n+  TONE_END\n } tone_cmd_t;\n \n typedef struct{\n@@ -19,7 +18,6 @@ typedef struct{\n   uint8_t pin;\n   unsigned int frequency;\n   unsigned long duration;\n-  uint8_t channel;\n } tone_msg_t;\n \n static void tone_task(void*){\n@@ -28,28 +26,28 @@ static void tone_task(void*){\n     xQueueReceive(_tone_queue, &tone_msg, portMAX_DELAY);\n     switch(tone_msg.tone_cmd){\n       case TONE_START:\n-        log_d(\"Task received from queue TONE_START: _pin=%d, frequency=%u Hz, duration=%lu ms\", tone_msg.pin, tone_msg.frequency, tone_msg.duration);\n+        log_d(\"Task received from queue TONE_START: pin=%d, frequency=%u Hz, duration=%lu ms\", tone_msg.pin, tone_msg.frequency, tone_msg.duration);\n \n-        log_d(\"Setup LED controll on channel %d\", _channel);\n-        ledcAttachPin(tone_msg.pin, _channel);\n-        ledcWriteTone(_channel, tone_msg.frequency);\n+        if (_pin == -1) {\n+          if (ledcAttach(tone_msg.pin, tone_msg.frequency, 10) == 0) {\n+              log_e(\"Tone start failed\");\n+              break;\n+          }\n+          _pin = tone_msg.pin;\n+        }\n+        ledcWriteTone(tone_msg.pin, tone_msg.frequency);\n \n         if(tone_msg.duration){\n           delay(tone_msg.duration);\n-          ledcDetachPin(tone_msg.pin);\n-          ledcWriteTone(_channel, 0);\n+          ledcWriteTone(tone_msg.pin, 0);\n         }\n         break;\n \n       case TONE_END:\n         log_d(\"Task received from queue TONE_END: pin=%d\", tone_msg.pin);\n-        ledcDetachPin(tone_msg.pin);\n-        ledcWriteTone(_channel, 0);\n-        break;\n-\n-      case TONE_SET_CHANNEL:\n-        log_d(\"Task received from queue TONE_SET_CHANNEL: channel=%d\", tone_msg.channel);\n-        _channel = tone_msg.channel;\n+        ledcWriteTone(tone_msg.pin, 0);\n+        ledcDetach(tone_msg.pin);\n+        _pin = -1;\n         break;\n \n       default: ; // do nothing\n@@ -87,49 +85,45 @@ static int tone_init(){\n   return 1; // OK\n }\n \n-void setToneChannel(uint8_t channel){\n-  log_d(\"channel=%d\", channel);\n-  if(tone_init()){\n-    tone_msg_t tone_msg = {\n-      .tone_cmd = TONE_SET_CHANNEL,\n-      .pin = 0, // Ignored\n-      .frequency = 0, // Ignored\n-      .duration = 0, // Ignored\n-      .channel = channel\n-    };\n-    xQueueSend(_tone_queue, &tone_msg, portMAX_DELAY);\n-  }\n-}\n-\n-void noTone(uint8_t _pin){\n+void noTone(uint8_t pin){\n   log_d(\"noTone was called\");\n-  if(tone_init()){\n-    tone_msg_t tone_msg = {\n-      .tone_cmd = TONE_END,\n-      .pin = _pin,\n-      .frequency = 0, // Ignored\n-      .duration = 0, // Ignored\n-      .channel = 0 // Ignored\n-    };\n-    xQueueSend(_tone_queue, &tone_msg, portMAX_DELAY);\n+  if(_pin == pin) {\n+    if(tone_init()){\n+      tone_msg_t tone_msg = {\n+        .tone_cmd = TONE_END,\n+        .pin = pin,\n+        .frequency = 0, // Ignored\n+        .duration = 0, // Ignored\n+      };\n+      xQueueSend(_tone_queue, &tone_msg, portMAX_DELAY);\n+    }\n+  }\n+  else {\n+    log_e(\"Tone is not running on given pin %d\", pin);\n   }\n }\n \n // parameters:\n-// _pin - pin number which will output the signal\n+// pin - pin number which will output the signal\n // frequency - PWM frequency in Hz\n // duration - time in ms - how long will the signal be outputted.\n //   If not provided, or 0 you must manually call noTone to end output\n-void tone(uint8_t _pin, unsigned int frequency, unsigned long duration){\n-  log_d(\"_pin=%d, frequency=%u Hz, duration=%lu ms\", _pin, frequency, duration);\n-  if(tone_init()){\n-    tone_msg_t tone_msg = {\n-      .tone_cmd = TONE_START,\n-      .pin = _pin,\n-      .frequency = frequency,\n-      .duration = duration,\n-      .channel = 0 // Ignored\n-    };\n-    xQueueSend(_tone_queue, &tone_msg, portMAX_DELAY);\n+void tone(uint8_t pin, unsigned int frequency, unsigned long duration){\n+  log_d(\"pin=%d, frequency=%u Hz, duration=%lu ms\", pin, frequency, duration);\n+  if(_pin == -1 || _pin == pin) {\n+    if(tone_init()){\n+      tone_msg_t tone_msg = {\n+        .tone_cmd = TONE_START,\n+        .pin = pin,\n+        .frequency = frequency,\n+        .duration = duration,\n+      };\n+      xQueueSend(_tone_queue, &tone_msg, portMAX_DELAY);\n+      return;\n+    }\n+  }\n+  else {\n+    log_e(\"Tone is still running on pin %d, call noTone(%d) first!\", _pin, _pin);\n+    return;\n   }\n }\n",
            "comment_added_diff": {
                "95": "        .frequency = 0, // Ignored",
                "96": "        .duration = 0, // Ignored",
                "107": "// pin - pin number which will output the signal"
            },
            "comment_deleted_diff": {
                "95": "      .pin = 0, // Ignored",
                "96": "      .frequency = 0, // Ignored",
                "97": "      .duration = 0, // Ignored",
                "110": "      .frequency = 0, // Ignored",
                "111": "      .duration = 0, // Ignored",
                "112": "      .channel = 0 // Ignored",
                "119": "// _pin - pin number which will output the signal",
                "131": "      .channel = 0 // Ignored"
            },
            "comment_modified_diff": {
                "95": "      .pin = 0, // Ignored",
                "96": "      .frequency = 0, // Ignored"
            }
        }
    ],
    "USB.h": [],
    "USBCDC.cpp": [
        {
            "commit": "6f7a1ca76ada4d705d79ce863450c91349327a79",
            "timestamp": "2023-10-05T14:54:25+03:00",
            "author": "Me No Dev",
            "commit_message": "ESP-IDF v5.1 (#7733)\n\n* Initial changes to compile under ESP-IDF v5.1\r\n\r\n* Initial import for ESP-IDF v5.1 libs\r\n\r\n* Update toolchain\r\n\r\n* Update esp32-hal-psram.c\r\n\r\n* Add missing LDs\r\n\r\n* Update platform.txt\r\n\r\n* Stop some CI jobs, because they will always fail\r\n\r\n* Fix examples\r\n\r\n* Update app_httpd.cpp\r\n\r\n* Update ResetReason.ino\r\n\r\n* Warnings fixes\r\n\r\n* Added the example guideline and template (#7665)\r\n\r\n* Added the example guideline and template\r\n\r\n* PR review changes with some typos and grammar fixes\r\n\r\n* Changes according to the PR review\r\n\r\n* Added ESP32-S3 link to the datasheet (#7738)\r\n\r\n* Update HiFreq_ADC.ino\r\n\r\n* Replace periph_ctrl.h use because of deprecation\r\n\r\n* Replace esp_spi_flash.h use because of deprecation\r\n\r\n* Add includes to male mDNS::enableWorkstation compile\r\n\r\n* Fix ssl_client mbedtls_pk_parse_key callback\r\n\r\n* Update temperature sensor driver\r\n\r\n* Allow sketch_utils to compile with arduino-cli\r\n\r\n* Run CI with arduino-cli\r\n\r\n* Fix arduino-cli CI build on Windows\r\n\r\n* Refactor platform.txt to not use components installed through the board manager when running from git\r\n\r\n* Initial Peripheral Manager Implementation\r\n\r\n* Update SigmaDelta driver to use the new ESP-IDF driver API\r\n\r\n* Small improvements to peripheral manager and SigmaDelta\r\n\r\n* Remove deleted function from SigmaDelta header\r\n\r\n* Update DAC driver to use the new ESP-IDF driver API\r\n\r\n* Adds softAp(String) to make it compatible with ESP8266 (#7801)\r\n\r\n* Fix commentary (#7800)\r\n\r\nMinor fix based on observation done in https://github.com/espressif/arduino-esp32/issues/7795#issuecomment-1416868611\r\n\r\n* add adafruit new board feather esp32s2 reserve tft (#7794)\r\n\r\n* bugfix: add <stdint.h> for uint8_t to avoid compilation failure (GCC 11.2.0) (#7744)\r\n\r\n* Adding 3rd party boards for VALTRACK-V4-VTS-ESP32-C3 & VALTRACK-V4-MFW-ESP32-C3 (#7735)\r\n\r\n* Added VALTRACK-V4-VTS-ESP32-C3 board definition\r\n\r\nCreated pins_arduino.h & made changes to boards.txt with necessary changes\r\n\r\n* Modified the URL\r\n\r\n* Renamed json\r\n\r\n* renamed all auRL\r\n\r\n* Adding VALTRACK-V4 series board definitions\r\n\r\nAdded VALTRACK-V4-VTS-ESP32C3 & VALTRACK-V4-MFW-ESP32-C3 board variants\r\n\r\n* Adding VALTRACK-V4 series board definitions\r\n\r\nAdded VALTRACK-V4-VTS-ESP32C3 & VALTRACK-V4-MFW-ESP32-C3 board variants\r\n\r\n* Reverted package_esp32_index.template.json\r\n\r\nrestored package_esp32_index.template.json from edits\r\n\r\n* Reverted package_esp32_index.template.json\r\n\r\nAdded new line to package_esp32_index.template.json\r\n\r\n* Update Platformio CI (#7725)\r\n\r\n* WiFiClient example fix (#7711)\r\n\r\n* Modified WiFiClient example to use thingspeak instead of non-functionig sparkfun\r\n\r\n* Moved instructions to README\r\n\r\n* Fixed spelling\r\n\r\n* Added link to S3 datasheet\r\n\r\n---------\r\n\r\nCo-authored-by: Jan Proch\u00e1zka <90197375+P-R-O-C-H-Y@users.noreply.github.com>\r\n\r\n* Mirror update from Heltec repository (#7709)\r\n\r\nHeltec updated the I2C pins in https://github.com/Heltec-Aaron-Lee/WiFi_Kit_series/commit/b10f4bf85d13fd01be80dcdb0eb59e6a8c8ba19a\r\n\r\n* Fixes BLE data printing (#7699)\r\n\r\n* Fixes BLE data printing\r\n\r\nBLE data has no '\\0' terminator, therefore it can't be printed as a regular C string.\r\nThis fix just prints the BLE data based on its length.\r\n\r\n* Simplify printing to a single call\r\n\r\n* split menu options + lora_32_V3 fix (#7697)\r\n\r\n* Change header gaurd name (#7696)\r\n\r\n* Fix Name (#7691)\r\n\r\nWrong name in definitions.\r\n\r\n* Fix error in WiFiClient.cpp where the connect function fails for timeouts below 1 second (#7686)\r\n\r\n* Update WiFiClient.cpp\r\n\r\nThis change will allow specifying connect timeouts below 1 second. Without this change, if connect timeouts under 1 second are given, the connect defaults to 0ms and fails. \r\nThis will also allow timeouts in fractions of seconds, e.g. 1500ms. Without this change, connect timeouts are truncated to full second increments.\r\n\r\n* Make parameter timeout_ms clear\r\n\r\n* Change connection timeout_ms name for clarity\r\n\r\n---------\r\n\r\nCo-authored-by: Rodrigo Garcia <rodrigo.garcia@espressif.com>\r\n\r\n* fixed the function header (#7674)\r\n\r\n* fixed the function header\r\n\r\n* fixed function name and paramaters\r\n\r\n---------\r\n\r\nCo-authored-by: Jan Procha\u0301zka <90197375+P-R-O-C-H-Y@users.noreply.github.com>\r\n\r\n* Ticker fix solving #6155 (#7664)\r\n\r\n* Wrapped Ticker functions with #pragma disabling -Wcast-function-type\r\n\r\n* Revert \"Wrapped Ticker functions with #pragma disabling -Wcast-function-type\"\r\n\r\nThis reverts commit 160be7e67a10d01b6e44c4bf2521c0ccd6348976.\r\n\r\n* Fixed Ticker example\r\n\r\n* Modified Ticker example\r\n\r\n* Fixed LED_BUILTIN err for ESP32\r\n\r\n---------\r\n\r\nCo-authored-by: Jan Proch\u00e1zka <90197375+P-R-O-C-H-Y@users.noreply.github.com>\r\n\r\n* setPins fix ESP32 \"specified pins are not supported by this chip.\" (#7646)\r\n\r\n[ESP32: SDMMCFS::begin hardcodes the usage of slot 1, only check if the pins match slot 1 pins.]\r\n\r\nsetPins() was testing pins D1, D2 and D3 all against D1 ... fine in 1 pin mode when all are -1 not so much if you're trying to get 4 pin mode working.\r\nI now see this function doesn't really do anything on the ESP32...accept now correctly checks that you are trying to use the slot 1 pins.\r\n\r\nCo-authored-by: Jan Proch\u00e1zka <90197375+P-R-O-C-H-Y@users.noreply.github.com>\r\n\r\n* Allow passing IP as connect method parameter in WiFiClientSecure and skip unnecessary host-ip conversions (#7643)\r\n\r\n* Add LED_BUILTIN* definitions and initialization for LEDs to stop them floating. (#7636)\r\n\r\nCo-authored-by: Rodrigo Garcia <rodrigo.garcia@espressif.com>\r\n\r\n* Expand path to tinuf2 image when checking existence in platformio-build.py (#7631)\r\n\r\n* Expand path to tinuf2 image when checking existence\r\n\r\n* More isFiles fixed\r\n\r\n* Remove (useless) trailing semicolon from Print.cpp (#7622)\r\n\r\n* ADD: New variant Edgebox-ESP-100 (#7771)\r\n\r\n* ADD: New variant Edgebox-ESP-100\r\n\r\n* FIX: Edgebox-ESP-100 Board.txt usb mode option change back to default value as ESP32S3\r\n\r\n* Add Crabik Slot ESP32-S3 board (#7790)\r\n\r\n* Added Crabik Slot ESP32-S3\r\n\r\n* Adding CPU frequency settings and removing excess from partition scheme settings\r\n\r\n* new variant LilyGO T-Display-S3 (#7763)\r\n\r\n* new variant LilyGO T-Display-S3\r\n\r\nhttps://github.com/Xinyuan-LilyGO/T-Display-S3\r\n\r\n* Add boards.txt definition\r\n\r\n---------\r\n\r\nCo-authored-by: Me No Dev <me-no-dev@users.noreply.github.com>\r\n\r\n* Update get.py to support Apple ARM64\r\n\r\n* Update package_esp32_index.template.json\r\n\r\n* WString Return bool (#7774)\r\n\r\n* Add Roboheart Hercules development board to the esp32-core (#7672)\r\n\r\n* added Roboheart Hercules pin definitions and board.txt entries\r\n\r\n* added package_roboheat.json for prototyping\r\n\r\n* Roboheart Hercules pins\r\n\r\n* Updated the pins\r\n\r\n* Delete package_roboheart.json\r\n\r\n* Requested changes\r\n\r\n---------\r\n\r\nCo-authored-by: renebohne <rene.bohne@gmail.com>\r\n\r\n* Reword \"ESP-IDF as Component\" (#7812)\r\n\r\nI think \"Arduino as an ESP-IDF component\" or just \"As ESP-IDF component\" instead of  \"ESP-IDF as Component\" is more correct way to name the link.\r\n\r\n1. \"ESP-IDF as Component\" would imply that ESP-IDF is some sort of library for Arduino, which is (IMO) misleading, because it's true the other way around.\r\n2. It's written as \"Arduino as an ESP-IDF component\" on the webpage it points to as well.\r\n\r\n- Also I removed the capitalization from \"Component\" as I have not found a reason why is it capitalized.\r\n\r\n* add new board Adafruit Feather ESP32-S3 Reverse TFT (#7811)\r\n\r\n* Multi threading examples (tasks, queues, semaphores, mutexes) (#7660)\r\n\r\n* Moved and renamed example ESP32/FreeRTOS to MultiThreading/BasicMultiThreading\r\n\r\n* Added dummy files\r\n\r\n* Modified original example\r\n\r\n* Fixed BasicMultiThreading.ino\r\n\r\n* Added Example demonstrating use of queues\r\n\r\n* Extended info in BasicMultiThreading\r\n\r\n* Renamed Queues to singular Queue\r\n\r\n* Added Mutex example\r\n\r\n* Added Semaphore example\r\n\r\n* Moved info from example to README\r\n\r\n* Moved doc from Mutex to README\r\n\r\n* Added Queue README\r\n\r\n* Removed unecesary text\r\n\r\n* Fixed grammar\r\n\r\n* Increased stack size for Sempahore example\r\n\r\n* Added headers into .ino files\r\n\r\n* Added word Example at the end of title in README\r\n\r\n* removed unused line\r\n\r\n* Added forgotten README\r\n\r\n* Modified BasicMultiThreading example\r\n\r\n* Added missing S3 entry in README\r\n\r\n* moved location\r\n\r\n* Update ESP-IDF libs\r\n\r\n* Update CMakeLists.txt\r\n\r\n* Update esptool to v4.4\r\n\r\n* Add function timerAttachInterruptFlag (#7809)\r\n\r\n* Update esptool to v4.5\r\n\r\n* ADC refactoring (#7827)\r\n\r\n* Adc refactored + periman implementation\r\n\r\nPeripheral manager still needs to be checked if the implementation is right.\r\n\r\n* switched to working solution for milivolts read\r\n\r\n* Periman detachbus fix\r\n\r\n* coding style\r\n\r\n* fix CI warnings\r\n\r\n* fix FreeRTOS example\r\n\r\n* Update ETH.cpp\r\n\r\n* Update FunctionalInterruptStruct.ino\r\n\r\n* Update package_esp32_index.template.json\r\n\r\n* Update package_esp32_index.template.json\r\n\r\n* Fixes for the latest IDF v5.1\r\n\r\n* update esp-idf libs and toolchain\r\n\r\n* Turn OFF auto crystal frequency for ESP32 (needed by TWAI)\r\n\r\n* Update examples\r\n\r\n* Switch build to mostly use flags from files\r\n\r\nIncludes can not be done this way\r\n\r\n* Reorganize flag files\r\n\r\n* Optimize chip build flags further\r\n\r\n* Revert defines from file. MBEDTLS_CONFIG_FILE does not properly expand\r\n\r\n* Add support for includes and defines from file\r\n\r\n* Replace old sdk path references in platform.txt\r\n\r\n* use gcc-ar (#8013)\r\n\r\n* Makes F_CPU generic for all SoC (#8007)\r\n\r\nBased on CONFIG_ESP_DEFAULT_CPU_FREQ_MHZ that is correctly defined in the sdkconfig file for each SoC.\r\n\r\n* TIMER refactoring (#7904)\r\n\r\n* refactor using GPtimer\r\n\r\n* Updated timer HW test\r\n\r\n* fix examples\r\n\r\n* Add v2.0.7 in issue template (#7871)\r\n\r\n* refactor using GPtimer\r\n\r\n* Updated timer HW test\r\n\r\n* fix examples\r\n\r\n* Revert \"Add v2.0.7 in issue template (#7871)\"\r\n\r\nThis reverts commit fcc3b17d62ff57861f8913ca1f142fd5163b7457.\r\n\r\n* Update upload-artifact to v3 in HW CI\r\n\r\n* Revert \"Update upload-artifact to v3 in HW CI\"\r\n\r\nThis reverts commit 1ba228071718ba37c4e26d98db22f77b2a7364a6.\r\n\r\n* replace resolution with frequency\r\n\r\n* remove count_down option\r\n\r\n* countup removed from examples + header\r\n\r\n* Refactored timer object\r\n\r\n* code cleanup + examples and tests fixes\r\n\r\n* TimerAlarm fix\r\n\r\n---------\r\n\r\nCo-authored-by: Vojt\u011bch Barto\u0161ka <76958047+VojtechBartoska@users.noreply.github.com>\r\n\r\n* [Docs] ADC and Timer API Update (+some docs fixes) (#7906)\r\n\r\n* updated docs\r\n\r\n* remove hall sensor docs\r\n\r\nRemoved Hall sensor documentation as its no longer supported in IDF-5\r\n\r\n* Fixed ESPNow examples location in docs\r\n\r\n* Last timer refactored API + gpio small fix\r\n\r\n* AlarmWrite fix\r\n\r\n* Fixes APLL/PLL with RTC Frequency (#8025)\r\n\r\nlog_d() was displaying APLL for any SoC, but S3 and C3 has not such option, causing compilation errors.\r\n\r\n* Update IDF libs and fix OPI PSRAM on S3\r\n\r\n* Add setMode function HardwareSerial.c to set the esp32 uart mode for use with RS485 auto RTS (#7935)\r\n\r\n* Added setMode function to set the esp32 uart mode\r\n\r\nUsed to set the esp32 uart mode for use with RS485 Half Duplex and the auto RTS pin mode. This will set/clear the RTS pin output to control the RE/DE pin on most RS485 chips.\r\n\r\n* Add Success (bool) return in some functions\r\n\r\n* Add Success (bool) return code to some functions\r\n\r\n* Add Success (bool) return to some functions\r\n\r\n* Add Success (bool) return to some functions\r\n\r\n* Fix uartSetRxTimeout return type\r\n\r\n---------\r\n\r\nCo-authored-by: Rodrigo Garcia <rodrigo.garcia@espressif.com>\r\n\r\n* Add support for esp-elf-gdb\r\n\r\n* WFG Crashfix (#8044)\r\n\r\n* Update component libs\r\n\r\n* IDF release/v5.1 (#8061)\r\n\r\n* IDF release/v5.1 bb9200acec\r\n\r\n* Update Esp.cpp\r\n\r\n* IDF release/v5.1 420ebd208a\r\n\r\n* Update esp32-hal-psram.c\r\n\r\n* Switch SDK to be an external package\r\n\r\n* fix path (#8096)\r\n\r\n* Makes UART work at any APB Frequency (#8097)\r\n\r\nFixes HardwareSerial to work with IDF 5.1 on any CPU/APB Frequency (240MHz to 10MHZ), including user created low power modes.\r\n\r\n* Add required callbacks for TinyUSB DFU\r\n\r\n* Update version to 3.0.0\r\n\r\n* Add ESP.getCoreVersion() and update ESP.getChipModel()\r\n\r\n* Update timer hal for the latest 5.1\r\n\r\n* Use separate RX and TX buffer sizes in HTTP client\r\n\r\noptimizes download by allowing up to 4K packets to be received\r\n\r\n* Rename clock tree enum name in latest 5.1\r\n\r\n* ESP32-H4 support was removed in ESP-IDF v5.1\r\n\r\n* IDF release/v5.1 2004bf4e11 (#8165)\r\n\r\n* Deinit previous bus first (#8180)\r\n\r\n* TIMER - add timer_started flag, fix timerEnd() + timer HW test (#8135)\r\n\r\n* Add timer_started flag and stop before disable\r\n\r\n* Fix timer HW test\r\n\r\n* TOUCH - Peripheral manager implementation (#8129)\r\n\r\n* Touch periman implemented\r\n\r\n* Deinit previous bus first\r\n\r\n* LEDC Refactoring - Peripheral manager implemented (#8126)\r\n\r\n* LEDC periman implementation\r\n\r\n* Fix examples\r\n\r\n* Rework tone\r\n\r\n* Update ledc docs\r\n\r\n* fix missing bracket\r\n\r\n* Update analog funtions esp32-hal.h\r\n\r\n* Update CameraWebServer example\r\n\r\n* Fix HiFreq_ADC example\r\n\r\n* minor fixes - typos\r\n\r\n* Avoid calling tone/notone when tone already runs on dif. pin\r\n\r\n* Remove unused channels_resolution\r\n\r\n* GPIO - Peripheral manager implementation (#8179)\r\n\r\n* periman-implementation\r\n\r\n* fix RGB_BUILTIN and remove space\r\n\r\n* Enforces more consistency into Peripheral Manager (#8188)\r\n\r\n* Avoid log_i() message the first time a bus is assigned\r\n\r\n* Prevent operation with ESP32_BUS_TYPE_INIT\r\n\r\n* keeps coding style\r\n\r\n* do not print messages on INIT bus type\r\n\r\n* [Arduino Core 3.0.0] RMT IDF5.1 Refactoring (#7994)\r\n\r\n* RMT IDF5.1 refactoring\r\n\r\n* Fixes initial value setting\r\n\r\n* removed rmtRead() with user callback\r\n\r\n* simplify/remove Read data structure\r\n\r\n* Deep API simplification\r\n\r\n* fixes the examples\r\n\r\n* fix rmt.h\r\n\r\n* adds support to APB different frequencies\r\n\r\n* fixes CI and not defined RGB_BUILTIN\r\n\r\n* new RMT API and examples\r\n\r\n* fixing commentaties\r\n\r\n* Update esp32-hal-rgb-led.c\r\n\r\n* changes Filter API\r\n\r\n* Fixes example with Filter API\r\n\r\n* Update PlatformIO scripts for the upcoming 3.0 core (#8183)\r\n\r\n* Update PlatformIO scripts for the upcoming 3.0 core\r\n\r\n* Dynamically select proper framework-arduinoespressif32-libs package\r\n\r\nWith this change the dev-platform will be dynamically configured to\r\npull the latest .zip package with precompiled libraries from extracted from\r\npackage_esp32_index.template.json\r\n\r\n* free memory on detach (#8264)\r\n\r\n* SPI - Peripheral manager implementation  (#8255)\r\n\r\n* spi periman implementation\r\n\r\n* fix header file\r\n\r\n* remove unused struct\r\n\r\n* fix missing braces\r\n\r\n* Update esp32-hal-rmt.c (#8216)\r\n\r\nOptimizing Peripheral Manager Test\r\n\r\n* I2C - Peripheral manager implementation (#8220)\r\n\r\n* i2c-master periman initial commit\r\n\r\n* i2c-master make detachbus static + comment remove\r\n\r\n* i2c-slave periman implementation\r\n\r\n* SetPinBus to INIT on i2cDeinits\r\n\r\n* Fix slave pins deinit\r\n\r\n* remove dbg logs\r\n\r\n* set ret to ESP_FAIL instead of returning\r\n\r\n* Fix warnings in hal-spi caused by pariman transition\r\n\r\n* Update esptool.py to version 4.6\r\n\r\n* Add platform support for ESP_SR\r\n\r\n* Add USB Type and valid pin check to periman\r\n\r\n* replace bus with spi->num+1 (#8279)\r\n\r\n* Remove default pins from SPI HAL\r\n\r\n* Add commented out handlers for esptool.js in TinyUSB CDC\r\n\r\nFor future use\r\n\r\n* Add build defines for host os and fqbn (for debug purposes)\r\n\r\n* Provide proper memory caps total size\r\n\r\n* Update Esp.cpp\r\n\r\n* SDMMC - Peripheral manager implementation (#8289)\r\n\r\n* sdmmc periman implemented\r\n\r\n* save pins when SOC_SDMMC_USE_IOMUX\r\n\r\n* IDF release/v5.1 4bc762621d (#8292)\r\n\r\n* Adds missing pinMode (#8312)\r\n\r\n* Adds missing pinMode\r\n\r\nThe example code lacks a pinMode() to initialize the GPIO 0 (button). In Arduino Core 3.0.0, it prints an error message when trying to read a not initialized GPIO.\r\n\r\n* Update KeyboardLogout.ino\r\n\r\nAdds <buttonPin> to keep code standard\r\n\r\n* Update KeyboardReprogram.ino\r\n\r\nAdds <buttonPin> to keep code standard\r\n\r\n* LEDC Fade implementation (#8338)\r\n\r\n* fade API + pointer fixes\r\n\r\n* Add fade api\r\n\r\n* Add fade example\r\n\r\n* update ledc docs\r\n\r\n* remove unused variables\r\n\r\n* fix path to example\r\n\r\n* Adds USB to Peripheral Manager - Arduino Core 3.0.0 (#8335)\r\n\r\n* ETHERNET - Peripheral manager implementation (#8297)\r\n\r\n* Peripheral manager implemented\r\n\r\n* remove unused variable\r\n\r\n* Add all RMII pins\r\n\r\n* fix typo\r\n\r\n* Adds HardwareSerial to Peripheral Manager Arduino 3.0.0 (#8328)\r\n\r\n* Do not limit ETHERNET in periman to only ESP32. SPI is also an option\r\n\r\n* Initial support for ESP32-C6 (#8337)\r\n\r\n* Add checks for SOC defines (#8351)\r\n\r\n* Add checks for SOC defines\r\n\r\n* Add SoC checks to BLE library\r\n\r\n* fix i2c compilation error\r\n\r\n* fix wrong placement of include\r\n\r\n* add check to SPI library\r\n\r\n* add check to USB library\r\n\r\n* add checks to Wire library\r\n\r\n* Feature/esp32h2 support (#8373)\r\n\r\n* Initial support for ESP32H2\r\n\r\n* Additional changes for ESP32H2\r\n\r\n* Update libs for ESP32H2\r\n\r\n* Fix flashing on ESP32-H2\r\n\r\n* Fix GPIO Configs for ESP32-C6 and ESP32-H2\r\n\r\n* Update Timer test sketch\r\n\r\n* Fix upload flash parameters\r\n\r\n* Use ets_write_char_uart instead of ets_printf in log_printfv\r\n\r\n* Print full chip report when log level is sufficient (#8282)\r\n\r\n* ESP32-C3 does not have ets_write_char_uart\r\n\r\n* Fix BLE gap event name\r\n\r\n* HW Testing - Pytest update (#8389)\r\n\r\n* update tests requirements\r\n\r\n* remove already handled components\r\n\r\n* Update version of pytest\r\n\r\n* Add missing ESP32-H2 to hil.yml\r\n\r\n* Updated FreeRTOS names (#8418)\r\n\r\n* HW Testing -  ESP32-C6 + ESP32-H2 fixes (#8404)\r\n\r\n* add C6/H2 to tests cfg.json\r\n\r\n* remove ,\r\n\r\n* workflow runs-on runner by matrix\r\n\r\n* Add need for arduino tag to select runner\r\n\r\n* Add cryptography to requirements.txt\r\n\r\n* Removed duplicate TX1 define for H2 (#8402)\r\n\r\n* Fix broken examples\r\n\r\n* Fixes RMT filter & idle timing and setup (#8359)\r\n\r\n* Fixes Filter and Idle parameter to uint32\r\n\r\n* Fixes Filter and Idle setup\r\n\r\n* Fixes it to 5.1Libs branch\r\n\r\n* fix RMT CLK source and Filter API\r\n\r\n* fixes missing ;\r\n\r\n* fixes missing ;\r\n\r\n* fixes RMT example\r\n\r\n* IDF release/v5.1 a7b62bbcaf (#8438)\r\n\r\n* Add workflow to build executables from python scripts (#8290)\r\n\r\n* Add workflow to build executables from python scripts\r\n\r\n* Push binary to tools\r\n\r\n* Enable executable signing on Windows\r\n\r\n* Update get.py\r\n\r\n* Push binary to tools\r\n\r\n* Try with multiple files\r\n\r\n* Try more actions\r\n\r\n* Try powershell\r\n\r\n* Restore tools so they do not get rebuilt\r\n\r\n* Finalize scripts\r\n\r\n* Push binary to tools\r\n\r\n* App rollback should be after PSRAM is initialized\r\n\r\n* Correcting RX1 to GPIO4 and TX1 to GPIO5 to be consistent with documentation. Previous pin use works but is inconsistent with C6 docs.\r\n\r\n* Fixes Memory Leak (#8486)\r\n\r\n* fixes preprocessor test (#8485)\r\n\r\n* fixes preprocessor test\r\n\r\nWhen using `#define USE_SOFT_AP` \r\nChange\r\n`&& not USE_SOFT_AP` ==> `&& !defined(USE_SOFT_AP)`\r\n\r\n* Adds any BLE capable device in WiFiProv.ino\r\n\r\nRemoving ESP32 restriction for BLE Provisioning.\r\n\r\n* fix flash mode read out for C6\r\n\r\n* Add option for custom partitions without restrictions\r\n\r\n* SD_MMC update (#8298)\r\n\r\n* Updated SD_MMC lib and examples\r\n\r\n* Removed getter implementation and commented usage in examples\r\n\r\n* squashed updates\r\n\r\n* IDF release/v5.1 f0437b945f (#8599)\r\n\r\n* Update package_esp32_index.template.json\r\n\r\n* Fix printf format build error in BTAdvertisedDeviceSet.cpp\r\n\r\n---------\r\n\r\nCo-authored-by: Pedro Minatel <pedro.minatel@espressif.com>\r\nCo-authored-by: Rodrigo Garcia <rodrigo.garcia@espressif.com>\r\nCo-authored-by: Ha Thach <thach@tinyusb.org>\r\nCo-authored-by: Martin Turski <quiret@vfemail.net>\r\nCo-authored-by: raviypujar <raviypujar@gmail.com>\r\nCo-authored-by: Jason2866 <24528715+Jason2866@users.noreply.github.com>\r\nCo-authored-by: Tom\u00e1\u0161 Piln\u00fd <34927466+PilnyTomas@users.noreply.github.com>\r\nCo-authored-by: Jan Proch\u00e1zka <90197375+P-R-O-C-H-Y@users.noreply.github.com>\r\nCo-authored-by: Daniel Berlin <dberlin@dberlin.org>\r\nCo-authored-by: Nima Askari (\u0646\u06cc\u0645\u0627 \u0639\u0633\u06a9\u0631\u06cc) <nimaltd@yahoo.com>\r\nCo-authored-by: rtpmsys <106180646+rtpmsys@users.noreply.github.com>\r\nCo-authored-by: bytiful <55647551+bytiful@users.noreply.github.com>\r\nCo-authored-by: tmfarrington <tmfarrington@users.noreply.github.com>\r\nCo-authored-by: Krzysiek S <chris.streh@gmail.com>\r\nCo-authored-by: surt <carl.olsson@gmail.com>\r\nCo-authored-by: Max Scheffler <max.scheffler@pm.me>\r\nCo-authored-by: Clemens Kirchgatterer <clemens@1541.org>\r\nCo-authored-by: Peter Pan's Techland <twinkle-pirate@hotmail.com>\r\nCo-authored-by: Roman <programmeofficemilkyway@gmail.com>\r\nCo-authored-by: Eistee <Eistee82@users.noreply.github.com>\r\nCo-authored-by: David McCurley <44048235+mrengineer7777@users.noreply.github.com>\r\nCo-authored-by: Gaya3N25 <30388176+Gaya3N25@users.noreply.github.com>\r\nCo-authored-by: renebohne <rene.bohne@gmail.com>\r\nCo-authored-by: Oliv\u00e9r Rem\u00e9ny <25034625+remenyo@users.noreply.github.com>\r\nCo-authored-by: davidk88 <david.kotar@gmail.com>\r\nCo-authored-by: Vojt\u011bch Barto\u0161ka <76958047+VojtechBartoska@users.noreply.github.com>\r\nCo-authored-by: James Armstrong <jamesarmstrong3@me.com>\r\nCo-authored-by: Valerii Koval <valeros@users.noreply.github.com>\r\nCo-authored-by: Peter G. Jensen <root@petergjoel.dk>",
            "additions": 12,
            "deletions": 2,
            "change_type": "MODIFY",
            "diff": "@@ -11,11 +11,16 @@\n // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n // See the License for the specific language governing permissions and\n // limitations under the License.\n+\n+#include \"USBCDC.h\"\n+\n+#if SOC_USB_OTG_SUPPORTED\n #include \"USB.h\"\n #if CONFIG_TINYUSB_CDC_ENABLED\n \n-#include \"USBCDC.h\"\n+\n #include \"esp32-hal-tinyusb.h\"\n+#include \"rom/ets_sys.h\"\n \n ESP_EVENT_DEFINE_BASE(ARDUINO_USB_CDC_EVENTS);\n esp_err_t arduino_usb_event_post(esp_event_base_t event_base, int32_t event_id, void *event_data, size_t event_data_size, TickType_t ticks_to_wait);\n@@ -118,7 +123,7 @@ size_t USBCDC::setRxBufferSize(size_t rx_queue_len){\n             uxQueueSpacesAvailable(rx_queue) + uxQueueMessagesWaiting(rx_queue) : 0;\n \n     if (rx_queue_len != currentQueueSize) {\n-        xQueueHandle new_rx_queue = NULL;\n+        QueueHandle_t new_rx_queue = NULL;\n         if (rx_queue_len) {\n             new_rx_queue = xQueueCreate(rx_queue_len, sizeof(uint8_t));\n             if(!new_rx_queue){\n@@ -209,6 +214,8 @@ void USBCDC::_onLineState(bool _dtr, bool _rts){\n                     arduino_usb_cdc_event_data_t p;\n                     arduino_usb_event_post(ARDUINO_USB_CDC_EVENTS, ARDUINO_USB_CDC_DISCONNECTED_EVENT, &p, sizeof(arduino_usb_cdc_event_data_t), portMAX_DELAY);\n                 }\n+            // } else if(lineState == CDC_LINE_2){//esptool.js\n+            //     lineState++;\n             } else {\n                 lineState = CDC_LINE_IDLE;\n             }\n@@ -221,6 +228,8 @@ void USBCDC::_onLineState(bool _dtr, bool _rts){\n         } else if(dtr && !rts){\n             if(lineState == CDC_LINE_2){\n                 lineState++;\n+            // } else if(lineState == CDC_LINE_IDLE){//esptool.js\n+            //     lineState++;\n             } else {\n                 lineState = CDC_LINE_IDLE;\n             }\n@@ -451,3 +460,4 @@ USBCDC Serial(0);\n #endif\n \n #endif /* CONFIG_TINYUSB_CDC_ENABLED */\n+#endif /* SOC_USB_OTG_SUPPORTED */\n",
            "comment_added_diff": {
                "217": "            // } else if(lineState == CDC_LINE_2){//esptool.js",
                "218": "            //     lineState++;",
                "231": "            // } else if(lineState == CDC_LINE_IDLE){//esptool.js",
                "232": "            //     lineState++;"
            },
            "comment_deleted_diff": {},
            "comment_modified_diff": {}
        }
    ],
    "USBCDC.h": [],
    "USBMSC.cpp": [],
    "USBMSC.h": [],
    "chip-debug-report.cpp": [
        {
            "commit": "6f7a1ca76ada4d705d79ce863450c91349327a79",
            "timestamp": "2023-10-05T14:54:25+03:00",
            "author": "Me No Dev",
            "commit_message": "ESP-IDF v5.1 (#7733)\n\n* Initial changes to compile under ESP-IDF v5.1\r\n\r\n* Initial import for ESP-IDF v5.1 libs\r\n\r\n* Update toolchain\r\n\r\n* Update esp32-hal-psram.c\r\n\r\n* Add missing LDs\r\n\r\n* Update platform.txt\r\n\r\n* Stop some CI jobs, because they will always fail\r\n\r\n* Fix examples\r\n\r\n* Update app_httpd.cpp\r\n\r\n* Update ResetReason.ino\r\n\r\n* Warnings fixes\r\n\r\n* Added the example guideline and template (#7665)\r\n\r\n* Added the example guideline and template\r\n\r\n* PR review changes with some typos and grammar fixes\r\n\r\n* Changes according to the PR review\r\n\r\n* Added ESP32-S3 link to the datasheet (#7738)\r\n\r\n* Update HiFreq_ADC.ino\r\n\r\n* Replace periph_ctrl.h use because of deprecation\r\n\r\n* Replace esp_spi_flash.h use because of deprecation\r\n\r\n* Add includes to male mDNS::enableWorkstation compile\r\n\r\n* Fix ssl_client mbedtls_pk_parse_key callback\r\n\r\n* Update temperature sensor driver\r\n\r\n* Allow sketch_utils to compile with arduino-cli\r\n\r\n* Run CI with arduino-cli\r\n\r\n* Fix arduino-cli CI build on Windows\r\n\r\n* Refactor platform.txt to not use components installed through the board manager when running from git\r\n\r\n* Initial Peripheral Manager Implementation\r\n\r\n* Update SigmaDelta driver to use the new ESP-IDF driver API\r\n\r\n* Small improvements to peripheral manager and SigmaDelta\r\n\r\n* Remove deleted function from SigmaDelta header\r\n\r\n* Update DAC driver to use the new ESP-IDF driver API\r\n\r\n* Adds softAp(String) to make it compatible with ESP8266 (#7801)\r\n\r\n* Fix commentary (#7800)\r\n\r\nMinor fix based on observation done in https://github.com/espressif/arduino-esp32/issues/7795#issuecomment-1416868611\r\n\r\n* add adafruit new board feather esp32s2 reserve tft (#7794)\r\n\r\n* bugfix: add <stdint.h> for uint8_t to avoid compilation failure (GCC 11.2.0) (#7744)\r\n\r\n* Adding 3rd party boards for VALTRACK-V4-VTS-ESP32-C3 & VALTRACK-V4-MFW-ESP32-C3 (#7735)\r\n\r\n* Added VALTRACK-V4-VTS-ESP32-C3 board definition\r\n\r\nCreated pins_arduino.h & made changes to boards.txt with necessary changes\r\n\r\n* Modified the URL\r\n\r\n* Renamed json\r\n\r\n* renamed all auRL\r\n\r\n* Adding VALTRACK-V4 series board definitions\r\n\r\nAdded VALTRACK-V4-VTS-ESP32C3 & VALTRACK-V4-MFW-ESP32-C3 board variants\r\n\r\n* Adding VALTRACK-V4 series board definitions\r\n\r\nAdded VALTRACK-V4-VTS-ESP32C3 & VALTRACK-V4-MFW-ESP32-C3 board variants\r\n\r\n* Reverted package_esp32_index.template.json\r\n\r\nrestored package_esp32_index.template.json from edits\r\n\r\n* Reverted package_esp32_index.template.json\r\n\r\nAdded new line to package_esp32_index.template.json\r\n\r\n* Update Platformio CI (#7725)\r\n\r\n* WiFiClient example fix (#7711)\r\n\r\n* Modified WiFiClient example to use thingspeak instead of non-functionig sparkfun\r\n\r\n* Moved instructions to README\r\n\r\n* Fixed spelling\r\n\r\n* Added link to S3 datasheet\r\n\r\n---------\r\n\r\nCo-authored-by: Jan Proch\u00e1zka <90197375+P-R-O-C-H-Y@users.noreply.github.com>\r\n\r\n* Mirror update from Heltec repository (#7709)\r\n\r\nHeltec updated the I2C pins in https://github.com/Heltec-Aaron-Lee/WiFi_Kit_series/commit/b10f4bf85d13fd01be80dcdb0eb59e6a8c8ba19a\r\n\r\n* Fixes BLE data printing (#7699)\r\n\r\n* Fixes BLE data printing\r\n\r\nBLE data has no '\\0' terminator, therefore it can't be printed as a regular C string.\r\nThis fix just prints the BLE data based on its length.\r\n\r\n* Simplify printing to a single call\r\n\r\n* split menu options + lora_32_V3 fix (#7697)\r\n\r\n* Change header gaurd name (#7696)\r\n\r\n* Fix Name (#7691)\r\n\r\nWrong name in definitions.\r\n\r\n* Fix error in WiFiClient.cpp where the connect function fails for timeouts below 1 second (#7686)\r\n\r\n* Update WiFiClient.cpp\r\n\r\nThis change will allow specifying connect timeouts below 1 second. Without this change, if connect timeouts under 1 second are given, the connect defaults to 0ms and fails. \r\nThis will also allow timeouts in fractions of seconds, e.g. 1500ms. Without this change, connect timeouts are truncated to full second increments.\r\n\r\n* Make parameter timeout_ms clear\r\n\r\n* Change connection timeout_ms name for clarity\r\n\r\n---------\r\n\r\nCo-authored-by: Rodrigo Garcia <rodrigo.garcia@espressif.com>\r\n\r\n* fixed the function header (#7674)\r\n\r\n* fixed the function header\r\n\r\n* fixed function name and paramaters\r\n\r\n---------\r\n\r\nCo-authored-by: Jan Procha\u0301zka <90197375+P-R-O-C-H-Y@users.noreply.github.com>\r\n\r\n* Ticker fix solving #6155 (#7664)\r\n\r\n* Wrapped Ticker functions with #pragma disabling -Wcast-function-type\r\n\r\n* Revert \"Wrapped Ticker functions with #pragma disabling -Wcast-function-type\"\r\n\r\nThis reverts commit 160be7e67a10d01b6e44c4bf2521c0ccd6348976.\r\n\r\n* Fixed Ticker example\r\n\r\n* Modified Ticker example\r\n\r\n* Fixed LED_BUILTIN err for ESP32\r\n\r\n---------\r\n\r\nCo-authored-by: Jan Proch\u00e1zka <90197375+P-R-O-C-H-Y@users.noreply.github.com>\r\n\r\n* setPins fix ESP32 \"specified pins are not supported by this chip.\" (#7646)\r\n\r\n[ESP32: SDMMCFS::begin hardcodes the usage of slot 1, only check if the pins match slot 1 pins.]\r\n\r\nsetPins() was testing pins D1, D2 and D3 all against D1 ... fine in 1 pin mode when all are -1 not so much if you're trying to get 4 pin mode working.\r\nI now see this function doesn't really do anything on the ESP32...accept now correctly checks that you are trying to use the slot 1 pins.\r\n\r\nCo-authored-by: Jan Proch\u00e1zka <90197375+P-R-O-C-H-Y@users.noreply.github.com>\r\n\r\n* Allow passing IP as connect method parameter in WiFiClientSecure and skip unnecessary host-ip conversions (#7643)\r\n\r\n* Add LED_BUILTIN* definitions and initialization for LEDs to stop them floating. (#7636)\r\n\r\nCo-authored-by: Rodrigo Garcia <rodrigo.garcia@espressif.com>\r\n\r\n* Expand path to tinuf2 image when checking existence in platformio-build.py (#7631)\r\n\r\n* Expand path to tinuf2 image when checking existence\r\n\r\n* More isFiles fixed\r\n\r\n* Remove (useless) trailing semicolon from Print.cpp (#7622)\r\n\r\n* ADD: New variant Edgebox-ESP-100 (#7771)\r\n\r\n* ADD: New variant Edgebox-ESP-100\r\n\r\n* FIX: Edgebox-ESP-100 Board.txt usb mode option change back to default value as ESP32S3\r\n\r\n* Add Crabik Slot ESP32-S3 board (#7790)\r\n\r\n* Added Crabik Slot ESP32-S3\r\n\r\n* Adding CPU frequency settings and removing excess from partition scheme settings\r\n\r\n* new variant LilyGO T-Display-S3 (#7763)\r\n\r\n* new variant LilyGO T-Display-S3\r\n\r\nhttps://github.com/Xinyuan-LilyGO/T-Display-S3\r\n\r\n* Add boards.txt definition\r\n\r\n---------\r\n\r\nCo-authored-by: Me No Dev <me-no-dev@users.noreply.github.com>\r\n\r\n* Update get.py to support Apple ARM64\r\n\r\n* Update package_esp32_index.template.json\r\n\r\n* WString Return bool (#7774)\r\n\r\n* Add Roboheart Hercules development board to the esp32-core (#7672)\r\n\r\n* added Roboheart Hercules pin definitions and board.txt entries\r\n\r\n* added package_roboheat.json for prototyping\r\n\r\n* Roboheart Hercules pins\r\n\r\n* Updated the pins\r\n\r\n* Delete package_roboheart.json\r\n\r\n* Requested changes\r\n\r\n---------\r\n\r\nCo-authored-by: renebohne <rene.bohne@gmail.com>\r\n\r\n* Reword \"ESP-IDF as Component\" (#7812)\r\n\r\nI think \"Arduino as an ESP-IDF component\" or just \"As ESP-IDF component\" instead of  \"ESP-IDF as Component\" is more correct way to name the link.\r\n\r\n1. \"ESP-IDF as Component\" would imply that ESP-IDF is some sort of library for Arduino, which is (IMO) misleading, because it's true the other way around.\r\n2. It's written as \"Arduino as an ESP-IDF component\" on the webpage it points to as well.\r\n\r\n- Also I removed the capitalization from \"Component\" as I have not found a reason why is it capitalized.\r\n\r\n* add new board Adafruit Feather ESP32-S3 Reverse TFT (#7811)\r\n\r\n* Multi threading examples (tasks, queues, semaphores, mutexes) (#7660)\r\n\r\n* Moved and renamed example ESP32/FreeRTOS to MultiThreading/BasicMultiThreading\r\n\r\n* Added dummy files\r\n\r\n* Modified original example\r\n\r\n* Fixed BasicMultiThreading.ino\r\n\r\n* Added Example demonstrating use of queues\r\n\r\n* Extended info in BasicMultiThreading\r\n\r\n* Renamed Queues to singular Queue\r\n\r\n* Added Mutex example\r\n\r\n* Added Semaphore example\r\n\r\n* Moved info from example to README\r\n\r\n* Moved doc from Mutex to README\r\n\r\n* Added Queue README\r\n\r\n* Removed unecesary text\r\n\r\n* Fixed grammar\r\n\r\n* Increased stack size for Sempahore example\r\n\r\n* Added headers into .ino files\r\n\r\n* Added word Example at the end of title in README\r\n\r\n* removed unused line\r\n\r\n* Added forgotten README\r\n\r\n* Modified BasicMultiThreading example\r\n\r\n* Added missing S3 entry in README\r\n\r\n* moved location\r\n\r\n* Update ESP-IDF libs\r\n\r\n* Update CMakeLists.txt\r\n\r\n* Update esptool to v4.4\r\n\r\n* Add function timerAttachInterruptFlag (#7809)\r\n\r\n* Update esptool to v4.5\r\n\r\n* ADC refactoring (#7827)\r\n\r\n* Adc refactored + periman implementation\r\n\r\nPeripheral manager still needs to be checked if the implementation is right.\r\n\r\n* switched to working solution for milivolts read\r\n\r\n* Periman detachbus fix\r\n\r\n* coding style\r\n\r\n* fix CI warnings\r\n\r\n* fix FreeRTOS example\r\n\r\n* Update ETH.cpp\r\n\r\n* Update FunctionalInterruptStruct.ino\r\n\r\n* Update package_esp32_index.template.json\r\n\r\n* Update package_esp32_index.template.json\r\n\r\n* Fixes for the latest IDF v5.1\r\n\r\n* update esp-idf libs and toolchain\r\n\r\n* Turn OFF auto crystal frequency for ESP32 (needed by TWAI)\r\n\r\n* Update examples\r\n\r\n* Switch build to mostly use flags from files\r\n\r\nIncludes can not be done this way\r\n\r\n* Reorganize flag files\r\n\r\n* Optimize chip build flags further\r\n\r\n* Revert defines from file. MBEDTLS_CONFIG_FILE does not properly expand\r\n\r\n* Add support for includes and defines from file\r\n\r\n* Replace old sdk path references in platform.txt\r\n\r\n* use gcc-ar (#8013)\r\n\r\n* Makes F_CPU generic for all SoC (#8007)\r\n\r\nBased on CONFIG_ESP_DEFAULT_CPU_FREQ_MHZ that is correctly defined in the sdkconfig file for each SoC.\r\n\r\n* TIMER refactoring (#7904)\r\n\r\n* refactor using GPtimer\r\n\r\n* Updated timer HW test\r\n\r\n* fix examples\r\n\r\n* Add v2.0.7 in issue template (#7871)\r\n\r\n* refactor using GPtimer\r\n\r\n* Updated timer HW test\r\n\r\n* fix examples\r\n\r\n* Revert \"Add v2.0.7 in issue template (#7871)\"\r\n\r\nThis reverts commit fcc3b17d62ff57861f8913ca1f142fd5163b7457.\r\n\r\n* Update upload-artifact to v3 in HW CI\r\n\r\n* Revert \"Update upload-artifact to v3 in HW CI\"\r\n\r\nThis reverts commit 1ba228071718ba37c4e26d98db22f77b2a7364a6.\r\n\r\n* replace resolution with frequency\r\n\r\n* remove count_down option\r\n\r\n* countup removed from examples + header\r\n\r\n* Refactored timer object\r\n\r\n* code cleanup + examples and tests fixes\r\n\r\n* TimerAlarm fix\r\n\r\n---------\r\n\r\nCo-authored-by: Vojt\u011bch Barto\u0161ka <76958047+VojtechBartoska@users.noreply.github.com>\r\n\r\n* [Docs] ADC and Timer API Update (+some docs fixes) (#7906)\r\n\r\n* updated docs\r\n\r\n* remove hall sensor docs\r\n\r\nRemoved Hall sensor documentation as its no longer supported in IDF-5\r\n\r\n* Fixed ESPNow examples location in docs\r\n\r\n* Last timer refactored API + gpio small fix\r\n\r\n* AlarmWrite fix\r\n\r\n* Fixes APLL/PLL with RTC Frequency (#8025)\r\n\r\nlog_d() was displaying APLL for any SoC, but S3 and C3 has not such option, causing compilation errors.\r\n\r\n* Update IDF libs and fix OPI PSRAM on S3\r\n\r\n* Add setMode function HardwareSerial.c to set the esp32 uart mode for use with RS485 auto RTS (#7935)\r\n\r\n* Added setMode function to set the esp32 uart mode\r\n\r\nUsed to set the esp32 uart mode for use with RS485 Half Duplex and the auto RTS pin mode. This will set/clear the RTS pin output to control the RE/DE pin on most RS485 chips.\r\n\r\n* Add Success (bool) return in some functions\r\n\r\n* Add Success (bool) return code to some functions\r\n\r\n* Add Success (bool) return to some functions\r\n\r\n* Add Success (bool) return to some functions\r\n\r\n* Fix uartSetRxTimeout return type\r\n\r\n---------\r\n\r\nCo-authored-by: Rodrigo Garcia <rodrigo.garcia@espressif.com>\r\n\r\n* Add support for esp-elf-gdb\r\n\r\n* WFG Crashfix (#8044)\r\n\r\n* Update component libs\r\n\r\n* IDF release/v5.1 (#8061)\r\n\r\n* IDF release/v5.1 bb9200acec\r\n\r\n* Update Esp.cpp\r\n\r\n* IDF release/v5.1 420ebd208a\r\n\r\n* Update esp32-hal-psram.c\r\n\r\n* Switch SDK to be an external package\r\n\r\n* fix path (#8096)\r\n\r\n* Makes UART work at any APB Frequency (#8097)\r\n\r\nFixes HardwareSerial to work with IDF 5.1 on any CPU/APB Frequency (240MHz to 10MHZ), including user created low power modes.\r\n\r\n* Add required callbacks for TinyUSB DFU\r\n\r\n* Update version to 3.0.0\r\n\r\n* Add ESP.getCoreVersion() and update ESP.getChipModel()\r\n\r\n* Update timer hal for the latest 5.1\r\n\r\n* Use separate RX and TX buffer sizes in HTTP client\r\n\r\noptimizes download by allowing up to 4K packets to be received\r\n\r\n* Rename clock tree enum name in latest 5.1\r\n\r\n* ESP32-H4 support was removed in ESP-IDF v5.1\r\n\r\n* IDF release/v5.1 2004bf4e11 (#8165)\r\n\r\n* Deinit previous bus first (#8180)\r\n\r\n* TIMER - add timer_started flag, fix timerEnd() + timer HW test (#8135)\r\n\r\n* Add timer_started flag and stop before disable\r\n\r\n* Fix timer HW test\r\n\r\n* TOUCH - Peripheral manager implementation (#8129)\r\n\r\n* Touch periman implemented\r\n\r\n* Deinit previous bus first\r\n\r\n* LEDC Refactoring - Peripheral manager implemented (#8126)\r\n\r\n* LEDC periman implementation\r\n\r\n* Fix examples\r\n\r\n* Rework tone\r\n\r\n* Update ledc docs\r\n\r\n* fix missing bracket\r\n\r\n* Update analog funtions esp32-hal.h\r\n\r\n* Update CameraWebServer example\r\n\r\n* Fix HiFreq_ADC example\r\n\r\n* minor fixes - typos\r\n\r\n* Avoid calling tone/notone when tone already runs on dif. pin\r\n\r\n* Remove unused channels_resolution\r\n\r\n* GPIO - Peripheral manager implementation (#8179)\r\n\r\n* periman-implementation\r\n\r\n* fix RGB_BUILTIN and remove space\r\n\r\n* Enforces more consistency into Peripheral Manager (#8188)\r\n\r\n* Avoid log_i() message the first time a bus is assigned\r\n\r\n* Prevent operation with ESP32_BUS_TYPE_INIT\r\n\r\n* keeps coding style\r\n\r\n* do not print messages on INIT bus type\r\n\r\n* [Arduino Core 3.0.0] RMT IDF5.1 Refactoring (#7994)\r\n\r\n* RMT IDF5.1 refactoring\r\n\r\n* Fixes initial value setting\r\n\r\n* removed rmtRead() with user callback\r\n\r\n* simplify/remove Read data structure\r\n\r\n* Deep API simplification\r\n\r\n* fixes the examples\r\n\r\n* fix rmt.h\r\n\r\n* adds support to APB different frequencies\r\n\r\n* fixes CI and not defined RGB_BUILTIN\r\n\r\n* new RMT API and examples\r\n\r\n* fixing commentaties\r\n\r\n* Update esp32-hal-rgb-led.c\r\n\r\n* changes Filter API\r\n\r\n* Fixes example with Filter API\r\n\r\n* Update PlatformIO scripts for the upcoming 3.0 core (#8183)\r\n\r\n* Update PlatformIO scripts for the upcoming 3.0 core\r\n\r\n* Dynamically select proper framework-arduinoespressif32-libs package\r\n\r\nWith this change the dev-platform will be dynamically configured to\r\npull the latest .zip package with precompiled libraries from extracted from\r\npackage_esp32_index.template.json\r\n\r\n* free memory on detach (#8264)\r\n\r\n* SPI - Peripheral manager implementation  (#8255)\r\n\r\n* spi periman implementation\r\n\r\n* fix header file\r\n\r\n* remove unused struct\r\n\r\n* fix missing braces\r\n\r\n* Update esp32-hal-rmt.c (#8216)\r\n\r\nOptimizing Peripheral Manager Test\r\n\r\n* I2C - Peripheral manager implementation (#8220)\r\n\r\n* i2c-master periman initial commit\r\n\r\n* i2c-master make detachbus static + comment remove\r\n\r\n* i2c-slave periman implementation\r\n\r\n* SetPinBus to INIT on i2cDeinits\r\n\r\n* Fix slave pins deinit\r\n\r\n* remove dbg logs\r\n\r\n* set ret to ESP_FAIL instead of returning\r\n\r\n* Fix warnings in hal-spi caused by pariman transition\r\n\r\n* Update esptool.py to version 4.6\r\n\r\n* Add platform support for ESP_SR\r\n\r\n* Add USB Type and valid pin check to periman\r\n\r\n* replace bus with spi->num+1 (#8279)\r\n\r\n* Remove default pins from SPI HAL\r\n\r\n* Add commented out handlers for esptool.js in TinyUSB CDC\r\n\r\nFor future use\r\n\r\n* Add build defines for host os and fqbn (for debug purposes)\r\n\r\n* Provide proper memory caps total size\r\n\r\n* Update Esp.cpp\r\n\r\n* SDMMC - Peripheral manager implementation (#8289)\r\n\r\n* sdmmc periman implemented\r\n\r\n* save pins when SOC_SDMMC_USE_IOMUX\r\n\r\n* IDF release/v5.1 4bc762621d (#8292)\r\n\r\n* Adds missing pinMode (#8312)\r\n\r\n* Adds missing pinMode\r\n\r\nThe example code lacks a pinMode() to initialize the GPIO 0 (button). In Arduino Core 3.0.0, it prints an error message when trying to read a not initialized GPIO.\r\n\r\n* Update KeyboardLogout.ino\r\n\r\nAdds <buttonPin> to keep code standard\r\n\r\n* Update KeyboardReprogram.ino\r\n\r\nAdds <buttonPin> to keep code standard\r\n\r\n* LEDC Fade implementation (#8338)\r\n\r\n* fade API + pointer fixes\r\n\r\n* Add fade api\r\n\r\n* Add fade example\r\n\r\n* update ledc docs\r\n\r\n* remove unused variables\r\n\r\n* fix path to example\r\n\r\n* Adds USB to Peripheral Manager - Arduino Core 3.0.0 (#8335)\r\n\r\n* ETHERNET - Peripheral manager implementation (#8297)\r\n\r\n* Peripheral manager implemented\r\n\r\n* remove unused variable\r\n\r\n* Add all RMII pins\r\n\r\n* fix typo\r\n\r\n* Adds HardwareSerial to Peripheral Manager Arduino 3.0.0 (#8328)\r\n\r\n* Do not limit ETHERNET in periman to only ESP32. SPI is also an option\r\n\r\n* Initial support for ESP32-C6 (#8337)\r\n\r\n* Add checks for SOC defines (#8351)\r\n\r\n* Add checks for SOC defines\r\n\r\n* Add SoC checks to BLE library\r\n\r\n* fix i2c compilation error\r\n\r\n* fix wrong placement of include\r\n\r\n* add check to SPI library\r\n\r\n* add check to USB library\r\n\r\n* add checks to Wire library\r\n\r\n* Feature/esp32h2 support (#8373)\r\n\r\n* Initial support for ESP32H2\r\n\r\n* Additional changes for ESP32H2\r\n\r\n* Update libs for ESP32H2\r\n\r\n* Fix flashing on ESP32-H2\r\n\r\n* Fix GPIO Configs for ESP32-C6 and ESP32-H2\r\n\r\n* Update Timer test sketch\r\n\r\n* Fix upload flash parameters\r\n\r\n* Use ets_write_char_uart instead of ets_printf in log_printfv\r\n\r\n* Print full chip report when log level is sufficient (#8282)\r\n\r\n* ESP32-C3 does not have ets_write_char_uart\r\n\r\n* Fix BLE gap event name\r\n\r\n* HW Testing - Pytest update (#8389)\r\n\r\n* update tests requirements\r\n\r\n* remove already handled components\r\n\r\n* Update version of pytest\r\n\r\n* Add missing ESP32-H2 to hil.yml\r\n\r\n* Updated FreeRTOS names (#8418)\r\n\r\n* HW Testing -  ESP32-C6 + ESP32-H2 fixes (#8404)\r\n\r\n* add C6/H2 to tests cfg.json\r\n\r\n* remove ,\r\n\r\n* workflow runs-on runner by matrix\r\n\r\n* Add need for arduino tag to select runner\r\n\r\n* Add cryptography to requirements.txt\r\n\r\n* Removed duplicate TX1 define for H2 (#8402)\r\n\r\n* Fix broken examples\r\n\r\n* Fixes RMT filter & idle timing and setup (#8359)\r\n\r\n* Fixes Filter and Idle parameter to uint32\r\n\r\n* Fixes Filter and Idle setup\r\n\r\n* Fixes it to 5.1Libs branch\r\n\r\n* fix RMT CLK source and Filter API\r\n\r\n* fixes missing ;\r\n\r\n* fixes missing ;\r\n\r\n* fixes RMT example\r\n\r\n* IDF release/v5.1 a7b62bbcaf (#8438)\r\n\r\n* Add workflow to build executables from python scripts (#8290)\r\n\r\n* Add workflow to build executables from python scripts\r\n\r\n* Push binary to tools\r\n\r\n* Enable executable signing on Windows\r\n\r\n* Update get.py\r\n\r\n* Push binary to tools\r\n\r\n* Try with multiple files\r\n\r\n* Try more actions\r\n\r\n* Try powershell\r\n\r\n* Restore tools so they do not get rebuilt\r\n\r\n* Finalize scripts\r\n\r\n* Push binary to tools\r\n\r\n* App rollback should be after PSRAM is initialized\r\n\r\n* Correcting RX1 to GPIO4 and TX1 to GPIO5 to be consistent with documentation. Previous pin use works but is inconsistent with C6 docs.\r\n\r\n* Fixes Memory Leak (#8486)\r\n\r\n* fixes preprocessor test (#8485)\r\n\r\n* fixes preprocessor test\r\n\r\nWhen using `#define USE_SOFT_AP` \r\nChange\r\n`&& not USE_SOFT_AP` ==> `&& !defined(USE_SOFT_AP)`\r\n\r\n* Adds any BLE capable device in WiFiProv.ino\r\n\r\nRemoving ESP32 restriction for BLE Provisioning.\r\n\r\n* fix flash mode read out for C6\r\n\r\n* Add option for custom partitions without restrictions\r\n\r\n* SD_MMC update (#8298)\r\n\r\n* Updated SD_MMC lib and examples\r\n\r\n* Removed getter implementation and commented usage in examples\r\n\r\n* squashed updates\r\n\r\n* IDF release/v5.1 f0437b945f (#8599)\r\n\r\n* Update package_esp32_index.template.json\r\n\r\n* Fix printf format build error in BTAdvertisedDeviceSet.cpp\r\n\r\n---------\r\n\r\nCo-authored-by: Pedro Minatel <pedro.minatel@espressif.com>\r\nCo-authored-by: Rodrigo Garcia <rodrigo.garcia@espressif.com>\r\nCo-authored-by: Ha Thach <thach@tinyusb.org>\r\nCo-authored-by: Martin Turski <quiret@vfemail.net>\r\nCo-authored-by: raviypujar <raviypujar@gmail.com>\r\nCo-authored-by: Jason2866 <24528715+Jason2866@users.noreply.github.com>\r\nCo-authored-by: Tom\u00e1\u0161 Piln\u00fd <34927466+PilnyTomas@users.noreply.github.com>\r\nCo-authored-by: Jan Proch\u00e1zka <90197375+P-R-O-C-H-Y@users.noreply.github.com>\r\nCo-authored-by: Daniel Berlin <dberlin@dberlin.org>\r\nCo-authored-by: Nima Askari (\u0646\u06cc\u0645\u0627 \u0639\u0633\u06a9\u0631\u06cc) <nimaltd@yahoo.com>\r\nCo-authored-by: rtpmsys <106180646+rtpmsys@users.noreply.github.com>\r\nCo-authored-by: bytiful <55647551+bytiful@users.noreply.github.com>\r\nCo-authored-by: tmfarrington <tmfarrington@users.noreply.github.com>\r\nCo-authored-by: Krzysiek S <chris.streh@gmail.com>\r\nCo-authored-by: surt <carl.olsson@gmail.com>\r\nCo-authored-by: Max Scheffler <max.scheffler@pm.me>\r\nCo-authored-by: Clemens Kirchgatterer <clemens@1541.org>\r\nCo-authored-by: Peter Pan's Techland <twinkle-pirate@hotmail.com>\r\nCo-authored-by: Roman <programmeofficemilkyway@gmail.com>\r\nCo-authored-by: Eistee <Eistee82@users.noreply.github.com>\r\nCo-authored-by: David McCurley <44048235+mrengineer7777@users.noreply.github.com>\r\nCo-authored-by: Gaya3N25 <30388176+Gaya3N25@users.noreply.github.com>\r\nCo-authored-by: renebohne <rene.bohne@gmail.com>\r\nCo-authored-by: Oliv\u00e9r Rem\u00e9ny <25034625+remenyo@users.noreply.github.com>\r\nCo-authored-by: davidk88 <david.kotar@gmail.com>\r\nCo-authored-by: Vojt\u011bch Barto\u0161ka <76958047+VojtechBartoska@users.noreply.github.com>\r\nCo-authored-by: James Armstrong <jamesarmstrong3@me.com>\r\nCo-authored-by: Valerii Koval <valeros@users.noreply.github.com>\r\nCo-authored-by: Peter G. Jensen <root@petergjoel.dk>",
            "additions": 346,
            "deletions": 0,
            "change_type": "ADD",
            "diff": "@@ -0,0 +1,346 @@\n+#include \"esp_heap_caps.h\"\n+#include \"esp_chip_info.h\"\n+#include \"esp_idf_version.h\"\n+#include \"esp_arduino_version.h\"\n+#include \"esp_rom_spiflash.h\"\n+#include \"esp_flash.h\"\n+#include \"esp_partition.h\"\n+#include \"esp_app_format.h\"\n+#include \"soc/efuse_reg.h\"\n+#include \"soc/rtc.h\"\n+#include \"soc/spi_reg.h\"\n+#if CONFIG_IDF_TARGET_ESP32S2\n+#include \"esp32s2/rom/spi_flash.h\"\n+#endif\n+#include \"esp_bit_defs.h\"\n+\n+#include \"Arduino.h\"\n+#include \"esp32-hal-periman.h\"\n+\n+#define chip_report_printf log_printf\n+\n+#define printMemCapsInfo(caps) _printMemCapsInfo(MALLOC_CAP_##caps, #caps)\n+#define b2kb(b) ((float)b/1024.0)\n+#define b2mb(b) ((float)b/(1024.0*1024.0))\n+static void _printMemCapsInfo(uint32_t caps, const char * caps_str){\n+  multi_heap_info_t info;\n+  size_t total = heap_caps_get_total_size(caps);\n+  heap_caps_get_info(&info, caps);\n+  chip_report_printf(\"%s Memory Info:\\n\", caps_str);\n+  chip_report_printf(\"------------------------------------------\\n\");\n+  chip_report_printf(\"  Total Size        : %8u B (%6.1f KB)\\n\", total, b2kb(total));\n+  chip_report_printf(\"  Free Bytes        : %8u B (%6.1f KB)\\n\", info.total_free_bytes, b2kb(info.total_free_bytes));\n+  chip_report_printf(\"  Allocated Bytes   : %8u B (%6.1f KB)\\n\", info.total_allocated_bytes, b2kb(info.total_allocated_bytes));\n+  chip_report_printf(\"  Minimum Free Bytes: %8u B (%6.1f KB)\\n\", info.minimum_free_bytes, b2kb(info.minimum_free_bytes));\n+  chip_report_printf(\"  Largest Free Block: %8u B (%6.1f KB)\\n\", info.largest_free_block, b2kb(info.largest_free_block));\n+}\n+\n+static void printPkgVersion(void){\n+  chip_report_printf(\"  Package           : \");\n+#if CONFIG_IDF_TARGET_ESP32\n+  uint32_t pkg_ver = REG_GET_FIELD(EFUSE_BLK0_RDATA3_REG, EFUSE_RD_CHIP_PACKAGE);\n+  switch(pkg_ver){\n+    case EFUSE_RD_CHIP_VER_PKG_ESP32D0WDR2V3: chip_report_printf(\"D0WD-R2-V3\"); break;\n+    case EFUSE_RD_CHIP_VER_PKG_ESP32D0WDQ6  : chip_report_printf(\"D0WD-Q6\"); break;\n+    case EFUSE_RD_CHIP_VER_PKG_ESP32D0WDQ5  : chip_report_printf(\"D0WD-Q5\"); break;\n+    case EFUSE_RD_CHIP_VER_PKG_ESP32D2WDQ5  : chip_report_printf(\"D2WD-Q5\"); break;\n+    case EFUSE_RD_CHIP_VER_PKG_ESP32U4WDH   : chip_report_printf(\"U4WD-H\"); break;\n+    case EFUSE_RD_CHIP_VER_PKG_ESP32PICOD4  : chip_report_printf(\"PICO-D4\"); break;\n+    case EFUSE_RD_CHIP_VER_PKG_ESP32PICOV302: chip_report_printf(\"PICO-V3-02\"); break;\n+  }\n+#elif CONFIG_IDF_TARGET_ESP32S2\n+  uint32_t pkg_ver = REG_GET_FIELD(EFUSE_RD_MAC_SPI_SYS_3_REG, EFUSE_PKG_VERSION);\n+  switch (pkg_ver) {\n+    case 1: chip_report_printf(\"FH16\"); break;\n+    case 2: chip_report_printf(\"FH32\"); break;\n+    default: chip_report_printf(\"%lu\", pkg_ver); break;\n+  }\n+#elif CONFIG_IDF_TARGET_ESP32S3 || CONFIG_IDF_TARGET_ESP32C3 || CONFIG_IDF_TARGET_ESP32C6\n+  uint32_t pkg_ver = REG_GET_FIELD(EFUSE_RD_MAC_SPI_SYS_3_REG, EFUSE_PKG_VERSION);\n+  chip_report_printf(\"%lu\", pkg_ver);\n+#elif CONFIG_IDF_TARGET_ESP32C2\n+  uint32_t pkg_ver = REG_GET_FIELD(EFUSE_RD_BLK2_DATA1_REG, EFUSE_PKG_VERSION);\n+  chip_report_printf(\"%lu\", pkg_ver);\n+#elif CONFIG_IDF_TARGET_ESP32H2\n+  uint32_t pkg_ver = REG_GET_FIELD(EFUSE_RD_MAC_SYS_4_REG, EFUSE_PKG_VERSION);\n+  chip_report_printf(\"%lu\", pkg_ver);\n+#else\n+  chip_report_printf(\"Unknown\");\n+#endif\n+  chip_report_printf(\"\\n\");\n+}\n+\n+static void printChipInfo(void){\n+  esp_chip_info_t info;\n+  esp_chip_info(&info);\n+  chip_report_printf(\"Chip Info:\\n\");\n+  chip_report_printf(\"------------------------------------------\\n\");\n+  chip_report_printf(\"  Model             : \");\n+  switch(info.model){\n+    case CHIP_ESP32: chip_report_printf(\"ESP32\\n\"); break;\n+    case CHIP_ESP32S2: chip_report_printf(\"ESP32-S2\\n\"); break;\n+    case CHIP_ESP32S3: chip_report_printf(\"ESP32-S3\\n\"); break;\n+    case CHIP_ESP32C2: chip_report_printf(\"ESP32-C2\\n\"); break;\n+    case CHIP_ESP32C3: chip_report_printf(\"ESP32-C3\\n\"); break;\n+    case CHIP_ESP32C6: chip_report_printf(\"ESP32-C6\\n\"); break;\n+    case CHIP_ESP32H2: chip_report_printf(\"ESP32-H2\\n\"); break;\n+    default: chip_report_printf(\"Unknown %d\\n\", info.model); break;\n+  }\n+  printPkgVersion();\n+  chip_report_printf(\"  Revision          : \");\n+  if(info.revision > 0xFF){\n+    chip_report_printf(\"%d.%d\\n\", info.revision >> 8, info.revision & 0xFF);\n+  } else {\n+    chip_report_printf(\"%d\\n\", info.revision);\n+  }\n+  chip_report_printf(\"  Cores             : %d\\n\", info.cores);\n+  rtc_cpu_freq_config_t conf;\n+  rtc_clk_cpu_freq_get_config(&conf);\n+  chip_report_printf(\"  Frequency         : %lu MHz\\n\", conf.freq_mhz);\n+  chip_report_printf(\"  Embedded Flash    : %s\\n\", (info.features & CHIP_FEATURE_EMB_FLASH)?\"Yes\":\"No\");\n+  chip_report_printf(\"  Embedded PSRAM    : %s\\n\", (info.features & CHIP_FEATURE_EMB_PSRAM)?\"Yes\":\"No\");\n+  chip_report_printf(\"  2.4GHz WiFi       : %s\\n\", (info.features & CHIP_FEATURE_WIFI_BGN)?\"Yes\":\"No\");\n+  chip_report_printf(\"  Classic BT        : %s\\n\", (info.features & CHIP_FEATURE_BT)?\"Yes\":\"No\");\n+  chip_report_printf(\"  BT Low Energy     : %s\\n\", (info.features & CHIP_FEATURE_BLE)?\"Yes\":\"No\");\n+  chip_report_printf(\"  IEEE 802.15.4     : %s\\n\", (info.features & CHIP_FEATURE_IEEE802154)?\"Yes\":\"No\");\n+}\n+\n+static void printFlashInfo(void){\n+#if CONFIG_IDF_TARGET_ESP32 || CONFIG_IDF_TARGET_ESP32S2\n+  #define ESP_FLASH_IMAGE_BASE 0x1000\n+#else\n+  #define ESP_FLASH_IMAGE_BASE 0x0000\n+#endif\n+// REG_SPI_BASE is not defined for S3/C3 ??\n+#if CONFIG_IDF_TARGET_ESP32S3 || CONFIG_IDF_TARGET_ESP32C3\n+  #ifndef REG_SPI_BASE\n+  #define REG_SPI_BASE(i)     (DR_REG_SPI1_BASE + (((i)>1) ? (((i)* 0x1000) + 0x20000) : (((~(i)) & 1)* 0x1000 )))\n+  #endif // REG_SPI_BASE\n+#endif // TARGET\n+\n+  chip_report_printf(\"Flash Info:\\n\");\n+  chip_report_printf(\"------------------------------------------\\n\");\n+  uint32_t hw_size = 1 << (g_rom_flashchip.device_id & 0xFF);\n+  chip_report_printf(\"  Chip Size         : %8lu B (%.0f MB)\\n\", hw_size, b2mb(hw_size));\n+  chip_report_printf(\"  Block Size        : %8lu B (%6.1f KB)\\n\", g_rom_flashchip.block_size, b2kb(g_rom_flashchip.block_size));\n+  chip_report_printf(\"  Sector Size       : %8lu B (%6.1f KB)\\n\", g_rom_flashchip.sector_size, b2kb(g_rom_flashchip.sector_size));\n+  chip_report_printf(\"  Page Size         : %8lu B (%6.1f KB)\\n\", g_rom_flashchip.page_size, b2kb(g_rom_flashchip.page_size));\n+  esp_image_header_t fhdr;\n+  esp_flash_read(esp_flash_default_chip, (void*)&fhdr, ESP_FLASH_IMAGE_BASE, sizeof(esp_image_header_t));\n+  if(fhdr.magic == ESP_IMAGE_HEADER_MAGIC) {\n+    uint32_t f_freq = 0;\n+    switch(fhdr.spi_speed) {\n+#if CONFIG_IDF_TARGET_ESP32H2\n+      case 0x0: f_freq = 32; break;\n+      case 0x2: f_freq = 16; break;\n+      case 0xf: f_freq = 64; break;\n+#else\n+      case 0x0: f_freq = 40; break;\n+      case 0x1: f_freq = 26; break;\n+      case 0x2: f_freq = 20; break;\n+      case 0xf: f_freq = 80; break;\n+#endif\n+      default: f_freq = fhdr.spi_speed; break;\n+    }\n+    chip_report_printf(\"  Bus Speed         : %lu MHz\\n\", f_freq);\n+  }\n+  chip_report_printf(\"  Bus Mode          : \");\n+#if CONFIG_ESPTOOLPY_OCT_FLASH\n+  chip_report_printf(\"OPI\\n\");\n+#elif CONFIG_ESPTOOLPY_FLASHMODE_QIO\n+  chip_report_printf(\"QIO\\n\");\n+#elif CONFIG_ESPTOOLPY_FLASHMODE_QOUT\n+  chip_report_printf(\"QOUT\\n\");\n+#elif CONFIG_ESPTOOLPY_FLASHMODE_DIO\n+  chip_report_printf(\"DIO\\n\");\n+#elif CONFIG_ESPTOOLPY_FLASHMODE_DOUT\n+  chip_report_printf(\"DOUT\\n\");\n+#endif \n+}\n+\n+static void printPartitionsInfo(void){\n+  chip_report_printf(\"Partitions Info:\\n\");\n+  chip_report_printf(\"------------------------------------------\\n\");\n+  esp_partition_iterator_t iterator = esp_partition_find(ESP_PARTITION_TYPE_ANY, ESP_PARTITION_SUBTYPE_ANY, NULL);\n+  if(iterator != NULL){\n+    esp_partition_iterator_t it = iterator;\n+    while(it != NULL){\n+      const esp_partition_t* partition = esp_partition_get(it);\n+      if(partition){\n+        chip_report_printf(\"  %17s : addr: 0x%08X, size: %7.1f KB\", partition->label, partition->address, b2kb(partition->size));\n+        if(partition->type == ESP_PARTITION_TYPE_APP){\n+          chip_report_printf(\", type:  APP\");\n+          if(partition->subtype == 0){\n+            chip_report_printf(\", subtype: FACTORY\");\n+          } else if(partition->subtype >= 0x10 && partition->subtype < 0x20){\n+            chip_report_printf(\", subtype: OTA_%lu\", partition->subtype - 0x10);\n+          } else if(partition->subtype == 0x20){\n+            chip_report_printf(\", subtype: TEST\");\n+          } else {\n+            chip_report_printf(\", subtype: 0x%02X\", partition->subtype);\n+          }\n+        } else {\n+          chip_report_printf(\", type: DATA\");\n+          chip_report_printf(\", subtype: \");\n+          switch(partition->subtype){\n+            case ESP_PARTITION_SUBTYPE_DATA_OTA: chip_report_printf(\"OTA\"); break;\n+            case ESP_PARTITION_SUBTYPE_DATA_PHY: chip_report_printf(\"PHY\"); break;\n+            case ESP_PARTITION_SUBTYPE_DATA_NVS: chip_report_printf(\"NVS\"); break;\n+            case ESP_PARTITION_SUBTYPE_DATA_COREDUMP: chip_report_printf(\"COREDUMP\"); break;\n+            case ESP_PARTITION_SUBTYPE_DATA_NVS_KEYS: chip_report_printf(\"NVS_KEYS\"); break;\n+            case ESP_PARTITION_SUBTYPE_DATA_EFUSE_EM: chip_report_printf(\"EFUSE_EM\"); break;\n+            case ESP_PARTITION_SUBTYPE_DATA_UNDEFINED: chip_report_printf(\"UNDEFINED\"); break;\n+            case ESP_PARTITION_SUBTYPE_DATA_ESPHTTPD: chip_report_printf(\"ESPHTTPD\"); break;\n+            case ESP_PARTITION_SUBTYPE_DATA_FAT: chip_report_printf(\"FAT\"); break;\n+            case ESP_PARTITION_SUBTYPE_DATA_SPIFFS: chip_report_printf(\"SPIFFS\"); break;\n+            default: chip_report_printf(\"0x%02X\", partition->subtype); break;\n+          }\n+        }\n+        chip_report_printf(\"\\n\");\n+      }\n+      it = esp_partition_next(it);\n+    }\n+    //esp_partition_iterator_release(iterator);\n+  }\n+}\n+\n+static void printSoftwareInfo(void){\n+  chip_report_printf(\"Software Info:\\n\");\n+  chip_report_printf(\"------------------------------------------\\n\");\n+  chip_report_printf(\"  Compile Date/Time : %s %s\\n\", __DATE__, __TIME__);\n+#ifdef ARDUINO_HOST_OS\n+  chip_report_printf(\"  Compile Host OS   : %s\\n\", ARDUINO_HOST_OS);\n+#endif\n+  chip_report_printf(\"  ESP-IDF Version   : %s\\n\", esp_get_idf_version());\n+  chip_report_printf(\"  Arduino Version   : %s\\n\", ESP_ARDUINO_VERSION_STR);\n+}\n+\n+static void printBoardInfo(void){\n+  chip_report_printf(\"Board Info:\\n\");\n+  chip_report_printf(\"------------------------------------------\\n\");\n+  chip_report_printf(\"  Arduino Board     : %s\\n\", ARDUINO_BOARD);\n+  chip_report_printf(\"  Arduino Variant   : %s\\n\", ARDUINO_VARIANT);\n+#ifdef ARDUINO_FQBN\n+  chip_report_printf(\"  Arduino FQBN      : %s\\n\", ARDUINO_FQBN);\n+#else\n+#ifdef CORE_DEBUG_LEVEL\n+  chip_report_printf(\"  Core Debug Level  : %d\\n\", CORE_DEBUG_LEVEL);\n+#endif\n+#ifdef ARDUINO_RUNNING_CORE\n+  chip_report_printf(\"  Arduino Runs Core : %d\\n\", ARDUINO_RUNNING_CORE);\n+  chip_report_printf(\"  Arduino Events on : %d\\n\", ARDUINO_EVENT_RUNNING_CORE);\n+#endif\n+#ifdef ARDUINO_USB_MODE\n+  chip_report_printf(\"  Arduino USB Mode  : %d\\n\", ARDUINO_USB_MODE);\n+#endif\n+#ifdef ARDUINO_USB_CDC_ON_BOOT\n+  chip_report_printf(\"  CDC On Boot       : %d\\n\", ARDUINO_USB_CDC_ON_BOOT);\n+#endif\n+#endif /* ARDUINO_FQBN */\n+}\n+\n+static void printPerimanInfo(void){\n+  chip_report_printf(\"GPIO Info:\\n\");\n+  chip_report_printf(\"------------------------------------------\\n\");\n+  for(uint8_t i = 0; i < SOC_GPIO_PIN_COUNT; i++){\n+    if(!perimanPinIsValid(i)){\n+      continue;//invalid pin\n+    }\n+    peripheral_bus_type_t type = perimanGetPinBusType(i);\n+    if(type == ESP32_BUS_TYPE_INIT){\n+      continue;//unused pin\n+    }\n+    chip_report_printf(\"  %17u : \", i);\n+    switch(type){\n+      case ESP32_BUS_TYPE_GPIO: chip_report_printf(\"GPIO\\n\"); break;\n+      case ESP32_BUS_TYPE_UART: chip_report_printf(\"UART\\n\"); break;\n+#if SOC_SDM_SUPPORTED\n+      case ESP32_BUS_TYPE_SIGMADELTA: chip_report_printf(\"SIGMADELTA\\n\"); break;\n+#endif\n+#if SOC_ADC_SUPPORTED\n+      case ESP32_BUS_TYPE_ADC_ONESHOT: chip_report_printf(\"ADC_ONESHOT\\n\"); break;\n+      case ESP32_BUS_TYPE_ADC_CONT: chip_report_printf(\"ADC_CONT\\n\"); break;\n+#endif\n+#if SOC_DAC_SUPPORTED\n+      case ESP32_BUS_TYPE_DAC_ONESHOT: chip_report_printf(\"DAC_ONESHOT\\n\"); break;\n+      case ESP32_BUS_TYPE_DAC_CONT: chip_report_printf(\"DAC_CONT\\n\"); break;\n+      case ESP32_BUS_TYPE_DAC_COSINE: chip_report_printf(\"DAC_COSINE\\n\"); break;\n+#endif\n+#if SOC_LEDC_SUPPORTED\n+      case ESP32_BUS_TYPE_LEDC: chip_report_printf(\"LEDC\\n\"); break;\n+#endif\n+#if SOC_RMT_SUPPORTED\n+      case ESP32_BUS_TYPE_RMT_TX: chip_report_printf(\"RMT_TX\\n\"); break;\n+      case ESP32_BUS_TYPE_RMT_RX: chip_report_printf(\"RMT_RX\\n\"); break;\n+#endif\n+#if SOC_I2S_SUPPORTED\n+      case ESP32_BUS_TYPE_I2S_STD: chip_report_printf(\"I2S_STD\\n\"); break;\n+      case ESP32_BUS_TYPE_I2S_PDM: chip_report_printf(\"I2S_PDM\\n\"); break;\n+      case ESP32_BUS_TYPE_I2S_TDM: chip_report_printf(\"I2S_TDM\\n\"); break;\n+#endif\n+#if SOC_I2C_SUPPORTED\n+      case ESP32_BUS_TYPE_I2C_MASTER: chip_report_printf(\"I2C_MASTER\\n\"); break;\n+      case ESP32_BUS_TYPE_I2C_SLAVE: chip_report_printf(\"I2C_SLAVE\\n\"); break;\n+#endif\n+#if SOC_GPSPI_SUPPORTED\n+      case ESP32_BUS_TYPE_SPI_MASTER: chip_report_printf(\"SPI_MASTER\\n\"); break;\n+#endif\n+#if SOC_SDMMC_HOST_SUPPORTED\n+      case ESP32_BUS_TYPE_SDMMC: chip_report_printf(\"SDMMC\\n\"); break;\n+#endif\n+#if SOC_TOUCH_SENSOR_SUPPORTED\n+      case ESP32_BUS_TYPE_TOUCH: chip_report_printf(\"TOUCH\\n\"); break;\n+#endif\n+#if SOC_USB_SERIAL_JTAG_SUPPORTED || SOC_USB_OTG_SUPPORTED\n+      case ESP32_BUS_TYPE_USB: chip_report_printf(\"USB\\n\"); break;\n+#endif\n+      default: chip_report_printf(\"%d\\n\", type); break;\n+    }\n+  }\n+}\n+\n+void printBeforeSetupInfo(void){\n+#if ARDUINO_USB_CDC_ON_BOOT\n+  Serial.begin(0);\n+  Serial.setDebugOutput(true);\n+  uint8_t t = 0;\n+  while(!Serial && (t++ < 200)) delay(10); //wait up to 2 seconds for the IDE to connect\n+#endif\n+  chip_report_printf(\"=========== Before Setup Start ===========\\n\");\n+  printChipInfo();\n+  chip_report_printf(\"------------------------------------------\\n\");\n+  printMemCapsInfo(INTERNAL);\n+  chip_report_printf(\"------------------------------------------\\n\");\n+  if(psramFound()){\n+    printMemCapsInfo(SPIRAM);\n+    chip_report_printf(\"  Bus Mode          : \");\n+#if CONFIG_SPIRAM_MODE_OCT\n+    chip_report_printf(\"OPI\\n\");\n+#else\n+    chip_report_printf(\"QSPI\\n\");\n+#endif\n+    chip_report_printf(\"------------------------------------------\\n\");\n+  }\n+  printFlashInfo();\n+  chip_report_printf(\"------------------------------------------\\n\");\n+  printPartitionsInfo();\n+  chip_report_printf(\"------------------------------------------\\n\");\n+  printSoftwareInfo();\n+  chip_report_printf(\"------------------------------------------\\n\");\n+  printBoardInfo();\n+  chip_report_printf(\"============ Before Setup End ============\\n\");\n+  delay(100); //allow the print to finish\n+}\n+\n+void printAfterSetupInfo(void){\n+  chip_report_printf(\"=========== After Setup Start ============\\n\");\n+  printMemCapsInfo(INTERNAL);\n+  chip_report_printf(\"------------------------------------------\\n\");\n+  if(psramFound()){\n+    printMemCapsInfo(SPIRAM);\n+    chip_report_printf(\"------------------------------------------\\n\");\n+  }\n+  printPerimanInfo();\n+  chip_report_printf(\"============ After Setup End =============\\n\");\n+  delay(20); //allow the print to finish\n+}\n",
            "comment_added_diff": {
                "114": "// REG_SPI_BASE is not defined for S3/C3 ??",
                "118": "  #endif // REG_SPI_BASE",
                "119": "#endif // TARGET"
            },
            "comment_deleted_diff": {},
            "comment_modified_diff": {}
        }
    ],
    "chip-debug-report.h": [],
    "esp32-hal-adc.c": [],
    "esp32-hal-adc.h": [],
    "esp32-hal-bt.c": [],
    "esp32-hal-bt.h": [],
    "esp32-hal-cpu.c": [],
    "esp32-hal-dac.c": [],
    "esp32-hal-dac.h": [],
    "esp32-hal-gpio.c": [],
    "esp32-hal-i2c-slave.c": [],
    "esp32-hal-i2c-slave.h": [],
    "esp32-hal-i2c.c": [],
    "esp32-hal-i2c.h": [],
    "esp32-hal-ledc.c": [],
    "esp32-hal-ledc.h": [],
    "esp32-hal-log.h": [],
    "esp32-hal-matrix.c": [],
    "esp32-hal-misc.c": [],
    "esp32-hal-periman.c": [],
    "esp32-hal-periman.h": [],
    "esp32-hal-psram.c": [],
    "esp32-hal-rgb-led.c": [],
    "esp32-hal-rmt.h": [],
    "esp32-hal-sigmadelta.c": [],
    "esp32-hal-sigmadelta.h": [],
    "esp32-hal-spi.h": [],
    "esp32-hal-timer.h": [],
    "esp32-hal-tinyusb.c": [],
    "esp32-hal-tinyusb.h": [],
    "esp32-hal-touch.c": [],
    "esp32-hal-touch.h": [],
    "esp32-hal.h": [],
    "esp_arduino_version.h": [],
    "main.cpp": [],
    "wiring_pulse.c": [],
    "adc.rst": [],
    "hall_sensor.rst": [],
    "ledc.rst": [],
    "timer.rst": [],
    "idf_component.yml": [],
    ".skip.esp32h2": [],
    "ArduinoOTA.cpp": [],
    "AsyncUDP.cpp": [],
    "AsyncUDP.h": [],
    "BLE5_extended_scan.ino": [],
    "BLE5_multi_advertising.ino": [],
    "BLE5_periodic_advertising.ino": [],
    "BLE5_periodic_sync.ino": [],
    "BLE_EddystoneURL_Beacon.ino": [],
    "BLE2902.cpp": [],
    "BLE2902.h": [],
    "BLE2904.cpp": [],
    "BLE2904.h": [],
    "BLEAddress.cpp": [],
    "BLEAddress.h": [],
    "BLEAdvertisedDevice.h": [],
    "BLEAdvertising.cpp": [
        {
            "commit": "6f7a1ca76ada4d705d79ce863450c91349327a79",
            "timestamp": "2023-10-05T14:54:25+03:00",
            "author": "Me No Dev",
            "commit_message": "ESP-IDF v5.1 (#7733)\n\n* Initial changes to compile under ESP-IDF v5.1\r\n\r\n* Initial import for ESP-IDF v5.1 libs\r\n\r\n* Update toolchain\r\n\r\n* Update esp32-hal-psram.c\r\n\r\n* Add missing LDs\r\n\r\n* Update platform.txt\r\n\r\n* Stop some CI jobs, because they will always fail\r\n\r\n* Fix examples\r\n\r\n* Update app_httpd.cpp\r\n\r\n* Update ResetReason.ino\r\n\r\n* Warnings fixes\r\n\r\n* Added the example guideline and template (#7665)\r\n\r\n* Added the example guideline and template\r\n\r\n* PR review changes with some typos and grammar fixes\r\n\r\n* Changes according to the PR review\r\n\r\n* Added ESP32-S3 link to the datasheet (#7738)\r\n\r\n* Update HiFreq_ADC.ino\r\n\r\n* Replace periph_ctrl.h use because of deprecation\r\n\r\n* Replace esp_spi_flash.h use because of deprecation\r\n\r\n* Add includes to male mDNS::enableWorkstation compile\r\n\r\n* Fix ssl_client mbedtls_pk_parse_key callback\r\n\r\n* Update temperature sensor driver\r\n\r\n* Allow sketch_utils to compile with arduino-cli\r\n\r\n* Run CI with arduino-cli\r\n\r\n* Fix arduino-cli CI build on Windows\r\n\r\n* Refactor platform.txt to not use components installed through the board manager when running from git\r\n\r\n* Initial Peripheral Manager Implementation\r\n\r\n* Update SigmaDelta driver to use the new ESP-IDF driver API\r\n\r\n* Small improvements to peripheral manager and SigmaDelta\r\n\r\n* Remove deleted function from SigmaDelta header\r\n\r\n* Update DAC driver to use the new ESP-IDF driver API\r\n\r\n* Adds softAp(String) to make it compatible with ESP8266 (#7801)\r\n\r\n* Fix commentary (#7800)\r\n\r\nMinor fix based on observation done in https://github.com/espressif/arduino-esp32/issues/7795#issuecomment-1416868611\r\n\r\n* add adafruit new board feather esp32s2 reserve tft (#7794)\r\n\r\n* bugfix: add <stdint.h> for uint8_t to avoid compilation failure (GCC 11.2.0) (#7744)\r\n\r\n* Adding 3rd party boards for VALTRACK-V4-VTS-ESP32-C3 & VALTRACK-V4-MFW-ESP32-C3 (#7735)\r\n\r\n* Added VALTRACK-V4-VTS-ESP32-C3 board definition\r\n\r\nCreated pins_arduino.h & made changes to boards.txt with necessary changes\r\n\r\n* Modified the URL\r\n\r\n* Renamed json\r\n\r\n* renamed all auRL\r\n\r\n* Adding VALTRACK-V4 series board definitions\r\n\r\nAdded VALTRACK-V4-VTS-ESP32C3 & VALTRACK-V4-MFW-ESP32-C3 board variants\r\n\r\n* Adding VALTRACK-V4 series board definitions\r\n\r\nAdded VALTRACK-V4-VTS-ESP32C3 & VALTRACK-V4-MFW-ESP32-C3 board variants\r\n\r\n* Reverted package_esp32_index.template.json\r\n\r\nrestored package_esp32_index.template.json from edits\r\n\r\n* Reverted package_esp32_index.template.json\r\n\r\nAdded new line to package_esp32_index.template.json\r\n\r\n* Update Platformio CI (#7725)\r\n\r\n* WiFiClient example fix (#7711)\r\n\r\n* Modified WiFiClient example to use thingspeak instead of non-functionig sparkfun\r\n\r\n* Moved instructions to README\r\n\r\n* Fixed spelling\r\n\r\n* Added link to S3 datasheet\r\n\r\n---------\r\n\r\nCo-authored-by: Jan Proch\u00e1zka <90197375+P-R-O-C-H-Y@users.noreply.github.com>\r\n\r\n* Mirror update from Heltec repository (#7709)\r\n\r\nHeltec updated the I2C pins in https://github.com/Heltec-Aaron-Lee/WiFi_Kit_series/commit/b10f4bf85d13fd01be80dcdb0eb59e6a8c8ba19a\r\n\r\n* Fixes BLE data printing (#7699)\r\n\r\n* Fixes BLE data printing\r\n\r\nBLE data has no '\\0' terminator, therefore it can't be printed as a regular C string.\r\nThis fix just prints the BLE data based on its length.\r\n\r\n* Simplify printing to a single call\r\n\r\n* split menu options + lora_32_V3 fix (#7697)\r\n\r\n* Change header gaurd name (#7696)\r\n\r\n* Fix Name (#7691)\r\n\r\nWrong name in definitions.\r\n\r\n* Fix error in WiFiClient.cpp where the connect function fails for timeouts below 1 second (#7686)\r\n\r\n* Update WiFiClient.cpp\r\n\r\nThis change will allow specifying connect timeouts below 1 second. Without this change, if connect timeouts under 1 second are given, the connect defaults to 0ms and fails. \r\nThis will also allow timeouts in fractions of seconds, e.g. 1500ms. Without this change, connect timeouts are truncated to full second increments.\r\n\r\n* Make parameter timeout_ms clear\r\n\r\n* Change connection timeout_ms name for clarity\r\n\r\n---------\r\n\r\nCo-authored-by: Rodrigo Garcia <rodrigo.garcia@espressif.com>\r\n\r\n* fixed the function header (#7674)\r\n\r\n* fixed the function header\r\n\r\n* fixed function name and paramaters\r\n\r\n---------\r\n\r\nCo-authored-by: Jan Procha\u0301zka <90197375+P-R-O-C-H-Y@users.noreply.github.com>\r\n\r\n* Ticker fix solving #6155 (#7664)\r\n\r\n* Wrapped Ticker functions with #pragma disabling -Wcast-function-type\r\n\r\n* Revert \"Wrapped Ticker functions with #pragma disabling -Wcast-function-type\"\r\n\r\nThis reverts commit 160be7e67a10d01b6e44c4bf2521c0ccd6348976.\r\n\r\n* Fixed Ticker example\r\n\r\n* Modified Ticker example\r\n\r\n* Fixed LED_BUILTIN err for ESP32\r\n\r\n---------\r\n\r\nCo-authored-by: Jan Proch\u00e1zka <90197375+P-R-O-C-H-Y@users.noreply.github.com>\r\n\r\n* setPins fix ESP32 \"specified pins are not supported by this chip.\" (#7646)\r\n\r\n[ESP32: SDMMCFS::begin hardcodes the usage of slot 1, only check if the pins match slot 1 pins.]\r\n\r\nsetPins() was testing pins D1, D2 and D3 all against D1 ... fine in 1 pin mode when all are -1 not so much if you're trying to get 4 pin mode working.\r\nI now see this function doesn't really do anything on the ESP32...accept now correctly checks that you are trying to use the slot 1 pins.\r\n\r\nCo-authored-by: Jan Proch\u00e1zka <90197375+P-R-O-C-H-Y@users.noreply.github.com>\r\n\r\n* Allow passing IP as connect method parameter in WiFiClientSecure and skip unnecessary host-ip conversions (#7643)\r\n\r\n* Add LED_BUILTIN* definitions and initialization for LEDs to stop them floating. (#7636)\r\n\r\nCo-authored-by: Rodrigo Garcia <rodrigo.garcia@espressif.com>\r\n\r\n* Expand path to tinuf2 image when checking existence in platformio-build.py (#7631)\r\n\r\n* Expand path to tinuf2 image when checking existence\r\n\r\n* More isFiles fixed\r\n\r\n* Remove (useless) trailing semicolon from Print.cpp (#7622)\r\n\r\n* ADD: New variant Edgebox-ESP-100 (#7771)\r\n\r\n* ADD: New variant Edgebox-ESP-100\r\n\r\n* FIX: Edgebox-ESP-100 Board.txt usb mode option change back to default value as ESP32S3\r\n\r\n* Add Crabik Slot ESP32-S3 board (#7790)\r\n\r\n* Added Crabik Slot ESP32-S3\r\n\r\n* Adding CPU frequency settings and removing excess from partition scheme settings\r\n\r\n* new variant LilyGO T-Display-S3 (#7763)\r\n\r\n* new variant LilyGO T-Display-S3\r\n\r\nhttps://github.com/Xinyuan-LilyGO/T-Display-S3\r\n\r\n* Add boards.txt definition\r\n\r\n---------\r\n\r\nCo-authored-by: Me No Dev <me-no-dev@users.noreply.github.com>\r\n\r\n* Update get.py to support Apple ARM64\r\n\r\n* Update package_esp32_index.template.json\r\n\r\n* WString Return bool (#7774)\r\n\r\n* Add Roboheart Hercules development board to the esp32-core (#7672)\r\n\r\n* added Roboheart Hercules pin definitions and board.txt entries\r\n\r\n* added package_roboheat.json for prototyping\r\n\r\n* Roboheart Hercules pins\r\n\r\n* Updated the pins\r\n\r\n* Delete package_roboheart.json\r\n\r\n* Requested changes\r\n\r\n---------\r\n\r\nCo-authored-by: renebohne <rene.bohne@gmail.com>\r\n\r\n* Reword \"ESP-IDF as Component\" (#7812)\r\n\r\nI think \"Arduino as an ESP-IDF component\" or just \"As ESP-IDF component\" instead of  \"ESP-IDF as Component\" is more correct way to name the link.\r\n\r\n1. \"ESP-IDF as Component\" would imply that ESP-IDF is some sort of library for Arduino, which is (IMO) misleading, because it's true the other way around.\r\n2. It's written as \"Arduino as an ESP-IDF component\" on the webpage it points to as well.\r\n\r\n- Also I removed the capitalization from \"Component\" as I have not found a reason why is it capitalized.\r\n\r\n* add new board Adafruit Feather ESP32-S3 Reverse TFT (#7811)\r\n\r\n* Multi threading examples (tasks, queues, semaphores, mutexes) (#7660)\r\n\r\n* Moved and renamed example ESP32/FreeRTOS to MultiThreading/BasicMultiThreading\r\n\r\n* Added dummy files\r\n\r\n* Modified original example\r\n\r\n* Fixed BasicMultiThreading.ino\r\n\r\n* Added Example demonstrating use of queues\r\n\r\n* Extended info in BasicMultiThreading\r\n\r\n* Renamed Queues to singular Queue\r\n\r\n* Added Mutex example\r\n\r\n* Added Semaphore example\r\n\r\n* Moved info from example to README\r\n\r\n* Moved doc from Mutex to README\r\n\r\n* Added Queue README\r\n\r\n* Removed unecesary text\r\n\r\n* Fixed grammar\r\n\r\n* Increased stack size for Sempahore example\r\n\r\n* Added headers into .ino files\r\n\r\n* Added word Example at the end of title in README\r\n\r\n* removed unused line\r\n\r\n* Added forgotten README\r\n\r\n* Modified BasicMultiThreading example\r\n\r\n* Added missing S3 entry in README\r\n\r\n* moved location\r\n\r\n* Update ESP-IDF libs\r\n\r\n* Update CMakeLists.txt\r\n\r\n* Update esptool to v4.4\r\n\r\n* Add function timerAttachInterruptFlag (#7809)\r\n\r\n* Update esptool to v4.5\r\n\r\n* ADC refactoring (#7827)\r\n\r\n* Adc refactored + periman implementation\r\n\r\nPeripheral manager still needs to be checked if the implementation is right.\r\n\r\n* switched to working solution for milivolts read\r\n\r\n* Periman detachbus fix\r\n\r\n* coding style\r\n\r\n* fix CI warnings\r\n\r\n* fix FreeRTOS example\r\n\r\n* Update ETH.cpp\r\n\r\n* Update FunctionalInterruptStruct.ino\r\n\r\n* Update package_esp32_index.template.json\r\n\r\n* Update package_esp32_index.template.json\r\n\r\n* Fixes for the latest IDF v5.1\r\n\r\n* update esp-idf libs and toolchain\r\n\r\n* Turn OFF auto crystal frequency for ESP32 (needed by TWAI)\r\n\r\n* Update examples\r\n\r\n* Switch build to mostly use flags from files\r\n\r\nIncludes can not be done this way\r\n\r\n* Reorganize flag files\r\n\r\n* Optimize chip build flags further\r\n\r\n* Revert defines from file. MBEDTLS_CONFIG_FILE does not properly expand\r\n\r\n* Add support for includes and defines from file\r\n\r\n* Replace old sdk path references in platform.txt\r\n\r\n* use gcc-ar (#8013)\r\n\r\n* Makes F_CPU generic for all SoC (#8007)\r\n\r\nBased on CONFIG_ESP_DEFAULT_CPU_FREQ_MHZ that is correctly defined in the sdkconfig file for each SoC.\r\n\r\n* TIMER refactoring (#7904)\r\n\r\n* refactor using GPtimer\r\n\r\n* Updated timer HW test\r\n\r\n* fix examples\r\n\r\n* Add v2.0.7 in issue template (#7871)\r\n\r\n* refactor using GPtimer\r\n\r\n* Updated timer HW test\r\n\r\n* fix examples\r\n\r\n* Revert \"Add v2.0.7 in issue template (#7871)\"\r\n\r\nThis reverts commit fcc3b17d62ff57861f8913ca1f142fd5163b7457.\r\n\r\n* Update upload-artifact to v3 in HW CI\r\n\r\n* Revert \"Update upload-artifact to v3 in HW CI\"\r\n\r\nThis reverts commit 1ba228071718ba37c4e26d98db22f77b2a7364a6.\r\n\r\n* replace resolution with frequency\r\n\r\n* remove count_down option\r\n\r\n* countup removed from examples + header\r\n\r\n* Refactored timer object\r\n\r\n* code cleanup + examples and tests fixes\r\n\r\n* TimerAlarm fix\r\n\r\n---------\r\n\r\nCo-authored-by: Vojt\u011bch Barto\u0161ka <76958047+VojtechBartoska@users.noreply.github.com>\r\n\r\n* [Docs] ADC and Timer API Update (+some docs fixes) (#7906)\r\n\r\n* updated docs\r\n\r\n* remove hall sensor docs\r\n\r\nRemoved Hall sensor documentation as its no longer supported in IDF-5\r\n\r\n* Fixed ESPNow examples location in docs\r\n\r\n* Last timer refactored API + gpio small fix\r\n\r\n* AlarmWrite fix\r\n\r\n* Fixes APLL/PLL with RTC Frequency (#8025)\r\n\r\nlog_d() was displaying APLL for any SoC, but S3 and C3 has not such option, causing compilation errors.\r\n\r\n* Update IDF libs and fix OPI PSRAM on S3\r\n\r\n* Add setMode function HardwareSerial.c to set the esp32 uart mode for use with RS485 auto RTS (#7935)\r\n\r\n* Added setMode function to set the esp32 uart mode\r\n\r\nUsed to set the esp32 uart mode for use with RS485 Half Duplex and the auto RTS pin mode. This will set/clear the RTS pin output to control the RE/DE pin on most RS485 chips.\r\n\r\n* Add Success (bool) return in some functions\r\n\r\n* Add Success (bool) return code to some functions\r\n\r\n* Add Success (bool) return to some functions\r\n\r\n* Add Success (bool) return to some functions\r\n\r\n* Fix uartSetRxTimeout return type\r\n\r\n---------\r\n\r\nCo-authored-by: Rodrigo Garcia <rodrigo.garcia@espressif.com>\r\n\r\n* Add support for esp-elf-gdb\r\n\r\n* WFG Crashfix (#8044)\r\n\r\n* Update component libs\r\n\r\n* IDF release/v5.1 (#8061)\r\n\r\n* IDF release/v5.1 bb9200acec\r\n\r\n* Update Esp.cpp\r\n\r\n* IDF release/v5.1 420ebd208a\r\n\r\n* Update esp32-hal-psram.c\r\n\r\n* Switch SDK to be an external package\r\n\r\n* fix path (#8096)\r\n\r\n* Makes UART work at any APB Frequency (#8097)\r\n\r\nFixes HardwareSerial to work with IDF 5.1 on any CPU/APB Frequency (240MHz to 10MHZ), including user created low power modes.\r\n\r\n* Add required callbacks for TinyUSB DFU\r\n\r\n* Update version to 3.0.0\r\n\r\n* Add ESP.getCoreVersion() and update ESP.getChipModel()\r\n\r\n* Update timer hal for the latest 5.1\r\n\r\n* Use separate RX and TX buffer sizes in HTTP client\r\n\r\noptimizes download by allowing up to 4K packets to be received\r\n\r\n* Rename clock tree enum name in latest 5.1\r\n\r\n* ESP32-H4 support was removed in ESP-IDF v5.1\r\n\r\n* IDF release/v5.1 2004bf4e11 (#8165)\r\n\r\n* Deinit previous bus first (#8180)\r\n\r\n* TIMER - add timer_started flag, fix timerEnd() + timer HW test (#8135)\r\n\r\n* Add timer_started flag and stop before disable\r\n\r\n* Fix timer HW test\r\n\r\n* TOUCH - Peripheral manager implementation (#8129)\r\n\r\n* Touch periman implemented\r\n\r\n* Deinit previous bus first\r\n\r\n* LEDC Refactoring - Peripheral manager implemented (#8126)\r\n\r\n* LEDC periman implementation\r\n\r\n* Fix examples\r\n\r\n* Rework tone\r\n\r\n* Update ledc docs\r\n\r\n* fix missing bracket\r\n\r\n* Update analog funtions esp32-hal.h\r\n\r\n* Update CameraWebServer example\r\n\r\n* Fix HiFreq_ADC example\r\n\r\n* minor fixes - typos\r\n\r\n* Avoid calling tone/notone when tone already runs on dif. pin\r\n\r\n* Remove unused channels_resolution\r\n\r\n* GPIO - Peripheral manager implementation (#8179)\r\n\r\n* periman-implementation\r\n\r\n* fix RGB_BUILTIN and remove space\r\n\r\n* Enforces more consistency into Peripheral Manager (#8188)\r\n\r\n* Avoid log_i() message the first time a bus is assigned\r\n\r\n* Prevent operation with ESP32_BUS_TYPE_INIT\r\n\r\n* keeps coding style\r\n\r\n* do not print messages on INIT bus type\r\n\r\n* [Arduino Core 3.0.0] RMT IDF5.1 Refactoring (#7994)\r\n\r\n* RMT IDF5.1 refactoring\r\n\r\n* Fixes initial value setting\r\n\r\n* removed rmtRead() with user callback\r\n\r\n* simplify/remove Read data structure\r\n\r\n* Deep API simplification\r\n\r\n* fixes the examples\r\n\r\n* fix rmt.h\r\n\r\n* adds support to APB different frequencies\r\n\r\n* fixes CI and not defined RGB_BUILTIN\r\n\r\n* new RMT API and examples\r\n\r\n* fixing commentaties\r\n\r\n* Update esp32-hal-rgb-led.c\r\n\r\n* changes Filter API\r\n\r\n* Fixes example with Filter API\r\n\r\n* Update PlatformIO scripts for the upcoming 3.0 core (#8183)\r\n\r\n* Update PlatformIO scripts for the upcoming 3.0 core\r\n\r\n* Dynamically select proper framework-arduinoespressif32-libs package\r\n\r\nWith this change the dev-platform will be dynamically configured to\r\npull the latest .zip package with precompiled libraries from extracted from\r\npackage_esp32_index.template.json\r\n\r\n* free memory on detach (#8264)\r\n\r\n* SPI - Peripheral manager implementation  (#8255)\r\n\r\n* spi periman implementation\r\n\r\n* fix header file\r\n\r\n* remove unused struct\r\n\r\n* fix missing braces\r\n\r\n* Update esp32-hal-rmt.c (#8216)\r\n\r\nOptimizing Peripheral Manager Test\r\n\r\n* I2C - Peripheral manager implementation (#8220)\r\n\r\n* i2c-master periman initial commit\r\n\r\n* i2c-master make detachbus static + comment remove\r\n\r\n* i2c-slave periman implementation\r\n\r\n* SetPinBus to INIT on i2cDeinits\r\n\r\n* Fix slave pins deinit\r\n\r\n* remove dbg logs\r\n\r\n* set ret to ESP_FAIL instead of returning\r\n\r\n* Fix warnings in hal-spi caused by pariman transition\r\n\r\n* Update esptool.py to version 4.6\r\n\r\n* Add platform support for ESP_SR\r\n\r\n* Add USB Type and valid pin check to periman\r\n\r\n* replace bus with spi->num+1 (#8279)\r\n\r\n* Remove default pins from SPI HAL\r\n\r\n* Add commented out handlers for esptool.js in TinyUSB CDC\r\n\r\nFor future use\r\n\r\n* Add build defines for host os and fqbn (for debug purposes)\r\n\r\n* Provide proper memory caps total size\r\n\r\n* Update Esp.cpp\r\n\r\n* SDMMC - Peripheral manager implementation (#8289)\r\n\r\n* sdmmc periman implemented\r\n\r\n* save pins when SOC_SDMMC_USE_IOMUX\r\n\r\n* IDF release/v5.1 4bc762621d (#8292)\r\n\r\n* Adds missing pinMode (#8312)\r\n\r\n* Adds missing pinMode\r\n\r\nThe example code lacks a pinMode() to initialize the GPIO 0 (button). In Arduino Core 3.0.0, it prints an error message when trying to read a not initialized GPIO.\r\n\r\n* Update KeyboardLogout.ino\r\n\r\nAdds <buttonPin> to keep code standard\r\n\r\n* Update KeyboardReprogram.ino\r\n\r\nAdds <buttonPin> to keep code standard\r\n\r\n* LEDC Fade implementation (#8338)\r\n\r\n* fade API + pointer fixes\r\n\r\n* Add fade api\r\n\r\n* Add fade example\r\n\r\n* update ledc docs\r\n\r\n* remove unused variables\r\n\r\n* fix path to example\r\n\r\n* Adds USB to Peripheral Manager - Arduino Core 3.0.0 (#8335)\r\n\r\n* ETHERNET - Peripheral manager implementation (#8297)\r\n\r\n* Peripheral manager implemented\r\n\r\n* remove unused variable\r\n\r\n* Add all RMII pins\r\n\r\n* fix typo\r\n\r\n* Adds HardwareSerial to Peripheral Manager Arduino 3.0.0 (#8328)\r\n\r\n* Do not limit ETHERNET in periman to only ESP32. SPI is also an option\r\n\r\n* Initial support for ESP32-C6 (#8337)\r\n\r\n* Add checks for SOC defines (#8351)\r\n\r\n* Add checks for SOC defines\r\n\r\n* Add SoC checks to BLE library\r\n\r\n* fix i2c compilation error\r\n\r\n* fix wrong placement of include\r\n\r\n* add check to SPI library\r\n\r\n* add check to USB library\r\n\r\n* add checks to Wire library\r\n\r\n* Feature/esp32h2 support (#8373)\r\n\r\n* Initial support for ESP32H2\r\n\r\n* Additional changes for ESP32H2\r\n\r\n* Update libs for ESP32H2\r\n\r\n* Fix flashing on ESP32-H2\r\n\r\n* Fix GPIO Configs for ESP32-C6 and ESP32-H2\r\n\r\n* Update Timer test sketch\r\n\r\n* Fix upload flash parameters\r\n\r\n* Use ets_write_char_uart instead of ets_printf in log_printfv\r\n\r\n* Print full chip report when log level is sufficient (#8282)\r\n\r\n* ESP32-C3 does not have ets_write_char_uart\r\n\r\n* Fix BLE gap event name\r\n\r\n* HW Testing - Pytest update (#8389)\r\n\r\n* update tests requirements\r\n\r\n* remove already handled components\r\n\r\n* Update version of pytest\r\n\r\n* Add missing ESP32-H2 to hil.yml\r\n\r\n* Updated FreeRTOS names (#8418)\r\n\r\n* HW Testing -  ESP32-C6 + ESP32-H2 fixes (#8404)\r\n\r\n* add C6/H2 to tests cfg.json\r\n\r\n* remove ,\r\n\r\n* workflow runs-on runner by matrix\r\n\r\n* Add need for arduino tag to select runner\r\n\r\n* Add cryptography to requirements.txt\r\n\r\n* Removed duplicate TX1 define for H2 (#8402)\r\n\r\n* Fix broken examples\r\n\r\n* Fixes RMT filter & idle timing and setup (#8359)\r\n\r\n* Fixes Filter and Idle parameter to uint32\r\n\r\n* Fixes Filter and Idle setup\r\n\r\n* Fixes it to 5.1Libs branch\r\n\r\n* fix RMT CLK source and Filter API\r\n\r\n* fixes missing ;\r\n\r\n* fixes missing ;\r\n\r\n* fixes RMT example\r\n\r\n* IDF release/v5.1 a7b62bbcaf (#8438)\r\n\r\n* Add workflow to build executables from python scripts (#8290)\r\n\r\n* Add workflow to build executables from python scripts\r\n\r\n* Push binary to tools\r\n\r\n* Enable executable signing on Windows\r\n\r\n* Update get.py\r\n\r\n* Push binary to tools\r\n\r\n* Try with multiple files\r\n\r\n* Try more actions\r\n\r\n* Try powershell\r\n\r\n* Restore tools so they do not get rebuilt\r\n\r\n* Finalize scripts\r\n\r\n* Push binary to tools\r\n\r\n* App rollback should be after PSRAM is initialized\r\n\r\n* Correcting RX1 to GPIO4 and TX1 to GPIO5 to be consistent with documentation. Previous pin use works but is inconsistent with C6 docs.\r\n\r\n* Fixes Memory Leak (#8486)\r\n\r\n* fixes preprocessor test (#8485)\r\n\r\n* fixes preprocessor test\r\n\r\nWhen using `#define USE_SOFT_AP` \r\nChange\r\n`&& not USE_SOFT_AP` ==> `&& !defined(USE_SOFT_AP)`\r\n\r\n* Adds any BLE capable device in WiFiProv.ino\r\n\r\nRemoving ESP32 restriction for BLE Provisioning.\r\n\r\n* fix flash mode read out for C6\r\n\r\n* Add option for custom partitions without restrictions\r\n\r\n* SD_MMC update (#8298)\r\n\r\n* Updated SD_MMC lib and examples\r\n\r\n* Removed getter implementation and commented usage in examples\r\n\r\n* squashed updates\r\n\r\n* IDF release/v5.1 f0437b945f (#8599)\r\n\r\n* Update package_esp32_index.template.json\r\n\r\n* Fix printf format build error in BTAdvertisedDeviceSet.cpp\r\n\r\n---------\r\n\r\nCo-authored-by: Pedro Minatel <pedro.minatel@espressif.com>\r\nCo-authored-by: Rodrigo Garcia <rodrigo.garcia@espressif.com>\r\nCo-authored-by: Ha Thach <thach@tinyusb.org>\r\nCo-authored-by: Martin Turski <quiret@vfemail.net>\r\nCo-authored-by: raviypujar <raviypujar@gmail.com>\r\nCo-authored-by: Jason2866 <24528715+Jason2866@users.noreply.github.com>\r\nCo-authored-by: Tom\u00e1\u0161 Piln\u00fd <34927466+PilnyTomas@users.noreply.github.com>\r\nCo-authored-by: Jan Proch\u00e1zka <90197375+P-R-O-C-H-Y@users.noreply.github.com>\r\nCo-authored-by: Daniel Berlin <dberlin@dberlin.org>\r\nCo-authored-by: Nima Askari (\u0646\u06cc\u0645\u0627 \u0639\u0633\u06a9\u0631\u06cc) <nimaltd@yahoo.com>\r\nCo-authored-by: rtpmsys <106180646+rtpmsys@users.noreply.github.com>\r\nCo-authored-by: bytiful <55647551+bytiful@users.noreply.github.com>\r\nCo-authored-by: tmfarrington <tmfarrington@users.noreply.github.com>\r\nCo-authored-by: Krzysiek S <chris.streh@gmail.com>\r\nCo-authored-by: surt <carl.olsson@gmail.com>\r\nCo-authored-by: Max Scheffler <max.scheffler@pm.me>\r\nCo-authored-by: Clemens Kirchgatterer <clemens@1541.org>\r\nCo-authored-by: Peter Pan's Techland <twinkle-pirate@hotmail.com>\r\nCo-authored-by: Roman <programmeofficemilkyway@gmail.com>\r\nCo-authored-by: Eistee <Eistee82@users.noreply.github.com>\r\nCo-authored-by: David McCurley <44048235+mrengineer7777@users.noreply.github.com>\r\nCo-authored-by: Gaya3N25 <30388176+Gaya3N25@users.noreply.github.com>\r\nCo-authored-by: renebohne <rene.bohne@gmail.com>\r\nCo-authored-by: Oliv\u00e9r Rem\u00e9ny <25034625+remenyo@users.noreply.github.com>\r\nCo-authored-by: davidk88 <david.kotar@gmail.com>\r\nCo-authored-by: Vojt\u011bch Barto\u0161ka <76958047+VojtechBartoska@users.noreply.github.com>\r\nCo-authored-by: James Armstrong <jamesarmstrong3@me.com>\r\nCo-authored-by: Valerii Koval <valeros@users.noreply.github.com>\r\nCo-authored-by: Peter G. Jensen <root@petergjoel.dk>",
            "additions": 6,
            "deletions": 3,
            "change_type": "MODIFY",
            "diff": "@@ -16,6 +16,9 @@\n  * set in the data will be advertised.\n  *\n  */\n+#include \"soc/soc_caps.h\"\n+#if SOC_BLE_SUPPORTED\n+\n #include \"sdkconfig.h\"\n #if defined(CONFIG_BLUEDROID_ENABLED)\n #include \"BLEAdvertising.h\"\n@@ -528,7 +531,7 @@ void BLEAdvertising::handleGAPEvent(\n \t}\n }\n \n-#ifdef CONFIG_BT_BLE_50_FEATURES_SUPPORTED\n+#ifdef SOC_BLE_50_SUPPORTED\n \n /**\n * @brief           Creator\n@@ -763,7 +766,7 @@ void BLEMultiAdvertising::setDuration(uint8_t instance, int duration, int max_ev\n \text_adv[instance] = { instance, duration, max_events };\n }\n \n-#endif // CONFIG_BT_BLE_50_FEATURES_SUPPORTED\n-\n+#endif // SOC_BLE_50_SUPPORTED\n \n #endif /* CONFIG_BLUEDROID_ENABLED */\n+#endif /* SOC_BLE_SUPPORTED */\n",
            "comment_added_diff": {
                "769": "#endif // SOC_BLE_50_SUPPORTED"
            },
            "comment_deleted_diff": {
                "766": "#endif // CONFIG_BT_BLE_50_FEATURES_SUPPORTED"
            },
            "comment_modified_diff": {}
        }
    ],
    "BLEAdvertising.h": [],
    "BLEBeacon.h": [],
    "BLECharacteristic.cpp": [
        {
            "commit": "822f252b353cfd808c77c9bc8369bc0cb4e0b5be",
            "timestamp": "2023-10-06T15:50:11+03:00",
            "author": "Me No Dev",
            "commit_message": "BLE upgrades (#8724)\n\n* Renamed library description\r\n\r\n* Updated Eddystone URL (not complete)\r\n\r\n* Updated Eddystone URL\r\n\r\n* Updated Eddystone classes and beacon scanner\r\n\r\n* Renamed examples - removing prefix BLE_\r\n\r\n* Renamed Beacon_Scanner\r\n\r\n* Updated TLM\r\n\r\n* Changed std::string to Arduino String\r\n\r\n* More std::string -> String\r\n\r\n* Changed String in forgotten file\r\n\r\n* Changed .data to .c_str\r\n\r\n* Reverting single String type change\r\n\r\n* Few more fixes related to the String transition\r\n\r\n* Fixed URL and Utils error\r\n\r\n* Added and modified compatibility safeguards for BLE5 examples\r\n\r\n* Added #include WString.h\r\n\r\n* Fixed Beacon_Scanner\r\n\r\n* Remove commented include\r\n\r\nCo-authored-by: Lucas Saavedra Vaz <lucassvaz@yahoo.com.br>\r\n\r\n---------\r\n\r\nCo-authored-by: Tomas Pilny <tomas.pilny@espressif.com>\r\nCo-authored-by: Lucas Saavedra Vaz <lucassvaz@yahoo.com.br>",
            "additions": 13,
            "deletions": 13,
            "change_type": "MODIFY",
            "diff": "@@ -178,7 +178,7 @@ BLEUUID BLECharacteristic::getUUID() {\n  * @brief Retrieve the current value of the characteristic.\n  * @return A pointer to storage containing the current characteristic value.\n  */\n-std::string BLECharacteristic::getValue() {\n+String BLECharacteristic::getValue() {\n \treturn m_value.getValue();\n } // getValue\n \n@@ -376,19 +376,19 @@ void BLECharacteristic::handleGATTServerEvent(\n \t\t\t\t\tesp_gatt_rsp_t rsp;\n \n \t\t\t\t\tif (param->read.is_long) {\n-\t\t\t\t\t\tstd::string value = m_value.getValue();\n+\t\t\t\t\t\tString value = m_value.getValue();\n \n \t\t\t\t\t\tif (value.length() - m_value.getReadOffset() < maxOffset) {\n \t\t\t\t\t\t\t// This is the last in the chain\n \t\t\t\t\t\t\trsp.attr_value.len    = value.length() - m_value.getReadOffset();\n \t\t\t\t\t\t\trsp.attr_value.offset = m_value.getReadOffset();\n-\t\t\t\t\t\t\tmemcpy(rsp.attr_value.value, value.data() + rsp.attr_value.offset, rsp.attr_value.len);\n+\t\t\t\t\t\t\tmemcpy(rsp.attr_value.value, value.c_str() + rsp.attr_value.offset, rsp.attr_value.len);\n \t\t\t\t\t\t\tm_value.setReadOffset(0);\n \t\t\t\t\t\t} else {\n \t\t\t\t\t\t\t// There will be more to come.\n \t\t\t\t\t\t\trsp.attr_value.len    = maxOffset;\n \t\t\t\t\t\t\trsp.attr_value.offset = m_value.getReadOffset();\n-\t\t\t\t\t\t\tmemcpy(rsp.attr_value.value, value.data() + rsp.attr_value.offset, rsp.attr_value.len);\n+\t\t\t\t\t\t\tmemcpy(rsp.attr_value.value, value.c_str() + rsp.attr_value.offset, rsp.attr_value.len);\n \t\t\t\t\t\t\tm_value.setReadOffset(rsp.attr_value.offset + maxOffset);\n \t\t\t\t\t\t}\n \t\t\t\t\t} else { // read.is_long == false\n@@ -397,19 +397,19 @@ void BLECharacteristic::handleGATTServerEvent(\n \t\t\t\t\t\t// Invoke the read callback.\n \t\t\t\t\t\tm_pCallbacks->onRead(this, param);\n \n-\t\t\t\t\t\tstd::string value = m_value.getValue();\n+\t\t\t\t\t\tString value = m_value.getValue();\n \n \t\t\t\t\t\tif (value.length() + 1 > maxOffset) {\n \t\t\t\t\t\t\t// Too big for a single shot entry.\n \t\t\t\t\t\t\tm_value.setReadOffset(maxOffset);\n \t\t\t\t\t\t\trsp.attr_value.len    = maxOffset;\n \t\t\t\t\t\t\trsp.attr_value.offset = 0;\n-\t\t\t\t\t\t\tmemcpy(rsp.attr_value.value, value.data(), rsp.attr_value.len);\n+\t\t\t\t\t\t\tmemcpy(rsp.attr_value.value, value.c_str(), rsp.attr_value.len);\n \t\t\t\t\t\t} else {\n \t\t\t\t\t\t\t// Will fit in a single packet with no callbacks required.\n \t\t\t\t\t\t\trsp.attr_value.len    = value.length();\n \t\t\t\t\t\t\trsp.attr_value.offset = 0;\n-\t\t\t\t\t\t\tmemcpy(rsp.attr_value.value, value.data(), rsp.attr_value.len);\n+\t\t\t\t\t\t\tmemcpy(rsp.attr_value.value, value.c_str(), rsp.attr_value.len);\n \t\t\t\t\t\t}\n \t\t\t\t\t}\n \t\t\t\t\trsp.attr_value.handle   = param->read.handle;\n@@ -497,7 +497,7 @@ void BLECharacteristic::notify(bool is_notification) {\n \n \tm_pCallbacks->onNotify(this);   // Invoke the notify callback.\n \n-\tGeneralUtils::hexDump((uint8_t*)m_value.getValue().data(), m_value.getValue().length());\n+\tGeneralUtils::hexDump((uint8_t*)m_value.getValue().c_str(), m_value.getValue().length());\n \n \tif (getService()->getServer()->getConnectedCount() == 0) {\n \t\tlog_v(\"<< notify: No connected clients.\");\n@@ -535,7 +535,7 @@ void BLECharacteristic::notify(bool is_notification) {\n \t\tesp_err_t errRc = ::esp_ble_gatts_send_indicate(\n \t\t\t\tgetService()->getServer()->getGattsIf(),\n \t\t\t\tmyPair.first,\n-\t\t\t\tgetHandle(), length, (uint8_t*)m_value.getValue().data(), !is_notification); // The need_confirm = false makes this a notify.\n+\t\t\t\tgetHandle(), length, (uint8_t*)m_value.getValue().c_str(), !is_notification); // The need_confirm = false makes this a notify.\n \t\tif (errRc != ESP_OK) {\n \t\t\tlog_e(\"<< esp_ble_gatts_send_ %s: rc=%d %s\",is_notification?\"notify\":\"indicate\", errRc, GeneralUtils::errorToString(errRc));\n \t\t\tm_semaphoreConfEvt.give();\n@@ -679,8 +679,8 @@ void BLECharacteristic::setValue(uint8_t* data, size_t length) {\n  * @param [in] Set the value of the characteristic.\n  * @return N/A.\n  */\n-void BLECharacteristic::setValue(std::string value) {\n-\tsetValue((uint8_t*)(value.data()), value.length());\n+void BLECharacteristic::setValue(String value) {\n+\tsetValue((uint8_t*)(value.c_str()), value.length());\n } // setValue\n \n void BLECharacteristic::setValue(uint16_t& data16) {\n@@ -751,8 +751,8 @@ void BLECharacteristic::setWriteProperty(bool value) {\n  * @brief Return a string representation of the characteristic.\n  * @return A string representation of the characteristic.\n  */\n-std::string BLECharacteristic::toString() {\n-\tstd::string res = \"UUID: \" + m_bleUUID.toString() + \", handle : 0x\";\n+String BLECharacteristic::toString() {\n+\tString res = \"UUID: \" + m_bleUUID.toString() + \", handle : 0x\";\n \tchar hex[5];\n \tsnprintf(hex, sizeof(hex), \"%04x\", m_handle);\n \tres += hex;\n",
            "comment_added_diff": {
                "538": "\t\t\t\tgetHandle(), length, (uint8_t*)m_value.getValue().c_str(), !is_notification); // The need_confirm = false makes this a notify."
            },
            "comment_deleted_diff": {
                "538": "\t\t\t\tgetHandle(), length, (uint8_t*)m_value.getValue().data(), !is_notification); // The need_confirm = false makes this a notify."
            },
            "comment_modified_diff": {
                "538": "\t\t\t\tgetHandle(), length, (uint8_t*)m_value.getValue().data(), !is_notification); // The need_confirm = false makes this a notify."
            }
        }
    ],
    "BLECharacteristic.h": [],
    "BLECharacteristicMap.cpp": [
        {
            "commit": "822f252b353cfd808c77c9bc8369bc0cb4e0b5be",
            "timestamp": "2023-10-06T15:50:11+03:00",
            "author": "Me No Dev",
            "commit_message": "BLE upgrades (#8724)\n\n* Renamed library description\r\n\r\n* Updated Eddystone URL (not complete)\r\n\r\n* Updated Eddystone URL\r\n\r\n* Updated Eddystone classes and beacon scanner\r\n\r\n* Renamed examples - removing prefix BLE_\r\n\r\n* Renamed Beacon_Scanner\r\n\r\n* Updated TLM\r\n\r\n* Changed std::string to Arduino String\r\n\r\n* More std::string -> String\r\n\r\n* Changed String in forgotten file\r\n\r\n* Changed .data to .c_str\r\n\r\n* Reverting single String type change\r\n\r\n* Few more fixes related to the String transition\r\n\r\n* Fixed URL and Utils error\r\n\r\n* Added and modified compatibility safeguards for BLE5 examples\r\n\r\n* Added #include WString.h\r\n\r\n* Fixed Beacon_Scanner\r\n\r\n* Remove commented include\r\n\r\nCo-authored-by: Lucas Saavedra Vaz <lucassvaz@yahoo.com.br>\r\n\r\n---------\r\n\r\nCo-authored-by: Tomas Pilny <tomas.pilny@espressif.com>\r\nCo-authored-by: Lucas Saavedra Vaz <lucassvaz@yahoo.com.br>",
            "additions": 36,
            "deletions": 36,
            "change_type": "MODIFY",
            "diff": "@@ -23,7 +23,7 @@\n  * @return The characteristic.\n  */\n BLECharacteristic* BLECharacteristicMap::getByHandle(uint16_t handle) {\n-\treturn m_handleMap.at(handle);\n+  return m_handleMap.at(handle);\n } // getByHandle\n \n \n@@ -43,13 +43,13 @@ BLECharacteristic* BLECharacteristicMap::getByUUID(const char* uuid) {\n  * @return The characteristic.\n  */\n BLECharacteristic* BLECharacteristicMap::getByUUID(BLEUUID uuid) {\n-\tfor (auto &myPair : m_uuidMap) {\n-\t\tif (myPair.first->getUUID().equals(uuid)) {\n-\t\t\treturn myPair.first;\n-\t\t}\n-\t}\n-\t//return m_uuidMap.at(uuid.toString());\n-\treturn nullptr;\n+  for (auto &myPair : m_uuidMap) {\n+    if (myPair.first->getUUID().equals(uuid)) {\n+      return myPair.first;\n+    }\n+  }\n+  //return m_uuidMap.at(uuid.toString());\n+  return nullptr;\n } // getByUUID\n \n \n@@ -58,11 +58,11 @@ BLECharacteristic* BLECharacteristicMap::getByUUID(BLEUUID uuid) {\n  * @return The first characteristic in the map.\n  */\n BLECharacteristic* BLECharacteristicMap::getFirst() {\n-\tm_iterator = m_uuidMap.begin();\n-\tif (m_iterator == m_uuidMap.end()) return nullptr;\n-\tBLECharacteristic* pRet = m_iterator->first;\n-\tm_iterator++;\n-\treturn pRet;\n+  m_iterator = m_uuidMap.begin();\n+  if (m_iterator == m_uuidMap.end()) return nullptr;\n+  BLECharacteristic* pRet = m_iterator->first;\n+  m_iterator++;\n+  return pRet;\n } // getFirst\n \n \n@@ -71,10 +71,10 @@ BLECharacteristic* BLECharacteristicMap::getFirst() {\n  * @return The next characteristic in the map.\n  */\n BLECharacteristic* BLECharacteristicMap::getNext() {\n-\tif (m_iterator == m_uuidMap.end()) return nullptr;\n-\tBLECharacteristic* pRet = m_iterator->first;\n-\tm_iterator++;\n-\treturn pRet;\n+  if (m_iterator == m_uuidMap.end()) return nullptr;\n+  BLECharacteristic* pRet = m_iterator->first;\n+  m_iterator++;\n+  return pRet;\n } // getNext\n \n \n@@ -85,10 +85,10 @@ BLECharacteristic* BLECharacteristicMap::getNext() {\n  * @param [in] param\n  */\n void BLECharacteristicMap::handleGATTServerEvent(esp_gatts_cb_event_t event, esp_gatt_if_t gatts_if, esp_ble_gatts_cb_param_t* param) {\n-\t// Invoke the handler for every Service we have.\n-\tfor (auto& myPair : m_uuidMap) {\n-\t\tmyPair.first->handleGATTServerEvent(event, gatts_if, param);\n-\t}\n+  // Invoke the handler for every Service we have.\n+  for (auto& myPair : m_uuidMap) {\n+    myPair.first->handleGATTServerEvent(event, gatts_if, param);\n+  }\n } // handleGATTServerEvent\n \n \n@@ -99,7 +99,7 @@ void BLECharacteristicMap::handleGATTServerEvent(esp_gatts_cb_event_t event, esp\n  * @return N/A.\n  */\n void BLECharacteristicMap::setByHandle(uint16_t handle, BLECharacteristic* characteristic) {\n-\tm_handleMap.insert(std::pair<uint16_t, BLECharacteristic*>(handle, characteristic));\n+  m_handleMap.insert(std::pair<uint16_t, BLECharacteristic*>(handle, characteristic));\n } // setByHandle\n \n \n@@ -110,7 +110,7 @@ void BLECharacteristicMap::setByHandle(uint16_t handle, BLECharacteristic* chara\n  * @return N/A.\n  */\n void BLECharacteristicMap::setByUUID(BLECharacteristic* pCharacteristic, BLEUUID uuid) {\n-\tm_uuidMap.insert(std::pair<BLECharacteristic*, std::string>(pCharacteristic, uuid.toString()));\n+  m_uuidMap.insert(std::pair<BLECharacteristic*, String>(pCharacteristic, uuid.toString()));\n } // setByUUID\n \n \n@@ -118,19 +118,19 @@ void BLECharacteristicMap::setByUUID(BLECharacteristic* pCharacteristic, BLEUUID\n  * @brief Return a string representation of the characteristic map.\n  * @return A string representation of the characteristic map.\n  */\n-std::string BLECharacteristicMap::toString() {\n-\tstd::string res;\n-\tint count = 0;\n-\tchar hex[5];\n-\tfor (auto &myPair: m_uuidMap) {\n-\t\tif (count > 0) {res += \"\\n\";}\n-\t\tsnprintf(hex, sizeof(hex), \"%04x\", myPair.first->getHandle());\n-\t\tcount++;\n-\t\tres += \"handle: 0x\";\n-\t\tres += hex;\n-\t\tres += \", uuid: \" + myPair.first->getUUID().toString();\n-\t}\n-\treturn res;\n+String BLECharacteristicMap::toString() {\n+  String res;\n+  int count = 0;\n+  char hex[5];\n+  for (auto &myPair: m_uuidMap) {\n+    if (count > 0) {res += \"\\n\";}\n+    snprintf(hex, sizeof(hex), \"%04x\", myPair.first->getHandle());\n+    count++;\n+    res += \"handle: 0x\";\n+    res += hex;\n+    res += \", uuid: \" + myPair.first->getUUID().toString();\n+  }\n+  return res;\n } // toString\n \n \n",
            "comment_added_diff": {
                "88": "  // Invoke the handler for every Service we have."
            },
            "comment_deleted_diff": {
                "88": "\t// Invoke the handler for every Service we have."
            },
            "comment_modified_diff": {
                "88": "\t// Invoke the handler for every Service we have."
            }
        }
    ],
    "BLEClient.cpp": [
        {
            "commit": "6f7a1ca76ada4d705d79ce863450c91349327a79",
            "timestamp": "2023-10-05T14:54:25+03:00",
            "author": "Me No Dev",
            "commit_message": "ESP-IDF v5.1 (#7733)\n\n* Initial changes to compile under ESP-IDF v5.1\r\n\r\n* Initial import for ESP-IDF v5.1 libs\r\n\r\n* Update toolchain\r\n\r\n* Update esp32-hal-psram.c\r\n\r\n* Add missing LDs\r\n\r\n* Update platform.txt\r\n\r\n* Stop some CI jobs, because they will always fail\r\n\r\n* Fix examples\r\n\r\n* Update app_httpd.cpp\r\n\r\n* Update ResetReason.ino\r\n\r\n* Warnings fixes\r\n\r\n* Added the example guideline and template (#7665)\r\n\r\n* Added the example guideline and template\r\n\r\n* PR review changes with some typos and grammar fixes\r\n\r\n* Changes according to the PR review\r\n\r\n* Added ESP32-S3 link to the datasheet (#7738)\r\n\r\n* Update HiFreq_ADC.ino\r\n\r\n* Replace periph_ctrl.h use because of deprecation\r\n\r\n* Replace esp_spi_flash.h use because of deprecation\r\n\r\n* Add includes to male mDNS::enableWorkstation compile\r\n\r\n* Fix ssl_client mbedtls_pk_parse_key callback\r\n\r\n* Update temperature sensor driver\r\n\r\n* Allow sketch_utils to compile with arduino-cli\r\n\r\n* Run CI with arduino-cli\r\n\r\n* Fix arduino-cli CI build on Windows\r\n\r\n* Refactor platform.txt to not use components installed through the board manager when running from git\r\n\r\n* Initial Peripheral Manager Implementation\r\n\r\n* Update SigmaDelta driver to use the new ESP-IDF driver API\r\n\r\n* Small improvements to peripheral manager and SigmaDelta\r\n\r\n* Remove deleted function from SigmaDelta header\r\n\r\n* Update DAC driver to use the new ESP-IDF driver API\r\n\r\n* Adds softAp(String) to make it compatible with ESP8266 (#7801)\r\n\r\n* Fix commentary (#7800)\r\n\r\nMinor fix based on observation done in https://github.com/espressif/arduino-esp32/issues/7795#issuecomment-1416868611\r\n\r\n* add adafruit new board feather esp32s2 reserve tft (#7794)\r\n\r\n* bugfix: add <stdint.h> for uint8_t to avoid compilation failure (GCC 11.2.0) (#7744)\r\n\r\n* Adding 3rd party boards for VALTRACK-V4-VTS-ESP32-C3 & VALTRACK-V4-MFW-ESP32-C3 (#7735)\r\n\r\n* Added VALTRACK-V4-VTS-ESP32-C3 board definition\r\n\r\nCreated pins_arduino.h & made changes to boards.txt with necessary changes\r\n\r\n* Modified the URL\r\n\r\n* Renamed json\r\n\r\n* renamed all auRL\r\n\r\n* Adding VALTRACK-V4 series board definitions\r\n\r\nAdded VALTRACK-V4-VTS-ESP32C3 & VALTRACK-V4-MFW-ESP32-C3 board variants\r\n\r\n* Adding VALTRACK-V4 series board definitions\r\n\r\nAdded VALTRACK-V4-VTS-ESP32C3 & VALTRACK-V4-MFW-ESP32-C3 board variants\r\n\r\n* Reverted package_esp32_index.template.json\r\n\r\nrestored package_esp32_index.template.json from edits\r\n\r\n* Reverted package_esp32_index.template.json\r\n\r\nAdded new line to package_esp32_index.template.json\r\n\r\n* Update Platformio CI (#7725)\r\n\r\n* WiFiClient example fix (#7711)\r\n\r\n* Modified WiFiClient example to use thingspeak instead of non-functionig sparkfun\r\n\r\n* Moved instructions to README\r\n\r\n* Fixed spelling\r\n\r\n* Added link to S3 datasheet\r\n\r\n---------\r\n\r\nCo-authored-by: Jan Proch\u00e1zka <90197375+P-R-O-C-H-Y@users.noreply.github.com>\r\n\r\n* Mirror update from Heltec repository (#7709)\r\n\r\nHeltec updated the I2C pins in https://github.com/Heltec-Aaron-Lee/WiFi_Kit_series/commit/b10f4bf85d13fd01be80dcdb0eb59e6a8c8ba19a\r\n\r\n* Fixes BLE data printing (#7699)\r\n\r\n* Fixes BLE data printing\r\n\r\nBLE data has no '\\0' terminator, therefore it can't be printed as a regular C string.\r\nThis fix just prints the BLE data based on its length.\r\n\r\n* Simplify printing to a single call\r\n\r\n* split menu options + lora_32_V3 fix (#7697)\r\n\r\n* Change header gaurd name (#7696)\r\n\r\n* Fix Name (#7691)\r\n\r\nWrong name in definitions.\r\n\r\n* Fix error in WiFiClient.cpp where the connect function fails for timeouts below 1 second (#7686)\r\n\r\n* Update WiFiClient.cpp\r\n\r\nThis change will allow specifying connect timeouts below 1 second. Without this change, if connect timeouts under 1 second are given, the connect defaults to 0ms and fails. \r\nThis will also allow timeouts in fractions of seconds, e.g. 1500ms. Without this change, connect timeouts are truncated to full second increments.\r\n\r\n* Make parameter timeout_ms clear\r\n\r\n* Change connection timeout_ms name for clarity\r\n\r\n---------\r\n\r\nCo-authored-by: Rodrigo Garcia <rodrigo.garcia@espressif.com>\r\n\r\n* fixed the function header (#7674)\r\n\r\n* fixed the function header\r\n\r\n* fixed function name and paramaters\r\n\r\n---------\r\n\r\nCo-authored-by: Jan Procha\u0301zka <90197375+P-R-O-C-H-Y@users.noreply.github.com>\r\n\r\n* Ticker fix solving #6155 (#7664)\r\n\r\n* Wrapped Ticker functions with #pragma disabling -Wcast-function-type\r\n\r\n* Revert \"Wrapped Ticker functions with #pragma disabling -Wcast-function-type\"\r\n\r\nThis reverts commit 160be7e67a10d01b6e44c4bf2521c0ccd6348976.\r\n\r\n* Fixed Ticker example\r\n\r\n* Modified Ticker example\r\n\r\n* Fixed LED_BUILTIN err for ESP32\r\n\r\n---------\r\n\r\nCo-authored-by: Jan Proch\u00e1zka <90197375+P-R-O-C-H-Y@users.noreply.github.com>\r\n\r\n* setPins fix ESP32 \"specified pins are not supported by this chip.\" (#7646)\r\n\r\n[ESP32: SDMMCFS::begin hardcodes the usage of slot 1, only check if the pins match slot 1 pins.]\r\n\r\nsetPins() was testing pins D1, D2 and D3 all against D1 ... fine in 1 pin mode when all are -1 not so much if you're trying to get 4 pin mode working.\r\nI now see this function doesn't really do anything on the ESP32...accept now correctly checks that you are trying to use the slot 1 pins.\r\n\r\nCo-authored-by: Jan Proch\u00e1zka <90197375+P-R-O-C-H-Y@users.noreply.github.com>\r\n\r\n* Allow passing IP as connect method parameter in WiFiClientSecure and skip unnecessary host-ip conversions (#7643)\r\n\r\n* Add LED_BUILTIN* definitions and initialization for LEDs to stop them floating. (#7636)\r\n\r\nCo-authored-by: Rodrigo Garcia <rodrigo.garcia@espressif.com>\r\n\r\n* Expand path to tinuf2 image when checking existence in platformio-build.py (#7631)\r\n\r\n* Expand path to tinuf2 image when checking existence\r\n\r\n* More isFiles fixed\r\n\r\n* Remove (useless) trailing semicolon from Print.cpp (#7622)\r\n\r\n* ADD: New variant Edgebox-ESP-100 (#7771)\r\n\r\n* ADD: New variant Edgebox-ESP-100\r\n\r\n* FIX: Edgebox-ESP-100 Board.txt usb mode option change back to default value as ESP32S3\r\n\r\n* Add Crabik Slot ESP32-S3 board (#7790)\r\n\r\n* Added Crabik Slot ESP32-S3\r\n\r\n* Adding CPU frequency settings and removing excess from partition scheme settings\r\n\r\n* new variant LilyGO T-Display-S3 (#7763)\r\n\r\n* new variant LilyGO T-Display-S3\r\n\r\nhttps://github.com/Xinyuan-LilyGO/T-Display-S3\r\n\r\n* Add boards.txt definition\r\n\r\n---------\r\n\r\nCo-authored-by: Me No Dev <me-no-dev@users.noreply.github.com>\r\n\r\n* Update get.py to support Apple ARM64\r\n\r\n* Update package_esp32_index.template.json\r\n\r\n* WString Return bool (#7774)\r\n\r\n* Add Roboheart Hercules development board to the esp32-core (#7672)\r\n\r\n* added Roboheart Hercules pin definitions and board.txt entries\r\n\r\n* added package_roboheat.json for prototyping\r\n\r\n* Roboheart Hercules pins\r\n\r\n* Updated the pins\r\n\r\n* Delete package_roboheart.json\r\n\r\n* Requested changes\r\n\r\n---------\r\n\r\nCo-authored-by: renebohne <rene.bohne@gmail.com>\r\n\r\n* Reword \"ESP-IDF as Component\" (#7812)\r\n\r\nI think \"Arduino as an ESP-IDF component\" or just \"As ESP-IDF component\" instead of  \"ESP-IDF as Component\" is more correct way to name the link.\r\n\r\n1. \"ESP-IDF as Component\" would imply that ESP-IDF is some sort of library for Arduino, which is (IMO) misleading, because it's true the other way around.\r\n2. It's written as \"Arduino as an ESP-IDF component\" on the webpage it points to as well.\r\n\r\n- Also I removed the capitalization from \"Component\" as I have not found a reason why is it capitalized.\r\n\r\n* add new board Adafruit Feather ESP32-S3 Reverse TFT (#7811)\r\n\r\n* Multi threading examples (tasks, queues, semaphores, mutexes) (#7660)\r\n\r\n* Moved and renamed example ESP32/FreeRTOS to MultiThreading/BasicMultiThreading\r\n\r\n* Added dummy files\r\n\r\n* Modified original example\r\n\r\n* Fixed BasicMultiThreading.ino\r\n\r\n* Added Example demonstrating use of queues\r\n\r\n* Extended info in BasicMultiThreading\r\n\r\n* Renamed Queues to singular Queue\r\n\r\n* Added Mutex example\r\n\r\n* Added Semaphore example\r\n\r\n* Moved info from example to README\r\n\r\n* Moved doc from Mutex to README\r\n\r\n* Added Queue README\r\n\r\n* Removed unecesary text\r\n\r\n* Fixed grammar\r\n\r\n* Increased stack size for Sempahore example\r\n\r\n* Added headers into .ino files\r\n\r\n* Added word Example at the end of title in README\r\n\r\n* removed unused line\r\n\r\n* Added forgotten README\r\n\r\n* Modified BasicMultiThreading example\r\n\r\n* Added missing S3 entry in README\r\n\r\n* moved location\r\n\r\n* Update ESP-IDF libs\r\n\r\n* Update CMakeLists.txt\r\n\r\n* Update esptool to v4.4\r\n\r\n* Add function timerAttachInterruptFlag (#7809)\r\n\r\n* Update esptool to v4.5\r\n\r\n* ADC refactoring (#7827)\r\n\r\n* Adc refactored + periman implementation\r\n\r\nPeripheral manager still needs to be checked if the implementation is right.\r\n\r\n* switched to working solution for milivolts read\r\n\r\n* Periman detachbus fix\r\n\r\n* coding style\r\n\r\n* fix CI warnings\r\n\r\n* fix FreeRTOS example\r\n\r\n* Update ETH.cpp\r\n\r\n* Update FunctionalInterruptStruct.ino\r\n\r\n* Update package_esp32_index.template.json\r\n\r\n* Update package_esp32_index.template.json\r\n\r\n* Fixes for the latest IDF v5.1\r\n\r\n* update esp-idf libs and toolchain\r\n\r\n* Turn OFF auto crystal frequency for ESP32 (needed by TWAI)\r\n\r\n* Update examples\r\n\r\n* Switch build to mostly use flags from files\r\n\r\nIncludes can not be done this way\r\n\r\n* Reorganize flag files\r\n\r\n* Optimize chip build flags further\r\n\r\n* Revert defines from file. MBEDTLS_CONFIG_FILE does not properly expand\r\n\r\n* Add support for includes and defines from file\r\n\r\n* Replace old sdk path references in platform.txt\r\n\r\n* use gcc-ar (#8013)\r\n\r\n* Makes F_CPU generic for all SoC (#8007)\r\n\r\nBased on CONFIG_ESP_DEFAULT_CPU_FREQ_MHZ that is correctly defined in the sdkconfig file for each SoC.\r\n\r\n* TIMER refactoring (#7904)\r\n\r\n* refactor using GPtimer\r\n\r\n* Updated timer HW test\r\n\r\n* fix examples\r\n\r\n* Add v2.0.7 in issue template (#7871)\r\n\r\n* refactor using GPtimer\r\n\r\n* Updated timer HW test\r\n\r\n* fix examples\r\n\r\n* Revert \"Add v2.0.7 in issue template (#7871)\"\r\n\r\nThis reverts commit fcc3b17d62ff57861f8913ca1f142fd5163b7457.\r\n\r\n* Update upload-artifact to v3 in HW CI\r\n\r\n* Revert \"Update upload-artifact to v3 in HW CI\"\r\n\r\nThis reverts commit 1ba228071718ba37c4e26d98db22f77b2a7364a6.\r\n\r\n* replace resolution with frequency\r\n\r\n* remove count_down option\r\n\r\n* countup removed from examples + header\r\n\r\n* Refactored timer object\r\n\r\n* code cleanup + examples and tests fixes\r\n\r\n* TimerAlarm fix\r\n\r\n---------\r\n\r\nCo-authored-by: Vojt\u011bch Barto\u0161ka <76958047+VojtechBartoska@users.noreply.github.com>\r\n\r\n* [Docs] ADC and Timer API Update (+some docs fixes) (#7906)\r\n\r\n* updated docs\r\n\r\n* remove hall sensor docs\r\n\r\nRemoved Hall sensor documentation as its no longer supported in IDF-5\r\n\r\n* Fixed ESPNow examples location in docs\r\n\r\n* Last timer refactored API + gpio small fix\r\n\r\n* AlarmWrite fix\r\n\r\n* Fixes APLL/PLL with RTC Frequency (#8025)\r\n\r\nlog_d() was displaying APLL for any SoC, but S3 and C3 has not such option, causing compilation errors.\r\n\r\n* Update IDF libs and fix OPI PSRAM on S3\r\n\r\n* Add setMode function HardwareSerial.c to set the esp32 uart mode for use with RS485 auto RTS (#7935)\r\n\r\n* Added setMode function to set the esp32 uart mode\r\n\r\nUsed to set the esp32 uart mode for use with RS485 Half Duplex and the auto RTS pin mode. This will set/clear the RTS pin output to control the RE/DE pin on most RS485 chips.\r\n\r\n* Add Success (bool) return in some functions\r\n\r\n* Add Success (bool) return code to some functions\r\n\r\n* Add Success (bool) return to some functions\r\n\r\n* Add Success (bool) return to some functions\r\n\r\n* Fix uartSetRxTimeout return type\r\n\r\n---------\r\n\r\nCo-authored-by: Rodrigo Garcia <rodrigo.garcia@espressif.com>\r\n\r\n* Add support for esp-elf-gdb\r\n\r\n* WFG Crashfix (#8044)\r\n\r\n* Update component libs\r\n\r\n* IDF release/v5.1 (#8061)\r\n\r\n* IDF release/v5.1 bb9200acec\r\n\r\n* Update Esp.cpp\r\n\r\n* IDF release/v5.1 420ebd208a\r\n\r\n* Update esp32-hal-psram.c\r\n\r\n* Switch SDK to be an external package\r\n\r\n* fix path (#8096)\r\n\r\n* Makes UART work at any APB Frequency (#8097)\r\n\r\nFixes HardwareSerial to work with IDF 5.1 on any CPU/APB Frequency (240MHz to 10MHZ), including user created low power modes.\r\n\r\n* Add required callbacks for TinyUSB DFU\r\n\r\n* Update version to 3.0.0\r\n\r\n* Add ESP.getCoreVersion() and update ESP.getChipModel()\r\n\r\n* Update timer hal for the latest 5.1\r\n\r\n* Use separate RX and TX buffer sizes in HTTP client\r\n\r\noptimizes download by allowing up to 4K packets to be received\r\n\r\n* Rename clock tree enum name in latest 5.1\r\n\r\n* ESP32-H4 support was removed in ESP-IDF v5.1\r\n\r\n* IDF release/v5.1 2004bf4e11 (#8165)\r\n\r\n* Deinit previous bus first (#8180)\r\n\r\n* TIMER - add timer_started flag, fix timerEnd() + timer HW test (#8135)\r\n\r\n* Add timer_started flag and stop before disable\r\n\r\n* Fix timer HW test\r\n\r\n* TOUCH - Peripheral manager implementation (#8129)\r\n\r\n* Touch periman implemented\r\n\r\n* Deinit previous bus first\r\n\r\n* LEDC Refactoring - Peripheral manager implemented (#8126)\r\n\r\n* LEDC periman implementation\r\n\r\n* Fix examples\r\n\r\n* Rework tone\r\n\r\n* Update ledc docs\r\n\r\n* fix missing bracket\r\n\r\n* Update analog funtions esp32-hal.h\r\n\r\n* Update CameraWebServer example\r\n\r\n* Fix HiFreq_ADC example\r\n\r\n* minor fixes - typos\r\n\r\n* Avoid calling tone/notone when tone already runs on dif. pin\r\n\r\n* Remove unused channels_resolution\r\n\r\n* GPIO - Peripheral manager implementation (#8179)\r\n\r\n* periman-implementation\r\n\r\n* fix RGB_BUILTIN and remove space\r\n\r\n* Enforces more consistency into Peripheral Manager (#8188)\r\n\r\n* Avoid log_i() message the first time a bus is assigned\r\n\r\n* Prevent operation with ESP32_BUS_TYPE_INIT\r\n\r\n* keeps coding style\r\n\r\n* do not print messages on INIT bus type\r\n\r\n* [Arduino Core 3.0.0] RMT IDF5.1 Refactoring (#7994)\r\n\r\n* RMT IDF5.1 refactoring\r\n\r\n* Fixes initial value setting\r\n\r\n* removed rmtRead() with user callback\r\n\r\n* simplify/remove Read data structure\r\n\r\n* Deep API simplification\r\n\r\n* fixes the examples\r\n\r\n* fix rmt.h\r\n\r\n* adds support to APB different frequencies\r\n\r\n* fixes CI and not defined RGB_BUILTIN\r\n\r\n* new RMT API and examples\r\n\r\n* fixing commentaties\r\n\r\n* Update esp32-hal-rgb-led.c\r\n\r\n* changes Filter API\r\n\r\n* Fixes example with Filter API\r\n\r\n* Update PlatformIO scripts for the upcoming 3.0 core (#8183)\r\n\r\n* Update PlatformIO scripts for the upcoming 3.0 core\r\n\r\n* Dynamically select proper framework-arduinoespressif32-libs package\r\n\r\nWith this change the dev-platform will be dynamically configured to\r\npull the latest .zip package with precompiled libraries from extracted from\r\npackage_esp32_index.template.json\r\n\r\n* free memory on detach (#8264)\r\n\r\n* SPI - Peripheral manager implementation  (#8255)\r\n\r\n* spi periman implementation\r\n\r\n* fix header file\r\n\r\n* remove unused struct\r\n\r\n* fix missing braces\r\n\r\n* Update esp32-hal-rmt.c (#8216)\r\n\r\nOptimizing Peripheral Manager Test\r\n\r\n* I2C - Peripheral manager implementation (#8220)\r\n\r\n* i2c-master periman initial commit\r\n\r\n* i2c-master make detachbus static + comment remove\r\n\r\n* i2c-slave periman implementation\r\n\r\n* SetPinBus to INIT on i2cDeinits\r\n\r\n* Fix slave pins deinit\r\n\r\n* remove dbg logs\r\n\r\n* set ret to ESP_FAIL instead of returning\r\n\r\n* Fix warnings in hal-spi caused by pariman transition\r\n\r\n* Update esptool.py to version 4.6\r\n\r\n* Add platform support for ESP_SR\r\n\r\n* Add USB Type and valid pin check to periman\r\n\r\n* replace bus with spi->num+1 (#8279)\r\n\r\n* Remove default pins from SPI HAL\r\n\r\n* Add commented out handlers for esptool.js in TinyUSB CDC\r\n\r\nFor future use\r\n\r\n* Add build defines for host os and fqbn (for debug purposes)\r\n\r\n* Provide proper memory caps total size\r\n\r\n* Update Esp.cpp\r\n\r\n* SDMMC - Peripheral manager implementation (#8289)\r\n\r\n* sdmmc periman implemented\r\n\r\n* save pins when SOC_SDMMC_USE_IOMUX\r\n\r\n* IDF release/v5.1 4bc762621d (#8292)\r\n\r\n* Adds missing pinMode (#8312)\r\n\r\n* Adds missing pinMode\r\n\r\nThe example code lacks a pinMode() to initialize the GPIO 0 (button). In Arduino Core 3.0.0, it prints an error message when trying to read a not initialized GPIO.\r\n\r\n* Update KeyboardLogout.ino\r\n\r\nAdds <buttonPin> to keep code standard\r\n\r\n* Update KeyboardReprogram.ino\r\n\r\nAdds <buttonPin> to keep code standard\r\n\r\n* LEDC Fade implementation (#8338)\r\n\r\n* fade API + pointer fixes\r\n\r\n* Add fade api\r\n\r\n* Add fade example\r\n\r\n* update ledc docs\r\n\r\n* remove unused variables\r\n\r\n* fix path to example\r\n\r\n* Adds USB to Peripheral Manager - Arduino Core 3.0.0 (#8335)\r\n\r\n* ETHERNET - Peripheral manager implementation (#8297)\r\n\r\n* Peripheral manager implemented\r\n\r\n* remove unused variable\r\n\r\n* Add all RMII pins\r\n\r\n* fix typo\r\n\r\n* Adds HardwareSerial to Peripheral Manager Arduino 3.0.0 (#8328)\r\n\r\n* Do not limit ETHERNET in periman to only ESP32. SPI is also an option\r\n\r\n* Initial support for ESP32-C6 (#8337)\r\n\r\n* Add checks for SOC defines (#8351)\r\n\r\n* Add checks for SOC defines\r\n\r\n* Add SoC checks to BLE library\r\n\r\n* fix i2c compilation error\r\n\r\n* fix wrong placement of include\r\n\r\n* add check to SPI library\r\n\r\n* add check to USB library\r\n\r\n* add checks to Wire library\r\n\r\n* Feature/esp32h2 support (#8373)\r\n\r\n* Initial support for ESP32H2\r\n\r\n* Additional changes for ESP32H2\r\n\r\n* Update libs for ESP32H2\r\n\r\n* Fix flashing on ESP32-H2\r\n\r\n* Fix GPIO Configs for ESP32-C6 and ESP32-H2\r\n\r\n* Update Timer test sketch\r\n\r\n* Fix upload flash parameters\r\n\r\n* Use ets_write_char_uart instead of ets_printf in log_printfv\r\n\r\n* Print full chip report when log level is sufficient (#8282)\r\n\r\n* ESP32-C3 does not have ets_write_char_uart\r\n\r\n* Fix BLE gap event name\r\n\r\n* HW Testing - Pytest update (#8389)\r\n\r\n* update tests requirements\r\n\r\n* remove already handled components\r\n\r\n* Update version of pytest\r\n\r\n* Add missing ESP32-H2 to hil.yml\r\n\r\n* Updated FreeRTOS names (#8418)\r\n\r\n* HW Testing -  ESP32-C6 + ESP32-H2 fixes (#8404)\r\n\r\n* add C6/H2 to tests cfg.json\r\n\r\n* remove ,\r\n\r\n* workflow runs-on runner by matrix\r\n\r\n* Add need for arduino tag to select runner\r\n\r\n* Add cryptography to requirements.txt\r\n\r\n* Removed duplicate TX1 define for H2 (#8402)\r\n\r\n* Fix broken examples\r\n\r\n* Fixes RMT filter & idle timing and setup (#8359)\r\n\r\n* Fixes Filter and Idle parameter to uint32\r\n\r\n* Fixes Filter and Idle setup\r\n\r\n* Fixes it to 5.1Libs branch\r\n\r\n* fix RMT CLK source and Filter API\r\n\r\n* fixes missing ;\r\n\r\n* fixes missing ;\r\n\r\n* fixes RMT example\r\n\r\n* IDF release/v5.1 a7b62bbcaf (#8438)\r\n\r\n* Add workflow to build executables from python scripts (#8290)\r\n\r\n* Add workflow to build executables from python scripts\r\n\r\n* Push binary to tools\r\n\r\n* Enable executable signing on Windows\r\n\r\n* Update get.py\r\n\r\n* Push binary to tools\r\n\r\n* Try with multiple files\r\n\r\n* Try more actions\r\n\r\n* Try powershell\r\n\r\n* Restore tools so they do not get rebuilt\r\n\r\n* Finalize scripts\r\n\r\n* Push binary to tools\r\n\r\n* App rollback should be after PSRAM is initialized\r\n\r\n* Correcting RX1 to GPIO4 and TX1 to GPIO5 to be consistent with documentation. Previous pin use works but is inconsistent with C6 docs.\r\n\r\n* Fixes Memory Leak (#8486)\r\n\r\n* fixes preprocessor test (#8485)\r\n\r\n* fixes preprocessor test\r\n\r\nWhen using `#define USE_SOFT_AP` \r\nChange\r\n`&& not USE_SOFT_AP` ==> `&& !defined(USE_SOFT_AP)`\r\n\r\n* Adds any BLE capable device in WiFiProv.ino\r\n\r\nRemoving ESP32 restriction for BLE Provisioning.\r\n\r\n* fix flash mode read out for C6\r\n\r\n* Add option for custom partitions without restrictions\r\n\r\n* SD_MMC update (#8298)\r\n\r\n* Updated SD_MMC lib and examples\r\n\r\n* Removed getter implementation and commented usage in examples\r\n\r\n* squashed updates\r\n\r\n* IDF release/v5.1 f0437b945f (#8599)\r\n\r\n* Update package_esp32_index.template.json\r\n\r\n* Fix printf format build error in BTAdvertisedDeviceSet.cpp\r\n\r\n---------\r\n\r\nCo-authored-by: Pedro Minatel <pedro.minatel@espressif.com>\r\nCo-authored-by: Rodrigo Garcia <rodrigo.garcia@espressif.com>\r\nCo-authored-by: Ha Thach <thach@tinyusb.org>\r\nCo-authored-by: Martin Turski <quiret@vfemail.net>\r\nCo-authored-by: raviypujar <raviypujar@gmail.com>\r\nCo-authored-by: Jason2866 <24528715+Jason2866@users.noreply.github.com>\r\nCo-authored-by: Tom\u00e1\u0161 Piln\u00fd <34927466+PilnyTomas@users.noreply.github.com>\r\nCo-authored-by: Jan Proch\u00e1zka <90197375+P-R-O-C-H-Y@users.noreply.github.com>\r\nCo-authored-by: Daniel Berlin <dberlin@dberlin.org>\r\nCo-authored-by: Nima Askari (\u0646\u06cc\u0645\u0627 \u0639\u0633\u06a9\u0631\u06cc) <nimaltd@yahoo.com>\r\nCo-authored-by: rtpmsys <106180646+rtpmsys@users.noreply.github.com>\r\nCo-authored-by: bytiful <55647551+bytiful@users.noreply.github.com>\r\nCo-authored-by: tmfarrington <tmfarrington@users.noreply.github.com>\r\nCo-authored-by: Krzysiek S <chris.streh@gmail.com>\r\nCo-authored-by: surt <carl.olsson@gmail.com>\r\nCo-authored-by: Max Scheffler <max.scheffler@pm.me>\r\nCo-authored-by: Clemens Kirchgatterer <clemens@1541.org>\r\nCo-authored-by: Peter Pan's Techland <twinkle-pirate@hotmail.com>\r\nCo-authored-by: Roman <programmeofficemilkyway@gmail.com>\r\nCo-authored-by: Eistee <Eistee82@users.noreply.github.com>\r\nCo-authored-by: David McCurley <44048235+mrengineer7777@users.noreply.github.com>\r\nCo-authored-by: Gaya3N25 <30388176+Gaya3N25@users.noreply.github.com>\r\nCo-authored-by: renebohne <rene.bohne@gmail.com>\r\nCo-authored-by: Oliv\u00e9r Rem\u00e9ny <25034625+remenyo@users.noreply.github.com>\r\nCo-authored-by: davidk88 <david.kotar@gmail.com>\r\nCo-authored-by: Vojt\u011bch Barto\u0161ka <76958047+VojtechBartoska@users.noreply.github.com>\r\nCo-authored-by: James Armstrong <jamesarmstrong3@me.com>\r\nCo-authored-by: Valerii Koval <valeros@users.noreply.github.com>\r\nCo-authored-by: Peter G. Jensen <root@petergjoel.dk>",
            "additions": 5,
            "deletions": 2,
            "change_type": "MODIFY",
            "diff": "@@ -4,6 +4,9 @@\n  *  Created on: Mar 22, 2017\n  *      Author: kolban\n  */\n+#include \"soc/soc_caps.h\"\n+#if SOC_BLE_SUPPORTED\n+\n #include \"sdkconfig.h\"\n #if defined(CONFIG_BLUEDROID_ENABLED)\n #include <esp_bt.h>\n@@ -593,5 +596,5 @@ std::string BLEClient::toString() {\n \treturn res;\n } // toString\n \n-\n-#endif // CONFIG_BLUEDROID_ENABLED\n+#endif /* CONFIG_BLUEDROID_ENABLED */\n+#endif /* SOC_BLE_SUPPORTED */\n",
            "comment_added_diff": {},
            "comment_deleted_diff": {
                "597": "#endif // CONFIG_BLUEDROID_ENABLED"
            },
            "comment_modified_diff": {}
        },
        {
            "commit": "822f252b353cfd808c77c9bc8369bc0cb4e0b5be",
            "timestamp": "2023-10-06T15:50:11+03:00",
            "author": "Me No Dev",
            "commit_message": "BLE upgrades (#8724)\n\n* Renamed library description\r\n\r\n* Updated Eddystone URL (not complete)\r\n\r\n* Updated Eddystone URL\r\n\r\n* Updated Eddystone classes and beacon scanner\r\n\r\n* Renamed examples - removing prefix BLE_\r\n\r\n* Renamed Beacon_Scanner\r\n\r\n* Updated TLM\r\n\r\n* Changed std::string to Arduino String\r\n\r\n* More std::string -> String\r\n\r\n* Changed String in forgotten file\r\n\r\n* Changed .data to .c_str\r\n\r\n* Reverting single String type change\r\n\r\n* Few more fixes related to the String transition\r\n\r\n* Fixed URL and Utils error\r\n\r\n* Added and modified compatibility safeguards for BLE5 examples\r\n\r\n* Added #include WString.h\r\n\r\n* Fixed Beacon_Scanner\r\n\r\n* Remove commented include\r\n\r\nCo-authored-by: Lucas Saavedra Vaz <lucassvaz@yahoo.com.br>\r\n\r\n---------\r\n\r\nCo-authored-by: Tomas Pilny <tomas.pilny@espressif.com>\r\nCo-authored-by: Lucas Saavedra Vaz <lucassvaz@yahoo.com.br>",
            "additions": 364,
            "deletions": 364,
            "change_type": "MODIFY",
            "diff": "@@ -46,11 +46,11 @@\n  */\n \n BLEClient::BLEClient() {\n-\tm_pClientCallbacks = nullptr;\n-\tm_conn_id          = ESP_GATT_IF_NONE;\n-\tm_gattc_if         = ESP_GATT_IF_NONE;\n-\tm_haveServices     = false;\n-\tm_isConnected      = false;  // Initially, we are flagged as not connected.\n+  m_pClientCallbacks = nullptr;\n+  m_conn_id          = ESP_GATT_IF_NONE;\n+  m_gattc_if         = ESP_GATT_IF_NONE;\n+  m_haveServices     = false;\n+  m_isConnected      = false;  // Initially, we are flagged as not connected.\n } // BLEClient\n \n \n@@ -58,13 +58,13 @@ BLEClient::BLEClient() {\n  * @brief Destructor.\n  */\n BLEClient::~BLEClient() {\n-\t// We may have allocated service references associated with this client.  Before we are finished\n-\t// with the client, we must release resources.\n-\tfor (auto &myPair : m_servicesMap) {\n-\t   delete myPair.second;\n-\t}\n-\tm_servicesMap.clear();\n-\tm_servicesMapByInstID.clear();\n+  // We may have allocated service references associated with this client.  Before we are finished\n+  // with the client, we must release resources.\n+  for (auto &myPair : m_servicesMap) {\n+     delete myPair.second;\n+  }\n+  m_servicesMap.clear();\n+  m_servicesMapByInstID.clear();\n } // ~BLEClient\n \n \n@@ -73,23 +73,23 @@ BLEClient::~BLEClient() {\n  *\n  */\n void BLEClient::clearServices() {\n-\tlog_v(\">> clearServices\");\n-\t// Delete all the services.\n-\tfor (auto &myPair : m_servicesMap) {\n-\t   delete myPair.second;\n-\t}\n-\tm_servicesMap.clear();\n-\tm_haveServices = false;\n-\tlog_v(\"<< clearServices\");\n+  log_v(\">> clearServices\");\n+  // Delete all the services.\n+  for (auto &myPair : m_servicesMap) {\n+     delete myPair.second;\n+  }\n+  m_servicesMap.clear();\n+  m_haveServices = false;\n+  log_v(\"<< clearServices\");\n } // clearServices\n \n /**\n  * Add overloaded function to ease connect to peer device with not public address\n  */\n bool BLEClient::connect(BLEAdvertisedDevice* device) {\n-\tBLEAddress address =  device->getAddress();\n-\tesp_ble_addr_type_t type = device->getAddressType();\n-\treturn connect(address, type);\n+  BLEAddress address =  device->getAddress();\n+  esp_ble_addr_type_t type = device->getAddressType();\n+  return connect(address, type);\n }\n \n /**\n@@ -98,59 +98,59 @@ bool BLEClient::connect(BLEAdvertisedDevice* device) {\n  * @return True on success.\n  */\n bool BLEClient::connect(BLEAddress address, esp_ble_addr_type_t type) {\n-\tlog_v(\">> connect(%s)\", address.toString().c_str());\n+  log_v(\">> connect(%s)\", address.toString().c_str());\n \n // We need the connection handle that we get from registering the application.  We register the app\n // and then block on its completion.  When the event has arrived, we will have the handle.\n-\tm_appId = BLEDevice::m_appId++;\n-\tBLEDevice::addPeerDevice(this, true, m_appId);\n-\tm_semaphoreRegEvt.take(\"connect\");\n-\n-\t// clearServices(); // we dont need to delete services since every client is unique?\n-\tesp_err_t errRc = ::esp_ble_gattc_app_register(m_appId);\n-\tif (errRc != ESP_OK) {\n-\t\tlog_e(\"esp_ble_gattc_app_register: rc=%d %s\", errRc, GeneralUtils::errorToString(errRc));\n-\t\tBLEDevice::removePeerDevice(m_appId, true);\n-\t\treturn false;\n-\t}\n-\n-\tuint32_t rc = m_semaphoreRegEvt.wait(\"connect\");\n-\n-\tif (rc != ESP_GATT_OK) {\n-\t\t// fixes ESP_GATT_NO_RESOURCES error mostly\n-\t\tlog_e(\"esp_ble_gattc_app_register_error: rc=%d\", rc);\n-\t\tBLEDevice::removePeerDevice(m_appId, true);\n-\t\t// not sure if this is needed here\n-\t\t// esp_ble_gattc_app_unregister(m_gattc_if);\n-\t\t// m_gattc_if = ESP_GATT_IF_NONE;\n-\t\treturn false;\n-\t}\n-\n-\tm_peerAddress = address;\n-\n-\t// Perform the open connection request against the target BLE Server.\n-\tm_semaphoreOpenEvt.take(\"connect\");\n-\terrRc = ::esp_ble_gattc_open(\n-\t\tm_gattc_if,\n-\t\t*getPeerAddress().getNative(), // address\n-\t\ttype,          // Note: This was added on 2018-04-03 when the latest ESP-IDF was detected to have changed the signature.\n-\t\t1                              // direct connection <-- maybe needs to be changed in case of direct indirect connection???\n-\t);\n-\tif (errRc != ESP_OK) {\n-\t\tlog_e(\"esp_ble_gattc_open: rc=%d %s\", errRc, GeneralUtils::errorToString(errRc));\n-\t\tBLEDevice::removePeerDevice(m_appId, true);\n-\t\treturn false;\n-\t}\n-\n-\trc = m_semaphoreOpenEvt.wait(\"connect\");   // Wait for the connection to complete.\n-\t// check the status of the connection and cleanup in case of failure\n-\tif (rc != ESP_GATT_OK) {\n-\t\tBLEDevice::removePeerDevice(m_appId, true);\n-\t\tesp_ble_gattc_app_unregister(m_gattc_if);\n-\t\tm_gattc_if = ESP_GATT_IF_NONE;\n-\t}\n-\tlog_v(\"<< connect(), rc=%d\", rc==ESP_GATT_OK);\n-\treturn rc == ESP_GATT_OK;\n+  m_appId = BLEDevice::m_appId++;\n+  BLEDevice::addPeerDevice(this, true, m_appId);\n+  m_semaphoreRegEvt.take(\"connect\");\n+\n+  // clearServices(); // we dont need to delete services since every client is unique?\n+  esp_err_t errRc = ::esp_ble_gattc_app_register(m_appId);\n+  if (errRc != ESP_OK) {\n+    log_e(\"esp_ble_gattc_app_register: rc=%d %s\", errRc, GeneralUtils::errorToString(errRc));\n+    BLEDevice::removePeerDevice(m_appId, true);\n+    return false;\n+  }\n+\n+  uint32_t rc = m_semaphoreRegEvt.wait(\"connect\");\n+\n+  if (rc != ESP_GATT_OK) {\n+    // fixes ESP_GATT_NO_RESOURCES error mostly\n+    log_e(\"esp_ble_gattc_app_register_error: rc=%d\", rc);\n+    BLEDevice::removePeerDevice(m_appId, true);\n+    // not sure if this is needed here\n+    // esp_ble_gattc_app_unregister(m_gattc_if);\n+    // m_gattc_if = ESP_GATT_IF_NONE;\n+    return false;\n+  }\n+\n+  m_peerAddress = address;\n+\n+  // Perform the open connection request against the target BLE Server.\n+  m_semaphoreOpenEvt.take(\"connect\");\n+  errRc = ::esp_ble_gattc_open(\n+    m_gattc_if,\n+    *getPeerAddress().getNative(), // address\n+    type,          // Note: This was added on 2018-04-03 when the latest ESP-IDF was detected to have changed the signature.\n+    1                              // direct connection <-- maybe needs to be changed in case of direct indirect connection???\n+  );\n+  if (errRc != ESP_OK) {\n+    log_e(\"esp_ble_gattc_open: rc=%d %s\", errRc, GeneralUtils::errorToString(errRc));\n+    BLEDevice::removePeerDevice(m_appId, true);\n+    return false;\n+  }\n+\n+  rc = m_semaphoreOpenEvt.wait(\"connect\");   // Wait for the connection to complete.\n+  // check the status of the connection and cleanup in case of failure\n+  if (rc != ESP_GATT_OK) {\n+    BLEDevice::removePeerDevice(m_appId, true);\n+    esp_ble_gattc_app_unregister(m_gattc_if);\n+    m_gattc_if = ESP_GATT_IF_NONE;\n+  }\n+  log_v(\"<< connect(), rc=%d\", rc==ESP_GATT_OK);\n+  return rc == ESP_GATT_OK;\n } // connect\n \n \n@@ -159,13 +159,13 @@ bool BLEClient::connect(BLEAddress address, esp_ble_addr_type_t type) {\n  * @return N/A.\n  */\n void BLEClient::disconnect() {\n-\tlog_v(\">> disconnect()\");\n-\tesp_err_t errRc = ::esp_ble_gattc_close(getGattcIf(), getConnId());\n-\tif (errRc != ESP_OK) {\n-\t\tlog_e(\"esp_ble_gattc_close: rc=%d %s\", errRc, GeneralUtils::errorToString(errRc));\n-\t\treturn;\n-\t}\n-\tlog_v(\"<< disconnect()\");\n+  log_v(\">> disconnect()\");\n+  esp_err_t errRc = ::esp_ble_gattc_close(getGattcIf(), getConnId());\n+  if (errRc != ESP_OK) {\n+    log_e(\"esp_ble_gattc_close: rc=%d %s\", errRc, GeneralUtils::errorToString(errRc));\n+    return;\n+  }\n+  log_v(\"<< disconnect()\");\n } // disconnect\n \n \n@@ -173,190 +173,190 @@ void BLEClient::disconnect() {\n  * @brief Handle GATT Client events\n  */\n void BLEClient::gattClientEventHandler(\n-\tesp_gattc_cb_event_t      event,\n-\tesp_gatt_if_t             gattc_if,\n-\tesp_ble_gattc_cb_param_t* evtParam) {\n-\n-\tlog_d(\"gattClientEventHandler [esp_gatt_if: %d] ... %s\",\n-\t\tgattc_if, BLEUtils::gattClientEventTypeToString(event).c_str());\n-\n-\t// it is possible to receive events from other connections while waiting for registration\n-\tif (m_gattc_if == ESP_GATT_IF_NONE && event != ESP_GATTC_REG_EVT) {\n-\t\treturn;\n-\t}\n-\n-\t// Execute handler code based on the type of event received.\n-\tswitch(event) {\n-\n-\t\tcase ESP_GATTC_SRVC_CHG_EVT:\n-\t\t\tlog_i(\"SERVICE CHANGED\");\n-\t\t\tbreak;\n-\n-\t\tcase ESP_GATTC_CLOSE_EVT: {\n-\t\t\t\t// esp_ble_gattc_app_unregister(m_appId);\n-\t\t\t\t// BLEDevice::removePeerDevice(m_gattc_if, true);\n-\t\t\tbreak;\n-\t\t}\n-\n-\t\t//\n-\t\t// ESP_GATTC_DISCONNECT_EVT\n-\t\t//\n-\t\t// disconnect:\n-\t\t// - esp_gatt_status_t status\n-\t\t// - uint16_t          conn_id\n-\t\t// - esp_bd_addr_t     remote_bda\n-\t\tcase ESP_GATTC_DISCONNECT_EVT: {\n-\t\t\t\tif (evtParam->disconnect.conn_id != getConnId()) break;\n-\t\t\t\t// If we receive a disconnect event, set the class flag that indicates that we are\n-\t\t\t\t// no longer connected.\n-\t\t\t\tbool m_wasConnected = m_isConnected;\n-\t\t\t\tm_isConnected = false;\n-\t\t\t\tesp_ble_gattc_app_unregister(m_gattc_if);\n-\t\t\t\tm_gattc_if = ESP_GATT_IF_NONE;\n-\t\t\t\tm_semaphoreOpenEvt.give(ESP_GATT_IF_NONE);\n-\t\t\t\tm_semaphoreRssiCmplEvt.give();\n-\t\t\t\tm_semaphoreSearchCmplEvt.give(1);\n-\t\t\t\tBLEDevice::removePeerDevice(m_appId, true);\n-\t\t\t\tif (m_wasConnected && m_pClientCallbacks != nullptr) {\n-\t\t\t\t\tm_pClientCallbacks->onDisconnect(this);\n-\t\t\t\t}\n-\t\t\t\tbreak;\n-\t\t} // ESP_GATTC_DISCONNECT_EVT\n-\n-\t\t//\n-\t\t// ESP_GATTC_OPEN_EVT\n-\t\t//\n-\t\t// open:\n-\t\t// - esp_gatt_status_t status\n-\t\t// - uint16_t          conn_id\n-\t\t// - esp_bd_addr_t     remote_bda\n-\t\t//\n-\t\tcase ESP_GATTC_OPEN_EVT: {\n-\t\t\tm_conn_id = evtParam->open.conn_id;\n-\t\t\tif (evtParam->open.status == ESP_GATT_OK) {\n-\t\t\t\tm_isConnected = true;   // Flag us as connected.\n-\t\t\t\tif (m_pClientCallbacks != nullptr) {\n-\t\t\t\t\tm_pClientCallbacks->onConnect(this);\n-\t\t\t\t}\n-\t\t\t} else {\n-\t\t\t\tlog_e(\"Failed to connect, status=%s\", GeneralUtils::errorToString(evtParam->open.status));\n-\t\t\t}\n-\t\t\tm_semaphoreOpenEvt.give(evtParam->open.status);\n-\t\t\tbreak;\n-\t\t} // ESP_GATTC_OPEN_EVT\n-\n-\n-\t\t//\n-\t\t// ESP_GATTC_REG_EVT\n-\t\t//\n-\t\t// reg:\n-\t\t// esp_gatt_status_t status\n-\t\t// uint16_t          app_id\n-\t\t//\n-\t\tcase ESP_GATTC_REG_EVT: {\n-\t\t\tm_gattc_if = gattc_if;\n-\t\t\t// pass on the registration status result, in case of failure\n-\t\t\tm_semaphoreRegEvt.give(evtParam->reg.status);\n-\t\t\tbreak;\n-\t\t} // ESP_GATTC_REG_EVT\n-\n-\t\tcase ESP_GATTC_CFG_MTU_EVT:\n-\t\t\tif (evtParam->cfg_mtu.conn_id != getConnId()) break;\n-\t\t\tif(evtParam->cfg_mtu.status != ESP_GATT_OK) {\n-\t\t\t\tlog_e(\"Config mtu failed\");\n-\t\t\t}\n-\t\t\tm_mtu = evtParam->cfg_mtu.mtu;\n-\t\t\tbreak;\n-\n-\t\tcase ESP_GATTC_CONNECT_EVT: {\n-\t\t\tif (evtParam->connect.conn_id != getConnId()) break;\n-\t\t\tBLEDevice::updatePeerDevice(this, true, m_appId);\n-\t\t\tesp_err_t errRc = esp_ble_gattc_send_mtu_req(gattc_if, evtParam->connect.conn_id);\n-\t\t\tif (errRc != ESP_OK) {\n-\t\t\t\tlog_e(\"esp_ble_gattc_send_mtu_req: rc=%d %s\", errRc, GeneralUtils::errorToString(errRc));\n-\t\t\t}\n+  esp_gattc_cb_event_t      event,\n+  esp_gatt_if_t             gattc_if,\n+  esp_ble_gattc_cb_param_t* evtParam) {\n+\n+  log_d(\"gattClientEventHandler [esp_gatt_if: %d] ... %s\",\n+    gattc_if, BLEUtils::gattClientEventTypeToString(event).c_str());\n+\n+  // it is possible to receive events from other connections while waiting for registration\n+  if (m_gattc_if == ESP_GATT_IF_NONE && event != ESP_GATTC_REG_EVT) {\n+    return;\n+  }\n+\n+  // Execute handler code based on the type of event received.\n+  switch(event) {\n+\n+    case ESP_GATTC_SRVC_CHG_EVT:\n+      log_i(\"SERVICE CHANGED\");\n+      break;\n+\n+    case ESP_GATTC_CLOSE_EVT: {\n+        // esp_ble_gattc_app_unregister(m_appId);\n+        // BLEDevice::removePeerDevice(m_gattc_if, true);\n+      break;\n+    }\n+\n+    //\n+    // ESP_GATTC_DISCONNECT_EVT\n+    //\n+    // disconnect:\n+    // - esp_gatt_status_t status\n+    // - uint16_t          conn_id\n+    // - esp_bd_addr_t     remote_bda\n+    case ESP_GATTC_DISCONNECT_EVT: {\n+        if (evtParam->disconnect.conn_id != getConnId()) break;\n+        // If we receive a disconnect event, set the class flag that indicates that we are\n+        // no longer connected.\n+        bool m_wasConnected = m_isConnected;\n+        m_isConnected = false;\n+        esp_ble_gattc_app_unregister(m_gattc_if);\n+        m_gattc_if = ESP_GATT_IF_NONE;\n+        m_semaphoreOpenEvt.give(ESP_GATT_IF_NONE);\n+        m_semaphoreRssiCmplEvt.give();\n+        m_semaphoreSearchCmplEvt.give(1);\n+        BLEDevice::removePeerDevice(m_appId, true);\n+        if (m_wasConnected && m_pClientCallbacks != nullptr) {\n+          m_pClientCallbacks->onDisconnect(this);\n+        }\n+        break;\n+    } // ESP_GATTC_DISCONNECT_EVT\n+\n+    //\n+    // ESP_GATTC_OPEN_EVT\n+    //\n+    // open:\n+    // - esp_gatt_status_t status\n+    // - uint16_t          conn_id\n+    // - esp_bd_addr_t     remote_bda\n+    //\n+    case ESP_GATTC_OPEN_EVT: {\n+      m_conn_id = evtParam->open.conn_id;\n+      if (evtParam->open.status == ESP_GATT_OK) {\n+        m_isConnected = true;   // Flag us as connected.\n+        if (m_pClientCallbacks != nullptr) {\n+          m_pClientCallbacks->onConnect(this);\n+        }\n+      } else {\n+        log_e(\"Failed to connect, status=%s\", GeneralUtils::errorToString(evtParam->open.status));\n+      }\n+      m_semaphoreOpenEvt.give(evtParam->open.status);\n+      break;\n+    } // ESP_GATTC_OPEN_EVT\n+\n+\n+    //\n+    // ESP_GATTC_REG_EVT\n+    //\n+    // reg:\n+    // esp_gatt_status_t status\n+    // uint16_t          app_id\n+    //\n+    case ESP_GATTC_REG_EVT: {\n+      m_gattc_if = gattc_if;\n+      // pass on the registration status result, in case of failure\n+      m_semaphoreRegEvt.give(evtParam->reg.status);\n+      break;\n+    } // ESP_GATTC_REG_EVT\n+\n+    case ESP_GATTC_CFG_MTU_EVT:\n+      if (evtParam->cfg_mtu.conn_id != getConnId()) break;\n+      if(evtParam->cfg_mtu.status != ESP_GATT_OK) {\n+        log_e(\"Config mtu failed\");\n+      }\n+      m_mtu = evtParam->cfg_mtu.mtu;\n+      break;\n+\n+    case ESP_GATTC_CONNECT_EVT: {\n+      if (evtParam->connect.conn_id != getConnId()) break;\n+      BLEDevice::updatePeerDevice(this, true, m_appId);\n+      esp_err_t errRc = esp_ble_gattc_send_mtu_req(gattc_if, evtParam->connect.conn_id);\n+      if (errRc != ESP_OK) {\n+        log_e(\"esp_ble_gattc_send_mtu_req: rc=%d %s\", errRc, GeneralUtils::errorToString(errRc));\n+      }\n #ifdef CONFIG_BLE_SMP_ENABLE   // Check that BLE SMP (security) is configured in make menuconfig\n-\t\t\tif(BLEDevice::m_securityLevel){\n-\t\t\t\tesp_ble_set_encryption(evtParam->connect.remote_bda, BLEDevice::m_securityLevel);\n-\t\t\t}\n-#endif\t// CONFIG_BLE_SMP_ENABLE\n-\t\t\tbreak;\n-\t\t} // ESP_GATTC_CONNECT_EVT\n-\n-\t\t//\n-\t\t// ESP_GATTC_SEARCH_CMPL_EVT\n-\t\t//\n-\t\t// search_cmpl:\n-\t\t// - esp_gatt_status_t status\n-\t\t// - uint16_t          conn_id\n-\t\t//\n-\t\tcase ESP_GATTC_SEARCH_CMPL_EVT: {\n-\t\t\tif (evtParam->search_cmpl.conn_id != getConnId()) break;\n-\t\t\tesp_ble_gattc_cb_param_t* p_data = (esp_ble_gattc_cb_param_t*)evtParam;\n-\t\t\tif (p_data->search_cmpl.status != ESP_GATT_OK){\n-\t\t\t\tlog_e(\"search service failed, error status = %x\", p_data->search_cmpl.status);\n-\t\t\t\tbreak;\n-\t\t\t}\n+      if(BLEDevice::m_securityLevel){\n+        esp_ble_set_encryption(evtParam->connect.remote_bda, BLEDevice::m_securityLevel);\n+      }\n+#endif  // CONFIG_BLE_SMP_ENABLE\n+      break;\n+    } // ESP_GATTC_CONNECT_EVT\n+\n+    //\n+    // ESP_GATTC_SEARCH_CMPL_EVT\n+    //\n+    // search_cmpl:\n+    // - esp_gatt_status_t status\n+    // - uint16_t          conn_id\n+    //\n+    case ESP_GATTC_SEARCH_CMPL_EVT: {\n+      if (evtParam->search_cmpl.conn_id != getConnId()) break;\n+      esp_ble_gattc_cb_param_t* p_data = (esp_ble_gattc_cb_param_t*)evtParam;\n+      if (p_data->search_cmpl.status != ESP_GATT_OK){\n+        log_e(\"search service failed, error status = %x\", p_data->search_cmpl.status);\n+        break;\n+      }\n #ifndef ARDUINO_ARCH_ESP32\n-// commented out just for now to keep backward compatibility\t\t\t\n-\t\t\t// if(p_data->search_cmpl.searched_service_source == ESP_GATT_SERVICE_FROM_REMOTE_DEVICE) {\n-\t\t\t// \tlog_i(\"Get service information from remote device\");\n-\t\t\t// } else if (p_data->search_cmpl.searched_service_source == ESP_GATT_SERVICE_FROM_NVS_FLASH) {\n-\t\t\t// \tlog_i(\"Get service information from flash\");\n-\t\t\t// } else {\n-\t\t\t// \tlog_i(\"unknown service source\");\n-\t\t\t// }\n+// commented out just for now to keep backward compatibility\n+      // if(p_data->search_cmpl.searched_service_source == ESP_GATT_SERVICE_FROM_REMOTE_DEVICE) {\n+      //   log_i(\"Get service information from remote device\");\n+      // } else if (p_data->search_cmpl.searched_service_source == ESP_GATT_SERVICE_FROM_NVS_FLASH) {\n+      //   log_i(\"Get service information from flash\");\n+      // } else {\n+      //   log_i(\"unknown service source\");\n+      // }\n #endif\n-\t\t\tm_semaphoreSearchCmplEvt.give(0);\n-\t\t\tbreak;\n-\t\t} // ESP_GATTC_SEARCH_CMPL_EVT\n-\n-\n-\t\t//\n-\t\t// ESP_GATTC_SEARCH_RES_EVT\n-\t\t//\n-\t\t// search_res:\n-\t\t// - uint16_t      conn_id\n-\t\t// - uint16_t      start_handle\n-\t\t// - uint16_t      end_handle\n-\t\t// - esp_gatt_id_t srvc_id\n-\t\t//\n-\t\tcase ESP_GATTC_SEARCH_RES_EVT: {\n-\t\t\tif (evtParam->search_res.conn_id != getConnId()) break;\n-\t\t\tBLEUUID uuid = BLEUUID(evtParam->search_res.srvc_id);\n-\t\t\tBLERemoteService* pRemoteService = new BLERemoteService(\n-\t\t\t\tevtParam->search_res.srvc_id,\n-\t\t\t\tthis,\n-\t\t\t\tevtParam->search_res.start_handle,\n-\t\t\t\tevtParam->search_res.end_handle\n-\t\t\t);\n-\t\t\tm_servicesMap.insert(std::pair<std::string, BLERemoteService*>(uuid.toString(), pRemoteService));\n-\t\t\tm_servicesMapByInstID.insert(std::pair<BLERemoteService *, uint16_t>(pRemoteService, evtParam->search_res.srvc_id.inst_id));\n-\t\t\tbreak;\n-\t\t} // ESP_GATTC_SEARCH_RES_EVT\n-\n-\n-\t\tdefault: {\n-\t\t\tbreak;\n-\t\t}\n-\t} // Switch\n-\n-\t// Pass the request on to all services.\n-\tfor (auto &myPair : m_servicesMap) {\n-\t   myPair.second->gattClientEventHandler(event, gattc_if, evtParam);\n-\t}\n+      m_semaphoreSearchCmplEvt.give(0);\n+      break;\n+    } // ESP_GATTC_SEARCH_CMPL_EVT\n+\n+\n+    //\n+    // ESP_GATTC_SEARCH_RES_EVT\n+    //\n+    // search_res:\n+    // - uint16_t      conn_id\n+    // - uint16_t      start_handle\n+    // - uint16_t      end_handle\n+    // - esp_gatt_id_t srvc_id\n+    //\n+    case ESP_GATTC_SEARCH_RES_EVT: {\n+      if (evtParam->search_res.conn_id != getConnId()) break;\n+      BLEUUID uuid = BLEUUID(evtParam->search_res.srvc_id);\n+      BLERemoteService* pRemoteService = new BLERemoteService(\n+        evtParam->search_res.srvc_id,\n+        this,\n+        evtParam->search_res.start_handle,\n+        evtParam->search_res.end_handle\n+      );\n+      m_servicesMap.insert(std::pair<String, BLERemoteService*>(uuid.toString(), pRemoteService));\n+      m_servicesMapByInstID.insert(std::pair<BLERemoteService *, uint16_t>(pRemoteService, evtParam->search_res.srvc_id.inst_id));\n+      break;\n+    } // ESP_GATTC_SEARCH_RES_EVT\n+\n+\n+    default: {\n+      break;\n+    }\n+  } // Switch\n+\n+  // Pass the request on to all services.\n+  for (auto &myPair : m_servicesMap) {\n+     myPair.second->gattClientEventHandler(event, gattc_if, evtParam);\n+  }\n \n } // gattClientEventHandler\n \n \n uint16_t BLEClient::getConnId() {\n-\treturn m_conn_id;\n+  return m_conn_id;\n } // getConnId\n \n \n \n esp_gatt_if_t BLEClient::getGattcIf() {\n-\treturn m_gattc_if;\n+  return m_gattc_if;\n } // getGattcIf\n \n \n@@ -366,7 +366,7 @@ esp_gatt_if_t BLEClient::getGattcIf() {\n  * Returns the Bluetooth device address of the %BLE peer to which this client is connected.\n  */\n BLEAddress BLEClient::getPeerAddress() {\n-\treturn m_peerAddress;\n+  return m_peerAddress;\n } // getAddress\n \n \n@@ -375,23 +375,23 @@ BLEAddress BLEClient::getPeerAddress() {\n  * @return The RSSI value.\n  */\n int BLEClient::getRssi() {\n-\tlog_v(\">> getRssi()\");\n-\tif (!isConnected()) {\n-\t\tlog_v(\"<< getRssi(): Not connected\");\n-\t\treturn 0;\n-\t}\n-\t// We make the API call to read the RSSI value which is an asynchronous operation.  We expect to receive\n-\t// an ESP_GAP_BLE_READ_RSSI_COMPLETE_EVT to indicate completion.\n-\t//\n-\tm_semaphoreRssiCmplEvt.take(\"getRssi\");\n-\tesp_err_t rc = ::esp_ble_gap_read_rssi(*getPeerAddress().getNative());\n-\tif (rc != ESP_OK) {\n-\t\tlog_e(\"<< getRssi: esp_ble_gap_read_rssi: rc=%d %s\", rc, GeneralUtils::errorToString(rc));\n-\t\treturn 0;\n-\t}\n-\tint rssiValue = m_semaphoreRssiCmplEvt.wait(\"getRssi\");\n-\tlog_v(\"<< getRssi(): %d\", rssiValue);\n-\treturn rssiValue;\n+  log_v(\">> getRssi()\");\n+  if (!isConnected()) {\n+    log_v(\"<< getRssi(): Not connected\");\n+    return 0;\n+  }\n+  // We make the API call to read the RSSI value which is an asynchronous operation.  We expect to receive\n+  // an ESP_GAP_BLE_READ_RSSI_COMPLETE_EVT to indicate completion.\n+  //\n+  m_semaphoreRssiCmplEvt.take(\"getRssi\");\n+  esp_err_t rc = ::esp_ble_gap_read_rssi(*getPeerAddress().getNative());\n+  if (rc != ESP_OK) {\n+    log_e(\"<< getRssi: esp_ble_gap_read_rssi: rc=%d %s\", rc, GeneralUtils::errorToString(rc));\n+    return 0;\n+  }\n+  int rssiValue = m_semaphoreRssiCmplEvt.wait(\"getRssi\");\n+  log_v(\"<< getRssi(): %d\", rssiValue);\n+  return rssiValue;\n } // getRssi\n \n \n@@ -412,25 +412,25 @@ BLERemoteService* BLEClient::getService(const char* uuid) {\n  * @throws BLEUuidNotFound\n  */\n BLERemoteService* BLEClient::getService(BLEUUID uuid) {\n-\tlog_v(\">> getService: uuid: %s\", uuid.toString().c_str());\n+  log_v(\">> getService: uuid: %s\", uuid.toString().c_str());\n // Design\n // ------\n // We wish to retrieve the service given its UUID.  It is possible that we have not yet asked the\n // device what services it has in which case we have nothing to match against.  If we have not\n // asked the device about its services, then we do that now.  Once we get the results we can then\n // examine the services map to see if it has the service we are looking for.\n-\tif (!m_haveServices) {\n-\t\tgetServices();\n-\t}\n-\tstd::string uuidStr = uuid.toString();\n-\tfor (auto &myPair : m_servicesMap) {\n-\t\tif (myPair.first == uuidStr) {\n-\t\t\tlog_v(\"<< getService: found the service with uuid: %s\", uuid.toString().c_str());\n-\t\t\treturn myPair.second;\n-\t\t}\n-\t} // End of each of the services.\n-\tlog_v(\"<< getService: not found\");\n-\treturn nullptr;\n+  if (!m_haveServices) {\n+    getServices();\n+  }\n+  String uuidStr = uuid.toString();\n+  for (auto &myPair : m_servicesMap) {\n+    if (myPair.first == uuidStr) {\n+      log_v(\"<< getService: found the service with uuid: %s\", uuid.toString().c_str());\n+      return myPair.second;\n+    }\n+  } // End of each of the services.\n+  log_v(\"<< getService: not found\");\n+  return nullptr;\n } // getService\n \n \n@@ -440,7 +440,7 @@ BLERemoteService* BLEClient::getService(BLEUUID uuid) {\n  * services and wait until we have received them all.\n  * @return N/A\n  */\n-std::map<std::string, BLERemoteService*>* BLEClient::getServices() {\n+std::map<String, BLERemoteService*>* BLEClient::getServices() {\n /*\n  * Design\n  * ------\n@@ -448,25 +448,25 @@ std::map<std::string, BLERemoteService*>* BLEClient::getServices() {\n  * peer BLE partner to be returned as events.  Each event will be an an instance of ESP_GATTC_SEARCH_RES_EVT\n  * and will culminate with an ESP_GATTC_SEARCH_CMPL_EVT when all have been received.\n  */\n-\tlog_v(\">> getServices\");\n+  log_v(\">> getServices\");\n // TODO implement retrieving services from cache\n-\tclearServices(); // Clear any services that may exist.\n-\n-\tesp_err_t errRc = esp_ble_gattc_search_service(\n-\t\tgetGattcIf(),\n-\t\tgetConnId(),\n-\t\tNULL            // Filter UUID\n-\t);\n-\n-\tm_semaphoreSearchCmplEvt.take(\"getServices\");\n-\tif (errRc != ESP_OK) {\n-\t\tlog_e(\"esp_ble_gattc_search_service: rc=%d %s\", errRc, GeneralUtils::errorToString(errRc));\n-\t\treturn &m_servicesMap;\n-\t}\n-\t// If sucessfull, remember that we now have services.\n-\tm_haveServices = (m_semaphoreSearchCmplEvt.wait(\"getServices\") == 0);\n-\tlog_v(\"<< getServices\");\n-\treturn &m_servicesMap;\n+  clearServices(); // Clear any services that may exist.\n+\n+  esp_err_t errRc = esp_ble_gattc_search_service(\n+    getGattcIf(),\n+    getConnId(),\n+    NULL            // Filter UUID\n+  );\n+\n+  m_semaphoreSearchCmplEvt.take(\"getServices\");\n+  if (errRc != ESP_OK) {\n+    log_e(\"esp_ble_gattc_search_service: rc=%d %s\", errRc, GeneralUtils::errorToString(errRc));\n+    return &m_servicesMap;\n+  }\n+  // If sucessfull, remember that we now have services.\n+  m_haveServices = (m_semaphoreSearchCmplEvt.wait(\"getServices\") == 0);\n+  log_v(\"<< getServices\");\n+  return &m_servicesMap;\n } // getServices\n \n \n@@ -476,11 +476,11 @@ std::map<std::string, BLERemoteService*>* BLEClient::getServices() {\n  * @param [in] characteristicUUID The characteristic whose value we wish to read.\n  * @throws BLEUuidNotFound\n  */\n-std::string BLEClient::getValue(BLEUUID serviceUUID, BLEUUID characteristicUUID) {\n-\tlog_v(\">> getValue: serviceUUID: %s, characteristicUUID: %s\", serviceUUID.toString().c_str(), characteristicUUID.toString().c_str());\n-\tstd::string ret = getService(serviceUUID)->getCharacteristic(characteristicUUID)->readValue();\n-\tlog_v(\"<<getValue\");\n-\treturn ret;\n+String BLEClient::getValue(BLEUUID serviceUUID, BLEUUID characteristicUUID) {\n+  log_v(\">> getValue: serviceUUID: %s, characteristicUUID: %s\", serviceUUID.toString().c_str(), characteristicUUID.toString().c_str());\n+  String ret = getService(serviceUUID)->getCharacteristic(characteristicUUID)->readValue();\n+  log_v(\"<<getValue\");\n+  return ret;\n } // getValue\n \n \n@@ -491,26 +491,26 @@ std::string BLEClient::getValue(BLEUUID serviceUUID, BLEUUID characteristicUUID)\n  * @param [in] param\n  */\n void BLEClient::handleGAPEvent(\n-\t\tesp_gap_ble_cb_event_t  event,\n-\t\tesp_ble_gap_cb_param_t* param) {\n-\tlog_d(\"BLEClient ... handling GAP event!\");\n-\tswitch (event) {\n-\t\t//\n-\t\t// ESP_GAP_BLE_READ_RSSI_COMPLETE_EVT\n-\t\t//\n-\t\t// read_rssi_cmpl\n-\t\t// - esp_bt_status_t status\n-\t\t// - int8_t rssi\n-\t\t// - esp_bd_addr_t remote_addr\n-\t\t//\n-\t\tcase ESP_GAP_BLE_READ_RSSI_COMPLETE_EVT: {\n-\t\t\tm_semaphoreRssiCmplEvt.give((uint32_t) param->read_rssi_cmpl.rssi);\n-\t\t\tbreak;\n-\t\t} // ESP_GAP_BLE_READ_RSSI_COMPLETE_EVT\n-\n-\t\tdefault:\n-\t\t\tbreak;\n-\t}\n+    esp_gap_ble_cb_event_t  event,\n+    esp_ble_gap_cb_param_t* param) {\n+  log_d(\"BLEClient ... handling GAP event!\");\n+  switch (event) {\n+    //\n+    // ESP_GAP_BLE_READ_RSSI_COMPLETE_EVT\n+    //\n+    // read_rssi_cmpl\n+    // - esp_bt_status_t status\n+    // - int8_t rssi\n+    // - esp_bd_addr_t remote_addr\n+    //\n+    case ESP_GAP_BLE_READ_RSSI_COMPLETE_EVT: {\n+      m_semaphoreRssiCmplEvt.give((uint32_t) param->read_rssi_cmpl.rssi);\n+      break;\n+    } // ESP_GAP_BLE_READ_RSSI_COMPLETE_EVT\n+\n+    default:\n+      break;\n+  }\n } // handleGAPEvent\n \n \n@@ -519,7 +519,7 @@ void BLEClient::handleGAPEvent(\n  * @return True if we are connected and false if we are not connected.\n  */\n bool BLEClient::isConnected() {\n-\treturn m_isConnected;\n+  return m_isConnected;\n } // isConnected\n \n \n@@ -529,7 +529,7 @@ bool BLEClient::isConnected() {\n  * @brief Set the callbacks that will be invoked.\n  */\n void BLEClient::setClientCallbacks(BLEClientCallbacks* pClientCallbacks) {\n-\tm_pClientCallbacks = pClientCallbacks;\n+  m_pClientCallbacks = pClientCallbacks;\n } // setClientCallbacks\n \n \n@@ -539,44 +539,44 @@ void BLEClient::setClientCallbacks(BLEClientCallbacks* pClientCallbacks) {\n  * @param [in] characteristicUUID The characteristic whose value we wish to write.\n  * @throws BLEUuidNotFound\n  */\n-void BLEClient::setValue(BLEUUID serviceUUID, BLEUUID characteristicUUID, std::string value) {\n-\tlog_v(\">> setValue: serviceUUID: %s, characteristicUUID: %s\", serviceUUID.toString().c_str(), characteristicUUID.toString().c_str());\n-\tgetService(serviceUUID)->getCharacteristic(characteristicUUID)->writeValue(value);\n-\tlog_v(\"<< setValue\");\n+void BLEClient::setValue(BLEUUID serviceUUID, BLEUUID characteristicUUID, String value) {\n+  log_v(\">> setValue: serviceUUID: %s, characteristicUUID: %s\", serviceUUID.toString().c_str(), characteristicUUID.toString().c_str());\n+  getService(serviceUUID)->getCharacteristic(characteristicUUID)->writeValue(value);\n+  log_v(\"<< setValue\");\n } // setValue\n \n uint16_t BLEClient::getMTU() {\n-\treturn m_mtu;\n+  return m_mtu;\n }\n \n \n /**\n-\t@brief Set the local and remote MTU size.\n- \t\t\t\tShould be called once after client connects if MTU size needs to be changed.\n-\t@return bool indicating if MTU was successfully set locally and on remote.\n+  @brief Set the local and remote MTU size.\n+         Should be called once after client connects if MTU size needs to be changed.\n+  @return bool indicating if MTU was successfully set locally and on remote.\n */\n bool BLEClient::setMTU(uint16_t mtu)\n {\n-\tesp_err_t err = esp_ble_gatt_set_local_mtu(mtu);  //First must set local MTU value.\n-\tif (err == ESP_OK) \n-\t{\n-\t\terr = esp_ble_gattc_send_mtu_req(m_gattc_if,m_conn_id);  //Once local is set successfully set remote size\n-\t\tif (err!=ESP_OK)\n-\t\t{\n-\t\t\tlog_e(\"Error setting send MTU request MTU: %d err=%d\", mtu,err);\n-\t\t\treturn false;\n-\t\t}\n-\t}\n-\telse \n-\t{\n-\t\tlog_e(\"can't set local mtu value: %d\", mtu);\n-\t\treturn false;\n-\t}\n-\tlog_v(\"<< setLocalMTU\");\n-\n-\tm_mtu = mtu; //successfully changed\n-\n-\treturn true;\n+  esp_err_t err = esp_ble_gatt_set_local_mtu(mtu);  //First must set local MTU value.\n+  if (err == ESP_OK)\n+  {\n+    err = esp_ble_gattc_send_mtu_req(m_gattc_if,m_conn_id);  //Once local is set successfully set remote size\n+    if (err!=ESP_OK)\n+    {\n+      log_e(\"Error setting send MTU request MTU: %d err=%d\", mtu,err);\n+      return false;\n+    }\n+  }\n+  else\n+  {\n+    log_e(\"can't set local mtu value: %d\", mtu);\n+    return false;\n+  }\n+  log_v(\"<< setLocalMTU\");\n+\n+  m_mtu = mtu; //successfully changed\n+\n+  return true;\n }\n \n \n@@ -586,14 +586,14 @@ bool BLEClient::setMTU(uint16_t mtu)\n  * @brief Return a string representation of this client.\n  * @return A string representation of this client.\n  */\n-std::string BLEClient::toString() {\n-\tstd::string res = \"peer address: \" + m_peerAddress.toString();\n-\tres += \"\\nServices:\\n\";\n-\tfor (auto &myPair : m_servicesMap) {\n-\t\tres += myPair.second->toString() + \"\\n\";\n-\t  // myPair.second is the value\n-\t}\n-\treturn res;\n+String BLEClient::toString() {\n+  String res = \"peer address: \" + m_peerAddress.toString();\n+  res += \"\\nServices:\\n\";\n+  for (auto &myPair : m_servicesMap) {\n+    res += myPair.second->toString() + \"\\n\";\n+    // myPair.second is the value\n+  }\n+  return res;\n } // toString\n \n #endif /* CONFIG_BLUEDROID_ENABLED */\n",
            "comment_added_diff": {
                "53": "  m_isConnected      = false;  // Initially, we are flagged as not connected.",
                "61": "  // We may have allocated service references associated with this client.  Before we are finished",
                "62": "  // with the client, we must release resources.",
                "77": "  // Delete all the services.",
                "109": "  // clearServices(); // we dont need to delete services since every client is unique?",
                "120": "    // fixes ESP_GATT_NO_RESOURCES error mostly",
                "123": "    // not sure if this is needed here",
                "124": "    // esp_ble_gattc_app_unregister(m_gattc_if);",
                "125": "    // m_gattc_if = ESP_GATT_IF_NONE;",
                "131": "  // Perform the open connection request against the target BLE Server.",
                "135": "    *getPeerAddress().getNative(), // address",
                "136": "    type,          // Note: This was added on 2018-04-03 when the latest ESP-IDF was detected to have changed the signature.",
                "137": "    1                              // direct connection <-- maybe needs to be changed in case of direct indirect connection???",
                "145": "  rc = m_semaphoreOpenEvt.wait(\"connect\");   // Wait for the connection to complete.",
                "146": "  // check the status of the connection and cleanup in case of failure",
                "183": "  // it is possible to receive events from other connections while waiting for registration",
                "188": "  // Execute handler code based on the type of event received.",
                "196": "        // esp_ble_gattc_app_unregister(m_appId);",
                "197": "        // BLEDevice::removePeerDevice(m_gattc_if, true);",
                "202": "    // ESP_GATTC_DISCONNECT_EVT",
                "204": "    // disconnect:",
                "205": "    // - esp_gatt_status_t status",
                "206": "    // - uint16_t          conn_id",
                "207": "    // - esp_bd_addr_t     remote_bda",
                "210": "        // If we receive a disconnect event, set the class flag that indicates that we are",
                "211": "        // no longer connected.",
                "224": "    } // ESP_GATTC_DISCONNECT_EVT",
                "227": "    // ESP_GATTC_OPEN_EVT",
                "229": "    // open:",
                "230": "    // - esp_gatt_status_t status",
                "231": "    // - uint16_t          conn_id",
                "232": "    // - esp_bd_addr_t     remote_bda",
                "237": "        m_isConnected = true;   // Flag us as connected.",
                "246": "    } // ESP_GATTC_OPEN_EVT",
                "250": "    // ESP_GATTC_REG_EVT",
                "252": "    // reg:",
                "253": "    // esp_gatt_status_t status",
                "254": "    // uint16_t          app_id",
                "258": "      // pass on the registration status result, in case of failure",
                "261": "    } // ESP_GATTC_REG_EVT",
                "282": "#endif  // CONFIG_BLE_SMP_ENABLE",
                "284": "    } // ESP_GATTC_CONNECT_EVT",
                "287": "    // ESP_GATTC_SEARCH_CMPL_EVT",
                "289": "    // search_cmpl:",
                "290": "    // - esp_gatt_status_t status",
                "291": "    // - uint16_t          conn_id",
                "301": "// commented out just for now to keep backward compatibility",
                "302": "      // if(p_data->search_cmpl.searched_service_source == ESP_GATT_SERVICE_FROM_REMOTE_DEVICE) {",
                "303": "      //   log_i(\"Get service information from remote device\");",
                "304": "      // } else if (p_data->search_cmpl.searched_service_source == ESP_GATT_SERVICE_FROM_NVS_FLASH) {",
                "305": "      //   log_i(\"Get service information from flash\");",
                "306": "      // } else {",
                "307": "      //   log_i(\"unknown service source\");",
                "308": "      // }",
                "312": "    } // ESP_GATTC_SEARCH_CMPL_EVT",
                "316": "    // ESP_GATTC_SEARCH_RES_EVT",
                "318": "    // search_res:",
                "319": "    // - uint16_t      conn_id",
                "320": "    // - uint16_t      start_handle",
                "321": "    // - uint16_t      end_handle",
                "322": "    // - esp_gatt_id_t srvc_id",
                "336": "    } // ESP_GATTC_SEARCH_RES_EVT",
                "342": "  } // Switch",
                "344": "  // Pass the request on to all services.",
                "383": "  // We make the API call to read the RSSI value which is an asynchronous operation.  We expect to receive",
                "384": "  // an ESP_GAP_BLE_READ_RSSI_COMPLETE_EVT to indicate completion.",
                "431": "  } // End of each of the services.",
                "453": "  clearServices(); // Clear any services that may exist.",
                "458": "    NULL            // Filter UUID",
                "466": "  // If sucessfull, remember that we now have services.",
                "499": "    // ESP_GAP_BLE_READ_RSSI_COMPLETE_EVT",
                "501": "    // read_rssi_cmpl",
                "502": "    // - esp_bt_status_t status",
                "503": "    // - int8_t rssi",
                "504": "    // - esp_bd_addr_t remote_addr",
                "509": "    } // ESP_GAP_BLE_READ_RSSI_COMPLETE_EVT",
                "594": "    // myPair.second is the value"
            },
            "comment_deleted_diff": {
                "53": "\tm_isConnected      = false;  // Initially, we are flagged as not connected.",
                "61": "\t// We may have allocated service references associated with this client.  Before we are finished",
                "62": "\t// with the client, we must release resources.",
                "77": "\t// Delete all the services.",
                "109": "\t// clearServices(); // we dont need to delete services since every client is unique?",
                "120": "\t\t// fixes ESP_GATT_NO_RESOURCES error mostly",
                "123": "\t\t// not sure if this is needed here",
                "124": "\t\t// esp_ble_gattc_app_unregister(m_gattc_if);",
                "125": "\t\t// m_gattc_if = ESP_GATT_IF_NONE;",
                "131": "\t// Perform the open connection request against the target BLE Server.",
                "135": "\t\t*getPeerAddress().getNative(), // address",
                "136": "\t\ttype,          // Note: This was added on 2018-04-03 when the latest ESP-IDF was detected to have changed the signature.",
                "137": "\t\t1                              // direct connection <-- maybe needs to be changed in case of direct indirect connection???",
                "145": "\trc = m_semaphoreOpenEvt.wait(\"connect\");   // Wait for the connection to complete.",
                "146": "\t// check the status of the connection and cleanup in case of failure",
                "183": "\t// it is possible to receive events from other connections while waiting for registration",
                "188": "\t// Execute handler code based on the type of event received.",
                "196": "\t\t\t\t// esp_ble_gattc_app_unregister(m_appId);",
                "197": "\t\t\t\t// BLEDevice::removePeerDevice(m_gattc_if, true);",
                "202": "\t\t// ESP_GATTC_DISCONNECT_EVT",
                "204": "\t\t// disconnect:",
                "205": "\t\t// - esp_gatt_status_t status",
                "206": "\t\t// - uint16_t          conn_id",
                "207": "\t\t// - esp_bd_addr_t     remote_bda",
                "210": "\t\t\t\t// If we receive a disconnect event, set the class flag that indicates that we are",
                "211": "\t\t\t\t// no longer connected.",
                "224": "\t\t} // ESP_GATTC_DISCONNECT_EVT",
                "227": "\t\t// ESP_GATTC_OPEN_EVT",
                "229": "\t\t// open:",
                "230": "\t\t// - esp_gatt_status_t status",
                "231": "\t\t// - uint16_t          conn_id",
                "232": "\t\t// - esp_bd_addr_t     remote_bda",
                "237": "\t\t\t\tm_isConnected = true;   // Flag us as connected.",
                "246": "\t\t} // ESP_GATTC_OPEN_EVT",
                "250": "\t\t// ESP_GATTC_REG_EVT",
                "252": "\t\t// reg:",
                "253": "\t\t// esp_gatt_status_t status",
                "254": "\t\t// uint16_t          app_id",
                "258": "\t\t\t// pass on the registration status result, in case of failure",
                "261": "\t\t} // ESP_GATTC_REG_EVT",
                "282": "#endif\t// CONFIG_BLE_SMP_ENABLE",
                "284": "\t\t} // ESP_GATTC_CONNECT_EVT",
                "287": "\t\t// ESP_GATTC_SEARCH_CMPL_EVT",
                "289": "\t\t// search_cmpl:",
                "290": "\t\t// - esp_gatt_status_t status",
                "291": "\t\t// - uint16_t          conn_id",
                "301": "// commented out just for now to keep backward compatibility",
                "302": "\t\t\t// if(p_data->search_cmpl.searched_service_source == ESP_GATT_SERVICE_FROM_REMOTE_DEVICE) {",
                "303": "\t\t\t// \tlog_i(\"Get service information from remote device\");",
                "304": "\t\t\t// } else if (p_data->search_cmpl.searched_service_source == ESP_GATT_SERVICE_FROM_NVS_FLASH) {",
                "305": "\t\t\t// \tlog_i(\"Get service information from flash\");",
                "306": "\t\t\t// } else {",
                "307": "\t\t\t// \tlog_i(\"unknown service source\");",
                "308": "\t\t\t// }",
                "312": "\t\t} // ESP_GATTC_SEARCH_CMPL_EVT",
                "316": "\t\t// ESP_GATTC_SEARCH_RES_EVT",
                "318": "\t\t// search_res:",
                "319": "\t\t// - uint16_t      conn_id",
                "320": "\t\t// - uint16_t      start_handle",
                "321": "\t\t// - uint16_t      end_handle",
                "322": "\t\t// - esp_gatt_id_t srvc_id",
                "336": "\t\t} // ESP_GATTC_SEARCH_RES_EVT",
                "342": "\t} // Switch",
                "344": "\t// Pass the request on to all services.",
                "383": "\t// We make the API call to read the RSSI value which is an asynchronous operation.  We expect to receive",
                "384": "\t// an ESP_GAP_BLE_READ_RSSI_COMPLETE_EVT to indicate completion.",
                "431": "\t} // End of each of the services.",
                "453": "\tclearServices(); // Clear any services that may exist.",
                "458": "\t\tNULL            // Filter UUID",
                "466": "\t// If sucessfull, remember that we now have services.",
                "499": "\t\t// ESP_GAP_BLE_READ_RSSI_COMPLETE_EVT",
                "501": "\t\t// read_rssi_cmpl",
                "502": "\t\t// - esp_bt_status_t status",
                "503": "\t\t// - int8_t rssi",
                "504": "\t\t// - esp_bd_addr_t remote_addr",
                "509": "\t\t} // ESP_GAP_BLE_READ_RSSI_COMPLETE_EVT",
                "594": "\t  // myPair.second is the value"
            },
            "comment_modified_diff": {
                "53": "\tm_isConnected      = false;  // Initially, we are flagged as not connected.",
                "61": "\t// We may have allocated service references associated with this client.  Before we are finished",
                "62": "\t// with the client, we must release resources.",
                "77": "\t// Delete all the services.",
                "109": "\t// clearServices(); // we dont need to delete services since every client is unique?",
                "120": "\t\t// fixes ESP_GATT_NO_RESOURCES error mostly",
                "123": "\t\t// not sure if this is needed here",
                "124": "\t\t// esp_ble_gattc_app_unregister(m_gattc_if);",
                "125": "\t\t// m_gattc_if = ESP_GATT_IF_NONE;",
                "131": "\t// Perform the open connection request against the target BLE Server.",
                "135": "\t\t*getPeerAddress().getNative(), // address",
                "136": "\t\ttype,          // Note: This was added on 2018-04-03 when the latest ESP-IDF was detected to have changed the signature.",
                "137": "\t\t1                              // direct connection <-- maybe needs to be changed in case of direct indirect connection???",
                "145": "\trc = m_semaphoreOpenEvt.wait(\"connect\");   // Wait for the connection to complete.",
                "146": "\t// check the status of the connection and cleanup in case of failure",
                "183": "\t// it is possible to receive events from other connections while waiting for registration",
                "188": "\t// Execute handler code based on the type of event received.",
                "196": "\t\t\t\t// esp_ble_gattc_app_unregister(m_appId);",
                "197": "\t\t\t\t// BLEDevice::removePeerDevice(m_gattc_if, true);",
                "202": "\t\t// ESP_GATTC_DISCONNECT_EVT",
                "204": "\t\t// disconnect:",
                "205": "\t\t// - esp_gatt_status_t status",
                "206": "\t\t// - uint16_t          conn_id",
                "207": "\t\t// - esp_bd_addr_t     remote_bda",
                "210": "\t\t\t\t// If we receive a disconnect event, set the class flag that indicates that we are",
                "211": "\t\t\t\t// no longer connected.",
                "224": "\t\t} // ESP_GATTC_DISCONNECT_EVT",
                "227": "\t\t// ESP_GATTC_OPEN_EVT",
                "229": "\t\t// open:",
                "230": "\t\t// - esp_gatt_status_t status",
                "231": "\t\t// - uint16_t          conn_id",
                "232": "\t\t// - esp_bd_addr_t     remote_bda",
                "237": "\t\t\t\tm_isConnected = true;   // Flag us as connected.",
                "246": "\t\t} // ESP_GATTC_OPEN_EVT",
                "250": "\t\t// ESP_GATTC_REG_EVT",
                "252": "\t\t// reg:",
                "253": "\t\t// esp_gatt_status_t status",
                "254": "\t\t// uint16_t          app_id",
                "258": "\t\t\t// pass on the registration status result, in case of failure",
                "261": "\t\t} // ESP_GATTC_REG_EVT",
                "282": "#endif\t// CONFIG_BLE_SMP_ENABLE",
                "284": "\t\t} // ESP_GATTC_CONNECT_EVT",
                "287": "\t\t// ESP_GATTC_SEARCH_CMPL_EVT",
                "289": "\t\t// search_cmpl:",
                "290": "\t\t// - esp_gatt_status_t status",
                "291": "\t\t// - uint16_t          conn_id",
                "301": "// commented out just for now to keep backward compatibility",
                "302": "\t\t\t// if(p_data->search_cmpl.searched_service_source == ESP_GATT_SERVICE_FROM_REMOTE_DEVICE) {",
                "303": "\t\t\t// \tlog_i(\"Get service information from remote device\");",
                "304": "\t\t\t// } else if (p_data->search_cmpl.searched_service_source == ESP_GATT_SERVICE_FROM_NVS_FLASH) {",
                "305": "\t\t\t// \tlog_i(\"Get service information from flash\");",
                "306": "\t\t\t// } else {",
                "307": "\t\t\t// \tlog_i(\"unknown service source\");",
                "308": "\t\t\t// }",
                "312": "\t\t} // ESP_GATTC_SEARCH_CMPL_EVT",
                "316": "\t\t// ESP_GATTC_SEARCH_RES_EVT",
                "318": "\t\t// search_res:",
                "319": "\t\t// - uint16_t      conn_id",
                "320": "\t\t// - uint16_t      start_handle",
                "321": "\t\t// - uint16_t      end_handle",
                "322": "\t\t// - esp_gatt_id_t srvc_id",
                "336": "\t\t} // ESP_GATTC_SEARCH_RES_EVT",
                "342": "\t} // Switch",
                "344": "\t// Pass the request on to all services.",
                "383": "\t// We make the API call to read the RSSI value which is an asynchronous operation.  We expect to receive",
                "384": "\t// an ESP_GAP_BLE_READ_RSSI_COMPLETE_EVT to indicate completion.",
                "431": "\t} // End of each of the services.",
                "453": "\tclearServices(); // Clear any services that may exist.",
                "458": "\t\tNULL            // Filter UUID",
                "466": "\t// If sucessfull, remember that we now have services.",
                "499": "\t\t// ESP_GAP_BLE_READ_RSSI_COMPLETE_EVT",
                "501": "\t\t// read_rssi_cmpl",
                "502": "\t\t// - esp_bt_status_t status",
                "503": "\t\t// - int8_t rssi",
                "504": "\t\t// - esp_bd_addr_t remote_addr",
                "509": "\t\t} // ESP_GAP_BLE_READ_RSSI_COMPLETE_EVT",
                "594": "\t  // myPair.second is the value"
            }
        }
    ],
    "BLEClient.h": [],
    "BLEDescriptor.cpp": [
        {
            "commit": "822f252b353cfd808c77c9bc8369bc0cb4e0b5be",
            "timestamp": "2023-10-06T15:50:11+03:00",
            "author": "Me No Dev",
            "commit_message": "BLE upgrades (#8724)\n\n* Renamed library description\r\n\r\n* Updated Eddystone URL (not complete)\r\n\r\n* Updated Eddystone URL\r\n\r\n* Updated Eddystone classes and beacon scanner\r\n\r\n* Renamed examples - removing prefix BLE_\r\n\r\n* Renamed Beacon_Scanner\r\n\r\n* Updated TLM\r\n\r\n* Changed std::string to Arduino String\r\n\r\n* More std::string -> String\r\n\r\n* Changed String in forgotten file\r\n\r\n* Changed .data to .c_str\r\n\r\n* Reverting single String type change\r\n\r\n* Few more fixes related to the String transition\r\n\r\n* Fixed URL and Utils error\r\n\r\n* Added and modified compatibility safeguards for BLE5 examples\r\n\r\n* Added #include WString.h\r\n\r\n* Fixed Beacon_Scanner\r\n\r\n* Remove commented include\r\n\r\nCo-authored-by: Lucas Saavedra Vaz <lucassvaz@yahoo.com.br>\r\n\r\n---------\r\n\r\nCo-authored-by: Tomas Pilny <tomas.pilny@espressif.com>\r\nCo-authored-by: Lucas Saavedra Vaz <lucassvaz@yahoo.com.br>",
            "additions": 138,
            "deletions": 138,
            "change_type": "MODIFY",
            "diff": "@@ -27,20 +27,20 @@\n  * @brief BLEDescriptor constructor.\n  */\n BLEDescriptor::BLEDescriptor(const char* uuid, uint16_t len) : BLEDescriptor(BLEUUID(uuid), len) {\n-}\t\n+}\n \n /**\n  * @brief BLEDescriptor constructor.\n  */\n BLEDescriptor::BLEDescriptor(BLEUUID uuid, uint16_t max_len) {\n-\tm_bleUUID            = uuid;\n-\tm_value.attr_len     = 0;                                         // Initial length is 0.\n-\tm_value.attr_max_len = max_len;                     \t\t\t  // Maximum length of the data.\n-\tm_handle             = NULL_HANDLE;                               // Handle is initially unknown.\n-\tm_pCharacteristic    = nullptr;                                   // No initial characteristic.\n-\tm_pCallback          = nullptr;                                   // No initial callback.\n-\n-\tm_value.attr_value   = (uint8_t*) malloc(max_len);  // Allocate storage for the value.\n+  m_bleUUID            = uuid;\n+  m_value.attr_len     = 0;                                         // Initial length is 0.\n+  m_value.attr_max_len = max_len;                                   // Maximum length of the data.\n+  m_handle             = NULL_HANDLE;                               // Handle is initially unknown.\n+  m_pCharacteristic    = nullptr;                                   // No initial characteristic.\n+  m_pCallback          = nullptr;                                   // No initial callback.\n+\n+  m_value.attr_value   = (uint8_t*) malloc(max_len);  // Allocate storage for the value.\n } // BLEDescriptor\n \n \n@@ -48,7 +48,7 @@ BLEDescriptor::BLEDescriptor(BLEUUID uuid, uint16_t max_len) {\n  * @brief BLEDescriptor destructor.\n  */\n BLEDescriptor::~BLEDescriptor() {\n-\tfree(m_value.attr_value);   // Release the storage we created in the constructor.\n+  free(m_value.attr_value);   // Release the storage we created in the constructor.\n } // ~BLEDescriptor\n \n \n@@ -57,31 +57,31 @@ BLEDescriptor::~BLEDescriptor() {\n  * @param [in] pCharacteristic The characteristic to which to register this descriptor.\n  */\n void BLEDescriptor::executeCreate(BLECharacteristic* pCharacteristic) {\n-\tlog_v(\">> executeCreate(): %s\", toString().c_str());\n-\n-\tif (m_handle != NULL_HANDLE) {\n-\t\tlog_e(\"Descriptor already has a handle.\");\n-\t\treturn;\n-\t}\n-\n-\tm_pCharacteristic = pCharacteristic; // Save the characteristic associated with this service.\n-\n-\tesp_attr_control_t control;\n-\tcontrol.auto_rsp = ESP_GATT_AUTO_RSP;\n-\tm_semaphoreCreateEvt.take(\"executeCreate\");\n-\tesp_err_t errRc = ::esp_ble_gatts_add_char_descr(\n-\t\t\tpCharacteristic->getService()->getHandle(),\n-\t\t\tgetUUID().getNative(),\n-\t\t\t(esp_gatt_perm_t)m_permissions,\n-\t\t\t&m_value,\n-\t\t\t&control);\n-\tif (errRc != ESP_OK) {\n-\t\tlog_e(\"<< esp_ble_gatts_add_char_descr: rc=%d %s\", errRc, GeneralUtils::errorToString(errRc));\n-\t\treturn;\n-\t}\n-\n-\tm_semaphoreCreateEvt.wait(\"executeCreate\");\n-\tlog_v(\"<< executeCreate\");\n+  log_v(\">> executeCreate(): %s\", toString().c_str());\n+\n+  if (m_handle != NULL_HANDLE) {\n+    log_e(\"Descriptor already has a handle.\");\n+    return;\n+  }\n+\n+  m_pCharacteristic = pCharacteristic; // Save the characteristic associated with this service.\n+\n+  esp_attr_control_t control;\n+  control.auto_rsp = ESP_GATT_AUTO_RSP;\n+  m_semaphoreCreateEvt.take(\"executeCreate\");\n+  esp_err_t errRc = ::esp_ble_gatts_add_char_descr(\n+      pCharacteristic->getService()->getHandle(),\n+      getUUID().getNative(),\n+      (esp_gatt_perm_t)m_permissions,\n+      &m_value,\n+      &control);\n+  if (errRc != ESP_OK) {\n+    log_e(\"<< esp_ble_gatts_add_char_descr: rc=%d %s\", errRc, GeneralUtils::errorToString(errRc));\n+    return;\n+  }\n+\n+  m_semaphoreCreateEvt.wait(\"executeCreate\");\n+  log_v(\"<< executeCreate\");\n } // executeCreate\n \n \n@@ -90,7 +90,7 @@ void BLEDescriptor::executeCreate(BLECharacteristic* pCharacteristic) {\n  * @return The handle for this descriptor.\n  */\n uint16_t BLEDescriptor::getHandle() {\n-\treturn m_handle;\n+  return m_handle;\n } // getHandle\n \n \n@@ -99,7 +99,7 @@ uint16_t BLEDescriptor::getHandle() {\n  * @return The length (in bytes) of the value of this descriptor.\n  */\n size_t BLEDescriptor::getLength() {\n-\treturn m_value.attr_len;\n+  return m_value.attr_len;\n } // getLength\n \n \n@@ -107,7 +107,7 @@ size_t BLEDescriptor::getLength() {\n  * @brief Get the UUID of the descriptor.\n  */\n BLEUUID BLEDescriptor::getUUID() {\n-\treturn m_bleUUID;\n+  return m_bleUUID;\n } // getUUID\n \n \n@@ -117,7 +117,7 @@ BLEUUID BLEDescriptor::getUUID() {\n  * @return A pointer to the value of this descriptor.\n  */\n uint8_t* BLEDescriptor::getValue() {\n-\treturn m_value.attr_value;\n+  return m_value.attr_value;\n } // getValue\n \n \n@@ -128,77 +128,77 @@ uint8_t* BLEDescriptor::getValue() {\n  * @param [in] param\n  */\n void BLEDescriptor::handleGATTServerEvent(\n-\t\tesp_gatts_cb_event_t      event,\n-\t\tesp_gatt_if_t             gatts_if,\n-\t\tesp_ble_gatts_cb_param_t* param) {\n-\tswitch (event) {\n-\t\t// ESP_GATTS_ADD_CHAR_DESCR_EVT\n-\t\t//\n-\t\t// add_char_descr:\n-\t\t// - esp_gatt_status_t status\n-\t\t// - uint16_t          attr_handle\n-\t\t// - uint16_t          service_handle\n-\t\t// - esp_bt_uuid_t     char_uuid\n-\t\tcase ESP_GATTS_ADD_CHAR_DESCR_EVT: {\n-\t\t\tif (m_pCharacteristic != nullptr &&\n-\t\t\t\t\tm_bleUUID.equals(BLEUUID(param->add_char_descr.descr_uuid)) &&\n-\t\t\t\t\tm_pCharacteristic->getService()->getHandle() == param->add_char_descr.service_handle &&\n-\t\t\t\t\tm_pCharacteristic == m_pCharacteristic->getService()->getLastCreatedCharacteristic()) {\n-\t\t\t\tsetHandle(param->add_char_descr.attr_handle);\n-\t\t\t\tm_semaphoreCreateEvt.give();\n-\t\t\t}\n-\t\t\tbreak;\n-\t\t} // ESP_GATTS_ADD_CHAR_DESCR_EVT\n-\n-\t\t// ESP_GATTS_WRITE_EVT - A request to write the value of a descriptor has arrived.\n-\t\t//\n-\t\t// write:\n-\t\t// - uint16_t conn_id\n-\t\t// - uint16_t trans_id\n-\t\t// - esp_bd_addr_t bda\n-\t\t// - uint16_t handle\n-\t\t// - uint16_t offset\n-\t\t// - bool need_rsp\n-\t\t// - bool is_prep\n-\t\t// - uint16_t len\n-\t\t// - uint8_t *value\n-\t\tcase ESP_GATTS_WRITE_EVT: {\n-\t\t\tif (param->write.handle == m_handle) {\n-\t\t\t\tsetValue(param->write.value, param->write.len);   // Set the value of the descriptor.\n-\n-\t\t\t\tif (m_pCallback != nullptr) {   // We have completed the write, if there is a user supplied callback handler, invoke it now.\n-\t\t\t\t\tm_pCallback->onWrite(this);   // Invoke the onWrite callback handler.\n-\t\t\t\t}\n-\t\t\t}  // End of ... this is our handle.\n-\n-\t\t\tbreak;\n-\t\t} // ESP_GATTS_WRITE_EVT\n-\n-\t\t// ESP_GATTS_READ_EVT - A request to read the value of a descriptor has arrived.\n-\t\t//\n-\t\t// read:\n-\t\t// - uint16_t conn_id\n-\t\t// - uint32_t trans_id\n-\t\t// - esp_bd_addr_t bda\n-\t\t// - uint16_t handle\n-\t\t// - uint16_t offset\n-\t\t// - bool is_long\n-\t\t// - bool need_rsp\n-\t\t//\n-\t\tcase ESP_GATTS_READ_EVT: {\n-\t\t\tif (param->read.handle == m_handle) {  // If this event is for this descriptor ... process it\n-\n-\t\t\t\tif (m_pCallback != nullptr) {   // If we have a user supplied callback, invoke it now.\n-\t\t\t\t\tm_pCallback->onRead(this);    // Invoke the onRead callback method in the callback handler.\n-\t\t\t\t}\n-\n-\t\t\t} // End of this is our handle\n-\t\t\tbreak;\n-\t\t} // ESP_GATTS_READ_EVT\n-\n-\t\tdefault:\n-\t\t\tbreak;\n-\t} // switch event\n+    esp_gatts_cb_event_t      event,\n+    esp_gatt_if_t             gatts_if,\n+    esp_ble_gatts_cb_param_t* param) {\n+  switch (event) {\n+    // ESP_GATTS_ADD_CHAR_DESCR_EVT\n+    //\n+    // add_char_descr:\n+    // - esp_gatt_status_t status\n+    // - uint16_t          attr_handle\n+    // - uint16_t          service_handle\n+    // - esp_bt_uuid_t     char_uuid\n+    case ESP_GATTS_ADD_CHAR_DESCR_EVT: {\n+      if (m_pCharacteristic != nullptr &&\n+          m_bleUUID.equals(BLEUUID(param->add_char_descr.descr_uuid)) &&\n+          m_pCharacteristic->getService()->getHandle() == param->add_char_descr.service_handle &&\n+          m_pCharacteristic == m_pCharacteristic->getService()->getLastCreatedCharacteristic()) {\n+        setHandle(param->add_char_descr.attr_handle);\n+        m_semaphoreCreateEvt.give();\n+      }\n+      break;\n+    } // ESP_GATTS_ADD_CHAR_DESCR_EVT\n+\n+    // ESP_GATTS_WRITE_EVT - A request to write the value of a descriptor has arrived.\n+    //\n+    // write:\n+    // - uint16_t conn_id\n+    // - uint16_t trans_id\n+    // - esp_bd_addr_t bda\n+    // - uint16_t handle\n+    // - uint16_t offset\n+    // - bool need_rsp\n+    // - bool is_prep\n+    // - uint16_t len\n+    // - uint8_t *value\n+    case ESP_GATTS_WRITE_EVT: {\n+      if (param->write.handle == m_handle) {\n+        setValue(param->write.value, param->write.len);   // Set the value of the descriptor.\n+\n+        if (m_pCallback != nullptr) {   // We have completed the write, if there is a user supplied callback handler, invoke it now.\n+          m_pCallback->onWrite(this);   // Invoke the onWrite callback handler.\n+        }\n+      }  // End of ... this is our handle.\n+\n+      break;\n+    } // ESP_GATTS_WRITE_EVT\n+\n+    // ESP_GATTS_READ_EVT - A request to read the value of a descriptor has arrived.\n+    //\n+    // read:\n+    // - uint16_t conn_id\n+    // - uint32_t trans_id\n+    // - esp_bd_addr_t bda\n+    // - uint16_t handle\n+    // - uint16_t offset\n+    // - bool is_long\n+    // - bool need_rsp\n+    //\n+    case ESP_GATTS_READ_EVT: {\n+      if (param->read.handle == m_handle) {  // If this event is for this descriptor ... process it\n+\n+        if (m_pCallback != nullptr) {   // If we have a user supplied callback, invoke it now.\n+          m_pCallback->onRead(this);    // Invoke the onRead callback method in the callback handler.\n+        }\n+\n+      } // End of this is our handle\n+      break;\n+    } // ESP_GATTS_READ_EVT\n+\n+    default:\n+      break;\n+  } // switch event\n } // handleGATTServerEvent\n \n \n@@ -207,9 +207,9 @@ void BLEDescriptor::handleGATTServerEvent(\n  * @param [in] pCallbacks An instance of a callback structure used to define any callbacks for the descriptor.\n  */\n void BLEDescriptor::setCallbacks(BLEDescriptorCallbacks* pCallback) {\n-\tlog_v(\">> setCallbacks: 0x%x\", (uint32_t) pCallback);\n-\tm_pCallback = pCallback;\n-\tlog_v(\"<< setCallbacks\");\n+  log_v(\">> setCallbacks: 0x%x\", (uint32_t) pCallback);\n+  m_pCallback = pCallback;\n+  log_v(\"<< setCallbacks\");\n } // setCallbacks\n \n \n@@ -220,9 +220,9 @@ void BLEDescriptor::setCallbacks(BLEDescriptorCallbacks* pCallback) {\n  * @return N/A.\n  */\n void BLEDescriptor::setHandle(uint16_t handle) {\n-\tlog_v(\">> setHandle(0x%.2x): Setting descriptor handle to be 0x%.2x\", handle, handle);\n-\tm_handle = handle;\n-\tlog_v(\"<< setHandle()\");\n+  log_v(\">> setHandle(0x%.2x): Setting descriptor handle to be 0x%.2x\", handle, handle);\n+  m_handle = handle;\n+  log_v(\"<< setHandle()\");\n } // setHandle\n \n \n@@ -232,16 +232,16 @@ void BLEDescriptor::setHandle(uint16_t handle) {\n  * @param [in] length The length of the data in bytes.\n  */\n void BLEDescriptor::setValue(uint8_t* data, size_t length) {\n-\tif (length > ESP_GATT_MAX_ATTR_LEN) {\n-\t\tlog_e(\"Size %d too large, must be no bigger than %d\", length, ESP_GATT_MAX_ATTR_LEN);\n-\t\treturn;\n-\t}\n-\tm_value.attr_len = length;\n-\tmemcpy(m_value.attr_value, data, length);\n-\tif (m_handle != NULL_HANDLE) {\n-\t\tesp_ble_gatts_set_attr_value(m_handle, length, (const uint8_t *)data);\n-\t\tlog_d(\"Set the value in the GATTS database using handle 0x%x\", m_handle);\n-\t}\n+  if (length > ESP_GATT_MAX_ATTR_LEN) {\n+    log_e(\"Size %d too large, must be no bigger than %d\", length, ESP_GATT_MAX_ATTR_LEN);\n+    return;\n+  }\n+  m_value.attr_len = length;\n+  memcpy(m_value.attr_value, data, length);\n+  if (m_handle != NULL_HANDLE) {\n+    esp_ble_gatts_set_attr_value(m_handle, length, (const uint8_t *)data);\n+    log_d(\"Set the value in the GATTS database using handle 0x%x\", m_handle);\n+  }\n } // setValue\n \n \n@@ -249,23 +249,23 @@ void BLEDescriptor::setValue(uint8_t* data, size_t length) {\n  * @brief Set the value of the descriptor.\n  * @param [in] value The value of the descriptor in string form.\n  */\n-void BLEDescriptor::setValue(std::string value) {\n-\tsetValue((uint8_t*) value.data(), value.length());\n+void BLEDescriptor::setValue(String value) {\n+  setValue((uint8_t*) value.c_str(), value.length());\n } // setValue\n \n void BLEDescriptor::setAccessPermissions(esp_gatt_perm_t perm) {\n-\tm_permissions = perm;\n+  m_permissions = perm;\n }\n \n /**\n  * @brief Return a string representation of the descriptor.\n  * @return A string representation of the descriptor.\n  */\n-std::string BLEDescriptor::toString() {\n-\tchar hex[5];\n-\tsnprintf(hex, sizeof(hex), \"%04x\", m_handle);\n-\tstd::string res = \"UUID: \" + m_bleUUID.toString() + \", handle: 0x\" + hex;\n-\treturn res;\n+String BLEDescriptor::toString() {\n+  char hex[5];\n+  snprintf(hex, sizeof(hex), \"%04x\", m_handle);\n+  String res = \"UUID: \" + m_bleUUID.toString() + \", handle: 0x\" + hex;\n+  return res;\n } // toString\n \n \n@@ -276,8 +276,8 @@ BLEDescriptorCallbacks::~BLEDescriptorCallbacks() {}\n  * @param [in] pDescriptor The descriptor that is the source of the event.\n  */\n void BLEDescriptorCallbacks::onRead(BLEDescriptor* pDescriptor) {\n-\tlog_d(\"BLEDescriptorCallbacks\", \">> onRead: default\");\n-\tlog_d(\"BLEDescriptorCallbacks\", \"<< onRead\");\n+  log_d(\"BLEDescriptorCallbacks\", \">> onRead: default\");\n+  log_d(\"BLEDescriptorCallbacks\", \"<< onRead\");\n } // onRead\n \n \n@@ -286,8 +286,8 @@ void BLEDescriptorCallbacks::onRead(BLEDescriptor* pDescriptor) {\n  * @param [in] pDescriptor The descriptor that is the source of the event.\n  */\n void BLEDescriptorCallbacks::onWrite(BLEDescriptor* pDescriptor) {\n-\tlog_d(\"BLEDescriptorCallbacks\", \">> onWrite: default\");\n-\tlog_d(\"BLEDescriptorCallbacks\", \"<< onWrite\");\n+  log_d(\"BLEDescriptorCallbacks\", \">> onWrite: default\");\n+  log_d(\"BLEDescriptorCallbacks\", \"<< onWrite\");\n } // onWrite\n \n \n",
            "comment_added_diff": {
                "37": "  m_value.attr_len     = 0;                                         // Initial length is 0.",
                "38": "  m_value.attr_max_len = max_len;                                   // Maximum length of the data.",
                "39": "  m_handle             = NULL_HANDLE;                               // Handle is initially unknown.",
                "40": "  m_pCharacteristic    = nullptr;                                   // No initial characteristic.",
                "41": "  m_pCallback          = nullptr;                                   // No initial callback.",
                "43": "  m_value.attr_value   = (uint8_t*) malloc(max_len);  // Allocate storage for the value.",
                "51": "  free(m_value.attr_value);   // Release the storage we created in the constructor.",
                "67": "  m_pCharacteristic = pCharacteristic; // Save the characteristic associated with this service.",
                "135": "    // ESP_GATTS_ADD_CHAR_DESCR_EVT",
                "137": "    // add_char_descr:",
                "138": "    // - esp_gatt_status_t status",
                "139": "    // - uint16_t          attr_handle",
                "140": "    // - uint16_t          service_handle",
                "141": "    // - esp_bt_uuid_t     char_uuid",
                "151": "    } // ESP_GATTS_ADD_CHAR_DESCR_EVT",
                "153": "    // ESP_GATTS_WRITE_EVT - A request to write the value of a descriptor has arrived.",
                "155": "    // write:",
                "156": "    // - uint16_t conn_id",
                "157": "    // - uint16_t trans_id",
                "158": "    // - esp_bd_addr_t bda",
                "159": "    // - uint16_t handle",
                "160": "    // - uint16_t offset",
                "161": "    // - bool need_rsp",
                "162": "    // - bool is_prep",
                "163": "    // - uint16_t len",
                "164": "    // - uint8_t *value",
                "167": "        setValue(param->write.value, param->write.len);   // Set the value of the descriptor.",
                "169": "        if (m_pCallback != nullptr) {   // We have completed the write, if there is a user supplied callback handler, invoke it now.",
                "170": "          m_pCallback->onWrite(this);   // Invoke the onWrite callback handler.",
                "172": "      }  // End of ... this is our handle.",
                "175": "    } // ESP_GATTS_WRITE_EVT",
                "177": "    // ESP_GATTS_READ_EVT - A request to read the value of a descriptor has arrived.",
                "179": "    // read:",
                "180": "    // - uint16_t conn_id",
                "181": "    // - uint32_t trans_id",
                "182": "    // - esp_bd_addr_t bda",
                "183": "    // - uint16_t handle",
                "184": "    // - uint16_t offset",
                "185": "    // - bool is_long",
                "186": "    // - bool need_rsp",
                "189": "      if (param->read.handle == m_handle) {  // If this event is for this descriptor ... process it",
                "191": "        if (m_pCallback != nullptr) {   // If we have a user supplied callback, invoke it now.",
                "192": "          m_pCallback->onRead(this);    // Invoke the onRead callback method in the callback handler.",
                "195": "      } // End of this is our handle",
                "197": "    } // ESP_GATTS_READ_EVT",
                "201": "  } // switch event"
            },
            "comment_deleted_diff": {
                "37": "\tm_value.attr_len     = 0;                                         // Initial length is 0.",
                "38": "\tm_value.attr_max_len = max_len;                     \t\t\t  // Maximum length of the data.",
                "39": "\tm_handle             = NULL_HANDLE;                               // Handle is initially unknown.",
                "40": "\tm_pCharacteristic    = nullptr;                                   // No initial characteristic.",
                "41": "\tm_pCallback          = nullptr;                                   // No initial callback.",
                "43": "\tm_value.attr_value   = (uint8_t*) malloc(max_len);  // Allocate storage for the value.",
                "51": "\tfree(m_value.attr_value);   // Release the storage we created in the constructor.",
                "67": "\tm_pCharacteristic = pCharacteristic; // Save the characteristic associated with this service.",
                "135": "\t\t// ESP_GATTS_ADD_CHAR_DESCR_EVT",
                "137": "\t\t// add_char_descr:",
                "138": "\t\t// - esp_gatt_status_t status",
                "139": "\t\t// - uint16_t          attr_handle",
                "140": "\t\t// - uint16_t          service_handle",
                "141": "\t\t// - esp_bt_uuid_t     char_uuid",
                "151": "\t\t} // ESP_GATTS_ADD_CHAR_DESCR_EVT",
                "153": "\t\t// ESP_GATTS_WRITE_EVT - A request to write the value of a descriptor has arrived.",
                "155": "\t\t// write:",
                "156": "\t\t// - uint16_t conn_id",
                "157": "\t\t// - uint16_t trans_id",
                "158": "\t\t// - esp_bd_addr_t bda",
                "159": "\t\t// - uint16_t handle",
                "160": "\t\t// - uint16_t offset",
                "161": "\t\t// - bool need_rsp",
                "162": "\t\t// - bool is_prep",
                "163": "\t\t// - uint16_t len",
                "164": "\t\t// - uint8_t *value",
                "167": "\t\t\t\tsetValue(param->write.value, param->write.len);   // Set the value of the descriptor.",
                "169": "\t\t\t\tif (m_pCallback != nullptr) {   // We have completed the write, if there is a user supplied callback handler, invoke it now.",
                "170": "\t\t\t\t\tm_pCallback->onWrite(this);   // Invoke the onWrite callback handler.",
                "172": "\t\t\t}  // End of ... this is our handle.",
                "175": "\t\t} // ESP_GATTS_WRITE_EVT",
                "177": "\t\t// ESP_GATTS_READ_EVT - A request to read the value of a descriptor has arrived.",
                "179": "\t\t// read:",
                "180": "\t\t// - uint16_t conn_id",
                "181": "\t\t// - uint32_t trans_id",
                "182": "\t\t// - esp_bd_addr_t bda",
                "183": "\t\t// - uint16_t handle",
                "184": "\t\t// - uint16_t offset",
                "185": "\t\t// - bool is_long",
                "186": "\t\t// - bool need_rsp",
                "189": "\t\t\tif (param->read.handle == m_handle) {  // If this event is for this descriptor ... process it",
                "191": "\t\t\t\tif (m_pCallback != nullptr) {   // If we have a user supplied callback, invoke it now.",
                "192": "\t\t\t\t\tm_pCallback->onRead(this);    // Invoke the onRead callback method in the callback handler.",
                "195": "\t\t\t} // End of this is our handle",
                "197": "\t\t} // ESP_GATTS_READ_EVT",
                "201": "\t} // switch event"
            },
            "comment_modified_diff": {
                "37": "\tm_value.attr_len     = 0;                                         // Initial length is 0.",
                "38": "\tm_value.attr_max_len = max_len;                     \t\t\t  // Maximum length of the data.",
                "39": "\tm_handle             = NULL_HANDLE;                               // Handle is initially unknown.",
                "40": "\tm_pCharacteristic    = nullptr;                                   // No initial characteristic.",
                "41": "\tm_pCallback          = nullptr;                                   // No initial callback.",
                "43": "\tm_value.attr_value   = (uint8_t*) malloc(max_len);  // Allocate storage for the value.",
                "51": "\tfree(m_value.attr_value);   // Release the storage we created in the constructor.",
                "67": "\tm_pCharacteristic = pCharacteristic; // Save the characteristic associated with this service.",
                "135": "\t\t// ESP_GATTS_ADD_CHAR_DESCR_EVT",
                "137": "\t\t// add_char_descr:",
                "138": "\t\t// - esp_gatt_status_t status",
                "139": "\t\t// - uint16_t          attr_handle",
                "140": "\t\t// - uint16_t          service_handle",
                "141": "\t\t// - esp_bt_uuid_t     char_uuid",
                "151": "\t\t} // ESP_GATTS_ADD_CHAR_DESCR_EVT",
                "153": "\t\t// ESP_GATTS_WRITE_EVT - A request to write the value of a descriptor has arrived.",
                "155": "\t\t// write:",
                "156": "\t\t// - uint16_t conn_id",
                "157": "\t\t// - uint16_t trans_id",
                "158": "\t\t// - esp_bd_addr_t bda",
                "159": "\t\t// - uint16_t handle",
                "160": "\t\t// - uint16_t offset",
                "161": "\t\t// - bool need_rsp",
                "162": "\t\t// - bool is_prep",
                "163": "\t\t// - uint16_t len",
                "164": "\t\t// - uint8_t *value",
                "167": "\t\t\t\tsetValue(param->write.value, param->write.len);   // Set the value of the descriptor.",
                "169": "\t\t\t\tif (m_pCallback != nullptr) {   // We have completed the write, if there is a user supplied callback handler, invoke it now.",
                "170": "\t\t\t\t\tm_pCallback->onWrite(this);   // Invoke the onWrite callback handler.",
                "172": "\t\t\t}  // End of ... this is our handle.",
                "175": "\t\t} // ESP_GATTS_WRITE_EVT",
                "177": "\t\t// ESP_GATTS_READ_EVT - A request to read the value of a descriptor has arrived.",
                "179": "\t\t// read:",
                "180": "\t\t// - uint16_t conn_id",
                "181": "\t\t// - uint32_t trans_id",
                "182": "\t\t// - esp_bd_addr_t bda",
                "183": "\t\t// - uint16_t handle",
                "184": "\t\t// - uint16_t offset",
                "185": "\t\t// - bool is_long",
                "186": "\t\t// - bool need_rsp",
                "189": "\t\t\tif (param->read.handle == m_handle) {  // If this event is for this descriptor ... process it",
                "191": "\t\t\t\tif (m_pCallback != nullptr) {   // If we have a user supplied callback, invoke it now.",
                "192": "\t\t\t\t\tm_pCallback->onRead(this);    // Invoke the onRead callback method in the callback handler.",
                "195": "\t\t\t} // End of this is our handle",
                "197": "\t\t} // ESP_GATTS_READ_EVT",
                "201": "\t} // switch event"
            }
        }
    ],
    "BLEDescriptor.h": [],
    "BLEDescriptorMap.cpp": [],
    "BLEEddystoneURL.cpp": [
        {
            "commit": "822f252b353cfd808c77c9bc8369bc0cb4e0b5be",
            "timestamp": "2023-10-06T15:50:11+03:00",
            "author": "Me No Dev",
            "commit_message": "BLE upgrades (#8724)\n\n* Renamed library description\r\n\r\n* Updated Eddystone URL (not complete)\r\n\r\n* Updated Eddystone URL\r\n\r\n* Updated Eddystone classes and beacon scanner\r\n\r\n* Renamed examples - removing prefix BLE_\r\n\r\n* Renamed Beacon_Scanner\r\n\r\n* Updated TLM\r\n\r\n* Changed std::string to Arduino String\r\n\r\n* More std::string -> String\r\n\r\n* Changed String in forgotten file\r\n\r\n* Changed .data to .c_str\r\n\r\n* Reverting single String type change\r\n\r\n* Few more fixes related to the String transition\r\n\r\n* Fixed URL and Utils error\r\n\r\n* Added and modified compatibility safeguards for BLE5 examples\r\n\r\n* Added #include WString.h\r\n\r\n* Fixed Beacon_Scanner\r\n\r\n* Remove commented include\r\n\r\nCo-authored-by: Lucas Saavedra Vaz <lucassvaz@yahoo.com.br>\r\n\r\n---------\r\n\r\nCo-authored-by: Tomas Pilny <tomas.pilny@espressif.com>\r\nCo-authored-by: Lucas Saavedra Vaz <lucassvaz@yahoo.com.br>",
            "additions": 238,
            "deletions": 100,
            "change_type": "MODIFY",
            "diff": "@@ -3,6 +3,8 @@\n  *\n  *  Created on: Mar 12, 2018\n  *      Author: pcbreflux\n+ *  Upgraded on: Feb 20, 2023\n+ *      By: Tomas Pilny\n  */\n #include \"soc/soc_caps.h\"\n #if SOC_BLE_SUPPORTED\n@@ -13,140 +15,276 @@\n #include \"esp32-hal-log.h\"\n #include \"BLEEddystoneURL.h\"\n \n-static const char LOG_TAG[] = \"BLEEddystoneURL\";\n+String EDDYSTONE_URL_PREFIX[] = {\n+  \"http://www.\",  // 0x00\n+  \"https://www.\", // 0x01\n+  \"http://\",      // 0x02\n+  \"https://\",     // 0x03\n+  \"\"              // Any other code number results in empty string\n+};\n+\n+String EDDYSTONE_URL_SUFFIX[] = {\n+  \".com/\",  // 0x00\n+  \".org/\",  // 0x01\n+  \".edu/\",  // 0x02\n+  \".net/\",  // 0x03\n+  \".info/\", // 0x04\n+  \".biz/\",  // 0x05\n+  \".gov/\",  // 0x06\n+  \".com\",   // 0x07\n+  \".org\",   // 0x08\n+  \".edu\",   // 0x09\n+  \".net\",   // 0x0A\n+  \".info\",  // 0x0B\n+  \".biz\",   // 0x0C\n+  \".gov\",   // 0x0D\n+  \"\"        // Any other code number results in empty string\n+};\n \n BLEEddystoneURL::BLEEddystoneURL() {\n-\tbeaconUUID = 0xFEAA;\n-\tlengthURL = 0;\n-\tm_eddystoneData.frameType = EDDYSTONE_URL_FRAME_TYPE;\n-\tm_eddystoneData.advertisedTxPower = 0;\n-\tmemset(m_eddystoneData.url, 0, sizeof(m_eddystoneData.url));\n+  lengthURL = 0;\n+  m_eddystoneData.advertisedTxPower = 0;\n+  memset(m_eddystoneData.url, 0, sizeof(m_eddystoneData.url));\n+  _initHeadder();\n } // BLEEddystoneURL\n \n-std::string BLEEddystoneURL::getData() {\n-\treturn std::string((char*) &m_eddystoneData, sizeof(m_eddystoneData));\n+BLEEddystoneURL::BLEEddystoneURL(BLEAdvertisedDevice *advertisedDevice){\n+  const char *payload = (char*)advertisedDevice->getPayload();\n+  memset(m_eddystoneData.url, 0, sizeof(m_eddystoneData.url));\n+  lengthURL = 0;\n+  m_eddystoneData.advertisedTxPower = 0;\n+  for(int i = 0; i < advertisedDevice->getPayloadLength(); ++i){\n+    if(payload[i] == 0x16 && advertisedDevice->getPayloadLength() >= i+2+sizeof(m_eddystoneData) && payload[i+1] == 0xAA && payload[i+2] == 0xFE && payload[i+3] == 0x10){\n+      lengthURL = payload[i-1] - 5; // Subtracting 5 Bytes containing header and other data which are not actual URL data\n+      m_eddystoneData.advertisedTxPower = payload[i+1];\n+      if(lengthURL <= 18){\n+        setData(String(payload+i+4, lengthURL+1));\n+      }else{\n+        log_e(\"Too long URL %d\", lengthURL);\n+      }\n+    }\n+  }\n+  _initHeadder();\n+}\n+\n+String BLEEddystoneURL::getData() {\n+  return String((char*) &m_eddystoneData, sizeof(m_eddystoneData));\n } // getData\n \n+String BLEEddystoneURL::getFrame() {\n+  BLEHeadder[7] = lengthURL + 5; // Fill in real: Type + 2B UUID + Frame Type + Tx power + URL (note: the Byte holding the length does not count itself)\n+  String frame(BLEHeadder, sizeof(BLEHeadder));\n+  frame += String((char*) &m_eddystoneData, lengthURL+1); // + 1 for TX power\n+\n+  return frame;\n+} // getFrame\n+\n BLEUUID BLEEddystoneURL::getUUID() {\n-\treturn BLEUUID(beaconUUID);\n+  uint16_t uuid = (((uint16_t)BLEHeadder[10]) << 8) | BLEHeadder[9];\n+  return BLEUUID(uuid);\n } // getUUID\n \n int8_t BLEEddystoneURL::getPower() {\n-\treturn m_eddystoneData.advertisedTxPower;\n+  return m_eddystoneData.advertisedTxPower;\n } // getPower\n \n-std::string BLEEddystoneURL::getURL() {\n-\treturn std::string((char*) &m_eddystoneData.url, sizeof(m_eddystoneData.url));\n+String BLEEddystoneURL::getURL() {\n+  return String((char*) &m_eddystoneData.url, lengthURL);\n } // getURL\n \n-std::string BLEEddystoneURL::getDecodedURL() {\n-\tstd::string decodedURL = \"\";\n-\n-\tswitch (m_eddystoneData.url[0]) {\n-\t\tcase 0x00:\n-\t\t\tdecodedURL += \"http://www.\";\n-\t\t\tbreak;\n-\t\tcase 0x01:\n-\t\t\tdecodedURL += \"https://www.\";\n-\t\t\tbreak;\n-\t\tcase 0x02:\n-\t\t\tdecodedURL += \"http://\";\n-\t\t\tbreak;\n-\t\tcase 0x03:\n-\t\t\tdecodedURL += \"https://\";\n-\t\t\tbreak;\n-\t\tdefault:\n-\t\t\tdecodedURL += m_eddystoneData.url[0];\n-\t}\n-\n-\tfor (int i = 1; i < lengthURL; i++) {\n-\t\tif (m_eddystoneData.url[i] > 33 && m_eddystoneData.url[i] < 127) {\n-\t\t\tdecodedURL += m_eddystoneData.url[i];\n-\t\t} else {\n-\t\t\tswitch (m_eddystoneData.url[i]) {\n-\t\t\t\tcase 0x00:\n-\t\t\t\t\tdecodedURL += \".com/\";\n-\t\t\t\t\tbreak;\n-\t\t\t\tcase 0x01:\n-\t\t\t\t\tdecodedURL += \".org/\";\n-\t\t\t\t\tbreak;\n-\t\t\t\tcase 0x02:\n-\t\t\t\t\tdecodedURL += \".edu/\";\n-\t\t\t\t\tbreak;\n-\t\t\t\tcase 0x03:\n-\t\t\t\t\tdecodedURL += \".net/\";\n-\t\t\t\t\tbreak;\n-\t\t\t\tcase 0x04:\n-\t\t\t\t\tdecodedURL += \".info/\";\n-\t\t\t\t\tbreak;\n-\t\t\t\tcase 0x05:\n-\t\t\t\t\tdecodedURL += \".biz/\";\n-\t\t\t\t\tbreak;\n-\t\t\t\tcase 0x06:\n-\t\t\t\t\tdecodedURL += \".gov/\";\n-\t\t\t\t\tbreak;\n-\t\t\t\tcase 0x07:\n-\t\t\t\t\tdecodedURL += \".com\";\n-\t\t\t\t\tbreak;\n-\t\t\t\tcase 0x08:\n-\t\t\t\t\tdecodedURL += \".org\";\n-\t\t\t\t\tbreak;\n-\t\t\t\tcase 0x09:\n-\t\t\t\t\tdecodedURL += \".edu\";\n-\t\t\t\t\tbreak;\n-\t\t\t\tcase 0x0A:\n-\t\t\t\t\tdecodedURL += \".net\";\n-\t\t\t\t\tbreak;\n-\t\t\t\tcase 0x0B:\n-\t\t\t\t\tdecodedURL += \".info\";\n-\t\t\t\t\tbreak;\n-\t\t\t\tcase 0x0C:\n-\t\t\t\t\tdecodedURL += \".biz\";\n-\t\t\t\t\tbreak;\n-\t\t\t\tcase 0x0D:\n-\t\t\t\t\tdecodedURL += \".gov\";\n-\t\t\t\t\tbreak;\n-\t\t\t\tdefault:\n-\t\t\t\t\tbreak;\n-\t\t\t}\n-\t\t}\n-\t}\n-\treturn decodedURL;\n-} // getDecodedURL\n+String BLEEddystoneURL::getPrefix(){\n+  if(m_eddystoneData.url[0] <= 0x03){\n+    return EDDYSTONE_URL_PREFIX[m_eddystoneData.url[0]];\n+  }else{\n+    return \"\";\n+  }\n+}\n \n+String BLEEddystoneURL::getSuffix(){\n+  if(m_eddystoneData.url[lengthURL-1] <= 0x0D){\n+    return EDDYSTONE_URL_SUFFIX[m_eddystoneData.url[lengthURL-1]];\n+  }else{\n+    return \"\";\n+  }\n+}\n \n+String BLEEddystoneURL::getDecodedURL() {\n+  std::string decodedURL = \"\";\n+  decodedURL += getPrefix().c_str();\n+  if(decodedURL.length() == 0){ // No prefix extracted - interpret byte [0] as character\n+    decodedURL += (char)m_eddystoneData.url[0];\n+  }\n+  for(int i = 1; i < lengthURL; i++) {\n+    if (m_eddystoneData.url[i] >= 33 && m_eddystoneData.url[i] < 127) {\n+      decodedURL += (char)m_eddystoneData.url[i];\n+    }else{\n+      if(i != lengthURL-1 || m_eddystoneData.url[i] > 0x0D){ // Ignore last Byte and values used for suffix\n+        log_e(\"Unexpected unprintable char in URL 0x%02X: m_eddystoneData.url[%d]\", m_eddystoneData.url[i], i);\n+      }\n+    }\n+  }\n+  decodedURL += getSuffix().c_str();\n+  return String(decodedURL.c_str());\n+} // getDecodedURL\n \n /**\n  * Set the raw data for the beacon record.\n+ * Example:\n+ * uint8_t *payload = advertisedDevice.getPayload();\n+ * eddystoneTLM.setData(String((char*)payload+11, advertisedDevice.getPayloadLength() - 11));\n+ * Note: the offset 11 works for current implementation of example BLE_EddystoneTLM Beacon.ino, however\n+ *   the position is not static and it is programmers responsibility to align the data.\n+ * Data frame:\n+ * | Field  || Len | Type | UUID        | EddyStone URL |\n+ * | Offset || 0   | 1    | 2           | 4             |\n+ * | Len    || 1 B | 1 B  | 2 B         | up to 20 B    |\n+ * | Data   || ??  | ??   | 0xAA | 0xFE | ???           |\n+ *\n+ * EddyStone TLM frame:\n+ * | Field  || Type  | TX Power | URL prefix | URL    |\n+ * | Offset || 0     | 1        | 2          | 3      |\n+ * | Len    || 1 B   | 1 B      | 1 B        | 0-17 B |\n+ * | Data   || 0x10  | ??       | ??         | ??     |\n  */\n-void BLEEddystoneURL::setData(std::string data) {\n-\tif (data.length() > sizeof(m_eddystoneData)) {\n-\t\tlog_e(\"Unable to set the data ... length passed in was %d and max expected %d\", data.length(), sizeof(m_eddystoneData));\n-\t\treturn;\n-\t}\n-\tmemset(&m_eddystoneData, 0, sizeof(m_eddystoneData));\n-\tmemcpy(&m_eddystoneData, data.data(), data.length());\n-\tlengthURL = data.length() - (sizeof(m_eddystoneData) - sizeof(m_eddystoneData.url));\n+void BLEEddystoneURL::setData(String data) {\n+  if (data.length() > sizeof(m_eddystoneData)) {\n+    log_e(\"Unable to set the data ... length passed in was %d and max expected %d\", data.length(), sizeof(m_eddystoneData));\n+    return;\n+  }\n+  memset(&m_eddystoneData, 0, sizeof(m_eddystoneData));\n+  memcpy(&m_eddystoneData, data.c_str(), data.length());\n+  lengthURL = data.length() - (sizeof(m_eddystoneData) - sizeof(m_eddystoneData.url));\n } // setData\n \n void BLEEddystoneURL::setUUID(BLEUUID l_uuid) {\n-\tbeaconUUID = l_uuid.getNative()->uuid.uuid16;\n+  uint16_t beaconUUID = l_uuid.getNative()->uuid.uuid16;\n+  BLEHeadder[10] = beaconUUID >> 8;\n+  BLEHeadder[9] = beaconUUID & 0x00FF;\n } // setUUID\n \n+\n+void BLEEddystoneURL::setPower(esp_power_level_t advertisedTxPower) {\n+  int tx_power;\n+  switch(advertisedTxPower){\n+    case ESP_PWR_LVL_N12: // 12dbm\n+      tx_power = -12;\n+      break;\n+    case ESP_PWR_LVL_N9: // -9dbm\n+      tx_power =   -9;\n+      break;\n+    case ESP_PWR_LVL_N6: // -6dbm\n+      tx_power =   -6;\n+      break;\n+    case ESP_PWR_LVL_N3: // -3dbm\n+      tx_power =   -3;\n+      break;\n+    case ESP_PWR_LVL_N0: //  0dbm\n+      tx_power =    0;\n+      break;\n+    case ESP_PWR_LVL_P3: // +3dbm\n+      tx_power =   +3;\n+      break;\n+    case ESP_PWR_LVL_P6: // +6dbm\n+      tx_power =   +6;\n+      break;\n+    case ESP_PWR_LVL_P9: // +9dbm\n+      tx_power =   +9;\n+      break;\n+    default:  tx_power = 0;\n+  }\n+  m_eddystoneData.advertisedTxPower = int8_t((tx_power - -100) / 2);\n+} // setPower\n+\n+\n void BLEEddystoneURL::setPower(int8_t advertisedTxPower) {\n-\tm_eddystoneData.advertisedTxPower = advertisedTxPower;\n+  m_eddystoneData.advertisedTxPower = advertisedTxPower;\n } // setPower\n \n-void BLEEddystoneURL::setURL(std::string url) {\n+// Set URL bytes including prefix and optional suffix\n+// | Field   | Prefix  | URL + optional Suffix |\n+// | Offset  | 0       | 1                     |\n+// | Length  | 1 B     | 0 - 17 B              |\n+// | Example | 0x02    | 0x676F6F676C65 0x07   |\n+// | Decoded | http:// |   g o o g l e  .com   |\n+void BLEEddystoneURL::setURL(String url) {\n   if (url.length() > sizeof(m_eddystoneData.url)) {\n-\tlog_e(\"Unable to set the url ... length passed in was %d and max expected %d\", url.length(), sizeof(m_eddystoneData.url));\n-\treturn;\n+  log_e(\"Unable to set the url ... length passed in was %d and max expected %d\", url.length(), sizeof(m_eddystoneData.url));\n+  return;\n   }\n   memset(m_eddystoneData.url, 0, sizeof(m_eddystoneData.url));\n-  memcpy(m_eddystoneData.url, url.data(), url.length());\n+  memcpy(m_eddystoneData.url, url.c_str(), url.length());\n   lengthURL = url.length();\n } // setURL\n \n+int BLEEddystoneURL::setSmartURL(String url) {\n+  if(url.length() == 0){\n+    log_e(\"URL String has 0 length\");\n+    return 0; // ERROR\n+  }\n+  for(auto character : url){\n+    if(!isPrintable(character)){\n+      log_e(\"URL contains unprintable character(s)\");\n+      return 0; // ERROR\n+    }\n+  }\n+  bool hasPrefix = false;\n+  bool hasSuffix = false;\n+  m_eddystoneData.url[0] = 0x00; // Init with default prefix \"http://www.\"\n+  uint8_t suffix = 0x0E; // Init with empty string\n+  log_d(\"Encode url \\\"%s\\\" with length %d\", url.c_str(), url.length());\n+  for(uint8_t i = 0; i < 4; ++i){\n+    if(url.substring(0, EDDYSTONE_URL_PREFIX[i].length()) == EDDYSTONE_URL_PREFIX[i]){\n+      m_eddystoneData.url[0] = i;\n+      hasPrefix = true;\n+      break;\n+    }\n+  }\n+\n+  if(hasPrefix == false){\n+    log_w(\"Prefix not found - using default prefix \\\"http://www.\\\" = 0x00\\n\\tNote: URL must contain one of the prefixes: \\\"http://www.\\\", \\\"https://www.\\\", \\\"http://\\\", \\\"https://\\\"\");\n+  }\n+\n+  for(uint8_t i = 0; i < 0x0E; ++i){\n+    std::string std_url(url.c_str());\n+    std::string std_suffix(EDDYSTONE_URL_SUFFIX[i].c_str());\n+    size_t found_pos = std_url.find(std_suffix);\n+    if(found_pos != std::string::npos){\n+      hasSuffix = true;\n+      suffix = i;\n+      break;\n+    }\n+  }\n+\n+  size_t baseUrlLen = url.length() - (hasPrefix ? EDDYSTONE_URL_PREFIX[m_eddystoneData.url[0]].length() : 0) - EDDYSTONE_URL_SUFFIX[suffix].length();\n+  lengthURL = baseUrlLen + 1 + (hasSuffix ? 1 : 0);\n+  if(lengthURL > 18){\n+    log_e(\"Encoded URL is too long %d B - max 18 B\", lengthURL);\n+    return 0; // ERROR\n+  }\n+  String baseUrl = url.substring((hasPrefix ? EDDYSTONE_URL_PREFIX[m_eddystoneData.url[0]].length() : 0), baseUrlLen+(hasPrefix ? EDDYSTONE_URL_PREFIX[m_eddystoneData.url[0]].length() : 0));\n+  memcpy((void*)(m_eddystoneData.url+1), (void*)baseUrl.c_str(), baseUrl.length()); // substr for Arduino String\n+\n+  if(hasSuffix){\n+    m_eddystoneData.url[1+baseUrlLen] = suffix;\n+  }\n+\n+  return 1; // OK\n+} // setSmartURL\n+\n+void BLEEddystoneURL::_initHeadder(){\n+  BLEHeadder[0]  = 0x02; // Len\n+  BLEHeadder[1]  = 0x01; // Type Flags\n+  BLEHeadder[2]  = 0x06; // GENERAL_DISC_MODE 0x02 | BR_EDR_NOT_SUPPORTED 0x04\n+  BLEHeadder[3]  = 0x03; // Len\n+  BLEHeadder[4]  = 0x03; // Type 16-Bit UUID\n+  BLEHeadder[5]  = 0xAA; // Eddystone UUID 2 -> 0xFEAA LSB\n+  BLEHeadder[6]  = 0xFE; // Eddystone UUID 1 MSB\n+  BLEHeadder[7]  = 0x00; // Length of Beacon Data shall be calculated later\n+  BLEHeadder[8]  = 0x16; // Type Service Data\n+  BLEHeadder[9]  = 0xAA; // Eddystone UUID 2 -> 0xFEAA LSB\n+  BLEHeadder[10] = 0xFE; // Eddystone UUID 1 MSB\n+  BLEHeadder[11] = 0x10; // Eddystone Frame Type - URL\n+}\n \n #endif\n #endif /* SOC_BLE_SUPPORTED */\n",
            "comment_added_diff": {
                "19": "  \"http://www.\",  // 0x00",
                "20": "  \"https://www.\", // 0x01",
                "21": "  \"http://\",      // 0x02",
                "22": "  \"https://\",     // 0x03",
                "23": "  \"\"              // Any other code number results in empty string",
                "27": "  \".com/\",  // 0x00",
                "28": "  \".org/\",  // 0x01",
                "29": "  \".edu/\",  // 0x02",
                "30": "  \".net/\",  // 0x03",
                "31": "  \".info/\", // 0x04",
                "32": "  \".biz/\",  // 0x05",
                "33": "  \".gov/\",  // 0x06",
                "34": "  \".com\",   // 0x07",
                "35": "  \".org\",   // 0x08",
                "36": "  \".edu\",   // 0x09",
                "37": "  \".net\",   // 0x0A",
                "38": "  \".info\",  // 0x0B",
                "39": "  \".biz\",   // 0x0C",
                "40": "  \".gov\",   // 0x0D",
                "41": "  \"\"        // Any other code number results in empty string",
                "58": "      lengthURL = payload[i-1] - 5; // Subtracting 5 Bytes containing header and other data which are not actual URL data",
                "75": "  BLEHeadder[7] = lengthURL + 5; // Fill in real: Type + 2B UUID + Frame Type + Tx power + URL (note: the Byte holding the length does not count itself)",
                "77": "  frame += String((char*) &m_eddystoneData, lengthURL+1); // + 1 for TX power",
                "80": "} // getFrame",
                "114": "  if(decodedURL.length() == 0){ // No prefix extracted - interpret byte [0] as character",
                "121": "      if(i != lengthURL-1 || m_eddystoneData.url[i] > 0x0D){ // Ignore last Byte and values used for suffix",
                "128": "} // getDecodedURL",
                "169": "    case ESP_PWR_LVL_N12: // 12dbm",
                "172": "    case ESP_PWR_LVL_N9: // -9dbm",
                "175": "    case ESP_PWR_LVL_N6: // -6dbm",
                "178": "    case ESP_PWR_LVL_N3: // -3dbm",
                "181": "    case ESP_PWR_LVL_N0: //  0dbm",
                "184": "    case ESP_PWR_LVL_P3: // +3dbm",
                "187": "    case ESP_PWR_LVL_P6: // +6dbm",
                "190": "    case ESP_PWR_LVL_P9: // +9dbm",
                "196": "} // setPower",
                "203": "// Set URL bytes including prefix and optional suffix",
                "204": "// | Field   | Prefix  | URL + optional Suffix |",
                "205": "// | Offset  | 0       | 1                     |",
                "206": "// | Length  | 1 B     | 0 - 17 B              |",
                "207": "// | Example | 0x02    | 0x676F6F676C65 0x07   |",
                "208": "// | Decoded | http:// |   g o o g l e  .com   |",
                "222": "    return 0; // ERROR",
                "227": "      return 0; // ERROR",
                "232": "  m_eddystoneData.url[0] = 0x00; // Init with default prefix \"http://www.\"",
                "233": "  uint8_t suffix = 0x0E; // Init with empty string",
                "262": "    return 0; // ERROR",
                "265": "  memcpy((void*)(m_eddystoneData.url+1), (void*)baseUrl.c_str(), baseUrl.length()); // substr for Arduino String",
                "271": "  return 1; // OK",
                "272": "} // setSmartURL",
                "275": "  BLEHeadder[0]  = 0x02; // Len",
                "276": "  BLEHeadder[1]  = 0x01; // Type Flags",
                "277": "  BLEHeadder[2]  = 0x06; // GENERAL_DISC_MODE 0x02 | BR_EDR_NOT_SUPPORTED 0x04",
                "278": "  BLEHeadder[3]  = 0x03; // Len",
                "279": "  BLEHeadder[4]  = 0x03; // Type 16-Bit UUID",
                "280": "  BLEHeadder[5]  = 0xAA; // Eddystone UUID 2 -> 0xFEAA LSB",
                "281": "  BLEHeadder[6]  = 0xFE; // Eddystone UUID 1 MSB",
                "282": "  BLEHeadder[7]  = 0x00; // Length of Beacon Data shall be calculated later",
                "283": "  BLEHeadder[8]  = 0x16; // Type Service Data",
                "284": "  BLEHeadder[9]  = 0xAA; // Eddystone UUID 2 -> 0xFEAA LSB",
                "285": "  BLEHeadder[10] = 0xFE; // Eddystone UUID 1 MSB",
                "286": "  BLEHeadder[11] = 0x10; // Eddystone Frame Type - URL"
            },
            "comment_deleted_diff": {
                "115": "} // getDecodedURL"
            },
            "comment_modified_diff": {}
        }
    ],
    "BLEExceptions.h": [],
    "BLEHIDDevice.cpp": [
        {
            "commit": "6f7a1ca76ada4d705d79ce863450c91349327a79",
            "timestamp": "2023-10-05T14:54:25+03:00",
            "author": "Me No Dev",
            "commit_message": "ESP-IDF v5.1 (#7733)\n\n* Initial changes to compile under ESP-IDF v5.1\r\n\r\n* Initial import for ESP-IDF v5.1 libs\r\n\r\n* Update toolchain\r\n\r\n* Update esp32-hal-psram.c\r\n\r\n* Add missing LDs\r\n\r\n* Update platform.txt\r\n\r\n* Stop some CI jobs, because they will always fail\r\n\r\n* Fix examples\r\n\r\n* Update app_httpd.cpp\r\n\r\n* Update ResetReason.ino\r\n\r\n* Warnings fixes\r\n\r\n* Added the example guideline and template (#7665)\r\n\r\n* Added the example guideline and template\r\n\r\n* PR review changes with some typos and grammar fixes\r\n\r\n* Changes according to the PR review\r\n\r\n* Added ESP32-S3 link to the datasheet (#7738)\r\n\r\n* Update HiFreq_ADC.ino\r\n\r\n* Replace periph_ctrl.h use because of deprecation\r\n\r\n* Replace esp_spi_flash.h use because of deprecation\r\n\r\n* Add includes to male mDNS::enableWorkstation compile\r\n\r\n* Fix ssl_client mbedtls_pk_parse_key callback\r\n\r\n* Update temperature sensor driver\r\n\r\n* Allow sketch_utils to compile with arduino-cli\r\n\r\n* Run CI with arduino-cli\r\n\r\n* Fix arduino-cli CI build on Windows\r\n\r\n* Refactor platform.txt to not use components installed through the board manager when running from git\r\n\r\n* Initial Peripheral Manager Implementation\r\n\r\n* Update SigmaDelta driver to use the new ESP-IDF driver API\r\n\r\n* Small improvements to peripheral manager and SigmaDelta\r\n\r\n* Remove deleted function from SigmaDelta header\r\n\r\n* Update DAC driver to use the new ESP-IDF driver API\r\n\r\n* Adds softAp(String) to make it compatible with ESP8266 (#7801)\r\n\r\n* Fix commentary (#7800)\r\n\r\nMinor fix based on observation done in https://github.com/espressif/arduino-esp32/issues/7795#issuecomment-1416868611\r\n\r\n* add adafruit new board feather esp32s2 reserve tft (#7794)\r\n\r\n* bugfix: add <stdint.h> for uint8_t to avoid compilation failure (GCC 11.2.0) (#7744)\r\n\r\n* Adding 3rd party boards for VALTRACK-V4-VTS-ESP32-C3 & VALTRACK-V4-MFW-ESP32-C3 (#7735)\r\n\r\n* Added VALTRACK-V4-VTS-ESP32-C3 board definition\r\n\r\nCreated pins_arduino.h & made changes to boards.txt with necessary changes\r\n\r\n* Modified the URL\r\n\r\n* Renamed json\r\n\r\n* renamed all auRL\r\n\r\n* Adding VALTRACK-V4 series board definitions\r\n\r\nAdded VALTRACK-V4-VTS-ESP32C3 & VALTRACK-V4-MFW-ESP32-C3 board variants\r\n\r\n* Adding VALTRACK-V4 series board definitions\r\n\r\nAdded VALTRACK-V4-VTS-ESP32C3 & VALTRACK-V4-MFW-ESP32-C3 board variants\r\n\r\n* Reverted package_esp32_index.template.json\r\n\r\nrestored package_esp32_index.template.json from edits\r\n\r\n* Reverted package_esp32_index.template.json\r\n\r\nAdded new line to package_esp32_index.template.json\r\n\r\n* Update Platformio CI (#7725)\r\n\r\n* WiFiClient example fix (#7711)\r\n\r\n* Modified WiFiClient example to use thingspeak instead of non-functionig sparkfun\r\n\r\n* Moved instructions to README\r\n\r\n* Fixed spelling\r\n\r\n* Added link to S3 datasheet\r\n\r\n---------\r\n\r\nCo-authored-by: Jan Proch\u00e1zka <90197375+P-R-O-C-H-Y@users.noreply.github.com>\r\n\r\n* Mirror update from Heltec repository (#7709)\r\n\r\nHeltec updated the I2C pins in https://github.com/Heltec-Aaron-Lee/WiFi_Kit_series/commit/b10f4bf85d13fd01be80dcdb0eb59e6a8c8ba19a\r\n\r\n* Fixes BLE data printing (#7699)\r\n\r\n* Fixes BLE data printing\r\n\r\nBLE data has no '\\0' terminator, therefore it can't be printed as a regular C string.\r\nThis fix just prints the BLE data based on its length.\r\n\r\n* Simplify printing to a single call\r\n\r\n* split menu options + lora_32_V3 fix (#7697)\r\n\r\n* Change header gaurd name (#7696)\r\n\r\n* Fix Name (#7691)\r\n\r\nWrong name in definitions.\r\n\r\n* Fix error in WiFiClient.cpp where the connect function fails for timeouts below 1 second (#7686)\r\n\r\n* Update WiFiClient.cpp\r\n\r\nThis change will allow specifying connect timeouts below 1 second. Without this change, if connect timeouts under 1 second are given, the connect defaults to 0ms and fails. \r\nThis will also allow timeouts in fractions of seconds, e.g. 1500ms. Without this change, connect timeouts are truncated to full second increments.\r\n\r\n* Make parameter timeout_ms clear\r\n\r\n* Change connection timeout_ms name for clarity\r\n\r\n---------\r\n\r\nCo-authored-by: Rodrigo Garcia <rodrigo.garcia@espressif.com>\r\n\r\n* fixed the function header (#7674)\r\n\r\n* fixed the function header\r\n\r\n* fixed function name and paramaters\r\n\r\n---------\r\n\r\nCo-authored-by: Jan Procha\u0301zka <90197375+P-R-O-C-H-Y@users.noreply.github.com>\r\n\r\n* Ticker fix solving #6155 (#7664)\r\n\r\n* Wrapped Ticker functions with #pragma disabling -Wcast-function-type\r\n\r\n* Revert \"Wrapped Ticker functions with #pragma disabling -Wcast-function-type\"\r\n\r\nThis reverts commit 160be7e67a10d01b6e44c4bf2521c0ccd6348976.\r\n\r\n* Fixed Ticker example\r\n\r\n* Modified Ticker example\r\n\r\n* Fixed LED_BUILTIN err for ESP32\r\n\r\n---------\r\n\r\nCo-authored-by: Jan Proch\u00e1zka <90197375+P-R-O-C-H-Y@users.noreply.github.com>\r\n\r\n* setPins fix ESP32 \"specified pins are not supported by this chip.\" (#7646)\r\n\r\n[ESP32: SDMMCFS::begin hardcodes the usage of slot 1, only check if the pins match slot 1 pins.]\r\n\r\nsetPins() was testing pins D1, D2 and D3 all against D1 ... fine in 1 pin mode when all are -1 not so much if you're trying to get 4 pin mode working.\r\nI now see this function doesn't really do anything on the ESP32...accept now correctly checks that you are trying to use the slot 1 pins.\r\n\r\nCo-authored-by: Jan Proch\u00e1zka <90197375+P-R-O-C-H-Y@users.noreply.github.com>\r\n\r\n* Allow passing IP as connect method parameter in WiFiClientSecure and skip unnecessary host-ip conversions (#7643)\r\n\r\n* Add LED_BUILTIN* definitions and initialization for LEDs to stop them floating. (#7636)\r\n\r\nCo-authored-by: Rodrigo Garcia <rodrigo.garcia@espressif.com>\r\n\r\n* Expand path to tinuf2 image when checking existence in platformio-build.py (#7631)\r\n\r\n* Expand path to tinuf2 image when checking existence\r\n\r\n* More isFiles fixed\r\n\r\n* Remove (useless) trailing semicolon from Print.cpp (#7622)\r\n\r\n* ADD: New variant Edgebox-ESP-100 (#7771)\r\n\r\n* ADD: New variant Edgebox-ESP-100\r\n\r\n* FIX: Edgebox-ESP-100 Board.txt usb mode option change back to default value as ESP32S3\r\n\r\n* Add Crabik Slot ESP32-S3 board (#7790)\r\n\r\n* Added Crabik Slot ESP32-S3\r\n\r\n* Adding CPU frequency settings and removing excess from partition scheme settings\r\n\r\n* new variant LilyGO T-Display-S3 (#7763)\r\n\r\n* new variant LilyGO T-Display-S3\r\n\r\nhttps://github.com/Xinyuan-LilyGO/T-Display-S3\r\n\r\n* Add boards.txt definition\r\n\r\n---------\r\n\r\nCo-authored-by: Me No Dev <me-no-dev@users.noreply.github.com>\r\n\r\n* Update get.py to support Apple ARM64\r\n\r\n* Update package_esp32_index.template.json\r\n\r\n* WString Return bool (#7774)\r\n\r\n* Add Roboheart Hercules development board to the esp32-core (#7672)\r\n\r\n* added Roboheart Hercules pin definitions and board.txt entries\r\n\r\n* added package_roboheat.json for prototyping\r\n\r\n* Roboheart Hercules pins\r\n\r\n* Updated the pins\r\n\r\n* Delete package_roboheart.json\r\n\r\n* Requested changes\r\n\r\n---------\r\n\r\nCo-authored-by: renebohne <rene.bohne@gmail.com>\r\n\r\n* Reword \"ESP-IDF as Component\" (#7812)\r\n\r\nI think \"Arduino as an ESP-IDF component\" or just \"As ESP-IDF component\" instead of  \"ESP-IDF as Component\" is more correct way to name the link.\r\n\r\n1. \"ESP-IDF as Component\" would imply that ESP-IDF is some sort of library for Arduino, which is (IMO) misleading, because it's true the other way around.\r\n2. It's written as \"Arduino as an ESP-IDF component\" on the webpage it points to as well.\r\n\r\n- Also I removed the capitalization from \"Component\" as I have not found a reason why is it capitalized.\r\n\r\n* add new board Adafruit Feather ESP32-S3 Reverse TFT (#7811)\r\n\r\n* Multi threading examples (tasks, queues, semaphores, mutexes) (#7660)\r\n\r\n* Moved and renamed example ESP32/FreeRTOS to MultiThreading/BasicMultiThreading\r\n\r\n* Added dummy files\r\n\r\n* Modified original example\r\n\r\n* Fixed BasicMultiThreading.ino\r\n\r\n* Added Example demonstrating use of queues\r\n\r\n* Extended info in BasicMultiThreading\r\n\r\n* Renamed Queues to singular Queue\r\n\r\n* Added Mutex example\r\n\r\n* Added Semaphore example\r\n\r\n* Moved info from example to README\r\n\r\n* Moved doc from Mutex to README\r\n\r\n* Added Queue README\r\n\r\n* Removed unecesary text\r\n\r\n* Fixed grammar\r\n\r\n* Increased stack size for Sempahore example\r\n\r\n* Added headers into .ino files\r\n\r\n* Added word Example at the end of title in README\r\n\r\n* removed unused line\r\n\r\n* Added forgotten README\r\n\r\n* Modified BasicMultiThreading example\r\n\r\n* Added missing S3 entry in README\r\n\r\n* moved location\r\n\r\n* Update ESP-IDF libs\r\n\r\n* Update CMakeLists.txt\r\n\r\n* Update esptool to v4.4\r\n\r\n* Add function timerAttachInterruptFlag (#7809)\r\n\r\n* Update esptool to v4.5\r\n\r\n* ADC refactoring (#7827)\r\n\r\n* Adc refactored + periman implementation\r\n\r\nPeripheral manager still needs to be checked if the implementation is right.\r\n\r\n* switched to working solution for milivolts read\r\n\r\n* Periman detachbus fix\r\n\r\n* coding style\r\n\r\n* fix CI warnings\r\n\r\n* fix FreeRTOS example\r\n\r\n* Update ETH.cpp\r\n\r\n* Update FunctionalInterruptStruct.ino\r\n\r\n* Update package_esp32_index.template.json\r\n\r\n* Update package_esp32_index.template.json\r\n\r\n* Fixes for the latest IDF v5.1\r\n\r\n* update esp-idf libs and toolchain\r\n\r\n* Turn OFF auto crystal frequency for ESP32 (needed by TWAI)\r\n\r\n* Update examples\r\n\r\n* Switch build to mostly use flags from files\r\n\r\nIncludes can not be done this way\r\n\r\n* Reorganize flag files\r\n\r\n* Optimize chip build flags further\r\n\r\n* Revert defines from file. MBEDTLS_CONFIG_FILE does not properly expand\r\n\r\n* Add support for includes and defines from file\r\n\r\n* Replace old sdk path references in platform.txt\r\n\r\n* use gcc-ar (#8013)\r\n\r\n* Makes F_CPU generic for all SoC (#8007)\r\n\r\nBased on CONFIG_ESP_DEFAULT_CPU_FREQ_MHZ that is correctly defined in the sdkconfig file for each SoC.\r\n\r\n* TIMER refactoring (#7904)\r\n\r\n* refactor using GPtimer\r\n\r\n* Updated timer HW test\r\n\r\n* fix examples\r\n\r\n* Add v2.0.7 in issue template (#7871)\r\n\r\n* refactor using GPtimer\r\n\r\n* Updated timer HW test\r\n\r\n* fix examples\r\n\r\n* Revert \"Add v2.0.7 in issue template (#7871)\"\r\n\r\nThis reverts commit fcc3b17d62ff57861f8913ca1f142fd5163b7457.\r\n\r\n* Update upload-artifact to v3 in HW CI\r\n\r\n* Revert \"Update upload-artifact to v3 in HW CI\"\r\n\r\nThis reverts commit 1ba228071718ba37c4e26d98db22f77b2a7364a6.\r\n\r\n* replace resolution with frequency\r\n\r\n* remove count_down option\r\n\r\n* countup removed from examples + header\r\n\r\n* Refactored timer object\r\n\r\n* code cleanup + examples and tests fixes\r\n\r\n* TimerAlarm fix\r\n\r\n---------\r\n\r\nCo-authored-by: Vojt\u011bch Barto\u0161ka <76958047+VojtechBartoska@users.noreply.github.com>\r\n\r\n* [Docs] ADC and Timer API Update (+some docs fixes) (#7906)\r\n\r\n* updated docs\r\n\r\n* remove hall sensor docs\r\n\r\nRemoved Hall sensor documentation as its no longer supported in IDF-5\r\n\r\n* Fixed ESPNow examples location in docs\r\n\r\n* Last timer refactored API + gpio small fix\r\n\r\n* AlarmWrite fix\r\n\r\n* Fixes APLL/PLL with RTC Frequency (#8025)\r\n\r\nlog_d() was displaying APLL for any SoC, but S3 and C3 has not such option, causing compilation errors.\r\n\r\n* Update IDF libs and fix OPI PSRAM on S3\r\n\r\n* Add setMode function HardwareSerial.c to set the esp32 uart mode for use with RS485 auto RTS (#7935)\r\n\r\n* Added setMode function to set the esp32 uart mode\r\n\r\nUsed to set the esp32 uart mode for use with RS485 Half Duplex and the auto RTS pin mode. This will set/clear the RTS pin output to control the RE/DE pin on most RS485 chips.\r\n\r\n* Add Success (bool) return in some functions\r\n\r\n* Add Success (bool) return code to some functions\r\n\r\n* Add Success (bool) return to some functions\r\n\r\n* Add Success (bool) return to some functions\r\n\r\n* Fix uartSetRxTimeout return type\r\n\r\n---------\r\n\r\nCo-authored-by: Rodrigo Garcia <rodrigo.garcia@espressif.com>\r\n\r\n* Add support for esp-elf-gdb\r\n\r\n* WFG Crashfix (#8044)\r\n\r\n* Update component libs\r\n\r\n* IDF release/v5.1 (#8061)\r\n\r\n* IDF release/v5.1 bb9200acec\r\n\r\n* Update Esp.cpp\r\n\r\n* IDF release/v5.1 420ebd208a\r\n\r\n* Update esp32-hal-psram.c\r\n\r\n* Switch SDK to be an external package\r\n\r\n* fix path (#8096)\r\n\r\n* Makes UART work at any APB Frequency (#8097)\r\n\r\nFixes HardwareSerial to work with IDF 5.1 on any CPU/APB Frequency (240MHz to 10MHZ), including user created low power modes.\r\n\r\n* Add required callbacks for TinyUSB DFU\r\n\r\n* Update version to 3.0.0\r\n\r\n* Add ESP.getCoreVersion() and update ESP.getChipModel()\r\n\r\n* Update timer hal for the latest 5.1\r\n\r\n* Use separate RX and TX buffer sizes in HTTP client\r\n\r\noptimizes download by allowing up to 4K packets to be received\r\n\r\n* Rename clock tree enum name in latest 5.1\r\n\r\n* ESP32-H4 support was removed in ESP-IDF v5.1\r\n\r\n* IDF release/v5.1 2004bf4e11 (#8165)\r\n\r\n* Deinit previous bus first (#8180)\r\n\r\n* TIMER - add timer_started flag, fix timerEnd() + timer HW test (#8135)\r\n\r\n* Add timer_started flag and stop before disable\r\n\r\n* Fix timer HW test\r\n\r\n* TOUCH - Peripheral manager implementation (#8129)\r\n\r\n* Touch periman implemented\r\n\r\n* Deinit previous bus first\r\n\r\n* LEDC Refactoring - Peripheral manager implemented (#8126)\r\n\r\n* LEDC periman implementation\r\n\r\n* Fix examples\r\n\r\n* Rework tone\r\n\r\n* Update ledc docs\r\n\r\n* fix missing bracket\r\n\r\n* Update analog funtions esp32-hal.h\r\n\r\n* Update CameraWebServer example\r\n\r\n* Fix HiFreq_ADC example\r\n\r\n* minor fixes - typos\r\n\r\n* Avoid calling tone/notone when tone already runs on dif. pin\r\n\r\n* Remove unused channels_resolution\r\n\r\n* GPIO - Peripheral manager implementation (#8179)\r\n\r\n* periman-implementation\r\n\r\n* fix RGB_BUILTIN and remove space\r\n\r\n* Enforces more consistency into Peripheral Manager (#8188)\r\n\r\n* Avoid log_i() message the first time a bus is assigned\r\n\r\n* Prevent operation with ESP32_BUS_TYPE_INIT\r\n\r\n* keeps coding style\r\n\r\n* do not print messages on INIT bus type\r\n\r\n* [Arduino Core 3.0.0] RMT IDF5.1 Refactoring (#7994)\r\n\r\n* RMT IDF5.1 refactoring\r\n\r\n* Fixes initial value setting\r\n\r\n* removed rmtRead() with user callback\r\n\r\n* simplify/remove Read data structure\r\n\r\n* Deep API simplification\r\n\r\n* fixes the examples\r\n\r\n* fix rmt.h\r\n\r\n* adds support to APB different frequencies\r\n\r\n* fixes CI and not defined RGB_BUILTIN\r\n\r\n* new RMT API and examples\r\n\r\n* fixing commentaties\r\n\r\n* Update esp32-hal-rgb-led.c\r\n\r\n* changes Filter API\r\n\r\n* Fixes example with Filter API\r\n\r\n* Update PlatformIO scripts for the upcoming 3.0 core (#8183)\r\n\r\n* Update PlatformIO scripts for the upcoming 3.0 core\r\n\r\n* Dynamically select proper framework-arduinoespressif32-libs package\r\n\r\nWith this change the dev-platform will be dynamically configured to\r\npull the latest .zip package with precompiled libraries from extracted from\r\npackage_esp32_index.template.json\r\n\r\n* free memory on detach (#8264)\r\n\r\n* SPI - Peripheral manager implementation  (#8255)\r\n\r\n* spi periman implementation\r\n\r\n* fix header file\r\n\r\n* remove unused struct\r\n\r\n* fix missing braces\r\n\r\n* Update esp32-hal-rmt.c (#8216)\r\n\r\nOptimizing Peripheral Manager Test\r\n\r\n* I2C - Peripheral manager implementation (#8220)\r\n\r\n* i2c-master periman initial commit\r\n\r\n* i2c-master make detachbus static + comment remove\r\n\r\n* i2c-slave periman implementation\r\n\r\n* SetPinBus to INIT on i2cDeinits\r\n\r\n* Fix slave pins deinit\r\n\r\n* remove dbg logs\r\n\r\n* set ret to ESP_FAIL instead of returning\r\n\r\n* Fix warnings in hal-spi caused by pariman transition\r\n\r\n* Update esptool.py to version 4.6\r\n\r\n* Add platform support for ESP_SR\r\n\r\n* Add USB Type and valid pin check to periman\r\n\r\n* replace bus with spi->num+1 (#8279)\r\n\r\n* Remove default pins from SPI HAL\r\n\r\n* Add commented out handlers for esptool.js in TinyUSB CDC\r\n\r\nFor future use\r\n\r\n* Add build defines for host os and fqbn (for debug purposes)\r\n\r\n* Provide proper memory caps total size\r\n\r\n* Update Esp.cpp\r\n\r\n* SDMMC - Peripheral manager implementation (#8289)\r\n\r\n* sdmmc periman implemented\r\n\r\n* save pins when SOC_SDMMC_USE_IOMUX\r\n\r\n* IDF release/v5.1 4bc762621d (#8292)\r\n\r\n* Adds missing pinMode (#8312)\r\n\r\n* Adds missing pinMode\r\n\r\nThe example code lacks a pinMode() to initialize the GPIO 0 (button). In Arduino Core 3.0.0, it prints an error message when trying to read a not initialized GPIO.\r\n\r\n* Update KeyboardLogout.ino\r\n\r\nAdds <buttonPin> to keep code standard\r\n\r\n* Update KeyboardReprogram.ino\r\n\r\nAdds <buttonPin> to keep code standard\r\n\r\n* LEDC Fade implementation (#8338)\r\n\r\n* fade API + pointer fixes\r\n\r\n* Add fade api\r\n\r\n* Add fade example\r\n\r\n* update ledc docs\r\n\r\n* remove unused variables\r\n\r\n* fix path to example\r\n\r\n* Adds USB to Peripheral Manager - Arduino Core 3.0.0 (#8335)\r\n\r\n* ETHERNET - Peripheral manager implementation (#8297)\r\n\r\n* Peripheral manager implemented\r\n\r\n* remove unused variable\r\n\r\n* Add all RMII pins\r\n\r\n* fix typo\r\n\r\n* Adds HardwareSerial to Peripheral Manager Arduino 3.0.0 (#8328)\r\n\r\n* Do not limit ETHERNET in periman to only ESP32. SPI is also an option\r\n\r\n* Initial support for ESP32-C6 (#8337)\r\n\r\n* Add checks for SOC defines (#8351)\r\n\r\n* Add checks for SOC defines\r\n\r\n* Add SoC checks to BLE library\r\n\r\n* fix i2c compilation error\r\n\r\n* fix wrong placement of include\r\n\r\n* add check to SPI library\r\n\r\n* add check to USB library\r\n\r\n* add checks to Wire library\r\n\r\n* Feature/esp32h2 support (#8373)\r\n\r\n* Initial support for ESP32H2\r\n\r\n* Additional changes for ESP32H2\r\n\r\n* Update libs for ESP32H2\r\n\r\n* Fix flashing on ESP32-H2\r\n\r\n* Fix GPIO Configs for ESP32-C6 and ESP32-H2\r\n\r\n* Update Timer test sketch\r\n\r\n* Fix upload flash parameters\r\n\r\n* Use ets_write_char_uart instead of ets_printf in log_printfv\r\n\r\n* Print full chip report when log level is sufficient (#8282)\r\n\r\n* ESP32-C3 does not have ets_write_char_uart\r\n\r\n* Fix BLE gap event name\r\n\r\n* HW Testing - Pytest update (#8389)\r\n\r\n* update tests requirements\r\n\r\n* remove already handled components\r\n\r\n* Update version of pytest\r\n\r\n* Add missing ESP32-H2 to hil.yml\r\n\r\n* Updated FreeRTOS names (#8418)\r\n\r\n* HW Testing -  ESP32-C6 + ESP32-H2 fixes (#8404)\r\n\r\n* add C6/H2 to tests cfg.json\r\n\r\n* remove ,\r\n\r\n* workflow runs-on runner by matrix\r\n\r\n* Add need for arduino tag to select runner\r\n\r\n* Add cryptography to requirements.txt\r\n\r\n* Removed duplicate TX1 define for H2 (#8402)\r\n\r\n* Fix broken examples\r\n\r\n* Fixes RMT filter & idle timing and setup (#8359)\r\n\r\n* Fixes Filter and Idle parameter to uint32\r\n\r\n* Fixes Filter and Idle setup\r\n\r\n* Fixes it to 5.1Libs branch\r\n\r\n* fix RMT CLK source and Filter API\r\n\r\n* fixes missing ;\r\n\r\n* fixes missing ;\r\n\r\n* fixes RMT example\r\n\r\n* IDF release/v5.1 a7b62bbcaf (#8438)\r\n\r\n* Add workflow to build executables from python scripts (#8290)\r\n\r\n* Add workflow to build executables from python scripts\r\n\r\n* Push binary to tools\r\n\r\n* Enable executable signing on Windows\r\n\r\n* Update get.py\r\n\r\n* Push binary to tools\r\n\r\n* Try with multiple files\r\n\r\n* Try more actions\r\n\r\n* Try powershell\r\n\r\n* Restore tools so they do not get rebuilt\r\n\r\n* Finalize scripts\r\n\r\n* Push binary to tools\r\n\r\n* App rollback should be after PSRAM is initialized\r\n\r\n* Correcting RX1 to GPIO4 and TX1 to GPIO5 to be consistent with documentation. Previous pin use works but is inconsistent with C6 docs.\r\n\r\n* Fixes Memory Leak (#8486)\r\n\r\n* fixes preprocessor test (#8485)\r\n\r\n* fixes preprocessor test\r\n\r\nWhen using `#define USE_SOFT_AP` \r\nChange\r\n`&& not USE_SOFT_AP` ==> `&& !defined(USE_SOFT_AP)`\r\n\r\n* Adds any BLE capable device in WiFiProv.ino\r\n\r\nRemoving ESP32 restriction for BLE Provisioning.\r\n\r\n* fix flash mode read out for C6\r\n\r\n* Add option for custom partitions without restrictions\r\n\r\n* SD_MMC update (#8298)\r\n\r\n* Updated SD_MMC lib and examples\r\n\r\n* Removed getter implementation and commented usage in examples\r\n\r\n* squashed updates\r\n\r\n* IDF release/v5.1 f0437b945f (#8599)\r\n\r\n* Update package_esp32_index.template.json\r\n\r\n* Fix printf format build error in BTAdvertisedDeviceSet.cpp\r\n\r\n---------\r\n\r\nCo-authored-by: Pedro Minatel <pedro.minatel@espressif.com>\r\nCo-authored-by: Rodrigo Garcia <rodrigo.garcia@espressif.com>\r\nCo-authored-by: Ha Thach <thach@tinyusb.org>\r\nCo-authored-by: Martin Turski <quiret@vfemail.net>\r\nCo-authored-by: raviypujar <raviypujar@gmail.com>\r\nCo-authored-by: Jason2866 <24528715+Jason2866@users.noreply.github.com>\r\nCo-authored-by: Tom\u00e1\u0161 Piln\u00fd <34927466+PilnyTomas@users.noreply.github.com>\r\nCo-authored-by: Jan Proch\u00e1zka <90197375+P-R-O-C-H-Y@users.noreply.github.com>\r\nCo-authored-by: Daniel Berlin <dberlin@dberlin.org>\r\nCo-authored-by: Nima Askari (\u0646\u06cc\u0645\u0627 \u0639\u0633\u06a9\u0631\u06cc) <nimaltd@yahoo.com>\r\nCo-authored-by: rtpmsys <106180646+rtpmsys@users.noreply.github.com>\r\nCo-authored-by: bytiful <55647551+bytiful@users.noreply.github.com>\r\nCo-authored-by: tmfarrington <tmfarrington@users.noreply.github.com>\r\nCo-authored-by: Krzysiek S <chris.streh@gmail.com>\r\nCo-authored-by: surt <carl.olsson@gmail.com>\r\nCo-authored-by: Max Scheffler <max.scheffler@pm.me>\r\nCo-authored-by: Clemens Kirchgatterer <clemens@1541.org>\r\nCo-authored-by: Peter Pan's Techland <twinkle-pirate@hotmail.com>\r\nCo-authored-by: Roman <programmeofficemilkyway@gmail.com>\r\nCo-authored-by: Eistee <Eistee82@users.noreply.github.com>\r\nCo-authored-by: David McCurley <44048235+mrengineer7777@users.noreply.github.com>\r\nCo-authored-by: Gaya3N25 <30388176+Gaya3N25@users.noreply.github.com>\r\nCo-authored-by: renebohne <rene.bohne@gmail.com>\r\nCo-authored-by: Oliv\u00e9r Rem\u00e9ny <25034625+remenyo@users.noreply.github.com>\r\nCo-authored-by: davidk88 <david.kotar@gmail.com>\r\nCo-authored-by: Vojt\u011bch Barto\u0161ka <76958047+VojtechBartoska@users.noreply.github.com>\r\nCo-authored-by: James Armstrong <jamesarmstrong3@me.com>\r\nCo-authored-by: Valerii Koval <valeros@users.noreply.github.com>\r\nCo-authored-by: Peter G. Jensen <root@petergjoel.dk>",
            "additions": 5,
            "deletions": 2,
            "change_type": "MODIFY",
            "diff": "@@ -4,6 +4,9 @@\n  *  Created on: Jan 03, 2018\n  *      Author: chegewara\n  */\n+#include \"soc/soc_caps.h\"\n+#if SOC_BLE_SUPPORTED\n+\n #include \"sdkconfig.h\"\n #if defined(CONFIG_BLUEDROID_ENABLED)\n \n@@ -243,5 +246,5 @@ BLEService* BLEHIDDevice::batteryService() {\n \treturn m_batteryService;\n }\n \n-#endif // CONFIG_BLUEDROID_ENABLED\n-\n+#endif /* CONFIG_BLUEDROID_ENABLED */\n+#endif /* SOC_BLE_SUPPORTED */\n",
            "comment_added_diff": {},
            "comment_deleted_diff": {
                "246": "#endif // CONFIG_BLUEDROID_ENABLED"
            },
            "comment_modified_diff": {}
        }
    ],
    "BLEHIDDevice.h": [],
    "BLERemoteCharacteristic.h": [],
    "BLERemoteDescriptor.cpp": [
        {
            "commit": "822f252b353cfd808c77c9bc8369bc0cb4e0b5be",
            "timestamp": "2023-10-06T15:50:11+03:00",
            "author": "Me No Dev",
            "commit_message": "BLE upgrades (#8724)\n\n* Renamed library description\r\n\r\n* Updated Eddystone URL (not complete)\r\n\r\n* Updated Eddystone URL\r\n\r\n* Updated Eddystone classes and beacon scanner\r\n\r\n* Renamed examples - removing prefix BLE_\r\n\r\n* Renamed Beacon_Scanner\r\n\r\n* Updated TLM\r\n\r\n* Changed std::string to Arduino String\r\n\r\n* More std::string -> String\r\n\r\n* Changed String in forgotten file\r\n\r\n* Changed .data to .c_str\r\n\r\n* Reverting single String type change\r\n\r\n* Few more fixes related to the String transition\r\n\r\n* Fixed URL and Utils error\r\n\r\n* Added and modified compatibility safeguards for BLE5 examples\r\n\r\n* Added #include WString.h\r\n\r\n* Fixed Beacon_Scanner\r\n\r\n* Remove commented include\r\n\r\nCo-authored-by: Lucas Saavedra Vaz <lucassvaz@yahoo.com.br>\r\n\r\n---------\r\n\r\nCo-authored-by: Tomas Pilny <tomas.pilny@espressif.com>\r\nCo-authored-by: Lucas Saavedra Vaz <lucassvaz@yahoo.com.br>",
            "additions": 113,
            "deletions": 113,
            "change_type": "MODIFY",
            "diff": "@@ -15,13 +15,13 @@\n #include \"esp32-hal-log.h\"\n \n BLERemoteDescriptor::BLERemoteDescriptor(\n-\tuint16_t                 handle,\n-\tBLEUUID                  uuid,\n-\tBLERemoteCharacteristic* pRemoteCharacteristic) {\n+  uint16_t                 handle,\n+  BLEUUID                  uuid,\n+  BLERemoteCharacteristic* pRemoteCharacteristic) {\n \n-\tm_handle                = handle;\n-\tm_uuid                  = uuid;\n-\tm_pRemoteCharacteristic = pRemoteCharacteristic;\n+  m_handle                = handle;\n+  m_uuid                  = uuid;\n+  m_pRemoteCharacteristic = pRemoteCharacteristic;\n     m_auth                  = ESP_GATT_AUTH_REQ_NONE;\n }\n \n@@ -31,7 +31,7 @@ BLERemoteDescriptor::BLERemoteDescriptor(\n  * @return The handle associated with this remote descriptor.\n  */\n uint16_t BLERemoteDescriptor::getHandle() {\n-\treturn m_handle;\n+  return m_handle;\n } // getHandle\n \n \n@@ -40,7 +40,7 @@ uint16_t BLERemoteDescriptor::getHandle() {\n  * @return The characteristic that owns this descriptor.\n  */\n BLERemoteCharacteristic* BLERemoteDescriptor::getRemoteCharacteristic() {\n-\treturn m_pRemoteCharacteristic;\n+  return m_pRemoteCharacteristic;\n } // getRemoteCharacteristic\n \n \n@@ -49,100 +49,100 @@ BLERemoteCharacteristic* BLERemoteDescriptor::getRemoteCharacteristic() {\n  * @return The UUID associated this remote descriptor.\n  */\n BLEUUID BLERemoteDescriptor::getUUID() {\n-\treturn m_uuid;\n+  return m_uuid;\n } // getUUID\n \n void BLERemoteDescriptor::gattClientEventHandler(esp_gattc_cb_event_t event, esp_gatt_if_t gattc_if, esp_ble_gattc_cb_param_t* evtParam) {\n-\tswitch(event) {\n-\t\t// ESP_GATTC_READ_DESCR_EVT\n-\t\t// This event indicates that the server has responded to the read request.\n-\t\t//\n-\t\t// read:\n-\t\t// - esp_gatt_status_t  status\n-\t\t// - uint16_t           conn_id\n-\t\t// - uint16_t           handle\n-\t\t// - uint8_t*           value\n-\t\t// - uint16_t           value_len\n-\t\tcase ESP_GATTC_READ_DESCR_EVT:\n-\t\t\t// If this event is not for us, then nothing further to do.\n-\t\t\tif (evtParam->read.handle != getHandle()) break;\n-\t\t\t// At this point, we have determined that the event is for us, so now we save the value\n-\t\t\tif (evtParam->read.status == ESP_GATT_OK) {\n-\t\t\t\t// it will read the cached value of the descriptor\n-\t\t\t\tm_value = std::string((char*) evtParam->read.value, evtParam->read.value_len);\n-\t\t\t} else {\n-\t\t\t\tm_value = \"\";\n-\t\t\t}\n-\t\t\t// Unlock the semaphore to ensure that the requestor of the data can continue.\n-\t\t\tm_semaphoreReadDescrEvt.give();\n-\t\t\tbreak;\n-\n-\t\tcase ESP_GATTC_WRITE_DESCR_EVT:\n-\t\t\tif (evtParam->write.handle != getHandle())\n-\t\t\t\tbreak;\n-\t\t\tm_semaphoreWriteDescrEvt.give();\n-\t\t\tbreak;\n-\t\tdefault:\n-\t\t\tbreak;\n-\t}\n+  switch(event) {\n+    // ESP_GATTC_READ_DESCR_EVT\n+    // This event indicates that the server has responded to the read request.\n+    //\n+    // read:\n+    // - esp_gatt_status_t  status\n+    // - uint16_t           conn_id\n+    // - uint16_t           handle\n+    // - uint8_t*           value\n+    // - uint16_t           value_len\n+    case ESP_GATTC_READ_DESCR_EVT:\n+      // If this event is not for us, then nothing further to do.\n+      if (evtParam->read.handle != getHandle()) break;\n+      // At this point, we have determined that the event is for us, so now we save the value\n+      if (evtParam->read.status == ESP_GATT_OK) {\n+        // it will read the cached value of the descriptor\n+        m_value = String((char*) evtParam->read.value, evtParam->read.value_len);\n+      } else {\n+        m_value = \"\";\n+      }\n+      // Unlock the semaphore to ensure that the requestor of the data can continue.\n+      m_semaphoreReadDescrEvt.give();\n+      break;\n+\n+    case ESP_GATTC_WRITE_DESCR_EVT:\n+      if (evtParam->write.handle != getHandle())\n+        break;\n+      m_semaphoreWriteDescrEvt.give();\n+      break;\n+    default:\n+      break;\n+  }\n }\n \n-std::string BLERemoteDescriptor::readValue() {\n-\tlog_v(\">> readValue: %s\", toString().c_str());\n+String BLERemoteDescriptor::readValue() {\n+  log_v(\">> readValue: %s\", toString().c_str());\n \n-\t// Check to see that we are connected.\n-\tif (!getRemoteCharacteristic()->getRemoteService()->getClient()->isConnected()) {\n-\t\tlog_e(\"Disconnected\");\n-\t\treturn std::string();\n-\t}\n+  // Check to see that we are connected.\n+  if (!getRemoteCharacteristic()->getRemoteService()->getClient()->isConnected()) {\n+    log_e(\"Disconnected\");\n+    return String();\n+  }\n \n-\tm_semaphoreReadDescrEvt.take(\"readValue\");\n+  m_semaphoreReadDescrEvt.take(\"readValue\");\n \n-\t// Ask the BLE subsystem to retrieve the value for the remote hosted characteristic.\n-\tesp_err_t errRc = ::esp_ble_gattc_read_char_descr(\n-\t\tm_pRemoteCharacteristic->getRemoteService()->getClient()->getGattcIf(),\n-\t\tm_pRemoteCharacteristic->getRemoteService()->getClient()->getConnId(),    // The connection ID to the BLE server\n-\t\tgetHandle(),                                   // The handle of this characteristic\n-\t\tm_auth);                       // Security\n+  // Ask the BLE subsystem to retrieve the value for the remote hosted characteristic.\n+  esp_err_t errRc = ::esp_ble_gattc_read_char_descr(\n+    m_pRemoteCharacteristic->getRemoteService()->getClient()->getGattcIf(),\n+    m_pRemoteCharacteristic->getRemoteService()->getClient()->getConnId(),    // The connection ID to the BLE server\n+    getHandle(),                                   // The handle of this characteristic\n+    m_auth);                       // Security\n \n-\tif (errRc != ESP_OK) {\n-\t\tlog_e(\"esp_ble_gattc_read_char: rc=%d %s\", errRc, GeneralUtils::errorToString(errRc));\n-\t\treturn \"\";\n-\t}\n+  if (errRc != ESP_OK) {\n+    log_e(\"esp_ble_gattc_read_char: rc=%d %s\", errRc, GeneralUtils::errorToString(errRc));\n+    return \"\";\n+  }\n \n-\t// Block waiting for the event that indicates that the read has completed.  When it has, the std::string found\n-\t// in m_value will contain our data.\n-\tm_semaphoreReadDescrEvt.wait(\"readValue\");\n+  // Block waiting for the event that indicates that the read has completed.  When it has, the String found\n+  // in m_value will contain our data.\n+  m_semaphoreReadDescrEvt.wait(\"readValue\");\n \n-\tlog_v(\"<< readValue(): length: %d\", m_value.length());\n-\treturn m_value;\n+  log_v(\"<< readValue(): length: %d\", m_value.length());\n+  return m_value;\n } // readValue\n \n \n uint8_t BLERemoteDescriptor::readUInt8() {\n-\tstd::string value = readValue();\n-\tif (value.length() >= 1) {\n-\t\treturn (uint8_t) value[0];\n-\t}\n-\treturn 0;\n+  String value = readValue();\n+  if (value.length() >= 1) {\n+    return (uint8_t) value[0];\n+  }\n+  return 0;\n } // readUInt8\n \n \n uint16_t BLERemoteDescriptor::readUInt16() {\n-\tstd::string value = readValue();\n-\tif (value.length() >= 2) {\n-\t\treturn *(uint16_t*) value.data();\n-\t}\n-\treturn 0;\n+  String value = readValue();\n+  if (value.length() >= 2) {\n+    return *(uint16_t*) value.c_str();\n+  }\n+  return 0;\n } // readUInt16\n \n \n uint32_t BLERemoteDescriptor::readUInt32() {\n-\tstd::string value = readValue();\n-\tif (value.length() >= 4) {\n-\t\treturn *(uint32_t*) value.data();\n-\t}\n-\treturn 0;\n+  String value = readValue();\n+  if (value.length() >= 4) {\n+    return *(uint32_t*) value.c_str();\n+  }\n+  return 0;\n } // readUInt32\n \n \n@@ -150,13 +150,13 @@ uint32_t BLERemoteDescriptor::readUInt32() {\n  * @brief Return a string representation of this BLE Remote Descriptor.\n  * @retun A string representation of this BLE Remote Descriptor.\n  */\n-std::string BLERemoteDescriptor::toString() {\n-\tchar val[6];\n-\tsnprintf(val, sizeof(val), \"%d\", getHandle());\n-\tstd::string res = \"handle: \";\n-\tres += val;\n-\tres += \", uuid: \" + getUUID().toString();\n-\treturn res;\n+String BLERemoteDescriptor::toString() {\n+  char val[6];\n+  snprintf(val, sizeof(val), \"%d\", getHandle());\n+  String res = \"handle: \";\n+  res += val;\n+  res += \", uuid: \" + getUUID().toString();\n+  return res;\n } // toString\n \n \n@@ -167,30 +167,30 @@ std::string BLERemoteDescriptor::toString() {\n  * @param [in] response True if we expect a response.\n  */\n void BLERemoteDescriptor::writeValue(uint8_t* data, size_t length, bool response) {\n-\tlog_v(\">> writeValue: %s\", toString().c_str());\n-\t// Check to see that we are connected.\n-\tif (!getRemoteCharacteristic()->getRemoteService()->getClient()->isConnected()) {\n-\t\tlog_e(\"Disconnected\");\n-\t\treturn;\n-\t}\n-\n-\tm_semaphoreWriteDescrEvt.take(\"writeValue\");\n-\n-\tesp_err_t errRc = ::esp_ble_gattc_write_char_descr(\n-\t\tm_pRemoteCharacteristic->getRemoteService()->getClient()->getGattcIf(),\n-\t\tm_pRemoteCharacteristic->getRemoteService()->getClient()->getConnId(),\n-\t\tgetHandle(),\n-\t\tlength,                           // Data length\n-\t\tdata,                             // Data\n-\t\tresponse ? ESP_GATT_WRITE_TYPE_RSP : ESP_GATT_WRITE_TYPE_NO_RSP,\n-\t\tm_auth\n-\t);\n-\tif (errRc != ESP_OK) {\n-\t\tlog_e(\"esp_ble_gattc_write_char_descr: %d\", errRc);\n-\t}\n-\n-\tm_semaphoreWriteDescrEvt.wait(\"writeValue\");\n-\tlog_v(\"<< writeValue\");\n+  log_v(\">> writeValue: %s\", toString().c_str());\n+  // Check to see that we are connected.\n+  if (!getRemoteCharacteristic()->getRemoteService()->getClient()->isConnected()) {\n+    log_e(\"Disconnected\");\n+    return;\n+  }\n+\n+  m_semaphoreWriteDescrEvt.take(\"writeValue\");\n+\n+  esp_err_t errRc = ::esp_ble_gattc_write_char_descr(\n+    m_pRemoteCharacteristic->getRemoteService()->getClient()->getGattcIf(),\n+    m_pRemoteCharacteristic->getRemoteService()->getClient()->getConnId(),\n+    getHandle(),\n+    length,                           // Data length\n+    data,                             // Data\n+    response ? ESP_GATT_WRITE_TYPE_RSP : ESP_GATT_WRITE_TYPE_NO_RSP,\n+    m_auth\n+  );\n+  if (errRc != ESP_OK) {\n+    log_e(\"esp_ble_gattc_write_char_descr: %d\", errRc);\n+  }\n+\n+  m_semaphoreWriteDescrEvt.wait(\"writeValue\");\n+  log_v(\"<< writeValue\");\n } // writeValue\n \n \n@@ -199,8 +199,8 @@ void BLERemoteDescriptor::writeValue(uint8_t* data, size_t length, bool response\n  * @param [in] newValue The data to send to the remote descriptor.\n  * @param [in] response True if we expect a response.\n  */\n-void BLERemoteDescriptor::writeValue(std::string newValue, bool response) {\n-\twriteValue((uint8_t*) newValue.data(), newValue.length(), response);\n+void BLERemoteDescriptor::writeValue(String newValue, bool response) {\n+  writeValue((uint8_t*) newValue.c_str(), newValue.length(), response);\n } // writeValue\n \n \n@@ -210,7 +210,7 @@ void BLERemoteDescriptor::writeValue(std::string newValue, bool response) {\n  * @param [in] True if we expect a response.\n  */\n void BLERemoteDescriptor::writeValue(uint8_t newValue, bool response) {\n-\twriteValue(&newValue, 1, response);\n+  writeValue(&newValue, 1, response);\n } // writeValue\n \n /**\n",
            "comment_added_diff": {
                "57": "    // ESP_GATTC_READ_DESCR_EVT",
                "58": "    // This event indicates that the server has responded to the read request.",
                "60": "    // read:",
                "61": "    // - esp_gatt_status_t  status",
                "62": "    // - uint16_t           conn_id",
                "63": "    // - uint16_t           handle",
                "64": "    // - uint8_t*           value",
                "65": "    // - uint16_t           value_len",
                "67": "      // If this event is not for us, then nothing further to do.",
                "69": "      // At this point, we have determined that the event is for us, so now we save the value",
                "71": "        // it will read the cached value of the descriptor",
                "76": "      // Unlock the semaphore to ensure that the requestor of the data can continue.",
                "93": "  // Check to see that we are connected.",
                "101": "  // Ask the BLE subsystem to retrieve the value for the remote hosted characteristic.",
                "104": "    m_pRemoteCharacteristic->getRemoteService()->getClient()->getConnId(),    // The connection ID to the BLE server",
                "105": "    getHandle(),                                   // The handle of this characteristic",
                "106": "    m_auth);                       // Security",
                "113": "  // Block waiting for the event that indicates that the read has completed.  When it has, the String found",
                "114": "  // in m_value will contain our data.",
                "171": "  // Check to see that we are connected.",
                "183": "    length,                           // Data length",
                "184": "    data,                             // Data"
            },
            "comment_deleted_diff": {
                "57": "\t\t// ESP_GATTC_READ_DESCR_EVT",
                "58": "\t\t// This event indicates that the server has responded to the read request.",
                "60": "\t\t// read:",
                "61": "\t\t// - esp_gatt_status_t  status",
                "62": "\t\t// - uint16_t           conn_id",
                "63": "\t\t// - uint16_t           handle",
                "64": "\t\t// - uint8_t*           value",
                "65": "\t\t// - uint16_t           value_len",
                "67": "\t\t\t// If this event is not for us, then nothing further to do.",
                "69": "\t\t\t// At this point, we have determined that the event is for us, so now we save the value",
                "71": "\t\t\t\t// it will read the cached value of the descriptor",
                "76": "\t\t\t// Unlock the semaphore to ensure that the requestor of the data can continue.",
                "93": "\t// Check to see that we are connected.",
                "101": "\t// Ask the BLE subsystem to retrieve the value for the remote hosted characteristic.",
                "104": "\t\tm_pRemoteCharacteristic->getRemoteService()->getClient()->getConnId(),    // The connection ID to the BLE server",
                "105": "\t\tgetHandle(),                                   // The handle of this characteristic",
                "106": "\t\tm_auth);                       // Security",
                "113": "\t// Block waiting for the event that indicates that the read has completed.  When it has, the std::string found",
                "114": "\t// in m_value will contain our data.",
                "171": "\t// Check to see that we are connected.",
                "183": "\t\tlength,                           // Data length",
                "184": "\t\tdata,                             // Data"
            },
            "comment_modified_diff": {
                "57": "\t\t// ESP_GATTC_READ_DESCR_EVT",
                "58": "\t\t// This event indicates that the server has responded to the read request.",
                "60": "\t\t// read:",
                "61": "\t\t// - esp_gatt_status_t  status",
                "62": "\t\t// - uint16_t           conn_id",
                "63": "\t\t// - uint16_t           handle",
                "64": "\t\t// - uint8_t*           value",
                "65": "\t\t// - uint16_t           value_len",
                "67": "\t\t\t// If this event is not for us, then nothing further to do.",
                "69": "\t\t\t// At this point, we have determined that the event is for us, so now we save the value",
                "71": "\t\t\t\t// it will read the cached value of the descriptor",
                "76": "\t\t\t// Unlock the semaphore to ensure that the requestor of the data can continue.",
                "93": "\t// Check to see that we are connected.",
                "101": "\t// Ask the BLE subsystem to retrieve the value for the remote hosted characteristic.",
                "104": "\t\tm_pRemoteCharacteristic->getRemoteService()->getClient()->getConnId(),    // The connection ID to the BLE server",
                "105": "\t\tgetHandle(),                                   // The handle of this characteristic",
                "106": "\t\tm_auth);                       // Security",
                "113": "\t// Block waiting for the event that indicates that the read has completed.  When it has, the std::string found",
                "114": "\t// in m_value will contain our data.",
                "171": "\t// Check to see that we are connected.",
                "183": "\t\tlength,                           // Data length",
                "184": "\t\tdata,                             // Data"
            }
        }
    ],
    "BLERemoteDescriptor.h": [],
    "BLERemoteService.cpp": [
        {
            "commit": "822f252b353cfd808c77c9bc8369bc0cb4e0b5be",
            "timestamp": "2023-10-06T15:50:11+03:00",
            "author": "Me No Dev",
            "commit_message": "BLE upgrades (#8724)\n\n* Renamed library description\r\n\r\n* Updated Eddystone URL (not complete)\r\n\r\n* Updated Eddystone URL\r\n\r\n* Updated Eddystone classes and beacon scanner\r\n\r\n* Renamed examples - removing prefix BLE_\r\n\r\n* Renamed Beacon_Scanner\r\n\r\n* Updated TLM\r\n\r\n* Changed std::string to Arduino String\r\n\r\n* More std::string -> String\r\n\r\n* Changed String in forgotten file\r\n\r\n* Changed .data to .c_str\r\n\r\n* Reverting single String type change\r\n\r\n* Few more fixes related to the String transition\r\n\r\n* Fixed URL and Utils error\r\n\r\n* Added and modified compatibility safeguards for BLE5 examples\r\n\r\n* Added #include WString.h\r\n\r\n* Fixed Beacon_Scanner\r\n\r\n* Remove commented include\r\n\r\nCo-authored-by: Lucas Saavedra Vaz <lucassvaz@yahoo.com.br>\r\n\r\n---------\r\n\r\nCo-authored-by: Tomas Pilny <tomas.pilny@espressif.com>\r\nCo-authored-by: Lucas Saavedra Vaz <lucassvaz@yahoo.com.br>",
            "additions": 210,
            "deletions": 210,
            "change_type": "MODIFY",
            "diff": "@@ -20,37 +20,37 @@\n #pragma GCC diagnostic warning \"-Wunused-but-set-parameter\"\n \n BLERemoteService::BLERemoteService(\n-\t\tesp_gatt_id_t srvcId,\n-\t\tBLEClient*    pClient,\n-\t\tuint16_t      startHandle,\n-\t\tuint16_t      endHandle\n-\t) {\n-\n-\tlog_v(\">> BLERemoteService()\");\n-\tm_srvcId  = srvcId;\n-\tm_pClient = pClient;\n-\tm_uuid    = BLEUUID(m_srvcId);\n-\tm_haveCharacteristics = false;\n-\tm_startHandle = startHandle;\n-\tm_endHandle = endHandle;\n-\n-\tlog_v(\"<< BLERemoteService()\");\n+    esp_gatt_id_t srvcId,\n+    BLEClient*    pClient,\n+    uint16_t      startHandle,\n+    uint16_t      endHandle\n+  ) {\n+\n+  log_v(\">> BLERemoteService()\");\n+  m_srvcId  = srvcId;\n+  m_pClient = pClient;\n+  m_uuid    = BLEUUID(m_srvcId);\n+  m_haveCharacteristics = false;\n+  m_startHandle = startHandle;\n+  m_endHandle = endHandle;\n+\n+  log_v(\"<< BLERemoteService()\");\n }\n \n \n BLERemoteService::~BLERemoteService() {\n-\tremoveCharacteristics();\n+  removeCharacteristics();\n }\n \n /*\n static bool compareSrvcId(esp_gatt_srvc_id_t id1, esp_gatt_srvc_id_t id2) {\n-\tif (id1.id.inst_id != id2.id.inst_id) {\n-\t\treturn false;\n-\t}\n-\tif (!BLEUUID(id1.id.uuid).equals(BLEUUID(id2.id.uuid))) {\n-\t\treturn false;\n-\t}\n-\treturn true;\n+  if (id1.id.inst_id != id2.id.inst_id) {\n+    return false;\n+  }\n+  if (!BLEUUID(id1.id.uuid).equals(BLEUUID(id2.id.uuid))) {\n+    return false;\n+  }\n+  return true;\n } // compareSrvcId\n */\n \n@@ -58,64 +58,64 @@ static bool compareSrvcId(esp_gatt_srvc_id_t id1, esp_gatt_srvc_id_t id2) {\n  * @brief Handle GATT Client events\n  */\n void BLERemoteService::gattClientEventHandler(\n-\tesp_gattc_cb_event_t      event,\n-\tesp_gatt_if_t             gattc_if,\n-\tesp_ble_gattc_cb_param_t* evtParam) {\n-\tswitch (event) {\n-\t\t//\n-\t\t// ESP_GATTC_GET_CHAR_EVT\n-\t\t//\n-\t\t// get_char:\n-\t\t// - esp_gatt_status_t    status\n-\t\t// - uin1t6_t             conn_id\n-\t\t// - esp_gatt_srvc_id_t   srvc_id\n-\t\t// - esp_gatt_id_t        char_id\n-\t\t// - esp_gatt_char_prop_t char_prop\n-\t\t//\n-\t/*\n-\t\tcase ESP_GATTC_GET_CHAR_EVT: {\n-\t\t\t// Is this event for this service?  If yes, then the local srvc_id and the event srvc_id will be\n-\t\t\t// the same.\n-\t\t\tif (compareSrvcId(m_srvcId, evtParam->get_char.srvc_id) == false) {\n-\t\t\t\tbreak;\n-\t\t\t}\n-\n-\t\t\t// If the status is NOT OK then we have a problem and continue.\n-\t\t\tif (evtParam->get_char.status != ESP_GATT_OK) {\n-\t\t\t\tm_semaphoreGetCharEvt.give();\n-\t\t\t\tbreak;\n-\t\t\t}\n-\n-\t\t\t// This is an indication that we now have the characteristic details for a characteristic owned\n-\t\t\t// by this service so remember it.\n-\t\t\tm_characteristicMap.insert(std::pair<std::string, BLERemoteCharacteristic*>(\n-\t\t\t\t\tBLEUUID(evtParam->get_char.char_id.uuid).toString(),\n-\t\t\t\t\tnew BLERemoteCharacteristic(evtParam->get_char.char_id, evtParam->get_char.char_prop, this)\t));\n-\n-\n-\t\t\t// Now that we have received a characteristic, lets ask for the next one.\n-\t\t\tesp_err_t errRc = ::esp_ble_gattc_get_characteristic(\n-\t\t\t\t\tm_pClient->getGattcIf(),\n-\t\t\t\t\tm_pClient->getConnId(),\n-\t\t\t\t\t&m_srvcId,\n-\t\t\t\t\t&evtParam->get_char.char_id);\n-\t\t\tif (errRc != ESP_OK) {\n-\t\t\t\tlog_e(\"esp_ble_gattc_get_characteristic: rc=%d %s\", errRc, GeneralUtils::errorToString(errRc));\n-\t\t\t\tbreak;\n-\t\t\t}\n-\n-\t\t\t//m_semaphoreGetCharEvt.give();\n-\t\t\tbreak;\n-\t\t} // ESP_GATTC_GET_CHAR_EVT\n+  esp_gattc_cb_event_t      event,\n+  esp_gatt_if_t             gattc_if,\n+  esp_ble_gattc_cb_param_t* evtParam) {\n+  switch (event) {\n+    //\n+    // ESP_GATTC_GET_CHAR_EVT\n+    //\n+    // get_char:\n+    // - esp_gatt_status_t    status\n+    // - uin1t6_t             conn_id\n+    // - esp_gatt_srvc_id_t   srvc_id\n+    // - esp_gatt_id_t        char_id\n+    // - esp_gatt_char_prop_t char_prop\n+    //\n+  /*\n+    case ESP_GATTC_GET_CHAR_EVT: {\n+      // Is this event for this service?  If yes, then the local srvc_id and the event srvc_id will be\n+      // the same.\n+      if (compareSrvcId(m_srvcId, evtParam->get_char.srvc_id) == false) {\n+        break;\n+      }\n+\n+      // If the status is NOT OK then we have a problem and continue.\n+      if (evtParam->get_char.status != ESP_GATT_OK) {\n+        m_semaphoreGetCharEvt.give();\n+        break;\n+      }\n+\n+      // This is an indication that we now have the characteristic details for a characteristic owned\n+      // by this service so remember it.\n+      m_characteristicMap.insert(std::pair<String, BLERemoteCharacteristic*>(\n+          BLEUUID(evtParam->get_char.char_id.uuid).toString(),\n+          new BLERemoteCharacteristic(evtParam->get_char.char_id, evtParam->get_char.char_prop, this)  ));\n+\n+\n+      // Now that we have received a characteristic, lets ask for the next one.\n+      esp_err_t errRc = ::esp_ble_gattc_get_characteristic(\n+          m_pClient->getGattcIf(),\n+          m_pClient->getConnId(),\n+          &m_srvcId,\n+          &evtParam->get_char.char_id);\n+      if (errRc != ESP_OK) {\n+        log_e(\"esp_ble_gattc_get_characteristic: rc=%d %s\", errRc, GeneralUtils::errorToString(errRc));\n+        break;\n+      }\n+\n+      //m_semaphoreGetCharEvt.give();\n+      break;\n+    } // ESP_GATTC_GET_CHAR_EVT\n */\n-\t\tdefault:\n-\t\t\tbreak;\n-\t} // switch\n-\n-\t// Send the event to each of the characteristics owned by this service.\n-\tfor (auto &myPair : m_characteristicMapByHandle) {\n-\t   myPair.second->gattClientEventHandler(event, gattc_if, evtParam);\n-\t}\n+    default:\n+      break;\n+  } // switch\n+\n+  // Send the event to each of the characteristics owned by this service.\n+  for (auto &myPair : m_characteristicMapByHandle) {\n+     myPair.second->gattClientEventHandler(event, gattc_if, evtParam);\n+  }\n } // gattClientEventHandler\n \n \n@@ -128,7 +128,7 @@ void BLERemoteService::gattClientEventHandler(\n BLERemoteCharacteristic* BLERemoteService::getCharacteristic(const char* uuid) {\n     return getCharacteristic(BLEUUID(uuid));\n } // getCharacteristic\n-\t\n+\n /**\n  * @brief Get the characteristic object for the UUID.\n  * @param [in] uuid Characteristic uuid.\n@@ -142,17 +142,17 @@ BLERemoteCharacteristic* BLERemoteService::getCharacteristic(BLEUUID uuid) {\n // device what characteristics it has in which case we have nothing to match against.  If we have not\n // asked the device about its characteristics, then we do that now.  Once we get the results we can then\n // examine the characteristics map to see if it has the characteristic we are looking for.\n-\tif (!m_haveCharacteristics) {\n-\t\tretrieveCharacteristics();\n-\t}\n-\tstd::string v = uuid.toString();\n-\tfor (auto &myPair : m_characteristicMap) {\n-\t\tif (myPair.first == v) {\n-\t\t\treturn myPair.second;\n-\t\t}\n-\t}\n-\t// throw new BLEUuidNotFoundException();  // <-- we dont want exception here, which will cause app crash, we want to search if any characteristic can be found one after another\n-\treturn nullptr;\n+  if (!m_haveCharacteristics) {\n+    retrieveCharacteristics();\n+  }\n+  String v = uuid.toString();\n+  for (auto &myPair : m_characteristicMap) {\n+    if (myPair.first == v) {\n+      return myPair.second;\n+    }\n+  }\n+  // throw new BLEUuidNotFoundException();  // <-- we dont want exception here, which will cause app crash, we want to search if any characteristic can be found one after another\n+  return nullptr;\n } // getCharacteristic\n \n \n@@ -162,54 +162,54 @@ BLERemoteCharacteristic* BLERemoteService::getCharacteristic(BLEUUID uuid) {\n  * @return N/A\n  */\n void BLERemoteService::retrieveCharacteristics() {\n-\tlog_v(\">> getCharacteristics() for service: %s\", getUUID().toString().c_str());\n-\n-\tremoveCharacteristics(); // Forget any previous characteristics.\n-\n-\tuint16_t offset = 0;\n-\tesp_gattc_char_elem_t result;\n-\twhile (true) {\n-\t\tuint16_t count = 1; // only room for 1 result allocated, so go one by one\n-\t\tesp_gatt_status_t status = ::esp_ble_gattc_get_all_char(\n-\t\t\tgetClient()->getGattcIf(),\n-\t\t\tgetClient()->getConnId(),\n-\t\t\tm_startHandle,\n-\t\t\tm_endHandle,\n-\t\t\t&result,\n-\t\t\t&count,\n-\t\t\toffset\n-\t\t);\n-\n-\t\tif (status == ESP_GATT_INVALID_OFFSET) {   // We have reached the end of the entries.\n-\t\t\tbreak;\n-\t\t}\n-\n-\t\tif (status != ESP_GATT_OK) {   // If we got an error, end.\n-\t\t\tlog_e(\"esp_ble_gattc_get_all_char: %s\", BLEUtils::gattStatusToString(status).c_str());\n-\t\t\tbreak;\n-\t\t}\n-\n-\t\tif (count == 0) {   // If we failed to get any new records, end.\n-\t\t\tbreak;\n-\t\t}\n-\n-\t\tlog_d(\"Found a characteristic: Handle: %d, UUID: %s\", result.char_handle, BLEUUID(result.uuid).toString().c_str());\n-\n-\t\t// We now have a new characteristic ... let us add that to our set of known characteristics\n-\t\tBLERemoteCharacteristic *pNewRemoteCharacteristic = new BLERemoteCharacteristic(\n-\t\t\tresult.char_handle,\n-\t\t\tBLEUUID(result.uuid),\n-\t\t\tresult.properties,\n-\t\t\tthis\n-\t\t);\n-\n-\t\tm_characteristicMap.insert(std::pair<std::string, BLERemoteCharacteristic*>(pNewRemoteCharacteristic->getUUID().toString(), pNewRemoteCharacteristic));\n-\t\tm_characteristicMapByHandle.insert(std::pair<uint16_t, BLERemoteCharacteristic*>(result.char_handle, pNewRemoteCharacteristic));\n-\t\toffset++;   // Increment our count of number of descriptors found.\n-\t} // Loop forever (until we break inside the loop).\n-\n-\tm_haveCharacteristics = true; // Remember that we have received the characteristics.\n-\tlog_v(\"<< getCharacteristics()\");\n+  log_v(\">> getCharacteristics() for service: %s\", getUUID().toString().c_str());\n+\n+  removeCharacteristics(); // Forget any previous characteristics.\n+\n+  uint16_t offset = 0;\n+  esp_gattc_char_elem_t result;\n+  while (true) {\n+    uint16_t count = 1; // only room for 1 result allocated, so go one by one\n+    esp_gatt_status_t status = ::esp_ble_gattc_get_all_char(\n+      getClient()->getGattcIf(),\n+      getClient()->getConnId(),\n+      m_startHandle,\n+      m_endHandle,\n+      &result,\n+      &count,\n+      offset\n+    );\n+\n+    if (status == ESP_GATT_INVALID_OFFSET) {   // We have reached the end of the entries.\n+      break;\n+    }\n+\n+    if (status != ESP_GATT_OK) {   // If we got an error, end.\n+      log_e(\"esp_ble_gattc_get_all_char: %s\", BLEUtils::gattStatusToString(status).c_str());\n+      break;\n+    }\n+\n+    if (count == 0) {   // If we failed to get any new records, end.\n+      break;\n+    }\n+\n+    log_d(\"Found a characteristic: Handle: %d, UUID: %s\", result.char_handle, BLEUUID(result.uuid).toString().c_str());\n+\n+    // We now have a new characteristic ... let us add that to our set of known characteristics\n+    BLERemoteCharacteristic *pNewRemoteCharacteristic = new BLERemoteCharacteristic(\n+      result.char_handle,\n+      BLEUUID(result.uuid),\n+      result.properties,\n+      this\n+    );\n+\n+    m_characteristicMap.insert(std::pair<String, BLERemoteCharacteristic*>(pNewRemoteCharacteristic->getUUID().toString(), pNewRemoteCharacteristic));\n+    m_characteristicMapByHandle.insert(std::pair<uint16_t, BLERemoteCharacteristic*>(result.char_handle, pNewRemoteCharacteristic));\n+    offset++;   // Increment our count of number of descriptors found.\n+  } // Loop forever (until we break inside the loop).\n+\n+  m_haveCharacteristics = true; // Remember that we have received the characteristics.\n+  log_v(\"<< getCharacteristics()\");\n } // getCharacteristics\n \n \n@@ -217,16 +217,16 @@ void BLERemoteService::retrieveCharacteristics() {\n  * @brief Retrieve a map of all the characteristics of this service.\n  * @return A map of all the characteristics of this service.\n  */\n-std::map<std::string, BLERemoteCharacteristic*>* BLERemoteService::getCharacteristics() {\n-\tlog_v(\">> getCharacteristics() for service: %s\", getUUID().toString().c_str());\n-\t// If is possible that we have not read the characteristics associated with the service so do that\n-\t// now.  The request to retrieve the characteristics by calling \"retrieveCharacteristics\" is a blocking\n-\t// call and does not return until all the characteristics are available.\n-\tif (!m_haveCharacteristics) {\n-\t\tretrieveCharacteristics();\n-\t}\n-\tlog_v(\"<< getCharacteristics() for service: %s\", getUUID().toString().c_str());\n-\treturn &m_characteristicMap;\n+std::map<String, BLERemoteCharacteristic*>* BLERemoteService::getCharacteristics() {\n+  log_v(\">> getCharacteristics() for service: %s\", getUUID().toString().c_str());\n+  // If is possible that we have not read the characteristics associated with the service so do that\n+  // now.  The request to retrieve the characteristics by calling \"retrieveCharacteristics\" is a blocking\n+  // call and does not return until all the characteristics are available.\n+  if (!m_haveCharacteristics) {\n+    retrieveCharacteristics();\n+  }\n+  log_v(\"<< getCharacteristics() for service: %s\", getUUID().toString().c_str());\n+  return &m_characteristicMap;\n } // getCharacteristics\n \n /**\n@@ -234,29 +234,29 @@ std::map<std::string, BLERemoteCharacteristic*>* BLERemoteService::getCharacteri\n  * @return A map of all the characteristics of this service.\n  */\n std::map<uint16_t, BLERemoteCharacteristic*>* BLERemoteService::getCharacteristicsByHandle() {\n-\t// If is possible that we have not read the characteristics associated with the service so do that\n-\t// now.  The request to retrieve the characteristics by calling \"retrieveCharacteristics\" is a blocking\n-\t// call and does not return until all the characteristics are available.\n-\tif (!m_haveCharacteristics) {\n-\t\tretrieveCharacteristics();\n-\t}\n-\treturn &m_characteristicMapByHandle;\n+  // If is possible that we have not read the characteristics associated with the service so do that\n+  // now.  The request to retrieve the characteristics by calling \"retrieveCharacteristics\" is a blocking\n+  // call and does not return until all the characteristics are available.\n+  if (!m_haveCharacteristics) {\n+    retrieveCharacteristics();\n+  }\n+  return &m_characteristicMapByHandle;\n } // getCharacteristicsByHandle\n \n /**\n  * @brief This function is designed to get characteristics map when we have multiple characteristics with the same UUID\n  */\n void BLERemoteService::getCharacteristics(std::map<uint16_t, BLERemoteCharacteristic*>** pCharacteristicMap) {\n-\tlog_v(\">> getCharacteristics() for service: %s\", getUUID().toString().c_str());\n-\t(void)pCharacteristicMap;\n-\t// If is possible that we have not read the characteristics associated with the service so do that\n-\t// now.  The request to retrieve the characteristics by calling \"retrieveCharacteristics\" is a blocking\n-\t// call and does not return until all the characteristics are available.\n-\tif (!m_haveCharacteristics) {\n-\t\tretrieveCharacteristics();\n-\t}\n-\tlog_v(\"<< getCharacteristics() for service: %s\", getUUID().toString().c_str());\n-\t*pCharacteristicMap = &m_characteristicMapByHandle;\n+  log_v(\">> getCharacteristics() for service: %s\", getUUID().toString().c_str());\n+  (void)pCharacteristicMap;\n+  // If is possible that we have not read the characteristics associated with the service so do that\n+  // now.  The request to retrieve the characteristics by calling \"retrieveCharacteristics\" is a blocking\n+  // call and does not return until all the characteristics are available.\n+  if (!m_haveCharacteristics) {\n+    retrieveCharacteristics();\n+  }\n+  log_v(\"<< getCharacteristics() for service: %s\", getUUID().toString().c_str());\n+  *pCharacteristicMap = &m_characteristicMapByHandle;\n }  // Get the characteristics map.\n \n /**\n@@ -264,44 +264,44 @@ void BLERemoteService::getCharacteristics(std::map<uint16_t, BLERemoteCharacteri\n  * @return A reference to the client associated with this service.\n  */\n BLEClient* BLERemoteService::getClient() {\n-\treturn m_pClient;\n+  return m_pClient;\n } // getClient\n \n \n uint16_t BLERemoteService::getEndHandle() {\n-\treturn m_endHandle;\n+  return m_endHandle;\n } // getEndHandle\n \n \n esp_gatt_id_t* BLERemoteService::getSrvcId() {\n-\treturn &m_srvcId;\n+  return &m_srvcId;\n } // getSrvcId\n \n \n uint16_t BLERemoteService::getStartHandle() {\n-\treturn m_startHandle;\n+  return m_startHandle;\n } // getStartHandle\n \n \n uint16_t BLERemoteService::getHandle() {\n-\tlog_v(\">> getHandle: service: %s\", getUUID().toString().c_str());\n-\tlog_v(\"<< getHandle: %d 0x%.2x\", getStartHandle(), getStartHandle());\n-\treturn getStartHandle();\n+  log_v(\">> getHandle: service: %s\", getUUID().toString().c_str());\n+  log_v(\"<< getHandle: %d 0x%.2x\", getStartHandle(), getStartHandle());\n+  return getStartHandle();\n } // getHandle\n \n \n BLEUUID BLERemoteService::getUUID() {\n-\treturn m_uuid;\n+  return m_uuid;\n }\n \n /**\n  * @brief Read the value of a characteristic associated with this service.\n  */\n-std::string BLERemoteService::getValue(BLEUUID characteristicUuid) {\n-\tlog_v(\">> readValue: uuid: %s\", characteristicUuid.toString().c_str());\n-\tstd::string ret =  getCharacteristic(characteristicUuid)->readValue();\n-\tlog_v(\"<< readValue\");\n-\treturn ret;\n+String BLERemoteService::getValue(BLEUUID characteristicUuid) {\n+  log_v(\">> readValue: uuid: %s\", characteristicUuid.toString().c_str());\n+  String ret =  getCharacteristic(characteristicUuid)->readValue();\n+  log_v(\"<< readValue\");\n+  return ret;\n } // readValue\n \n \n@@ -314,12 +314,12 @@ std::string BLERemoteService::getValue(BLEUUID characteristicUuid) {\n  * @return N/A.\n  */\n void BLERemoteService::removeCharacteristics() {\n-\tm_characteristicMap.clear();   // Clear the map\n-\tfor (auto &myPair : m_characteristicMapByHandle) {\n-\t   delete myPair.second;\n-\t   // delete the characteristics only once\n-\t}\n-\tm_characteristicMapByHandle.clear();   // Clear the map\n+  m_characteristicMap.clear();   // Clear the map\n+  for (auto &myPair : m_characteristicMapByHandle) {\n+     delete myPair.second;\n+     // delete the characteristics only once\n+  }\n+  m_characteristicMapByHandle.clear();   // Clear the map\n } // removeCharacteristics\n \n \n@@ -329,10 +329,10 @@ void BLERemoteService::removeCharacteristics() {\n  * @param [in] value The value to set.\n  * @throws BLEUuidNotFound\n  */\n-void BLERemoteService::setValue(BLEUUID characteristicUuid, std::string value) {\n-\tlog_v(\">> setValue: uuid: %s\", characteristicUuid.toString().c_str());\n-\tgetCharacteristic(characteristicUuid)->writeValue(value);\n-\tlog_v(\"<< setValue\");\n+void BLERemoteService::setValue(BLEUUID characteristicUuid, String value) {\n+  log_v(\">> setValue: uuid: %s\", characteristicUuid.toString().c_str());\n+  getCharacteristic(characteristicUuid)->writeValue(value);\n+  log_v(\"<< setValue\");\n } // setValue\n \n \n@@ -340,26 +340,26 @@ void BLERemoteService::setValue(BLEUUID characteristicUuid, std::string value) {\n  * @brief Create a string representation of this remote service.\n  * @return A string representation of this remote service.\n  */\n-std::string BLERemoteService::toString() {\n-\tstd::string res = \"Service: uuid: \" + m_uuid.toString();\n-\tchar val[6];\n-\tres += \", start_handle: \";\n-\tsnprintf(val, sizeof(val), \"%d\", m_startHandle);\n-\tres += val;\n-\tsnprintf(val, sizeof(val), \"%04x\", m_startHandle);\n-\tres += \" 0x\";\n-\tres += val;\n-\tres += \", end_handle: \";\n-\tsnprintf(val, sizeof(val), \"%d\", m_endHandle);\n-\tres += val;\n-\tsnprintf(val, sizeof(val), \"%04x\", m_endHandle);\n-\tres += \" 0x\";\n-\tres += val;\n-\tfor (auto &myPair : m_characteristicMap) {\n-\t\tres += \"\\n\" + myPair.second->toString();\n-\t   // myPair.second is the value\n-\t}\n-\treturn res;\n+String BLERemoteService::toString() {\n+  String res = \"Service: uuid: \" + m_uuid.toString();\n+  char val[6];\n+  res += \", start_handle: \";\n+  snprintf(val, sizeof(val), \"%d\", m_startHandle);\n+  res += val;\n+  snprintf(val, sizeof(val), \"%04x\", m_startHandle);\n+  res += \" 0x\";\n+  res += val;\n+  res += \", end_handle: \";\n+  snprintf(val, sizeof(val), \"%d\", m_endHandle);\n+  res += val;\n+  snprintf(val, sizeof(val), \"%04x\", m_endHandle);\n+  res += \" 0x\";\n+  res += val;\n+  for (auto &myPair : m_characteristicMap) {\n+    res += \"\\n\" + myPair.second->toString();\n+     // myPair.second is the value\n+  }\n+  return res;\n } // toString\n \n \n",
            "comment_added_diff": {
                "66": "    // ESP_GATTC_GET_CHAR_EVT",
                "68": "    // get_char:",
                "69": "    // - esp_gatt_status_t    status",
                "70": "    // - uin1t6_t             conn_id",
                "71": "    // - esp_gatt_srvc_id_t   srvc_id",
                "72": "    // - esp_gatt_id_t        char_id",
                "73": "    // - esp_gatt_char_prop_t char_prop",
                "77": "      // Is this event for this service?  If yes, then the local srvc_id and the event srvc_id will be",
                "78": "      // the same.",
                "83": "      // If the status is NOT OK then we have a problem and continue.",
                "89": "      // This is an indication that we now have the characteristic details for a characteristic owned",
                "90": "      // by this service so remember it.",
                "96": "      // Now that we have received a characteristic, lets ask for the next one.",
                "109": "    } // ESP_GATTC_GET_CHAR_EVT",
                "113": "  } // switch",
                "115": "  // Send the event to each of the characteristics owned by this service.",
                "154": "  // throw new BLEUuidNotFoundException();  // <-- we dont want exception here, which will cause app crash, we want to search if any characteristic can be found one after another",
                "167": "  removeCharacteristics(); // Forget any previous characteristics.",
                "172": "    uint16_t count = 1; // only room for 1 result allocated, so go one by one",
                "183": "    if (status == ESP_GATT_INVALID_OFFSET) {   // We have reached the end of the entries.",
                "187": "    if (status != ESP_GATT_OK) {   // If we got an error, end.",
                "192": "    if (count == 0) {   // If we failed to get any new records, end.",
                "198": "    // We now have a new characteristic ... let us add that to our set of known characteristics",
                "208": "    offset++;   // Increment our count of number of descriptors found.",
                "209": "  } // Loop forever (until we break inside the loop).",
                "211": "  m_haveCharacteristics = true; // Remember that we have received the characteristics.",
                "222": "  // If is possible that we have not read the characteristics associated with the service so do that",
                "223": "  // now.  The request to retrieve the characteristics by calling \"retrieveCharacteristics\" is a blocking",
                "224": "  // call and does not return until all the characteristics are available.",
                "237": "  // If is possible that we have not read the characteristics associated with the service so do that",
                "238": "  // now.  The request to retrieve the characteristics by calling \"retrieveCharacteristics\" is a blocking",
                "239": "  // call and does not return until all the characteristics are available.",
                "252": "  // If is possible that we have not read the characteristics associated with the service so do that",
                "253": "  // now.  The request to retrieve the characteristics by calling \"retrieveCharacteristics\" is a blocking",
                "254": "  // call and does not return until all the characteristics are available.",
                "317": "  m_characteristicMap.clear();   // Clear the map",
                "320": "     // delete the characteristics only once",
                "322": "  m_characteristicMapByHandle.clear();   // Clear the map",
                "360": "     // myPair.second is the value"
            },
            "comment_deleted_diff": {
                "66": "\t\t// ESP_GATTC_GET_CHAR_EVT",
                "68": "\t\t// get_char:",
                "69": "\t\t// - esp_gatt_status_t    status",
                "70": "\t\t// - uin1t6_t             conn_id",
                "71": "\t\t// - esp_gatt_srvc_id_t   srvc_id",
                "72": "\t\t// - esp_gatt_id_t        char_id",
                "73": "\t\t// - esp_gatt_char_prop_t char_prop",
                "77": "\t\t\t// Is this event for this service?  If yes, then the local srvc_id and the event srvc_id will be",
                "78": "\t\t\t// the same.",
                "83": "\t\t\t// If the status is NOT OK then we have a problem and continue.",
                "89": "\t\t\t// This is an indication that we now have the characteristic details for a characteristic owned",
                "90": "\t\t\t// by this service so remember it.",
                "96": "\t\t\t// Now that we have received a characteristic, lets ask for the next one.",
                "109": "\t\t} // ESP_GATTC_GET_CHAR_EVT",
                "113": "\t} // switch",
                "115": "\t// Send the event to each of the characteristics owned by this service.",
                "154": "\t// throw new BLEUuidNotFoundException();  // <-- we dont want exception here, which will cause app crash, we want to search if any characteristic can be found one after another",
                "167": "\tremoveCharacteristics(); // Forget any previous characteristics.",
                "172": "\t\tuint16_t count = 1; // only room for 1 result allocated, so go one by one",
                "183": "\t\tif (status == ESP_GATT_INVALID_OFFSET) {   // We have reached the end of the entries.",
                "187": "\t\tif (status != ESP_GATT_OK) {   // If we got an error, end.",
                "192": "\t\tif (count == 0) {   // If we failed to get any new records, end.",
                "198": "\t\t// We now have a new characteristic ... let us add that to our set of known characteristics",
                "208": "\t\toffset++;   // Increment our count of number of descriptors found.",
                "209": "\t} // Loop forever (until we break inside the loop).",
                "211": "\tm_haveCharacteristics = true; // Remember that we have received the characteristics.",
                "222": "\t// If is possible that we have not read the characteristics associated with the service so do that",
                "223": "\t// now.  The request to retrieve the characteristics by calling \"retrieveCharacteristics\" is a blocking",
                "224": "\t// call and does not return until all the characteristics are available.",
                "237": "\t// If is possible that we have not read the characteristics associated with the service so do that",
                "238": "\t// now.  The request to retrieve the characteristics by calling \"retrieveCharacteristics\" is a blocking",
                "239": "\t// call and does not return until all the characteristics are available.",
                "252": "\t// If is possible that we have not read the characteristics associated with the service so do that",
                "253": "\t// now.  The request to retrieve the characteristics by calling \"retrieveCharacteristics\" is a blocking",
                "254": "\t// call and does not return until all the characteristics are available.",
                "317": "\tm_characteristicMap.clear();   // Clear the map",
                "320": "\t   // delete the characteristics only once",
                "322": "\tm_characteristicMapByHandle.clear();   // Clear the map",
                "360": "\t   // myPair.second is the value"
            },
            "comment_modified_diff": {
                "66": "\t\t// ESP_GATTC_GET_CHAR_EVT",
                "68": "\t\t// get_char:",
                "69": "\t\t// - esp_gatt_status_t    status",
                "70": "\t\t// - uin1t6_t             conn_id",
                "71": "\t\t// - esp_gatt_srvc_id_t   srvc_id",
                "72": "\t\t// - esp_gatt_id_t        char_id",
                "73": "\t\t// - esp_gatt_char_prop_t char_prop",
                "77": "\t\t\t// Is this event for this service?  If yes, then the local srvc_id and the event srvc_id will be",
                "78": "\t\t\t// the same.",
                "83": "\t\t\t// If the status is NOT OK then we have a problem and continue.",
                "89": "\t\t\t// This is an indication that we now have the characteristic details for a characteristic owned",
                "90": "\t\t\t// by this service so remember it.",
                "96": "\t\t\t// Now that we have received a characteristic, lets ask for the next one.",
                "109": "\t\t} // ESP_GATTC_GET_CHAR_EVT",
                "113": "\t} // switch",
                "115": "\t// Send the event to each of the characteristics owned by this service.",
                "154": "\t// throw new BLEUuidNotFoundException();  // <-- we dont want exception here, which will cause app crash, we want to search if any characteristic can be found one after another",
                "167": "\tremoveCharacteristics(); // Forget any previous characteristics.",
                "172": "\t\tuint16_t count = 1; // only room for 1 result allocated, so go one by one",
                "183": "\t\tif (status == ESP_GATT_INVALID_OFFSET) {   // We have reached the end of the entries.",
                "187": "\t\tif (status != ESP_GATT_OK) {   // If we got an error, end.",
                "192": "\t\tif (count == 0) {   // If we failed to get any new records, end.",
                "198": "\t\t// We now have a new characteristic ... let us add that to our set of known characteristics",
                "208": "\t\toffset++;   // Increment our count of number of descriptors found.",
                "209": "\t} // Loop forever (until we break inside the loop).",
                "211": "\tm_haveCharacteristics = true; // Remember that we have received the characteristics.",
                "222": "\t// If is possible that we have not read the characteristics associated with the service so do that",
                "223": "\t// now.  The request to retrieve the characteristics by calling \"retrieveCharacteristics\" is a blocking",
                "224": "\t// call and does not return until all the characteristics are available.",
                "237": "\t// If is possible that we have not read the characteristics associated with the service so do that",
                "238": "\t// now.  The request to retrieve the characteristics by calling \"retrieveCharacteristics\" is a blocking",
                "239": "\t// call and does not return until all the characteristics are available.",
                "252": "\t// If is possible that we have not read the characteristics associated with the service so do that",
                "253": "\t// now.  The request to retrieve the characteristics by calling \"retrieveCharacteristics\" is a blocking",
                "254": "\t// call and does not return until all the characteristics are available.",
                "317": "\tm_characteristicMap.clear();   // Clear the map",
                "320": "\t   // delete the characteristics only once",
                "322": "\tm_characteristicMapByHandle.clear();   // Clear the map",
                "360": "\t   // myPair.second is the value"
            }
        }
    ],
    "BLERemoteService.h": [],
    "BLEScan.cpp": [
        {
            "commit": "6f7a1ca76ada4d705d79ce863450c91349327a79",
            "timestamp": "2023-10-05T14:54:25+03:00",
            "author": "Me No Dev",
            "commit_message": "ESP-IDF v5.1 (#7733)\n\n* Initial changes to compile under ESP-IDF v5.1\r\n\r\n* Initial import for ESP-IDF v5.1 libs\r\n\r\n* Update toolchain\r\n\r\n* Update esp32-hal-psram.c\r\n\r\n* Add missing LDs\r\n\r\n* Update platform.txt\r\n\r\n* Stop some CI jobs, because they will always fail\r\n\r\n* Fix examples\r\n\r\n* Update app_httpd.cpp\r\n\r\n* Update ResetReason.ino\r\n\r\n* Warnings fixes\r\n\r\n* Added the example guideline and template (#7665)\r\n\r\n* Added the example guideline and template\r\n\r\n* PR review changes with some typos and grammar fixes\r\n\r\n* Changes according to the PR review\r\n\r\n* Added ESP32-S3 link to the datasheet (#7738)\r\n\r\n* Update HiFreq_ADC.ino\r\n\r\n* Replace periph_ctrl.h use because of deprecation\r\n\r\n* Replace esp_spi_flash.h use because of deprecation\r\n\r\n* Add includes to male mDNS::enableWorkstation compile\r\n\r\n* Fix ssl_client mbedtls_pk_parse_key callback\r\n\r\n* Update temperature sensor driver\r\n\r\n* Allow sketch_utils to compile with arduino-cli\r\n\r\n* Run CI with arduino-cli\r\n\r\n* Fix arduino-cli CI build on Windows\r\n\r\n* Refactor platform.txt to not use components installed through the board manager when running from git\r\n\r\n* Initial Peripheral Manager Implementation\r\n\r\n* Update SigmaDelta driver to use the new ESP-IDF driver API\r\n\r\n* Small improvements to peripheral manager and SigmaDelta\r\n\r\n* Remove deleted function from SigmaDelta header\r\n\r\n* Update DAC driver to use the new ESP-IDF driver API\r\n\r\n* Adds softAp(String) to make it compatible with ESP8266 (#7801)\r\n\r\n* Fix commentary (#7800)\r\n\r\nMinor fix based on observation done in https://github.com/espressif/arduino-esp32/issues/7795#issuecomment-1416868611\r\n\r\n* add adafruit new board feather esp32s2 reserve tft (#7794)\r\n\r\n* bugfix: add <stdint.h> for uint8_t to avoid compilation failure (GCC 11.2.0) (#7744)\r\n\r\n* Adding 3rd party boards for VALTRACK-V4-VTS-ESP32-C3 & VALTRACK-V4-MFW-ESP32-C3 (#7735)\r\n\r\n* Added VALTRACK-V4-VTS-ESP32-C3 board definition\r\n\r\nCreated pins_arduino.h & made changes to boards.txt with necessary changes\r\n\r\n* Modified the URL\r\n\r\n* Renamed json\r\n\r\n* renamed all auRL\r\n\r\n* Adding VALTRACK-V4 series board definitions\r\n\r\nAdded VALTRACK-V4-VTS-ESP32C3 & VALTRACK-V4-MFW-ESP32-C3 board variants\r\n\r\n* Adding VALTRACK-V4 series board definitions\r\n\r\nAdded VALTRACK-V4-VTS-ESP32C3 & VALTRACK-V4-MFW-ESP32-C3 board variants\r\n\r\n* Reverted package_esp32_index.template.json\r\n\r\nrestored package_esp32_index.template.json from edits\r\n\r\n* Reverted package_esp32_index.template.json\r\n\r\nAdded new line to package_esp32_index.template.json\r\n\r\n* Update Platformio CI (#7725)\r\n\r\n* WiFiClient example fix (#7711)\r\n\r\n* Modified WiFiClient example to use thingspeak instead of non-functionig sparkfun\r\n\r\n* Moved instructions to README\r\n\r\n* Fixed spelling\r\n\r\n* Added link to S3 datasheet\r\n\r\n---------\r\n\r\nCo-authored-by: Jan Proch\u00e1zka <90197375+P-R-O-C-H-Y@users.noreply.github.com>\r\n\r\n* Mirror update from Heltec repository (#7709)\r\n\r\nHeltec updated the I2C pins in https://github.com/Heltec-Aaron-Lee/WiFi_Kit_series/commit/b10f4bf85d13fd01be80dcdb0eb59e6a8c8ba19a\r\n\r\n* Fixes BLE data printing (#7699)\r\n\r\n* Fixes BLE data printing\r\n\r\nBLE data has no '\\0' terminator, therefore it can't be printed as a regular C string.\r\nThis fix just prints the BLE data based on its length.\r\n\r\n* Simplify printing to a single call\r\n\r\n* split menu options + lora_32_V3 fix (#7697)\r\n\r\n* Change header gaurd name (#7696)\r\n\r\n* Fix Name (#7691)\r\n\r\nWrong name in definitions.\r\n\r\n* Fix error in WiFiClient.cpp where the connect function fails for timeouts below 1 second (#7686)\r\n\r\n* Update WiFiClient.cpp\r\n\r\nThis change will allow specifying connect timeouts below 1 second. Without this change, if connect timeouts under 1 second are given, the connect defaults to 0ms and fails. \r\nThis will also allow timeouts in fractions of seconds, e.g. 1500ms. Without this change, connect timeouts are truncated to full second increments.\r\n\r\n* Make parameter timeout_ms clear\r\n\r\n* Change connection timeout_ms name for clarity\r\n\r\n---------\r\n\r\nCo-authored-by: Rodrigo Garcia <rodrigo.garcia@espressif.com>\r\n\r\n* fixed the function header (#7674)\r\n\r\n* fixed the function header\r\n\r\n* fixed function name and paramaters\r\n\r\n---------\r\n\r\nCo-authored-by: Jan Procha\u0301zka <90197375+P-R-O-C-H-Y@users.noreply.github.com>\r\n\r\n* Ticker fix solving #6155 (#7664)\r\n\r\n* Wrapped Ticker functions with #pragma disabling -Wcast-function-type\r\n\r\n* Revert \"Wrapped Ticker functions with #pragma disabling -Wcast-function-type\"\r\n\r\nThis reverts commit 160be7e67a10d01b6e44c4bf2521c0ccd6348976.\r\n\r\n* Fixed Ticker example\r\n\r\n* Modified Ticker example\r\n\r\n* Fixed LED_BUILTIN err for ESP32\r\n\r\n---------\r\n\r\nCo-authored-by: Jan Proch\u00e1zka <90197375+P-R-O-C-H-Y@users.noreply.github.com>\r\n\r\n* setPins fix ESP32 \"specified pins are not supported by this chip.\" (#7646)\r\n\r\n[ESP32: SDMMCFS::begin hardcodes the usage of slot 1, only check if the pins match slot 1 pins.]\r\n\r\nsetPins() was testing pins D1, D2 and D3 all against D1 ... fine in 1 pin mode when all are -1 not so much if you're trying to get 4 pin mode working.\r\nI now see this function doesn't really do anything on the ESP32...accept now correctly checks that you are trying to use the slot 1 pins.\r\n\r\nCo-authored-by: Jan Proch\u00e1zka <90197375+P-R-O-C-H-Y@users.noreply.github.com>\r\n\r\n* Allow passing IP as connect method parameter in WiFiClientSecure and skip unnecessary host-ip conversions (#7643)\r\n\r\n* Add LED_BUILTIN* definitions and initialization for LEDs to stop them floating. (#7636)\r\n\r\nCo-authored-by: Rodrigo Garcia <rodrigo.garcia@espressif.com>\r\n\r\n* Expand path to tinuf2 image when checking existence in platformio-build.py (#7631)\r\n\r\n* Expand path to tinuf2 image when checking existence\r\n\r\n* More isFiles fixed\r\n\r\n* Remove (useless) trailing semicolon from Print.cpp (#7622)\r\n\r\n* ADD: New variant Edgebox-ESP-100 (#7771)\r\n\r\n* ADD: New variant Edgebox-ESP-100\r\n\r\n* FIX: Edgebox-ESP-100 Board.txt usb mode option change back to default value as ESP32S3\r\n\r\n* Add Crabik Slot ESP32-S3 board (#7790)\r\n\r\n* Added Crabik Slot ESP32-S3\r\n\r\n* Adding CPU frequency settings and removing excess from partition scheme settings\r\n\r\n* new variant LilyGO T-Display-S3 (#7763)\r\n\r\n* new variant LilyGO T-Display-S3\r\n\r\nhttps://github.com/Xinyuan-LilyGO/T-Display-S3\r\n\r\n* Add boards.txt definition\r\n\r\n---------\r\n\r\nCo-authored-by: Me No Dev <me-no-dev@users.noreply.github.com>\r\n\r\n* Update get.py to support Apple ARM64\r\n\r\n* Update package_esp32_index.template.json\r\n\r\n* WString Return bool (#7774)\r\n\r\n* Add Roboheart Hercules development board to the esp32-core (#7672)\r\n\r\n* added Roboheart Hercules pin definitions and board.txt entries\r\n\r\n* added package_roboheat.json for prototyping\r\n\r\n* Roboheart Hercules pins\r\n\r\n* Updated the pins\r\n\r\n* Delete package_roboheart.json\r\n\r\n* Requested changes\r\n\r\n---------\r\n\r\nCo-authored-by: renebohne <rene.bohne@gmail.com>\r\n\r\n* Reword \"ESP-IDF as Component\" (#7812)\r\n\r\nI think \"Arduino as an ESP-IDF component\" or just \"As ESP-IDF component\" instead of  \"ESP-IDF as Component\" is more correct way to name the link.\r\n\r\n1. \"ESP-IDF as Component\" would imply that ESP-IDF is some sort of library for Arduino, which is (IMO) misleading, because it's true the other way around.\r\n2. It's written as \"Arduino as an ESP-IDF component\" on the webpage it points to as well.\r\n\r\n- Also I removed the capitalization from \"Component\" as I have not found a reason why is it capitalized.\r\n\r\n* add new board Adafruit Feather ESP32-S3 Reverse TFT (#7811)\r\n\r\n* Multi threading examples (tasks, queues, semaphores, mutexes) (#7660)\r\n\r\n* Moved and renamed example ESP32/FreeRTOS to MultiThreading/BasicMultiThreading\r\n\r\n* Added dummy files\r\n\r\n* Modified original example\r\n\r\n* Fixed BasicMultiThreading.ino\r\n\r\n* Added Example demonstrating use of queues\r\n\r\n* Extended info in BasicMultiThreading\r\n\r\n* Renamed Queues to singular Queue\r\n\r\n* Added Mutex example\r\n\r\n* Added Semaphore example\r\n\r\n* Moved info from example to README\r\n\r\n* Moved doc from Mutex to README\r\n\r\n* Added Queue README\r\n\r\n* Removed unecesary text\r\n\r\n* Fixed grammar\r\n\r\n* Increased stack size for Sempahore example\r\n\r\n* Added headers into .ino files\r\n\r\n* Added word Example at the end of title in README\r\n\r\n* removed unused line\r\n\r\n* Added forgotten README\r\n\r\n* Modified BasicMultiThreading example\r\n\r\n* Added missing S3 entry in README\r\n\r\n* moved location\r\n\r\n* Update ESP-IDF libs\r\n\r\n* Update CMakeLists.txt\r\n\r\n* Update esptool to v4.4\r\n\r\n* Add function timerAttachInterruptFlag (#7809)\r\n\r\n* Update esptool to v4.5\r\n\r\n* ADC refactoring (#7827)\r\n\r\n* Adc refactored + periman implementation\r\n\r\nPeripheral manager still needs to be checked if the implementation is right.\r\n\r\n* switched to working solution for milivolts read\r\n\r\n* Periman detachbus fix\r\n\r\n* coding style\r\n\r\n* fix CI warnings\r\n\r\n* fix FreeRTOS example\r\n\r\n* Update ETH.cpp\r\n\r\n* Update FunctionalInterruptStruct.ino\r\n\r\n* Update package_esp32_index.template.json\r\n\r\n* Update package_esp32_index.template.json\r\n\r\n* Fixes for the latest IDF v5.1\r\n\r\n* update esp-idf libs and toolchain\r\n\r\n* Turn OFF auto crystal frequency for ESP32 (needed by TWAI)\r\n\r\n* Update examples\r\n\r\n* Switch build to mostly use flags from files\r\n\r\nIncludes can not be done this way\r\n\r\n* Reorganize flag files\r\n\r\n* Optimize chip build flags further\r\n\r\n* Revert defines from file. MBEDTLS_CONFIG_FILE does not properly expand\r\n\r\n* Add support for includes and defines from file\r\n\r\n* Replace old sdk path references in platform.txt\r\n\r\n* use gcc-ar (#8013)\r\n\r\n* Makes F_CPU generic for all SoC (#8007)\r\n\r\nBased on CONFIG_ESP_DEFAULT_CPU_FREQ_MHZ that is correctly defined in the sdkconfig file for each SoC.\r\n\r\n* TIMER refactoring (#7904)\r\n\r\n* refactor using GPtimer\r\n\r\n* Updated timer HW test\r\n\r\n* fix examples\r\n\r\n* Add v2.0.7 in issue template (#7871)\r\n\r\n* refactor using GPtimer\r\n\r\n* Updated timer HW test\r\n\r\n* fix examples\r\n\r\n* Revert \"Add v2.0.7 in issue template (#7871)\"\r\n\r\nThis reverts commit fcc3b17d62ff57861f8913ca1f142fd5163b7457.\r\n\r\n* Update upload-artifact to v3 in HW CI\r\n\r\n* Revert \"Update upload-artifact to v3 in HW CI\"\r\n\r\nThis reverts commit 1ba228071718ba37c4e26d98db22f77b2a7364a6.\r\n\r\n* replace resolution with frequency\r\n\r\n* remove count_down option\r\n\r\n* countup removed from examples + header\r\n\r\n* Refactored timer object\r\n\r\n* code cleanup + examples and tests fixes\r\n\r\n* TimerAlarm fix\r\n\r\n---------\r\n\r\nCo-authored-by: Vojt\u011bch Barto\u0161ka <76958047+VojtechBartoska@users.noreply.github.com>\r\n\r\n* [Docs] ADC and Timer API Update (+some docs fixes) (#7906)\r\n\r\n* updated docs\r\n\r\n* remove hall sensor docs\r\n\r\nRemoved Hall sensor documentation as its no longer supported in IDF-5\r\n\r\n* Fixed ESPNow examples location in docs\r\n\r\n* Last timer refactored API + gpio small fix\r\n\r\n* AlarmWrite fix\r\n\r\n* Fixes APLL/PLL with RTC Frequency (#8025)\r\n\r\nlog_d() was displaying APLL for any SoC, but S3 and C3 has not such option, causing compilation errors.\r\n\r\n* Update IDF libs and fix OPI PSRAM on S3\r\n\r\n* Add setMode function HardwareSerial.c to set the esp32 uart mode for use with RS485 auto RTS (#7935)\r\n\r\n* Added setMode function to set the esp32 uart mode\r\n\r\nUsed to set the esp32 uart mode for use with RS485 Half Duplex and the auto RTS pin mode. This will set/clear the RTS pin output to control the RE/DE pin on most RS485 chips.\r\n\r\n* Add Success (bool) return in some functions\r\n\r\n* Add Success (bool) return code to some functions\r\n\r\n* Add Success (bool) return to some functions\r\n\r\n* Add Success (bool) return to some functions\r\n\r\n* Fix uartSetRxTimeout return type\r\n\r\n---------\r\n\r\nCo-authored-by: Rodrigo Garcia <rodrigo.garcia@espressif.com>\r\n\r\n* Add support for esp-elf-gdb\r\n\r\n* WFG Crashfix (#8044)\r\n\r\n* Update component libs\r\n\r\n* IDF release/v5.1 (#8061)\r\n\r\n* IDF release/v5.1 bb9200acec\r\n\r\n* Update Esp.cpp\r\n\r\n* IDF release/v5.1 420ebd208a\r\n\r\n* Update esp32-hal-psram.c\r\n\r\n* Switch SDK to be an external package\r\n\r\n* fix path (#8096)\r\n\r\n* Makes UART work at any APB Frequency (#8097)\r\n\r\nFixes HardwareSerial to work with IDF 5.1 on any CPU/APB Frequency (240MHz to 10MHZ), including user created low power modes.\r\n\r\n* Add required callbacks for TinyUSB DFU\r\n\r\n* Update version to 3.0.0\r\n\r\n* Add ESP.getCoreVersion() and update ESP.getChipModel()\r\n\r\n* Update timer hal for the latest 5.1\r\n\r\n* Use separate RX and TX buffer sizes in HTTP client\r\n\r\noptimizes download by allowing up to 4K packets to be received\r\n\r\n* Rename clock tree enum name in latest 5.1\r\n\r\n* ESP32-H4 support was removed in ESP-IDF v5.1\r\n\r\n* IDF release/v5.1 2004bf4e11 (#8165)\r\n\r\n* Deinit previous bus first (#8180)\r\n\r\n* TIMER - add timer_started flag, fix timerEnd() + timer HW test (#8135)\r\n\r\n* Add timer_started flag and stop before disable\r\n\r\n* Fix timer HW test\r\n\r\n* TOUCH - Peripheral manager implementation (#8129)\r\n\r\n* Touch periman implemented\r\n\r\n* Deinit previous bus first\r\n\r\n* LEDC Refactoring - Peripheral manager implemented (#8126)\r\n\r\n* LEDC periman implementation\r\n\r\n* Fix examples\r\n\r\n* Rework tone\r\n\r\n* Update ledc docs\r\n\r\n* fix missing bracket\r\n\r\n* Update analog funtions esp32-hal.h\r\n\r\n* Update CameraWebServer example\r\n\r\n* Fix HiFreq_ADC example\r\n\r\n* minor fixes - typos\r\n\r\n* Avoid calling tone/notone when tone already runs on dif. pin\r\n\r\n* Remove unused channels_resolution\r\n\r\n* GPIO - Peripheral manager implementation (#8179)\r\n\r\n* periman-implementation\r\n\r\n* fix RGB_BUILTIN and remove space\r\n\r\n* Enforces more consistency into Peripheral Manager (#8188)\r\n\r\n* Avoid log_i() message the first time a bus is assigned\r\n\r\n* Prevent operation with ESP32_BUS_TYPE_INIT\r\n\r\n* keeps coding style\r\n\r\n* do not print messages on INIT bus type\r\n\r\n* [Arduino Core 3.0.0] RMT IDF5.1 Refactoring (#7994)\r\n\r\n* RMT IDF5.1 refactoring\r\n\r\n* Fixes initial value setting\r\n\r\n* removed rmtRead() with user callback\r\n\r\n* simplify/remove Read data structure\r\n\r\n* Deep API simplification\r\n\r\n* fixes the examples\r\n\r\n* fix rmt.h\r\n\r\n* adds support to APB different frequencies\r\n\r\n* fixes CI and not defined RGB_BUILTIN\r\n\r\n* new RMT API and examples\r\n\r\n* fixing commentaties\r\n\r\n* Update esp32-hal-rgb-led.c\r\n\r\n* changes Filter API\r\n\r\n* Fixes example with Filter API\r\n\r\n* Update PlatformIO scripts for the upcoming 3.0 core (#8183)\r\n\r\n* Update PlatformIO scripts for the upcoming 3.0 core\r\n\r\n* Dynamically select proper framework-arduinoespressif32-libs package\r\n\r\nWith this change the dev-platform will be dynamically configured to\r\npull the latest .zip package with precompiled libraries from extracted from\r\npackage_esp32_index.template.json\r\n\r\n* free memory on detach (#8264)\r\n\r\n* SPI - Peripheral manager implementation  (#8255)\r\n\r\n* spi periman implementation\r\n\r\n* fix header file\r\n\r\n* remove unused struct\r\n\r\n* fix missing braces\r\n\r\n* Update esp32-hal-rmt.c (#8216)\r\n\r\nOptimizing Peripheral Manager Test\r\n\r\n* I2C - Peripheral manager implementation (#8220)\r\n\r\n* i2c-master periman initial commit\r\n\r\n* i2c-master make detachbus static + comment remove\r\n\r\n* i2c-slave periman implementation\r\n\r\n* SetPinBus to INIT on i2cDeinits\r\n\r\n* Fix slave pins deinit\r\n\r\n* remove dbg logs\r\n\r\n* set ret to ESP_FAIL instead of returning\r\n\r\n* Fix warnings in hal-spi caused by pariman transition\r\n\r\n* Update esptool.py to version 4.6\r\n\r\n* Add platform support for ESP_SR\r\n\r\n* Add USB Type and valid pin check to periman\r\n\r\n* replace bus with spi->num+1 (#8279)\r\n\r\n* Remove default pins from SPI HAL\r\n\r\n* Add commented out handlers for esptool.js in TinyUSB CDC\r\n\r\nFor future use\r\n\r\n* Add build defines for host os and fqbn (for debug purposes)\r\n\r\n* Provide proper memory caps total size\r\n\r\n* Update Esp.cpp\r\n\r\n* SDMMC - Peripheral manager implementation (#8289)\r\n\r\n* sdmmc periman implemented\r\n\r\n* save pins when SOC_SDMMC_USE_IOMUX\r\n\r\n* IDF release/v5.1 4bc762621d (#8292)\r\n\r\n* Adds missing pinMode (#8312)\r\n\r\n* Adds missing pinMode\r\n\r\nThe example code lacks a pinMode() to initialize the GPIO 0 (button). In Arduino Core 3.0.0, it prints an error message when trying to read a not initialized GPIO.\r\n\r\n* Update KeyboardLogout.ino\r\n\r\nAdds <buttonPin> to keep code standard\r\n\r\n* Update KeyboardReprogram.ino\r\n\r\nAdds <buttonPin> to keep code standard\r\n\r\n* LEDC Fade implementation (#8338)\r\n\r\n* fade API + pointer fixes\r\n\r\n* Add fade api\r\n\r\n* Add fade example\r\n\r\n* update ledc docs\r\n\r\n* remove unused variables\r\n\r\n* fix path to example\r\n\r\n* Adds USB to Peripheral Manager - Arduino Core 3.0.0 (#8335)\r\n\r\n* ETHERNET - Peripheral manager implementation (#8297)\r\n\r\n* Peripheral manager implemented\r\n\r\n* remove unused variable\r\n\r\n* Add all RMII pins\r\n\r\n* fix typo\r\n\r\n* Adds HardwareSerial to Peripheral Manager Arduino 3.0.0 (#8328)\r\n\r\n* Do not limit ETHERNET in periman to only ESP32. SPI is also an option\r\n\r\n* Initial support for ESP32-C6 (#8337)\r\n\r\n* Add checks for SOC defines (#8351)\r\n\r\n* Add checks for SOC defines\r\n\r\n* Add SoC checks to BLE library\r\n\r\n* fix i2c compilation error\r\n\r\n* fix wrong placement of include\r\n\r\n* add check to SPI library\r\n\r\n* add check to USB library\r\n\r\n* add checks to Wire library\r\n\r\n* Feature/esp32h2 support (#8373)\r\n\r\n* Initial support for ESP32H2\r\n\r\n* Additional changes for ESP32H2\r\n\r\n* Update libs for ESP32H2\r\n\r\n* Fix flashing on ESP32-H2\r\n\r\n* Fix GPIO Configs for ESP32-C6 and ESP32-H2\r\n\r\n* Update Timer test sketch\r\n\r\n* Fix upload flash parameters\r\n\r\n* Use ets_write_char_uart instead of ets_printf in log_printfv\r\n\r\n* Print full chip report when log level is sufficient (#8282)\r\n\r\n* ESP32-C3 does not have ets_write_char_uart\r\n\r\n* Fix BLE gap event name\r\n\r\n* HW Testing - Pytest update (#8389)\r\n\r\n* update tests requirements\r\n\r\n* remove already handled components\r\n\r\n* Update version of pytest\r\n\r\n* Add missing ESP32-H2 to hil.yml\r\n\r\n* Updated FreeRTOS names (#8418)\r\n\r\n* HW Testing -  ESP32-C6 + ESP32-H2 fixes (#8404)\r\n\r\n* add C6/H2 to tests cfg.json\r\n\r\n* remove ,\r\n\r\n* workflow runs-on runner by matrix\r\n\r\n* Add need for arduino tag to select runner\r\n\r\n* Add cryptography to requirements.txt\r\n\r\n* Removed duplicate TX1 define for H2 (#8402)\r\n\r\n* Fix broken examples\r\n\r\n* Fixes RMT filter & idle timing and setup (#8359)\r\n\r\n* Fixes Filter and Idle parameter to uint32\r\n\r\n* Fixes Filter and Idle setup\r\n\r\n* Fixes it to 5.1Libs branch\r\n\r\n* fix RMT CLK source and Filter API\r\n\r\n* fixes missing ;\r\n\r\n* fixes missing ;\r\n\r\n* fixes RMT example\r\n\r\n* IDF release/v5.1 a7b62bbcaf (#8438)\r\n\r\n* Add workflow to build executables from python scripts (#8290)\r\n\r\n* Add workflow to build executables from python scripts\r\n\r\n* Push binary to tools\r\n\r\n* Enable executable signing on Windows\r\n\r\n* Update get.py\r\n\r\n* Push binary to tools\r\n\r\n* Try with multiple files\r\n\r\n* Try more actions\r\n\r\n* Try powershell\r\n\r\n* Restore tools so they do not get rebuilt\r\n\r\n* Finalize scripts\r\n\r\n* Push binary to tools\r\n\r\n* App rollback should be after PSRAM is initialized\r\n\r\n* Correcting RX1 to GPIO4 and TX1 to GPIO5 to be consistent with documentation. Previous pin use works but is inconsistent with C6 docs.\r\n\r\n* Fixes Memory Leak (#8486)\r\n\r\n* fixes preprocessor test (#8485)\r\n\r\n* fixes preprocessor test\r\n\r\nWhen using `#define USE_SOFT_AP` \r\nChange\r\n`&& not USE_SOFT_AP` ==> `&& !defined(USE_SOFT_AP)`\r\n\r\n* Adds any BLE capable device in WiFiProv.ino\r\n\r\nRemoving ESP32 restriction for BLE Provisioning.\r\n\r\n* fix flash mode read out for C6\r\n\r\n* Add option for custom partitions without restrictions\r\n\r\n* SD_MMC update (#8298)\r\n\r\n* Updated SD_MMC lib and examples\r\n\r\n* Removed getter implementation and commented usage in examples\r\n\r\n* squashed updates\r\n\r\n* IDF release/v5.1 f0437b945f (#8599)\r\n\r\n* Update package_esp32_index.template.json\r\n\r\n* Fix printf format build error in BTAdvertisedDeviceSet.cpp\r\n\r\n---------\r\n\r\nCo-authored-by: Pedro Minatel <pedro.minatel@espressif.com>\r\nCo-authored-by: Rodrigo Garcia <rodrigo.garcia@espressif.com>\r\nCo-authored-by: Ha Thach <thach@tinyusb.org>\r\nCo-authored-by: Martin Turski <quiret@vfemail.net>\r\nCo-authored-by: raviypujar <raviypujar@gmail.com>\r\nCo-authored-by: Jason2866 <24528715+Jason2866@users.noreply.github.com>\r\nCo-authored-by: Tom\u00e1\u0161 Piln\u00fd <34927466+PilnyTomas@users.noreply.github.com>\r\nCo-authored-by: Jan Proch\u00e1zka <90197375+P-R-O-C-H-Y@users.noreply.github.com>\r\nCo-authored-by: Daniel Berlin <dberlin@dberlin.org>\r\nCo-authored-by: Nima Askari (\u0646\u06cc\u0645\u0627 \u0639\u0633\u06a9\u0631\u06cc) <nimaltd@yahoo.com>\r\nCo-authored-by: rtpmsys <106180646+rtpmsys@users.noreply.github.com>\r\nCo-authored-by: bytiful <55647551+bytiful@users.noreply.github.com>\r\nCo-authored-by: tmfarrington <tmfarrington@users.noreply.github.com>\r\nCo-authored-by: Krzysiek S <chris.streh@gmail.com>\r\nCo-authored-by: surt <carl.olsson@gmail.com>\r\nCo-authored-by: Max Scheffler <max.scheffler@pm.me>\r\nCo-authored-by: Clemens Kirchgatterer <clemens@1541.org>\r\nCo-authored-by: Peter Pan's Techland <twinkle-pirate@hotmail.com>\r\nCo-authored-by: Roman <programmeofficemilkyway@gmail.com>\r\nCo-authored-by: Eistee <Eistee82@users.noreply.github.com>\r\nCo-authored-by: David McCurley <44048235+mrengineer7777@users.noreply.github.com>\r\nCo-authored-by: Gaya3N25 <30388176+Gaya3N25@users.noreply.github.com>\r\nCo-authored-by: renebohne <rene.bohne@gmail.com>\r\nCo-authored-by: Oliv\u00e9r Rem\u00e9ny <25034625+remenyo@users.noreply.github.com>\r\nCo-authored-by: davidk88 <david.kotar@gmail.com>\r\nCo-authored-by: Vojt\u011bch Barto\u0161ka <76958047+VojtechBartoska@users.noreply.github.com>\r\nCo-authored-by: James Armstrong <jamesarmstrong3@me.com>\r\nCo-authored-by: Valerii Koval <valeros@users.noreply.github.com>\r\nCo-authored-by: Peter G. Jensen <root@petergjoel.dk>",
            "additions": 8,
            "deletions": 5,
            "change_type": "MODIFY",
            "diff": "@@ -7,10 +7,12 @@\n  * \tUpdate: April, 2021\n  * \t\tadd BLE5 support\n  */\n+#include \"soc/soc_caps.h\"\n+#if SOC_BLE_SUPPORTED\n+\n #include \"sdkconfig.h\"\n #if defined(CONFIG_BLUEDROID_ENABLED)\n \n-\n #include <esp_err.h>\n \n #include <map>\n@@ -146,7 +148,7 @@ void BLEScan::handleGAPEvent(\n \n \t\t\tbreak;\n \t\t} // ESP_GAP_BLE_SCAN_RESULT_EVT\n-#ifdef CONFIG_BT_BLE_50_FEATURES_SUPPORTED\n+#ifdef SOC_BLE_50_SUPPORTED\n \t\tcase ESP_GAP_BLE_EXT_ADV_REPORT_EVT: {\n \t\t\tif (param->ext_adv_report.params.event_type & ESP_BLE_GAP_SET_EXT_ADV_PROP_LEGACY) {\n \t\t\t\tlog_v(\"legacy adv, adv type 0x%x data len %d\", param->ext_adv_report.params.event_type, param->ext_adv_report.params.adv_data_len);\n@@ -237,7 +239,7 @@ void BLEScan::handleGAPEvent(\n \t\t\t}\n \t\t\tbreak;\n \n-#endif // CONFIG_BT_BLE_50_FEATURES_SUPPORTED\n+#endif // SOC_BLE_50_SUPPORTED\n \n \t\tdefault: {\n \t\t\tbreak;\n@@ -273,7 +275,7 @@ void BLEScan::setAdvertisedDeviceCallbacks(BLEAdvertisedDeviceCallbacks* pAdvert\n \tm_shouldParse = shouldParse;\n } // setAdvertisedDeviceCallbacks\n \n-#ifdef CONFIG_BT_BLE_50_FEATURES_SUPPORTED\n+#ifdef SOC_BLE_50_SUPPORTED\n \n void BLEScan::setExtendedScanCallback(BLEExtAdvertisingCallbacks* cb)\n {\n@@ -355,7 +357,7 @@ void BLEScan::setPeriodicScanCallback(BLEPeriodicScanCallbacks* cb)\n \tm_pPeriodicScanCb = cb;\n }\n \n-#endif // CONFIG_BT_BLE_50_FEATURES_SUPPORTED\n+#endif // SOC_BLE_50_SUPPORTED\n /**\n  * @brief Set the interval to scan.\n  * @param [in] The interval in msecs.\n@@ -510,3 +512,4 @@ void BLEScan::clearResults() {\n }\n \n #endif /* CONFIG_BLUEDROID_ENABLED */\n+#endif /* SOC_BLE_SUPPORTED */\n",
            "comment_added_diff": {
                "242": "#endif // SOC_BLE_50_SUPPORTED",
                "360": "#endif // SOC_BLE_50_SUPPORTED"
            },
            "comment_deleted_diff": {
                "240": "#endif // CONFIG_BT_BLE_50_FEATURES_SUPPORTED",
                "358": "#endif // CONFIG_BT_BLE_50_FEATURES_SUPPORTED"
            },
            "comment_modified_diff": {}
        }
    ],
    "BLEScan.h": [],
    "BLESecurity.cpp": [
        {
            "commit": "6f7a1ca76ada4d705d79ce863450c91349327a79",
            "timestamp": "2023-10-05T14:54:25+03:00",
            "author": "Me No Dev",
            "commit_message": "ESP-IDF v5.1 (#7733)\n\n* Initial changes to compile under ESP-IDF v5.1\r\n\r\n* Initial import for ESP-IDF v5.1 libs\r\n\r\n* Update toolchain\r\n\r\n* Update esp32-hal-psram.c\r\n\r\n* Add missing LDs\r\n\r\n* Update platform.txt\r\n\r\n* Stop some CI jobs, because they will always fail\r\n\r\n* Fix examples\r\n\r\n* Update app_httpd.cpp\r\n\r\n* Update ResetReason.ino\r\n\r\n* Warnings fixes\r\n\r\n* Added the example guideline and template (#7665)\r\n\r\n* Added the example guideline and template\r\n\r\n* PR review changes with some typos and grammar fixes\r\n\r\n* Changes according to the PR review\r\n\r\n* Added ESP32-S3 link to the datasheet (#7738)\r\n\r\n* Update HiFreq_ADC.ino\r\n\r\n* Replace periph_ctrl.h use because of deprecation\r\n\r\n* Replace esp_spi_flash.h use because of deprecation\r\n\r\n* Add includes to male mDNS::enableWorkstation compile\r\n\r\n* Fix ssl_client mbedtls_pk_parse_key callback\r\n\r\n* Update temperature sensor driver\r\n\r\n* Allow sketch_utils to compile with arduino-cli\r\n\r\n* Run CI with arduino-cli\r\n\r\n* Fix arduino-cli CI build on Windows\r\n\r\n* Refactor platform.txt to not use components installed through the board manager when running from git\r\n\r\n* Initial Peripheral Manager Implementation\r\n\r\n* Update SigmaDelta driver to use the new ESP-IDF driver API\r\n\r\n* Small improvements to peripheral manager and SigmaDelta\r\n\r\n* Remove deleted function from SigmaDelta header\r\n\r\n* Update DAC driver to use the new ESP-IDF driver API\r\n\r\n* Adds softAp(String) to make it compatible with ESP8266 (#7801)\r\n\r\n* Fix commentary (#7800)\r\n\r\nMinor fix based on observation done in https://github.com/espressif/arduino-esp32/issues/7795#issuecomment-1416868611\r\n\r\n* add adafruit new board feather esp32s2 reserve tft (#7794)\r\n\r\n* bugfix: add <stdint.h> for uint8_t to avoid compilation failure (GCC 11.2.0) (#7744)\r\n\r\n* Adding 3rd party boards for VALTRACK-V4-VTS-ESP32-C3 & VALTRACK-V4-MFW-ESP32-C3 (#7735)\r\n\r\n* Added VALTRACK-V4-VTS-ESP32-C3 board definition\r\n\r\nCreated pins_arduino.h & made changes to boards.txt with necessary changes\r\n\r\n* Modified the URL\r\n\r\n* Renamed json\r\n\r\n* renamed all auRL\r\n\r\n* Adding VALTRACK-V4 series board definitions\r\n\r\nAdded VALTRACK-V4-VTS-ESP32C3 & VALTRACK-V4-MFW-ESP32-C3 board variants\r\n\r\n* Adding VALTRACK-V4 series board definitions\r\n\r\nAdded VALTRACK-V4-VTS-ESP32C3 & VALTRACK-V4-MFW-ESP32-C3 board variants\r\n\r\n* Reverted package_esp32_index.template.json\r\n\r\nrestored package_esp32_index.template.json from edits\r\n\r\n* Reverted package_esp32_index.template.json\r\n\r\nAdded new line to package_esp32_index.template.json\r\n\r\n* Update Platformio CI (#7725)\r\n\r\n* WiFiClient example fix (#7711)\r\n\r\n* Modified WiFiClient example to use thingspeak instead of non-functionig sparkfun\r\n\r\n* Moved instructions to README\r\n\r\n* Fixed spelling\r\n\r\n* Added link to S3 datasheet\r\n\r\n---------\r\n\r\nCo-authored-by: Jan Proch\u00e1zka <90197375+P-R-O-C-H-Y@users.noreply.github.com>\r\n\r\n* Mirror update from Heltec repository (#7709)\r\n\r\nHeltec updated the I2C pins in https://github.com/Heltec-Aaron-Lee/WiFi_Kit_series/commit/b10f4bf85d13fd01be80dcdb0eb59e6a8c8ba19a\r\n\r\n* Fixes BLE data printing (#7699)\r\n\r\n* Fixes BLE data printing\r\n\r\nBLE data has no '\\0' terminator, therefore it can't be printed as a regular C string.\r\nThis fix just prints the BLE data based on its length.\r\n\r\n* Simplify printing to a single call\r\n\r\n* split menu options + lora_32_V3 fix (#7697)\r\n\r\n* Change header gaurd name (#7696)\r\n\r\n* Fix Name (#7691)\r\n\r\nWrong name in definitions.\r\n\r\n* Fix error in WiFiClient.cpp where the connect function fails for timeouts below 1 second (#7686)\r\n\r\n* Update WiFiClient.cpp\r\n\r\nThis change will allow specifying connect timeouts below 1 second. Without this change, if connect timeouts under 1 second are given, the connect defaults to 0ms and fails. \r\nThis will also allow timeouts in fractions of seconds, e.g. 1500ms. Without this change, connect timeouts are truncated to full second increments.\r\n\r\n* Make parameter timeout_ms clear\r\n\r\n* Change connection timeout_ms name for clarity\r\n\r\n---------\r\n\r\nCo-authored-by: Rodrigo Garcia <rodrigo.garcia@espressif.com>\r\n\r\n* fixed the function header (#7674)\r\n\r\n* fixed the function header\r\n\r\n* fixed function name and paramaters\r\n\r\n---------\r\n\r\nCo-authored-by: Jan Procha\u0301zka <90197375+P-R-O-C-H-Y@users.noreply.github.com>\r\n\r\n* Ticker fix solving #6155 (#7664)\r\n\r\n* Wrapped Ticker functions with #pragma disabling -Wcast-function-type\r\n\r\n* Revert \"Wrapped Ticker functions with #pragma disabling -Wcast-function-type\"\r\n\r\nThis reverts commit 160be7e67a10d01b6e44c4bf2521c0ccd6348976.\r\n\r\n* Fixed Ticker example\r\n\r\n* Modified Ticker example\r\n\r\n* Fixed LED_BUILTIN err for ESP32\r\n\r\n---------\r\n\r\nCo-authored-by: Jan Proch\u00e1zka <90197375+P-R-O-C-H-Y@users.noreply.github.com>\r\n\r\n* setPins fix ESP32 \"specified pins are not supported by this chip.\" (#7646)\r\n\r\n[ESP32: SDMMCFS::begin hardcodes the usage of slot 1, only check if the pins match slot 1 pins.]\r\n\r\nsetPins() was testing pins D1, D2 and D3 all against D1 ... fine in 1 pin mode when all are -1 not so much if you're trying to get 4 pin mode working.\r\nI now see this function doesn't really do anything on the ESP32...accept now correctly checks that you are trying to use the slot 1 pins.\r\n\r\nCo-authored-by: Jan Proch\u00e1zka <90197375+P-R-O-C-H-Y@users.noreply.github.com>\r\n\r\n* Allow passing IP as connect method parameter in WiFiClientSecure and skip unnecessary host-ip conversions (#7643)\r\n\r\n* Add LED_BUILTIN* definitions and initialization for LEDs to stop them floating. (#7636)\r\n\r\nCo-authored-by: Rodrigo Garcia <rodrigo.garcia@espressif.com>\r\n\r\n* Expand path to tinuf2 image when checking existence in platformio-build.py (#7631)\r\n\r\n* Expand path to tinuf2 image when checking existence\r\n\r\n* More isFiles fixed\r\n\r\n* Remove (useless) trailing semicolon from Print.cpp (#7622)\r\n\r\n* ADD: New variant Edgebox-ESP-100 (#7771)\r\n\r\n* ADD: New variant Edgebox-ESP-100\r\n\r\n* FIX: Edgebox-ESP-100 Board.txt usb mode option change back to default value as ESP32S3\r\n\r\n* Add Crabik Slot ESP32-S3 board (#7790)\r\n\r\n* Added Crabik Slot ESP32-S3\r\n\r\n* Adding CPU frequency settings and removing excess from partition scheme settings\r\n\r\n* new variant LilyGO T-Display-S3 (#7763)\r\n\r\n* new variant LilyGO T-Display-S3\r\n\r\nhttps://github.com/Xinyuan-LilyGO/T-Display-S3\r\n\r\n* Add boards.txt definition\r\n\r\n---------\r\n\r\nCo-authored-by: Me No Dev <me-no-dev@users.noreply.github.com>\r\n\r\n* Update get.py to support Apple ARM64\r\n\r\n* Update package_esp32_index.template.json\r\n\r\n* WString Return bool (#7774)\r\n\r\n* Add Roboheart Hercules development board to the esp32-core (#7672)\r\n\r\n* added Roboheart Hercules pin definitions and board.txt entries\r\n\r\n* added package_roboheat.json for prototyping\r\n\r\n* Roboheart Hercules pins\r\n\r\n* Updated the pins\r\n\r\n* Delete package_roboheart.json\r\n\r\n* Requested changes\r\n\r\n---------\r\n\r\nCo-authored-by: renebohne <rene.bohne@gmail.com>\r\n\r\n* Reword \"ESP-IDF as Component\" (#7812)\r\n\r\nI think \"Arduino as an ESP-IDF component\" or just \"As ESP-IDF component\" instead of  \"ESP-IDF as Component\" is more correct way to name the link.\r\n\r\n1. \"ESP-IDF as Component\" would imply that ESP-IDF is some sort of library for Arduino, which is (IMO) misleading, because it's true the other way around.\r\n2. It's written as \"Arduino as an ESP-IDF component\" on the webpage it points to as well.\r\n\r\n- Also I removed the capitalization from \"Component\" as I have not found a reason why is it capitalized.\r\n\r\n* add new board Adafruit Feather ESP32-S3 Reverse TFT (#7811)\r\n\r\n* Multi threading examples (tasks, queues, semaphores, mutexes) (#7660)\r\n\r\n* Moved and renamed example ESP32/FreeRTOS to MultiThreading/BasicMultiThreading\r\n\r\n* Added dummy files\r\n\r\n* Modified original example\r\n\r\n* Fixed BasicMultiThreading.ino\r\n\r\n* Added Example demonstrating use of queues\r\n\r\n* Extended info in BasicMultiThreading\r\n\r\n* Renamed Queues to singular Queue\r\n\r\n* Added Mutex example\r\n\r\n* Added Semaphore example\r\n\r\n* Moved info from example to README\r\n\r\n* Moved doc from Mutex to README\r\n\r\n* Added Queue README\r\n\r\n* Removed unecesary text\r\n\r\n* Fixed grammar\r\n\r\n* Increased stack size for Sempahore example\r\n\r\n* Added headers into .ino files\r\n\r\n* Added word Example at the end of title in README\r\n\r\n* removed unused line\r\n\r\n* Added forgotten README\r\n\r\n* Modified BasicMultiThreading example\r\n\r\n* Added missing S3 entry in README\r\n\r\n* moved location\r\n\r\n* Update ESP-IDF libs\r\n\r\n* Update CMakeLists.txt\r\n\r\n* Update esptool to v4.4\r\n\r\n* Add function timerAttachInterruptFlag (#7809)\r\n\r\n* Update esptool to v4.5\r\n\r\n* ADC refactoring (#7827)\r\n\r\n* Adc refactored + periman implementation\r\n\r\nPeripheral manager still needs to be checked if the implementation is right.\r\n\r\n* switched to working solution for milivolts read\r\n\r\n* Periman detachbus fix\r\n\r\n* coding style\r\n\r\n* fix CI warnings\r\n\r\n* fix FreeRTOS example\r\n\r\n* Update ETH.cpp\r\n\r\n* Update FunctionalInterruptStruct.ino\r\n\r\n* Update package_esp32_index.template.json\r\n\r\n* Update package_esp32_index.template.json\r\n\r\n* Fixes for the latest IDF v5.1\r\n\r\n* update esp-idf libs and toolchain\r\n\r\n* Turn OFF auto crystal frequency for ESP32 (needed by TWAI)\r\n\r\n* Update examples\r\n\r\n* Switch build to mostly use flags from files\r\n\r\nIncludes can not be done this way\r\n\r\n* Reorganize flag files\r\n\r\n* Optimize chip build flags further\r\n\r\n* Revert defines from file. MBEDTLS_CONFIG_FILE does not properly expand\r\n\r\n* Add support for includes and defines from file\r\n\r\n* Replace old sdk path references in platform.txt\r\n\r\n* use gcc-ar (#8013)\r\n\r\n* Makes F_CPU generic for all SoC (#8007)\r\n\r\nBased on CONFIG_ESP_DEFAULT_CPU_FREQ_MHZ that is correctly defined in the sdkconfig file for each SoC.\r\n\r\n* TIMER refactoring (#7904)\r\n\r\n* refactor using GPtimer\r\n\r\n* Updated timer HW test\r\n\r\n* fix examples\r\n\r\n* Add v2.0.7 in issue template (#7871)\r\n\r\n* refactor using GPtimer\r\n\r\n* Updated timer HW test\r\n\r\n* fix examples\r\n\r\n* Revert \"Add v2.0.7 in issue template (#7871)\"\r\n\r\nThis reverts commit fcc3b17d62ff57861f8913ca1f142fd5163b7457.\r\n\r\n* Update upload-artifact to v3 in HW CI\r\n\r\n* Revert \"Update upload-artifact to v3 in HW CI\"\r\n\r\nThis reverts commit 1ba228071718ba37c4e26d98db22f77b2a7364a6.\r\n\r\n* replace resolution with frequency\r\n\r\n* remove count_down option\r\n\r\n* countup removed from examples + header\r\n\r\n* Refactored timer object\r\n\r\n* code cleanup + examples and tests fixes\r\n\r\n* TimerAlarm fix\r\n\r\n---------\r\n\r\nCo-authored-by: Vojt\u011bch Barto\u0161ka <76958047+VojtechBartoska@users.noreply.github.com>\r\n\r\n* [Docs] ADC and Timer API Update (+some docs fixes) (#7906)\r\n\r\n* updated docs\r\n\r\n* remove hall sensor docs\r\n\r\nRemoved Hall sensor documentation as its no longer supported in IDF-5\r\n\r\n* Fixed ESPNow examples location in docs\r\n\r\n* Last timer refactored API + gpio small fix\r\n\r\n* AlarmWrite fix\r\n\r\n* Fixes APLL/PLL with RTC Frequency (#8025)\r\n\r\nlog_d() was displaying APLL for any SoC, but S3 and C3 has not such option, causing compilation errors.\r\n\r\n* Update IDF libs and fix OPI PSRAM on S3\r\n\r\n* Add setMode function HardwareSerial.c to set the esp32 uart mode for use with RS485 auto RTS (#7935)\r\n\r\n* Added setMode function to set the esp32 uart mode\r\n\r\nUsed to set the esp32 uart mode for use with RS485 Half Duplex and the auto RTS pin mode. This will set/clear the RTS pin output to control the RE/DE pin on most RS485 chips.\r\n\r\n* Add Success (bool) return in some functions\r\n\r\n* Add Success (bool) return code to some functions\r\n\r\n* Add Success (bool) return to some functions\r\n\r\n* Add Success (bool) return to some functions\r\n\r\n* Fix uartSetRxTimeout return type\r\n\r\n---------\r\n\r\nCo-authored-by: Rodrigo Garcia <rodrigo.garcia@espressif.com>\r\n\r\n* Add support for esp-elf-gdb\r\n\r\n* WFG Crashfix (#8044)\r\n\r\n* Update component libs\r\n\r\n* IDF release/v5.1 (#8061)\r\n\r\n* IDF release/v5.1 bb9200acec\r\n\r\n* Update Esp.cpp\r\n\r\n* IDF release/v5.1 420ebd208a\r\n\r\n* Update esp32-hal-psram.c\r\n\r\n* Switch SDK to be an external package\r\n\r\n* fix path (#8096)\r\n\r\n* Makes UART work at any APB Frequency (#8097)\r\n\r\nFixes HardwareSerial to work with IDF 5.1 on any CPU/APB Frequency (240MHz to 10MHZ), including user created low power modes.\r\n\r\n* Add required callbacks for TinyUSB DFU\r\n\r\n* Update version to 3.0.0\r\n\r\n* Add ESP.getCoreVersion() and update ESP.getChipModel()\r\n\r\n* Update timer hal for the latest 5.1\r\n\r\n* Use separate RX and TX buffer sizes in HTTP client\r\n\r\noptimizes download by allowing up to 4K packets to be received\r\n\r\n* Rename clock tree enum name in latest 5.1\r\n\r\n* ESP32-H4 support was removed in ESP-IDF v5.1\r\n\r\n* IDF release/v5.1 2004bf4e11 (#8165)\r\n\r\n* Deinit previous bus first (#8180)\r\n\r\n* TIMER - add timer_started flag, fix timerEnd() + timer HW test (#8135)\r\n\r\n* Add timer_started flag and stop before disable\r\n\r\n* Fix timer HW test\r\n\r\n* TOUCH - Peripheral manager implementation (#8129)\r\n\r\n* Touch periman implemented\r\n\r\n* Deinit previous bus first\r\n\r\n* LEDC Refactoring - Peripheral manager implemented (#8126)\r\n\r\n* LEDC periman implementation\r\n\r\n* Fix examples\r\n\r\n* Rework tone\r\n\r\n* Update ledc docs\r\n\r\n* fix missing bracket\r\n\r\n* Update analog funtions esp32-hal.h\r\n\r\n* Update CameraWebServer example\r\n\r\n* Fix HiFreq_ADC example\r\n\r\n* minor fixes - typos\r\n\r\n* Avoid calling tone/notone when tone already runs on dif. pin\r\n\r\n* Remove unused channels_resolution\r\n\r\n* GPIO - Peripheral manager implementation (#8179)\r\n\r\n* periman-implementation\r\n\r\n* fix RGB_BUILTIN and remove space\r\n\r\n* Enforces more consistency into Peripheral Manager (#8188)\r\n\r\n* Avoid log_i() message the first time a bus is assigned\r\n\r\n* Prevent operation with ESP32_BUS_TYPE_INIT\r\n\r\n* keeps coding style\r\n\r\n* do not print messages on INIT bus type\r\n\r\n* [Arduino Core 3.0.0] RMT IDF5.1 Refactoring (#7994)\r\n\r\n* RMT IDF5.1 refactoring\r\n\r\n* Fixes initial value setting\r\n\r\n* removed rmtRead() with user callback\r\n\r\n* simplify/remove Read data structure\r\n\r\n* Deep API simplification\r\n\r\n* fixes the examples\r\n\r\n* fix rmt.h\r\n\r\n* adds support to APB different frequencies\r\n\r\n* fixes CI and not defined RGB_BUILTIN\r\n\r\n* new RMT API and examples\r\n\r\n* fixing commentaties\r\n\r\n* Update esp32-hal-rgb-led.c\r\n\r\n* changes Filter API\r\n\r\n* Fixes example with Filter API\r\n\r\n* Update PlatformIO scripts for the upcoming 3.0 core (#8183)\r\n\r\n* Update PlatformIO scripts for the upcoming 3.0 core\r\n\r\n* Dynamically select proper framework-arduinoespressif32-libs package\r\n\r\nWith this change the dev-platform will be dynamically configured to\r\npull the latest .zip package with precompiled libraries from extracted from\r\npackage_esp32_index.template.json\r\n\r\n* free memory on detach (#8264)\r\n\r\n* SPI - Peripheral manager implementation  (#8255)\r\n\r\n* spi periman implementation\r\n\r\n* fix header file\r\n\r\n* remove unused struct\r\n\r\n* fix missing braces\r\n\r\n* Update esp32-hal-rmt.c (#8216)\r\n\r\nOptimizing Peripheral Manager Test\r\n\r\n* I2C - Peripheral manager implementation (#8220)\r\n\r\n* i2c-master periman initial commit\r\n\r\n* i2c-master make detachbus static + comment remove\r\n\r\n* i2c-slave periman implementation\r\n\r\n* SetPinBus to INIT on i2cDeinits\r\n\r\n* Fix slave pins deinit\r\n\r\n* remove dbg logs\r\n\r\n* set ret to ESP_FAIL instead of returning\r\n\r\n* Fix warnings in hal-spi caused by pariman transition\r\n\r\n* Update esptool.py to version 4.6\r\n\r\n* Add platform support for ESP_SR\r\n\r\n* Add USB Type and valid pin check to periman\r\n\r\n* replace bus with spi->num+1 (#8279)\r\n\r\n* Remove default pins from SPI HAL\r\n\r\n* Add commented out handlers for esptool.js in TinyUSB CDC\r\n\r\nFor future use\r\n\r\n* Add build defines for host os and fqbn (for debug purposes)\r\n\r\n* Provide proper memory caps total size\r\n\r\n* Update Esp.cpp\r\n\r\n* SDMMC - Peripheral manager implementation (#8289)\r\n\r\n* sdmmc periman implemented\r\n\r\n* save pins when SOC_SDMMC_USE_IOMUX\r\n\r\n* IDF release/v5.1 4bc762621d (#8292)\r\n\r\n* Adds missing pinMode (#8312)\r\n\r\n* Adds missing pinMode\r\n\r\nThe example code lacks a pinMode() to initialize the GPIO 0 (button). In Arduino Core 3.0.0, it prints an error message when trying to read a not initialized GPIO.\r\n\r\n* Update KeyboardLogout.ino\r\n\r\nAdds <buttonPin> to keep code standard\r\n\r\n* Update KeyboardReprogram.ino\r\n\r\nAdds <buttonPin> to keep code standard\r\n\r\n* LEDC Fade implementation (#8338)\r\n\r\n* fade API + pointer fixes\r\n\r\n* Add fade api\r\n\r\n* Add fade example\r\n\r\n* update ledc docs\r\n\r\n* remove unused variables\r\n\r\n* fix path to example\r\n\r\n* Adds USB to Peripheral Manager - Arduino Core 3.0.0 (#8335)\r\n\r\n* ETHERNET - Peripheral manager implementation (#8297)\r\n\r\n* Peripheral manager implemented\r\n\r\n* remove unused variable\r\n\r\n* Add all RMII pins\r\n\r\n* fix typo\r\n\r\n* Adds HardwareSerial to Peripheral Manager Arduino 3.0.0 (#8328)\r\n\r\n* Do not limit ETHERNET in periman to only ESP32. SPI is also an option\r\n\r\n* Initial support for ESP32-C6 (#8337)\r\n\r\n* Add checks for SOC defines (#8351)\r\n\r\n* Add checks for SOC defines\r\n\r\n* Add SoC checks to BLE library\r\n\r\n* fix i2c compilation error\r\n\r\n* fix wrong placement of include\r\n\r\n* add check to SPI library\r\n\r\n* add check to USB library\r\n\r\n* add checks to Wire library\r\n\r\n* Feature/esp32h2 support (#8373)\r\n\r\n* Initial support for ESP32H2\r\n\r\n* Additional changes for ESP32H2\r\n\r\n* Update libs for ESP32H2\r\n\r\n* Fix flashing on ESP32-H2\r\n\r\n* Fix GPIO Configs for ESP32-C6 and ESP32-H2\r\n\r\n* Update Timer test sketch\r\n\r\n* Fix upload flash parameters\r\n\r\n* Use ets_write_char_uart instead of ets_printf in log_printfv\r\n\r\n* Print full chip report when log level is sufficient (#8282)\r\n\r\n* ESP32-C3 does not have ets_write_char_uart\r\n\r\n* Fix BLE gap event name\r\n\r\n* HW Testing - Pytest update (#8389)\r\n\r\n* update tests requirements\r\n\r\n* remove already handled components\r\n\r\n* Update version of pytest\r\n\r\n* Add missing ESP32-H2 to hil.yml\r\n\r\n* Updated FreeRTOS names (#8418)\r\n\r\n* HW Testing -  ESP32-C6 + ESP32-H2 fixes (#8404)\r\n\r\n* add C6/H2 to tests cfg.json\r\n\r\n* remove ,\r\n\r\n* workflow runs-on runner by matrix\r\n\r\n* Add need for arduino tag to select runner\r\n\r\n* Add cryptography to requirements.txt\r\n\r\n* Removed duplicate TX1 define for H2 (#8402)\r\n\r\n* Fix broken examples\r\n\r\n* Fixes RMT filter & idle timing and setup (#8359)\r\n\r\n* Fixes Filter and Idle parameter to uint32\r\n\r\n* Fixes Filter and Idle setup\r\n\r\n* Fixes it to 5.1Libs branch\r\n\r\n* fix RMT CLK source and Filter API\r\n\r\n* fixes missing ;\r\n\r\n* fixes missing ;\r\n\r\n* fixes RMT example\r\n\r\n* IDF release/v5.1 a7b62bbcaf (#8438)\r\n\r\n* Add workflow to build executables from python scripts (#8290)\r\n\r\n* Add workflow to build executables from python scripts\r\n\r\n* Push binary to tools\r\n\r\n* Enable executable signing on Windows\r\n\r\n* Update get.py\r\n\r\n* Push binary to tools\r\n\r\n* Try with multiple files\r\n\r\n* Try more actions\r\n\r\n* Try powershell\r\n\r\n* Restore tools so they do not get rebuilt\r\n\r\n* Finalize scripts\r\n\r\n* Push binary to tools\r\n\r\n* App rollback should be after PSRAM is initialized\r\n\r\n* Correcting RX1 to GPIO4 and TX1 to GPIO5 to be consistent with documentation. Previous pin use works but is inconsistent with C6 docs.\r\n\r\n* Fixes Memory Leak (#8486)\r\n\r\n* fixes preprocessor test (#8485)\r\n\r\n* fixes preprocessor test\r\n\r\nWhen using `#define USE_SOFT_AP` \r\nChange\r\n`&& not USE_SOFT_AP` ==> `&& !defined(USE_SOFT_AP)`\r\n\r\n* Adds any BLE capable device in WiFiProv.ino\r\n\r\nRemoving ESP32 restriction for BLE Provisioning.\r\n\r\n* fix flash mode read out for C6\r\n\r\n* Add option for custom partitions without restrictions\r\n\r\n* SD_MMC update (#8298)\r\n\r\n* Updated SD_MMC lib and examples\r\n\r\n* Removed getter implementation and commented usage in examples\r\n\r\n* squashed updates\r\n\r\n* IDF release/v5.1 f0437b945f (#8599)\r\n\r\n* Update package_esp32_index.template.json\r\n\r\n* Fix printf format build error in BTAdvertisedDeviceSet.cpp\r\n\r\n---------\r\n\r\nCo-authored-by: Pedro Minatel <pedro.minatel@espressif.com>\r\nCo-authored-by: Rodrigo Garcia <rodrigo.garcia@espressif.com>\r\nCo-authored-by: Ha Thach <thach@tinyusb.org>\r\nCo-authored-by: Martin Turski <quiret@vfemail.net>\r\nCo-authored-by: raviypujar <raviypujar@gmail.com>\r\nCo-authored-by: Jason2866 <24528715+Jason2866@users.noreply.github.com>\r\nCo-authored-by: Tom\u00e1\u0161 Piln\u00fd <34927466+PilnyTomas@users.noreply.github.com>\r\nCo-authored-by: Jan Proch\u00e1zka <90197375+P-R-O-C-H-Y@users.noreply.github.com>\r\nCo-authored-by: Daniel Berlin <dberlin@dberlin.org>\r\nCo-authored-by: Nima Askari (\u0646\u06cc\u0645\u0627 \u0639\u0633\u06a9\u0631\u06cc) <nimaltd@yahoo.com>\r\nCo-authored-by: rtpmsys <106180646+rtpmsys@users.noreply.github.com>\r\nCo-authored-by: bytiful <55647551+bytiful@users.noreply.github.com>\r\nCo-authored-by: tmfarrington <tmfarrington@users.noreply.github.com>\r\nCo-authored-by: Krzysiek S <chris.streh@gmail.com>\r\nCo-authored-by: surt <carl.olsson@gmail.com>\r\nCo-authored-by: Max Scheffler <max.scheffler@pm.me>\r\nCo-authored-by: Clemens Kirchgatterer <clemens@1541.org>\r\nCo-authored-by: Peter Pan's Techland <twinkle-pirate@hotmail.com>\r\nCo-authored-by: Roman <programmeofficemilkyway@gmail.com>\r\nCo-authored-by: Eistee <Eistee82@users.noreply.github.com>\r\nCo-authored-by: David McCurley <44048235+mrengineer7777@users.noreply.github.com>\r\nCo-authored-by: Gaya3N25 <30388176+Gaya3N25@users.noreply.github.com>\r\nCo-authored-by: renebohne <rene.bohne@gmail.com>\r\nCo-authored-by: Oliv\u00e9r Rem\u00e9ny <25034625+remenyo@users.noreply.github.com>\r\nCo-authored-by: davidk88 <david.kotar@gmail.com>\r\nCo-authored-by: Vojt\u011bch Barto\u0161ka <76958047+VojtechBartoska@users.noreply.github.com>\r\nCo-authored-by: James Armstrong <jamesarmstrong3@me.com>\r\nCo-authored-by: Valerii Koval <valeros@users.noreply.github.com>\r\nCo-authored-by: Peter G. Jensen <root@petergjoel.dk>",
            "additions": 6,
            "deletions": 1,
            "change_type": "MODIFY",
            "diff": "@@ -5,6 +5,9 @@\n  *      Author: chegewara\n  */\n \n+#include \"soc/soc_caps.h\"\n+#if SOC_BLE_SUPPORTED\n+\n #include \"BLESecurity.h\"\n #include \"sdkconfig.h\"\n #if defined(CONFIG_BLUEDROID_ENABLED)\n@@ -112,4 +115,6 @@ char* BLESecurity::esp_key_type_to_str(esp_ble_key_type_t key_type) {\n \t}\n \treturn key_str;\n } // esp_key_type_to_str\n-#endif // CONFIG_BLUEDROID_ENABLED\n+\n+#endif /* CONFIG_BLUEDROID_ENABLED */\n+#endif /* SOC_BLE_SUPPORTED */\n",
            "comment_added_diff": {},
            "comment_deleted_diff": {
                "115": "#endif // CONFIG_BLUEDROID_ENABLED"
            },
            "comment_modified_diff": {}
        }
    ],
    "BLESecurity.h": [],
    "BLEService.cpp": [
        {
            "commit": "6f7a1ca76ada4d705d79ce863450c91349327a79",
            "timestamp": "2023-10-05T14:54:25+03:00",
            "author": "Me No Dev",
            "commit_message": "ESP-IDF v5.1 (#7733)\n\n* Initial changes to compile under ESP-IDF v5.1\r\n\r\n* Initial import for ESP-IDF v5.1 libs\r\n\r\n* Update toolchain\r\n\r\n* Update esp32-hal-psram.c\r\n\r\n* Add missing LDs\r\n\r\n* Update platform.txt\r\n\r\n* Stop some CI jobs, because they will always fail\r\n\r\n* Fix examples\r\n\r\n* Update app_httpd.cpp\r\n\r\n* Update ResetReason.ino\r\n\r\n* Warnings fixes\r\n\r\n* Added the example guideline and template (#7665)\r\n\r\n* Added the example guideline and template\r\n\r\n* PR review changes with some typos and grammar fixes\r\n\r\n* Changes according to the PR review\r\n\r\n* Added ESP32-S3 link to the datasheet (#7738)\r\n\r\n* Update HiFreq_ADC.ino\r\n\r\n* Replace periph_ctrl.h use because of deprecation\r\n\r\n* Replace esp_spi_flash.h use because of deprecation\r\n\r\n* Add includes to male mDNS::enableWorkstation compile\r\n\r\n* Fix ssl_client mbedtls_pk_parse_key callback\r\n\r\n* Update temperature sensor driver\r\n\r\n* Allow sketch_utils to compile with arduino-cli\r\n\r\n* Run CI with arduino-cli\r\n\r\n* Fix arduino-cli CI build on Windows\r\n\r\n* Refactor platform.txt to not use components installed through the board manager when running from git\r\n\r\n* Initial Peripheral Manager Implementation\r\n\r\n* Update SigmaDelta driver to use the new ESP-IDF driver API\r\n\r\n* Small improvements to peripheral manager and SigmaDelta\r\n\r\n* Remove deleted function from SigmaDelta header\r\n\r\n* Update DAC driver to use the new ESP-IDF driver API\r\n\r\n* Adds softAp(String) to make it compatible with ESP8266 (#7801)\r\n\r\n* Fix commentary (#7800)\r\n\r\nMinor fix based on observation done in https://github.com/espressif/arduino-esp32/issues/7795#issuecomment-1416868611\r\n\r\n* add adafruit new board feather esp32s2 reserve tft (#7794)\r\n\r\n* bugfix: add <stdint.h> for uint8_t to avoid compilation failure (GCC 11.2.0) (#7744)\r\n\r\n* Adding 3rd party boards for VALTRACK-V4-VTS-ESP32-C3 & VALTRACK-V4-MFW-ESP32-C3 (#7735)\r\n\r\n* Added VALTRACK-V4-VTS-ESP32-C3 board definition\r\n\r\nCreated pins_arduino.h & made changes to boards.txt with necessary changes\r\n\r\n* Modified the URL\r\n\r\n* Renamed json\r\n\r\n* renamed all auRL\r\n\r\n* Adding VALTRACK-V4 series board definitions\r\n\r\nAdded VALTRACK-V4-VTS-ESP32C3 & VALTRACK-V4-MFW-ESP32-C3 board variants\r\n\r\n* Adding VALTRACK-V4 series board definitions\r\n\r\nAdded VALTRACK-V4-VTS-ESP32C3 & VALTRACK-V4-MFW-ESP32-C3 board variants\r\n\r\n* Reverted package_esp32_index.template.json\r\n\r\nrestored package_esp32_index.template.json from edits\r\n\r\n* Reverted package_esp32_index.template.json\r\n\r\nAdded new line to package_esp32_index.template.json\r\n\r\n* Update Platformio CI (#7725)\r\n\r\n* WiFiClient example fix (#7711)\r\n\r\n* Modified WiFiClient example to use thingspeak instead of non-functionig sparkfun\r\n\r\n* Moved instructions to README\r\n\r\n* Fixed spelling\r\n\r\n* Added link to S3 datasheet\r\n\r\n---------\r\n\r\nCo-authored-by: Jan Proch\u00e1zka <90197375+P-R-O-C-H-Y@users.noreply.github.com>\r\n\r\n* Mirror update from Heltec repository (#7709)\r\n\r\nHeltec updated the I2C pins in https://github.com/Heltec-Aaron-Lee/WiFi_Kit_series/commit/b10f4bf85d13fd01be80dcdb0eb59e6a8c8ba19a\r\n\r\n* Fixes BLE data printing (#7699)\r\n\r\n* Fixes BLE data printing\r\n\r\nBLE data has no '\\0' terminator, therefore it can't be printed as a regular C string.\r\nThis fix just prints the BLE data based on its length.\r\n\r\n* Simplify printing to a single call\r\n\r\n* split menu options + lora_32_V3 fix (#7697)\r\n\r\n* Change header gaurd name (#7696)\r\n\r\n* Fix Name (#7691)\r\n\r\nWrong name in definitions.\r\n\r\n* Fix error in WiFiClient.cpp where the connect function fails for timeouts below 1 second (#7686)\r\n\r\n* Update WiFiClient.cpp\r\n\r\nThis change will allow specifying connect timeouts below 1 second. Without this change, if connect timeouts under 1 second are given, the connect defaults to 0ms and fails. \r\nThis will also allow timeouts in fractions of seconds, e.g. 1500ms. Without this change, connect timeouts are truncated to full second increments.\r\n\r\n* Make parameter timeout_ms clear\r\n\r\n* Change connection timeout_ms name for clarity\r\n\r\n---------\r\n\r\nCo-authored-by: Rodrigo Garcia <rodrigo.garcia@espressif.com>\r\n\r\n* fixed the function header (#7674)\r\n\r\n* fixed the function header\r\n\r\n* fixed function name and paramaters\r\n\r\n---------\r\n\r\nCo-authored-by: Jan Procha\u0301zka <90197375+P-R-O-C-H-Y@users.noreply.github.com>\r\n\r\n* Ticker fix solving #6155 (#7664)\r\n\r\n* Wrapped Ticker functions with #pragma disabling -Wcast-function-type\r\n\r\n* Revert \"Wrapped Ticker functions with #pragma disabling -Wcast-function-type\"\r\n\r\nThis reverts commit 160be7e67a10d01b6e44c4bf2521c0ccd6348976.\r\n\r\n* Fixed Ticker example\r\n\r\n* Modified Ticker example\r\n\r\n* Fixed LED_BUILTIN err for ESP32\r\n\r\n---------\r\n\r\nCo-authored-by: Jan Proch\u00e1zka <90197375+P-R-O-C-H-Y@users.noreply.github.com>\r\n\r\n* setPins fix ESP32 \"specified pins are not supported by this chip.\" (#7646)\r\n\r\n[ESP32: SDMMCFS::begin hardcodes the usage of slot 1, only check if the pins match slot 1 pins.]\r\n\r\nsetPins() was testing pins D1, D2 and D3 all against D1 ... fine in 1 pin mode when all are -1 not so much if you're trying to get 4 pin mode working.\r\nI now see this function doesn't really do anything on the ESP32...accept now correctly checks that you are trying to use the slot 1 pins.\r\n\r\nCo-authored-by: Jan Proch\u00e1zka <90197375+P-R-O-C-H-Y@users.noreply.github.com>\r\n\r\n* Allow passing IP as connect method parameter in WiFiClientSecure and skip unnecessary host-ip conversions (#7643)\r\n\r\n* Add LED_BUILTIN* definitions and initialization for LEDs to stop them floating. (#7636)\r\n\r\nCo-authored-by: Rodrigo Garcia <rodrigo.garcia@espressif.com>\r\n\r\n* Expand path to tinuf2 image when checking existence in platformio-build.py (#7631)\r\n\r\n* Expand path to tinuf2 image when checking existence\r\n\r\n* More isFiles fixed\r\n\r\n* Remove (useless) trailing semicolon from Print.cpp (#7622)\r\n\r\n* ADD: New variant Edgebox-ESP-100 (#7771)\r\n\r\n* ADD: New variant Edgebox-ESP-100\r\n\r\n* FIX: Edgebox-ESP-100 Board.txt usb mode option change back to default value as ESP32S3\r\n\r\n* Add Crabik Slot ESP32-S3 board (#7790)\r\n\r\n* Added Crabik Slot ESP32-S3\r\n\r\n* Adding CPU frequency settings and removing excess from partition scheme settings\r\n\r\n* new variant LilyGO T-Display-S3 (#7763)\r\n\r\n* new variant LilyGO T-Display-S3\r\n\r\nhttps://github.com/Xinyuan-LilyGO/T-Display-S3\r\n\r\n* Add boards.txt definition\r\n\r\n---------\r\n\r\nCo-authored-by: Me No Dev <me-no-dev@users.noreply.github.com>\r\n\r\n* Update get.py to support Apple ARM64\r\n\r\n* Update package_esp32_index.template.json\r\n\r\n* WString Return bool (#7774)\r\n\r\n* Add Roboheart Hercules development board to the esp32-core (#7672)\r\n\r\n* added Roboheart Hercules pin definitions and board.txt entries\r\n\r\n* added package_roboheat.json for prototyping\r\n\r\n* Roboheart Hercules pins\r\n\r\n* Updated the pins\r\n\r\n* Delete package_roboheart.json\r\n\r\n* Requested changes\r\n\r\n---------\r\n\r\nCo-authored-by: renebohne <rene.bohne@gmail.com>\r\n\r\n* Reword \"ESP-IDF as Component\" (#7812)\r\n\r\nI think \"Arduino as an ESP-IDF component\" or just \"As ESP-IDF component\" instead of  \"ESP-IDF as Component\" is more correct way to name the link.\r\n\r\n1. \"ESP-IDF as Component\" would imply that ESP-IDF is some sort of library for Arduino, which is (IMO) misleading, because it's true the other way around.\r\n2. It's written as \"Arduino as an ESP-IDF component\" on the webpage it points to as well.\r\n\r\n- Also I removed the capitalization from \"Component\" as I have not found a reason why is it capitalized.\r\n\r\n* add new board Adafruit Feather ESP32-S3 Reverse TFT (#7811)\r\n\r\n* Multi threading examples (tasks, queues, semaphores, mutexes) (#7660)\r\n\r\n* Moved and renamed example ESP32/FreeRTOS to MultiThreading/BasicMultiThreading\r\n\r\n* Added dummy files\r\n\r\n* Modified original example\r\n\r\n* Fixed BasicMultiThreading.ino\r\n\r\n* Added Example demonstrating use of queues\r\n\r\n* Extended info in BasicMultiThreading\r\n\r\n* Renamed Queues to singular Queue\r\n\r\n* Added Mutex example\r\n\r\n* Added Semaphore example\r\n\r\n* Moved info from example to README\r\n\r\n* Moved doc from Mutex to README\r\n\r\n* Added Queue README\r\n\r\n* Removed unecesary text\r\n\r\n* Fixed grammar\r\n\r\n* Increased stack size for Sempahore example\r\n\r\n* Added headers into .ino files\r\n\r\n* Added word Example at the end of title in README\r\n\r\n* removed unused line\r\n\r\n* Added forgotten README\r\n\r\n* Modified BasicMultiThreading example\r\n\r\n* Added missing S3 entry in README\r\n\r\n* moved location\r\n\r\n* Update ESP-IDF libs\r\n\r\n* Update CMakeLists.txt\r\n\r\n* Update esptool to v4.4\r\n\r\n* Add function timerAttachInterruptFlag (#7809)\r\n\r\n* Update esptool to v4.5\r\n\r\n* ADC refactoring (#7827)\r\n\r\n* Adc refactored + periman implementation\r\n\r\nPeripheral manager still needs to be checked if the implementation is right.\r\n\r\n* switched to working solution for milivolts read\r\n\r\n* Periman detachbus fix\r\n\r\n* coding style\r\n\r\n* fix CI warnings\r\n\r\n* fix FreeRTOS example\r\n\r\n* Update ETH.cpp\r\n\r\n* Update FunctionalInterruptStruct.ino\r\n\r\n* Update package_esp32_index.template.json\r\n\r\n* Update package_esp32_index.template.json\r\n\r\n* Fixes for the latest IDF v5.1\r\n\r\n* update esp-idf libs and toolchain\r\n\r\n* Turn OFF auto crystal frequency for ESP32 (needed by TWAI)\r\n\r\n* Update examples\r\n\r\n* Switch build to mostly use flags from files\r\n\r\nIncludes can not be done this way\r\n\r\n* Reorganize flag files\r\n\r\n* Optimize chip build flags further\r\n\r\n* Revert defines from file. MBEDTLS_CONFIG_FILE does not properly expand\r\n\r\n* Add support for includes and defines from file\r\n\r\n* Replace old sdk path references in platform.txt\r\n\r\n* use gcc-ar (#8013)\r\n\r\n* Makes F_CPU generic for all SoC (#8007)\r\n\r\nBased on CONFIG_ESP_DEFAULT_CPU_FREQ_MHZ that is correctly defined in the sdkconfig file for each SoC.\r\n\r\n* TIMER refactoring (#7904)\r\n\r\n* refactor using GPtimer\r\n\r\n* Updated timer HW test\r\n\r\n* fix examples\r\n\r\n* Add v2.0.7 in issue template (#7871)\r\n\r\n* refactor using GPtimer\r\n\r\n* Updated timer HW test\r\n\r\n* fix examples\r\n\r\n* Revert \"Add v2.0.7 in issue template (#7871)\"\r\n\r\nThis reverts commit fcc3b17d62ff57861f8913ca1f142fd5163b7457.\r\n\r\n* Update upload-artifact to v3 in HW CI\r\n\r\n* Revert \"Update upload-artifact to v3 in HW CI\"\r\n\r\nThis reverts commit 1ba228071718ba37c4e26d98db22f77b2a7364a6.\r\n\r\n* replace resolution with frequency\r\n\r\n* remove count_down option\r\n\r\n* countup removed from examples + header\r\n\r\n* Refactored timer object\r\n\r\n* code cleanup + examples and tests fixes\r\n\r\n* TimerAlarm fix\r\n\r\n---------\r\n\r\nCo-authored-by: Vojt\u011bch Barto\u0161ka <76958047+VojtechBartoska@users.noreply.github.com>\r\n\r\n* [Docs] ADC and Timer API Update (+some docs fixes) (#7906)\r\n\r\n* updated docs\r\n\r\n* remove hall sensor docs\r\n\r\nRemoved Hall sensor documentation as its no longer supported in IDF-5\r\n\r\n* Fixed ESPNow examples location in docs\r\n\r\n* Last timer refactored API + gpio small fix\r\n\r\n* AlarmWrite fix\r\n\r\n* Fixes APLL/PLL with RTC Frequency (#8025)\r\n\r\nlog_d() was displaying APLL for any SoC, but S3 and C3 has not such option, causing compilation errors.\r\n\r\n* Update IDF libs and fix OPI PSRAM on S3\r\n\r\n* Add setMode function HardwareSerial.c to set the esp32 uart mode for use with RS485 auto RTS (#7935)\r\n\r\n* Added setMode function to set the esp32 uart mode\r\n\r\nUsed to set the esp32 uart mode for use with RS485 Half Duplex and the auto RTS pin mode. This will set/clear the RTS pin output to control the RE/DE pin on most RS485 chips.\r\n\r\n* Add Success (bool) return in some functions\r\n\r\n* Add Success (bool) return code to some functions\r\n\r\n* Add Success (bool) return to some functions\r\n\r\n* Add Success (bool) return to some functions\r\n\r\n* Fix uartSetRxTimeout return type\r\n\r\n---------\r\n\r\nCo-authored-by: Rodrigo Garcia <rodrigo.garcia@espressif.com>\r\n\r\n* Add support for esp-elf-gdb\r\n\r\n* WFG Crashfix (#8044)\r\n\r\n* Update component libs\r\n\r\n* IDF release/v5.1 (#8061)\r\n\r\n* IDF release/v5.1 bb9200acec\r\n\r\n* Update Esp.cpp\r\n\r\n* IDF release/v5.1 420ebd208a\r\n\r\n* Update esp32-hal-psram.c\r\n\r\n* Switch SDK to be an external package\r\n\r\n* fix path (#8096)\r\n\r\n* Makes UART work at any APB Frequency (#8097)\r\n\r\nFixes HardwareSerial to work with IDF 5.1 on any CPU/APB Frequency (240MHz to 10MHZ), including user created low power modes.\r\n\r\n* Add required callbacks for TinyUSB DFU\r\n\r\n* Update version to 3.0.0\r\n\r\n* Add ESP.getCoreVersion() and update ESP.getChipModel()\r\n\r\n* Update timer hal for the latest 5.1\r\n\r\n* Use separate RX and TX buffer sizes in HTTP client\r\n\r\noptimizes download by allowing up to 4K packets to be received\r\n\r\n* Rename clock tree enum name in latest 5.1\r\n\r\n* ESP32-H4 support was removed in ESP-IDF v5.1\r\n\r\n* IDF release/v5.1 2004bf4e11 (#8165)\r\n\r\n* Deinit previous bus first (#8180)\r\n\r\n* TIMER - add timer_started flag, fix timerEnd() + timer HW test (#8135)\r\n\r\n* Add timer_started flag and stop before disable\r\n\r\n* Fix timer HW test\r\n\r\n* TOUCH - Peripheral manager implementation (#8129)\r\n\r\n* Touch periman implemented\r\n\r\n* Deinit previous bus first\r\n\r\n* LEDC Refactoring - Peripheral manager implemented (#8126)\r\n\r\n* LEDC periman implementation\r\n\r\n* Fix examples\r\n\r\n* Rework tone\r\n\r\n* Update ledc docs\r\n\r\n* fix missing bracket\r\n\r\n* Update analog funtions esp32-hal.h\r\n\r\n* Update CameraWebServer example\r\n\r\n* Fix HiFreq_ADC example\r\n\r\n* minor fixes - typos\r\n\r\n* Avoid calling tone/notone when tone already runs on dif. pin\r\n\r\n* Remove unused channels_resolution\r\n\r\n* GPIO - Peripheral manager implementation (#8179)\r\n\r\n* periman-implementation\r\n\r\n* fix RGB_BUILTIN and remove space\r\n\r\n* Enforces more consistency into Peripheral Manager (#8188)\r\n\r\n* Avoid log_i() message the first time a bus is assigned\r\n\r\n* Prevent operation with ESP32_BUS_TYPE_INIT\r\n\r\n* keeps coding style\r\n\r\n* do not print messages on INIT bus type\r\n\r\n* [Arduino Core 3.0.0] RMT IDF5.1 Refactoring (#7994)\r\n\r\n* RMT IDF5.1 refactoring\r\n\r\n* Fixes initial value setting\r\n\r\n* removed rmtRead() with user callback\r\n\r\n* simplify/remove Read data structure\r\n\r\n* Deep API simplification\r\n\r\n* fixes the examples\r\n\r\n* fix rmt.h\r\n\r\n* adds support to APB different frequencies\r\n\r\n* fixes CI and not defined RGB_BUILTIN\r\n\r\n* new RMT API and examples\r\n\r\n* fixing commentaties\r\n\r\n* Update esp32-hal-rgb-led.c\r\n\r\n* changes Filter API\r\n\r\n* Fixes example with Filter API\r\n\r\n* Update PlatformIO scripts for the upcoming 3.0 core (#8183)\r\n\r\n* Update PlatformIO scripts for the upcoming 3.0 core\r\n\r\n* Dynamically select proper framework-arduinoespressif32-libs package\r\n\r\nWith this change the dev-platform will be dynamically configured to\r\npull the latest .zip package with precompiled libraries from extracted from\r\npackage_esp32_index.template.json\r\n\r\n* free memory on detach (#8264)\r\n\r\n* SPI - Peripheral manager implementation  (#8255)\r\n\r\n* spi periman implementation\r\n\r\n* fix header file\r\n\r\n* remove unused struct\r\n\r\n* fix missing braces\r\n\r\n* Update esp32-hal-rmt.c (#8216)\r\n\r\nOptimizing Peripheral Manager Test\r\n\r\n* I2C - Peripheral manager implementation (#8220)\r\n\r\n* i2c-master periman initial commit\r\n\r\n* i2c-master make detachbus static + comment remove\r\n\r\n* i2c-slave periman implementation\r\n\r\n* SetPinBus to INIT on i2cDeinits\r\n\r\n* Fix slave pins deinit\r\n\r\n* remove dbg logs\r\n\r\n* set ret to ESP_FAIL instead of returning\r\n\r\n* Fix warnings in hal-spi caused by pariman transition\r\n\r\n* Update esptool.py to version 4.6\r\n\r\n* Add platform support for ESP_SR\r\n\r\n* Add USB Type and valid pin check to periman\r\n\r\n* replace bus with spi->num+1 (#8279)\r\n\r\n* Remove default pins from SPI HAL\r\n\r\n* Add commented out handlers for esptool.js in TinyUSB CDC\r\n\r\nFor future use\r\n\r\n* Add build defines for host os and fqbn (for debug purposes)\r\n\r\n* Provide proper memory caps total size\r\n\r\n* Update Esp.cpp\r\n\r\n* SDMMC - Peripheral manager implementation (#8289)\r\n\r\n* sdmmc periman implemented\r\n\r\n* save pins when SOC_SDMMC_USE_IOMUX\r\n\r\n* IDF release/v5.1 4bc762621d (#8292)\r\n\r\n* Adds missing pinMode (#8312)\r\n\r\n* Adds missing pinMode\r\n\r\nThe example code lacks a pinMode() to initialize the GPIO 0 (button). In Arduino Core 3.0.0, it prints an error message when trying to read a not initialized GPIO.\r\n\r\n* Update KeyboardLogout.ino\r\n\r\nAdds <buttonPin> to keep code standard\r\n\r\n* Update KeyboardReprogram.ino\r\n\r\nAdds <buttonPin> to keep code standard\r\n\r\n* LEDC Fade implementation (#8338)\r\n\r\n* fade API + pointer fixes\r\n\r\n* Add fade api\r\n\r\n* Add fade example\r\n\r\n* update ledc docs\r\n\r\n* remove unused variables\r\n\r\n* fix path to example\r\n\r\n* Adds USB to Peripheral Manager - Arduino Core 3.0.0 (#8335)\r\n\r\n* ETHERNET - Peripheral manager implementation (#8297)\r\n\r\n* Peripheral manager implemented\r\n\r\n* remove unused variable\r\n\r\n* Add all RMII pins\r\n\r\n* fix typo\r\n\r\n* Adds HardwareSerial to Peripheral Manager Arduino 3.0.0 (#8328)\r\n\r\n* Do not limit ETHERNET in periman to only ESP32. SPI is also an option\r\n\r\n* Initial support for ESP32-C6 (#8337)\r\n\r\n* Add checks for SOC defines (#8351)\r\n\r\n* Add checks for SOC defines\r\n\r\n* Add SoC checks to BLE library\r\n\r\n* fix i2c compilation error\r\n\r\n* fix wrong placement of include\r\n\r\n* add check to SPI library\r\n\r\n* add check to USB library\r\n\r\n* add checks to Wire library\r\n\r\n* Feature/esp32h2 support (#8373)\r\n\r\n* Initial support for ESP32H2\r\n\r\n* Additional changes for ESP32H2\r\n\r\n* Update libs for ESP32H2\r\n\r\n* Fix flashing on ESP32-H2\r\n\r\n* Fix GPIO Configs for ESP32-C6 and ESP32-H2\r\n\r\n* Update Timer test sketch\r\n\r\n* Fix upload flash parameters\r\n\r\n* Use ets_write_char_uart instead of ets_printf in log_printfv\r\n\r\n* Print full chip report when log level is sufficient (#8282)\r\n\r\n* ESP32-C3 does not have ets_write_char_uart\r\n\r\n* Fix BLE gap event name\r\n\r\n* HW Testing - Pytest update (#8389)\r\n\r\n* update tests requirements\r\n\r\n* remove already handled components\r\n\r\n* Update version of pytest\r\n\r\n* Add missing ESP32-H2 to hil.yml\r\n\r\n* Updated FreeRTOS names (#8418)\r\n\r\n* HW Testing -  ESP32-C6 + ESP32-H2 fixes (#8404)\r\n\r\n* add C6/H2 to tests cfg.json\r\n\r\n* remove ,\r\n\r\n* workflow runs-on runner by matrix\r\n\r\n* Add need for arduino tag to select runner\r\n\r\n* Add cryptography to requirements.txt\r\n\r\n* Removed duplicate TX1 define for H2 (#8402)\r\n\r\n* Fix broken examples\r\n\r\n* Fixes RMT filter & idle timing and setup (#8359)\r\n\r\n* Fixes Filter and Idle parameter to uint32\r\n\r\n* Fixes Filter and Idle setup\r\n\r\n* Fixes it to 5.1Libs branch\r\n\r\n* fix RMT CLK source and Filter API\r\n\r\n* fixes missing ;\r\n\r\n* fixes missing ;\r\n\r\n* fixes RMT example\r\n\r\n* IDF release/v5.1 a7b62bbcaf (#8438)\r\n\r\n* Add workflow to build executables from python scripts (#8290)\r\n\r\n* Add workflow to build executables from python scripts\r\n\r\n* Push binary to tools\r\n\r\n* Enable executable signing on Windows\r\n\r\n* Update get.py\r\n\r\n* Push binary to tools\r\n\r\n* Try with multiple files\r\n\r\n* Try more actions\r\n\r\n* Try powershell\r\n\r\n* Restore tools so they do not get rebuilt\r\n\r\n* Finalize scripts\r\n\r\n* Push binary to tools\r\n\r\n* App rollback should be after PSRAM is initialized\r\n\r\n* Correcting RX1 to GPIO4 and TX1 to GPIO5 to be consistent with documentation. Previous pin use works but is inconsistent with C6 docs.\r\n\r\n* Fixes Memory Leak (#8486)\r\n\r\n* fixes preprocessor test (#8485)\r\n\r\n* fixes preprocessor test\r\n\r\nWhen using `#define USE_SOFT_AP` \r\nChange\r\n`&& not USE_SOFT_AP` ==> `&& !defined(USE_SOFT_AP)`\r\n\r\n* Adds any BLE capable device in WiFiProv.ino\r\n\r\nRemoving ESP32 restriction for BLE Provisioning.\r\n\r\n* fix flash mode read out for C6\r\n\r\n* Add option for custom partitions without restrictions\r\n\r\n* SD_MMC update (#8298)\r\n\r\n* Updated SD_MMC lib and examples\r\n\r\n* Removed getter implementation and commented usage in examples\r\n\r\n* squashed updates\r\n\r\n* IDF release/v5.1 f0437b945f (#8599)\r\n\r\n* Update package_esp32_index.template.json\r\n\r\n* Fix printf format build error in BTAdvertisedDeviceSet.cpp\r\n\r\n---------\r\n\r\nCo-authored-by: Pedro Minatel <pedro.minatel@espressif.com>\r\nCo-authored-by: Rodrigo Garcia <rodrigo.garcia@espressif.com>\r\nCo-authored-by: Ha Thach <thach@tinyusb.org>\r\nCo-authored-by: Martin Turski <quiret@vfemail.net>\r\nCo-authored-by: raviypujar <raviypujar@gmail.com>\r\nCo-authored-by: Jason2866 <24528715+Jason2866@users.noreply.github.com>\r\nCo-authored-by: Tom\u00e1\u0161 Piln\u00fd <34927466+PilnyTomas@users.noreply.github.com>\r\nCo-authored-by: Jan Proch\u00e1zka <90197375+P-R-O-C-H-Y@users.noreply.github.com>\r\nCo-authored-by: Daniel Berlin <dberlin@dberlin.org>\r\nCo-authored-by: Nima Askari (\u0646\u06cc\u0645\u0627 \u0639\u0633\u06a9\u0631\u06cc) <nimaltd@yahoo.com>\r\nCo-authored-by: rtpmsys <106180646+rtpmsys@users.noreply.github.com>\r\nCo-authored-by: bytiful <55647551+bytiful@users.noreply.github.com>\r\nCo-authored-by: tmfarrington <tmfarrington@users.noreply.github.com>\r\nCo-authored-by: Krzysiek S <chris.streh@gmail.com>\r\nCo-authored-by: surt <carl.olsson@gmail.com>\r\nCo-authored-by: Max Scheffler <max.scheffler@pm.me>\r\nCo-authored-by: Clemens Kirchgatterer <clemens@1541.org>\r\nCo-authored-by: Peter Pan's Techland <twinkle-pirate@hotmail.com>\r\nCo-authored-by: Roman <programmeofficemilkyway@gmail.com>\r\nCo-authored-by: Eistee <Eistee82@users.noreply.github.com>\r\nCo-authored-by: David McCurley <44048235+mrengineer7777@users.noreply.github.com>\r\nCo-authored-by: Gaya3N25 <30388176+Gaya3N25@users.noreply.github.com>\r\nCo-authored-by: renebohne <rene.bohne@gmail.com>\r\nCo-authored-by: Oliv\u00e9r Rem\u00e9ny <25034625+remenyo@users.noreply.github.com>\r\nCo-authored-by: davidk88 <david.kotar@gmail.com>\r\nCo-authored-by: Vojt\u011bch Barto\u0161ka <76958047+VojtechBartoska@users.noreply.github.com>\r\nCo-authored-by: James Armstrong <jamesarmstrong3@me.com>\r\nCo-authored-by: Valerii Koval <valeros@users.noreply.github.com>\r\nCo-authored-by: Peter G. Jensen <root@petergjoel.dk>",
            "additions": 5,
            "deletions": 1,
            "change_type": "MODIFY",
            "diff": "@@ -7,6 +7,9 @@\n \n // A service is identified by a UUID.  A service is also the container for one or more characteristics.\n \n+#include \"soc/soc_caps.h\"\n+#if SOC_BLE_SUPPORTED\n+\n #include \"sdkconfig.h\"\n #if defined(CONFIG_BLUEDROID_ENABLED)\n #include <esp_err.h>\n@@ -410,4 +413,5 @@ BLEServer* BLEService::getServer() {\n \treturn m_pServer;\n } // getServer\n \n-#endif // CONFIG_BLUEDROID_ENABLED\n+#endif /* CONFIG_BLUEDROID_ENABLED */\n+#endif /* SOC_BLE_SUPPORTED */\n",
            "comment_added_diff": {},
            "comment_deleted_diff": {
                "413": "#endif // CONFIG_BLUEDROID_ENABLED"
            },
            "comment_modified_diff": {}
        }
    ],
    "BLEService.h": [],
    "BLEServiceMap.cpp": [],
    "BLEUUID.cpp": [
        {
            "commit": "822f252b353cfd808c77c9bc8369bc0cb4e0b5be",
            "timestamp": "2023-10-06T15:50:11+03:00",
            "author": "Me No Dev",
            "commit_message": "BLE upgrades (#8724)\n\n* Renamed library description\r\n\r\n* Updated Eddystone URL (not complete)\r\n\r\n* Updated Eddystone URL\r\n\r\n* Updated Eddystone classes and beacon scanner\r\n\r\n* Renamed examples - removing prefix BLE_\r\n\r\n* Renamed Beacon_Scanner\r\n\r\n* Updated TLM\r\n\r\n* Changed std::string to Arduino String\r\n\r\n* More std::string -> String\r\n\r\n* Changed String in forgotten file\r\n\r\n* Changed .data to .c_str\r\n\r\n* Reverting single String type change\r\n\r\n* Few more fixes related to the String transition\r\n\r\n* Fixed URL and Utils error\r\n\r\n* Added and modified compatibility safeguards for BLE5 examples\r\n\r\n* Added #include WString.h\r\n\r\n* Fixed Beacon_Scanner\r\n\r\n* Remove commented include\r\n\r\nCo-authored-by: Lucas Saavedra Vaz <lucassvaz@yahoo.com.br>\r\n\r\n---------\r\n\r\nCo-authored-by: Tomas Pilny <tomas.pilny@espressif.com>\r\nCo-authored-by: Lucas Saavedra Vaz <lucassvaz@yahoo.com.br>",
            "additions": 18,
            "deletions": 11,
            "change_type": "MODIFY",
            "diff": "@@ -66,7 +66,8 @@ static void memrcpy(uint8_t* target, uint8_t* source, uint32_t size) {\n  *\n  * @param [in] value The string to build a UUID from.\n  */\n-BLEUUID::BLEUUID(std::string value) {\n+BLEUUID::BLEUUID(String value) {\n+\t//Serial.printf(\"BLEUUID constructor from String=\\\"%s\\\"\\n\", value.c_str());\n \tm_valueSet = true;\n \tif (value.length() == 4) {\n \t\tm_uuid.len         = ESP_UUID_LEN_16;\n@@ -94,11 +95,12 @@ BLEUUID::BLEUUID(std::string value) {\n \t\t\ti+=2;\n \t\t}\t\t\n \t}\n-\telse if (value.length() == 16) {  // how we can have 16 byte length string reprezenting 128 bit uuid??? needs to be investigated (lack of time)\n+\telse if (value.length() == 16) {  // How we can have 16 byte length string representing 128 bit uuid??? needs to be investigated (lack of time) - maybe raw data encoded as String (128b==16B)?\n \t\tm_uuid.len = ESP_UUID_LEN_128;\n-\t\tmemrcpy(m_uuid.uuid.uuid128, (uint8_t*)value.data(), 16);\n+\t\tmemrcpy(m_uuid.uuid.uuid128, (uint8_t*)value.c_str(), 16);\n \t}\n \telse if (value.length() == 36) {\n+\t\t//log_d(\"36 characters:\");\n \t\t// If the length of the string is 36 bytes then we will assume it is a long hex string in\n \t\t// UUID format.\n \t\tm_uuid.len = ESP_UUID_LEN_128;\n@@ -119,8 +121,13 @@ BLEUUID::BLEUUID(std::string value) {\n \t\tlog_e(\"ERROR: UUID value not 2, 4, 16 or 36 bytes\");\n \t\tm_valueSet = false;\n \t}\n-} //BLEUUID(std::string)\n+} //BLEUUID(String)\n \n+/*\n+BLEUUID::BLEUUID(String value) {\n+\tthis.BLEUUID(String(value.c_str(), value.length()));\n+} //BLEUUID(String)\n+*/\n \n /**\n  * @brief Create a UUID from 16 bytes of memory.\n@@ -248,7 +255,7 @@ bool BLEUUID::equals(BLEUUID uuid) {\n  * NNNNNNNN\n  * <UUID>\n  */\n-BLEUUID BLEUUID::fromString(std::string _uuid) {\n+BLEUUID BLEUUID::fromString(String _uuid) {\n \tuint8_t start = 0;\n \tif (strstr(_uuid.c_str(), \"0x\") != nullptr) { // If the string starts with 0x, skip those characters.\n \t\tstart = 2;\n@@ -256,10 +263,10 @@ BLEUUID BLEUUID::fromString(std::string _uuid) {\n \tuint8_t len = _uuid.length() - start; // Calculate the length of the string we are going to use.\n \n \tif(len == 4) {\n-\t\tuint16_t x = strtoul(_uuid.substr(start, len).c_str(), NULL, 16);\n+\t\tuint16_t x = strtoul(_uuid.substring(start, start+len).c_str(), NULL, 16);\n \t\treturn BLEUUID(x);\n \t} else if (len == 8) {\n-\t\tuint32_t x = strtoul(_uuid.substr(start, len).c_str(), NULL, 16);\n+\t\tuint32_t x = strtoul(_uuid.substring(start, start+len).c_str(), NULL, 16);\n \t\treturn BLEUUID(x);\n \t} else if (len == 36) {\n \t\treturn BLEUUID(_uuid);\n@@ -350,20 +357,20 @@ BLEUUID BLEUUID::to128() {\n  *\n  * @return A string representation of the UUID.\n  */\n-std::string BLEUUID::toString() {\n+String BLEUUID::toString() {\n \tif (!m_valueSet) return \"<NULL>\";   // If we have no value, nothing to format.\n \t// If the UUIDs are 16 or 32 bit, pad correctly.\n \n \tif (m_uuid.len == ESP_UUID_LEN_16) {  // If the UUID is 16bit, pad correctly.\n \t\tchar hex[9];\n \t\tsnprintf(hex, sizeof(hex), \"%08x\", m_uuid.uuid.uuid16);\n-\t\treturn std::string(hex) + \"-0000-1000-8000-00805f9b34fb\";\n+\t\treturn String(hex) + \"-0000-1000-8000-00805f9b34fb\";\n \t} // End 16bit UUID\n \n \tif (m_uuid.len == ESP_UUID_LEN_32) {  // If the UUID is 32bit, pad correctly.\n \t\tchar hex[9];\n \t\tsnprintf(hex, sizeof(hex), \"%08lx\", m_uuid.uuid.uuid32);\n-\t\treturn std::string(hex) + \"-0000-1000-8000-00805f9b34fb\";\n+\t\treturn String(hex) + \"-0000-1000-8000-00805f9b34fb\";\n \t} // End 32bit UUID\n \n \t// The UUID is not 16bit or 32bit which means that it is 128bit.\n@@ -381,7 +388,7 @@ std::string BLEUUID::toString() {\n \t\t\tm_uuid.uuid.uuid128[5], m_uuid.uuid.uuid128[4],\n \t\t\tm_uuid.uuid.uuid128[3], m_uuid.uuid.uuid128[2],\n \t\t\tm_uuid.uuid.uuid128[1], m_uuid.uuid.uuid128[0]);\n-\tstd::string res(hex);\n+\tString res(hex);\n \tfree(hex);\n \treturn res;\n } // toString\n",
            "comment_added_diff": {
                "98": "\telse if (value.length() == 16) {  // How we can have 16 byte length string representing 128 bit uuid??? needs to be investigated (lack of time) - maybe raw data encoded as String (128b==16B)?"
            },
            "comment_deleted_diff": {
                "97": "\telse if (value.length() == 16) {  // how we can have 16 byte length string reprezenting 128 bit uuid??? needs to be investigated (lack of time)"
            },
            "comment_modified_diff": {}
        }
    ],
    "BLEUUID.h": [],
    "BLEUtils.cpp": [
        {
            "commit": "6f7a1ca76ada4d705d79ce863450c91349327a79",
            "timestamp": "2023-10-05T14:54:25+03:00",
            "author": "Me No Dev",
            "commit_message": "ESP-IDF v5.1 (#7733)\n\n* Initial changes to compile under ESP-IDF v5.1\r\n\r\n* Initial import for ESP-IDF v5.1 libs\r\n\r\n* Update toolchain\r\n\r\n* Update esp32-hal-psram.c\r\n\r\n* Add missing LDs\r\n\r\n* Update platform.txt\r\n\r\n* Stop some CI jobs, because they will always fail\r\n\r\n* Fix examples\r\n\r\n* Update app_httpd.cpp\r\n\r\n* Update ResetReason.ino\r\n\r\n* Warnings fixes\r\n\r\n* Added the example guideline and template (#7665)\r\n\r\n* Added the example guideline and template\r\n\r\n* PR review changes with some typos and grammar fixes\r\n\r\n* Changes according to the PR review\r\n\r\n* Added ESP32-S3 link to the datasheet (#7738)\r\n\r\n* Update HiFreq_ADC.ino\r\n\r\n* Replace periph_ctrl.h use because of deprecation\r\n\r\n* Replace esp_spi_flash.h use because of deprecation\r\n\r\n* Add includes to male mDNS::enableWorkstation compile\r\n\r\n* Fix ssl_client mbedtls_pk_parse_key callback\r\n\r\n* Update temperature sensor driver\r\n\r\n* Allow sketch_utils to compile with arduino-cli\r\n\r\n* Run CI with arduino-cli\r\n\r\n* Fix arduino-cli CI build on Windows\r\n\r\n* Refactor platform.txt to not use components installed through the board manager when running from git\r\n\r\n* Initial Peripheral Manager Implementation\r\n\r\n* Update SigmaDelta driver to use the new ESP-IDF driver API\r\n\r\n* Small improvements to peripheral manager and SigmaDelta\r\n\r\n* Remove deleted function from SigmaDelta header\r\n\r\n* Update DAC driver to use the new ESP-IDF driver API\r\n\r\n* Adds softAp(String) to make it compatible with ESP8266 (#7801)\r\n\r\n* Fix commentary (#7800)\r\n\r\nMinor fix based on observation done in https://github.com/espressif/arduino-esp32/issues/7795#issuecomment-1416868611\r\n\r\n* add adafruit new board feather esp32s2 reserve tft (#7794)\r\n\r\n* bugfix: add <stdint.h> for uint8_t to avoid compilation failure (GCC 11.2.0) (#7744)\r\n\r\n* Adding 3rd party boards for VALTRACK-V4-VTS-ESP32-C3 & VALTRACK-V4-MFW-ESP32-C3 (#7735)\r\n\r\n* Added VALTRACK-V4-VTS-ESP32-C3 board definition\r\n\r\nCreated pins_arduino.h & made changes to boards.txt with necessary changes\r\n\r\n* Modified the URL\r\n\r\n* Renamed json\r\n\r\n* renamed all auRL\r\n\r\n* Adding VALTRACK-V4 series board definitions\r\n\r\nAdded VALTRACK-V4-VTS-ESP32C3 & VALTRACK-V4-MFW-ESP32-C3 board variants\r\n\r\n* Adding VALTRACK-V4 series board definitions\r\n\r\nAdded VALTRACK-V4-VTS-ESP32C3 & VALTRACK-V4-MFW-ESP32-C3 board variants\r\n\r\n* Reverted package_esp32_index.template.json\r\n\r\nrestored package_esp32_index.template.json from edits\r\n\r\n* Reverted package_esp32_index.template.json\r\n\r\nAdded new line to package_esp32_index.template.json\r\n\r\n* Update Platformio CI (#7725)\r\n\r\n* WiFiClient example fix (#7711)\r\n\r\n* Modified WiFiClient example to use thingspeak instead of non-functionig sparkfun\r\n\r\n* Moved instructions to README\r\n\r\n* Fixed spelling\r\n\r\n* Added link to S3 datasheet\r\n\r\n---------\r\n\r\nCo-authored-by: Jan Proch\u00e1zka <90197375+P-R-O-C-H-Y@users.noreply.github.com>\r\n\r\n* Mirror update from Heltec repository (#7709)\r\n\r\nHeltec updated the I2C pins in https://github.com/Heltec-Aaron-Lee/WiFi_Kit_series/commit/b10f4bf85d13fd01be80dcdb0eb59e6a8c8ba19a\r\n\r\n* Fixes BLE data printing (#7699)\r\n\r\n* Fixes BLE data printing\r\n\r\nBLE data has no '\\0' terminator, therefore it can't be printed as a regular C string.\r\nThis fix just prints the BLE data based on its length.\r\n\r\n* Simplify printing to a single call\r\n\r\n* split menu options + lora_32_V3 fix (#7697)\r\n\r\n* Change header gaurd name (#7696)\r\n\r\n* Fix Name (#7691)\r\n\r\nWrong name in definitions.\r\n\r\n* Fix error in WiFiClient.cpp where the connect function fails for timeouts below 1 second (#7686)\r\n\r\n* Update WiFiClient.cpp\r\n\r\nThis change will allow specifying connect timeouts below 1 second. Without this change, if connect timeouts under 1 second are given, the connect defaults to 0ms and fails. \r\nThis will also allow timeouts in fractions of seconds, e.g. 1500ms. Without this change, connect timeouts are truncated to full second increments.\r\n\r\n* Make parameter timeout_ms clear\r\n\r\n* Change connection timeout_ms name for clarity\r\n\r\n---------\r\n\r\nCo-authored-by: Rodrigo Garcia <rodrigo.garcia@espressif.com>\r\n\r\n* fixed the function header (#7674)\r\n\r\n* fixed the function header\r\n\r\n* fixed function name and paramaters\r\n\r\n---------\r\n\r\nCo-authored-by: Jan Procha\u0301zka <90197375+P-R-O-C-H-Y@users.noreply.github.com>\r\n\r\n* Ticker fix solving #6155 (#7664)\r\n\r\n* Wrapped Ticker functions with #pragma disabling -Wcast-function-type\r\n\r\n* Revert \"Wrapped Ticker functions with #pragma disabling -Wcast-function-type\"\r\n\r\nThis reverts commit 160be7e67a10d01b6e44c4bf2521c0ccd6348976.\r\n\r\n* Fixed Ticker example\r\n\r\n* Modified Ticker example\r\n\r\n* Fixed LED_BUILTIN err for ESP32\r\n\r\n---------\r\n\r\nCo-authored-by: Jan Proch\u00e1zka <90197375+P-R-O-C-H-Y@users.noreply.github.com>\r\n\r\n* setPins fix ESP32 \"specified pins are not supported by this chip.\" (#7646)\r\n\r\n[ESP32: SDMMCFS::begin hardcodes the usage of slot 1, only check if the pins match slot 1 pins.]\r\n\r\nsetPins() was testing pins D1, D2 and D3 all against D1 ... fine in 1 pin mode when all are -1 not so much if you're trying to get 4 pin mode working.\r\nI now see this function doesn't really do anything on the ESP32...accept now correctly checks that you are trying to use the slot 1 pins.\r\n\r\nCo-authored-by: Jan Proch\u00e1zka <90197375+P-R-O-C-H-Y@users.noreply.github.com>\r\n\r\n* Allow passing IP as connect method parameter in WiFiClientSecure and skip unnecessary host-ip conversions (#7643)\r\n\r\n* Add LED_BUILTIN* definitions and initialization for LEDs to stop them floating. (#7636)\r\n\r\nCo-authored-by: Rodrigo Garcia <rodrigo.garcia@espressif.com>\r\n\r\n* Expand path to tinuf2 image when checking existence in platformio-build.py (#7631)\r\n\r\n* Expand path to tinuf2 image when checking existence\r\n\r\n* More isFiles fixed\r\n\r\n* Remove (useless) trailing semicolon from Print.cpp (#7622)\r\n\r\n* ADD: New variant Edgebox-ESP-100 (#7771)\r\n\r\n* ADD: New variant Edgebox-ESP-100\r\n\r\n* FIX: Edgebox-ESP-100 Board.txt usb mode option change back to default value as ESP32S3\r\n\r\n* Add Crabik Slot ESP32-S3 board (#7790)\r\n\r\n* Added Crabik Slot ESP32-S3\r\n\r\n* Adding CPU frequency settings and removing excess from partition scheme settings\r\n\r\n* new variant LilyGO T-Display-S3 (#7763)\r\n\r\n* new variant LilyGO T-Display-S3\r\n\r\nhttps://github.com/Xinyuan-LilyGO/T-Display-S3\r\n\r\n* Add boards.txt definition\r\n\r\n---------\r\n\r\nCo-authored-by: Me No Dev <me-no-dev@users.noreply.github.com>\r\n\r\n* Update get.py to support Apple ARM64\r\n\r\n* Update package_esp32_index.template.json\r\n\r\n* WString Return bool (#7774)\r\n\r\n* Add Roboheart Hercules development board to the esp32-core (#7672)\r\n\r\n* added Roboheart Hercules pin definitions and board.txt entries\r\n\r\n* added package_roboheat.json for prototyping\r\n\r\n* Roboheart Hercules pins\r\n\r\n* Updated the pins\r\n\r\n* Delete package_roboheart.json\r\n\r\n* Requested changes\r\n\r\n---------\r\n\r\nCo-authored-by: renebohne <rene.bohne@gmail.com>\r\n\r\n* Reword \"ESP-IDF as Component\" (#7812)\r\n\r\nI think \"Arduino as an ESP-IDF component\" or just \"As ESP-IDF component\" instead of  \"ESP-IDF as Component\" is more correct way to name the link.\r\n\r\n1. \"ESP-IDF as Component\" would imply that ESP-IDF is some sort of library for Arduino, which is (IMO) misleading, because it's true the other way around.\r\n2. It's written as \"Arduino as an ESP-IDF component\" on the webpage it points to as well.\r\n\r\n- Also I removed the capitalization from \"Component\" as I have not found a reason why is it capitalized.\r\n\r\n* add new board Adafruit Feather ESP32-S3 Reverse TFT (#7811)\r\n\r\n* Multi threading examples (tasks, queues, semaphores, mutexes) (#7660)\r\n\r\n* Moved and renamed example ESP32/FreeRTOS to MultiThreading/BasicMultiThreading\r\n\r\n* Added dummy files\r\n\r\n* Modified original example\r\n\r\n* Fixed BasicMultiThreading.ino\r\n\r\n* Added Example demonstrating use of queues\r\n\r\n* Extended info in BasicMultiThreading\r\n\r\n* Renamed Queues to singular Queue\r\n\r\n* Added Mutex example\r\n\r\n* Added Semaphore example\r\n\r\n* Moved info from example to README\r\n\r\n* Moved doc from Mutex to README\r\n\r\n* Added Queue README\r\n\r\n* Removed unecesary text\r\n\r\n* Fixed grammar\r\n\r\n* Increased stack size for Sempahore example\r\n\r\n* Added headers into .ino files\r\n\r\n* Added word Example at the end of title in README\r\n\r\n* removed unused line\r\n\r\n* Added forgotten README\r\n\r\n* Modified BasicMultiThreading example\r\n\r\n* Added missing S3 entry in README\r\n\r\n* moved location\r\n\r\n* Update ESP-IDF libs\r\n\r\n* Update CMakeLists.txt\r\n\r\n* Update esptool to v4.4\r\n\r\n* Add function timerAttachInterruptFlag (#7809)\r\n\r\n* Update esptool to v4.5\r\n\r\n* ADC refactoring (#7827)\r\n\r\n* Adc refactored + periman implementation\r\n\r\nPeripheral manager still needs to be checked if the implementation is right.\r\n\r\n* switched to working solution for milivolts read\r\n\r\n* Periman detachbus fix\r\n\r\n* coding style\r\n\r\n* fix CI warnings\r\n\r\n* fix FreeRTOS example\r\n\r\n* Update ETH.cpp\r\n\r\n* Update FunctionalInterruptStruct.ino\r\n\r\n* Update package_esp32_index.template.json\r\n\r\n* Update package_esp32_index.template.json\r\n\r\n* Fixes for the latest IDF v5.1\r\n\r\n* update esp-idf libs and toolchain\r\n\r\n* Turn OFF auto crystal frequency for ESP32 (needed by TWAI)\r\n\r\n* Update examples\r\n\r\n* Switch build to mostly use flags from files\r\n\r\nIncludes can not be done this way\r\n\r\n* Reorganize flag files\r\n\r\n* Optimize chip build flags further\r\n\r\n* Revert defines from file. MBEDTLS_CONFIG_FILE does not properly expand\r\n\r\n* Add support for includes and defines from file\r\n\r\n* Replace old sdk path references in platform.txt\r\n\r\n* use gcc-ar (#8013)\r\n\r\n* Makes F_CPU generic for all SoC (#8007)\r\n\r\nBased on CONFIG_ESP_DEFAULT_CPU_FREQ_MHZ that is correctly defined in the sdkconfig file for each SoC.\r\n\r\n* TIMER refactoring (#7904)\r\n\r\n* refactor using GPtimer\r\n\r\n* Updated timer HW test\r\n\r\n* fix examples\r\n\r\n* Add v2.0.7 in issue template (#7871)\r\n\r\n* refactor using GPtimer\r\n\r\n* Updated timer HW test\r\n\r\n* fix examples\r\n\r\n* Revert \"Add v2.0.7 in issue template (#7871)\"\r\n\r\nThis reverts commit fcc3b17d62ff57861f8913ca1f142fd5163b7457.\r\n\r\n* Update upload-artifact to v3 in HW CI\r\n\r\n* Revert \"Update upload-artifact to v3 in HW CI\"\r\n\r\nThis reverts commit 1ba228071718ba37c4e26d98db22f77b2a7364a6.\r\n\r\n* replace resolution with frequency\r\n\r\n* remove count_down option\r\n\r\n* countup removed from examples + header\r\n\r\n* Refactored timer object\r\n\r\n* code cleanup + examples and tests fixes\r\n\r\n* TimerAlarm fix\r\n\r\n---------\r\n\r\nCo-authored-by: Vojt\u011bch Barto\u0161ka <76958047+VojtechBartoska@users.noreply.github.com>\r\n\r\n* [Docs] ADC and Timer API Update (+some docs fixes) (#7906)\r\n\r\n* updated docs\r\n\r\n* remove hall sensor docs\r\n\r\nRemoved Hall sensor documentation as its no longer supported in IDF-5\r\n\r\n* Fixed ESPNow examples location in docs\r\n\r\n* Last timer refactored API + gpio small fix\r\n\r\n* AlarmWrite fix\r\n\r\n* Fixes APLL/PLL with RTC Frequency (#8025)\r\n\r\nlog_d() was displaying APLL for any SoC, but S3 and C3 has not such option, causing compilation errors.\r\n\r\n* Update IDF libs and fix OPI PSRAM on S3\r\n\r\n* Add setMode function HardwareSerial.c to set the esp32 uart mode for use with RS485 auto RTS (#7935)\r\n\r\n* Added setMode function to set the esp32 uart mode\r\n\r\nUsed to set the esp32 uart mode for use with RS485 Half Duplex and the auto RTS pin mode. This will set/clear the RTS pin output to control the RE/DE pin on most RS485 chips.\r\n\r\n* Add Success (bool) return in some functions\r\n\r\n* Add Success (bool) return code to some functions\r\n\r\n* Add Success (bool) return to some functions\r\n\r\n* Add Success (bool) return to some functions\r\n\r\n* Fix uartSetRxTimeout return type\r\n\r\n---------\r\n\r\nCo-authored-by: Rodrigo Garcia <rodrigo.garcia@espressif.com>\r\n\r\n* Add support for esp-elf-gdb\r\n\r\n* WFG Crashfix (#8044)\r\n\r\n* Update component libs\r\n\r\n* IDF release/v5.1 (#8061)\r\n\r\n* IDF release/v5.1 bb9200acec\r\n\r\n* Update Esp.cpp\r\n\r\n* IDF release/v5.1 420ebd208a\r\n\r\n* Update esp32-hal-psram.c\r\n\r\n* Switch SDK to be an external package\r\n\r\n* fix path (#8096)\r\n\r\n* Makes UART work at any APB Frequency (#8097)\r\n\r\nFixes HardwareSerial to work with IDF 5.1 on any CPU/APB Frequency (240MHz to 10MHZ), including user created low power modes.\r\n\r\n* Add required callbacks for TinyUSB DFU\r\n\r\n* Update version to 3.0.0\r\n\r\n* Add ESP.getCoreVersion() and update ESP.getChipModel()\r\n\r\n* Update timer hal for the latest 5.1\r\n\r\n* Use separate RX and TX buffer sizes in HTTP client\r\n\r\noptimizes download by allowing up to 4K packets to be received\r\n\r\n* Rename clock tree enum name in latest 5.1\r\n\r\n* ESP32-H4 support was removed in ESP-IDF v5.1\r\n\r\n* IDF release/v5.1 2004bf4e11 (#8165)\r\n\r\n* Deinit previous bus first (#8180)\r\n\r\n* TIMER - add timer_started flag, fix timerEnd() + timer HW test (#8135)\r\n\r\n* Add timer_started flag and stop before disable\r\n\r\n* Fix timer HW test\r\n\r\n* TOUCH - Peripheral manager implementation (#8129)\r\n\r\n* Touch periman implemented\r\n\r\n* Deinit previous bus first\r\n\r\n* LEDC Refactoring - Peripheral manager implemented (#8126)\r\n\r\n* LEDC periman implementation\r\n\r\n* Fix examples\r\n\r\n* Rework tone\r\n\r\n* Update ledc docs\r\n\r\n* fix missing bracket\r\n\r\n* Update analog funtions esp32-hal.h\r\n\r\n* Update CameraWebServer example\r\n\r\n* Fix HiFreq_ADC example\r\n\r\n* minor fixes - typos\r\n\r\n* Avoid calling tone/notone when tone already runs on dif. pin\r\n\r\n* Remove unused channels_resolution\r\n\r\n* GPIO - Peripheral manager implementation (#8179)\r\n\r\n* periman-implementation\r\n\r\n* fix RGB_BUILTIN and remove space\r\n\r\n* Enforces more consistency into Peripheral Manager (#8188)\r\n\r\n* Avoid log_i() message the first time a bus is assigned\r\n\r\n* Prevent operation with ESP32_BUS_TYPE_INIT\r\n\r\n* keeps coding style\r\n\r\n* do not print messages on INIT bus type\r\n\r\n* [Arduino Core 3.0.0] RMT IDF5.1 Refactoring (#7994)\r\n\r\n* RMT IDF5.1 refactoring\r\n\r\n* Fixes initial value setting\r\n\r\n* removed rmtRead() with user callback\r\n\r\n* simplify/remove Read data structure\r\n\r\n* Deep API simplification\r\n\r\n* fixes the examples\r\n\r\n* fix rmt.h\r\n\r\n* adds support to APB different frequencies\r\n\r\n* fixes CI and not defined RGB_BUILTIN\r\n\r\n* new RMT API and examples\r\n\r\n* fixing commentaties\r\n\r\n* Update esp32-hal-rgb-led.c\r\n\r\n* changes Filter API\r\n\r\n* Fixes example with Filter API\r\n\r\n* Update PlatformIO scripts for the upcoming 3.0 core (#8183)\r\n\r\n* Update PlatformIO scripts for the upcoming 3.0 core\r\n\r\n* Dynamically select proper framework-arduinoespressif32-libs package\r\n\r\nWith this change the dev-platform will be dynamically configured to\r\npull the latest .zip package with precompiled libraries from extracted from\r\npackage_esp32_index.template.json\r\n\r\n* free memory on detach (#8264)\r\n\r\n* SPI - Peripheral manager implementation  (#8255)\r\n\r\n* spi periman implementation\r\n\r\n* fix header file\r\n\r\n* remove unused struct\r\n\r\n* fix missing braces\r\n\r\n* Update esp32-hal-rmt.c (#8216)\r\n\r\nOptimizing Peripheral Manager Test\r\n\r\n* I2C - Peripheral manager implementation (#8220)\r\n\r\n* i2c-master periman initial commit\r\n\r\n* i2c-master make detachbus static + comment remove\r\n\r\n* i2c-slave periman implementation\r\n\r\n* SetPinBus to INIT on i2cDeinits\r\n\r\n* Fix slave pins deinit\r\n\r\n* remove dbg logs\r\n\r\n* set ret to ESP_FAIL instead of returning\r\n\r\n* Fix warnings in hal-spi caused by pariman transition\r\n\r\n* Update esptool.py to version 4.6\r\n\r\n* Add platform support for ESP_SR\r\n\r\n* Add USB Type and valid pin check to periman\r\n\r\n* replace bus with spi->num+1 (#8279)\r\n\r\n* Remove default pins from SPI HAL\r\n\r\n* Add commented out handlers for esptool.js in TinyUSB CDC\r\n\r\nFor future use\r\n\r\n* Add build defines for host os and fqbn (for debug purposes)\r\n\r\n* Provide proper memory caps total size\r\n\r\n* Update Esp.cpp\r\n\r\n* SDMMC - Peripheral manager implementation (#8289)\r\n\r\n* sdmmc periman implemented\r\n\r\n* save pins when SOC_SDMMC_USE_IOMUX\r\n\r\n* IDF release/v5.1 4bc762621d (#8292)\r\n\r\n* Adds missing pinMode (#8312)\r\n\r\n* Adds missing pinMode\r\n\r\nThe example code lacks a pinMode() to initialize the GPIO 0 (button). In Arduino Core 3.0.0, it prints an error message when trying to read a not initialized GPIO.\r\n\r\n* Update KeyboardLogout.ino\r\n\r\nAdds <buttonPin> to keep code standard\r\n\r\n* Update KeyboardReprogram.ino\r\n\r\nAdds <buttonPin> to keep code standard\r\n\r\n* LEDC Fade implementation (#8338)\r\n\r\n* fade API + pointer fixes\r\n\r\n* Add fade api\r\n\r\n* Add fade example\r\n\r\n* update ledc docs\r\n\r\n* remove unused variables\r\n\r\n* fix path to example\r\n\r\n* Adds USB to Peripheral Manager - Arduino Core 3.0.0 (#8335)\r\n\r\n* ETHERNET - Peripheral manager implementation (#8297)\r\n\r\n* Peripheral manager implemented\r\n\r\n* remove unused variable\r\n\r\n* Add all RMII pins\r\n\r\n* fix typo\r\n\r\n* Adds HardwareSerial to Peripheral Manager Arduino 3.0.0 (#8328)\r\n\r\n* Do not limit ETHERNET in periman to only ESP32. SPI is also an option\r\n\r\n* Initial support for ESP32-C6 (#8337)\r\n\r\n* Add checks for SOC defines (#8351)\r\n\r\n* Add checks for SOC defines\r\n\r\n* Add SoC checks to BLE library\r\n\r\n* fix i2c compilation error\r\n\r\n* fix wrong placement of include\r\n\r\n* add check to SPI library\r\n\r\n* add check to USB library\r\n\r\n* add checks to Wire library\r\n\r\n* Feature/esp32h2 support (#8373)\r\n\r\n* Initial support for ESP32H2\r\n\r\n* Additional changes for ESP32H2\r\n\r\n* Update libs for ESP32H2\r\n\r\n* Fix flashing on ESP32-H2\r\n\r\n* Fix GPIO Configs for ESP32-C6 and ESP32-H2\r\n\r\n* Update Timer test sketch\r\n\r\n* Fix upload flash parameters\r\n\r\n* Use ets_write_char_uart instead of ets_printf in log_printfv\r\n\r\n* Print full chip report when log level is sufficient (#8282)\r\n\r\n* ESP32-C3 does not have ets_write_char_uart\r\n\r\n* Fix BLE gap event name\r\n\r\n* HW Testing - Pytest update (#8389)\r\n\r\n* update tests requirements\r\n\r\n* remove already handled components\r\n\r\n* Update version of pytest\r\n\r\n* Add missing ESP32-H2 to hil.yml\r\n\r\n* Updated FreeRTOS names (#8418)\r\n\r\n* HW Testing -  ESP32-C6 + ESP32-H2 fixes (#8404)\r\n\r\n* add C6/H2 to tests cfg.json\r\n\r\n* remove ,\r\n\r\n* workflow runs-on runner by matrix\r\n\r\n* Add need for arduino tag to select runner\r\n\r\n* Add cryptography to requirements.txt\r\n\r\n* Removed duplicate TX1 define for H2 (#8402)\r\n\r\n* Fix broken examples\r\n\r\n* Fixes RMT filter & idle timing and setup (#8359)\r\n\r\n* Fixes Filter and Idle parameter to uint32\r\n\r\n* Fixes Filter and Idle setup\r\n\r\n* Fixes it to 5.1Libs branch\r\n\r\n* fix RMT CLK source and Filter API\r\n\r\n* fixes missing ;\r\n\r\n* fixes missing ;\r\n\r\n* fixes RMT example\r\n\r\n* IDF release/v5.1 a7b62bbcaf (#8438)\r\n\r\n* Add workflow to build executables from python scripts (#8290)\r\n\r\n* Add workflow to build executables from python scripts\r\n\r\n* Push binary to tools\r\n\r\n* Enable executable signing on Windows\r\n\r\n* Update get.py\r\n\r\n* Push binary to tools\r\n\r\n* Try with multiple files\r\n\r\n* Try more actions\r\n\r\n* Try powershell\r\n\r\n* Restore tools so they do not get rebuilt\r\n\r\n* Finalize scripts\r\n\r\n* Push binary to tools\r\n\r\n* App rollback should be after PSRAM is initialized\r\n\r\n* Correcting RX1 to GPIO4 and TX1 to GPIO5 to be consistent with documentation. Previous pin use works but is inconsistent with C6 docs.\r\n\r\n* Fixes Memory Leak (#8486)\r\n\r\n* fixes preprocessor test (#8485)\r\n\r\n* fixes preprocessor test\r\n\r\nWhen using `#define USE_SOFT_AP` \r\nChange\r\n`&& not USE_SOFT_AP` ==> `&& !defined(USE_SOFT_AP)`\r\n\r\n* Adds any BLE capable device in WiFiProv.ino\r\n\r\nRemoving ESP32 restriction for BLE Provisioning.\r\n\r\n* fix flash mode read out for C6\r\n\r\n* Add option for custom partitions without restrictions\r\n\r\n* SD_MMC update (#8298)\r\n\r\n* Updated SD_MMC lib and examples\r\n\r\n* Removed getter implementation and commented usage in examples\r\n\r\n* squashed updates\r\n\r\n* IDF release/v5.1 f0437b945f (#8599)\r\n\r\n* Update package_esp32_index.template.json\r\n\r\n* Fix printf format build error in BTAdvertisedDeviceSet.cpp\r\n\r\n---------\r\n\r\nCo-authored-by: Pedro Minatel <pedro.minatel@espressif.com>\r\nCo-authored-by: Rodrigo Garcia <rodrigo.garcia@espressif.com>\r\nCo-authored-by: Ha Thach <thach@tinyusb.org>\r\nCo-authored-by: Martin Turski <quiret@vfemail.net>\r\nCo-authored-by: raviypujar <raviypujar@gmail.com>\r\nCo-authored-by: Jason2866 <24528715+Jason2866@users.noreply.github.com>\r\nCo-authored-by: Tom\u00e1\u0161 Piln\u00fd <34927466+PilnyTomas@users.noreply.github.com>\r\nCo-authored-by: Jan Proch\u00e1zka <90197375+P-R-O-C-H-Y@users.noreply.github.com>\r\nCo-authored-by: Daniel Berlin <dberlin@dberlin.org>\r\nCo-authored-by: Nima Askari (\u0646\u06cc\u0645\u0627 \u0639\u0633\u06a9\u0631\u06cc) <nimaltd@yahoo.com>\r\nCo-authored-by: rtpmsys <106180646+rtpmsys@users.noreply.github.com>\r\nCo-authored-by: bytiful <55647551+bytiful@users.noreply.github.com>\r\nCo-authored-by: tmfarrington <tmfarrington@users.noreply.github.com>\r\nCo-authored-by: Krzysiek S <chris.streh@gmail.com>\r\nCo-authored-by: surt <carl.olsson@gmail.com>\r\nCo-authored-by: Max Scheffler <max.scheffler@pm.me>\r\nCo-authored-by: Clemens Kirchgatterer <clemens@1541.org>\r\nCo-authored-by: Peter Pan's Techland <twinkle-pirate@hotmail.com>\r\nCo-authored-by: Roman <programmeofficemilkyway@gmail.com>\r\nCo-authored-by: Eistee <Eistee82@users.noreply.github.com>\r\nCo-authored-by: David McCurley <44048235+mrengineer7777@users.noreply.github.com>\r\nCo-authored-by: Gaya3N25 <30388176+Gaya3N25@users.noreply.github.com>\r\nCo-authored-by: renebohne <rene.bohne@gmail.com>\r\nCo-authored-by: Oliv\u00e9r Rem\u00e9ny <25034625+remenyo@users.noreply.github.com>\r\nCo-authored-by: davidk88 <david.kotar@gmail.com>\r\nCo-authored-by: Vojt\u011bch Barto\u0161ka <76958047+VojtechBartoska@users.noreply.github.com>\r\nCo-authored-by: James Armstrong <jamesarmstrong3@me.com>\r\nCo-authored-by: Valerii Koval <valeros@users.noreply.github.com>\r\nCo-authored-by: Peter G. Jensen <root@petergjoel.dk>",
            "additions": 7,
            "deletions": 3,
            "change_type": "MODIFY",
            "diff": "@@ -4,6 +4,9 @@\n  *  Created on: Mar 25, 2017\n  *      Author: kolban\n  */\n+#include \"soc/soc_caps.h\"\n+#if SOC_BLE_SUPPORTED\n+\n #include \"sdkconfig.h\"\n #if defined(CONFIG_BLUEDROID_ENABLED)\n #include \"BLEAddress.h\"\n@@ -1964,8 +1967,8 @@ std::string BLEUtils::gattStatusToString(esp_gatt_status_t status) {\n \t\t\treturn \"ESP_GATT_INVALID_CFG\";\n \t\tcase ESP_GATT_SERVICE_STARTED:\n \t\t\treturn \"ESP_GATT_SERVICE_STARTED\";\n-\t\tcase ESP_GATT_ENCRYPED_NO_MITM:\n-\t\t\treturn \"ESP_GATT_ENCRYPED_NO_MITM\";\n+\t\tcase ESP_GATT_ENCRYPTED_NO_MITM:\n+\t\t\treturn \"ESP_GATT_ENCRYPTED_NO_MITM\";\n \t\tcase ESP_GATT_NOT_ENCRYPTED:\n \t\t\treturn \"ESP_GATT_NOT_ENCRYPTED\";\n \t\tcase ESP_GATT_CONGESTED:\n@@ -2037,4 +2040,5 @@ const char* BLEUtils::searchEventTypeToString(esp_gap_search_evt_t searchEvt) {\n \t}\n } // searchEventTypeToString\n \n-#endif // CONFIG_BLUEDROID_ENABLED\n+#endif /* CONFIG_BLUEDROID_ENABLED */\n+#endif /* SOC_BLE_SUPPORTED */\n",
            "comment_added_diff": {},
            "comment_deleted_diff": {
                "2040": "#endif // CONFIG_BLUEDROID_ENABLED"
            },
            "comment_modified_diff": {}
        }
    ],
    "BLEUtils.h": [],
    "BLEValue.cpp": [
        {
            "commit": "6f7a1ca76ada4d705d79ce863450c91349327a79",
            "timestamp": "2023-10-05T14:54:25+03:00",
            "author": "Me No Dev",
            "commit_message": "ESP-IDF v5.1 (#7733)\n\n* Initial changes to compile under ESP-IDF v5.1\r\n\r\n* Initial import for ESP-IDF v5.1 libs\r\n\r\n* Update toolchain\r\n\r\n* Update esp32-hal-psram.c\r\n\r\n* Add missing LDs\r\n\r\n* Update platform.txt\r\n\r\n* Stop some CI jobs, because they will always fail\r\n\r\n* Fix examples\r\n\r\n* Update app_httpd.cpp\r\n\r\n* Update ResetReason.ino\r\n\r\n* Warnings fixes\r\n\r\n* Added the example guideline and template (#7665)\r\n\r\n* Added the example guideline and template\r\n\r\n* PR review changes with some typos and grammar fixes\r\n\r\n* Changes according to the PR review\r\n\r\n* Added ESP32-S3 link to the datasheet (#7738)\r\n\r\n* Update HiFreq_ADC.ino\r\n\r\n* Replace periph_ctrl.h use because of deprecation\r\n\r\n* Replace esp_spi_flash.h use because of deprecation\r\n\r\n* Add includes to male mDNS::enableWorkstation compile\r\n\r\n* Fix ssl_client mbedtls_pk_parse_key callback\r\n\r\n* Update temperature sensor driver\r\n\r\n* Allow sketch_utils to compile with arduino-cli\r\n\r\n* Run CI with arduino-cli\r\n\r\n* Fix arduino-cli CI build on Windows\r\n\r\n* Refactor platform.txt to not use components installed through the board manager when running from git\r\n\r\n* Initial Peripheral Manager Implementation\r\n\r\n* Update SigmaDelta driver to use the new ESP-IDF driver API\r\n\r\n* Small improvements to peripheral manager and SigmaDelta\r\n\r\n* Remove deleted function from SigmaDelta header\r\n\r\n* Update DAC driver to use the new ESP-IDF driver API\r\n\r\n* Adds softAp(String) to make it compatible with ESP8266 (#7801)\r\n\r\n* Fix commentary (#7800)\r\n\r\nMinor fix based on observation done in https://github.com/espressif/arduino-esp32/issues/7795#issuecomment-1416868611\r\n\r\n* add adafruit new board feather esp32s2 reserve tft (#7794)\r\n\r\n* bugfix: add <stdint.h> for uint8_t to avoid compilation failure (GCC 11.2.0) (#7744)\r\n\r\n* Adding 3rd party boards for VALTRACK-V4-VTS-ESP32-C3 & VALTRACK-V4-MFW-ESP32-C3 (#7735)\r\n\r\n* Added VALTRACK-V4-VTS-ESP32-C3 board definition\r\n\r\nCreated pins_arduino.h & made changes to boards.txt with necessary changes\r\n\r\n* Modified the URL\r\n\r\n* Renamed json\r\n\r\n* renamed all auRL\r\n\r\n* Adding VALTRACK-V4 series board definitions\r\n\r\nAdded VALTRACK-V4-VTS-ESP32C3 & VALTRACK-V4-MFW-ESP32-C3 board variants\r\n\r\n* Adding VALTRACK-V4 series board definitions\r\n\r\nAdded VALTRACK-V4-VTS-ESP32C3 & VALTRACK-V4-MFW-ESP32-C3 board variants\r\n\r\n* Reverted package_esp32_index.template.json\r\n\r\nrestored package_esp32_index.template.json from edits\r\n\r\n* Reverted package_esp32_index.template.json\r\n\r\nAdded new line to package_esp32_index.template.json\r\n\r\n* Update Platformio CI (#7725)\r\n\r\n* WiFiClient example fix (#7711)\r\n\r\n* Modified WiFiClient example to use thingspeak instead of non-functionig sparkfun\r\n\r\n* Moved instructions to README\r\n\r\n* Fixed spelling\r\n\r\n* Added link to S3 datasheet\r\n\r\n---------\r\n\r\nCo-authored-by: Jan Proch\u00e1zka <90197375+P-R-O-C-H-Y@users.noreply.github.com>\r\n\r\n* Mirror update from Heltec repository (#7709)\r\n\r\nHeltec updated the I2C pins in https://github.com/Heltec-Aaron-Lee/WiFi_Kit_series/commit/b10f4bf85d13fd01be80dcdb0eb59e6a8c8ba19a\r\n\r\n* Fixes BLE data printing (#7699)\r\n\r\n* Fixes BLE data printing\r\n\r\nBLE data has no '\\0' terminator, therefore it can't be printed as a regular C string.\r\nThis fix just prints the BLE data based on its length.\r\n\r\n* Simplify printing to a single call\r\n\r\n* split menu options + lora_32_V3 fix (#7697)\r\n\r\n* Change header gaurd name (#7696)\r\n\r\n* Fix Name (#7691)\r\n\r\nWrong name in definitions.\r\n\r\n* Fix error in WiFiClient.cpp where the connect function fails for timeouts below 1 second (#7686)\r\n\r\n* Update WiFiClient.cpp\r\n\r\nThis change will allow specifying connect timeouts below 1 second. Without this change, if connect timeouts under 1 second are given, the connect defaults to 0ms and fails. \r\nThis will also allow timeouts in fractions of seconds, e.g. 1500ms. Without this change, connect timeouts are truncated to full second increments.\r\n\r\n* Make parameter timeout_ms clear\r\n\r\n* Change connection timeout_ms name for clarity\r\n\r\n---------\r\n\r\nCo-authored-by: Rodrigo Garcia <rodrigo.garcia@espressif.com>\r\n\r\n* fixed the function header (#7674)\r\n\r\n* fixed the function header\r\n\r\n* fixed function name and paramaters\r\n\r\n---------\r\n\r\nCo-authored-by: Jan Procha\u0301zka <90197375+P-R-O-C-H-Y@users.noreply.github.com>\r\n\r\n* Ticker fix solving #6155 (#7664)\r\n\r\n* Wrapped Ticker functions with #pragma disabling -Wcast-function-type\r\n\r\n* Revert \"Wrapped Ticker functions with #pragma disabling -Wcast-function-type\"\r\n\r\nThis reverts commit 160be7e67a10d01b6e44c4bf2521c0ccd6348976.\r\n\r\n* Fixed Ticker example\r\n\r\n* Modified Ticker example\r\n\r\n* Fixed LED_BUILTIN err for ESP32\r\n\r\n---------\r\n\r\nCo-authored-by: Jan Proch\u00e1zka <90197375+P-R-O-C-H-Y@users.noreply.github.com>\r\n\r\n* setPins fix ESP32 \"specified pins are not supported by this chip.\" (#7646)\r\n\r\n[ESP32: SDMMCFS::begin hardcodes the usage of slot 1, only check if the pins match slot 1 pins.]\r\n\r\nsetPins() was testing pins D1, D2 and D3 all against D1 ... fine in 1 pin mode when all are -1 not so much if you're trying to get 4 pin mode working.\r\nI now see this function doesn't really do anything on the ESP32...accept now correctly checks that you are trying to use the slot 1 pins.\r\n\r\nCo-authored-by: Jan Proch\u00e1zka <90197375+P-R-O-C-H-Y@users.noreply.github.com>\r\n\r\n* Allow passing IP as connect method parameter in WiFiClientSecure and skip unnecessary host-ip conversions (#7643)\r\n\r\n* Add LED_BUILTIN* definitions and initialization for LEDs to stop them floating. (#7636)\r\n\r\nCo-authored-by: Rodrigo Garcia <rodrigo.garcia@espressif.com>\r\n\r\n* Expand path to tinuf2 image when checking existence in platformio-build.py (#7631)\r\n\r\n* Expand path to tinuf2 image when checking existence\r\n\r\n* More isFiles fixed\r\n\r\n* Remove (useless) trailing semicolon from Print.cpp (#7622)\r\n\r\n* ADD: New variant Edgebox-ESP-100 (#7771)\r\n\r\n* ADD: New variant Edgebox-ESP-100\r\n\r\n* FIX: Edgebox-ESP-100 Board.txt usb mode option change back to default value as ESP32S3\r\n\r\n* Add Crabik Slot ESP32-S3 board (#7790)\r\n\r\n* Added Crabik Slot ESP32-S3\r\n\r\n* Adding CPU frequency settings and removing excess from partition scheme settings\r\n\r\n* new variant LilyGO T-Display-S3 (#7763)\r\n\r\n* new variant LilyGO T-Display-S3\r\n\r\nhttps://github.com/Xinyuan-LilyGO/T-Display-S3\r\n\r\n* Add boards.txt definition\r\n\r\n---------\r\n\r\nCo-authored-by: Me No Dev <me-no-dev@users.noreply.github.com>\r\n\r\n* Update get.py to support Apple ARM64\r\n\r\n* Update package_esp32_index.template.json\r\n\r\n* WString Return bool (#7774)\r\n\r\n* Add Roboheart Hercules development board to the esp32-core (#7672)\r\n\r\n* added Roboheart Hercules pin definitions and board.txt entries\r\n\r\n* added package_roboheat.json for prototyping\r\n\r\n* Roboheart Hercules pins\r\n\r\n* Updated the pins\r\n\r\n* Delete package_roboheart.json\r\n\r\n* Requested changes\r\n\r\n---------\r\n\r\nCo-authored-by: renebohne <rene.bohne@gmail.com>\r\n\r\n* Reword \"ESP-IDF as Component\" (#7812)\r\n\r\nI think \"Arduino as an ESP-IDF component\" or just \"As ESP-IDF component\" instead of  \"ESP-IDF as Component\" is more correct way to name the link.\r\n\r\n1. \"ESP-IDF as Component\" would imply that ESP-IDF is some sort of library for Arduino, which is (IMO) misleading, because it's true the other way around.\r\n2. It's written as \"Arduino as an ESP-IDF component\" on the webpage it points to as well.\r\n\r\n- Also I removed the capitalization from \"Component\" as I have not found a reason why is it capitalized.\r\n\r\n* add new board Adafruit Feather ESP32-S3 Reverse TFT (#7811)\r\n\r\n* Multi threading examples (tasks, queues, semaphores, mutexes) (#7660)\r\n\r\n* Moved and renamed example ESP32/FreeRTOS to MultiThreading/BasicMultiThreading\r\n\r\n* Added dummy files\r\n\r\n* Modified original example\r\n\r\n* Fixed BasicMultiThreading.ino\r\n\r\n* Added Example demonstrating use of queues\r\n\r\n* Extended info in BasicMultiThreading\r\n\r\n* Renamed Queues to singular Queue\r\n\r\n* Added Mutex example\r\n\r\n* Added Semaphore example\r\n\r\n* Moved info from example to README\r\n\r\n* Moved doc from Mutex to README\r\n\r\n* Added Queue README\r\n\r\n* Removed unecesary text\r\n\r\n* Fixed grammar\r\n\r\n* Increased stack size for Sempahore example\r\n\r\n* Added headers into .ino files\r\n\r\n* Added word Example at the end of title in README\r\n\r\n* removed unused line\r\n\r\n* Added forgotten README\r\n\r\n* Modified BasicMultiThreading example\r\n\r\n* Added missing S3 entry in README\r\n\r\n* moved location\r\n\r\n* Update ESP-IDF libs\r\n\r\n* Update CMakeLists.txt\r\n\r\n* Update esptool to v4.4\r\n\r\n* Add function timerAttachInterruptFlag (#7809)\r\n\r\n* Update esptool to v4.5\r\n\r\n* ADC refactoring (#7827)\r\n\r\n* Adc refactored + periman implementation\r\n\r\nPeripheral manager still needs to be checked if the implementation is right.\r\n\r\n* switched to working solution for milivolts read\r\n\r\n* Periman detachbus fix\r\n\r\n* coding style\r\n\r\n* fix CI warnings\r\n\r\n* fix FreeRTOS example\r\n\r\n* Update ETH.cpp\r\n\r\n* Update FunctionalInterruptStruct.ino\r\n\r\n* Update package_esp32_index.template.json\r\n\r\n* Update package_esp32_index.template.json\r\n\r\n* Fixes for the latest IDF v5.1\r\n\r\n* update esp-idf libs and toolchain\r\n\r\n* Turn OFF auto crystal frequency for ESP32 (needed by TWAI)\r\n\r\n* Update examples\r\n\r\n* Switch build to mostly use flags from files\r\n\r\nIncludes can not be done this way\r\n\r\n* Reorganize flag files\r\n\r\n* Optimize chip build flags further\r\n\r\n* Revert defines from file. MBEDTLS_CONFIG_FILE does not properly expand\r\n\r\n* Add support for includes and defines from file\r\n\r\n* Replace old sdk path references in platform.txt\r\n\r\n* use gcc-ar (#8013)\r\n\r\n* Makes F_CPU generic for all SoC (#8007)\r\n\r\nBased on CONFIG_ESP_DEFAULT_CPU_FREQ_MHZ that is correctly defined in the sdkconfig file for each SoC.\r\n\r\n* TIMER refactoring (#7904)\r\n\r\n* refactor using GPtimer\r\n\r\n* Updated timer HW test\r\n\r\n* fix examples\r\n\r\n* Add v2.0.7 in issue template (#7871)\r\n\r\n* refactor using GPtimer\r\n\r\n* Updated timer HW test\r\n\r\n* fix examples\r\n\r\n* Revert \"Add v2.0.7 in issue template (#7871)\"\r\n\r\nThis reverts commit fcc3b17d62ff57861f8913ca1f142fd5163b7457.\r\n\r\n* Update upload-artifact to v3 in HW CI\r\n\r\n* Revert \"Update upload-artifact to v3 in HW CI\"\r\n\r\nThis reverts commit 1ba228071718ba37c4e26d98db22f77b2a7364a6.\r\n\r\n* replace resolution with frequency\r\n\r\n* remove count_down option\r\n\r\n* countup removed from examples + header\r\n\r\n* Refactored timer object\r\n\r\n* code cleanup + examples and tests fixes\r\n\r\n* TimerAlarm fix\r\n\r\n---------\r\n\r\nCo-authored-by: Vojt\u011bch Barto\u0161ka <76958047+VojtechBartoska@users.noreply.github.com>\r\n\r\n* [Docs] ADC and Timer API Update (+some docs fixes) (#7906)\r\n\r\n* updated docs\r\n\r\n* remove hall sensor docs\r\n\r\nRemoved Hall sensor documentation as its no longer supported in IDF-5\r\n\r\n* Fixed ESPNow examples location in docs\r\n\r\n* Last timer refactored API + gpio small fix\r\n\r\n* AlarmWrite fix\r\n\r\n* Fixes APLL/PLL with RTC Frequency (#8025)\r\n\r\nlog_d() was displaying APLL for any SoC, but S3 and C3 has not such option, causing compilation errors.\r\n\r\n* Update IDF libs and fix OPI PSRAM on S3\r\n\r\n* Add setMode function HardwareSerial.c to set the esp32 uart mode for use with RS485 auto RTS (#7935)\r\n\r\n* Added setMode function to set the esp32 uart mode\r\n\r\nUsed to set the esp32 uart mode for use with RS485 Half Duplex and the auto RTS pin mode. This will set/clear the RTS pin output to control the RE/DE pin on most RS485 chips.\r\n\r\n* Add Success (bool) return in some functions\r\n\r\n* Add Success (bool) return code to some functions\r\n\r\n* Add Success (bool) return to some functions\r\n\r\n* Add Success (bool) return to some functions\r\n\r\n* Fix uartSetRxTimeout return type\r\n\r\n---------\r\n\r\nCo-authored-by: Rodrigo Garcia <rodrigo.garcia@espressif.com>\r\n\r\n* Add support for esp-elf-gdb\r\n\r\n* WFG Crashfix (#8044)\r\n\r\n* Update component libs\r\n\r\n* IDF release/v5.1 (#8061)\r\n\r\n* IDF release/v5.1 bb9200acec\r\n\r\n* Update Esp.cpp\r\n\r\n* IDF release/v5.1 420ebd208a\r\n\r\n* Update esp32-hal-psram.c\r\n\r\n* Switch SDK to be an external package\r\n\r\n* fix path (#8096)\r\n\r\n* Makes UART work at any APB Frequency (#8097)\r\n\r\nFixes HardwareSerial to work with IDF 5.1 on any CPU/APB Frequency (240MHz to 10MHZ), including user created low power modes.\r\n\r\n* Add required callbacks for TinyUSB DFU\r\n\r\n* Update version to 3.0.0\r\n\r\n* Add ESP.getCoreVersion() and update ESP.getChipModel()\r\n\r\n* Update timer hal for the latest 5.1\r\n\r\n* Use separate RX and TX buffer sizes in HTTP client\r\n\r\noptimizes download by allowing up to 4K packets to be received\r\n\r\n* Rename clock tree enum name in latest 5.1\r\n\r\n* ESP32-H4 support was removed in ESP-IDF v5.1\r\n\r\n* IDF release/v5.1 2004bf4e11 (#8165)\r\n\r\n* Deinit previous bus first (#8180)\r\n\r\n* TIMER - add timer_started flag, fix timerEnd() + timer HW test (#8135)\r\n\r\n* Add timer_started flag and stop before disable\r\n\r\n* Fix timer HW test\r\n\r\n* TOUCH - Peripheral manager implementation (#8129)\r\n\r\n* Touch periman implemented\r\n\r\n* Deinit previous bus first\r\n\r\n* LEDC Refactoring - Peripheral manager implemented (#8126)\r\n\r\n* LEDC periman implementation\r\n\r\n* Fix examples\r\n\r\n* Rework tone\r\n\r\n* Update ledc docs\r\n\r\n* fix missing bracket\r\n\r\n* Update analog funtions esp32-hal.h\r\n\r\n* Update CameraWebServer example\r\n\r\n* Fix HiFreq_ADC example\r\n\r\n* minor fixes - typos\r\n\r\n* Avoid calling tone/notone when tone already runs on dif. pin\r\n\r\n* Remove unused channels_resolution\r\n\r\n* GPIO - Peripheral manager implementation (#8179)\r\n\r\n* periman-implementation\r\n\r\n* fix RGB_BUILTIN and remove space\r\n\r\n* Enforces more consistency into Peripheral Manager (#8188)\r\n\r\n* Avoid log_i() message the first time a bus is assigned\r\n\r\n* Prevent operation with ESP32_BUS_TYPE_INIT\r\n\r\n* keeps coding style\r\n\r\n* do not print messages on INIT bus type\r\n\r\n* [Arduino Core 3.0.0] RMT IDF5.1 Refactoring (#7994)\r\n\r\n* RMT IDF5.1 refactoring\r\n\r\n* Fixes initial value setting\r\n\r\n* removed rmtRead() with user callback\r\n\r\n* simplify/remove Read data structure\r\n\r\n* Deep API simplification\r\n\r\n* fixes the examples\r\n\r\n* fix rmt.h\r\n\r\n* adds support to APB different frequencies\r\n\r\n* fixes CI and not defined RGB_BUILTIN\r\n\r\n* new RMT API and examples\r\n\r\n* fixing commentaties\r\n\r\n* Update esp32-hal-rgb-led.c\r\n\r\n* changes Filter API\r\n\r\n* Fixes example with Filter API\r\n\r\n* Update PlatformIO scripts for the upcoming 3.0 core (#8183)\r\n\r\n* Update PlatformIO scripts for the upcoming 3.0 core\r\n\r\n* Dynamically select proper framework-arduinoespressif32-libs package\r\n\r\nWith this change the dev-platform will be dynamically configured to\r\npull the latest .zip package with precompiled libraries from extracted from\r\npackage_esp32_index.template.json\r\n\r\n* free memory on detach (#8264)\r\n\r\n* SPI - Peripheral manager implementation  (#8255)\r\n\r\n* spi periman implementation\r\n\r\n* fix header file\r\n\r\n* remove unused struct\r\n\r\n* fix missing braces\r\n\r\n* Update esp32-hal-rmt.c (#8216)\r\n\r\nOptimizing Peripheral Manager Test\r\n\r\n* I2C - Peripheral manager implementation (#8220)\r\n\r\n* i2c-master periman initial commit\r\n\r\n* i2c-master make detachbus static + comment remove\r\n\r\n* i2c-slave periman implementation\r\n\r\n* SetPinBus to INIT on i2cDeinits\r\n\r\n* Fix slave pins deinit\r\n\r\n* remove dbg logs\r\n\r\n* set ret to ESP_FAIL instead of returning\r\n\r\n* Fix warnings in hal-spi caused by pariman transition\r\n\r\n* Update esptool.py to version 4.6\r\n\r\n* Add platform support for ESP_SR\r\n\r\n* Add USB Type and valid pin check to periman\r\n\r\n* replace bus with spi->num+1 (#8279)\r\n\r\n* Remove default pins from SPI HAL\r\n\r\n* Add commented out handlers for esptool.js in TinyUSB CDC\r\n\r\nFor future use\r\n\r\n* Add build defines for host os and fqbn (for debug purposes)\r\n\r\n* Provide proper memory caps total size\r\n\r\n* Update Esp.cpp\r\n\r\n* SDMMC - Peripheral manager implementation (#8289)\r\n\r\n* sdmmc periman implemented\r\n\r\n* save pins when SOC_SDMMC_USE_IOMUX\r\n\r\n* IDF release/v5.1 4bc762621d (#8292)\r\n\r\n* Adds missing pinMode (#8312)\r\n\r\n* Adds missing pinMode\r\n\r\nThe example code lacks a pinMode() to initialize the GPIO 0 (button). In Arduino Core 3.0.0, it prints an error message when trying to read a not initialized GPIO.\r\n\r\n* Update KeyboardLogout.ino\r\n\r\nAdds <buttonPin> to keep code standard\r\n\r\n* Update KeyboardReprogram.ino\r\n\r\nAdds <buttonPin> to keep code standard\r\n\r\n* LEDC Fade implementation (#8338)\r\n\r\n* fade API + pointer fixes\r\n\r\n* Add fade api\r\n\r\n* Add fade example\r\n\r\n* update ledc docs\r\n\r\n* remove unused variables\r\n\r\n* fix path to example\r\n\r\n* Adds USB to Peripheral Manager - Arduino Core 3.0.0 (#8335)\r\n\r\n* ETHERNET - Peripheral manager implementation (#8297)\r\n\r\n* Peripheral manager implemented\r\n\r\n* remove unused variable\r\n\r\n* Add all RMII pins\r\n\r\n* fix typo\r\n\r\n* Adds HardwareSerial to Peripheral Manager Arduino 3.0.0 (#8328)\r\n\r\n* Do not limit ETHERNET in periman to only ESP32. SPI is also an option\r\n\r\n* Initial support for ESP32-C6 (#8337)\r\n\r\n* Add checks for SOC defines (#8351)\r\n\r\n* Add checks for SOC defines\r\n\r\n* Add SoC checks to BLE library\r\n\r\n* fix i2c compilation error\r\n\r\n* fix wrong placement of include\r\n\r\n* add check to SPI library\r\n\r\n* add check to USB library\r\n\r\n* add checks to Wire library\r\n\r\n* Feature/esp32h2 support (#8373)\r\n\r\n* Initial support for ESP32H2\r\n\r\n* Additional changes for ESP32H2\r\n\r\n* Update libs for ESP32H2\r\n\r\n* Fix flashing on ESP32-H2\r\n\r\n* Fix GPIO Configs for ESP32-C6 and ESP32-H2\r\n\r\n* Update Timer test sketch\r\n\r\n* Fix upload flash parameters\r\n\r\n* Use ets_write_char_uart instead of ets_printf in log_printfv\r\n\r\n* Print full chip report when log level is sufficient (#8282)\r\n\r\n* ESP32-C3 does not have ets_write_char_uart\r\n\r\n* Fix BLE gap event name\r\n\r\n* HW Testing - Pytest update (#8389)\r\n\r\n* update tests requirements\r\n\r\n* remove already handled components\r\n\r\n* Update version of pytest\r\n\r\n* Add missing ESP32-H2 to hil.yml\r\n\r\n* Updated FreeRTOS names (#8418)\r\n\r\n* HW Testing -  ESP32-C6 + ESP32-H2 fixes (#8404)\r\n\r\n* add C6/H2 to tests cfg.json\r\n\r\n* remove ,\r\n\r\n* workflow runs-on runner by matrix\r\n\r\n* Add need for arduino tag to select runner\r\n\r\n* Add cryptography to requirements.txt\r\n\r\n* Removed duplicate TX1 define for H2 (#8402)\r\n\r\n* Fix broken examples\r\n\r\n* Fixes RMT filter & idle timing and setup (#8359)\r\n\r\n* Fixes Filter and Idle parameter to uint32\r\n\r\n* Fixes Filter and Idle setup\r\n\r\n* Fixes it to 5.1Libs branch\r\n\r\n* fix RMT CLK source and Filter API\r\n\r\n* fixes missing ;\r\n\r\n* fixes missing ;\r\n\r\n* fixes RMT example\r\n\r\n* IDF release/v5.1 a7b62bbcaf (#8438)\r\n\r\n* Add workflow to build executables from python scripts (#8290)\r\n\r\n* Add workflow to build executables from python scripts\r\n\r\n* Push binary to tools\r\n\r\n* Enable executable signing on Windows\r\n\r\n* Update get.py\r\n\r\n* Push binary to tools\r\n\r\n* Try with multiple files\r\n\r\n* Try more actions\r\n\r\n* Try powershell\r\n\r\n* Restore tools so they do not get rebuilt\r\n\r\n* Finalize scripts\r\n\r\n* Push binary to tools\r\n\r\n* App rollback should be after PSRAM is initialized\r\n\r\n* Correcting RX1 to GPIO4 and TX1 to GPIO5 to be consistent with documentation. Previous pin use works but is inconsistent with C6 docs.\r\n\r\n* Fixes Memory Leak (#8486)\r\n\r\n* fixes preprocessor test (#8485)\r\n\r\n* fixes preprocessor test\r\n\r\nWhen using `#define USE_SOFT_AP` \r\nChange\r\n`&& not USE_SOFT_AP` ==> `&& !defined(USE_SOFT_AP)`\r\n\r\n* Adds any BLE capable device in WiFiProv.ino\r\n\r\nRemoving ESP32 restriction for BLE Provisioning.\r\n\r\n* fix flash mode read out for C6\r\n\r\n* Add option for custom partitions without restrictions\r\n\r\n* SD_MMC update (#8298)\r\n\r\n* Updated SD_MMC lib and examples\r\n\r\n* Removed getter implementation and commented usage in examples\r\n\r\n* squashed updates\r\n\r\n* IDF release/v5.1 f0437b945f (#8599)\r\n\r\n* Update package_esp32_index.template.json\r\n\r\n* Fix printf format build error in BTAdvertisedDeviceSet.cpp\r\n\r\n---------\r\n\r\nCo-authored-by: Pedro Minatel <pedro.minatel@espressif.com>\r\nCo-authored-by: Rodrigo Garcia <rodrigo.garcia@espressif.com>\r\nCo-authored-by: Ha Thach <thach@tinyusb.org>\r\nCo-authored-by: Martin Turski <quiret@vfemail.net>\r\nCo-authored-by: raviypujar <raviypujar@gmail.com>\r\nCo-authored-by: Jason2866 <24528715+Jason2866@users.noreply.github.com>\r\nCo-authored-by: Tom\u00e1\u0161 Piln\u00fd <34927466+PilnyTomas@users.noreply.github.com>\r\nCo-authored-by: Jan Proch\u00e1zka <90197375+P-R-O-C-H-Y@users.noreply.github.com>\r\nCo-authored-by: Daniel Berlin <dberlin@dberlin.org>\r\nCo-authored-by: Nima Askari (\u0646\u06cc\u0645\u0627 \u0639\u0633\u06a9\u0631\u06cc) <nimaltd@yahoo.com>\r\nCo-authored-by: rtpmsys <106180646+rtpmsys@users.noreply.github.com>\r\nCo-authored-by: bytiful <55647551+bytiful@users.noreply.github.com>\r\nCo-authored-by: tmfarrington <tmfarrington@users.noreply.github.com>\r\nCo-authored-by: Krzysiek S <chris.streh@gmail.com>\r\nCo-authored-by: surt <carl.olsson@gmail.com>\r\nCo-authored-by: Max Scheffler <max.scheffler@pm.me>\r\nCo-authored-by: Clemens Kirchgatterer <clemens@1541.org>\r\nCo-authored-by: Peter Pan's Techland <twinkle-pirate@hotmail.com>\r\nCo-authored-by: Roman <programmeofficemilkyway@gmail.com>\r\nCo-authored-by: Eistee <Eistee82@users.noreply.github.com>\r\nCo-authored-by: David McCurley <44048235+mrengineer7777@users.noreply.github.com>\r\nCo-authored-by: Gaya3N25 <30388176+Gaya3N25@users.noreply.github.com>\r\nCo-authored-by: renebohne <rene.bohne@gmail.com>\r\nCo-authored-by: Oliv\u00e9r Rem\u00e9ny <25034625+remenyo@users.noreply.github.com>\r\nCo-authored-by: davidk88 <david.kotar@gmail.com>\r\nCo-authored-by: Vojt\u011bch Barto\u0161ka <76958047+VojtechBartoska@users.noreply.github.com>\r\nCo-authored-by: James Armstrong <jamesarmstrong3@me.com>\r\nCo-authored-by: Valerii Koval <valeros@users.noreply.github.com>\r\nCo-authored-by: Peter G. Jensen <root@petergjoel.dk>",
            "additions": 5,
            "deletions": 1,
            "change_type": "MODIFY",
            "diff": "@@ -4,6 +4,9 @@\n  *  Created on: Jul 17, 2017\n  *      Author: kolban\n  */\n+#include \"soc/soc_caps.h\"\n+#if SOC_BLE_SUPPORTED\n+\n #include \"sdkconfig.h\"\n #if defined(CONFIG_BLUEDROID_ENABLED)\n #include \"BLEValue.h\"\n@@ -127,4 +130,5 @@ void BLEValue::setValue(uint8_t* pData, size_t length) {\n } // setValue\n \n \n-#endif // CONFIG_BLUEDROID_ENABLED\n+#endif /* CONFIG_BLUEDROID_ENABLED */\n+#endif /* SOC_BLE_SUPPORTED */\n",
            "comment_added_diff": {},
            "comment_deleted_diff": {
                "130": "#endif // CONFIG_BLUEDROID_ENABLED"
            },
            "comment_modified_diff": {}
        }
    ],
    "BLEValue.h": [],
    "FreeRTOS.cpp": [],
    "GeneralUtils.cpp": [
        {
            "commit": "822f252b353cfd808c77c9bc8369bc0cb4e0b5be",
            "timestamp": "2023-10-06T15:50:11+03:00",
            "author": "Me No Dev",
            "commit_message": "BLE upgrades (#8724)\n\n* Renamed library description\r\n\r\n* Updated Eddystone URL (not complete)\r\n\r\n* Updated Eddystone URL\r\n\r\n* Updated Eddystone classes and beacon scanner\r\n\r\n* Renamed examples - removing prefix BLE_\r\n\r\n* Renamed Beacon_Scanner\r\n\r\n* Updated TLM\r\n\r\n* Changed std::string to Arduino String\r\n\r\n* More std::string -> String\r\n\r\n* Changed String in forgotten file\r\n\r\n* Changed .data to .c_str\r\n\r\n* Reverting single String type change\r\n\r\n* Few more fixes related to the String transition\r\n\r\n* Fixed URL and Utils error\r\n\r\n* Added and modified compatibility safeguards for BLE5 examples\r\n\r\n* Added #include WString.h\r\n\r\n* Fixed Beacon_Scanner\r\n\r\n* Remove commented include\r\n\r\nCo-authored-by: Lucas Saavedra Vaz <lucassvaz@yahoo.com.br>\r\n\r\n---------\r\n\r\nCo-authored-by: Tomas Pilny <tomas.pilny@espressif.com>\r\nCo-authored-by: Lucas Saavedra Vaz <lucassvaz@yahoo.com.br>",
            "additions": 51,
            "deletions": 44,
            "change_type": "MODIFY",
            "diff": "@@ -30,7 +30,7 @@ static int base64EncodedLength(size_t length) {\n } // base64EncodedLength\n \n \n-static int base64EncodedLength(const std::string& in) {\n+static int base64EncodedLength(const String& in) {\n \treturn base64EncodedLength(in.length());\n } // base64EncodedLength\n \n@@ -55,16 +55,17 @@ static void a4_to_a3(unsigned char* a3, unsigned char* a4) {\n  * @param [in] in\n  * @param [out] out\n  */\n-bool GeneralUtils::base64Encode(const std::string& in, std::string* out) {\n+bool GeneralUtils::base64Encode(const String& in, String* out) {\n+\tstd::string std_in(in.c_str());\n+\tstd::string std_out(out->c_str());\n \tint i = 0, j = 0;\n \tsize_t enc_len = 0;\n \tunsigned char a3[3];\n \tunsigned char a4[4];\n+\tstd_out.resize(base64EncodedLength(in));\n \n-\tout->resize(base64EncodedLength(in));\n-\n-\tint input_len = in.size();\n-\tstd::string::const_iterator input = in.begin();\n+\tint input_len = std_in.length();\n+\tstd::string::const_iterator input = std_in.begin();\n \n \twhile (input_len--) {\n \t\ta3[i++] = *(input++);\n@@ -72,7 +73,7 @@ bool GeneralUtils::base64Encode(const std::string& in, std::string* out) {\n \t\t\ta3_to_a4(a4, a3);\n \n \t\t\tfor (i = 0; i < 4; i++) {\n-\t\t\t\t(*out)[enc_len++] = kBase64Alphabet[a4[i]];\n+\t\t\t\t(std_out)[enc_len++] = kBase64Alphabet[a4[i]];\n \t\t\t}\n \n \t\t\ti = 0;\n@@ -87,15 +88,16 @@ bool GeneralUtils::base64Encode(const std::string& in, std::string* out) {\n \t\ta3_to_a4(a4, a3);\n \n \t\tfor (j = 0; j < i + 1; j++) {\n-\t\t\t(*out)[enc_len++] = kBase64Alphabet[a4[j]];\n+\t\t\t(std_out)[enc_len++] = kBase64Alphabet[a4[j]];\n \t\t}\n \n \t\twhile ((i++ < 3)) {\n-\t\t\t(*out)[enc_len++] = '=';\n+\t\t\t(std_out)[enc_len++] = '=';\n \t\t}\n \t}\n+\t*out = String(std_out.c_str());\n \n-\treturn (enc_len == out->size());\n+\treturn (enc_len == out->length());\n } // base64Encode\n \n \n@@ -121,27 +123,28 @@ void GeneralUtils::dumpInfo() {\n  * @param [in] c The character to look form.\n  * @return True if the string ends with the given character.\n  */\n-bool GeneralUtils::endsWith(std::string str, char c) {\n-\tif (str.empty()) {\n+bool GeneralUtils::endsWith(String str, char c) {\n+\tif (str.length() == 0) {\n \t\treturn false;\n \t}\n-\tif (str.at(str.length() - 1) == c) {\n+\tif (str.charAt(str.length() - 1) == c) {\n \t\treturn true;\n \t}\n \treturn false;\n } // endsWidth\n \n-\n-static int DecodedLength(const std::string& in) {\n+/*\n+static int DecodedLength(const String& in) {\n \tint numEq = 0;\n-\tint n = (int) in.size();\n+\tint n = (int) in.length();\n \n-\tfor (std::string::const_reverse_iterator it = in.rbegin(); *it == '='; ++it) {\n+\t//for (String::const_reverse_iterator it = in.rbegin(); *it == '='; ++it) {\n+\tfor (int it = in.length()-1; in.charAt(it) == '='; --it) {\n \t\t++numEq;\n \t}\n \treturn ((6 * n) / 8) - numEq;\n } // DecodedLength\n-\n+*/\n \n static unsigned char b64_lookup(unsigned char c) {\n \tif(c >='A' && c <='Z') return c - 'A';\n@@ -158,23 +161,24 @@ static unsigned char b64_lookup(unsigned char c) {\n  * @param [in] in The string to be decoded.\n  * @param [out] out The resulting data.\n  */\n-bool GeneralUtils::base64Decode(const std::string& in, std::string* out) {\n+bool GeneralUtils::base64Decode(const String& in, String* out) {\n \tint i = 0, j = 0;\n \tsize_t dec_len = 0;\n \tunsigned char a3[3];\n \tunsigned char a4[4];\n \n-\tint input_len = in.size();\n-\tstd::string::const_iterator input = in.begin();\n+\tint input_len = in.length();\n+\tint input_iterator = 0;\n \n-\tout->resize(DecodedLength(in));\n+\t//out->resize(DecodedLength(in));\n \n \twhile (input_len--) {\n-\t\tif (*input == '=') {\n+\t\t//if (*input == '=') {\n+\t\tif (in[input_iterator] == '=') {\n \t\t\tbreak;\n \t\t}\n \n-\t\ta4[i++] = *(input++);\n+\t\ta4[i++] = in[input_iterator++];\n \t\tif (i == 4) {\n \t\t\tfor (i = 0; i <4; i++) {\n \t\t\t\ta4[i] = b64_lookup(a4[i]);\n@@ -183,7 +187,8 @@ bool GeneralUtils::base64Decode(const std::string& in, std::string* out) {\n \t\t\ta4_to_a3(a3,a4);\n \n \t\t\tfor (i = 0; i < 3; i++) {\n-\t\t\t\t(*out)[dec_len++] = a3[i];\n+\t\t\t\tout->concat(a3[i]);\n+\t\t\t\tdec_len++;\n \t\t\t}\n \n \t\t\ti = 0;\n@@ -206,14 +211,14 @@ bool GeneralUtils::base64Decode(const std::string& in, std::string* out) {\n \t\t}\n \t}\n \n-\treturn (dec_len == out->size());\n+\treturn (dec_len == out->length());\n  } // base64Decode\n \n /*\n void GeneralUtils::hexDump(uint8_t* pData, uint32_t length) {\n \tuint32_t index=0;\n-\tstd::stringstream ascii;\n-\tstd::stringstream hex;\n+\tStringstream ascii;\n+\tStringstream hex;\n \tchar asciiBuf[80];\n \tchar hexBuf[80];\n \thex.str(\"\");\n@@ -251,8 +256,8 @@ void GeneralUtils::hexDump(uint8_t* pData, uint32_t length) {\n /*\n void GeneralUtils::hexDump(uint8_t* pData, uint32_t length) {\n \tuint32_t index=0;\n-\tstatic std::stringstream ascii;\n-\tstatic std::stringstream hex;\n+\tstatic Stringstream ascii;\n+\tstatic Stringstream hex;\n \thex.str(\"\");\n \tascii.str(\"\");\n \twhile(index < length) {\n@@ -331,11 +336,11 @@ void GeneralUtils::hexDump(const uint8_t* pData, uint32_t length) {\n  * @param ip The 4 byte IP address.\n  * @return A string representation of the IP address.\n  */\n-std::string GeneralUtils::ipToString(uint8_t *ip) {\n+String GeneralUtils::ipToString(uint8_t *ip) {\n \tauto size = 16;\n \tchar *val = (char*)malloc(size);\n \tsnprintf(val, size, \"%d.%d.%d.%d\", ip[0], ip[1], ip[2], ip[3]);\n-\tstd::string res(val);\n+\tString res(val);\n \tfree(val);\n \treturn res;\n } // ipToString\n@@ -347,17 +352,18 @@ std::string GeneralUtils::ipToString(uint8_t *ip) {\n  * @param [in] delimiter The delimiter characters.\n  * @return A vector of strings that are the split of the input.\n  */\n-std::vector<std::string> GeneralUtils::split(std::string source, char delimiter) {\n+std::vector<String> GeneralUtils::split(String source, char delimiter) {\n \t// See also: https://stackoverflow.com/questions/5167625/splitting-a-c-stdstring-using-tokens-e-g\n-\tstd::vector<std::string> strings;\n+\tstd::vector<String> strings;\n \tstd::size_t current, previous = 0;\n-\tcurrent = source.find(delimiter);\n+\tstd::string std_source(source.c_str());\n+\tcurrent = std_source.find(delimiter);\n \twhile (current != std::string::npos) {\n-\t\tstrings.push_back(trim(source.substr(previous, current - previous)));\n+\t\tstrings.push_back(trim(source.substring(previous, current)));\n \t\tprevious = current + 1;\n-\t\tcurrent = source.find(delimiter, previous);\n+\t\tcurrent = std_source.find(delimiter, previous);\n \t}\n-\tstrings.push_back(trim(source.substr(previous, current - previous)));\n+\tstrings.push_back(trim(source.substring(previous, current)));\n \treturn strings;\n } // split\n \n@@ -523,9 +529,9 @@ const char* GeneralUtils::wifiErrorToString(uint8_t errCode) {\n  * @param [in] value The string to convert to lower case.\n  * @return A lower case representation of the string.\n  */\n-std::string GeneralUtils::toLower(std::string& value) {\n+String GeneralUtils::toLower(String& value) {\n \t// Question: Could this be improved with a signature of:\n-\t// std::string& GeneralUtils::toLower(std::string& value)\n+\t// String& GeneralUtils::toLower(String& value)\n \tstd::transform(value.begin(), value.end(), value.begin(), ::tolower);\n \treturn value;\n } // toLower\n@@ -534,9 +540,10 @@ std::string GeneralUtils::toLower(std::string& value) {\n /**\n  * @brief Remove white space from a string.\n  */\n-std::string GeneralUtils::trim(const std::string& str) {\n-\tsize_t first = str.find_first_not_of(' ');\n+String GeneralUtils::trim(const String& str) {\n+\tstd::string std_str(str.c_str());\n+\tsize_t first = std_str.find_first_not_of(' ');\n \tif (std::string::npos == first) return str;\n-\tsize_t last = str.find_last_not_of(' ');\n-\treturn str.substr(first, (last - first + 1));\n+\tsize_t last = std_str.find_last_not_of(' ');\n+\treturn str.substring(first, (last + 1));\n } // trim\n",
            "comment_added_diff": {
                "534": "\t// String& GeneralUtils::toLower(String& value)"
            },
            "comment_deleted_diff": {
                "528": "\t// std::string& GeneralUtils::toLower(std::string& value)"
            },
            "comment_modified_diff": {}
        }
    ],
    ".skip.esp32c6": [],
    "BTAdvertisedDevice.h": [],
    "eeprom_extra.ino": [],
    "LEDCFade.ino": [],
    "LEDCSoftwareFade.ino": [],
    "SigmaDelta.ino": [],
    "ledcFrequency.ino": [],
    "ledcWrite_RGB.ino": [],
    "SmoothBlink_ULP_Code.ino": [],
    "ESPNow_Basic_Slave.ino": [],
    "ESPNow_MultiSlave_Slave.ino": [],
    "BasicMultiThreading.ino": [],
    "FunctionalInterrupt.ino": [],
    "FunctionalInterruptStruct.ino": [],
    "GPIOInterrupt.ino": [],
    "HallSensor.ino": [],
    "HiFreq_ADC.ino": [],
    "RMTCallback.ino": [],
    "RMTLoopback.ino": [],
    "RMTReadXJT.ino": [],
    "RMTWriteNeoPixel.ino": [],
    "RMT_CPUFreq_Test.ino": [],
    "RMT_LED_Blink.ino": [],
    "ResetReason.ino": [],
    "TWAIreceive.ino": [],
    "TWAItransmit.ino": [],
    "SimpleTime.ino": [],
    "RepeatTimer.ino": [],
    "WatchdogTimer.ino": [],
    "TouchRead.ino": [],
    "FFat_Test.ino": [],
    "FFat.cpp": [],
    "HTTPClient.h": [],
    "SimpleTone.ino": [],
    "I2S.cpp": [
        {
            "commit": "6f7a1ca76ada4d705d79ce863450c91349327a79",
            "timestamp": "2023-10-05T14:54:25+03:00",
            "author": "Me No Dev",
            "commit_message": "ESP-IDF v5.1 (#7733)\n\n* Initial changes to compile under ESP-IDF v5.1\r\n\r\n* Initial import for ESP-IDF v5.1 libs\r\n\r\n* Update toolchain\r\n\r\n* Update esp32-hal-psram.c\r\n\r\n* Add missing LDs\r\n\r\n* Update platform.txt\r\n\r\n* Stop some CI jobs, because they will always fail\r\n\r\n* Fix examples\r\n\r\n* Update app_httpd.cpp\r\n\r\n* Update ResetReason.ino\r\n\r\n* Warnings fixes\r\n\r\n* Added the example guideline and template (#7665)\r\n\r\n* Added the example guideline and template\r\n\r\n* PR review changes with some typos and grammar fixes\r\n\r\n* Changes according to the PR review\r\n\r\n* Added ESP32-S3 link to the datasheet (#7738)\r\n\r\n* Update HiFreq_ADC.ino\r\n\r\n* Replace periph_ctrl.h use because of deprecation\r\n\r\n* Replace esp_spi_flash.h use because of deprecation\r\n\r\n* Add includes to male mDNS::enableWorkstation compile\r\n\r\n* Fix ssl_client mbedtls_pk_parse_key callback\r\n\r\n* Update temperature sensor driver\r\n\r\n* Allow sketch_utils to compile with arduino-cli\r\n\r\n* Run CI with arduino-cli\r\n\r\n* Fix arduino-cli CI build on Windows\r\n\r\n* Refactor platform.txt to not use components installed through the board manager when running from git\r\n\r\n* Initial Peripheral Manager Implementation\r\n\r\n* Update SigmaDelta driver to use the new ESP-IDF driver API\r\n\r\n* Small improvements to peripheral manager and SigmaDelta\r\n\r\n* Remove deleted function from SigmaDelta header\r\n\r\n* Update DAC driver to use the new ESP-IDF driver API\r\n\r\n* Adds softAp(String) to make it compatible with ESP8266 (#7801)\r\n\r\n* Fix commentary (#7800)\r\n\r\nMinor fix based on observation done in https://github.com/espressif/arduino-esp32/issues/7795#issuecomment-1416868611\r\n\r\n* add adafruit new board feather esp32s2 reserve tft (#7794)\r\n\r\n* bugfix: add <stdint.h> for uint8_t to avoid compilation failure (GCC 11.2.0) (#7744)\r\n\r\n* Adding 3rd party boards for VALTRACK-V4-VTS-ESP32-C3 & VALTRACK-V4-MFW-ESP32-C3 (#7735)\r\n\r\n* Added VALTRACK-V4-VTS-ESP32-C3 board definition\r\n\r\nCreated pins_arduino.h & made changes to boards.txt with necessary changes\r\n\r\n* Modified the URL\r\n\r\n* Renamed json\r\n\r\n* renamed all auRL\r\n\r\n* Adding VALTRACK-V4 series board definitions\r\n\r\nAdded VALTRACK-V4-VTS-ESP32C3 & VALTRACK-V4-MFW-ESP32-C3 board variants\r\n\r\n* Adding VALTRACK-V4 series board definitions\r\n\r\nAdded VALTRACK-V4-VTS-ESP32C3 & VALTRACK-V4-MFW-ESP32-C3 board variants\r\n\r\n* Reverted package_esp32_index.template.json\r\n\r\nrestored package_esp32_index.template.json from edits\r\n\r\n* Reverted package_esp32_index.template.json\r\n\r\nAdded new line to package_esp32_index.template.json\r\n\r\n* Update Platformio CI (#7725)\r\n\r\n* WiFiClient example fix (#7711)\r\n\r\n* Modified WiFiClient example to use thingspeak instead of non-functionig sparkfun\r\n\r\n* Moved instructions to README\r\n\r\n* Fixed spelling\r\n\r\n* Added link to S3 datasheet\r\n\r\n---------\r\n\r\nCo-authored-by: Jan Proch\u00e1zka <90197375+P-R-O-C-H-Y@users.noreply.github.com>\r\n\r\n* Mirror update from Heltec repository (#7709)\r\n\r\nHeltec updated the I2C pins in https://github.com/Heltec-Aaron-Lee/WiFi_Kit_series/commit/b10f4bf85d13fd01be80dcdb0eb59e6a8c8ba19a\r\n\r\n* Fixes BLE data printing (#7699)\r\n\r\n* Fixes BLE data printing\r\n\r\nBLE data has no '\\0' terminator, therefore it can't be printed as a regular C string.\r\nThis fix just prints the BLE data based on its length.\r\n\r\n* Simplify printing to a single call\r\n\r\n* split menu options + lora_32_V3 fix (#7697)\r\n\r\n* Change header gaurd name (#7696)\r\n\r\n* Fix Name (#7691)\r\n\r\nWrong name in definitions.\r\n\r\n* Fix error in WiFiClient.cpp where the connect function fails for timeouts below 1 second (#7686)\r\n\r\n* Update WiFiClient.cpp\r\n\r\nThis change will allow specifying connect timeouts below 1 second. Without this change, if connect timeouts under 1 second are given, the connect defaults to 0ms and fails. \r\nThis will also allow timeouts in fractions of seconds, e.g. 1500ms. Without this change, connect timeouts are truncated to full second increments.\r\n\r\n* Make parameter timeout_ms clear\r\n\r\n* Change connection timeout_ms name for clarity\r\n\r\n---------\r\n\r\nCo-authored-by: Rodrigo Garcia <rodrigo.garcia@espressif.com>\r\n\r\n* fixed the function header (#7674)\r\n\r\n* fixed the function header\r\n\r\n* fixed function name and paramaters\r\n\r\n---------\r\n\r\nCo-authored-by: Jan Procha\u0301zka <90197375+P-R-O-C-H-Y@users.noreply.github.com>\r\n\r\n* Ticker fix solving #6155 (#7664)\r\n\r\n* Wrapped Ticker functions with #pragma disabling -Wcast-function-type\r\n\r\n* Revert \"Wrapped Ticker functions with #pragma disabling -Wcast-function-type\"\r\n\r\nThis reverts commit 160be7e67a10d01b6e44c4bf2521c0ccd6348976.\r\n\r\n* Fixed Ticker example\r\n\r\n* Modified Ticker example\r\n\r\n* Fixed LED_BUILTIN err for ESP32\r\n\r\n---------\r\n\r\nCo-authored-by: Jan Proch\u00e1zka <90197375+P-R-O-C-H-Y@users.noreply.github.com>\r\n\r\n* setPins fix ESP32 \"specified pins are not supported by this chip.\" (#7646)\r\n\r\n[ESP32: SDMMCFS::begin hardcodes the usage of slot 1, only check if the pins match slot 1 pins.]\r\n\r\nsetPins() was testing pins D1, D2 and D3 all against D1 ... fine in 1 pin mode when all are -1 not so much if you're trying to get 4 pin mode working.\r\nI now see this function doesn't really do anything on the ESP32...accept now correctly checks that you are trying to use the slot 1 pins.\r\n\r\nCo-authored-by: Jan Proch\u00e1zka <90197375+P-R-O-C-H-Y@users.noreply.github.com>\r\n\r\n* Allow passing IP as connect method parameter in WiFiClientSecure and skip unnecessary host-ip conversions (#7643)\r\n\r\n* Add LED_BUILTIN* definitions and initialization for LEDs to stop them floating. (#7636)\r\n\r\nCo-authored-by: Rodrigo Garcia <rodrigo.garcia@espressif.com>\r\n\r\n* Expand path to tinuf2 image when checking existence in platformio-build.py (#7631)\r\n\r\n* Expand path to tinuf2 image when checking existence\r\n\r\n* More isFiles fixed\r\n\r\n* Remove (useless) trailing semicolon from Print.cpp (#7622)\r\n\r\n* ADD: New variant Edgebox-ESP-100 (#7771)\r\n\r\n* ADD: New variant Edgebox-ESP-100\r\n\r\n* FIX: Edgebox-ESP-100 Board.txt usb mode option change back to default value as ESP32S3\r\n\r\n* Add Crabik Slot ESP32-S3 board (#7790)\r\n\r\n* Added Crabik Slot ESP32-S3\r\n\r\n* Adding CPU frequency settings and removing excess from partition scheme settings\r\n\r\n* new variant LilyGO T-Display-S3 (#7763)\r\n\r\n* new variant LilyGO T-Display-S3\r\n\r\nhttps://github.com/Xinyuan-LilyGO/T-Display-S3\r\n\r\n* Add boards.txt definition\r\n\r\n---------\r\n\r\nCo-authored-by: Me No Dev <me-no-dev@users.noreply.github.com>\r\n\r\n* Update get.py to support Apple ARM64\r\n\r\n* Update package_esp32_index.template.json\r\n\r\n* WString Return bool (#7774)\r\n\r\n* Add Roboheart Hercules development board to the esp32-core (#7672)\r\n\r\n* added Roboheart Hercules pin definitions and board.txt entries\r\n\r\n* added package_roboheat.json for prototyping\r\n\r\n* Roboheart Hercules pins\r\n\r\n* Updated the pins\r\n\r\n* Delete package_roboheart.json\r\n\r\n* Requested changes\r\n\r\n---------\r\n\r\nCo-authored-by: renebohne <rene.bohne@gmail.com>\r\n\r\n* Reword \"ESP-IDF as Component\" (#7812)\r\n\r\nI think \"Arduino as an ESP-IDF component\" or just \"As ESP-IDF component\" instead of  \"ESP-IDF as Component\" is more correct way to name the link.\r\n\r\n1. \"ESP-IDF as Component\" would imply that ESP-IDF is some sort of library for Arduino, which is (IMO) misleading, because it's true the other way around.\r\n2. It's written as \"Arduino as an ESP-IDF component\" on the webpage it points to as well.\r\n\r\n- Also I removed the capitalization from \"Component\" as I have not found a reason why is it capitalized.\r\n\r\n* add new board Adafruit Feather ESP32-S3 Reverse TFT (#7811)\r\n\r\n* Multi threading examples (tasks, queues, semaphores, mutexes) (#7660)\r\n\r\n* Moved and renamed example ESP32/FreeRTOS to MultiThreading/BasicMultiThreading\r\n\r\n* Added dummy files\r\n\r\n* Modified original example\r\n\r\n* Fixed BasicMultiThreading.ino\r\n\r\n* Added Example demonstrating use of queues\r\n\r\n* Extended info in BasicMultiThreading\r\n\r\n* Renamed Queues to singular Queue\r\n\r\n* Added Mutex example\r\n\r\n* Added Semaphore example\r\n\r\n* Moved info from example to README\r\n\r\n* Moved doc from Mutex to README\r\n\r\n* Added Queue README\r\n\r\n* Removed unecesary text\r\n\r\n* Fixed grammar\r\n\r\n* Increased stack size for Sempahore example\r\n\r\n* Added headers into .ino files\r\n\r\n* Added word Example at the end of title in README\r\n\r\n* removed unused line\r\n\r\n* Added forgotten README\r\n\r\n* Modified BasicMultiThreading example\r\n\r\n* Added missing S3 entry in README\r\n\r\n* moved location\r\n\r\n* Update ESP-IDF libs\r\n\r\n* Update CMakeLists.txt\r\n\r\n* Update esptool to v4.4\r\n\r\n* Add function timerAttachInterruptFlag (#7809)\r\n\r\n* Update esptool to v4.5\r\n\r\n* ADC refactoring (#7827)\r\n\r\n* Adc refactored + periman implementation\r\n\r\nPeripheral manager still needs to be checked if the implementation is right.\r\n\r\n* switched to working solution for milivolts read\r\n\r\n* Periman detachbus fix\r\n\r\n* coding style\r\n\r\n* fix CI warnings\r\n\r\n* fix FreeRTOS example\r\n\r\n* Update ETH.cpp\r\n\r\n* Update FunctionalInterruptStruct.ino\r\n\r\n* Update package_esp32_index.template.json\r\n\r\n* Update package_esp32_index.template.json\r\n\r\n* Fixes for the latest IDF v5.1\r\n\r\n* update esp-idf libs and toolchain\r\n\r\n* Turn OFF auto crystal frequency for ESP32 (needed by TWAI)\r\n\r\n* Update examples\r\n\r\n* Switch build to mostly use flags from files\r\n\r\nIncludes can not be done this way\r\n\r\n* Reorganize flag files\r\n\r\n* Optimize chip build flags further\r\n\r\n* Revert defines from file. MBEDTLS_CONFIG_FILE does not properly expand\r\n\r\n* Add support for includes and defines from file\r\n\r\n* Replace old sdk path references in platform.txt\r\n\r\n* use gcc-ar (#8013)\r\n\r\n* Makes F_CPU generic for all SoC (#8007)\r\n\r\nBased on CONFIG_ESP_DEFAULT_CPU_FREQ_MHZ that is correctly defined in the sdkconfig file for each SoC.\r\n\r\n* TIMER refactoring (#7904)\r\n\r\n* refactor using GPtimer\r\n\r\n* Updated timer HW test\r\n\r\n* fix examples\r\n\r\n* Add v2.0.7 in issue template (#7871)\r\n\r\n* refactor using GPtimer\r\n\r\n* Updated timer HW test\r\n\r\n* fix examples\r\n\r\n* Revert \"Add v2.0.7 in issue template (#7871)\"\r\n\r\nThis reverts commit fcc3b17d62ff57861f8913ca1f142fd5163b7457.\r\n\r\n* Update upload-artifact to v3 in HW CI\r\n\r\n* Revert \"Update upload-artifact to v3 in HW CI\"\r\n\r\nThis reverts commit 1ba228071718ba37c4e26d98db22f77b2a7364a6.\r\n\r\n* replace resolution with frequency\r\n\r\n* remove count_down option\r\n\r\n* countup removed from examples + header\r\n\r\n* Refactored timer object\r\n\r\n* code cleanup + examples and tests fixes\r\n\r\n* TimerAlarm fix\r\n\r\n---------\r\n\r\nCo-authored-by: Vojt\u011bch Barto\u0161ka <76958047+VojtechBartoska@users.noreply.github.com>\r\n\r\n* [Docs] ADC and Timer API Update (+some docs fixes) (#7906)\r\n\r\n* updated docs\r\n\r\n* remove hall sensor docs\r\n\r\nRemoved Hall sensor documentation as its no longer supported in IDF-5\r\n\r\n* Fixed ESPNow examples location in docs\r\n\r\n* Last timer refactored API + gpio small fix\r\n\r\n* AlarmWrite fix\r\n\r\n* Fixes APLL/PLL with RTC Frequency (#8025)\r\n\r\nlog_d() was displaying APLL for any SoC, but S3 and C3 has not such option, causing compilation errors.\r\n\r\n* Update IDF libs and fix OPI PSRAM on S3\r\n\r\n* Add setMode function HardwareSerial.c to set the esp32 uart mode for use with RS485 auto RTS (#7935)\r\n\r\n* Added setMode function to set the esp32 uart mode\r\n\r\nUsed to set the esp32 uart mode for use with RS485 Half Duplex and the auto RTS pin mode. This will set/clear the RTS pin output to control the RE/DE pin on most RS485 chips.\r\n\r\n* Add Success (bool) return in some functions\r\n\r\n* Add Success (bool) return code to some functions\r\n\r\n* Add Success (bool) return to some functions\r\n\r\n* Add Success (bool) return to some functions\r\n\r\n* Fix uartSetRxTimeout return type\r\n\r\n---------\r\n\r\nCo-authored-by: Rodrigo Garcia <rodrigo.garcia@espressif.com>\r\n\r\n* Add support for esp-elf-gdb\r\n\r\n* WFG Crashfix (#8044)\r\n\r\n* Update component libs\r\n\r\n* IDF release/v5.1 (#8061)\r\n\r\n* IDF release/v5.1 bb9200acec\r\n\r\n* Update Esp.cpp\r\n\r\n* IDF release/v5.1 420ebd208a\r\n\r\n* Update esp32-hal-psram.c\r\n\r\n* Switch SDK to be an external package\r\n\r\n* fix path (#8096)\r\n\r\n* Makes UART work at any APB Frequency (#8097)\r\n\r\nFixes HardwareSerial to work with IDF 5.1 on any CPU/APB Frequency (240MHz to 10MHZ), including user created low power modes.\r\n\r\n* Add required callbacks for TinyUSB DFU\r\n\r\n* Update version to 3.0.0\r\n\r\n* Add ESP.getCoreVersion() and update ESP.getChipModel()\r\n\r\n* Update timer hal for the latest 5.1\r\n\r\n* Use separate RX and TX buffer sizes in HTTP client\r\n\r\noptimizes download by allowing up to 4K packets to be received\r\n\r\n* Rename clock tree enum name in latest 5.1\r\n\r\n* ESP32-H4 support was removed in ESP-IDF v5.1\r\n\r\n* IDF release/v5.1 2004bf4e11 (#8165)\r\n\r\n* Deinit previous bus first (#8180)\r\n\r\n* TIMER - add timer_started flag, fix timerEnd() + timer HW test (#8135)\r\n\r\n* Add timer_started flag and stop before disable\r\n\r\n* Fix timer HW test\r\n\r\n* TOUCH - Peripheral manager implementation (#8129)\r\n\r\n* Touch periman implemented\r\n\r\n* Deinit previous bus first\r\n\r\n* LEDC Refactoring - Peripheral manager implemented (#8126)\r\n\r\n* LEDC periman implementation\r\n\r\n* Fix examples\r\n\r\n* Rework tone\r\n\r\n* Update ledc docs\r\n\r\n* fix missing bracket\r\n\r\n* Update analog funtions esp32-hal.h\r\n\r\n* Update CameraWebServer example\r\n\r\n* Fix HiFreq_ADC example\r\n\r\n* minor fixes - typos\r\n\r\n* Avoid calling tone/notone when tone already runs on dif. pin\r\n\r\n* Remove unused channels_resolution\r\n\r\n* GPIO - Peripheral manager implementation (#8179)\r\n\r\n* periman-implementation\r\n\r\n* fix RGB_BUILTIN and remove space\r\n\r\n* Enforces more consistency into Peripheral Manager (#8188)\r\n\r\n* Avoid log_i() message the first time a bus is assigned\r\n\r\n* Prevent operation with ESP32_BUS_TYPE_INIT\r\n\r\n* keeps coding style\r\n\r\n* do not print messages on INIT bus type\r\n\r\n* [Arduino Core 3.0.0] RMT IDF5.1 Refactoring (#7994)\r\n\r\n* RMT IDF5.1 refactoring\r\n\r\n* Fixes initial value setting\r\n\r\n* removed rmtRead() with user callback\r\n\r\n* simplify/remove Read data structure\r\n\r\n* Deep API simplification\r\n\r\n* fixes the examples\r\n\r\n* fix rmt.h\r\n\r\n* adds support to APB different frequencies\r\n\r\n* fixes CI and not defined RGB_BUILTIN\r\n\r\n* new RMT API and examples\r\n\r\n* fixing commentaties\r\n\r\n* Update esp32-hal-rgb-led.c\r\n\r\n* changes Filter API\r\n\r\n* Fixes example with Filter API\r\n\r\n* Update PlatformIO scripts for the upcoming 3.0 core (#8183)\r\n\r\n* Update PlatformIO scripts for the upcoming 3.0 core\r\n\r\n* Dynamically select proper framework-arduinoespressif32-libs package\r\n\r\nWith this change the dev-platform will be dynamically configured to\r\npull the latest .zip package with precompiled libraries from extracted from\r\npackage_esp32_index.template.json\r\n\r\n* free memory on detach (#8264)\r\n\r\n* SPI - Peripheral manager implementation  (#8255)\r\n\r\n* spi periman implementation\r\n\r\n* fix header file\r\n\r\n* remove unused struct\r\n\r\n* fix missing braces\r\n\r\n* Update esp32-hal-rmt.c (#8216)\r\n\r\nOptimizing Peripheral Manager Test\r\n\r\n* I2C - Peripheral manager implementation (#8220)\r\n\r\n* i2c-master periman initial commit\r\n\r\n* i2c-master make detachbus static + comment remove\r\n\r\n* i2c-slave periman implementation\r\n\r\n* SetPinBus to INIT on i2cDeinits\r\n\r\n* Fix slave pins deinit\r\n\r\n* remove dbg logs\r\n\r\n* set ret to ESP_FAIL instead of returning\r\n\r\n* Fix warnings in hal-spi caused by pariman transition\r\n\r\n* Update esptool.py to version 4.6\r\n\r\n* Add platform support for ESP_SR\r\n\r\n* Add USB Type and valid pin check to periman\r\n\r\n* replace bus with spi->num+1 (#8279)\r\n\r\n* Remove default pins from SPI HAL\r\n\r\n* Add commented out handlers for esptool.js in TinyUSB CDC\r\n\r\nFor future use\r\n\r\n* Add build defines for host os and fqbn (for debug purposes)\r\n\r\n* Provide proper memory caps total size\r\n\r\n* Update Esp.cpp\r\n\r\n* SDMMC - Peripheral manager implementation (#8289)\r\n\r\n* sdmmc periman implemented\r\n\r\n* save pins when SOC_SDMMC_USE_IOMUX\r\n\r\n* IDF release/v5.1 4bc762621d (#8292)\r\n\r\n* Adds missing pinMode (#8312)\r\n\r\n* Adds missing pinMode\r\n\r\nThe example code lacks a pinMode() to initialize the GPIO 0 (button). In Arduino Core 3.0.0, it prints an error message when trying to read a not initialized GPIO.\r\n\r\n* Update KeyboardLogout.ino\r\n\r\nAdds <buttonPin> to keep code standard\r\n\r\n* Update KeyboardReprogram.ino\r\n\r\nAdds <buttonPin> to keep code standard\r\n\r\n* LEDC Fade implementation (#8338)\r\n\r\n* fade API + pointer fixes\r\n\r\n* Add fade api\r\n\r\n* Add fade example\r\n\r\n* update ledc docs\r\n\r\n* remove unused variables\r\n\r\n* fix path to example\r\n\r\n* Adds USB to Peripheral Manager - Arduino Core 3.0.0 (#8335)\r\n\r\n* ETHERNET - Peripheral manager implementation (#8297)\r\n\r\n* Peripheral manager implemented\r\n\r\n* remove unused variable\r\n\r\n* Add all RMII pins\r\n\r\n* fix typo\r\n\r\n* Adds HardwareSerial to Peripheral Manager Arduino 3.0.0 (#8328)\r\n\r\n* Do not limit ETHERNET in periman to only ESP32. SPI is also an option\r\n\r\n* Initial support for ESP32-C6 (#8337)\r\n\r\n* Add checks for SOC defines (#8351)\r\n\r\n* Add checks for SOC defines\r\n\r\n* Add SoC checks to BLE library\r\n\r\n* fix i2c compilation error\r\n\r\n* fix wrong placement of include\r\n\r\n* add check to SPI library\r\n\r\n* add check to USB library\r\n\r\n* add checks to Wire library\r\n\r\n* Feature/esp32h2 support (#8373)\r\n\r\n* Initial support for ESP32H2\r\n\r\n* Additional changes for ESP32H2\r\n\r\n* Update libs for ESP32H2\r\n\r\n* Fix flashing on ESP32-H2\r\n\r\n* Fix GPIO Configs for ESP32-C6 and ESP32-H2\r\n\r\n* Update Timer test sketch\r\n\r\n* Fix upload flash parameters\r\n\r\n* Use ets_write_char_uart instead of ets_printf in log_printfv\r\n\r\n* Print full chip report when log level is sufficient (#8282)\r\n\r\n* ESP32-C3 does not have ets_write_char_uart\r\n\r\n* Fix BLE gap event name\r\n\r\n* HW Testing - Pytest update (#8389)\r\n\r\n* update tests requirements\r\n\r\n* remove already handled components\r\n\r\n* Update version of pytest\r\n\r\n* Add missing ESP32-H2 to hil.yml\r\n\r\n* Updated FreeRTOS names (#8418)\r\n\r\n* HW Testing -  ESP32-C6 + ESP32-H2 fixes (#8404)\r\n\r\n* add C6/H2 to tests cfg.json\r\n\r\n* remove ,\r\n\r\n* workflow runs-on runner by matrix\r\n\r\n* Add need for arduino tag to select runner\r\n\r\n* Add cryptography to requirements.txt\r\n\r\n* Removed duplicate TX1 define for H2 (#8402)\r\n\r\n* Fix broken examples\r\n\r\n* Fixes RMT filter & idle timing and setup (#8359)\r\n\r\n* Fixes Filter and Idle parameter to uint32\r\n\r\n* Fixes Filter and Idle setup\r\n\r\n* Fixes it to 5.1Libs branch\r\n\r\n* fix RMT CLK source and Filter API\r\n\r\n* fixes missing ;\r\n\r\n* fixes missing ;\r\n\r\n* fixes RMT example\r\n\r\n* IDF release/v5.1 a7b62bbcaf (#8438)\r\n\r\n* Add workflow to build executables from python scripts (#8290)\r\n\r\n* Add workflow to build executables from python scripts\r\n\r\n* Push binary to tools\r\n\r\n* Enable executable signing on Windows\r\n\r\n* Update get.py\r\n\r\n* Push binary to tools\r\n\r\n* Try with multiple files\r\n\r\n* Try more actions\r\n\r\n* Try powershell\r\n\r\n* Restore tools so they do not get rebuilt\r\n\r\n* Finalize scripts\r\n\r\n* Push binary to tools\r\n\r\n* App rollback should be after PSRAM is initialized\r\n\r\n* Correcting RX1 to GPIO4 and TX1 to GPIO5 to be consistent with documentation. Previous pin use works but is inconsistent with C6 docs.\r\n\r\n* Fixes Memory Leak (#8486)\r\n\r\n* fixes preprocessor test (#8485)\r\n\r\n* fixes preprocessor test\r\n\r\nWhen using `#define USE_SOFT_AP` \r\nChange\r\n`&& not USE_SOFT_AP` ==> `&& !defined(USE_SOFT_AP)`\r\n\r\n* Adds any BLE capable device in WiFiProv.ino\r\n\r\nRemoving ESP32 restriction for BLE Provisioning.\r\n\r\n* fix flash mode read out for C6\r\n\r\n* Add option for custom partitions without restrictions\r\n\r\n* SD_MMC update (#8298)\r\n\r\n* Updated SD_MMC lib and examples\r\n\r\n* Removed getter implementation and commented usage in examples\r\n\r\n* squashed updates\r\n\r\n* IDF release/v5.1 f0437b945f (#8599)\r\n\r\n* Update package_esp32_index.template.json\r\n\r\n* Fix printf format build error in BTAdvertisedDeviceSet.cpp\r\n\r\n---------\r\n\r\nCo-authored-by: Pedro Minatel <pedro.minatel@espressif.com>\r\nCo-authored-by: Rodrigo Garcia <rodrigo.garcia@espressif.com>\r\nCo-authored-by: Ha Thach <thach@tinyusb.org>\r\nCo-authored-by: Martin Turski <quiret@vfemail.net>\r\nCo-authored-by: raviypujar <raviypujar@gmail.com>\r\nCo-authored-by: Jason2866 <24528715+Jason2866@users.noreply.github.com>\r\nCo-authored-by: Tom\u00e1\u0161 Piln\u00fd <34927466+PilnyTomas@users.noreply.github.com>\r\nCo-authored-by: Jan Proch\u00e1zka <90197375+P-R-O-C-H-Y@users.noreply.github.com>\r\nCo-authored-by: Daniel Berlin <dberlin@dberlin.org>\r\nCo-authored-by: Nima Askari (\u0646\u06cc\u0645\u0627 \u0639\u0633\u06a9\u0631\u06cc) <nimaltd@yahoo.com>\r\nCo-authored-by: rtpmsys <106180646+rtpmsys@users.noreply.github.com>\r\nCo-authored-by: bytiful <55647551+bytiful@users.noreply.github.com>\r\nCo-authored-by: tmfarrington <tmfarrington@users.noreply.github.com>\r\nCo-authored-by: Krzysiek S <chris.streh@gmail.com>\r\nCo-authored-by: surt <carl.olsson@gmail.com>\r\nCo-authored-by: Max Scheffler <max.scheffler@pm.me>\r\nCo-authored-by: Clemens Kirchgatterer <clemens@1541.org>\r\nCo-authored-by: Peter Pan's Techland <twinkle-pirate@hotmail.com>\r\nCo-authored-by: Roman <programmeofficemilkyway@gmail.com>\r\nCo-authored-by: Eistee <Eistee82@users.noreply.github.com>\r\nCo-authored-by: David McCurley <44048235+mrengineer7777@users.noreply.github.com>\r\nCo-authored-by: Gaya3N25 <30388176+Gaya3N25@users.noreply.github.com>\r\nCo-authored-by: renebohne <rene.bohne@gmail.com>\r\nCo-authored-by: Oliv\u00e9r Rem\u00e9ny <25034625+remenyo@users.noreply.github.com>\r\nCo-authored-by: davidk88 <david.kotar@gmail.com>\r\nCo-authored-by: Vojt\u011bch Barto\u0161ka <76958047+VojtechBartoska@users.noreply.github.com>\r\nCo-authored-by: James Armstrong <jamesarmstrong3@me.com>\r\nCo-authored-by: Valerii Koval <valeros@users.noreply.github.com>\r\nCo-authored-by: Peter G. Jensen <root@petergjoel.dk>",
            "additions": 15,
            "deletions": 1,
            "change_type": "MODIFY",
            "diff": "@@ -144,7 +144,20 @@ int I2SClass::_installDriver(){\n     .intr_alloc_flags = ESP_INTR_FLAG_LEVEL2,\n     .dma_buf_count = _I2S_DMA_BUFFER_COUNT,\n     .dma_buf_len = _i2s_dma_buffer_size,\n-    .use_apll = false\n+    .use_apll = false,\n+    #warning The following values are new and need to be checked\n+    .tx_desc_auto_clear = true,\n+    .fixed_mclk = 0,\n+    .mclk_multiple = esp_i2s::I2S_MCLK_MULTIPLE_128,\n+    .bits_per_chan = esp_i2s::I2S_BITS_PER_CHAN_DEFAULT\n+#if SOC_I2S_SUPPORTS_TDM\n+    ,.chan_mask = esp_i2s::I2S_CHANNEL_STEREO,\n+    .total_chan = 2,\n+    .left_align = false,\n+    .big_edin = false,\n+    .bit_order_msb = false,\n+    .skip_msk = false\n+#endif // SOC_I2S_SUPPORTS_TDM\n   };\n \n   if(_driveClock == false){\n@@ -317,6 +330,7 @@ int I2SClass::begin(int mode, int sampleRate, int bitsPerSample, bool driveClock\n int I2SClass::_applyPinSetting(){\n   if(_driverInstalled){\n     esp_i2s::i2s_pin_config_t pin_config = {\n+      .mck_io_num = I2S_PIN_NO_CHANGE,\n       .bck_io_num = _sckPin,\n       .ws_io_num = _fsPin,\n       .data_out_num = I2S_PIN_NO_CHANGE,\n",
            "comment_added_diff": {
                "160": "#endif // SOC_I2S_SUPPORTS_TDM"
            },
            "comment_deleted_diff": {},
            "comment_modified_diff": {}
        }
    ],
    "LITTLEFS_test.ino": [],
    "SD_Test.ino": [],
    "SD_time.ino": [],
    "SDMMC_time.ino": [],
    "SD_MMC.h": [],
    "SPI.cpp": [],
    "SPI.h": [],
    "SPIFFS_Test.ino": [],
    "CompositeDevice.ino": [],
    "CustomHIDDevice.ino": [],
    "KeyboardLogout.ino": [],
    "KeyboardReprogram.ino": [],
    "USBMSC.ino": [],
    "USBSerial.ino": [],
    "USBVendor.ino": [],
    "USBHID.cpp": [],
    "USBHID.h": [],
    "USBHIDConsumerControl.cpp": [],
    "USBHIDConsumerControl.h": [],
    "USBHIDGamepad.cpp": [],
    "USBHIDGamepad.h": [],
    "USBHIDKeyboard.cpp": [],
    "USBHIDKeyboard.h": [],
    "USBHIDMouse.cpp": [],
    "USBHIDMouse.h": [],
    "USBHIDSystemControl.cpp": [],
    "USBHIDSystemControl.h": [],
    "USBHIDVendor.cpp": [],
    "USBHIDVendor.h": [],
    "USBVendor.cpp": [],
    "USBVendor.h": [],
    "StartCounter.ino.bin": [],
    "HTTPS_OTA_Update.ino": [],
    "HttpsOTAUpdate.cpp": [],
    "SDWebServer.ino": [],
    "WebServer.h": [],
    "FTM_Initiator.ino": [],
    "WiFiScan.ino": [],
    "WireMaster.ino": [],
    "WireSlave.ino": [],
    "Wire.cpp": [],
    "Wire.h": [],
    "package.json": [],
    "package_esp32_index.template.json": [],
    "cfg.json": [],
    "requirements.txt": [],
    "timer.ino": [],
    "espota.exe": [],
    "gen_esp32part.py": [],
    "get.exe": [],
    "get.py": [],
    "esp_sr_16.csv": [],
    "platformio-build-esp32.py": [],
    "platformio-build-esp32c3.py": [],
    "platformio-build-esp32s2.py": [],
    "platformio-build-esp32s3.py": [],
    "bootloader_dio_40m.elf": [],
    "bootloader_dio_80m.elf": [],
    "bootloader_dout_40m.elf": [],
    "bootloader_dout_80m.elf": [],
    "bootloader_qio_40m.elf": [],
    "bootloader_qio_80m.elf": [],
    "bootloader_qout_40m.elf": [],
    "bootloader_qout_80m.elf": [],
    "sdkconfig.h": [],
    "libspi_flash.a": [],
    "esp_app_trace.h": [],
    "esp_app_trace_util.h": [],
    "esp_sysview_trace.h": [],
    "esp_ota_ops.h": [],
    "asio.hpp": [],
    "associated_allocator.hpp": [],
    "associated_executor.hpp": [],
    "async_result.hpp": [],
    "awaitable.hpp": [],
    "basic_datagram_socket.hpp": [],
    "basic_deadline_timer.hpp": [],
    "basic_io_object.hpp": [],
    "basic_raw_socket.hpp": [],
    "basic_seq_packet_socket.hpp": [],
    "basic_serial_port.hpp": [],
    "basic_signal_set.hpp": [],
    "basic_socket.hpp": [],
    "basic_socket_acceptor.hpp": [],
    "basic_socket_iostream.hpp": [],
    "basic_socket_streambuf.hpp": [],
    "basic_stream_socket.hpp": [],
    "basic_streambuf.hpp": [],
    "basic_streambuf_fwd.hpp": [],
    "basic_waitable_timer.hpp": [],
    "bind_executor.hpp": [],
    "buffer.hpp": [],
    "buffered_read_stream.hpp": [],
    "buffered_read_stream_fwd.hpp": [],
    "buffered_stream.hpp": [],
    "buffered_stream_fwd.hpp": [],
    "buffered_write_stream.hpp": [],
    "buffered_write_stream_fwd.hpp": [],
    "buffers_iterator.hpp": [],
    "co_spawn.hpp": [],
    "completion_condition.hpp": [],
    "compose.hpp": [],
    "connect.hpp": [],
    "coroutine.hpp": [],
    "deadline_timer.hpp": [],
    "defer.hpp": [],
    "detached.hpp": [],
    "array.hpp": [],
    "array_fwd.hpp": [],
    "assert.hpp": [],
    "atomic_count.hpp": [],
    "base_from_completion_cond.hpp": [],
    "bind_handler.hpp": [],
    "buffer_resize_guard.hpp": [],
    "buffer_sequence_adapter.hpp": [],
    "buffered_stream_storage.hpp": [],
    "call_stack.hpp": [],
    "chrono.hpp": [],
    "chrono_time_traits.hpp": [],
    "completion_handler.hpp": [],
    "concurrency_hint.hpp": [],
    "conditionally_enabled_event.hpp": [],
    "conditionally_enabled_mutex.hpp": [],
    "config.hpp": [],
    "consuming_buffers.hpp": [],
    "cstddef.hpp": [],
    "cstdint.hpp": [],
    "date_time_fwd.hpp": [],
    "deadline_timer_service.hpp": [],
    "dependent_type.hpp": [],
    "descriptor_ops.hpp": [],
    "descriptor_read_op.hpp": [],
    "descriptor_write_op.hpp": [],
    "dev_poll_reactor.hpp": [],
    "epoll_reactor.hpp": [],
    "event.hpp": [],
    "eventfd_select_interrupter.hpp": [],
    "executor_function.hpp": [],
    "executor_op.hpp": [],
    "fd_set_adapter.hpp": [],
    "fenced_block.hpp": [],
    "functional.hpp": [],
    "future.hpp": [],
    "gcc_arm_fenced_block.hpp": [],
    "gcc_hppa_fenced_block.hpp": [],
    "gcc_sync_fenced_block.hpp": [],
    "gcc_x86_fenced_block.hpp": [],
    "global.hpp": [],
    "handler_alloc_helpers.hpp": [],
    "handler_cont_helpers.hpp": [],
    "handler_invoke_helpers.hpp": [],
    "handler_tracking.hpp": [],
    "handler_type_requirements.hpp": [],
    "handler_work.hpp": [],
    "hash_map.hpp": [],
    "kqueue_reactor.hpp": [],
    "select_reactor.hpp": [],
    "service_registry.hpp": [],
    "strand_executor_service.hpp": [],
    "strand_service.hpp": [],
    "win_iocp_io_context.hpp": [],
    "winrt_timer_scheduler.hpp": [],
    "io_control.hpp": [],
    "io_object_executor.hpp": [],
    "io_object_impl.hpp": [],
    "is_buffer_sequence.hpp": [],
    "is_executor.hpp": [],
    "keyword_tss_ptr.hpp": [],
    "limits.hpp": [],
    "local_free_on_block_exit.hpp": [],
    "macos_fenced_block.hpp": [],
    "memory.hpp": [],
    "mutex.hpp": [],
    "non_const_lvalue.hpp": [],
    "noncopyable.hpp": [],
    "null_event.hpp": [],
    "null_fenced_block.hpp": [],
    "null_global.hpp": [],
    "null_mutex.hpp": [],
    "null_reactor.hpp": [],
    "null_signal_blocker.hpp": [],
    "null_socket_service.hpp": [],
    "null_static_mutex.hpp": [],
    "null_thread.hpp": [],
    "null_tss_ptr.hpp": [],
    "object_pool.hpp": [],
    "old_win_sdk_compat.hpp": [],
    "op_queue.hpp": [],
    "operation.hpp": [],
    "pipe_select_interrupter.hpp": [],
    "pop_options.hpp": [],
    "posix_event.hpp": [],
    "posix_fd_set_adapter.hpp": [],
    "posix_global.hpp": [],
    "posix_mutex.hpp": [],
    "posix_signal_blocker.hpp": [],
    "posix_static_mutex.hpp": [],
    "posix_thread.hpp": [],
    "posix_tss_ptr.hpp": [],
    "push_options.hpp": [],
    "reactive_descriptor_service.hpp": [],
    "reactive_null_buffers_op.hpp": [],
    "reactive_serial_port_service.hpp": [],
    "reactive_socket_accept_op.hpp": [],
    "reactive_socket_connect_op.hpp": [],
    "reactive_socket_recv_op.hpp": [],
    "reactive_socket_recvfrom_op.hpp": [],
    "reactive_socket_recvmsg_op.hpp": [],
    "reactive_socket_send_op.hpp": [],
    "reactive_socket_sendto_op.hpp": [],
    "reactive_socket_service.hpp": [],
    "reactive_socket_service_base.hpp": [],
    "reactive_wait_op.hpp": [],
    "reactor.hpp": [],
    "reactor_fwd.hpp": [],
    "reactor_op.hpp": [],
    "reactor_op_queue.hpp": [],
    "recycling_allocator.hpp": [],
    "regex_fwd.hpp": [],
    "resolve_endpoint_op.hpp": [],
    "resolve_op.hpp": [],
    "resolve_query_op.hpp": [],
    "resolver_service.hpp": [],
    "resolver_service_base.hpp": [],
    "scheduler.hpp": [],
    "scheduler_operation.hpp": [],
    "scheduler_thread_info.hpp": [],
    "scoped_lock.hpp": [],
    "scoped_ptr.hpp": [],
    "select_interrupter.hpp": [],
    "signal_blocker.hpp": [],
    "signal_handler.hpp": [],
    "signal_init.hpp": [],
    "signal_op.hpp": [],
    "signal_set_service.hpp": [],
    "socket_holder.hpp": [],
    "socket_ops.hpp": [],
    "socket_option.hpp": [],
    "socket_select_interrupter.hpp": [],
    "socket_types.hpp": [],
    "solaris_fenced_block.hpp": [],
    "static_mutex.hpp": [],
    "std_event.hpp": [],
    "std_fenced_block.hpp": [],
    "std_global.hpp": [],
    "std_mutex.hpp": [],
    "std_static_mutex.hpp": [],
    "std_thread.hpp": [],
    "string_view.hpp": [],
    "thread.hpp": [],
    "thread_context.hpp": [],
    "thread_group.hpp": [],
    "thread_info_base.hpp": [],
    "throw_error.hpp": [],
    "throw_exception.hpp": [],
    "timer_queue.hpp": [],
    "timer_queue_base.hpp": [],
    "timer_queue_ptime.hpp": [],
    "timer_queue_set.hpp": [],
    "timer_scheduler.hpp": [],
    "timer_scheduler_fwd.hpp": [],
    "tss_ptr.hpp": [],
    "type_traits.hpp": [],
    "variadic_templates.hpp": [],
    "wait_handler.hpp": [],
    "wait_op.hpp": [],
    "win_event.hpp": [],
    "win_fd_set_adapter.hpp": [],
    "win_fenced_block.hpp": [],
    "win_global.hpp": [],
    "win_iocp_handle_read_op.hpp": [],
    "win_iocp_handle_service.hpp": [],
    "win_iocp_handle_write_op.hpp": [],
    "win_iocp_null_buffers_op.hpp": [],
    "win_iocp_operation.hpp": [],
    "win_iocp_overlapped_op.hpp": [],
    "win_iocp_overlapped_ptr.hpp": [],
    "win_iocp_serial_port_service.hpp": [],
    "win_iocp_socket_accept_op.hpp": [],
    "win_iocp_socket_connect_op.hpp": [],
    "win_iocp_socket_recv_op.hpp": [],
    "win_iocp_socket_recvfrom_op.hpp": [],
    "win_iocp_socket_recvmsg_op.hpp": [],
    "win_iocp_socket_send_op.hpp": [],
    "win_iocp_socket_service.hpp": [],
    "win_iocp_socket_service_base.hpp": [],
    "win_iocp_thread_info.hpp": [],
    "win_iocp_wait_op.hpp": [],
    "win_mutex.hpp": [],
    "win_object_handle_service.hpp": [],
    "win_static_mutex.hpp": [],
    "win_thread.hpp": [],
    "win_tss_ptr.hpp": [],
    "winapp_thread.hpp": [],
    "wince_thread.hpp": [],
    "winrt_async_manager.hpp": [],
    "winrt_async_op.hpp": [],
    "winrt_resolve_op.hpp": [],
    "winrt_resolver_service.hpp": [],
    "winrt_socket_connect_op.hpp": [],
    "winrt_socket_recv_op.hpp": [],
    "winrt_socket_send_op.hpp": [],
    "winrt_ssocket_service.hpp": [],
    "winrt_ssocket_service_base.hpp": [],
    "winrt_utils.hpp": [],
    "winsock_init.hpp": [],
    "work_dispatcher.hpp": [],
    "wrapped_handler.hpp": [],
    "dispatch.hpp": [],
    "error.hpp": [],
    "error_code.hpp": [],
    "execution_context.hpp": [],
    "executor.hpp": [],
    "executor_work_guard.hpp": [],
    "basic_endpoint.hpp": [],
    "datagram_protocol.hpp": [],
    "endpoint.hpp": [],
    "raw_protocol.hpp": [],
    "seq_packet_protocol.hpp": [],
    "stream_protocol.hpp": [],
    "handler_alloc_hook.hpp": [],
    "handler_continuation_hook.hpp": [],
    "handler_invoke_hook.hpp": [],
    "high_resolution_timer.hpp": [],
    "io_context.hpp": [],
    "post.hpp": [],
    "read.hpp": [],
    "read_at.hpp": [],
    "read_until.hpp": [],
    "redirect_error.hpp": [],
    "serial_port_base.hpp": [],
    "spawn.hpp": [],
    "src.hpp": [],
    "system_context.hpp": [],
    "system_executor.hpp": [],
    "thread_pool.hpp": [],
    "use_awaitable.hpp": [],
    "use_future.hpp": [],
    "write.hpp": [],
    "write_at.hpp": [],
    "io_context_strand.hpp": [],
    "io_service.hpp": [],
    "io_service_strand.hpp": [],
    "address.hpp": [],
    "address_v4.hpp": [],
    "address_v4_iterator.hpp": [],
    "address_v4_range.hpp": [],
    "address_v6.hpp": [],
    "address_v6_iterator.hpp": [],
    "address_v6_range.hpp": [],
    "bad_address_cast.hpp": [],
    "basic_resolver.hpp": [],
    "basic_resolver_entry.hpp": [],
    "basic_resolver_iterator.hpp": [],
    "basic_resolver_query.hpp": [],
    "basic_resolver_results.hpp": [],
    "host_name.hpp": [],
    "icmp.hpp": [],
    "network_v4.hpp": [],
    "network_v6.hpp": [],
    "multicast.hpp": [],
    "resolver_base.hpp": [],
    "resolver_query_base.hpp": [],
    "tcp.hpp": [],
    "udp.hpp": [],
    "unicast.hpp": [],
    "v6_only.hpp": [],
    "is_read_buffered.hpp": [],
    "is_write_buffered.hpp": [],
    "connect_pair.hpp": [],
    "packaged_task.hpp": [],
    "placeholders.hpp": [],
    "basic_descriptor.hpp": [],
    "basic_stream_descriptor.hpp": [],
    "descriptor.hpp": [],
    "descriptor_base.hpp": [],
    "stream_descriptor.hpp": [],
    "serial_port.hpp": [],
    "signal_set.hpp": [],
    "socket_base.hpp": [],
    "ssl.hpp": [],
    "context.hpp": [],
    "context_base.hpp": [],
    "buffered_handshake_op.hpp": [],
    "engine.hpp": [],
    "handshake_op.hpp": [],
    "io.hpp": [],
    "openssl_init.hpp": [],
    "openssl_types.hpp": [],
    "password_callback.hpp": [],
    "read_op.hpp": [],
    "shutdown_op.hpp": [],
    "stream_core.hpp": [],
    "verify_callback.hpp": [],
    "write_op.hpp": [],
    "rfc2818_verification.hpp": [],
    "stream.hpp": [],
    "stream_base.hpp": [],
    "verify_context.hpp": [],
    "verify_mode.hpp": [],
    "steady_timer.hpp": [],
    "strand.hpp": [],
    "streambuf.hpp": [],
    "system_error.hpp": [],
    "system_timer.hpp": [],
    "this_coro.hpp": [],
    "time_traits.hpp": [],
    "internet.hpp": [],
    "net.hpp": [],
    "netfwd.hpp": [],
    "socket.hpp": [],
    "timer.hpp": [],
    "unyield.hpp": [],
    "uses_executor.hpp": [],
    "version.hpp": [],
    "wait_traits.hpp": [],
    "basic_object_handle.hpp": [],
    "basic_overlapped_handle.hpp": [],
    "basic_random_access_handle.hpp": [],
    "basic_stream_handle.hpp": [],
    "object_handle.hpp": [],
    "overlapped_handle.hpp": [],
    "overlapped_ptr.hpp": [],
    "random_access_handle.hpp": [],
    "stream_handle.hpp": [],
    "yield.hpp": [],
    "esp_asio_config.h": [],
    "esp_exception.h": [],
    "conf.h": [],
    "dh.h": [],
    "esp_asio_openssl_stubs.h": [],
    "rsa.h": [],
    "x509v3.h": [],
    "bootloader_clock.h": [],
    "bootloader_common.h": [],
    "bootloader_flash.h": [],
    "bootloader_flash_config.h": [],
    "bootloader_flash_override.h": [],
    "bootloader_mem.h": [],
    "bootloader_random.h": [],
    "bootloader_util.h": [],
    "esp_app_format.h": [],
    "esp_flash_data_types.h": [],
    "esp_flash_encrypt.h": [],
    "esp_flash_partitions.h": [],
    "esp_image_format.h": [],
    "esp_secure_boot.h": [],
    "esp_blufi_api.h": [],
    "blufi_int.h": [],
    "esp_blufi.h": [],
    "btc_blufi_prf.h": [],
    "alarm.h": [],
    "allocator.h": [],
    "buffer.h": [],
    "config.h": [],
    "fixed_pkt_queue.h": [],
    "fixed_queue.h": [],
    "future.h": [],
    "hash_functions.h": [],
    "hash_map.h": [],
    "list.h": [],
    "mutex.h": [],
    "osi.h": [],
    "pkt_queue.h": [],
    "semaphore.h": [],
    "thread.h": [],
    "esp_ble_mesh_ble_api.h": [],
    "esp_ble_mesh_common_api.h": [],
    "esp_ble_mesh_local_data_operation_api.h": [],
    "esp_ble_mesh_low_power_api.h": [],
    "esp_ble_mesh_networking_api.h": [],
    "esp_ble_mesh_provisioning_api.h": [],
    "esp_ble_mesh_proxy_api.h": [],
    "esp_ble_mesh_defs.h": [],
    "esp_ble_mesh_config_model_api.h": [],
    "esp_ble_mesh_generic_model_api.h": [],
    "esp_ble_mesh_health_model_api.h": [],
    "esp_ble_mesh_lighting_model_api.h": [],
    "esp_ble_mesh_sensor_model_api.h": [],
    "esp_ble_mesh_time_scene_model_api.h": [],
    "btc_ble_mesh_ble.h": [],
    "btc_ble_mesh_config_model.h": [],
    "btc_ble_mesh_generic_model.h": [],
    "btc_ble_mesh_health_model.h": [],
    "btc_ble_mesh_lighting_model.h": [],
    "btc_ble_mesh_prov.h": [],
    "btc_ble_mesh_sensor_model.h": [],
    "btc_ble_mesh_time_scene_model.h": [],
    "mesh_atomic.h": [],
    "mesh_buf.h": [],
    "mesh_byteorder.h": [],
    "mesh_common.h": [],
    "mesh_compiler.h": [],
    "mesh_config.h": [],
    "mesh_dlist.h": [],
    "mesh_ffs.h": [],
    "mesh_kernel.h": [],
    "mesh_mutex.h": [],
    "mesh_slist.h": [],
    "mesh_timer.h": [],
    "mesh_trace.h": [],
    "mesh_types.h": [],
    "mesh_util.h": [],
    "aes.h": [],
    "cbc_mode.h": [],
    "ccm_mode.h": [],
    "cmac_mode.h": [],
    "constants.h": [],
    "ctr_mode.h": [],
    "ctr_prng.h": [],
    "ecc.h": [],
    "ecc_dh.h": [],
    "ecc_dsa.h": [],
    "ecc_platform_specific.h": [],
    "hmac.h": [],
    "hmac_prng.h": [],
    "sha256.h": [],
    "utils.h": [],
    "access.h": [],
    "adv.h": [],
    "beacon.h": [],
    "crypto.h": [],
    "fast_prov.h": [],
    "foundation.h": [],
    "friend.h": [],
    "cfg_cli.h": [],
    "cfg_srv.h": [],
    "health_cli.h": [],
    "health_srv.h": [],
    "mesh_access.h": [],
    "mesh_bearer_adapt.h": [],
    "mesh_hci.h": [],
    "mesh_main.h": [],
    "mesh_proxy.h": [],
    "mesh_uuid.h": [],
    "local_operation.h": [],
    "lpn.h": [],
    "mesh.h": [],
    "net.h": [],
    "prov.h": [],
    "provisioner_main.h": [],
    "provisioner_prov.h": [],
    "proxy_client.h": [],
    "proxy_server.h": [],
    "scan.h": [],
    "settings.h": [],
    "settings_uid.h": [],
    "settings_nvs.h": [],
    "test.h": [],
    "transport.h": [],
    "client_common.h": [],
    "generic_client.h": [],
    "lighting_client.h": [],
    "sensor_client.h": [],
    "time_scene_client.h": [],
    "device_property.h": [],
    "model_opcode.h": [],
    "generic_server.h": [],
    "lighting_server.h": [],
    "sensor_server.h": [],
    "server_common.h": [],
    "state_binding.h": [],
    "state_transition.h": [],
    "time_scene_server.h": [],
    "esp_a2dp_api.h": [],
    "esp_avrc_api.h": [],
    "esp_bt_defs.h": [],
    "esp_bt_device.h": [],
    "esp_bt_main.h": [],
    "esp_gap_ble_api.h": [],
    "esp_gap_bt_api.h": [],
    "esp_gatt_common_api.h": [],
    "esp_gatt_defs.h": [],
    "esp_gattc_api.h": [],
    "esp_gatts_api.h": [],
    "esp_hf_ag_api.h": [],
    "esp_hf_client_api.h": [],
    "esp_hf_defs.h": [],
    "esp_hidd_api.h": [],
    "esp_hidh_api.h": [],
    "esp_spp_api.h": [],
    "esp_bt.h": [],
    "cbor.h": [],
    "cmock.h": [],
    "cmock_internals.h": [],
    "address.h": [],
    "async.h": [],
    "block.h": [],
    "coap_asn1_internal.h": [],
    "coap_async_internal.h": [],
    "coap_block_internal.h": [],
    "coap_cache.h": [],
    "coap_cache_internal.h": [],
    "coap_debug.h": [],
    "coap_dtls.h": [],
    "coap_dtls_internal.h": [],
    "coap_event.h": [],
    "coap_forward_decls.h": [],
    "coap_hashkey.h": [],
    "coap_internal.h": [],
    "coap_io.h": [],
    "coap_io_internal.h": [],
    "coap_mutex.h": [],
    "coap_net_internal.h": [],
    "coap_pdu_internal.h": [],
    "coap_prng.h": [],
    "coap_resource_internal.h": [],
    "coap_riot.h": [],
    "coap_session.h": [],
    "coap_session_internal.h": [],
    "coap_subscribe_internal.h": [],
    "coap_tcp_internal.h": [],
    "coap_time.h": [],
    "encode.h": [],
    "libcoap.h": [],
    "lwippools.h": [],
    "mem.h": [],
    "option.h": [],
    "pdu.h": [],
    "resource.h": [],
    "str.h": [],
    "subscribe.h": [],
    "uri.h": [],
    "uthash.h": [],
    "utlist.h": [],
    "coap.h": [],
    "coap_config.h": [],
    "coap_config_posix.h": [],
    "argtable3.h": [],
    "esp_console.h": [],
    "linenoise.h": [],
    "dac.h": [],
    "touch_sensor.h": [],
    "adc.h": [],
    "adc2_wifi_private.h": [],
    "adc_common.h": [],
    "adc_deprecated.h": [],
    "adc_types_deprecated.h": [],
    "can.h": [],
    "dac_common.h": [],
    "dedic_gpio.h": [],
    "gpio.h": [],
    "i2c.h": [],
    "i2s.h": [],
    "ledc.h": [],
    "mcpwm.h": [],
    "pcnt.h": [],
    "periph_ctrl.h": [],
    "rmt.h": [],
    "rtc_cntl.h": [],
    "rtc_io.h": [],
    "sdio_slave.h": [],
    "sdmmc_defs.h": [],
    "sdmmc_host.h": [],
    "sdmmc_types.h": [],
    "sdspi_host.h": [],
    "sigmadelta.h": [],
    "spi_common.h": [],
    "spi_common_internal.h": [],
    "spi_master.h": [],
    "spi_slave.h": [],
    "spi_slave_hd.h": [],
    "timer.h": [],
    "touch_pad.h": [],
    "touch_sensor_common.h": [],
    "twai.h": [],
    "uart.h": [],
    "uart_select.h": [],
    "usb_serial_jtag.h": [],
    "adc_cali.h": [],
    "gdma.h": [],
    "i2s_platform.h": [],
    "esp_efuse.h": [],
    "esp_efuse_table.h": [],
    "dl_detect_define.hpp": [],
    "dl_define.hpp": [],
    "dl_image.hpp": [],
    "dl_layer_add2d.hpp": [],
    "dl_layer_avg_pool2d.hpp": [],
    "dl_layer_base.hpp": [],
    "dl_layer_concat.hpp": [],
    "dl_layer_concat2d.hpp": [],
    "dl_layer_conv2d.hpp": [],
    "dl_layer_depthwise_conv2d.hpp": [],
    "dl_layer_expand_dims.hpp": [],
    "dl_layer_flatten.hpp": [],
    "dl_layer_fullyconnected.hpp": [],
    "dl_layer_global_avg_pool2d.hpp": [],
    "dl_layer_global_max_pool2d.hpp": [],
    "dl_layer_leakyrelu.hpp": [],
    "dl_layer_max2d.hpp": [],
    "dl_layer_max_pool2d.hpp": [],
    "dl_layer_min2d.hpp": [],
    "dl_layer_model.hpp": [],
    "dl_layer_mul2d.hpp": [],
    "dl_layer_pad.hpp": [],
    "dl_layer_prelu.hpp": [],
    "dl_layer_relu.hpp": [],
    "dl_layer_reshape.hpp": [],
    "dl_layer_sigmoid.hpp": [],
    "dl_layer_softmax.hpp": [],
    "dl_layer_squeeze.hpp": [],
    "dl_layer_sub2d.hpp": [],
    "dl_layer_tanh.hpp": [],
    "dl_layer_transpose.hpp": [],
    "dl_math.hpp": [],
    "dl_math_matrix.hpp": [],
    "cat_face_detect_mn03.hpp": [],
    "color_detector.hpp": [],
    "face_recognition_112_v1_s16.hpp": [],
    "face_recognition_112_v1_s8.hpp": [],
    "face_recognition_tool.hpp": [],
    "face_recognizer.hpp": [],
    "human_face_detect_mnp01.hpp": [],
    "human_face_detect_msr01.hpp": [],
    "dl_nn.hpp": [],
    "dl_nn_add2d.hpp": [],
    "dl_nn_avg_pool2d.hpp": [],
    "dl_nn_concat.hpp": [],
    "dl_nn_concat2d.hpp": [],
    "dl_nn_conv2d.hpp": [],
    "dl_nn_depthwise_conv2d.hpp": [],
    "dl_nn_fully_connected.hpp": [],
    "dl_nn_global_avg_pool2d.hpp": [],
    "dl_nn_global_max_pool2d.hpp": [],
    "dl_nn_leakyrelu.hpp": [],
    "dl_nn_max2d.hpp": [],
    "dl_nn_max_pool2d.hpp": [],
    "dl_nn_min2d.hpp": [],
    "dl_nn_mul2d.hpp": [],
    "dl_nn_pad.hpp": [],
    "dl_nn_prelu.hpp": [],
    "dl_nn_relu.hpp": [],
    "dl_nn_sub2d.hpp": [],
    "dl_tool.hpp": [],
    "dl_tool_cache.hpp": [],
    "dl_constant.hpp": [],
    "dl_variable.hpp": [],
    "dsp_common.h": [],
    "dsp_err.h": [],
    "dsp_err_codes.h": [],
    "dsp_platform.h": [],
    "dsp_tests.h": [],
    "dsp_types.h": [],
    "esp_dsp.h": [],
    "dsps_ccorr.h": [],
    "dsps_conv.h": [],
    "dsps_conv_platform.h": [],
    "dsps_corr.h": [],
    "dsps_dct.h": [],
    "dspi_dotprod.h": [],
    "dspi_dotprod_platform.h": [],
    "dsps_dotprod.h": [],
    "dsps_dotprod_platform.h": [],
    "dsps_fft2r.h": [],
    "dsps_fft2r_platform.h": [],
    "dsps_fft4r.h": [],
    "dsps_fft4r_platform.h": [],
    "dsps_fft_tables.h": [],
    "dsps_fir.h": [],
    "dsps_fir_platform.h": [],
    "dsps_biquad.h": [],
    "dsps_biquad_gen.h": [],
    "dsps_biquad_platform.h": [],
    "ekf.h": [],
    "ekf_imu13states.h": [],
    "dsps_add.h": [],
    "dsps_add_platform.h": [],
    "dsps_addc.h": [],
    "dsps_addc_platform.h": [],
    "dsps_math.h": [],
    "dsps_mul.h": [],
    "dsps_mul_platform.h": [],
    "dsps_mulc.h": [],
    "dsps_mulc_platform.h": [],
    "dsps_sqrt.h": [],
    "dsps_sub.h": [],
    "dsps_sub_platform.h": [],
    "dspm_mult.h": [],
    "dspm_mult_platform.h": [],
    "mat.h": [],
    "dsps_d_gen.h": [],
    "dsps_h_gen.h": [],
    "dsps_sfdr.h": [],
    "dsps_snr.h": [],
    "dsps_tone_gen.h": [],
    "dsps_view.h": [],
    "dsps_wind_blackman.h": [],
    "dsps_wind_blackman_harris.h": [],
    "dsps_wind_blackman_nuttall.h": [],
    "dsps_wind_flat_top.h": [],
    "dsps_wind_hann.h": [],
    "dsps_wind.h": [],
    "dsps_wind_nuttall.h": [],
    "esp_tts.h": [],
    "esp_tts_parser.h": [],
    "esp_tts_player.h": [],
    "esp_tts_stretcher.h": [],
    "esp_tts_voice.h": [],
    "esp_tts_voice_template.h": [],
    "esp_tts_voice_xiaole.h": [],
    "customized_word_wn5.h": [],
    "dl_lib.h": [],
    "dl_lib_coefgetter_if.h": [],
    "dl_lib_conv_queue.h": [],
    "dl_lib_convq8_queue.h": [],
    "dl_lib_convq_queue.h": [],
    "dl_lib_matrix.h": [],
    "dl_lib_matrixq.h": [],
    "dl_lib_matrixq8.h": [],
    "esp_aec.h": [],
    "esp_afe_config.h": [],
    "esp_afe_sr_iface.h": [],
    "esp_afe_sr_models.h": [],
    "esp_agc.h": [],
    "esp_mase.h": [],
    "esp_mn_iface.h": [],
    "esp_mn_models.h": [],
    "esp_ns.h": [],
    "esp_vad.h": [],
    "esp_wn_iface.h": [],
    "esp_wn_models.h": [],
    "hilexin_wn5.h": [],
    "hilexin_wn5X2.h": [],
    "hilexin_wn5X3.h": [],
    "multinet2_ch.h": [],
    "nihaoxiaoxin_wn5X3.h": [],
    "nihaoxiaozhi_wn5.h": [],
    "nihaoxiaozhi_wn5X2.h": [],
    "nihaoxiaozhi_wn5X3.h": [],
    "esp_mn_speech_commands.h": [],
    "esp_process_sdkconfig.h": [],
    "model_path.h": [],
    "esp_tls_crypto.h": [],
    "esp_tls.h": [],
    "esp_tls_errors.h": [],
    "esp_tls_error_capture_internal.h": [],
    "esp_tls_mbedtls.h": [],
    "esp_tls_wolfssl.h": [],
    "esp_jpg_decode.h": [],
    "img_converters.h": [],
    "esp_camera.h": [],
    "sensor.h": [],
    "bigint.h": [],
    "cache.h": [],
    "crc.h": [],
    "efuse.h": [],
    "ets_sys.h": [],
    "libc_stubs.h": [],
    "lldesc.h": [],
    "md5_hash.h": [],
    "miniz.h": [],
    "queue.h": [],
    "rtc.h": [],
    "secure_boot.h": [],
    "sha.h": [],
    "spi_flash.h": [],
    "tbconsole.h": [],
    "tjpgd.h": [],
    "esp_adc_cal.h": [],
    "esp_assert.h": [],
    "esp_attr.h": [],
    "esp_bit_defs.h": [],
    "esp_check.h": [],
    "esp_compiler.h": [],
    "esp_err.h": [],
    "esp_idf_version.h": [],
    "esp_types.h": [],
    "esp_diagnostics_metrics.h": [],
    "esp_diagnostics_network_variables.h": [],
    "esp_diagnostics_system_metrics.h": [],
    "esp_diagnostics_variables.h": [],
    "esp_eth.h": [],
    "esp_eth_com.h": [],
    "esp_eth_mac.h": [],
    "esp_eth_netif_glue.h": [],
    "esp_eth_phy.h": [],
    "eth_phy_regs_struct.h": [],
    "esp_event.h": [],
    "esp_event_base.h": [],
    "esp_event_legacy.h": [],
    "esp_event_loop.h": [],
    "gdbstub_target_config.h": [],
    "esp_gdbstub.h": [],
    "esp_gdbstub_arch.h": [],
    "esp_hid_common.h": [],
    "esp_hidd.h": [],
    "esp_hidd_gatts.h": [],
    "esp_hidd_transport.h": [],
    "esp_hidh.h": [],
    "esp_hidh_bluedroid.h": [],
    "esp_hidh_gattc.h": [],
    "esp_hidh_transport.h": [],
    "esp_http_client.h": [],
    "esp_http_server.h": [],
    "http_server.h": [],
    "esp_https_ota.h": [],
    "esp_https_server.h": [],
    "esp_async_memcpy.h": [],
    "esp_chip_info.h": [],
    "esp_clk.h": [],
    "esp_cpu.h": [],
    "esp_crc.h": [],
    "esp_fault.h": [],
    "esp_interface.h": [],
    "esp_intr.h": [],
    "esp_intr_alloc.h": [],
    "esp_mac.h": [],
    "esp_memprot.h": [],
    "esp_memprot_err.h": [],
    "esp_memprot_types.h": [],
    "esp_memprot_internal.h": [],
    "esp_sleep_internal.h": [],
    "sleep_gpio.h": [],
    "sleep_mac_bb.h": [],
    "sleep_retention.h": [],
    "esp_random.h": [],
    "esp_sleep.h": [],
    "clk_ctrl_os.h": [],
    "compare_set.h": [],
    "cpu.h": [],
    "clk.h": [],
    "dport_access.h": [],
    "himem.h": [],
    "spiram.h": [],
    "esp_crypto_lock.h": [],
    "esp_ds.h": [],
    "esp_hmac.h": [],
    "soc_memprot_types.h": [],
    "memprot.h": [],
    "esp_himem.h": [],
    "esp_spiram.h": [],
    "rtc_wdt.h": [],
    "spinlock.h": [],
    "soc_log.h": [],
    "regi2c_apll.h": [],
    "regi2c_bbpll.h": [],
    "regi2c_ctrl.h": [],
    "rtc_clk_common.h": [],
    "spiram_psram.h": [],
    "esp_insights.h": [],
    "esp_ipc.h": [],
    "esp_ipc_isr.h": [],
    "esp_lcd_panel_commands.h": [],
    "esp_lcd_panel_io.h": [],
    "esp_lcd_panel_ops.h": [],
    "esp_lcd_panel_rgb.h": [],
    "esp_lcd_panel_vendor.h": [],
    "esp_lcd_types.h": [],
    "esp_lcd_panel_interface.h": [],
    "esp_lcd_panel_io_interface.h": [],
    "esp_littlefs.h": [],
    "esp_local_ctrl.h": [],
    "esp_netif.h": [],
    "esp_netif_defaults.h": [],
    "esp_netif_ip_addr.h": [],
    "esp_netif_net_stack.h": [],
    "esp_netif_ppp.h": [],
    "esp_netif_slip.h": [],
    "esp_netif_sta_list.h": [],
    "esp_netif_types.h": [],
    "phy_init_data.h": [],
    "esp_phy_init.h": [],
    "phy.h": [],
    "pm.h": [],
    "esp_pm.h": [],
    "pm_impl.h": [],
    "pm_trace.h": [],
    "esp_rmaker_console.h": [],
    "esp_rmaker_core.h": [],
    "esp_rmaker_mqtt.h": [],
    "esp_rmaker_ota.h": [],
    "esp_rmaker_scenes.h": [],
    "esp_rmaker_schedule.h": [],
    "esp_rmaker_standard_devices.h": [],
    "esp_rmaker_standard_params.h": [],
    "esp_rmaker_standard_services.h": [],
    "esp_rmaker_standard_types.h": [],
    "esp_rmaker_user_mapping.h": [],
    "ringbuf.h": [],
    "esp_rom_caps.h": [],
    "rsa_pss.h": [],
    "apb_backup_dma.h": [],
    "digital_signature.h": [],
    "esp_flash.h": [],
    "rom_layout.h": [],
    "opi_flash.h": [],
    "cdc_acm.h": [],
    "chip_usb_dw_wrapper.h": [],
    "cpio.h": [],
    "usb_cdc.h": [],
    "usb_common.h": [],
    "usb_dc.h": [],
    "usb_descriptor.h": [],
    "usb_device.h": [],
    "usb_dfu.h": [],
    "usb_os_glue.h": [],
    "usb_persist.h": [],
    "esp_rom_crc.h": [],
    "esp_rom_efuse.h": [],
    "esp_rom_gpio.h": [],
    "esp_rom_md5.h": [],
    "esp_rom_sys.h": [],
    "esp_rom_tjpgd.h": [],
    "esp_rom_uart.h": [],
    "reset_reasons.h": [],
    "esp_schedule.h": [],
    "essl.h": [],
    "essl_sdio.h": [],
    "essl_spi.h": [],
    "eh_frame_parser.h": [],
    "esp_debug_helpers.h": [],
    "esp_expression_with_stack.h": [],
    "esp_freertos_hooks.h": [],
    "esp_int_wdt.h": [],
    "crosscore_int.h": [],
    "dbg_stubs.h": [],
    "panic_internal.h": [],
    "startup_internal.h": [],
    "system_internal.h": [],
    "usb_console.h": [],
    "esp_system.h": [],
    "esp_task.h": [],
    "esp_task_wdt.h": [],
    "esp_xt_wdt.h": [],
    "brownout.h": [],
    "cache_err_int.h": [],
    "trax.h": [],
    "esp_timer_private.h": [],
    "esp_timer.h": [],
    "esp_websocket_client.h": [],
    "esp_coexist.h": [],
    "esp_coexist_adapter.h": [],
    "esp_coexist_internal.h": [],
    "esp_mesh.h": [],
    "esp_mesh_internal.h": [],
    "esp_now.h": [],
    "esp_wifi_private.h": [],
    "esp_wifi_types_private.h": [],
    "wifi.h": [],
    "wifi_os_adapter.h": [],
    "wifi_types.h": [],
    "esp_smartconfig.h": [],
    "esp_wifi.h": [],
    "esp_wifi_crypto_types.h": [],
    "esp_wifi_default.h": [],
    "esp_wifi_netif.h": [],
    "esp_wifi_types.h": [],
    "smartconfig_ack.h": [],
    "esp_core_dump.h": [],
    "esp_core_dump_summary_port.h": [],
    "ascii.h": [],
    "asciitab.h": [],
    "expat.h": [],
    "expat_external.h": [],
    "iasciitab.h": [],
    "internal.h": [],
    "latin1tab.h": [],
    "nametab.h": [],
    "siphash.h": [],
    "utf8tab.h": [],
    "winconfig.h": [],
    "xmlrole.h": [],
    "xmltok.h": [],
    "xmltok_impl.h": [],
    "expat_config.h": [],
    "diskio_impl.h": [],
    "diskio_rawflash.h": [],
    "diskio_sdmmc.h": [],
    "diskio_wl.h": [],
    "diskio.h": [],
    "ff.h": [],
    "ffconf.h": [],
    "esp_vfs_fat.h": [],
    "vfs_fat_internal.h": [],
    "fb_gfx.h": [],
    "esp_modbus_common.h": [],
    "esp_modbus_master.h": [],
    "esp_modbus_slave.h": [],
    "mbcontroller.h": [],
    "FreeRTOSConfig.h": [],
    "idf_additions.h": [],
    "idf_additions_inc.h": [],
    "task_snapshot.h": [],
    "FreeRTOS.h": [],
    "StackMacros.h": [],
    "atomic.h": [],
    "croutine.h": [],
    "deprecated_definitions.h": [],
    "event_groups.h": [],
    "message_buffer.h": [],
    "mpu_prototypes.h": [],
    "mpu_wrappers.h": [],
    "portable.h": [],
    "projdefs.h": [],
    "semphr.h": [],
    "stack_macros.h": [],
    "stream_buffer.h": [],
    "task.h": [],
    "timers.h": [],
    "FreeRTOSConfig_arch.h": [],
    "portbenchmark.h": [],
    "portmacro.h": [],
    "portmacro_deprecated.h": [],
    "xtensa_api.h": [],
    "xtensa_config.h": [],
    "xtensa_context.h": [],
    "xtensa_rtos.h": [],
    "xtensa_timer.h": [],
    "iot_button.h": [],
    "adc_hal.h": [],
    "adc_hal_conf.h": [],
    "adc_ll.h": [],
    "aes_ll.h": [],
    "can_hal.h": [],
    "can_ll.h": [],
    "can_types.h": [],
    "clk_gate_ll.h": [],
    "cpu_ll.h": [],
    "dac_ll.h": [],
    "emac_ll.h": [],
    "gpio_ll.h": [],
    "i2c_ll.h": [],
    "i2s_ll.h": [],
    "interrupt_controller_ll.h": [],
    "ledc_ll.h": [],
    "mcpwm_ll.h": [],
    "mpu_ll.h": [],
    "mwdt_ll.h": [],
    "pcnt_ll.h": [],
    "rmt_ll.h": [],
    "rtc_cntl_ll.h": [],
    "rtc_io_ll.h": [],
    "rwdt_ll.h": [],
    "sha_ll.h": [],
    "sigmadelta_ll.h": [],
    "soc_ll.h": [],
    "spi_flash_encrypted_ll.h": [],
    "spi_flash_ll.h": [],
    "spi_ll.h": [],
    "timer_ll.h": [],
    "touch_sensor_hal.h": [],
    "touch_sensor_ll.h": [],
    "trace_ll.h": [],
    "twai_ll.h": [],
    "uart_ll.h": [],
    "adc_types.h": [],
    "aes_hal.h": [],
    "aes_types.h": [],
    "brownout_hal.h": [],
    "cpu_hal.h": [],
    "cpu_types.h": [],
    "dac_hal.h": [],
    "dac_types.h": [],
    "dma_types.h": [],
    "ds_hal.h": [],
    "emac_hal.h": [],
    "esp_flash_err.h": [],
    "eth_types.h": [],
    "gdma_hal.h": [],
    "gpio_hal.h": [],
    "gpio_types.h": [],
    "i2c_hal.h": [],
    "i2c_types.h": [],
    "i2s_hal.h": [],
    "i2s_types.h": [],
    "interrupt_controller_hal.h": [],
    "interrupt_controller_types.h": [],
    "lcd_hal.h": [],
    "lcd_types.h": [],
    "ledc_hal.h": [],
    "ledc_types.h": [],
    "mcpwm_hal.h": [],
    "mcpwm_types.h": [],
    "memprot_types.h": [],
    "mpu_hal.h": [],
    "mpu_types.h": [],
    "pcnt_hal.h": [],
    "pcnt_types.h": [],
    "rmt_hal.h": [],
    "rmt_types.h": [],
    "rtc_hal.h": [],
    "rtc_io_hal.h": [],
    "rtc_io_types.h": [],
    "sdio_slave_hal.h": [],
    "sdio_slave_ll.h": [],
    "sdio_slave_types.h": [],
    "sha_hal.h": [],
    "sha_types.h": [],
    "sigmadelta_hal.h": [],
    "sigmadelta_types.h": [],
    "soc_hal.h": [],
    "spi_flash_encrypt_hal.h": [],
    "spi_flash_hal.h": [],
    "spi_flash_types.h": [],
    "spi_hal.h": [],
    "spi_slave_hal.h": [],
    "spi_slave_hd_hal.h": [],
    "spi_types.h": [],
    "systimer_hal.h": [],
    "systimer_types.h": [],
    "timer_hal.h": [],
    "timer_types.h": [],
    "touch_sensor_types.h": [],
    "twai_hal.h": [],
    "twai_types.h": [],
    "uart_hal.h": [],
    "uart_types.h": [],
    "uhci_types.h": [],
    "usb_hal.h": [],
    "usb_phy_hal.h": [],
    "usb_phy_types.h": [],
    "usb_types_private.h": [],
    "usbh_hal.h": [],
    "usbh_ll.h": [],
    "wdt_hal.h": [],
    "wdt_types.h": [],
    "xt_wdt_hal.h": [],
    "assert.h": [],
    "check.h": [],
    "log.h": [],
    "misc.h": [],
    "esp_heap_caps.h": [],
    "esp_heap_caps_init.h": [],
    "esp_heap_task_info.h": [],
    "esp_heap_trace.h": [],
    "heap_memory_layout.h": [],
    "multi_heap.h": [],
    "soc_memory_layout.h": [],
    "idf_performance_target.h": [],
    "idf_performance.h": [],
    "esp_ieee802154.h": [],
    "esp_ieee802154_types.h": [],
    "jsmn.h": [],
    "cJSON.h": [],
    "cJSON_Utils.h": [],
    "common.h": [],
    "ProductionCode.h": [],
    "ProductionCode2.h": [],
    "UnityHelper.h": [],
    "unity_config.h": [],
    "unity_fixture.h": [],
    "unity_fixture_internals.h": [],
    "unity_fixture_malloc_overrides.h": [],
    "unity_output_Spy.h": [],
    "unity.h": [],
    "unity_internals.h": [],
    "testsample_head1.h": [],
    "testsample_mock_head1.h": [],
    "CException.h": [],
    "Defs.h": [],
    "mockMock.h": [],
    "json_generator.h": [],
    "json_parser.h": [],
    "testutil.h": [],
    "sodium.h": [],
    "core.h": [],
    "crypto_aead_aes256gcm.h": [],
    "crypto_aead_chacha20poly1305.h": [],
    "crypto_aead_xchacha20poly1305.h": [],
    "crypto_auth.h": [],
    "crypto_auth_hmacsha256.h": [],
    "crypto_auth_hmacsha512.h": [],
    "crypto_auth_hmacsha512256.h": [],
    "crypto_box.h": [],
    "crypto_box_curve25519xchacha20poly1305.h": [],
    "crypto_box_curve25519xsalsa20poly1305.h": [],
    "crypto_core_ed25519.h": [],
    "crypto_core_hchacha20.h": [],
    "crypto_core_hsalsa20.h": [],
    "crypto_core_ristretto255.h": [],
    "crypto_core_salsa20.h": [],
    "crypto_core_salsa2012.h": [],
    "crypto_core_salsa208.h": [],
    "crypto_generichash.h": [],
    "crypto_generichash_blake2b.h": [],
    "crypto_hash.h": [],
    "crypto_hash_sha256.h": [],
    "crypto_hash_sha512.h": [],
    "crypto_kdf.h": [],
    "crypto_kdf_blake2b.h": [],
    "crypto_kx.h": [],
    "crypto_onetimeauth.h": [],
    "crypto_onetimeauth_poly1305.h": [],
    "crypto_pwhash.h": [],
    "crypto_pwhash_argon2i.h": [],
    "crypto_pwhash_argon2id.h": [],
    "crypto_pwhash_scryptsalsa208sha256.h": [],
    "crypto_scalarmult.h": [],
    "crypto_scalarmult_curve25519.h": [],
    "crypto_scalarmult_ed25519.h": [],
    "crypto_scalarmult_ristretto255.h": [],
    "crypto_secretbox.h": [],
    "crypto_secretbox_xchacha20poly1305.h": [],
    "crypto_secretbox_xsalsa20poly1305.h": [],
    "crypto_secretstream_xchacha20poly1305.h": [],
    "crypto_shorthash.h": [],
    "crypto_shorthash_siphash24.h": [],
    "crypto_sign.h": [],
    "crypto_sign_ed25519.h": [],
    "crypto_sign_edwards25519sha512batch.h": [],
    "crypto_stream.h": [],
    "crypto_stream_chacha20.h": [],
    "crypto_stream_salsa20.h": [],
    "crypto_stream_salsa2012.h": [],
    "crypto_stream_salsa208.h": [],
    "crypto_stream_xchacha20.h": [],
    "crypto_stream_xsalsa20.h": [],
    "crypto_verify_16.h": [],
    "crypto_verify_32.h": [],
    "crypto_verify_64.h": [],
    "export.h": [],
    "chacha20_ietf_ext.h": [],
    "ed25519_ref10.h": [],
    "ed25519_ref10_fe_25_5.h": [],
    "ed25519_ref10_fe_51.h": [],
    "implementations.h": [],
    "sse2_64_32.h": [],
    "randombytes.h": [],
    "randombytes_internal_random.h": [],
    "randombytes_sysrandom.h": [],
    "runtime.h": [],
    "version.h": [],
    "esp_log.h": [],
    "esp_log_internal.h": [],
    "dhcpserver.h": [],
    "dhcpserver_options.h": [],
    "esp_ping.h": [],
    "esp_sntp.h": [],
    "ping.h": [],
    "ping_sock.h": [],
    "sntp.h": [],
    "inet.h": [],
    "if.h": [],
    "netdb.h": [],
    "socket.h": [],
    "errno.h": [],
    "altcp.h": [],
    "altcp_tcp.h": [],
    "altcp_tls.h": [],
    "api.h": [],
    "altcp_proxyconnect.h": [],
    "altcp_tls_mbedtls_opts.h": [],
    "fs.h": [],
    "http_client.h": [],
    "httpd.h": [],
    "httpd_opts.h": [],
    "lwiperf.h": [],
    "mdns.h": [],
    "mdns_opts.h": [],
    "mdns_priv.h": [],
    "mqtt.h": [],
    "mqtt_opts.h": [],
    "mqtt_priv.h": [],
    "netbiosns.h": [],
    "netbiosns_opts.h": [],
    "smtp.h": [],
    "smtp_opts.h": [],
    "snmp.h": [],
    "snmp_core.h": [],
    "snmp_mib2.h": [],
    "snmp_opts.h": [],
    "snmp_scalar.h": [],
    "snmp_snmpv2_framework.h": [],
    "snmp_snmpv2_usm.h": [],
    "snmp_table.h": [],
    "snmp_threadsync.h": [],
    "snmpv3.h": [],
    "sntp_opts.h": [],
    "tftp_opts.h": [],
    "tftp_server.h": [],
    "arch.h": [],
    "autoip.h": [],
    "debug.h": [],
    "def.h": [],
    "dhcp.h": [],
    "dhcp6.h": [],
    "dns.h": [],
    "err.h": [],
    "etharp.h": [],
    "ethip6.h": [],
    "icmp.h": [],
    "icmp6.h": [],
    "if_api.h": [],
    "igmp.h": [],
    "inet_chksum.h": [],
    "init.h": [],
    "ip.h": [],
    "ip4.h": [],
    "ip4_addr.h": [],
    "ip4_frag.h": [],
    "ip4_napt.h": [],
    "ip6.h": [],
    "ip6_addr.h": [],
    "ip6_frag.h": [],
    "ip6_zone.h": [],
    "ip_addr.h": [],
    "lwip_napt.h": [],
    "memp.h": [],
    "mld6.h": [],
    "nd6.h": [],
    "netbuf.h": [],
    "netif.h": [],
    "netifapi.h": [],
    "opt.h": [],
    "pbuf.h": [],
    "altcp_priv.h": [],
    "api_msg.h": [],
    "mem_priv.h": [],
    "memp_priv.h": [],
    "memp_std.h": [],
    "nd6_priv.h": [],
    "raw_priv.h": [],
    "sockets_priv.h": [],
    "tcp_priv.h": [],
    "tcpip_priv.h": [],
    "ethernet.h": [],
    "iana.h": [],
    "ieee.h": [],
    "tcp.h": [],
    "udp.h": [],
    "raw.h": [],
    "sio.h": [],
    "sockets.h": [],
    "stats.h": [],
    "sys.h": [],
    "tcpbase.h": [],
    "tcpip.h": [],
    "timeouts.h": [],
    "bridgeif.h": [],
    "bridgeif_opts.h": [],
    "ieee802154.h": [],
    "lowpan6.h": [],
    "lowpan6_ble.h": [],
    "lowpan6_common.h": [],
    "lowpan6_opts.h": [],
    "ccp.h": [],
    "chap-md5.h": [],
    "chap-new.h": [],
    "chap_ms.h": [],
    "eap.h": [],
    "ecp.h": [],
    "eui64.h": [],
    "fsm.h": [],
    "ipcp.h": [],
    "ipv6cp.h": [],
    "lcp.h": [],
    "magic.h": [],
    "mppe.h": [],
    "arc4.h": [],
    "des.h": [],
    "md4.h": [],
    "md5.h": [],
    "sha1.h": [],
    "ppp.h": [],
    "ppp_impl.h": [],
    "ppp_opts.h": [],
    "pppapi.h": [],
    "pppcrypt.h": [],
    "pppdebug.h": [],
    "pppoe.h": [],
    "pppol2tp.h": [],
    "pppos.h": [],
    "upap.h": [],
    "vj.h": [],
    "slipif.h": [],
    "zepif.h": [],
    "cc.h": [],
    "perf.h": [],
    "sys_arch.h": [],
    "vfs_lwip.h": [],
    "lwip_default_hooks.h": [],
    "lwipopts.h": [],
    "dhcp_state.h": [],
    "ethernetif.h": [],
    "openthreadif.h": [],
    "wlanif.h": [],
    "in.h": [],
    "sntp_get_set_time.h": [],
    "aesni.h": [],
    "aria.h": [],
    "asn1.h": [],
    "asn1write.h": [],
    "base64.h": [],
    "bignum.h": [],
    "blowfish.h": [],
    "bn_mul.h": [],
    "camellia.h": [],
    "ccm.h": [],
    "certs.h": [],
    "chacha20.h": [],
    "chachapoly.h": [],
    "check_config.h": [],
    "cipher.h": [],
    "cipher_internal.h": [],
    "cmac.h": [],
    "compat-1.3.h": [],
    "config_psa.h": [],
    "constant_time.h": [],
    "ctr_drbg.h": [],
    "dhm.h": [],
    "ecdh.h": [],
    "ecdsa.h": [],
    "ecjpake.h": [],
    "ecp_internal.h": [],
    "entropy.h": [],
    "entropy_poll.h": [],
    "error.h": [],
    "gcm.h": [],
    "havege.h": [],
    "hkdf.h": [],
    "hmac_drbg.h": [],
    "md.h": [],
    "md2.h": [],
    "md_internal.h": [],
    "memory_buffer_alloc.h": [],
    "net_sockets.h": [],
    "nist_kw.h": [],
    "oid.h": [],
    "padlock.h": [],
    "pem.h": [],
    "pk.h": [],
    "pk_internal.h": [],
    "pkcs11.h": [],
    "pkcs12.h": [],
    "pkcs5.h": [],
    "platform.h": [],
    "platform_time.h": [],
    "platform_util.h": [],
    "poly1305.h": [],
    "psa_util.h": [],
    "ripemd160.h": [],
    "rsa_internal.h": [],
    "sha512.h": [],
    "ssl.h": [],
    "ssl_cache.h": [],
    "ssl_ciphersuites.h": [],
    "ssl_cookie.h": [],
    "ssl_internal.h": [],
    "ssl_ticket.h": [],
    "threading.h": [],
    "timing.h": [],
    "x509.h": [],
    "x509_crl.h": [],
    "x509_crt.h": [],
    "x509_csr.h": [],
    "xtea.h": [],
    "crypto_builtin_composites.h": [],
    "crypto_builtin_primitives.h": [],
    "crypto_compat.h": [],
    "crypto_config.h": [],
    "crypto_driver_common.h": [],
    "crypto_driver_contexts_composites.h": [],
    "crypto_driver_contexts_primitives.h": [],
    "crypto_extra.h": [],
    "crypto_platform.h": [],
    "crypto_se_driver.h": [],
    "crypto_sizes.h": [],
    "crypto_struct.h": [],
    "crypto_types.h": [],
    "crypto_values.h": [],
    "esp_aes.h": [],
    "esp_aes_gcm.h": [],
    "esp_aes_internal.h": [],
    "aes_alt.h": [],
    "bignum_impl.h": [],
    "esp_crypto_shared_gdma.h": [],
    "esp_rsa_sign_alt.h": [],
    "esp_mem.h": [],
    "gcm_alt.h": [],
    "esp_config.h": [],
    "esp_debug.h": [],
    "esp_md.h": [],
    "md5_alt.h": [],
    "rsa_sign_alt.h": [],
    "sha_dma.h": [],
    "sha_parallel_engine.h": [],
    "sha1_alt.h": [],
    "sha256_alt.h": [],
    "sha512_alt.h": [],
    "mdns_console.h": [],
    "mqtt_client.h": [],
    "mqtt_supported_features.h": [],
    "endian.h": [],
    "esp_newlib.h": [],
    "pthread.h": [],
    "dirent.h": [],
    "ioctl.h": [],
    "lock.h": [],
    "poll.h": [],
    "random.h": [],
    "reent.h": [],
    "select.h": [],
    "termios.h": [],
    "time.h": [],
    "uio.h": [],
    "un.h": [],
    "unistd.h": [],
    "utime.h": [],
    "nghttp2.h": [],
    "http_parser.h": [],
    "nghttp2ver.h": [],
    "nvs.h": [],
    "nvs_flash.h": [],
    "nvs_handle.hpp": [],
    "ssl3.h": [],
    "ssl_cert.h": [],
    "ssl_code.h": [],
    "ssl_dbg.h": [],
    "ssl_lib.h": [],
    "ssl_methods.h": [],
    "ssl_pkey.h": [],
    "ssl_stack.h": [],
    "ssl_types.h": [],
    "ssl_x509.h": [],
    "tls1.h": [],
    "x509_vfy.h": [],
    "bio.h": [],
    "ssl_opt.h": [],
    "ssl_pm.h": [],
    "ssl_port.h": [],
    "perfmon.h": [],
    "xtensa_perfmon_access.h": [],
    "xtensa_perfmon_apis.h": [],
    "xtensa_perfmon_masks.h": [],
    "protobuf-c.h": [],
    "c_bytes_field.h": [],
    "c_enum.h": [],
    "c_enum_field.h": [],
    "c_extension.h": [],
    "c_field.h": [],
    "c_file.h": [],
    "c_generator.h": [],
    "c_helpers.h": [],
    "c_message.h": [],
    "c_message_field.h": [],
    "c_primitive_field.h": [],
    "c_service.h": [],
    "c_string_field.h": [],
    "common-test-arrays.h": [],
    "protocomm.h": [],
    "protocomm_security.h": [],
    "protocomm_security0.h": [],
    "protocomm_security1.h": [],
    "protocomm_ble.h": [],
    "protocomm_console.h": [],
    "protocomm_httpd.h": [],
    "esp_pthread.h": [],
    "qrcode.h": [],
    "esp_rmaker_cmd_resp.h": [],
    "esp_rmaker_common_events.h": [],
    "esp_rmaker_factory.h": [],
    "esp_rmaker_mqtt_glue.h": [],
    "esp_rmaker_utils.h": [],
    "esp_rmaker_work_queue.h": [],
    "rtc_store.h": [],
    "sdmmc_cmd.h": [],
    "adc_channel.h": [],
    "apb_ctrl_reg.h": [],
    "apb_ctrl_struct.h": [],
    "bb_reg.h": [],
    "boot_mode.h": [],
    "can_periph.h": [],
    "can_struct.h": [],
    "clkout_channel.h": [],
    "dac_channel.h": [],
    "dport_reg.h": [],
    "efuse_reg.h": [],
    "emac_dma_struct.h": [],
    "emac_ext_struct.h": [],
    "emac_mac_struct.h": [],
    "fe_reg.h": [],
    "flash_encryption_reg.h": [],
    "frc_timer_reg.h": [],
    "gdma_channel.h": [],
    "gpio_pins.h": [],
    "gpio_reg.h": [],
    "gpio_sd_reg.h": [],
    "gpio_sd_struct.h": [],
    "gpio_sig_map.h": [],
    "gpio_struct.h": [],
    "hinf_reg.h": [],
    "hinf_struct.h": [],
    "host_reg.h": [],
    "host_struct.h": [],
    "hwcrypto_reg.h": [],
    "i2c_reg.h": [],
    "i2c_struct.h": [],
    "i2s_reg.h": [],
    "i2s_struct.h": [],
    "io_mux_reg.h": [],
    "ledc_reg.h": [],
    "ledc_struct.h": [],
    "mcpwm_reg.h": [],
    "mcpwm_struct.h": [],
    "mmu.h": [],
    "nrx_reg.h": [],
    "pcnt_reg.h": [],
    "pcnt_struct.h": [],
    "periph_defs.h": [],
    "pid.h": [],
    "rmt_reg.h": [],
    "rmt_struct.h": [],
    "rtc_cntl_reg.h": [],
    "rtc_cntl_struct.h": [],
    "rtc_i2c_reg.h": [],
    "rtc_io_channel.h": [],
    "rtc_io_reg.h": [],
    "rtc_io_struct.h": [],
    "sdio_slave_pins.h": [],
    "sdmmc_pins.h": [],
    "sdmmc_reg.h": [],
    "sdmmc_struct.h": [],
    "sens_reg.h": [],
    "sens_struct.h": [],
    "slc_reg.h": [],
    "slc_struct.h": [],
    "soc.h": [],
    "soc_caps.h": [],
    "soc_pins.h": [],
    "soc_ulp.h": [],
    "spi_pins.h": [],
    "spi_reg.h": [],
    "spi_struct.h": [],
    "syscon_reg.h": [],
    "syscon_struct.h": [],
    "timer_group_reg.h": [],
    "timer_group_struct.h": [],
    "touch_sensor_channel.h": [],
    "tracemem_config.h": [],
    "twai_struct.h": [],
    "uart_channel.h": [],
    "uart_pins.h": [],
    "uart_reg.h": [],
    "uart_struct.h": [],
    "uhci_reg.h": [],
    "uhci_struct.h": [],
    "wdev_reg.h": [],
    "adc_periph.h": [],
    "dac_periph.h": [],
    "dedic_gpio_periph.h": [],
    "efuse_periph.h": [],
    "emac_periph.h": [],
    "gdma_periph.h": [],
    "gpio_periph.h": [],
    "hwcrypto_periph.h": [],
    "i2c_periph.h": [],
    "i2s_periph.h": [],
    "interrupts.h": [],
    "lcd_periph.h": [],
    "ledc_periph.h": [],
    "mcpwm_periph.h": [],
    "pcnt_periph.h": [],
    "rmt_periph.h": [],
    "rtc_cntl_periph.h": [],
    "rtc_io_periph.h": [],
    "rtc_periph.h": [],
    "sdio_slave_periph.h": [],
    "sdmmc_periph.h": [],
    "sens_periph.h": [],
    "sigmadelta_periph.h": [],
    "soc_memory_types.h": [],
    "spi_periph.h": [],
    "syscon_periph.h": [],
    "timer_periph.h": [],
    "touch_sensor_periph.h": [],
    "twai_periph.h": [],
    "uart_periph.h": [],
    "uhci_periph.h": [],
    "usb_periph.h": [],
    "usb_phy_periph.h": [],
    "esp_flash_internal.h": [],
    "esp_flash_spi_init.h": [],
    "esp_partition.h": [],
    "spi_flash_os.h": [],
    "esp_spi_flash.h": [],
    "esp_spi_flash_counters.h": [],
    "memspi_host_driver.h": [],
    "spi_flash_defs.h": [],
    "spi_flash_chip_boya.h": [],
    "spi_flash_chip_driver.h": [],
    "spi_flash_chip_gd.h": [],
    "spi_flash_chip_generic.h": [],
    "spi_flash_chip_issi.h": [],
    "spi_flash_chip_mxic.h": [],
    "spi_flash_chip_th.h": [],
    "spi_flash_chip_winbond.h": [],
    "esp_spiffs.h": [],
    "spiffs_config.h": [],
    "esp_transport.h": [],
    "esp_transport_ssl.h": [],
    "esp_transport_tcp.h": [],
    "esp_transport_ws.h": [],
    "tcpip_adapter.h": [],
    "tcpip_adapter_compat.h": [],
    "tcpip_adapter_types.h": [],
    "ulp.h": [],
    "ulp_riscv.h": [],
    "ulp_riscv_adc.h": [],
    "ulp_common.h": [],
    "setjmp.h": [],
    "unity_fixture_extras.h": [],
    "unity_test_runner.h": [],
    "esp_vfs.h": [],
    "esp_vfs_cdcacm.h": [],
    "esp_vfs_common.h": [],
    "esp_vfs_console.h": [],
    "esp_vfs_dev.h": [],
    "esp_vfs_eventfd.h": [],
    "esp_vfs_semihost.h": [],
    "esp_vfs_usb_serial_jtag.h": [],
    "wear_levelling.h": [],
    "manager.h": [],
    "scheme_ble.h": [],
    "scheme_console.h": [],
    "scheme_softap.h": [],
    "wifi_config.h": [],
    "wifi_scan.h": [],
    "esp_dpp.h": [],
    "esp_mbo.h": [],
    "esp_rrm.h": [],
    "esp_wnm.h": [],
    "esp_wpa.h": [],
    "esp_wpa2.h": [],
    "esp_wps.h": [],
    "wpa_debug.h": [],
    "wpabuf.h": [],
    "byteswap.h": [],
    "os.h": [],
    "supplicant_opt.h": [],
    "led_strip.h": [],
    "ws2812_led.h": [],
    "core-isa.h": [],
    "core-matmap.h": [],
    "defs.h": [],
    "extreg.h": [],
    "specreg.h": [],
    "system.h": [],
    "tie-asm.h": [],
    "tie.h": [],
    "eri.h": [],
    "esp_panic.h": [],
    "panic_reason.h": [],
    "xt_instr_macros.h": [],
    "xt_trax.h": [],
    "xtensa-debug-module.h": [],
    "cacheasm.h": [],
    "cacheattrasm.h": [],
    "core-macros.h": [],
    "coreasm.h": [],
    "corebits.h": [],
    "hal.h": [],
    "idmaasm.h": [],
    "mpuasm.h": [],
    "semihosting.h": [],
    "traxreg.h": [],
    "xdm-regs.h": [],
    "xt_perf_consts.h": [],
    "xtensa-libdb-macros.h": [],
    "xtensa-versions.h": [],
    "xtensa-xer.h": [],
    "xtruntime-core-state.h": [],
    "xtruntime-frames.h": [],
    "xtruntime.h": [],
    "esp32.peripherals.ld": [],
    "esp32.rom.api.ld": [],
    "esp32.rom.eco3.ld": [],
    "esp32.rom.ld": [],
    "esp32.rom.libgcc.ld": [],
    "esp32.rom.newlib-data.ld": [],
    "esp32.rom.newlib-funcs.ld": [],
    "esp32.rom.newlib-locale.ld": [],
    "esp32.rom.newlib-nano.ld": [],
    "esp32.rom.newlib-time.ld": [],
    "esp32.rom.redefined.ld": [],
    "esp32.rom.spiflash.ld": [],
    "esp32.rom.syscalls.ld": [],
    "libbtdm_app.a": [],
    "libc_speech_features.a": [],
    "libcat_face_detect.a": [],
    "libcolor_detect.a": [],
    "libdl.a": [],
    "libdl_lib.a": [],
    "libesp_tts_chinese.a": [],
    "libhuman_face_detect.a": [],
    "libmfn.a": [],
    "libmultinet2_ch.a": [],
    "libphy.a": [],
    "librtc.a": [],
    "libvoice_set_xiaole.a": [],
    "libwakeword_model.a": [],
    "memory.ld": [],
    "sections.ld": [],
    "libapp_trace.a": [],
    "libapp_update.a": [],
    "libasio.a": [],
    "libbootloader_support.a": [],
    "libbt.a": [],
    "libcbor.a": [],
    "libcmock.a": [],
    "libcoap.a": [],
    "libcoexist.a": [],
    "libconsole.a": [],
    "libcore.a": [],
    "libcxx.a": [],
    "libdriver.a": [],
    "libefuse.a": [],
    "libesp-dsp.a": [],
    "libesp-sr.a": [],
    "libesp-tls.a": [],
    "libesp32-camera.a": [],
    "libesp_adc_cal.a": [],
    "libesp_audio_front_end.a": [],
    "libesp_audio_processor.a": [],
    "libesp_common.a": [],
    "libesp_diagnostics.a": [],
    "libesp_eth.a": [],
    "libesp_event.a": [],
    "libesp_gdbstub.a": [],
    "libesp_hid.a": [],
    "libesp_http_client.a": [],
    "libesp_http_server.a": [],
    "libesp_https_ota.a": [],
    "libesp_https_server.a": [],
    "libesp_hw_support.a": [],
    "libesp_insights.a": [],
    "libesp_ipc.a": [],
    "libesp_lcd.a": [],
    "libesp_littlefs.a": [],
    "libesp_local_ctrl.a": [],
    "libesp_netif.a": [],
    "libesp_phy.a": [],
    "libesp_pm.a": [],
    "libesp_rainmaker.a": [],
    "libesp_ringbuf.a": [],
    "libesp_rom.a": [],
    "libesp_schedule.a": [],
    "libesp_serial_slave_link.a": [],
    "libesp_system.a": [],
    "libesp_timer.a": [],
    "libesp_websocket_client.a": [],
    "libesp_wifi.a": [],
    "libespcoredump.a": [],
    "libespnow.a": [],
    "libexpat.a": [],
    "libfatfs.a": [],
    "libfb_gfx.a": [],
    "libfreemodbus.a": [],
    "libfreertos.a": [],
    "libgpio_button.a": [],
    "libhal.a": [],
    "libheap.a": [],
    "libjsmn.a": [],
    "libjson.a": [],
    "libjson_generator.a": [],
    "libjson_parser.a": [],
    "liblibsodium.a": [],
    "liblog.a": [],
    "liblwip.a": [],
    "libmbedcrypto.a": [],
    "libmbedtls.a": [],
    "libmbedtls_2.a": [],
    "libmbedx509.a": [],
    "libmdns.a": [],
    "libmesh.a": [],
    "libmqtt.a": [],
    "libmultinet.a": [],
    "libnet80211.a": [],
    "libnewlib.a": [],
    "libnghttp.a": [],
    "libnvs_flash.a": [],
    "libopenssl.a": [],
    "libperfmon.a": [],
    "libpp.a": [],
    "libprotobuf-c.a": [],
    "libprotocomm.a": [],
    "libpthread.a": [],
    "libqrcode.a": [],
    "librmaker_common.a": [],
    "librtc_store.a": [],
    "libsdmmc.a": [],
    "libsmartconfig.a": [],
    "libsoc.a": [],
    "libspiffs.a": [],
    "libtcp_transport.a": [],
    "libtcpip_adapter.a": [],
    "libulp.a": [],
    "libunity.a": [],
    "libvfs.a": [],
    "libwakenet.a": [],
    "libwapi.a": [],
    "libwear_levelling.a": [],
    "libwifi_provisioning.a": [],
    "libwpa_supplicant.a": [],
    "libws2812_led.a": [],
    "libxt_hal.a": [],
    "libxtensa.a": [],
    "sdkconfig": [],
    "temp_sensor.h": [],
    "esp_efuse_rtc_calib.h": [],
    "i2c_brownout.h": [],
    "i2c_rtc_clk.h": [],
    "regi2c_bias.h": [],
    "regi2c_brownout.h": [],
    "regi2c_dig_reg.h": [],
    "regi2c_lp_bias.h": [],
    "regi2c_saradc.h": [],
    "eh_frame_parser_impl.h": [],
    "ds_ll.h": [],
    "gdma_ll.h": [],
    "gpspi_flash_ll.h": [],
    "hmac_hal.h": [],
    "hmac_ll.h": [],
    "memprot_ll.h": [],
    "spimem_flash_ll.h": [],
    "systimer_ll.h": [],
    "uhci_ll.h": [],
    "usb_phy_ll.h": [],
    "usb_serial_jtag_ll.h": [],
    "xt_wdt_ll.h": [],
    "csr.h": [],
    "encoding.h": [],
    "instruction_decode.h": [],
    "interrupt.h": [],
    "riscv_interrupts.h": [],
    "rvruntime-frames.h": [],
    "i2c_bbpll.h": [],
    "apb_saradc_reg.h": [],
    "apb_saradc_struct.h": [],
    "assist_debug_reg.h": [],
    "cache_memory.h": [],
    "efuse_struct.h": [],
    "extmem_reg.h": [],
    "gdma_reg.h": [],
    "gdma_struct.h": [],
    "interrupt_core0_reg.h": [],
    "interrupt_reg.h": [],
    "memprot_defs.h": [],
    "rtc_i2c_struct.h": [],
    "sensitive_reg.h": [],
    "sensitive_struct.h": [],
    "spi_mem_reg.h": [],
    "spi_mem_struct.h": [],
    "system_reg.h": [],
    "system_struct.h": [],
    "systimer_reg.h": [],
    "systimer_struct.h": [],
    "usb_serial_jtag_reg.h": [],
    "usb_serial_jtag_struct.h": [],
    "esp32c3.peripherals.ld": [],
    "esp32c3.rom.api.ld": [],
    "esp32c3.rom.eco3.ld": [],
    "esp32c3.rom.ld": [],
    "esp32c3.rom.libgcc.ld": [],
    "esp32c3.rom.newlib-nano.ld": [],
    "esp32c3.rom.newlib-time.ld": [],
    "esp32c3.rom.newlib.ld": [],
    "esp32c3.rom.version.ld": [],
    "libbtbb.a": [],
    "libriscv.a": [],
    "tusb_config.h": [],
    "audio.h": [],
    "audio_device.h": [],
    "bth_device.h": [],
    "cdc.h": [],
    "cdc_device.h": [],
    "cdc_host.h": [],
    "cdc_rndis.h": [],
    "cdc_rndis_host.h": [],
    "dfu.h": [],
    "dfu_device.h": [],
    "dfu_rt_device.h": [],
    "hid.h": [],
    "hid_device.h": [],
    "hid_host.h": [],
    "midi.h": [],
    "midi_device.h": [],
    "msc.h": [],
    "msc_device.h": [],
    "msc_host.h": [],
    "ncm.h": [],
    "net_device.h": [],
    "usbtmc.h": [],
    "usbtmc_device.h": [],
    "vendor_device.h": [],
    "vendor_host.h": [],
    "video.h": [],
    "video_device.h": [],
    "tusb_common.h": [],
    "tusb_compiler.h": [],
    "tusb_debug.h": [],
    "tusb_fifo.h": [],
    "tusb_mcu.h": [],
    "tusb_private.h": [],
    "tusb_timeout.h": [],
    "tusb_types.h": [],
    "tusb_verify.h": [],
    "dcd.h": [],
    "usbd.h": [],
    "usbd_pvt.h": [],
    "hcd.h": [],
    "hub.h": [],
    "usbh.h": [],
    "usbh_classdriver.h": [],
    "osal.h": [],
    "osal_freertos.h": [],
    "osal_mynewt.h": [],
    "osal_none.h": [],
    "osal_pico.h": [],
    "osal_rtthread.h": [],
    "osal_rtx4.h": [],
    "ci_hs_imxrt.h": [],
    "ci_hs_lpc18_43.h": [],
    "ci_hs_type.h": [],
    "ehci.h": [],
    "ehci_api.h": [],
    "musb_msp432e.h": [],
    "musb_tm4c.h": [],
    "musb_type.h": [],
    "usbhs_registers.h": [],
    "common_usb_regs.h": [],
    "dcd_lpc17_40.h": [],
    "common_transdimension.h": [],
    "ohci.h": [],
    "rp2040_usb.h": [],
    "dcd_stm32_fsdev_pvt_st.h": [],
    "synopsys_common.h": [],
    "musb_def.h": [],
    "dwc2_bcm.h": [],
    "dwc2_efm32.h": [],
    "dwc2_esp32.h": [],
    "dwc2_gd32.h": [],
    "dwc2_stm32.h": [],
    "dwc2_type.h": [],
    "dwc2_xmc.h": [],
    "dcd_eptri.h": [],
    "tusb.h": [],
    "tusb_option.h": [],
    "esp_efuse_rtc_table.h": [],
    "regi2c_ulp.h": [],
    "cp_dma_hal.h": [],
    "cp_dma_ll.h": [],
    "crypto_dma_ll.h": [],
    "dedic_gpio_ll.h": [],
    "memprot_peri_ll.h": [],
    "usb_ll.h": [],
    "cp_dma_reg.h": [],
    "cp_dma_struct.h": [],
    "crypto_dma_reg.h": [],
    "dedic_gpio_reg.h": [],
    "dedic_gpio_struct.h": [],
    "touch_sensor_pins.h": [],
    "usb_pins.h": [],
    "usb_reg.h": [],
    "usb_struct.h": [],
    "usb_types.h": [],
    "usb_wrap_reg.h": [],
    "usb_wrap_struct.h": [],
    "usbh_struct.h": [],
    "touch_button.h": [],
    "touch_element.h": [],
    "touch_element_private.h": [],
    "touch_matrix.h": [],
    "touch_slider.h": [],
    "usb_phy.h": [],
    "usb_helpers.h": [],
    "usb_host.h": [],
    "usb_types_ch9.h": [],
    "usb_types_stack.h": [],
    "esp32s2.peripherals.ld": [],
    "esp32s2.rom.api.ld": [],
    "esp32s2.rom.ld": [],
    "esp32s2.rom.libgcc.ld": [],
    "esp32s2.rom.newlib-data.ld": [],
    "esp32s2.rom.newlib-funcs.ld": [],
    "esp32s2.rom.newlib-nano.ld": [],
    "esp32s2.rom.newlib-time.ld": [],
    "esp32s2.rom.spiflash.ld": [],
    "libarduino_tinyusb.a": [],
    "libtouch_element.a": [],
    "libusb.a": [],
    "bootloader_opi_80m.elf": [],
    "bootloader_qio_120m.elf": [],
    "lcd_ll.h": [],
    "assist_debug_struct.h": [],
    "brownout_caps.h": [],
    "cpu_caps.h": [],
    "extmem_struct.h": [],
    "i2c_caps.h": [],
    "interrupt_core0_struct.h": [],
    "interrupt_core1_reg.h": [],
    "interrupt_core1_struct.h": [],
    "interrupt_struct.h": [],
    "lcd_cam_reg.h": [],
    "lcd_cam_struct.h": [],
    "ledc_caps.h": [],
    "mpu_caps.h": [],
    "pcnt_caps.h": [],
    "peri_backup_reg.h": [],
    "peri_backup_struct.h": [],
    "rtc_gpio_channel.h": [],
    "sigmadelta_caps.h": [],
    "touch_channel.h": [],
    "twai_caps.h": [],
    "uart_caps.h": [],
    "usb_caps.h": [],
    "usb_device_reg.h": [],
    "world_controller_reg.h": [],
    "world_controller_struct.h": [],
    "esp32s3.peripherals.ld": [],
    "esp32s3.rom.api.ld": [],
    "esp32s3.rom.ld": [],
    "esp32s3.rom.libgcc.ld": [],
    "esp32s3.rom.newlib-nano.ld": [],
    "esp32s3.rom.newlib-time.ld": [],
    "esp32s3.rom.newlib.ld": [],
    "esp32s3.rom.version.ld": [],
    "libhufzip.a": [],
    "versions.txt": [],
    "ETH_LAN8720.ino": [],
    "ETH_TLK110.ino": [],
    "ETH_W5500_Arduino_SPI.ino": [],
    "ETH_W5500_IDF_SPI.ino": [],
    "d32_core.h": [],
    "constants.cpp": [
        {
            "commit": "1da0ca88e85ee4b50d81b41f23f5d41ddec90f5a",
            "timestamp": "2023-10-06T13:50:53+03:00",
            "author": "Me No Dev",
            "commit_message": "Add TFLite Micro examples (#8717)\n\n* create TFLite library\r\n\r\n* add TFLite hello_world example\r\n\r\n* add TFLite micro_speech example\r\n\r\n---------\r\n\r\nCo-authored-by: Sanket Wadekar <67091512+sanketwadekar@users.noreply.github.com>",
            "additions": 19,
            "deletions": 0,
            "change_type": "ADD",
            "diff": "@@ -0,0 +1,19 @@\n+/* Copyright 2019 The TensorFlow Authors. All Rights Reserved.\n+\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+\n+    http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+==============================================================================*/\n+\n+#include \"constants.h\"\n+\n+// This is a small number so that it's easy to read the logs\n+const int kInferencesPerCycle = 20;\n",
            "comment_added_diff": {
                "18": "// This is a small number so that it's easy to read the logs"
            },
            "comment_deleted_diff": {},
            "comment_modified_diff": {}
        }
    ],
    "hello_world.ino": [],
    "model.cpp": [
        {
            "commit": "1da0ca88e85ee4b50d81b41f23f5d41ddec90f5a",
            "timestamp": "2023-10-06T13:50:53+03:00",
            "author": "Me No Dev",
            "commit_message": "Add TFLite Micro examples (#8717)\n\n* create TFLite library\r\n\r\n* add TFLite hello_world example\r\n\r\n* add TFLite micro_speech example\r\n\r\n---------\r\n\r\nCo-authored-by: Sanket Wadekar <67091512+sanketwadekar@users.noreply.github.com>",
            "additions": 237,
            "deletions": 0,
            "change_type": "ADD",
            "diff": "@@ -0,0 +1,237 @@\n+/* Copyright 2020 The TensorFlow Authors. All Rights Reserved.\n+\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+\n+    http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+==============================================================================*/\n+\n+// Automatically created from a TensorFlow Lite flatbuffer using the command:\n+// xxd -i model.tflite > model.cc\n+\n+// This is a standard TensorFlow Lite model file that has been converted into a\n+// C data array, so it can be easily compiled into a binary for devices that\n+// don't have a file system.\n+\n+// See train/README.md for a full description of the creation process.\n+\n+#include \"model.h\"\n+\n+// Keep model aligned to 8 bytes to guarantee aligned 64-bit accesses.\n+alignas(8) const unsigned char g_model[] = {\n+    0x1c, 0x00, 0x00, 0x00, 0x54, 0x46, 0x4c, 0x33, 0x14, 0x00, 0x20, 0x00,\n+    0x1c, 0x00, 0x18, 0x00, 0x14, 0x00, 0x10, 0x00, 0x0c, 0x00, 0x00, 0x00,\n+    0x08, 0x00, 0x04, 0x00, 0x14, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x00, 0x00,\n+    0x98, 0x00, 0x00, 0x00, 0xc8, 0x00, 0x00, 0x00, 0x1c, 0x03, 0x00, 0x00,\n+    0x2c, 0x03, 0x00, 0x00, 0x30, 0x09, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,\n+    0x01, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x60, 0xf7, 0xff, 0xff,\n+    0x10, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00,\n+    0x44, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x73, 0x65, 0x72, 0x76,\n+    0x65, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x73, 0x65, 0x72, 0x76,\n+    0x69, 0x6e, 0x67, 0x5f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x00,\n+    0x01, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0xbc, 0xff, 0xff, 0xff,\n+    0x09, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00,\n+    0x64, 0x65, 0x6e, 0x73, 0x65, 0x5f, 0x34, 0x00, 0x01, 0x00, 0x00, 0x00,\n+    0x04, 0x00, 0x00, 0x00, 0x76, 0xfd, 0xff, 0xff, 0x04, 0x00, 0x00, 0x00,\n+    0x0d, 0x00, 0x00, 0x00, 0x64, 0x65, 0x6e, 0x73, 0x65, 0x5f, 0x32, 0x5f,\n+    0x69, 0x6e, 0x70, 0x75, 0x74, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,\n+    0x0c, 0x00, 0x00, 0x00, 0x08, 0x00, 0x0c, 0x00, 0x08, 0x00, 0x04, 0x00,\n+    0x08, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,\n+    0x13, 0x00, 0x00, 0x00, 0x6d, 0x69, 0x6e, 0x5f, 0x72, 0x75, 0x6e, 0x74,\n+    0x69, 0x6d, 0x65, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x00,\n+    0x0c, 0x00, 0x00, 0x00, 0x50, 0x02, 0x00, 0x00, 0x48, 0x02, 0x00, 0x00,\n+    0x34, 0x02, 0x00, 0x00, 0xdc, 0x01, 0x00, 0x00, 0x8c, 0x01, 0x00, 0x00,\n+    0x6c, 0x01, 0x00, 0x00, 0x5c, 0x00, 0x00, 0x00, 0x3c, 0x00, 0x00, 0x00,\n+    0x34, 0x00, 0x00, 0x00, 0x2c, 0x00, 0x00, 0x00, 0x24, 0x00, 0x00, 0x00,\n+    0x04, 0x00, 0x00, 0x00, 0xfa, 0xfd, 0xff, 0xff, 0x04, 0x00, 0x00, 0x00,\n+    0x10, 0x00, 0x00, 0x00, 0x31, 0x2e, 0x35, 0x2e, 0x30, 0x00, 0x00, 0x00,\n+    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x84, 0xfd, 0xff, 0xff,\n+    0x88, 0xfd, 0xff, 0xff, 0x8c, 0xfd, 0xff, 0xff, 0x22, 0xfe, 0xff, 0xff,\n+    0x04, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x21, 0xa5, 0x8b, 0xca,\n+    0x5e, 0x1d, 0xce, 0x42, 0x9d, 0xce, 0x1f, 0xb0, 0xdf, 0x54, 0x2f, 0x81,\n+    0x3e, 0xfe, 0xff, 0xff, 0x04, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00,\n+    0xee, 0xfc, 0x00, 0xec, 0x05, 0x17, 0xef, 0xec, 0xe6, 0xf8, 0x03, 0x01,\n+    0x00, 0xfa, 0xf8, 0xf5, 0xdc, 0xeb, 0x27, 0x14, 0xf1, 0xde, 0xe2, 0xdb,\n+    0xf0, 0xde, 0x31, 0x06, 0x02, 0xe6, 0xee, 0xf9, 0x00, 0x16, 0x07, 0xe0,\n+    0xfe, 0xff, 0xe9, 0x06, 0xe7, 0xef, 0x81, 0x1b, 0x18, 0xea, 0xc9, 0x01,\n+    0x0f, 0x00, 0xda, 0xf7, 0x0e, 0xec, 0x13, 0x1f, 0x04, 0x13, 0xb4, 0xe6,\n+    0xfd, 0x06, 0xb9, 0xe0, 0x0d, 0xec, 0xf0, 0xde, 0xeb, 0xf7, 0x05, 0x26,\n+    0x1a, 0xe4, 0x6f, 0x1a, 0xea, 0x1e, 0x35, 0xdf, 0x1a, 0xf3, 0xf1, 0x19,\n+    0x0f, 0x03, 0x1b, 0xe1, 0xde, 0x13, 0xf6, 0x19, 0xff, 0xf6, 0x1b, 0x18,\n+    0xf0, 0x1c, 0xda, 0x1b, 0x1b, 0x20, 0xe5, 0x1a, 0xf5, 0xff, 0x96, 0x0b,\n+    0x00, 0x01, 0xcd, 0xde, 0x0d, 0xf6, 0x16, 0xe3, 0xed, 0xfc, 0x0e, 0xe9,\n+    0xfa, 0xeb, 0x5c, 0xfc, 0x1d, 0x02, 0x5b, 0xe2, 0xe1, 0xf5, 0x15, 0xec,\n+    0xf4, 0x00, 0x13, 0x05, 0xec, 0x0c, 0x1d, 0x14, 0x0e, 0xe7, 0x0b, 0xf4,\n+    0x19, 0x00, 0xd7, 0x05, 0x27, 0x02, 0x15, 0xea, 0xea, 0x02, 0x9b, 0x00,\n+    0x0c, 0xfa, 0xe8, 0xea, 0xfd, 0x00, 0x14, 0xfd, 0x0b, 0x02, 0xef, 0xee,\n+    0x06, 0xee, 0x01, 0x0d, 0x06, 0xe6, 0xf7, 0x11, 0xf7, 0x09, 0xf8, 0xf1,\n+    0x21, 0xff, 0x0e, 0xf3, 0xec, 0x12, 0x26, 0x1d, 0xf2, 0xe9, 0x28, 0x18,\n+    0xe0, 0xfb, 0xf3, 0xf4, 0x05, 0x1d, 0x1d, 0xfb, 0xfd, 0x1e, 0xfc, 0x11,\n+    0xe8, 0x07, 0x09, 0x03, 0x12, 0xf2, 0x36, 0xfb, 0xdc, 0x1c, 0xf9, 0xef,\n+    0xf3, 0xe7, 0x6f, 0x0c, 0x1d, 0x00, 0x45, 0xfd, 0x0e, 0xf0, 0x0b, 0x19,\n+    0x1a, 0xfa, 0xe0, 0x19, 0x1f, 0x13, 0x36, 0x1c, 0x12, 0xeb, 0x3b, 0x0c,\n+    0xb4, 0xcb, 0xe6, 0x13, 0xfa, 0xeb, 0xf1, 0x06, 0x1c, 0xfa, 0x18, 0xe5,\n+    0xeb, 0xcb, 0x0c, 0xf4, 0x4a, 0xff, 0xff, 0xff, 0x04, 0x00, 0x00, 0x00,\n+    0x10, 0x00, 0x00, 0x00, 0x75, 0x1c, 0x11, 0xe1, 0x0c, 0x81, 0xa5, 0x42,\n+    0xfe, 0xd5, 0xd4, 0xb2, 0x61, 0x78, 0x19, 0xdf, 0x66, 0xff, 0xff, 0xff,\n+    0x04, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,\n+    0x77, 0x0b, 0x00, 0x00, 0x53, 0xf6, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00,\n+    0x77, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n+    0xd3, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n+    0x72, 0x21, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0x07, 0x00, 0x00,\n+    0x67, 0xf5, 0xff, 0xff, 0x34, 0xf0, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00,\n+    0xb2, 0xff, 0xff, 0xff, 0x04, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00,\n+    0x00, 0x00, 0x00, 0x00, 0xb5, 0x04, 0x00, 0x00, 0x78, 0x0a, 0x00, 0x00,\n+    0x2d, 0x06, 0x00, 0x00, 0x71, 0xf8, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00,\n+    0x9a, 0x0a, 0x00, 0x00, 0xfe, 0xf7, 0xff, 0xff, 0x0e, 0x05, 0x00, 0x00,\n+    0xd4, 0x09, 0x00, 0x00, 0x47, 0xfe, 0xff, 0xff, 0xb6, 0x04, 0x00, 0x00,\n+    0x00, 0x00, 0x00, 0x00, 0xac, 0xf7, 0xff, 0xff, 0x4b, 0xf9, 0xff, 0xff,\n+    0x4a, 0x05, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x08, 0x00, 0x04, 0x00,\n+    0x06, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,\n+    0x8c, 0xef, 0xff, 0xff, 0x84, 0xff, 0xff, 0xff, 0x88, 0xff, 0xff, 0xff,\n+    0x0f, 0x00, 0x00, 0x00, 0x4d, 0x4c, 0x49, 0x52, 0x20, 0x43, 0x6f, 0x6e,\n+    0x76, 0x65, 0x72, 0x74, 0x65, 0x64, 0x2e, 0x00, 0x01, 0x00, 0x00, 0x00,\n+    0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x18, 0x00, 0x14, 0x00,\n+    0x10, 0x00, 0x0c, 0x00, 0x08, 0x00, 0x04, 0x00, 0x0e, 0x00, 0x00, 0x00,\n+    0x14, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x00, 0x00, 0xdc, 0x00, 0x00, 0x00,\n+    0xe0, 0x00, 0x00, 0x00, 0xe4, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,\n+    0x6d, 0x61, 0x69, 0x6e, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,\n+    0x84, 0x00, 0x00, 0x00, 0x3c, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,\n+    0x96, 0xff, 0xff, 0xff, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08,\n+    0x10, 0x00, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00, 0x04, 0x00, 0x04, 0x00,\n+    0x04, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00,\n+    0x03, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00,\n+    0x01, 0x00, 0x00, 0x00, 0xca, 0xff, 0xff, 0xff, 0x10, 0x00, 0x00, 0x00,\n+    0x00, 0x00, 0x00, 0x08, 0x10, 0x00, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00,\n+    0xba, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x01, 0x01, 0x00, 0x00, 0x00,\n+    0x08, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00,\n+    0x05, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x00,\n+    0x16, 0x00, 0x00, 0x00, 0x10, 0x00, 0x0c, 0x00, 0x0b, 0x00, 0x04, 0x00,\n+    0x0e, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08,\n+    0x18, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00,\n+    0x08, 0x00, 0x07, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,\n+    0x01, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,\n+    0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,\n+    0x01, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,\n+    0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x4c, 0x04, 0x00, 0x00,\n+    0xd0, 0x03, 0x00, 0x00, 0x68, 0x03, 0x00, 0x00, 0x0c, 0x03, 0x00, 0x00,\n+    0x98, 0x02, 0x00, 0x00, 0x24, 0x02, 0x00, 0x00, 0xb0, 0x01, 0x00, 0x00,\n+    0x24, 0x01, 0x00, 0x00, 0x98, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,\n+    0xf0, 0xfb, 0xff, 0xff, 0x18, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00,\n+    0x54, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09,\n+    0x6c, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff,\n+    0x01, 0x00, 0x00, 0x00, 0xdc, 0xfb, 0xff, 0xff, 0x10, 0x00, 0x00, 0x00,\n+    0x18, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00,\n+    0x01, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n+    0x01, 0x00, 0x00, 0x00, 0x4a, 0xce, 0x0a, 0x3c, 0x01, 0x00, 0x00, 0x00,\n+    0x34, 0x84, 0x85, 0x3f, 0x01, 0x00, 0x00, 0x00, 0xc5, 0x02, 0x8f, 0xbf,\n+    0x1e, 0x00, 0x00, 0x00, 0x53, 0x74, 0x61, 0x74, 0x65, 0x66, 0x75, 0x6c,\n+    0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x65, 0x64, 0x43,\n+    0x61, 0x6c, 0x6c, 0x3a, 0x30, 0x5f, 0x69, 0x6e, 0x74, 0x38, 0x00, 0x00,\n+    0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,\n+    0x80, 0xfc, 0xff, 0xff, 0x18, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00,\n+    0x54, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09,\n+    0x64, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff,\n+    0x10, 0x00, 0x00, 0x00, 0x6c, 0xfc, 0xff, 0xff, 0x10, 0x00, 0x00, 0x00,\n+    0x18, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00,\n+    0x01, 0x00, 0x00, 0x00, 0x80, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,\n+    0x01, 0x00, 0x00, 0x00, 0x93, 0xd0, 0xc0, 0x3b, 0x01, 0x00, 0x00, 0x00,\n+    0xc2, 0x0f, 0xc0, 0x3f, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n+    0x14, 0x00, 0x00, 0x00, 0x74, 0x66, 0x6c, 0x2e, 0x66, 0x75, 0x6c, 0x6c,\n+    0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x31,\n+    0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,\n+    0x10, 0x00, 0x00, 0x00, 0x08, 0xfd, 0xff, 0xff, 0x18, 0x00, 0x00, 0x00,\n+    0x20, 0x00, 0x00, 0x00, 0x58, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,\n+    0x00, 0x00, 0x00, 0x09, 0x64, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,\n+    0xff, 0xff, 0xff, 0xff, 0x10, 0x00, 0x00, 0x00, 0xf4, 0xfc, 0xff, 0xff,\n+    0x10, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00,\n+    0x24, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x80, 0xff, 0xff, 0xff,\n+    0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,\n+    0xe0, 0xdb, 0x47, 0x3c, 0x01, 0x00, 0x00, 0x00, 0x04, 0x14, 0x47, 0x40,\n+    0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00,\n+    0x74, 0x66, 0x6c, 0x2e, 0x66, 0x75, 0x6c, 0x6c, 0x79, 0x5f, 0x63, 0x6f,\n+    0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x00, 0x02, 0x00, 0x00, 0x00,\n+    0x01, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x02, 0xfe, 0xff, 0xff,\n+    0x14, 0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00,\n+    0x00, 0x00, 0x00, 0x09, 0x50, 0x00, 0x00, 0x00, 0x6c, 0xfd, 0xff, 0xff,\n+    0x10, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x00, 0x00,\n+    0x20, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n+    0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0xfb, 0x4b, 0x0b, 0x3c,\n+    0x01, 0x00, 0x00, 0x00, 0x40, 0x84, 0x4b, 0x3f, 0x01, 0x00, 0x00, 0x00,\n+    0x63, 0x35, 0x8a, 0xbf, 0x0d, 0x00, 0x00, 0x00, 0x73, 0x74, 0x64, 0x2e,\n+    0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x32, 0x00, 0x00, 0x00,\n+    0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,\n+    0x72, 0xfe, 0xff, 0xff, 0x14, 0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 0x00,\n+    0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09, 0x50, 0x00, 0x00, 0x00,\n+    0xdc, 0xfd, 0xff, 0xff, 0x10, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00,\n+    0x1c, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,\n+    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,\n+    0x60, 0x01, 0x4f, 0x3c, 0x01, 0x00, 0x00, 0x00, 0x47, 0x6d, 0xb3, 0x3f,\n+    0x01, 0x00, 0x00, 0x00, 0x5d, 0x63, 0xcd, 0xbf, 0x0d, 0x00, 0x00, 0x00,\n+    0x73, 0x74, 0x64, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74,\n+    0x31, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,\n+    0x10, 0x00, 0x00, 0x00, 0xe2, 0xfe, 0xff, 0xff, 0x14, 0x00, 0x00, 0x00,\n+    0x48, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09,\n+    0x50, 0x00, 0x00, 0x00, 0x4c, 0xfe, 0xff, 0xff, 0x10, 0x00, 0x00, 0x00,\n+    0x18, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00,\n+    0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n+    0x01, 0x00, 0x00, 0x00, 0xd5, 0x6b, 0x8a, 0x3b, 0x01, 0x00, 0x00, 0x00,\n+    0xab, 0x49, 0x01, 0x3f, 0x01, 0x00, 0x00, 0x00, 0xfd, 0x56, 0x09, 0xbf,\n+    0x0c, 0x00, 0x00, 0x00, 0x73, 0x74, 0x64, 0x2e, 0x63, 0x6f, 0x6e, 0x73,\n+    0x74, 0x61, 0x6e, 0x74, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,\n+    0x10, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x52, 0xff, 0xff, 0xff,\n+    0x14, 0x00, 0x00, 0x00, 0x34, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,\n+    0x00, 0x00, 0x00, 0x02, 0x3c, 0x00, 0x00, 0x00, 0x44, 0xff, 0xff, 0xff,\n+    0x08, 0x00, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,\n+    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n+    0x01, 0x00, 0x00, 0x00, 0x28, 0xb3, 0xd9, 0x38, 0x0c, 0x00, 0x00, 0x00,\n+    0x64, 0x65, 0x6e, 0x73, 0x65, 0x5f, 0x32, 0x2f, 0x62, 0x69, 0x61, 0x73,\n+    0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,\n+    0xaa, 0xff, 0xff, 0xff, 0x14, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00,\n+    0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x38, 0x00, 0x00, 0x00,\n+    0x9c, 0xff, 0xff, 0xff, 0x08, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,\n+    0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n+    0x01, 0x00, 0x00, 0x00, 0xdd, 0x9b, 0x21, 0x39, 0x0c, 0x00, 0x00, 0x00,\n+    0x64, 0x65, 0x6e, 0x73, 0x65, 0x5f, 0x33, 0x2f, 0x62, 0x69, 0x61, 0x73,\n+    0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,\n+    0x00, 0x00, 0x0e, 0x00, 0x18, 0x00, 0x14, 0x00, 0x13, 0x00, 0x0c, 0x00,\n+    0x08, 0x00, 0x04, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00,\n+    0x40, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02,\n+    0x48, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00,\n+    0x08, 0x00, 0x04, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,\n+    0x14, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n+    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,\n+    0xf4, 0xd4, 0x51, 0x38, 0x0c, 0x00, 0x00, 0x00, 0x64, 0x65, 0x6e, 0x73,\n+    0x65, 0x5f, 0x34, 0x2f, 0x62, 0x69, 0x61, 0x73, 0x00, 0x00, 0x00, 0x00,\n+    0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x14, 0x00, 0x1c, 0x00,\n+    0x18, 0x00, 0x17, 0x00, 0x10, 0x00, 0x0c, 0x00, 0x08, 0x00, 0x00, 0x00,\n+    0x00, 0x00, 0x04, 0x00, 0x14, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00,\n+    0x2c, 0x00, 0x00, 0x00, 0x64, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,\n+    0x00, 0x00, 0x00, 0x09, 0x84, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,\n+    0xff, 0xff, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x14, 0x00,\n+    0x10, 0x00, 0x0c, 0x00, 0x08, 0x00, 0x04, 0x00, 0x0c, 0x00, 0x00, 0x00,\n+    0x10, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00,\n+    0x24, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x80, 0xff, 0xff, 0xff,\n+    0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,\n+    0x5d, 0x4f, 0xc9, 0x3c, 0x01, 0x00, 0x00, 0x00, 0x0e, 0x86, 0xc8, 0x40,\n+    0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 0x00, 0x00, 0x00,\n+    0x73, 0x65, 0x72, 0x76, 0x69, 0x6e, 0x67, 0x5f, 0x64, 0x65, 0x66, 0x61,\n+    0x75, 0x6c, 0x74, 0x5f, 0x64, 0x65, 0x6e, 0x73, 0x65, 0x5f, 0x32, 0x5f,\n+    0x69, 0x6e, 0x70, 0x75, 0x74, 0x3a, 0x30, 0x5f, 0x69, 0x6e, 0x74, 0x38,\n+    0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,\n+    0x01, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00,\n+    0x24, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0xd8, 0xff, 0xff, 0xff,\n+    0x06, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06,\n+    0x0c, 0x00, 0x0c, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00,\n+    0x0c, 0x00, 0x00, 0x00, 0x72, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x72,\n+    0x0c, 0x00, 0x10, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x08, 0x00, 0x04, 0x00,\n+    0x0c, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,\n+    0x00, 0x00, 0x00, 0x09};\n+const int g_model_len = 2488;\n",
            "comment_added_diff": {
                "16": "// Automatically created from a TensorFlow Lite flatbuffer using the command:",
                "17": "// xxd -i model.tflite > model.cc",
                "19": "// This is a standard TensorFlow Lite model file that has been converted into a",
                "20": "// C data array, so it can be easily compiled into a binary for devices that",
                "21": "// don't have a file system.",
                "23": "// See train/README.md for a full description of the creation process.",
                "27": "// Keep model aligned to 8 bytes to guarantee aligned 64-bit accesses."
            },
            "comment_deleted_diff": {},
            "comment_modified_diff": {}
        },
        {
            "commit": "1da0ca88e85ee4b50d81b41f23f5d41ddec90f5a",
            "timestamp": "2023-10-06T13:50:53+03:00",
            "author": "Me No Dev",
            "commit_message": "Add TFLite Micro examples (#8717)\n\n* create TFLite library\r\n\r\n* add TFLite hello_world example\r\n\r\n* add TFLite micro_speech example\r\n\r\n---------\r\n\r\nCo-authored-by: Sanket Wadekar <67091512+sanketwadekar@users.noreply.github.com>",
            "additions": 1596,
            "deletions": 0,
            "change_type": "ADD",
            "diff": "@@ -0,0 +1,1596 @@\n+/* Copyright 2020 The TensorFlow Authors. All Rights Reserved.\n+\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+\n+    http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+==============================================================================*/\n+\n+// This is a standard TensorFlow Lite FlatBuffer model file that has been\n+// converted into a C data array, so it can be easily compiled into a binary\n+// for devices that don't have a file system. It was created using the command:\n+// xxd -i model.tflite > model.cc\n+\n+#include \"model.h\"\n+\n+// We need to keep the data array aligned on some architectures.\n+#ifdef __has_attribute\n+#define HAVE_ATTRIBUTE(x) __has_attribute(x)\n+#else\n+#define HAVE_ATTRIBUTE(x) 0\n+#endif\n+#if HAVE_ATTRIBUTE(aligned) || (defined(__GNUC__) && !defined(__clang__))\n+#define DATA_ALIGN_ATTRIBUTE __attribute__((aligned(4)))\n+#else\n+#define DATA_ALIGN_ATTRIBUTE\n+#endif\n+\n+const unsigned char g_model[] DATA_ALIGN_ATTRIBUTE = {\n+    0x20, 0x00, 0x00, 0x00, 0x54, 0x46, 0x4c, 0x33, 0x00, 0x00, 0x00, 0x00,\n+    0x00, 0x00, 0x12, 0x00, 0x1c, 0x00, 0x04, 0x00, 0x08, 0x00, 0x0c, 0x00,\n+    0x10, 0x00, 0x14, 0x00, 0x00, 0x00, 0x18, 0x00, 0x12, 0x00, 0x00, 0x00,\n+    0x03, 0x00, 0x00, 0x00, 0x94, 0x48, 0x00, 0x00, 0x34, 0x42, 0x00, 0x00,\n+    0x1c, 0x42, 0x00, 0x00, 0x3c, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,\n+    0x01, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x08, 0x00, 0x0c, 0x00,\n+    0x04, 0x00, 0x08, 0x00, 0x08, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,\n+    0x0b, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00, 0x6d, 0x69, 0x6e, 0x5f,\n+    0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x76, 0x65, 0x72, 0x73,\n+    0x69, 0x6f, 0x6e, 0x00, 0x0c, 0x00, 0x00, 0x00, 0xd4, 0x41, 0x00, 0x00,\n+    0xb4, 0x41, 0x00, 0x00, 0x24, 0x03, 0x00, 0x00, 0xf4, 0x02, 0x00, 0x00,\n+    0xec, 0x02, 0x00, 0x00, 0xe4, 0x02, 0x00, 0x00, 0xc4, 0x02, 0x00, 0x00,\n+    0xbc, 0x02, 0x00, 0x00, 0x2c, 0x00, 0x00, 0x00, 0x24, 0x00, 0x00, 0x00,\n+    0x1c, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x16, 0xbd, 0xff, 0xff,\n+    0x04, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x31, 0x2e, 0x35, 0x2e,\n+    0x30, 0x00, 0x00, 0x00, 0x94, 0xba, 0xff, 0xff, 0x98, 0xba, 0xff, 0xff,\n+    0x32, 0xbd, 0xff, 0xff, 0x04, 0x00, 0x00, 0x00, 0x80, 0x02, 0x00, 0x00,\n+    0xfa, 0xee, 0x28, 0xc4, 0xee, 0xfe, 0xcf, 0x0f, 0x1e, 0xf7, 0x1f, 0x06,\n+    0x0d, 0xed, 0xe9, 0x83, 0x5c, 0xc9, 0x18, 0xe3, 0xf9, 0x14, 0x28, 0x2a,\n+    0x09, 0xf2, 0x18, 0x34, 0x62, 0xea, 0xef, 0xd6, 0x36, 0xb7, 0x1e, 0xf7,\n+    0x3b, 0x22, 0x28, 0x39, 0xc2, 0x9d, 0xf1, 0x07, 0x5e, 0x0b, 0x1e, 0x2c,\n+    0x07, 0xdd, 0xfd, 0xc3, 0xd8, 0x4a, 0xf3, 0x28, 0xa7, 0x16, 0xd5, 0xf1,\n+    0xc3, 0x05, 0xfd, 0x27, 0xcc, 0xba, 0x1e, 0xcb, 0xd7, 0x3d, 0xd4, 0x29,\n+    0x00, 0xfd, 0x28, 0x44, 0xfb, 0xf2, 0xf3, 0xb6, 0x4f, 0xcf, 0x09, 0xf0,\n+    0xfa, 0x45, 0x41, 0x49, 0x05, 0xc5, 0x17, 0x5d, 0x64, 0x00, 0xf8, 0xee,\n+    0x48, 0x17, 0xf4, 0xe9, 0x2e, 0x4b, 0x2e, 0x3f, 0xdf, 0xee, 0xe4, 0x08,\n+    0x38, 0xf1, 0x16, 0x13, 0x2f, 0x2a, 0xed, 0xc2, 0xbf, 0x36, 0xf4, 0x02,\n+    0xcf, 0xaa, 0xd2, 0xfa, 0xac, 0x13, 0xf6, 0xe8, 0xb5, 0x68, 0x12, 0xb6,\n+    0xce, 0x0e, 0xdf, 0x58, 0xe4, 0x49, 0x14, 0x15, 0x03, 0xed, 0xfa, 0xd4,\n+    0x40, 0xa7, 0xf6, 0xca, 0xfb, 0x00, 0x4d, 0x5e, 0xe4, 0x55, 0x1d, 0x30,\n+    0x45, 0xe2, 0xfc, 0x01, 0x48, 0x81, 0xe9, 0xf1, 0x1e, 0xfc, 0x21, 0x32,\n+    0xed, 0x4b, 0xed, 0xfa, 0x2f, 0xd2, 0xfa, 0xfb, 0x4d, 0xa7, 0xed, 0xc7,\n+    0x92, 0xdf, 0xe6, 0xdb, 0xf8, 0x1f, 0xd9, 0xfa, 0x91, 0xf5, 0xe5, 0xc5,\n+    0x8c, 0x17, 0x0f, 0xb9, 0xd2, 0xc7, 0xfe, 0x68, 0xd3, 0x51, 0x2e, 0x49,\n+    0x1f, 0xbd, 0x01, 0xeb, 0x31, 0x17, 0xf0, 0xef, 0xff, 0xb8, 0x5d, 0x62,\n+    0x02, 0x0f, 0x1f, 0x78, 0x6a, 0xb0, 0xf9, 0xfe, 0x4f, 0xcc, 0xd3, 0xff,\n+    0x0a, 0x96, 0x1e, 0x2c, 0xed, 0xbc, 0xf4, 0x0b, 0x42, 0xc8, 0xf1, 0xea,\n+    0x6e, 0x58, 0xec, 0xc4, 0x99, 0xae, 0xdc, 0xd7, 0x12, 0x87, 0xd8, 0x06,\n+    0xa2, 0xc2, 0xe6, 0xa2, 0x81, 0x24, 0xe9, 0xac, 0xce, 0xb6, 0x15, 0x6b,\n+    0xba, 0x00, 0x19, 0x58, 0x29, 0xb6, 0xfe, 0x01, 0x25, 0x96, 0xd2, 0xec,\n+    0x0e, 0x9c, 0x60, 0x5f, 0xe9, 0xf4, 0xf5, 0x69, 0x6b, 0xb5, 0xe1, 0xf6,\n+    0x5e, 0xb7, 0xb1, 0xe5, 0x11, 0x9b, 0x18, 0x10, 0xe3, 0xe1, 0xe0, 0x0d,\n+    0x4f, 0xa5, 0xde, 0xe5, 0x6f, 0xe2, 0xfb, 0x99, 0x82, 0xa5, 0xc9, 0xb6,\n+    0x1f, 0x46, 0xf3, 0x04, 0xc6, 0xca, 0xd6, 0x97, 0x90, 0x1d, 0xc0, 0x95,\n+    0xf0, 0x19, 0x30, 0x77, 0xc2, 0x3c, 0xfa, 0x24, 0x02, 0x4d, 0x06, 0x07,\n+    0x15, 0x02, 0xb0, 0xe7, 0x27, 0x22, 0x67, 0x4d, 0xf1, 0xc2, 0xf4, 0x64,\n+    0x38, 0x40, 0xdf, 0xf6, 0x3a, 0x43, 0xb8, 0xe1, 0x0d, 0x15, 0x11, 0xfe,\n+    0xf5, 0xec, 0xf9, 0xe5, 0x22, 0x36, 0xe4, 0xfd, 0x6d, 0xbf, 0x0d, 0x8e,\n+    0xb7, 0x15, 0xbf, 0x9f, 0x16, 0xad, 0x0a, 0x02, 0x8e, 0x14, 0xda, 0x9b,\n+    0x8e, 0xc3, 0xa6, 0xca, 0xf5, 0x7f, 0x51, 0x56, 0xc1, 0xb3, 0xd9, 0x35,\n+    0xf8, 0x7f, 0x04, 0x0a, 0x03, 0x3f, 0xbe, 0xee, 0x19, 0x68, 0x78, 0x50,\n+    0xf9, 0xa7, 0xf7, 0x7f, 0x1d, 0x76, 0xdb, 0xe8, 0x33, 0xb9, 0xd7, 0xe7,\n+    0xe8, 0x69, 0x15, 0xf7, 0xf5, 0xb2, 0xfe, 0xe8, 0xf3, 0x5b, 0xe2, 0x06,\n+    0x6e, 0x09, 0x36, 0xb7, 0xcc, 0x38, 0xbf, 0x8a, 0x28, 0x14, 0x2e, 0x18,\n+    0xa7, 0x26, 0xcb, 0xb2, 0x95, 0x37, 0xac, 0xcd, 0xd7, 0x51, 0x67, 0x44,\n+    0xcd, 0x31, 0xde, 0x04, 0xe9, 0x6a, 0x00, 0x13, 0x0a, 0x0c, 0xdd, 0x16,\n+    0xe0, 0x24, 0x7e, 0x49, 0xf1, 0xb5, 0x04, 0x52, 0x01, 0x50, 0xdd, 0xf5,\n+    0x26, 0xc9, 0xf4, 0xf8, 0xd6, 0x31, 0x1b, 0xd0, 0xef, 0x03, 0x0a, 0xc0,\n+    0xd4, 0x4f, 0xe2, 0xfd, 0x72, 0xf4, 0x5a, 0xc9, 0xd7, 0x31, 0xc0, 0x8e,\n+    0x17, 0x5e, 0x57, 0x00, 0xb4, 0x3a, 0xc8, 0xd2, 0x92, 0x32, 0xcb, 0xd8,\n+    0xc3, 0xa6, 0x63, 0x26, 0xcf, 0xbc, 0xe8, 0x57, 0x9b, 0xe9, 0xf7, 0x1c,\n+    0xea, 0x12, 0xf1, 0xf7, 0xdb, 0xb9, 0x7f, 0x16, 0xf6, 0xe0, 0x08, 0x70,\n+    0xa2, 0xed, 0xcc, 0xf1, 0x1e, 0x10, 0x04, 0xf7, 0xa9, 0xb7, 0x34, 0xaa,\n+    0x0a, 0xdb, 0x2a, 0xa6, 0xb6, 0x10, 0xea, 0xf8, 0x5e, 0x06, 0x72, 0xdd,\n+    0xd0, 0xb9, 0xd6, 0xa0, 0x10, 0x9f, 0x5a, 0x17, 0xb1, 0xe7, 0xc0, 0x01,\n+    0x9d, 0x01, 0xe0, 0xe0, 0xaf, 0x9c, 0x46, 0xd8, 0xaf, 0xe8, 0xce, 0x02,\n+    0x8a, 0xbb, 0xe4, 0xf6, 0xf3, 0x36, 0x07, 0xca, 0xcb, 0x87, 0x6e, 0xcc,\n+    0xd6, 0x9e, 0x0a, 0x2a, 0x81, 0xd7, 0xcf, 0xc0, 0x04, 0xeb, 0x24, 0xcc,\n+    0xc9, 0x95, 0x33, 0x81, 0xf7, 0xad, 0x1c, 0x9c, 0xa4, 0xd6, 0xf9, 0xe6,\n+    0x3d, 0x84, 0x7f, 0xcc, 0xd4, 0xb0, 0xf4, 0xa2, 0xe9, 0x3c, 0x36, 0xee,\n+    0xd5, 0xcf, 0xcd, 0x2d, 0x28, 0xbd, 0xff, 0xff, 0xc2, 0xbf, 0xff, 0xff,\n+    0x04, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff,\n+    0x31, 0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,\n+    0x48, 0xbd, 0xff, 0xff, 0x4c, 0xbd, 0xff, 0xff, 0xe6, 0xbf, 0xff, 0xff,\n+    0x04, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x8a, 0xfe, 0xff, 0xff,\n+    0xa9, 0x00, 0x00, 0x00, 0xd0, 0xff, 0xff, 0xff, 0xd0, 0x00, 0x00, 0x00,\n+    0x52, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x4f, 0xfb, 0xff, 0xff,\n+    0x4a, 0xfd, 0xff, 0xff, 0x12, 0xc0, 0xff, 0xff, 0x04, 0x00, 0x00, 0x00,\n+    0x80, 0x3e, 0x00, 0x00, 0xff, 0xf9, 0xfd, 0x0a, 0x07, 0x08, 0x07, 0x03,\n+    0x07, 0xf2, 0xd1, 0x09, 0xf0, 0xe9, 0x28, 0x09, 0xdf, 0x05, 0xfa, 0xf0,\n+    0xe8, 0xe3, 0x13, 0x0e, 0x08, 0xef, 0xd3, 0xee, 0x0f, 0xe8, 0xeb, 0x14,\n+    0xf7, 0xed, 0xfd, 0x1f, 0xe8, 0xd5, 0xeb, 0xfc, 0x0e, 0xf4, 0xf7, 0x07,\n+    0x05, 0xea, 0xf6, 0x1f, 0xf8, 0xdb, 0xdc, 0x0b, 0x03, 0xdd, 0xd8, 0xf3,\n+    0x0f, 0x19, 0xe1, 0x09, 0xfc, 0xe4, 0x02, 0x04, 0xf1, 0x04, 0xeb, 0xf3,\n+    0x1e, 0x06, 0xfd, 0x11, 0xfc, 0xfa, 0xf6, 0x1f, 0x0f, 0x02, 0xf5, 0xf7,\n+    0xff, 0x24, 0xdf, 0xf7, 0xf8, 0xf3, 0xf6, 0xe9, 0xef, 0x03, 0xdd, 0xf2,\n+    0x28, 0xe1, 0xf2, 0x22, 0xf4, 0x09, 0xf7, 0xf9, 0xf0, 0xd4, 0xf9, 0xee,\n+    0xff, 0x14, 0xda, 0xf3, 0x11, 0xe2, 0xf6, 0x0c, 0xf2, 0xeb, 0xf8, 0xe8,\n+    0xe3, 0x08, 0x02, 0x17, 0xf4, 0x0b, 0x0c, 0x27, 0xe6, 0x02, 0x03, 0xf9,\n+    0x14, 0x18, 0xf6, 0xeb, 0x1f, 0x0c, 0xf1, 0xee, 0xfc, 0x08, 0xf0, 0xfe,\n+    0xfd, 0xee, 0x17, 0xfd, 0x1c, 0xef, 0xfd, 0xde, 0x04, 0x05, 0xf0, 0x31,\n+    0xfa, 0x0b, 0xdc, 0x0d, 0xed, 0xf5, 0xfa, 0xf4, 0x08, 0x0c, 0xd7, 0x1e,\n+    0x15, 0x03, 0xf5, 0x02, 0xf4, 0xfb, 0xed, 0x01, 0xfe, 0xd6, 0x1f, 0xfd,\n+    0xfd, 0x0e, 0xfa, 0x06, 0xf1, 0xf9, 0xe2, 0x16, 0xe9, 0xf1, 0x03, 0x0d,\n+    0x0d, 0xdf, 0xf9, 0x1a, 0x0e, 0xf6, 0xfc, 0x0a, 0x19, 0xe2, 0xe0, 0x09,\n+    0x15, 0xf0, 0xf1, 0x06, 0xf1, 0xe1, 0xef, 0x1a, 0x08, 0xe8, 0xfd, 0x12,\n+    0x14, 0x06, 0xf1, 0xfc, 0xea, 0xfb, 0xf7, 0xea, 0x1d, 0x09, 0xfa, 0xf6,\n+    0x08, 0xf2, 0xe7, 0xf8, 0xfc, 0x16, 0xf5, 0x0e, 0x08, 0xf9, 0x0a, 0x03,\n+    0x26, 0xd8, 0x02, 0xf5, 0xf6, 0xf6, 0xef, 0x1f, 0xe4, 0xe2, 0xfb, 0x02,\n+    0x1b, 0xe6, 0xde, 0x00, 0xf2, 0xed, 0xfb, 0x18, 0xe4, 0x16, 0x1a, 0x1d,\n+    0xf1, 0xf6, 0xea, 0x16, 0x05, 0xde, 0xfb, 0x18, 0xf5, 0xe4, 0xfe, 0xe2,\n+    0x1b, 0x1c, 0x0c, 0xe8, 0x02, 0xee, 0xfb, 0x07, 0x24, 0xf2, 0xe9, 0xfa,\n+    0x0d, 0x05, 0xf1, 0x03, 0xfe, 0xf6, 0x19, 0x06, 0xff, 0xf9, 0x04, 0xfb,\n+    0x15, 0xef, 0xf1, 0xf8, 0xe9, 0xe1, 0x10, 0x04, 0xfc, 0xe6, 0x1f, 0xed,\n+    0x0b, 0xef, 0x00, 0x1e, 0xe6, 0x16, 0xf3, 0x09, 0xfd, 0x08, 0x08, 0x06,\n+    0x06, 0x23, 0xdf, 0xfc, 0x08, 0xf4, 0xea, 0x0c, 0xf2, 0xe6, 0x18, 0xf5,\n+    0x02, 0xf9, 0x50, 0x09, 0x01, 0xda, 0x0b, 0x05, 0x12, 0x18, 0xef, 0x04,\n+    0x0e, 0xd9, 0xff, 0xdc, 0xf6, 0x16, 0xf9, 0xf4, 0xec, 0xff, 0xea, 0xe6,\n+    0xfa, 0x0a, 0xed, 0xef, 0x02, 0xf0, 0x25, 0x21, 0xf1, 0x26, 0xf5, 0xed,\n+    0x09, 0xea, 0xea, 0x24, 0xfa, 0x11, 0xfc, 0xdf, 0xf3, 0x0a, 0x28, 0x0c,\n+    0x19, 0xff, 0xf5, 0xd6, 0x0e, 0xe2, 0x2a, 0x06, 0xfa, 0x03, 0xf9, 0xe6,\n+    0xef, 0x23, 0xf9, 0xfa, 0xe6, 0xfe, 0xfc, 0x03, 0x06, 0x1a, 0xf9, 0x08,\n+    0xe0, 0xe5, 0xff, 0x05, 0x01, 0xe7, 0x12, 0x02, 0x1d, 0x05, 0x03, 0x05,\n+    0x0b, 0xee, 0xed, 0xfc, 0x0f, 0xf3, 0x02, 0xe0, 0x15, 0xdf, 0x02, 0xed,\n+    0x10, 0x26, 0xef, 0x0d, 0x06, 0xee, 0xef, 0xf6, 0xeb, 0x11, 0x09, 0xf4,\n+    0xf7, 0x06, 0x0f, 0x01, 0x2a, 0x0b, 0x01, 0xdd, 0xfc, 0xf4, 0xf1, 0x17,\n+    0x03, 0x04, 0x07, 0xfc, 0x22, 0xfc, 0xde, 0xfe, 0x0b, 0x03, 0xf3, 0xfb,\n+    0x0c, 0x25, 0x04, 0x19, 0x04, 0x03, 0x01, 0xfa, 0xfb, 0xf7, 0xf6, 0x0e,\n+    0x15, 0x0e, 0x09, 0xff, 0x06, 0xfa, 0xfb, 0x1e, 0xfb, 0x05, 0x22, 0xf9,\n+    0xfe, 0xf7, 0x1d, 0xed, 0xdf, 0x18, 0x09, 0xeb, 0xef, 0x04, 0x12, 0xea,\n+    0xdf, 0xfb, 0xda, 0xf6, 0xdf, 0x17, 0xef, 0xef, 0xe1, 0x1a, 0xd9, 0xe2,\n+    0xe2, 0xfc, 0x05, 0x11, 0xf6, 0xee, 0xe8, 0xf2, 0xe1, 0x08, 0x26, 0x04,\n+    0xed, 0x03, 0xe0, 0xfb, 0xee, 0x0c, 0xee, 0xf6, 0x04, 0x2d, 0xf2, 0xd3,\n+    0xf4, 0xe0, 0xf8, 0x0c, 0xfe, 0x11, 0x0b, 0xd7, 0xfd, 0x18, 0x07, 0x0d,\n+    0x07, 0x08, 0xf4, 0xc6, 0x0a, 0x0a, 0x1f, 0x0c, 0xf4, 0x1d, 0x02, 0x0b,\n+    0x09, 0x0e, 0x21, 0xff, 0x17, 0x0b, 0x0d, 0xf2, 0xed, 0xd7, 0x0a, 0xf8,\n+    0x03, 0x06, 0xfa, 0xe5, 0xfd, 0x03, 0x14, 0x0f, 0xe9, 0x1a, 0xf4, 0xda,\n+    0x01, 0xe6, 0x09, 0x06, 0x11, 0x0d, 0xfd, 0xeb, 0x16, 0x23, 0xfa, 0x00,\n+    0x0b, 0x17, 0xf7, 0xda, 0xd7, 0x1b, 0xfa, 0x01, 0x03, 0x05, 0xfe, 0xd6,\n+    0x02, 0xee, 0xee, 0x02, 0xf3, 0x06, 0xed, 0x03, 0xec, 0x01, 0xf2, 0x0f,\n+    0x05, 0x17, 0x0b, 0xfb, 0x0f, 0x05, 0x03, 0x13, 0xff, 0x06, 0x02, 0xf5,\n+    0xf4, 0x18, 0x2b, 0xf0, 0x00, 0x17, 0xfc, 0xfd, 0x05, 0x0b, 0x0e, 0x14,\n+    0xe1, 0x24, 0x08, 0x24, 0xe6, 0xeb, 0x21, 0x12, 0xfb, 0x12, 0xe7, 0xf4,\n+    0xe8, 0x0e, 0x18, 0xee, 0xf5, 0xf3, 0xd9, 0xf3, 0xdb, 0xec, 0x0c, 0x1e,\n+    0xcf, 0x14, 0xdb, 0xe3, 0xdc, 0x02, 0x0c, 0xfb, 0xdb, 0x1b, 0xd0, 0xfe,\n+    0xf9, 0xfe, 0x2a, 0xf5, 0x00, 0x0b, 0xcd, 0xe0, 0xe2, 0x0e, 0x04, 0xf8,\n+    0xda, 0x1c, 0xe5, 0x0f, 0xe8, 0xf4, 0xf7, 0x15, 0x06, 0xf8, 0x02, 0xf7,\n+    0x0f, 0xfb, 0x17, 0xf9, 0xda, 0x01, 0xda, 0xd1, 0xf6, 0x02, 0xfd, 0x16,\n+    0xf1, 0xe4, 0xfa, 0x07, 0xee, 0x0a, 0xf3, 0xfd, 0xf2, 0x23, 0xf0, 0xe1,\n+    0x0a, 0x1a, 0x12, 0x1f, 0xef, 0x27, 0x09, 0xf1, 0x0c, 0x13, 0x23, 0xfd,\n+    0xf5, 0x03, 0xfe, 0x09, 0xfd, 0x16, 0xf8, 0x07, 0x08, 0x25, 0x08, 0xf8,\n+    0xf6, 0x0a, 0xf1, 0xf5, 0x07, 0x09, 0x05, 0xcc, 0xf8, 0x08, 0x13, 0xf9,\n+    0x1d, 0x11, 0x0f, 0xdc, 0xee, 0xf3, 0x27, 0xf9, 0xf9, 0x22, 0xfa, 0x0d,\n+    0xe2, 0x13, 0xfb, 0x11, 0x03, 0x1e, 0xff, 0xfb, 0xed, 0xf1, 0x0e, 0x0b,\n+    0x0f, 0x00, 0x06, 0xe0, 0x15, 0xf3, 0x13, 0xfc, 0x18, 0xf9, 0xff, 0x09,\n+    0xfa, 0x1f, 0x12, 0xe5, 0xe2, 0x06, 0xf9, 0xf4, 0x07, 0x15, 0x0b, 0x04,\n+    0xdb, 0x0d, 0xeb, 0xf3, 0xe6, 0x06, 0xe5, 0xee, 0xd8, 0x22, 0xd8, 0x10,\n+    0xea, 0xf9, 0x1c, 0xf7, 0xd3, 0x11, 0xc3, 0xf8, 0xde, 0x05, 0x00, 0xe6,\n+    0x07, 0xfd, 0xd3, 0x03, 0xea, 0xe0, 0x13, 0x14, 0xcf, 0xeb, 0xcd, 0xd3,\n+    0xde, 0xf5, 0xf0, 0x0c, 0x0c, 0xfa, 0xeb, 0xd3, 0xfb, 0xfd, 0x08, 0xf9,\n+    0xf4, 0x10, 0xfa, 0xd3, 0xf4, 0x11, 0x11, 0xf8, 0xef, 0xf8, 0xf8, 0xf1,\n+    0xfc, 0xe1, 0xf7, 0x12, 0x04, 0xf4, 0xfb, 0xed, 0xef, 0x0c, 0xfd, 0x1c,\n+    0xfe, 0x0e, 0xfd, 0xe2, 0xfe, 0x0a, 0x02, 0xfe, 0xe6, 0x1f, 0xef, 0xe5,\n+    0xe6, 0xf8, 0x16, 0x27, 0xe8, 0x20, 0x05, 0xe3, 0xf1, 0xef, 0xee, 0xed,\n+    0x0d, 0x11, 0x16, 0xfb, 0xf3, 0xff, 0x14, 0x01, 0xff, 0x15, 0x10, 0x02,\n+    0xe5, 0x28, 0x29, 0x13, 0x13, 0x16, 0xe6, 0x00, 0xd2, 0x26, 0xfd, 0x03,\n+    0x04, 0x05, 0x07, 0x06, 0xf1, 0x0e, 0x05, 0x0d, 0xe2, 0x0f, 0x02, 0xe1,\n+    0x07, 0xf7, 0x1c, 0xfa, 0x14, 0x30, 0xf7, 0xee, 0x00, 0xfa, 0x3d, 0x06,\n+    0x1c, 0x04, 0x06, 0x07, 0x05, 0x1a, 0x10, 0xf6, 0xee, 0x0a, 0xeb, 0x04,\n+    0xeb, 0xdf, 0x1d, 0x09, 0xd5, 0xe8, 0xd6, 0xf4, 0xf0, 0x0f, 0x1d, 0xea,\n+    0xf2, 0xf8, 0xa6, 0x0b, 0xdc, 0x09, 0x08, 0x24, 0xee, 0x24, 0xaa, 0xe4,\n+    0xcb, 0x15, 0xef, 0xe7, 0xe9, 0x0c, 0xcf, 0x06, 0xe3, 0x12, 0x11, 0x00,\n+    0x07, 0x14, 0xd7, 0xde, 0xf6, 0x0f, 0x0b, 0x04, 0xfb, 0x0d, 0xf8, 0x0d,\n+    0xf6, 0x1b, 0xf1, 0x21, 0xdd, 0xfc, 0xf4, 0xe9, 0xf8, 0xe8, 0xf7, 0x06,\n+    0x03, 0x1e, 0xce, 0xe1, 0xea, 0xf6, 0x05, 0xf9, 0x16, 0x15, 0x04, 0xe0,\n+    0x14, 0xf7, 0x1e, 0x1c, 0x0a, 0x27, 0xef, 0xf3, 0x0f, 0xf3, 0xee, 0x04,\n+    0xf8, 0xf1, 0x07, 0xe3, 0x05, 0x0b, 0x00, 0x1c, 0x15, 0x27, 0x07, 0xf7,\n+    0xfa, 0x0b, 0xfa, 0xfa, 0x17, 0x13, 0xe1, 0xf5, 0xfb, 0x0c, 0x21, 0x2f,\n+    0xd7, 0xfb, 0xf5, 0xfd, 0xd3, 0xf4, 0x07, 0x0e, 0xfd, 0x0b, 0xfc, 0xfa,\n+    0xf5, 0x0e, 0x02, 0xfa, 0xfa, 0x19, 0xfd, 0xfa, 0xfc, 0x13, 0x24, 0x0c,\n+    0xe4, 0x31, 0xf8, 0x12, 0xf4, 0x04, 0x18, 0x29, 0x27, 0x19, 0xfc, 0x08,\n+    0x11, 0xe3, 0x07, 0xfe, 0x26, 0x40, 0x05, 0x02, 0x04, 0x02, 0x0f, 0xee,\n+    0xf4, 0x27, 0xea, 0xf4, 0xf5, 0x11, 0x26, 0x0b, 0xe7, 0x05, 0xd2, 0xf6,\n+    0xea, 0xfa, 0x0b, 0xf9, 0xfa, 0x16, 0xba, 0x00, 0xfb, 0x0d, 0x0b, 0xf9,\n+    0xe6, 0xf6, 0xc5, 0xf8, 0xf6, 0x01, 0x0f, 0xed, 0xed, 0x13, 0xcd, 0x0d,\n+    0xda, 0x06, 0x17, 0xee, 0x07, 0x1d, 0xb8, 0xfa, 0xe2, 0xea, 0xf2, 0xee,\n+    0x04, 0x00, 0xdc, 0xd0, 0xfb, 0xf5, 0xec, 0xfe, 0xf1, 0x0d, 0xf0, 0xdb,\n+    0xf9, 0x0d, 0x03, 0x03, 0x0e, 0x0a, 0xda, 0xd6, 0x01, 0xf2, 0x06, 0x14,\n+    0x1c, 0x1f, 0xe8, 0xe8, 0x0e, 0xfd, 0x0c, 0xf5, 0xf3, 0x3d, 0xf3, 0x05,\n+    0x10, 0xfa, 0x1b, 0x18, 0x08, 0x36, 0x09, 0xf1, 0xeb, 0xf9, 0x22, 0x01,\n+    0xf3, 0xf7, 0xff, 0xf0, 0x0c, 0xe9, 0x01, 0x29, 0x21, 0x15, 0x03, 0xee,\n+    0xe9, 0x1a, 0xf7, 0x15, 0x06, 0x25, 0xfa, 0xf0, 0xe4, 0xf1, 0x1f, 0x01,\n+    0xdc, 0x2d, 0xce, 0xe9, 0xea, 0x0b, 0x06, 0x2c, 0x0a, 0x30, 0xe7, 0x09,\n+    0xf4, 0xf0, 0x10, 0x29, 0xf9, 0x3d, 0xe7, 0xdc, 0xe4, 0xf7, 0x3b, 0x27,\n+    0x23, 0x3a, 0x0a, 0x06, 0x0e, 0xfd, 0x2c, 0x07, 0x2b, 0x1c, 0xfa, 0x00,\n+    0xf9, 0x11, 0xea, 0x14, 0xeb, 0xfc, 0x18, 0x03, 0xf1, 0x16, 0x12, 0x04,\n+    0xcf, 0x12, 0xdd, 0xe4, 0x0e, 0xf0, 0x09, 0xe8, 0xf3, 0xfb, 0xa8, 0xf9,\n+    0xee, 0xfb, 0x1e, 0x1d, 0xfd, 0x05, 0xab, 0xe5, 0xff, 0x01, 0xfe, 0x04,\n+    0xf9, 0x02, 0xb9, 0xdc, 0xdf, 0x05, 0xf1, 0xef, 0xf1, 0x1e, 0xc7, 0xee,\n+    0xf7, 0x1e, 0x00, 0x00, 0xf8, 0x10, 0xec, 0xe8, 0x04, 0x0f, 0xf6, 0xff,\n+    0x04, 0x09, 0xe0, 0x0a, 0x0e, 0xe4, 0xf0, 0xf1, 0x16, 0x2b, 0xd3, 0xe1,\n+    0x0a, 0xef, 0xf9, 0xfe, 0x0b, 0x22, 0xf5, 0x01, 0x0a, 0xf8, 0x02, 0x00,\n+    0x17, 0x19, 0xf3, 0x05, 0x21, 0xfa, 0xee, 0xee, 0x12, 0xf2, 0xfa, 0xf5,\n+    0x05, 0x12, 0xee, 0xe4, 0x28, 0xfa, 0xf1, 0x03, 0x15, 0x16, 0x18, 0xfd,\n+    0x0f, 0x21, 0x04, 0xf4, 0xe5, 0x0c, 0x06, 0x13, 0xde, 0x36, 0xe8, 0xfb,\n+    0xe7, 0xfd, 0xf6, 0x12, 0x0e, 0x1d, 0xea, 0xf8, 0xd4, 0xe8, 0x19, 0x07,\n+    0xe5, 0x1c, 0xf7, 0x0c, 0xef, 0x05, 0x0f, 0x09, 0xdd, 0x1a, 0xea, 0xd7,\n+    0xf9, 0xf9, 0x12, 0x17, 0x2e, 0x10, 0x08, 0xfe, 0x14, 0xf5, 0x1d, 0xfa,\n+    0x06, 0x33, 0xed, 0xfe, 0xf7, 0x11, 0xf0, 0x15, 0xe2, 0x24, 0xf6, 0x0a,\n+    0xe2, 0xfc, 0x23, 0x12, 0xdd, 0x11, 0xfd, 0xe5, 0x08, 0xff, 0x15, 0xf6,\n+    0xf1, 0x1b, 0xae, 0xfe, 0xe6, 0x15, 0x2c, 0x2d, 0x15, 0x15, 0xc5, 0xf8,\n+    0xea, 0xe7, 0x07, 0x04, 0xfe, 0x28, 0xa1, 0xf2, 0xe1, 0xf9, 0xf8, 0xff,\n+    0xf4, 0x22, 0xb4, 0xdb, 0x03, 0x20, 0xe6, 0xf3, 0x0e, 0x19, 0xe3, 0x0a,\n+    0xfa, 0xee, 0xf3, 0xe5, 0xd8, 0xf9, 0xf1, 0xde, 0x06, 0x05, 0xf2, 0xf5,\n+    0xe7, 0x16, 0xd8, 0xfe, 0x07, 0xea, 0xee, 0x0e, 0xfa, 0xff, 0xdb, 0xe7,\n+    0x03, 0xed, 0x01, 0xfd, 0x09, 0x1a, 0xfa, 0xe6, 0x05, 0x10, 0xe9, 0x01,\n+    0x1f, 0x13, 0xf7, 0xf6, 0xfb, 0x13, 0xff, 0xdb, 0xed, 0xfe, 0x0a, 0x10,\n+    0x09, 0x29, 0xf5, 0x04, 0xf5, 0x26, 0x0d, 0x0c, 0xf9, 0x16, 0xfa, 0x02,\n+    0xf4, 0x2e, 0xde, 0xf5, 0xe1, 0x1d, 0xfb, 0x02, 0x0b, 0x23, 0x07, 0xea,\n+    0xd9, 0x0a, 0xf3, 0x0a, 0x0f, 0x1e, 0xe7, 0xf1, 0xd7, 0x0b, 0xf6, 0xff,\n+    0x0d, 0x24, 0xcc, 0x0a, 0xee, 0xda, 0x14, 0x12, 0x11, 0x29, 0xf4, 0x1a,\n+    0xef, 0x0b, 0xfa, 0xec, 0x0c, 0x1b, 0xf4, 0xff, 0xf5, 0xef, 0x0f, 0x10,\n+    0xd4, 0x04, 0xf9, 0xf8, 0xec, 0xf9, 0x21, 0x05, 0xd3, 0x27, 0xf3, 0x17,\n+    0xff, 0xf6, 0x15, 0xf9, 0xed, 0x0a, 0xac, 0x02, 0xfd, 0xfb, 0x04, 0x29,\n+    0x06, 0x03, 0xb8, 0xe6, 0xd5, 0x17, 0x09, 0x1b, 0xf6, 0x1b, 0xab, 0xdc,\n+    0xdf, 0xfd, 0x06, 0x09, 0x09, 0x37, 0xbb, 0xed, 0x19, 0xd7, 0xe2, 0xdd,\n+    0x05, 0x01, 0xec, 0xfb, 0xe4, 0x0e, 0xeb, 0xf0, 0x03, 0x17, 0x04, 0xeb,\n+    0x09, 0xee, 0xeb, 0xe7, 0x0c, 0x16, 0xcb, 0x0e, 0x17, 0xd8, 0xe1, 0xf8,\n+    0x2b, 0x19, 0xde, 0xeb, 0x10, 0xf2, 0xff, 0xf8, 0xee, 0x0e, 0xe7, 0xf0,\n+    0x15, 0x08, 0xf8, 0xdf, 0x06, 0x0d, 0xf9, 0x14, 0xfa, 0x0b, 0x04, 0xfd,\n+    0x15, 0x23, 0x20, 0xff, 0xfd, 0x1d, 0x0c, 0xf1, 0xfe, 0x15, 0x0a, 0x02,\n+    0xed, 0xfe, 0xfb, 0x04, 0xfb, 0x1e, 0xdd, 0x05, 0xe0, 0x16, 0xf9, 0xf6,\n+    0xfd, 0x32, 0xdc, 0xf2, 0xd3, 0x08, 0xf4, 0xec, 0x17, 0x25, 0xe2, 0xf0,\n+    0xee, 0xf1, 0x0d, 0xfe, 0x13, 0x2d, 0x01, 0x11, 0xd4, 0xe4, 0x07, 0xfb,\n+    0x32, 0x11, 0x14, 0x07, 0xd7, 0x02, 0x10, 0xeb, 0x2b, 0x1d, 0x01, 0xfc,\n+    0xf3, 0xf0, 0x13, 0x1a, 0xdb, 0x20, 0x00, 0xf0, 0xf0, 0x05, 0x16, 0x03,\n+    0xd4, 0xe3, 0xc2, 0xf0, 0x06, 0x02, 0x1e, 0x0a, 0xec, 0x1f, 0xab, 0xea,\n+    0xfa, 0xe3, 0x20, 0x22, 0x03, 0x1b, 0xb3, 0x0e, 0xe3, 0xf3, 0x1d, 0x27,\n+    0xe3, 0x10, 0xa7, 0xda, 0xf3, 0x00, 0x0a, 0x0a, 0x04, 0xfb, 0xb2, 0x0f,\n+    0x0c, 0xf5, 0x07, 0xff, 0x13, 0x1e, 0xdb, 0xf6, 0xf9, 0xef, 0xe8, 0xe7,\n+    0xfb, 0x18, 0xeb, 0xec, 0x09, 0xda, 0xf1, 0xf0, 0x0b, 0x04, 0xe1, 0xfa,\n+    0x1c, 0x25, 0xee, 0x01, 0x0b, 0x29, 0xd7, 0x0c, 0x04, 0x0b, 0xef, 0xfd,\n+    0x1c, 0xfc, 0xf1, 0xfb, 0x0b, 0x0f, 0xdf, 0xed, 0x17, 0x38, 0x0c, 0xd7,\n+    0xff, 0xfd, 0x01, 0xfc, 0xfb, 0xfb, 0x18, 0x1a, 0x18, 0xe3, 0xf9, 0xf4,\n+    0xfa, 0x20, 0x06, 0x09, 0x11, 0x08, 0x1d, 0xf8, 0xfa, 0x1d, 0xf5, 0x1c,\n+    0xf5, 0xfe, 0x03, 0x07, 0xe4, 0x33, 0xc8, 0x0c, 0xe1, 0x13, 0xff, 0xe5,\n+    0x10, 0x2c, 0xd3, 0xf0, 0xed, 0x04, 0x07, 0x01, 0xf1, 0x16, 0xe0, 0x13,\n+    0xfa, 0x11, 0x07, 0xfa, 0x19, 0x16, 0x01, 0x00, 0x07, 0x26, 0x00, 0xec,\n+    0x1d, 0x23, 0x05, 0xf4, 0x07, 0x17, 0x2c, 0x1d, 0xee, 0xf0, 0x0c, 0x09,\n+    0xe3, 0x1a, 0x24, 0x0b, 0xf3, 0x1e, 0xce, 0xfe, 0xfe, 0x12, 0x21, 0x1a,\n+    0xf6, 0x23, 0xc3, 0x03, 0xf4, 0x10, 0x1a, 0x2a, 0xf4, 0x08, 0xbf, 0xff,\n+    0x04, 0xf4, 0x0b, 0x1d, 0x1a, 0xf8, 0xcc, 0x00, 0xf7, 0x13, 0xf4, 0xfd,\n+    0xf4, 0x19, 0xbd, 0xef, 0x0c, 0x0d, 0x02, 0xfc, 0x12, 0x13, 0xe9, 0xe7,\n+    0xf5, 0xfa, 0xfa, 0xf6, 0x1a, 0x2e, 0xce, 0xd4, 0x01, 0x12, 0xfd, 0xfc,\n+    0x26, 0x10, 0xcc, 0xe7, 0xee, 0x13, 0xee, 0xff, 0xef, 0xea, 0x00, 0x0e,\n+    0x1a, 0x17, 0x04, 0x0c, 0x04, 0x0c, 0xe6, 0xf3, 0xf6, 0xdb, 0xdd, 0x04,\n+    0xf4, 0x22, 0x11, 0x16, 0xf3, 0x07, 0xec, 0xf8, 0xf2, 0x07, 0x03, 0x02,\n+    0xf5, 0x0a, 0xf6, 0x02, 0x1d, 0x1b, 0x11, 0x06, 0xf8, 0x06, 0x02, 0xea,\n+    0xf3, 0x1d, 0xce, 0x00, 0xed, 0xf9, 0xef, 0xf6, 0xec, 0x22, 0xc7, 0xf0,\n+    0xed, 0xdb, 0xe0, 0x02, 0x11, 0x07, 0xe8, 0xf0, 0xd1, 0xed, 0xff, 0xfd,\n+    0x0c, 0x2e, 0xd4, 0xed, 0xec, 0x0e, 0xf1, 0x07, 0x01, 0x0e, 0x0e, 0xfe,\n+    0xda, 0x0b, 0x0a, 0x0a, 0x1f, 0x2e, 0x13, 0x07, 0x00, 0x07, 0x14, 0x21,\n+    0xe9, 0xfc, 0xf0, 0x1e, 0xd7, 0xea, 0x34, 0x07, 0xc6, 0x0c, 0xd4, 0xec,\n+    0xfd, 0x06, 0x24, 0x0a, 0xf3, 0x15, 0xaf, 0xff, 0xe9, 0xf1, 0x0d, 0x3e,\n+    0xe9, 0x18, 0xba, 0x13, 0xed, 0xd7, 0x0b, 0x31, 0x05, 0x0e, 0xaf, 0x13,\n+    0xd6, 0x0e, 0x10, 0x02, 0x02, 0x14, 0xcb, 0xd5, 0xf9, 0x0c, 0xf9, 0x0e,\n+    0x1f, 0x24, 0xd5, 0xeb, 0xff, 0xf1, 0xf5, 0x0c, 0x08, 0x07, 0xf4, 0xd7,\n+    0x06, 0x10, 0xe8, 0xef, 0xfc, 0x2f, 0xee, 0xf1, 0x18, 0xf8, 0xf4, 0x02,\n+    0x11, 0x21, 0xd3, 0x12, 0x14, 0xe4, 0xf4, 0x02, 0x05, 0x24, 0xca, 0xf2,\n+    0xf3, 0xeb, 0xe7, 0xf8, 0x16, 0x1a, 0xeb, 0x0d, 0x05, 0x16, 0xf1, 0xec,\n+    0x11, 0x1c, 0x09, 0x1e, 0xe0, 0xe6, 0xfa, 0x0e, 0x0d, 0x2a, 0xea, 0x2e,\n+    0xed, 0xf9, 0xf7, 0x16, 0x09, 0x05, 0xdd, 0xd6, 0x02, 0xeb, 0xf5, 0xf3,\n+    0xe4, 0x3b, 0xed, 0x04, 0xe0, 0x0e, 0xfd, 0x09, 0xfd, 0x35, 0xdc, 0x18,\n+    0xf3, 0x04, 0xfa, 0x05, 0x15, 0x34, 0xe5, 0xe1, 0xe4, 0xf4, 0xe0, 0xf9,\n+    0x08, 0x32, 0x04, 0x08, 0xf4, 0x0f, 0xff, 0x08, 0x09, 0x2f, 0x06, 0x02,\n+    0xfd, 0x05, 0x0c, 0x24, 0xe3, 0x1e, 0xf5, 0x0c, 0xdd, 0xf8, 0x18, 0x20,\n+    0xd8, 0x14, 0xef, 0xf4, 0x17, 0x08, 0x25, 0x14, 0x04, 0x06, 0xb0, 0xf5,\n+    0xf5, 0x09, 0x0f, 0x3e, 0xff, 0x28, 0xb3, 0xf5, 0x19, 0xd8, 0x14, 0x21,\n+    0xd9, 0xf7, 0xb7, 0xe5, 0xfe, 0xe7, 0x07, 0x1e, 0x04, 0x15, 0xc5, 0xf9,\n+    0x14, 0x20, 0xeb, 0x01, 0x01, 0x18, 0xce, 0x00, 0xe6, 0xe2, 0xf7, 0xfb,\n+    0xf3, 0x0d, 0xd3, 0xf3, 0x04, 0xf8, 0xf0, 0x03, 0xf1, 0x25, 0xb5, 0xef,\n+    0x05, 0xe0, 0x01, 0xf6, 0x04, 0x16, 0xd1, 0x01, 0x0a, 0x21, 0x01, 0x05,\n+    0x0e, 0x01, 0xf0, 0x0a, 0xf3, 0x00, 0x03, 0xf8, 0xfa, 0x03, 0x0b, 0xde,\n+    0xfe, 0xff, 0xfb, 0xea, 0x09, 0x02, 0xf5, 0xe8, 0xe7, 0x08, 0x00, 0xf5,\n+    0xf8, 0x0f, 0x13, 0xfa, 0xeb, 0xe8, 0xfb, 0x1f, 0x08, 0x16, 0xe6, 0xfa,\n+    0xe1, 0x00, 0x03, 0xdd, 0xf1, 0x26, 0xe5, 0x1d, 0xd9, 0xff, 0xf2, 0xf8,\n+    0xff, 0x33, 0xea, 0xe5, 0x03, 0x0c, 0x07, 0xf9, 0xf8, 0x0f, 0xe1, 0x1e,\n+    0xdd, 0x0f, 0x00, 0xf1, 0x06, 0x21, 0x09, 0x05, 0xf3, 0xec, 0xe6, 0x04,\n+    0x07, 0x32, 0xf1, 0xf9, 0xf2, 0x01, 0x18, 0x1f, 0xd2, 0xe2, 0x0a, 0xf4,\n+    0xca, 0xfc, 0x28, 0x16, 0xc2, 0x10, 0xf2, 0xfc, 0x08, 0xe9, 0x2a, 0x0f,\n+    0xfa, 0xf5, 0xa9, 0x07, 0xec, 0xe9, 0x19, 0x43, 0x0b, 0x1c, 0xa6, 0xe9,\n+    0xf4, 0x16, 0x0d, 0x2b, 0xfc, 0x11, 0x9a, 0xe1, 0xf1, 0x1c, 0xf5, 0x0f,\n+    0xe4, 0x18, 0xc0, 0xd9, 0x14, 0x26, 0xe6, 0xf8, 0x0a, 0x17, 0xec, 0xfb,\n+    0xe1, 0x22, 0xdf, 0xf2, 0xfe, 0x1e, 0xd4, 0xeb, 0xd7, 0x0e, 0x08, 0xf6,\n+    0xef, 0xfc, 0xe6, 0xd4, 0xf7, 0x0b, 0xfb, 0xf5, 0x01, 0x25, 0xd7, 0xfb,\n+    0x0d, 0xfe, 0xff, 0xf3, 0x1d, 0x32, 0xfe, 0xee, 0x12, 0xf2, 0x0c, 0xec,\n+    0x02, 0x10, 0xef, 0x01, 0xf2, 0x0b, 0xf3, 0xf7, 0xfa, 0x25, 0xfb, 0x0d,\n+    0x11, 0x15, 0x04, 0xfc, 0x0c, 0x21, 0x12, 0x29, 0x00, 0xfa, 0xf6, 0xf5,\n+    0x06, 0x22, 0xea, 0xe2, 0xee, 0x00, 0xfd, 0xf0, 0x0b, 0x1d, 0xd3, 0xe4,\n+    0xe4, 0x0a, 0xfc, 0xe8, 0xea, 0x2c, 0xed, 0xed, 0xef, 0xe8, 0xf2, 0x05,\n+    0xfd, 0x15, 0xd8, 0xda, 0xca, 0xee, 0xfa, 0x00, 0xfe, 0x0e, 0xf2, 0xf0,\n+    0x0e, 0xf5, 0x04, 0x03, 0x1d, 0x2b, 0xee, 0x05, 0x0f, 0x10, 0x13, 0x35,\n+    0xe2, 0x04, 0x10, 0xdf, 0xcf, 0xeb, 0x40, 0x26, 0xe4, 0x03, 0xf3, 0xf9,\n+    0xf5, 0x14, 0x24, 0x2a, 0xdf, 0xfe, 0xab, 0xe5, 0xfe, 0x1c, 0x27, 0x35,\n+    0xdb, 0xff, 0xac, 0x01, 0xf6, 0xfc, 0x19, 0x1a, 0x11, 0x1f, 0xa8, 0xf5,\n+    0x02, 0x0f, 0x1a, 0x1f, 0xf7, 0xf2, 0xa2, 0x00, 0x15, 0x22, 0xe4, 0x13,\n+    0x00, 0x09, 0xd9, 0xd5, 0x02, 0x19, 0xfd, 0xf8, 0xe7, 0xff, 0xfb, 0xe0,\n+    0xef, 0xf7, 0xee, 0xf3, 0xf3, 0x19, 0xb0, 0xdf, 0x00, 0x0f, 0x08, 0xf3,\n+    0x15, 0x17, 0xec, 0x0f, 0x11, 0x14, 0x02, 0x08, 0x10, 0x17, 0xe6, 0x08,\n+    0xf7, 0x00, 0xed, 0xf7, 0x29, 0x07, 0x10, 0x05, 0x05, 0xe7, 0xed, 0xf4,\n+    0xf9, 0x15, 0xf9, 0xf0, 0x08, 0x00, 0x03, 0x09, 0x21, 0x28, 0xf6, 0x0e,\n+    0xfb, 0xf3, 0x03, 0xf7, 0x0f, 0x0c, 0xf0, 0xf5, 0xe3, 0xd8, 0xf8, 0xf2,\n+    0x09, 0x1c, 0xe7, 0xfb, 0xe4, 0xf6, 0xfa, 0xf8, 0xf1, 0x42, 0xf6, 0xda,\n+    0xdd, 0xd7, 0xfa, 0xff, 0x2f, 0x2c, 0xda, 0x0a, 0xde, 0xec, 0xf1, 0x14,\n+    0xfb, 0x1d, 0xeb, 0xee, 0xf2, 0xeb, 0xf3, 0xed, 0x0e, 0x35, 0xf0, 0x06,\n+    0x19, 0x04, 0x2f, 0x23, 0xe2, 0x07, 0x13, 0x0f, 0xe9, 0xf0, 0x22, 0x2e,\n+    0xd9, 0x1a, 0xcb, 0xed, 0xfd, 0x04, 0x27, 0x1e, 0xf6, 0x07, 0x96, 0xd6,\n+    0xd8, 0x11, 0x18, 0x56, 0xd2, 0xfb, 0x92, 0xfc, 0x0b, 0x0a, 0x17, 0x2c,\n+    0xe5, 0x04, 0xa2, 0xf8, 0xe2, 0x04, 0x1a, 0x0d, 0xeb, 0x11, 0xa2, 0xe5,\n+    0xe5, 0xf8, 0x02, 0xf7, 0x17, 0x03, 0xca, 0xe9, 0x0c, 0x1f, 0xfe, 0xf5,\n+    0x18, 0x12, 0xdd, 0x08, 0x15, 0xff, 0xfc, 0xf6, 0xe1, 0x1d, 0xe2, 0xe1,\n+    0xfe, 0xfc, 0x03, 0xff, 0xf2, 0x23, 0xd2, 0x01, 0x13, 0xdd, 0xf3, 0xf4,\n+    0xf2, 0x07, 0xef, 0x03, 0x15, 0x21, 0xd8, 0xf8, 0x09, 0xf3, 0xe8, 0xea,\n+    0xe8, 0xf2, 0x08, 0xf0, 0x04, 0x1a, 0xf2, 0x19, 0xfb, 0x1b, 0x15, 0xfc,\n+    0x1d, 0x30, 0xe5, 0x1e, 0x09, 0xe8, 0xe9, 0x09, 0xf7, 0x2a, 0xe1, 0x0e,\n+    0x00, 0x21, 0xf3, 0xff, 0xfb, 0x01, 0xdf, 0xf2, 0xfe, 0xf4, 0xfc, 0xf0,\n+    0x0b, 0x0b, 0xdd, 0xe4, 0xd2, 0x14, 0xf7, 0xfe, 0x0b, 0x39, 0x01, 0xe6,\n+    0xe4, 0x27, 0xfa, 0xe4, 0x04, 0x2c, 0xe2, 0x04, 0xf5, 0x07, 0xf2, 0x03,\n+    0xf0, 0x10, 0xf5, 0xf6, 0xfc, 0x16, 0x22, 0x1b, 0xf8, 0x11, 0xe4, 0x09,\n+    0xf6, 0xf0, 0x41, 0x1e, 0xcf, 0x04, 0xea, 0xee, 0x0e, 0xf6, 0x1b, 0x2f,\n+    0xc7, 0xf1, 0xba, 0xef, 0x0f, 0x16, 0x1e, 0x39, 0x05, 0x1e, 0x90, 0xe6,\n+    0x0d, 0xfa, 0x22, 0x3f, 0xe3, 0x23, 0xa5, 0xe3, 0xe9, 0x0f, 0x05, 0x27,\n+    0x02, 0x11, 0x99, 0x05, 0xfa, 0x05, 0x03, 0x01, 0xff, 0x26, 0xd3, 0xf7,\n+    0xf7, 0xf9, 0x05, 0xf4, 0xef, 0x23, 0xd2, 0xdd, 0x05, 0x08, 0xfa, 0xff,\n+    0x03, 0x04, 0xbd, 0xd7, 0x14, 0x06, 0xef, 0x06, 0xe5, 0x05, 0xea, 0xea,\n+    0x02, 0xfd, 0x0d, 0x00, 0x08, 0xff, 0xe7, 0xfb, 0xfe, 0x13, 0xfe, 0xec,\n+    0xf9, 0x02, 0xf3, 0xff, 0xff, 0x08, 0x04, 0xed, 0x19, 0x1d, 0xfa, 0x0a,\n+    0x0d, 0xf2, 0x0f, 0xec, 0x25, 0x1c, 0xec, 0x0b, 0x01, 0xff, 0x01, 0xf6,\n+    0x08, 0x09, 0xe8, 0xe2, 0xec, 0x23, 0xe5, 0xe9, 0xf0, 0x2e, 0xbd, 0xe1,\n+    0xef, 0x14, 0xe9, 0xf6, 0xf5, 0x1d, 0xdc, 0xe3, 0xd7, 0xfc, 0xf9, 0xf2,\n+    0xfe, 0x24, 0xf2, 0x05, 0xd5, 0xed, 0xe9, 0xf9, 0xfa, 0x2d, 0xf0, 0xfe,\n+    0xee, 0xf2, 0xe8, 0xf7, 0x06, 0x14, 0x01, 0x10, 0x06, 0xf3, 0x0e, 0x0e,\n+    0xc2, 0x1d, 0xf2, 0x1c, 0xed, 0xe3, 0x53, 0x21, 0xb8, 0x0c, 0xde, 0x03,\n+    0x15, 0xeb, 0x46, 0x39, 0xdf, 0xf6, 0xa3, 0xee, 0xf6, 0xe0, 0x33, 0x50,\n+    0xdd, 0x27, 0x9f, 0x07, 0x13, 0xe2, 0x1f, 0x35, 0xed, 0x1f, 0xb7, 0x07,\n+    0x11, 0xed, 0x17, 0x28, 0xf4, 0x20, 0xc1, 0xec, 0xef, 0x16, 0x02, 0xfa,\n+    0xe0, 0x1b, 0xf7, 0xdb, 0xfd, 0x0a, 0xe7, 0xfb, 0xe7, 0x25, 0xe2, 0xe7,\n+    0xf8, 0xf0, 0xee, 0xe9, 0x02, 0x06, 0xc9, 0xe4, 0x14, 0xe3, 0xe2, 0xf7,\n+    0xf8, 0xfd, 0xdd, 0xe2, 0x08, 0x0a, 0xe4, 0x05, 0xf5, 0x16, 0xe7, 0x01,\n+    0x00, 0x1c, 0xe7, 0xf0, 0xf6, 0x19, 0xfe, 0x0c, 0xf2, 0x06, 0x03, 0xe8,\n+    0x0b, 0xfe, 0xe3, 0x19, 0x08, 0x1a, 0x10, 0xfd, 0x00, 0x21, 0xf0, 0xeb,\n+    0x18, 0x02, 0xf3, 0x04, 0xf0, 0x18, 0xdb, 0x05, 0x01, 0xde, 0xed, 0xe9,\n+    0x23, 0x15, 0xaf, 0xe6, 0xf1, 0x0a, 0xe6, 0xea, 0x01, 0x18, 0xd8, 0xfd,\n+    0xf1, 0xe6, 0xec, 0xf5, 0x0e, 0x1e, 0xcc, 0xfc, 0xe7, 0x00, 0xe9, 0x11,\n+    0x00, 0x30, 0xf9, 0x14, 0xf4, 0x19, 0xdd, 0xf7, 0xf7, 0x2f, 0xf4, 0xf2,\n+    0xff, 0x27, 0x15, 0x1c, 0xbc, 0x2f, 0xe9, 0x14, 0xf5, 0xe8, 0x44, 0x30,\n+    0xe8, 0x1d, 0xe4, 0x18, 0x11, 0x00, 0x0c, 0x2b, 0xf3, 0x29, 0x96, 0xe0,\n+    0x06, 0xee, 0x3e, 0x55, 0xdc, 0x13, 0x98, 0xdf, 0xf0, 0xfe, 0x17, 0x33,\n+    0xe8, 0x09, 0xa3, 0x07, 0xef, 0x0e, 0x1d, 0x37, 0xdd, 0xfe, 0xb5, 0x00,\n+    0xf7, 0xe0, 0xea, 0xfd, 0xfd, 0x19, 0xbc, 0xfd, 0x15, 0xfe, 0x01, 0xf3,\n+    0xd5, 0x20, 0xbf, 0xe3, 0x15, 0x0e, 0xf0, 0xf6, 0xf2, 0x14, 0xcc, 0xf0,\n+    0xf7, 0x04, 0xf2, 0xff, 0x0b, 0x02, 0xd2, 0xd8, 0xfa, 0xfc, 0xe5, 0x02,\n+    0x00, 0xfb, 0xf0, 0xdc, 0x1e, 0x10, 0x02, 0x01, 0x00, 0x18, 0xe9, 0xdb,\n+    0x1e, 0xf6, 0xfc, 0x03, 0xef, 0x0a, 0x00, 0x16, 0x00, 0x0f, 0xf4, 0x16,\n+    0xfa, 0x0b, 0xe2, 0xfa, 0xe0, 0x07, 0xfb, 0x02, 0x21, 0x0e, 0xdd, 0x0b,\n+    0xea, 0xf0, 0xeb, 0xfb, 0x19, 0x09, 0xd4, 0xf2, 0xef, 0x0b, 0x00, 0xeb,\n+    0x1a, 0x2f, 0xea, 0x06, 0x03, 0xf6, 0xf8, 0xfb, 0xfe, 0x1d, 0xea, 0xdd,\n+    0xed, 0xfd, 0xfb, 0xe7, 0xfe, 0x18, 0xf4, 0xfc, 0x0b, 0xf6, 0xfc, 0x0b,\n+    0xfb, 0x28, 0x07, 0xff, 0x07, 0x1e, 0x03, 0x21, 0xcf, 0x22, 0x05, 0xe6,\n+    0xea, 0xe7, 0x43, 0x2e, 0xe7, 0x14, 0xfb, 0x0a, 0x1e, 0xfe, 0x2c, 0x24,\n+    0xd5, 0xfd, 0x9e, 0xd1, 0xf2, 0x1c, 0x32, 0x51, 0x01, 0xf3, 0xac, 0xe1,\n+    0xf4, 0xe5, 0x1c, 0x37, 0xf1, 0x0f, 0xa7, 0xdb, 0x00, 0xf6, 0x0f, 0x18,\n+    0xe1, 0x10, 0xc9, 0xc5, 0xe8, 0xeb, 0xf2, 0xfd, 0xf6, 0x02, 0xc2, 0xff,\n+    0x00, 0x19, 0x03, 0x0f, 0x02, 0x22, 0xd4, 0xe7, 0x07, 0x0f, 0xe5, 0x1a,\n+    0x09, 0x0b, 0xdc, 0xd2, 0x00, 0x05, 0xee, 0xf8, 0xdc, 0x14, 0xd0, 0x0a,\n+    0x0a, 0xfa, 0xeb, 0x04, 0xf3, 0x06, 0xde, 0x05, 0xfb, 0xfd, 0xe3, 0xec,\n+    0xfd, 0x14, 0xd7, 0x11, 0x0e, 0xe6, 0x06, 0xec, 0xde, 0x22, 0xd7, 0x00,\n+    0x03, 0xf5, 0xf5, 0x0d, 0x01, 0x05, 0xea, 0x0b, 0x16, 0x04, 0xff, 0x13,\n+    0xf3, 0x12, 0xd2, 0xdf, 0x0b, 0xe4, 0x06, 0xf6, 0x08, 0x2d, 0xd3, 0xd6,\n+    0xe7, 0x0a, 0xec, 0xff, 0xfe, 0x01, 0xdf, 0xf4, 0xdf, 0x1c, 0xfe, 0xf9,\n+    0xf7, 0x13, 0xca, 0xff, 0x03, 0x06, 0xe9, 0xf7, 0x06, 0x08, 0xd7, 0xf3,\n+    0xed, 0x08, 0xe3, 0xfd, 0x0c, 0x11, 0x15, 0xfb, 0x15, 0x08, 0x28, 0x40,\n+    0xe7, 0x0d, 0x08, 0xec, 0xe8, 0x16, 0x67, 0x46, 0xc8, 0x16, 0xf1, 0x02,\n+    0x24, 0x00, 0x3a, 0x43, 0xd6, 0x12, 0xae, 0xe7, 0xf4, 0xf8, 0x3a, 0x65,\n+    0xe4, 0x0c, 0xb2, 0xef, 0x1f, 0xe8, 0x29, 0x59, 0xf8, 0x11, 0xc4, 0xe1,\n+    0xfe, 0xfa, 0x27, 0x43, 0xc9, 0x1e, 0xbb, 0xfb, 0xf3, 0x13, 0x15, 0x0d,\n+    0xf1, 0x13, 0xcd, 0xf0, 0x07, 0x19, 0x07, 0x00, 0xd8, 0xeb, 0xbf, 0xf0,\n+    0xfc, 0xf6, 0xef, 0x16, 0x01, 0x02, 0xc1, 0xdf, 0xfd, 0xe9, 0x06, 0x06,\n+    0xf1, 0x08, 0xd7, 0xcc, 0xfb, 0x0e, 0xfc, 0x14, 0xf2, 0x1a, 0xe2, 0x0d,\n+    0xeb, 0x09, 0x07, 0x10, 0xe6, 0x13, 0xeb, 0xf5, 0x15, 0x14, 0xeb, 0xfe,\n+    0xf9, 0x17, 0xd2, 0xe3, 0x1e, 0xf5, 0x04, 0x0a, 0xf1, 0x0e, 0xde, 0xe7,\n+    0x01, 0x20, 0x0c, 0xfc, 0xdc, 0xf9, 0xe5, 0xe9, 0xff, 0x1d, 0x0a, 0xfe,\n+    0xec, 0x25, 0xaf, 0xd2, 0x01, 0x16, 0xfc, 0x17, 0xe8, 0x1e, 0xcd, 0xd9,\n+    0xe2, 0xf1, 0xeb, 0x08, 0xff, 0x33, 0xe5, 0xfb, 0xeb, 0x04, 0xfe, 0xf7,\n+    0xfd, 0x1f, 0xee, 0xff, 0xed, 0xf8, 0xe0, 0xff, 0xfd, 0x2b, 0x0a, 0xf5,\n+    0x15, 0x1d, 0xf3, 0x3f, 0x16, 0xf6, 0xf2, 0xee, 0xf4, 0xef, 0xf0, 0x56,\n+    0x0a, 0x1a, 0xbc, 0xfc, 0x2f, 0xfb, 0xf0, 0x56, 0x1e, 0x0e, 0xc6, 0xe8,\n+    0x06, 0x0b, 0x11, 0x62, 0x3e, 0xf9, 0xb8, 0xc9, 0xed, 0xeb, 0x02, 0x63,\n+    0x2c, 0xfd, 0xc5, 0xe9, 0x00, 0x17, 0x0f, 0x37, 0xfe, 0x20, 0xcc, 0xe0,\n+    0xe0, 0x0e, 0xe6, 0x20, 0x0a, 0xfd, 0xdf, 0xee, 0x0b, 0x02, 0xee, 0x1f,\n+    0xfb, 0x06, 0xd2, 0xed, 0xfe, 0xeb, 0xfc, 0x12, 0xfd, 0x14, 0x00, 0xd8,\n+    0x08, 0xf6, 0xec, 0x17, 0xf9, 0x10, 0x00, 0xd9, 0x18, 0xf1, 0xee, 0x0f,\n+    0xf4, 0x03, 0xee, 0xeb, 0xf0, 0xef, 0xf2, 0x06, 0x04, 0x00, 0xf4, 0x0f,\n+    0x09, 0x06, 0xf7, 0x0b, 0xfd, 0x01, 0x03, 0x03, 0xf4, 0xf6, 0xdd, 0x14,\n+    0x1c, 0xef, 0xf1, 0xdd, 0xf7, 0x13, 0xd9, 0x15, 0xef, 0x02, 0xd2, 0xe7,\n+    0x05, 0x05, 0xe2, 0x09, 0xf2, 0x11, 0xf5, 0xba, 0xf0, 0x04, 0xe0, 0x01,\n+    0x06, 0x10, 0xe6, 0xef, 0xfc, 0x12, 0xf9, 0xf4, 0x1b, 0x2f, 0xe3, 0x0f,\n+    0xd7, 0xf6, 0x0b, 0x11, 0xf7, 0x0c, 0x00, 0x06, 0x18, 0xef, 0x06, 0x03,\n+    0x0a, 0x09, 0xf6, 0x1a, 0x0d, 0xed, 0xfe, 0x2c, 0x43, 0xf4, 0xe5, 0xde,\n+    0xf5, 0x02, 0x25, 0x5a, 0x49, 0xd4, 0xe6, 0x24, 0x1e, 0xf7, 0x0e, 0x5c,\n+    0x5d, 0xf0, 0xf9, 0xe4, 0x1c, 0xeb, 0x28, 0x7f, 0x5b, 0xec, 0xfa, 0xdb,\n+    0x0c, 0xf5, 0x20, 0x49, 0x51, 0xe1, 0xed, 0xe6, 0x0e, 0x26, 0x28, 0x33,\n+    0x35, 0x05, 0xe1, 0xe4, 0x1f, 0xfc, 0xf9, 0x39, 0x18, 0x04, 0xed, 0xed,\n+    0x01, 0xe7, 0xe6, 0x08, 0x09, 0x03, 0xe7, 0xf9, 0x0e, 0x06, 0xec, 0x08,\n+    0x12, 0x1a, 0xda, 0xef, 0xdf, 0xf9, 0xe2, 0x1e, 0x1c, 0x00, 0x12, 0xd7,\n+    0x01, 0xf7, 0x21, 0x17, 0x13, 0x19, 0xde, 0xe0, 0xec, 0x16, 0x01, 0x1b,\n+    0x06, 0x0c, 0xf0, 0xe8, 0x18, 0x03, 0x06, 0x0e, 0x09, 0xfa, 0x03, 0xf3,\n+    0xdd, 0x01, 0xfb, 0x0a, 0x2a, 0xf4, 0xf6, 0xda, 0xe9, 0xfe, 0xe9, 0x12,\n+    0x19, 0xe9, 0x05, 0xdf, 0x00, 0xeb, 0xf2, 0x10, 0x0c, 0xe1, 0xcd, 0xcb,\n+    0xf2, 0x1f, 0xd9, 0x0c, 0xfa, 0xfb, 0xe8, 0xde, 0x00, 0xfc, 0xe5, 0x00,\n+    0x11, 0x02, 0xe6, 0x17, 0x14, 0x00, 0xf2, 0xfd, 0x00, 0xe1, 0x10, 0x24,\n+    0x12, 0xec, 0xed, 0x1e, 0x09, 0x18, 0x03, 0x0c, 0x04, 0xf4, 0x15, 0x0f,\n+    0x10, 0x18, 0xd6, 0x29, 0x10, 0x04, 0x1c, 0xef, 0x0f, 0x0c, 0xc7, 0x04,\n+    0xfe, 0xeb, 0xff, 0xf5, 0xe3, 0x15, 0xfe, 0xcb, 0x10, 0xff, 0x12, 0xfb,\n+    0xe4, 0xeb, 0xf9, 0x00, 0x02, 0xf1, 0x14, 0x13, 0x01, 0x02, 0xf9, 0x01,\n+    0x06, 0x0c, 0xf5, 0x0a, 0x1e, 0x01, 0x19, 0x0e, 0x05, 0xf5, 0x0a, 0xff,\n+    0xff, 0xf2, 0xfb, 0xdb, 0xf8, 0x06, 0x17, 0xf2, 0xf7, 0x0d, 0x0e, 0xf4,\n+    0xfa, 0xf7, 0x14, 0xdb, 0xe0, 0xfd, 0x08, 0x16, 0xf7, 0x16, 0xfc, 0x09,\n+    0x27, 0x07, 0x09, 0xfb, 0x0a, 0xfc, 0x0c, 0xe4, 0xdb, 0xee, 0xff, 0x10,\n+    0xf3, 0x09, 0xfa, 0xf4, 0x23, 0xf3, 0xf4, 0x19, 0xff, 0xfa, 0xff, 0x19,\n+    0x0f, 0x11, 0xed, 0xec, 0xf8, 0x0f, 0x10, 0xf3, 0xff, 0x0b, 0xf7, 0x06,\n+    0x0b, 0x0e, 0x07, 0xe4, 0x18, 0x0a, 0x08, 0x0e, 0x02, 0x0a, 0x05, 0x19,\n+    0x02, 0xf3, 0xfe, 0xfe, 0x0b, 0x0f, 0xfc, 0xfa, 0x05, 0xf9, 0xe2, 0xf9,\n+    0x1b, 0xf7, 0x0f, 0x07, 0xfc, 0x12, 0xfe, 0x01, 0xfd, 0xf0, 0x04, 0xf4,\n+    0xfd, 0x07, 0xf2, 0x04, 0x04, 0x07, 0xef, 0x0c, 0xed, 0x0e, 0xf6, 0xef,\n+    0x08, 0x07, 0x04, 0xe9, 0xf3, 0x20, 0xda, 0x15, 0xf8, 0xff, 0xec, 0xe0,\n+    0xf6, 0xff, 0xe9, 0x08, 0x01, 0x10, 0xf0, 0xfc, 0xe9, 0x08, 0xe8, 0xf5,\n+    0xf8, 0xe5, 0x17, 0xe6, 0x03, 0xfc, 0x09, 0xf5, 0xdd, 0xf2, 0xff, 0x05,\n+    0xf6, 0xf8, 0xf5, 0x07, 0xfc, 0xf1, 0x04, 0xf3, 0x13, 0xe1, 0x0f, 0xf2,\n+    0x0a, 0xf9, 0xfd, 0x1c, 0xe0, 0x11, 0x1b, 0xe6, 0xef, 0x05, 0x05, 0x0c,\n+    0x23, 0x10, 0x09, 0xfe, 0xf7, 0x1a, 0xf1, 0xfc, 0x11, 0x1d, 0xff, 0x03,\n+    0x03, 0xe6, 0x07, 0x11, 0x0c, 0x0d, 0x16, 0x05, 0x05, 0x25, 0xf3, 0x10,\n+    0x10, 0x06, 0x09, 0xe8, 0x1a, 0xf0, 0xee, 0x09, 0xff, 0x24, 0xf7, 0xfb,\n+    0xe6, 0x06, 0xfa, 0x08, 0x03, 0x00, 0xf2, 0x04, 0xf0, 0xeb, 0x14, 0x1c,\n+    0x03, 0x21, 0x14, 0x1d, 0xfe, 0x03, 0xf6, 0x02, 0x09, 0xff, 0x00, 0x13,\n+    0xef, 0x10, 0x1e, 0x0b, 0x1d, 0x1c, 0xf1, 0xf6, 0xe7, 0xfd, 0x14, 0x01,\n+    0xff, 0x13, 0xf7, 0xfc, 0x00, 0x21, 0xe3, 0xeb, 0x07, 0x0e, 0x09, 0xf1,\n+    0xf8, 0xfd, 0x03, 0xee, 0x19, 0xfd, 0xff, 0xfb, 0xff, 0xea, 0xfb, 0x07,\n+    0xf0, 0x0a, 0x04, 0x04, 0x0b, 0x12, 0xfe, 0x0b, 0xe0, 0xff, 0xf6, 0xe5,\n+    0xfc, 0x11, 0xed, 0xfd, 0x15, 0x03, 0xdd, 0xdb, 0x04, 0xfe, 0xff, 0x0e,\n+    0xff, 0xfa, 0xfb, 0xe5, 0xef, 0xf6, 0xfe, 0x22, 0x0f, 0xe8, 0xfe, 0xf4,\n+    0xfd, 0xd9, 0x03, 0x0a, 0xdf, 0xcf, 0xf1, 0x14, 0x05, 0xfd, 0xfb, 0xf3,\n+    0xfb, 0xfb, 0x0f, 0xf8, 0x05, 0x09, 0x03, 0xf7, 0x05, 0x05, 0x13, 0xfb,\n+    0xeb, 0x23, 0xe7, 0x18, 0xfb, 0x00, 0xfe, 0xdd, 0xe9, 0xea, 0xd3, 0xe8,\n+    0x1a, 0xef, 0x01, 0xf1, 0x09, 0x1d, 0xd8, 0xfc, 0xda, 0x19, 0x03, 0xec,\n+    0xe5, 0xf3, 0xed, 0x0a, 0xf4, 0x13, 0x0b, 0xf7, 0x0c, 0x00, 0xf9, 0xea,\n+    0xe3, 0xfe, 0xff, 0x0d, 0x0a, 0x1b, 0xd7, 0x17, 0xeb, 0xe9, 0x00, 0x0e,\n+    0xee, 0x24, 0xef, 0x09, 0x07, 0xf0, 0xf5, 0x07, 0xf5, 0xf5, 0x10, 0x17,\n+    0x06, 0xf7, 0xfc, 0x02, 0xfb, 0xf9, 0xe7, 0x0a, 0x26, 0xf3, 0x01, 0x01,\n+    0x09, 0x0b, 0x02, 0x27, 0xf8, 0xee, 0xfd, 0x1c, 0xf8, 0xf2, 0x0f, 0xfc,\n+    0x0d, 0xe0, 0xea, 0x02, 0x0b, 0x00, 0xe0, 0x08, 0xfe, 0x10, 0x04, 0xfe,\n+    0xeb, 0x13, 0x01, 0x0c, 0x0e, 0xed, 0x09, 0x01, 0x0c, 0xe3, 0x10, 0xdf,\n+    0xd1, 0x14, 0xf3, 0xef, 0x09, 0xf0, 0xee, 0xe5, 0x11, 0xf4, 0xf6, 0x00,\n+    0xe8, 0x20, 0x0a, 0xfc, 0xea, 0xf7, 0x02, 0x16, 0xe7, 0xf3, 0x0d, 0xe4,\n+    0x04, 0xe6, 0xef, 0xf8, 0x0f, 0x23, 0x02, 0xe0, 0x01, 0x01, 0x01, 0x05,\n+    0xf5, 0x0d, 0xf5, 0xf5, 0xe1, 0xff, 0x04, 0x00, 0xf4, 0x0d, 0xee, 0xf1,\n+    0xef, 0xf7, 0x0b, 0xff, 0x1b, 0xec, 0x05, 0xe7, 0xf3, 0x13, 0x12, 0xf2,\n+    0xf3, 0xfc, 0xea, 0x06, 0xfe, 0x13, 0x12, 0xdb, 0x11, 0xe2, 0xfc, 0x0d,\n+    0x1c, 0xe8, 0x1d, 0xfc, 0xf2, 0xe2, 0x13, 0x1d, 0xda, 0xf6, 0x1c, 0x18,\n+    0x1e, 0xf4, 0xfa, 0x03, 0xdc, 0x0f, 0xff, 0xff, 0x18, 0x0b, 0xed, 0xf1,\n+    0xf8, 0x02, 0xf4, 0x10, 0xf9, 0xeb, 0x0b, 0x0e, 0x0f, 0x01, 0x02, 0x1b,\n+    0x06, 0x10, 0x00, 0xe7, 0x23, 0x0d, 0xf6, 0x11, 0x08, 0xf5, 0x0f, 0x05,\n+    0x13, 0xf7, 0x01, 0x01, 0x0c, 0xf6, 0xf9, 0xf0, 0x29, 0x01, 0xe9, 0x11,\n+    0x02, 0xfa, 0xeb, 0x16, 0x0e, 0x10, 0x09, 0x0e, 0x1c, 0x0a, 0xe3, 0xd3,\n+    0x01, 0xe3, 0x00, 0x06, 0xe2, 0xe9, 0x19, 0xef, 0x12, 0xf3, 0xfc, 0x02,\n+    0x0b, 0x0c, 0x0d, 0xed, 0xfd, 0xf6, 0xf9, 0xe9, 0xf2, 0x28, 0xfe, 0x03,\n+    0xec, 0x03, 0x00, 0xf8, 0xde, 0x0d, 0x25, 0x07, 0x1a, 0xe7, 0xfd, 0x29,\n+    0xd8, 0xf7, 0xfb, 0xde, 0x0c, 0x08, 0x06, 0x22, 0xee, 0x1d, 0x05, 0x07,\n+    0xf0, 0xfb, 0xfe, 0x07, 0xf1, 0x04, 0xe9, 0x01, 0xfc, 0xf1, 0x00, 0xeb,\n+    0xe3, 0x08, 0xec, 0xfe, 0x04, 0xeb, 0xfc, 0x01, 0xf6, 0x0e, 0xdf, 0xf8,\n+    0x12, 0xe3, 0x16, 0xdc, 0x21, 0x0a, 0xe6, 0x06, 0xe5, 0x10, 0x07, 0xf7,\n+    0x1e, 0xde, 0xe3, 0x07, 0x16, 0xed, 0x23, 0xf2, 0x12, 0x0d, 0xe9, 0xf9,\n+    0xe8, 0xfe, 0x0e, 0x02, 0x18, 0x0a, 0xea, 0xec, 0xfb, 0xfe, 0x0c, 0x1b,\n+    0x19, 0x20, 0xfa, 0x07, 0xe5, 0x0c, 0x04, 0x27, 0xdb, 0xe6, 0xfe, 0x0d,\n+    0x0a, 0x0a, 0xfe, 0x39, 0xdd, 0xde, 0x05, 0xec, 0x09, 0x05, 0x0a, 0x2c,\n+    0xf4, 0x02, 0x1f, 0xd3, 0x24, 0xee, 0x0f, 0x3c, 0xf5, 0xfd, 0xf8, 0xf8,\n+    0x12, 0xf5, 0xf3, 0x19, 0xf9, 0xda, 0xf6, 0x0a, 0x0a, 0xf4, 0x09, 0x0f,\n+    0xfc, 0x00, 0x01, 0x01, 0xf3, 0xf8, 0x05, 0xf3, 0x0c, 0x19, 0x0e, 0xfd,\n+    0xfa, 0xe1, 0xfc, 0x0c, 0x03, 0xfb, 0x1b, 0x06, 0xcc, 0xe4, 0x08, 0xf9,\n+    0x10, 0xe9, 0x06, 0x00, 0x17, 0xe8, 0x0d, 0x12, 0xca, 0xf5, 0x23, 0xe4,\n+    0x21, 0xf6, 0x19, 0x33, 0xdd, 0xfa, 0x0c, 0x01, 0x14, 0x07, 0x00, 0x34,\n+    0xda, 0x05, 0x07, 0x01, 0x07, 0xe4, 0x06, 0x24, 0x02, 0xff, 0xf0, 0x09,\n+    0xfc, 0xf4, 0x03, 0x06, 0xee, 0x08, 0xe2, 0x1d, 0xfa, 0x0c, 0xfc, 0x02,\n+    0x03, 0xe5, 0xf0, 0xe2, 0x0a, 0x18, 0x12, 0x0c, 0x1e, 0x20, 0xed, 0x20,\n+    0xe4, 0x01, 0x2a, 0x09, 0x0d, 0x0e, 0xd0, 0xf4, 0xdd, 0xfd, 0x2b, 0xf2,\n+    0x08, 0x0c, 0xf8, 0xf7, 0xfc, 0xf9, 0x15, 0xef, 0x19, 0x1c, 0x01, 0xff,\n+    0xe2, 0x01, 0xf3, 0x30, 0x0e, 0xfb, 0x15, 0xe8, 0x1c, 0x00, 0xfa, 0x16,\n+    0xef, 0xea, 0xfb, 0x05, 0xf0, 0x0e, 0x02, 0x13, 0xf4, 0x01, 0x03, 0xe5,\n+    0x29, 0x07, 0x09, 0x24, 0xf9, 0xe3, 0xf8, 0xde, 0x2d, 0xf4, 0xf5, 0x40,\n+    0xed, 0xdf, 0x07, 0xef, 0x0f, 0x0a, 0x0b, 0x32, 0x0d, 0xe8, 0x00, 0xe6,\n+    0xf6, 0xfc, 0xfd, 0x19, 0x11, 0x09, 0xf3, 0x03, 0xea, 0xf1, 0xfb, 0x02,\n+    0xfd, 0x06, 0xff, 0xfe, 0x09, 0xec, 0x06, 0x0c, 0x15, 0xf9, 0x06, 0xd7,\n+    0xe3, 0xf7, 0xed, 0x01, 0x03, 0xfd, 0x14, 0x01, 0x0e, 0xe0, 0x37, 0x0d,\n+    0xd2, 0x18, 0x2f, 0xea, 0x12, 0x0d, 0x05, 0x3a, 0xd5, 0x07, 0x1e, 0xf2,\n+    0x21, 0x11, 0xf9, 0x36, 0xd3, 0xf5, 0x12, 0xf6, 0xfb, 0xf6, 0x06, 0x0f,\n+    0xde, 0xf9, 0x06, 0x09, 0xdf, 0xff, 0x0b, 0xf3, 0xf5, 0x01, 0xf1, 0xea,\n+    0xf2, 0x02, 0x12, 0xfc, 0x0e, 0xee, 0xf8, 0xeb, 0x00, 0xef, 0x21, 0x0f,\n+    0x09, 0xef, 0xeb, 0x1e, 0xef, 0xf2, 0x26, 0xf9, 0x17, 0xf1, 0xf1, 0xf0,\n+    0x0c, 0x10, 0x1d, 0xff, 0x1d, 0x06, 0x03, 0xf6, 0xfb, 0x14, 0x1b, 0x03,\n+    0x22, 0xfd, 0xec, 0x03, 0xfa, 0xf8, 0x01, 0x2b, 0x1e, 0x1b, 0x09, 0x09,\n+    0x07, 0xff, 0xf0, 0x20, 0xee, 0x14, 0xfb, 0xf6, 0xf8, 0x11, 0xd9, 0x29,\n+    0xf4, 0xfa, 0x07, 0xef, 0x20, 0xf9, 0xf2, 0x30, 0xee, 0xf0, 0xf3, 0xd6,\n+    0x0d, 0xfe, 0x03, 0x36, 0xf5, 0xd7, 0x01, 0xe6, 0x04, 0xf0, 0x05, 0x1f,\n+    0x0f, 0xdd, 0xff, 0xf8, 0x1f, 0xf2, 0x04, 0x37, 0xfa, 0x00, 0xfd, 0xf8,\n+    0x10, 0xe1, 0xfb, 0x0d, 0xed, 0xf6, 0xe2, 0xfe, 0x08, 0xfe, 0x07, 0x08,\n+    0x08, 0x11, 0x0a, 0xf0, 0xf8, 0xf5, 0x04, 0xea, 0x08, 0x12, 0x06, 0x0d,\n+    0x0f, 0x10, 0x40, 0x28, 0xc0, 0xfb, 0x3f, 0x08, 0x1d, 0x09, 0x1b, 0x3d,\n+    0xee, 0xf4, 0x29, 0x13, 0x20, 0xfc, 0x11, 0x4c, 0xdb, 0x02, 0x15, 0x05,\n+    0xec, 0xeb, 0x0a, 0x22, 0xe7, 0x00, 0x02, 0x01, 0xd4, 0xea, 0x0a, 0xf3,\n+    0xe3, 0xf8, 0xf5, 0xfa, 0x01, 0x0d, 0x19, 0x06, 0x24, 0x13, 0x02, 0xf5,\n+    0xf1, 0xf1, 0x1b, 0x0f, 0x19, 0x04, 0xe3, 0xf9, 0xe7, 0x02, 0x29, 0xfc,\n+    0x29, 0xec, 0xe9, 0x04, 0xdc, 0x22, 0x1d, 0xfd, 0x1f, 0x01, 0xec, 0xe8,\n+    0xf5, 0x14, 0x1b, 0x19, 0x06, 0x0e, 0x02, 0x0d, 0xf9, 0x06, 0xfc, 0x15,\n+    0x07, 0xfa, 0x0c, 0xe1, 0x18, 0x1a, 0xe8, 0x1b, 0xe9, 0xef, 0x0a, 0x18,\n+    0xfc, 0x05, 0xf9, 0x14, 0xdc, 0x04, 0x01, 0xff, 0x07, 0xfd, 0xf0, 0x2c,\n+    0xf2, 0xec, 0x0e, 0xe7, 0x1a, 0x05, 0xe8, 0x35, 0x13, 0x09, 0xf9, 0x07,\n+    0xfe, 0xfa, 0x0d, 0x40, 0x0c, 0xea, 0xf4, 0x04, 0x01, 0x11, 0xfc, 0x23,\n+    0xeb, 0xf4, 0xe9, 0x04, 0xeb, 0xe7, 0x07, 0x09, 0xfb, 0xf1, 0xf6, 0xfd,\n+    0x02, 0xfa, 0x02, 0xff, 0x00, 0xff, 0xf1, 0xf1, 0x1a, 0xe9, 0x10, 0xe3,\n+    0x0b, 0x0c, 0x08, 0x04, 0x1b, 0x0a, 0x2b, 0x10, 0xe1, 0x01, 0x1f, 0x06,\n+    0x04, 0xec, 0x19, 0x49, 0xee, 0xf8, 0x22, 0x0c, 0x20, 0x02, 0x07, 0x31,\n+    0xe7, 0xff, 0x0f, 0xf0, 0xfd, 0xea, 0x13, 0x26, 0xce, 0xfa, 0xff, 0xee,\n+    0xe9, 0xfe, 0x15, 0x08, 0x04, 0x05, 0x0d, 0xfa, 0xdd, 0xf8, 0x07, 0x0b,\n+    0x33, 0xef, 0xec, 0xf9, 0xd9, 0xe6, 0x1d, 0x10, 0x41, 0xf6, 0xdf, 0x11,\n+    0xe3, 0x14, 0x1d, 0xfb, 0x2b, 0x15, 0xdc, 0x09, 0xf6, 0x05, 0x16, 0x00,\n+    0x1c, 0x27, 0xe4, 0xfc, 0xf7, 0x16, 0x08, 0x08, 0x2f, 0xdd, 0xf8, 0xfa,\n+    0xe9, 0x0e, 0x0b, 0x0b, 0x02, 0x12, 0x02, 0xfd, 0x19, 0x03, 0xeb, 0x11,\n+    0xf4, 0x09, 0x09, 0x15, 0x12, 0x0d, 0xef, 0x1c, 0xe4, 0xfe, 0x17, 0x0c,\n+    0x09, 0x04, 0xea, 0x2f, 0xf2, 0x1e, 0x02, 0xfb, 0xfe, 0xe3, 0x00, 0x2e,\n+    0x04, 0xf9, 0x0c, 0x05, 0x27, 0x0c, 0x07, 0x2d, 0xf7, 0x0b, 0xfb, 0xf9,\n+    0x1c, 0xdf, 0x11, 0x36, 0x05, 0xf2, 0x02, 0xf8, 0x0b, 0x07, 0x05, 0xfb,\n+    0xfc, 0x0e, 0x13, 0xfa, 0xfb, 0x09, 0xf5, 0xfd, 0x06, 0x15, 0xf9, 0x03,\n+    0x18, 0xfd, 0x1a, 0x0a, 0x03, 0xe2, 0xfb, 0x00, 0x1e, 0xfe, 0x4f, 0x27,\n+    0xe1, 0xf7, 0x31, 0xf0, 0x1b, 0xec, 0x07, 0x5f, 0xe2, 0xf8, 0x40, 0x05,\n+    0x17, 0x24, 0x0c, 0x3c, 0xf3, 0x10, 0x13, 0xf8, 0x0b, 0xf3, 0xf9, 0x36,\n+    0xe1, 0xf3, 0xf4, 0xe8, 0xef, 0xf8, 0xfc, 0xeb, 0xe3, 0xfb, 0xf0, 0xee,\n+    0xdb, 0x06, 0x0c, 0x11, 0x1e, 0x10, 0xe2, 0xe9, 0xeb, 0x0d, 0x34, 0x0f,\n+    0x43, 0xd9, 0xef, 0x08, 0xec, 0x05, 0x1d, 0x02, 0x33, 0xef, 0xf4, 0xf7,\n+    0xe6, 0xf9, 0x22, 0x07, 0x04, 0x06, 0xe9, 0x02, 0xf0, 0xfc, 0x24, 0x20,\n+    0x24, 0x17, 0xe6, 0x0f, 0x05, 0xf6, 0xfc, 0x1f, 0xf2, 0x01, 0x0d, 0xe7,\n+    0xff, 0x1d, 0xf0, 0xfa, 0xd0, 0x00, 0xff, 0x0e, 0x23, 0xf9, 0xf3, 0x11,\n+    0xde, 0x0d, 0x05, 0x04, 0x0b, 0x0b, 0xfb, 0x26, 0x0d, 0x0d, 0xff, 0xe8,\n+    0x16, 0xe8, 0x0b, 0x3c, 0x18, 0xe4, 0x04, 0xff, 0xfa, 0xf3, 0xff, 0x40,\n+    0xee, 0x06, 0xfc, 0x0d, 0x00, 0xf7, 0x13, 0x3f, 0xf7, 0x13, 0x06, 0x08,\n+    0xf9, 0x13, 0xf2, 0x19, 0xfd, 0xf9, 0xf3, 0xe6, 0xfc, 0x07, 0xf6, 0xfd,\n+    0x0a, 0x22, 0x00, 0x01, 0x19, 0xff, 0xe7, 0xff, 0x08, 0xfd, 0x03, 0xfd,\n+    0x1f, 0xe7, 0x28, 0x08, 0xde, 0xf3, 0x43, 0xf6, 0x0c, 0xfe, 0x1e, 0x52,\n+    0xf2, 0x04, 0x17, 0xf2, 0x08, 0x0d, 0x04, 0x38, 0xde, 0x0c, 0x10, 0xef,\n+    0xdf, 0x0f, 0x01, 0x24, 0xde, 0xe1, 0x0d, 0xfd, 0xd4, 0xf6, 0x12, 0x0e,\n+    0xed, 0x01, 0xf0, 0xf3, 0xfd, 0xff, 0x18, 0xf3, 0x36, 0xda, 0xf6, 0xef,\n+    0xe8, 0xef, 0x37, 0x27, 0x4e, 0xf8, 0xf4, 0xff, 0xe5, 0xf3, 0x32, 0x0b,\n+    0x36, 0x08, 0xe9, 0xf6, 0xe2, 0x13, 0x21, 0xfe, 0x12, 0xed, 0xdd, 0xfb,\n+    0xf8, 0x05, 0x0f, 0x03, 0x1c, 0x04, 0xfc, 0xf2, 0x23, 0x0e, 0x03, 0xfc,\n+    0xf9, 0x18, 0xf7, 0x01, 0x1b, 0x03, 0xf5, 0xfd, 0xde, 0xf3, 0x19, 0xfc,\n+    0x11, 0x02, 0xe7, 0x13, 0xde, 0xd8, 0xf2, 0x05, 0x28, 0x02, 0x02, 0x27,\n+    0x07, 0x08, 0xff, 0x07, 0x27, 0x0e, 0x19, 0x40, 0xfb, 0x02, 0x0c, 0xf6,\n+    0x0d, 0x07, 0x0f, 0x47, 0xf8, 0x05, 0x0e, 0xfd, 0x03, 0x1e, 0x07, 0x32,\n+    0xe7, 0xf6, 0x24, 0x01, 0x01, 0x02, 0x0a, 0xff, 0xf6, 0x26, 0x15, 0xf0,\n+    0x04, 0x13, 0x03, 0xfa, 0xfe, 0xf6, 0xf1, 0x09, 0x2a, 0xe6, 0xea, 0xf6,\n+    0x17, 0x13, 0xeb, 0xff, 0x15, 0xeb, 0x23, 0x06, 0xc8, 0xf6, 0x33, 0xeb,\n+    0xf4, 0xe7, 0x12, 0x2a, 0xe3, 0xe6, 0x32, 0xfa, 0x16, 0x15, 0x17, 0x40,\n+    0xf1, 0x08, 0x1a, 0xf3, 0xf6, 0x0c, 0x0c, 0x11, 0xd0, 0x22, 0x02, 0xee,\n+    0xea, 0xf4, 0xf8, 0xf9, 0x13, 0x10, 0x17, 0xf5, 0xf1, 0x0a, 0x0e, 0xfd,\n+    0x32, 0xda, 0xf1, 0xe2, 0xdb, 0xf2, 0x34, 0x1f, 0x53, 0xfc, 0xe4, 0xf2,\n+    0xf6, 0xf2, 0x1d, 0x04, 0x4a, 0xec, 0xee, 0x06, 0xdf, 0x01, 0x1a, 0x04,\n+    0x27, 0xfc, 0xe6, 0xfd, 0xd9, 0xfd, 0x0e, 0x00, 0x0c, 0x16, 0xf3, 0x03,\n+    0xf7, 0xfc, 0x0e, 0x0f, 0x09, 0x06, 0x06, 0x04, 0x08, 0x02, 0xed, 0xf5,\n+    0xe4, 0xe6, 0x07, 0x06, 0x03, 0x18, 0xea, 0x13, 0xe2, 0xfa, 0x10, 0xf2,\n+    0x02, 0xec, 0x03, 0x3c, 0xf6, 0xf6, 0x0a, 0x10, 0x09, 0xf8, 0x15, 0x24,\n+    0xfd, 0x0d, 0x09, 0x01, 0x00, 0xff, 0x00, 0x1a, 0xf0, 0xee, 0x08, 0x03,\n+    0x1d, 0x05, 0x16, 0x46, 0xe6, 0xf8, 0x08, 0x00, 0x09, 0x09, 0xff, 0x01,\n+    0xfc, 0x20, 0xfc, 0xec, 0x05, 0x1b, 0x03, 0xf1, 0x12, 0xe4, 0xfa, 0x24,\n+    0x1c, 0xf5, 0xf2, 0x05, 0x11, 0xe7, 0xfa, 0x02, 0x20, 0xea, 0x31, 0x10,\n+    0xcf, 0xd8, 0x33, 0xee, 0xff, 0x09, 0x20, 0x3f, 0xe2, 0x0a, 0x29, 0xee,\n+    0x3a, 0xf2, 0x1e, 0x39, 0x02, 0x1e, 0xfe, 0xf2, 0xef, 0xe2, 0x0d, 0x0f,\n+    0xf1, 0x19, 0x02, 0xe7, 0xec, 0xff, 0xfe, 0xe4, 0xfe, 0xfb, 0x02, 0xf6,\n+    0xf1, 0xf4, 0x07, 0x1a, 0x2a, 0xf9, 0x06, 0xf9, 0xda, 0xf4, 0x22, 0x02,\n+    0x4f, 0x0a, 0xf3, 0xfc, 0xf3, 0xf6, 0x25, 0x0a, 0x28, 0x01, 0xf7, 0x09,\n+    0xe6, 0x05, 0x28, 0xf7, 0x1e, 0xf2, 0xee, 0x13, 0xee, 0x05, 0x0f, 0x0a,\n+    0x09, 0xe8, 0xe8, 0x0e, 0x05, 0x12, 0x0f, 0x15, 0x02, 0xec, 0xf8, 0x02,\n+    0xf7, 0x05, 0xf8, 0xff, 0xdc, 0x00, 0x01, 0x00, 0x12, 0x17, 0xec, 0x19,\n+    0xfa, 0x09, 0xfa, 0xf3, 0x1d, 0x0b, 0x07, 0x25, 0xea, 0x0c, 0xf5, 0xfa,\n+    0x04, 0xf7, 0xfe, 0x33, 0xfe, 0x14, 0xef, 0x04, 0xf0, 0x00, 0x00, 0x3a,\n+    0xea, 0xfa, 0x10, 0x01, 0xe4, 0x00, 0xff, 0x23, 0xe9, 0x26, 0x15, 0x10,\n+    0x04, 0x14, 0x0d, 0x08, 0xf8, 0xfd, 0x10, 0xfb, 0x00, 0x21, 0x06, 0xfa,\n+    0x0f, 0x08, 0xf1, 0x09, 0x28, 0xf0, 0xd8, 0x0d, 0x08, 0x09, 0x02, 0xfb,\n+    0x12, 0x03, 0x0e, 0xfb, 0xce, 0xf0, 0x39, 0xe5, 0x09, 0xf6, 0x1f, 0x35,\n+    0xdd, 0x1c, 0x25, 0xef, 0x17, 0x0c, 0xf6, 0x3e, 0xf0, 0x21, 0x08, 0xff,\n+    0xd7, 0xfc, 0xfd, 0x1f, 0xe5, 0x18, 0x12, 0xe9, 0xf5, 0xe9, 0x12, 0xf6,\n+    0x02, 0x13, 0xf4, 0x0a, 0xfd, 0x03, 0x09, 0x08, 0x2f, 0x07, 0xee, 0xfd,\n+    0xd7, 0x00, 0x2b, 0x29, 0x3b, 0xdb, 0xde, 0xf1, 0xe1, 0xf7, 0x47, 0x12,\n+    0x35, 0x0c, 0xe4, 0x09, 0xef, 0x17, 0x2b, 0xea, 0x2d, 0xf8, 0xe8, 0x18,\n+    0xef, 0x03, 0x11, 0x0a, 0x10, 0xff, 0xe8, 0x07, 0x0c, 0x07, 0x03, 0x18,\n+    0x05, 0x08, 0xf8, 0xf8, 0x06, 0x18, 0xe9, 0xf9, 0xe0, 0x0f, 0x0d, 0x18,\n+    0x04, 0x01, 0xf0, 0x1c, 0xf6, 0x14, 0xfd, 0x12, 0x0c, 0x0c, 0x02, 0x34,\n+    0xf6, 0xe6, 0xfd, 0xf9, 0xf9, 0xfd, 0x00, 0x2a, 0xfc, 0xf9, 0xff, 0x0a,\n+    0xfe, 0x1b, 0xf5, 0x34, 0xdc, 0xf9, 0x15, 0x13, 0xe7, 0x1b, 0xf7, 0x25,\n+    0xfd, 0x09, 0x08, 0x0a, 0xf0, 0x17, 0x0f, 0x04, 0xf4, 0xe9, 0x06, 0x07,\n+    0xf5, 0x02, 0xfc, 0xf5, 0x09, 0xee, 0xf1, 0x07, 0x38, 0x03, 0x05, 0x0f,\n+    0x16, 0x0f, 0xed, 0xff, 0x21, 0xf8, 0x34, 0x07, 0xd1, 0xf9, 0x27, 0x00,\n+    0x0c, 0x21, 0x18, 0x42, 0xe6, 0x02, 0x1a, 0xf1, 0x2f, 0xf1, 0x0e, 0x3b,\n+    0xee, 0xf8, 0x08, 0xea, 0xfe, 0xf9, 0x03, 0x18, 0xf5, 0xf8, 0x0d, 0xeb,\n+    0x01, 0x10, 0x09, 0x02, 0x15, 0xfb, 0xf1, 0x0b, 0xf2, 0x06, 0x08, 0x09,\n+    0x2f, 0x19, 0x02, 0xfe, 0xe4, 0x06, 0x1f, 0x17, 0x49, 0xf2, 0xe2, 0x02,\n+    0xef, 0x04, 0x26, 0x16, 0x3f, 0x08, 0xf1, 0x0a, 0xfd, 0xf9, 0x28, 0x01,\n+    0x15, 0x0b, 0xf9, 0x10, 0xdc, 0x02, 0x20, 0xf7, 0x16, 0xe6, 0x09, 0x03,\n+    0xf1, 0xf5, 0x12, 0x1c, 0xfb, 0x2a, 0x08, 0xfa, 0x0a, 0x16, 0xf6, 0x15,\n+    0xf0, 0x06, 0x11, 0xfd, 0x0e, 0xf9, 0xf6, 0x12, 0xed, 0xf3, 0xfd, 0x1f,\n+    0x0b, 0xfa, 0x08, 0x30, 0xf8, 0xff, 0x0b, 0xeb, 0x10, 0xff, 0x07, 0x22,\n+    0x0d, 0x07, 0x09, 0x03, 0xf6, 0xf8, 0xfc, 0x26, 0xf8, 0xee, 0x11, 0x02,\n+    0x03, 0x0a, 0xef, 0x38, 0xfe, 0x13, 0x1b, 0x09, 0xfe, 0x06, 0x05, 0xf3,\n+    0x04, 0xdf, 0xfc, 0x00, 0xe7, 0x15, 0xec, 0xf1, 0xf8, 0xfc, 0xed, 0x05,\n+    0x0e, 0xf3, 0x15, 0x09, 0x01, 0x0d, 0xfd, 0x00, 0x24, 0xe2, 0x31, 0x13,\n+    0xd5, 0x1b, 0x2b, 0xe8, 0x03, 0x08, 0x1d, 0x33, 0xdc, 0xfd, 0x24, 0xe4,\n+    0x20, 0xfa, 0x07, 0x33, 0x01, 0x12, 0x06, 0xf5, 0xef, 0xf7, 0xfa, 0x13,\n+    0x01, 0xec, 0xee, 0xe0, 0xfd, 0x0d, 0xff, 0x09, 0xf6, 0x00, 0xed, 0x07,\n+    0xea, 0x0e, 0xff, 0x0e, 0x26, 0xfc, 0xf0, 0xe7, 0xe7, 0xfe, 0x30, 0xff,\n+    0x24, 0x04, 0x06, 0xf4, 0xf5, 0xf8, 0x23, 0x0e, 0x3d, 0xf2, 0xfd, 0x04,\n+    0xe8, 0xfb, 0x23, 0xfe, 0x33, 0xe1, 0x01, 0xfd, 0xdc, 0xfb, 0x0e, 0xfa,\n+    0x22, 0xfb, 0x11, 0xfa, 0xff, 0x08, 0x21, 0x30, 0x13, 0x03, 0xf2, 0x03,\n+    0xf8, 0x0f, 0xec, 0x0d, 0xef, 0x0f, 0x10, 0x10, 0x0f, 0xf6, 0xf9, 0x1e,\n+    0xf7, 0xe5, 0x08, 0xfa, 0x09, 0xff, 0x00, 0x15, 0x02, 0x00, 0x08, 0xfe,\n+    0xfb, 0x0e, 0x15, 0x28, 0xfa, 0xfb, 0x13, 0x06, 0xfb, 0x05, 0xf6, 0x11,\n+    0xf6, 0x0b, 0x06, 0x15, 0xe1, 0x00, 0xe9, 0x0f, 0xe1, 0x1d, 0x18, 0xfd,\n+    0x0b, 0x0f, 0xff, 0xf2, 0xf5, 0xfd, 0x14, 0xff, 0xf4, 0xfe, 0xe2, 0xf8,\n+    0x14, 0x0b, 0xeb, 0x07, 0x35, 0xe2, 0xeb, 0x0b, 0x04, 0x22, 0xfe, 0x0e,\n+    0x1d, 0xf2, 0x24, 0x11, 0xcc, 0xec, 0x25, 0xf7, 0xff, 0xf9, 0x06, 0x29,\n+    0xe4, 0x07, 0x1c, 0xdb, 0xf8, 0x1d, 0xfa, 0x44, 0xf2, 0x01, 0x0f, 0xe6,\n+    0x11, 0x03, 0xee, 0x17, 0x06, 0xe0, 0x0c, 0xd8, 0xe9, 0xfd, 0x11, 0xfe,\n+    0x07, 0xdd, 0xea, 0xff, 0xde, 0xdd, 0x0a, 0x09, 0x30, 0xf2, 0x01, 0xe4,\n+    0xe0, 0xeb, 0x2d, 0x12, 0x2d, 0xeb, 0xfc, 0xf0, 0xe8, 0xf9, 0x1f, 0x08,\n+    0x3f, 0xeb, 0x0e, 0x13, 0xf9, 0x0c, 0x1c, 0x02, 0x25, 0xec, 0xf6, 0x05,\n+    0xf3, 0xf4, 0x18, 0x08, 0x12, 0xe9, 0xfb, 0xfd, 0xf9, 0x08, 0x13, 0x1c,\n+    0x08, 0xec, 0xfe, 0x02, 0xf1, 0x19, 0xf3, 0x1d, 0xf1, 0x07, 0x11, 0x12,\n+    0xfa, 0xf2, 0xf6, 0x0d, 0xff, 0x17, 0x0a, 0xfb, 0x1f, 0xf8, 0x11, 0x24,\n+    0xf6, 0xfc, 0xfe, 0x07, 0xed, 0x05, 0x1c, 0x21, 0xfe, 0xfe, 0x16, 0x0d,\n+    0x08, 0x0f, 0x09, 0x33, 0xf4, 0x1f, 0x14, 0x0c, 0xfe, 0xf5, 0xeb, 0x2a,\n+    0xee, 0xf3, 0x12, 0x19, 0xec, 0x01, 0x06, 0xf7, 0x05, 0x22, 0x0b, 0xeb,\n+    0xeb, 0x06, 0xe1, 0xf5, 0x0d, 0xee, 0xfb, 0x0a, 0x31, 0xff, 0xe3, 0xea,\n+    0x18, 0x09, 0xe3, 0x07, 0x1a, 0xf8, 0x15, 0xfc, 0xcc, 0xf2, 0x2a, 0xe5,\n+    0x01, 0xea, 0x10, 0x1f, 0xd9, 0x02, 0x13, 0xf6, 0x16, 0x01, 0x0e, 0x3c,\n+    0x02, 0x17, 0x04, 0xf1, 0xf7, 0x02, 0x07, 0x0c, 0x02, 0x1f, 0xf4, 0xe6,\n+    0xf0, 0xe9, 0x05, 0xf4, 0xfd, 0xe4, 0xf7, 0xe9, 0xfc, 0xef, 0x06, 0x02,\n+    0x26, 0xf1, 0xf1, 0xeb, 0xe9, 0xe6, 0x30, 0x1c, 0x38, 0x0f, 0x03, 0xf1,\n+    0x10, 0x04, 0x30, 0x19, 0x1f, 0xfb, 0xfc, 0x05, 0xe2, 0xfe, 0x18, 0xf2,\n+    0x1c, 0xf2, 0xf5, 0x0e, 0xf2, 0x05, 0x1d, 0x28, 0x12, 0xf0, 0xf0, 0x0f,\n+    0x0a, 0x03, 0x1a, 0x1a, 0xf3, 0x08, 0x13, 0xef, 0xf5, 0x1c, 0x06, 0x00,\n+    0xee, 0x12, 0x1d, 0x03, 0x18, 0x06, 0x0a, 0x0e, 0xf0, 0xeb, 0xfa, 0x0d,\n+    0x08, 0xff, 0x06, 0x24, 0x0f, 0x03, 0x0a, 0x0f, 0x0e, 0xff, 0x08, 0x33,\n+    0xfc, 0x00, 0x0e, 0xfb, 0xfb, 0x05, 0x07, 0x19, 0xe8, 0xe7, 0x12, 0x11,\n+    0x15, 0xf7, 0x0c, 0x1a, 0xf6, 0x28, 0x08, 0xeb, 0xf2, 0x25, 0xee, 0x01,\n+    0x03, 0xec, 0xed, 0xfa, 0xf0, 0xf2, 0xef, 0xf1, 0x02, 0x23, 0xef, 0x01,\n+    0x41, 0xfa, 0xf4, 0xf4, 0x15, 0xf5, 0xf5, 0xf9, 0x28, 0xde, 0x20, 0xf6,\n+    0xc7, 0xde, 0x21, 0xe4, 0xfe, 0xec, 0x0d, 0x2c, 0xee, 0x24, 0x10, 0xf0,\n+    0x1d, 0x12, 0x0e, 0x2b, 0x06, 0xf8, 0xfd, 0x01, 0x08, 0xef, 0xfd, 0x0f,\n+    0xeb, 0xed, 0xe1, 0xdf, 0xf1, 0xe5, 0x16, 0xe3, 0x08, 0xfc, 0xf6, 0xf6,\n+    0xd8, 0xf0, 0x23, 0xfc, 0x2b, 0xf5, 0xff, 0xe7, 0xf4, 0xe9, 0x29, 0x09,\n+    0x2b, 0x0c, 0xff, 0x08, 0x0b, 0xed, 0x29, 0x14, 0x3c, 0xf5, 0xeb, 0x18,\n+    0xf6, 0x10, 0x22, 0xf9, 0x17, 0x23, 0x02, 0x0c, 0xf6, 0xfa, 0x2f, 0xfe,\n+    0x1e, 0xeb, 0xfd, 0x03, 0xf0, 0x07, 0x1c, 0x09, 0xfa, 0xe1, 0x0d, 0x0f,\n+    0x18, 0x03, 0xfe, 0xf0, 0xec, 0x0b, 0x10, 0x02, 0x14, 0x06, 0xef, 0xf7,\n+    0xea, 0x0b, 0x05, 0xfe, 0x1f, 0x06, 0x0e, 0x07, 0x00, 0xe1, 0x01, 0x01,\n+    0x07, 0x05, 0x09, 0xf7, 0xef, 0x15, 0xf7, 0x12, 0x05, 0x03, 0x04, 0x1d,\n+    0x04, 0x10, 0x12, 0x06, 0x05, 0x00, 0x08, 0x18, 0xd6, 0xf2, 0xfa, 0x07,\n+    0xf8, 0x12, 0x07, 0xfd, 0xdd, 0x00, 0x04, 0xfb, 0xf8, 0x09, 0xf3, 0x09,\n+    0xfb, 0xf0, 0xe8, 0x09, 0x27, 0xf5, 0xf8, 0x06, 0x01, 0x02, 0x0e, 0xf6,\n+    0x1f, 0xfa, 0x29, 0xf8, 0xd6, 0x01, 0x22, 0xf8, 0x1d, 0xe3, 0x1a, 0x39,\n+    0x0a, 0x0d, 0x19, 0xf5, 0x12, 0xfb, 0x1d, 0x2a, 0x03, 0xf6, 0x0c, 0xf2,\n+    0xfd, 0xec, 0x18, 0x13, 0xfe, 0x1a, 0xe8, 0xdd, 0x01, 0xf8, 0x30, 0x01,\n+    0xf8, 0xfe, 0xe4, 0xe7, 0xff, 0xeb, 0x23, 0xfa, 0x2c, 0xf0, 0xfc, 0xe7,\n+    0x0a, 0xf8, 0x18, 0x10, 0x23, 0x01, 0xfa, 0xe8, 0xf1, 0xfa, 0x1d, 0x0e,\n+    0x17, 0xe7, 0xe4, 0xf5, 0xf9, 0x0c, 0x17, 0x0c, 0x13, 0xe8, 0xe1, 0x17,\n+    0x19, 0x05, 0x0b, 0x0f, 0x23, 0xed, 0xff, 0xfe, 0xe0, 0x14, 0x16, 0x00,\n+    0x0d, 0x1c, 0x0b, 0xf5, 0xfb, 0x18, 0xee, 0xff, 0xff, 0xf3, 0x18, 0x0c,\n+    0x05, 0xfa, 0xf6, 0xfe, 0xfe, 0xf8, 0xf8, 0x09, 0xef, 0xf8, 0x0e, 0xf0,\n+    0x00, 0xf8, 0x0c, 0xf8, 0xf6, 0x07, 0x16, 0x11, 0xf8, 0xea, 0xff, 0xff,\n+    0x01, 0x20, 0x07, 0x08, 0xfd, 0x1c, 0xfc, 0x06, 0xed, 0x0d, 0x08, 0x15,\n+    0xf0, 0x25, 0x01, 0x1b, 0x00, 0x02, 0xfe, 0x01, 0x05, 0x01, 0xfd, 0xf1,\n+    0xe5, 0x0c, 0xe4, 0xe1, 0xf0, 0xfa, 0xee, 0x0e, 0x35, 0xee, 0x15, 0xef,\n+    0x0a, 0xf9, 0x01, 0xf5, 0x1f, 0x05, 0x1f, 0x0d, 0xe1, 0xf4, 0xff, 0xf5,\n+    0x23, 0x02, 0x18, 0x30, 0xfc, 0xf0, 0x0d, 0x04, 0x0d, 0x06, 0x29, 0x1d,\n+    0xf9, 0x08, 0x06, 0xe5, 0x13, 0xfd, 0x0d, 0x26, 0xef, 0x09, 0xdc, 0xf2,\n+    0x05, 0xdf, 0x0c, 0xf6, 0xf3, 0xd9, 0xf8, 0x08, 0xef, 0xeb, 0x0f, 0xf9,\n+    0x3a, 0x03, 0xff, 0xe0, 0xf7, 0xf0, 0x15, 0x12, 0x41, 0x0b, 0xf1, 0x04,\n+    0x04, 0xe2, 0x0e, 0x0b, 0x2c, 0x03, 0xea, 0x02, 0xfb, 0xe7, 0x08, 0xe9,\n+    0x22, 0xf3, 0xf2, 0x1c, 0xfa, 0xf3, 0x11, 0x04, 0x1f, 0xf5, 0x02, 0x0f,\n+    0x1a, 0x1f, 0x24, 0x0b, 0x06, 0x1f, 0xf3, 0x06, 0x00, 0x02, 0xe8, 0xf6,\n+    0xf4, 0xe8, 0x07, 0x2e, 0xfb, 0xf8, 0x10, 0x09, 0xf0, 0x0e, 0xff, 0xfe,\n+    0x1c, 0x14, 0x17, 0x06, 0xe2, 0xf1, 0xfa, 0x01, 0x11, 0x13, 0x12, 0x29,\n+    0xf1, 0x0f, 0x1f, 0xfa, 0xfd, 0xfd, 0x02, 0x07, 0x0e, 0xfb, 0x0e, 0x04,\n+    0x01, 0x01, 0xed, 0xfe, 0xde, 0xfd, 0x08, 0xef, 0xf6, 0x0a, 0xff, 0x0f,\n+    0xe7, 0xf2, 0x0f, 0x02, 0xea, 0x10, 0xf9, 0xec, 0xfd, 0x09, 0xea, 0x1f,\n+    0x46, 0xdd, 0xe2, 0xf7, 0x08, 0xf5, 0xf7, 0xe9, 0x33, 0xfb, 0x2f, 0xf6,\n+    0xb5, 0x1d, 0x15, 0xeb, 0x11, 0xf7, 0x2a, 0x2e, 0x08, 0x1d, 0xf4, 0xfb,\n+    0x15, 0xfa, 0x22, 0x34, 0xff, 0x06, 0xf6, 0xfd, 0xfa, 0xf9, 0x03, 0xf5,\n+    0xf4, 0xf4, 0xd5, 0xea, 0x01, 0x08, 0x22, 0xf1, 0xf2, 0x06, 0xd1, 0xe5,\n+    0x0c, 0xef, 0x12, 0x03, 0x08, 0x02, 0xf7, 0x05, 0x1b, 0x07, 0x39, 0x34,\n+    0x21, 0xe2, 0xe3, 0x0b, 0x0c, 0xf6, 0x29, 0xf7, 0x24, 0x0a, 0xfc, 0xff,\n+    0x1a, 0xfd, 0x05, 0xff, 0xff, 0x0e, 0x0a, 0x1a, 0x09, 0xfb, 0x15, 0x04,\n+    0x03, 0xf7, 0xfe, 0x00, 0xfc, 0xfb, 0x11, 0xfa, 0x1d, 0x0e, 0x06, 0xed,\n+    0xfc, 0x23, 0xd8, 0xf2, 0x04, 0xe5, 0x0f, 0x16, 0x29, 0xfe, 0xf5, 0xec,\n+    0xe2, 0x0e, 0xeb, 0x09, 0x1d, 0x11, 0x05, 0x11, 0xe4, 0x29, 0x12, 0x02,\n+    0x12, 0x19, 0x0e, 0x1a, 0xee, 0xf9, 0x05, 0x09, 0xf5, 0xfd, 0x05, 0x04,\n+    0xe4, 0xf1, 0x17, 0x01, 0xf2, 0xfe, 0x0b, 0xf4, 0x0d, 0x04, 0x06, 0xfe,\n+    0xff, 0xec, 0xe9, 0x00, 0xff, 0x03, 0x03, 0xfd, 0xf1, 0x15, 0xfc, 0xf3,\n+    0xff, 0xfe, 0x09, 0xee, 0x3c, 0x01, 0xec, 0x02, 0xf0, 0xf6, 0x20, 0xeb,\n+    0x16, 0x07, 0x32, 0xf3, 0xce, 0xf0, 0x02, 0xd4, 0x11, 0xe6, 0x28, 0x0e,\n+    0xe3, 0x21, 0xee, 0xce, 0x1e, 0xd9, 0x23, 0x26, 0x06, 0xfa, 0xf9, 0xf1,\n+    0x01, 0xe6, 0x0b, 0x07, 0xdc, 0x21, 0xbc, 0xe3, 0xef, 0xf8, 0x12, 0xfc,\n+    0xe6, 0xfe, 0xf5, 0xd4, 0x15, 0x0a, 0x00, 0x13, 0xfc, 0xec, 0xf3, 0xd6,\n+    0x1a, 0xe3, 0x21, 0x36, 0x2a, 0x03, 0xe9, 0xe3, 0xff, 0x00, 0x13, 0x1c,\n+    0x0e, 0x20, 0xe5, 0xf5, 0x24, 0x0b, 0x20, 0x14, 0x13, 0xf8, 0x04, 0x1b,\n+    0x2f, 0x0a, 0x15, 0x00, 0xf4, 0x1a, 0x11, 0x0d, 0x03, 0x18, 0x0f, 0x18,\n+    0x04, 0x1f, 0xfb, 0xf2, 0x1f, 0x15, 0x03, 0xfb, 0x0b, 0x17, 0xfb, 0x0b,\n+    0x1b, 0x1f, 0xf4, 0x07, 0xf9, 0xf9, 0xf8, 0xf4, 0x14, 0x0f, 0xf6, 0xfe,\n+    0xdd, 0x0b, 0xff, 0x01, 0x18, 0x04, 0x1b, 0x0a, 0xed, 0xe7, 0xf9, 0x16,\n+    0x02, 0x01, 0x00, 0xf7, 0xf1, 0x07, 0xf0, 0x06, 0xf8, 0x0b, 0x02, 0xf3,\n+    0xff, 0x20, 0xfd, 0x01, 0x04, 0xf5, 0xd9, 0xf4, 0xf4, 0xf2, 0xe8, 0xff,\n+    0x04, 0x00, 0xf0, 0xe2, 0xfe, 0xed, 0x1b, 0xef, 0x20, 0xfa, 0xfb, 0xf4,\n+    0x02, 0x18, 0x07, 0xfb, 0xef, 0xe4, 0x08, 0x0d, 0xe1, 0x0e, 0x25, 0xc6,\n+    0xfd, 0x0c, 0x1c, 0x0b, 0xf0, 0x01, 0x1c, 0xd4, 0x11, 0xf5, 0x1b, 0x09,\n+    0xfb, 0xda, 0x13, 0xe3, 0xf9, 0x10, 0x14, 0xf0, 0xf0, 0xfd, 0x1f, 0xcf,\n+    0xf4, 0xe4, 0xfb, 0x0e, 0x0a, 0x11, 0xed, 0xdc, 0xfc, 0xe6, 0xf7, 0xfc,\n+    0x13, 0xe1, 0x0b, 0xe4, 0x04, 0x11, 0xee, 0x21, 0x14, 0xe1, 0x07, 0xe4,\n+    0xfb, 0x08, 0x03, 0x2b, 0x27, 0xf6, 0x0d, 0x02, 0x1b, 0x09, 0x09, 0xf8,\n+    0x14, 0x19, 0x0f, 0x0b, 0x01, 0x10, 0x09, 0x12, 0x03, 0xf5, 0x18, 0xf3,\n+    0xfb, 0xf5, 0x02, 0x0e, 0x0d, 0x00, 0x07, 0xfc, 0x18, 0x25, 0x0b, 0xf0,\n+    0xf9, 0xe6, 0x08, 0x01, 0x24, 0x14, 0xfa, 0xed, 0xe5, 0x1f, 0x09, 0xfe,\n+    0x08, 0xee, 0x1a, 0x1a, 0x05, 0x00, 0xff, 0x0c, 0xfe, 0xf9, 0x11, 0x11,\n+    0xea, 0xfe, 0x08, 0xf9, 0xf0, 0xe4, 0x01, 0x0d, 0xf1, 0x00, 0x0b, 0xea,\n+    0x19, 0xea, 0xf3, 0xf8, 0x08, 0x12, 0x1c, 0x1f, 0xfb, 0xef, 0xf0, 0xf2,\n+    0x14, 0xe1, 0x03, 0xfa, 0xf9, 0xda, 0xe9, 0xfc, 0xf3, 0xff, 0x12, 0x04,\n+    0xf7, 0xfc, 0x17, 0x0f, 0xfc, 0x29, 0x03, 0xe5, 0xf2, 0xee, 0x1e, 0xfa,\n+    0x04, 0xed, 0x25, 0xf4, 0xe1, 0x15, 0x10, 0x1e, 0xef, 0x1c, 0x04, 0xde,\n+    0xe5, 0x08, 0x21, 0xfd, 0xfd, 0xea, 0x03, 0xca, 0xda, 0x26, 0x00, 0x0a,\n+    0xfd, 0x05, 0xf0, 0xd4, 0xe1, 0x1a, 0xe4, 0xf5, 0x07, 0xe7, 0xfa, 0xdf,\n+    0xd4, 0x03, 0xf0, 0x10, 0x15, 0x0c, 0xf4, 0xed, 0xe3, 0xfb, 0x0f, 0x1e,\n+    0x16, 0x09, 0x00, 0xec, 0xea, 0x13, 0x16, 0x0b, 0x01, 0xfb, 0xff, 0x00,\n+    0xfb, 0x07, 0x13, 0x08, 0xf4, 0xe4, 0x12, 0x00, 0xfb, 0xfa, 0xfc, 0x08,\n+    0xeb, 0x19, 0x02, 0x1c, 0xe8, 0x26, 0xf3, 0x10, 0x09, 0x0f, 0x19, 0x02,\n+    0xfb, 0xec, 0xf7, 0xe2, 0xfb, 0xfa, 0x11, 0xf3, 0x0b, 0x08, 0xff, 0xd9,\n+    0xf8, 0x12, 0x18, 0x06, 0x07, 0x22, 0xff, 0x19, 0xf5, 0x0b, 0x0a, 0x13,\n+    0xf2, 0xfa, 0x02, 0x21, 0xeb, 0x11, 0x17, 0x17, 0xec, 0xe1, 0x0e, 0xf7,\n+    0xe8, 0xd8, 0x0e, 0x01, 0xf1, 0xed, 0xed, 0xf0, 0x09, 0xf7, 0xe7, 0xfd,\n+    0xf0, 0xf9, 0xdb, 0xee, 0xdc, 0xfb, 0xf8, 0x0a, 0xf5, 0x0b, 0xd4, 0xd7,\n+    0x08, 0x06, 0x18, 0x06, 0x0c, 0x13, 0xfd, 0x09, 0x13, 0x26, 0x12, 0xf4,\n+    0xef, 0x00, 0xf5, 0x28, 0x18, 0xfe, 0x04, 0x0e, 0x21, 0x1a, 0x0a, 0x1e,\n+    0x09, 0xf0, 0x0d, 0x0f, 0xec, 0xf3, 0x17, 0x22, 0x00, 0xec, 0x0e, 0x01,\n+    0xe9, 0x08, 0x09, 0xf2, 0xf2, 0x08, 0xf0, 0x0b, 0xd9, 0x09, 0x14, 0xf5,\n+    0xf6, 0x04, 0x19, 0xf4, 0x11, 0xe9, 0xf2, 0x0d, 0x20, 0x17, 0x0a, 0x05,\n+    0x0c, 0x04, 0x01, 0xfd, 0xf4, 0xfb, 0x1b, 0x0c, 0xf2, 0x0b, 0xff, 0xfe,\n+    0x01, 0xd8, 0xfa, 0x0e, 0xf5, 0x14, 0xf9, 0x01, 0x04, 0xf8, 0xfa, 0x02,\n+    0xe8, 0xf9, 0xf9, 0xea, 0xf1, 0x07, 0xff, 0x1e, 0x01, 0x0b, 0xf7, 0x0a,\n+    0xf7, 0x0c, 0xfd, 0xec, 0xf3, 0x05, 0xf8, 0xda, 0x0b, 0x15, 0xf6, 0xee,\n+    0xf9, 0x10, 0xfa, 0xfe, 0x08, 0xf0, 0xe6, 0xec, 0x05, 0xff, 0x15, 0x19,\n+    0x1f, 0x11, 0xfc, 0x09, 0x08, 0x01, 0x06, 0xfe, 0x04, 0x08, 0xfb, 0xfb,\n+    0x08, 0xf4, 0xf6, 0x28, 0x10, 0xf9, 0x28, 0x0b, 0xf8, 0x0d, 0x01, 0x00,\n+    0xff, 0x02, 0x05, 0x08, 0xea, 0xe9, 0xf4, 0xf6, 0x01, 0xea, 0xdf, 0x1f,\n+    0xfe, 0x0a, 0xf9, 0xf7, 0x0c, 0x1b, 0x06, 0xed, 0xf6, 0xf2, 0x03, 0x03,\n+    0xfd, 0x04, 0xf5, 0x10, 0x0a, 0x0b, 0xf4, 0xf8, 0xf1, 0xe7, 0x05, 0xfe,\n+    0xe7, 0x0b, 0xf1, 0xec, 0xf4, 0xec, 0x06, 0xee, 0xde, 0x05, 0x1b, 0xfe,\n+    0x13, 0xf3, 0xd9, 0xea, 0x04, 0x10, 0x05, 0xed, 0x15, 0x02, 0x0b, 0x10,\n+    0xfa, 0x02, 0x05, 0x0b, 0x02, 0x07, 0xfc, 0xf5, 0x15, 0x14, 0x05, 0xf7,\n+    0x0c, 0xfe, 0xf6, 0xf4, 0xfa, 0x06, 0xfc, 0x13, 0xdc, 0xe4, 0x09, 0xfa,\n+    0x02, 0x23, 0xec, 0x06, 0x11, 0x13, 0xf8, 0xfa, 0x27, 0x28, 0x0b, 0x23,\n+    0xec, 0xf1, 0x09, 0x17, 0x0f, 0x13, 0xff, 0xf2, 0xfc, 0x0a, 0xf5, 0x0d,\n+    0x03, 0x26, 0x01, 0x0f, 0xfe, 0xf1, 0xfb, 0xe6, 0xf0, 0x02, 0xf2, 0xff,\n+    0x02, 0x11, 0xff, 0xfd, 0x1c, 0x02, 0x0b, 0xf6, 0x14, 0x0c, 0x0b, 0x21,\n+    0x28, 0xf0, 0x11, 0x05, 0x06, 0xed, 0xf9, 0x0a, 0xf2, 0xef, 0xf8, 0xf1,\n+    0xfe, 0x0d, 0xf9, 0xf7, 0xea, 0x00, 0x08, 0xdb, 0x02, 0x0f, 0xfe, 0x04,\n+    0xef, 0x20, 0x16, 0x01, 0xe8, 0xed, 0xe4, 0x22, 0xf6, 0x19, 0x00, 0x04,\n+    0x01, 0x13, 0xeb, 0x0d, 0xec, 0x01, 0x08, 0x05, 0x0c, 0x0e, 0xfe, 0x02,\n+    0x12, 0xf7, 0x27, 0xf9, 0xfd, 0x18, 0xfe, 0x24, 0xf7, 0x13, 0xed, 0x1e,\n+    0x09, 0xff, 0xd8, 0xf4, 0x12, 0xf8, 0x04, 0x0c, 0x1c, 0x11, 0xfd, 0x17,\n+    0x1d, 0x01, 0x13, 0xee, 0x11, 0xf3, 0xf8, 0x06, 0xf6, 0x16, 0xfe, 0x15,\n+    0x16, 0xdc, 0x1f, 0x00, 0x25, 0xee, 0xff, 0xf7, 0xf6, 0x02, 0xdd, 0x15,\n+    0xf1, 0x14, 0x08, 0xe8, 0xe5, 0x21, 0xea, 0xf0, 0x1a, 0x07, 0xea, 0x08,\n+    0xea, 0xe4, 0x1e, 0x00, 0x13, 0x17, 0xec, 0x11, 0xd6, 0x11, 0x18, 0x17,\n+    0x04, 0x15, 0x03, 0x3a, 0xd6, 0x02, 0x07, 0x04, 0xe6, 0xe5, 0xfe, 0x0e,\n+    0xff, 0xed, 0xfc, 0xfb, 0xff, 0x1c, 0x06, 0x0a, 0xfb, 0xf9, 0xea, 0x1a,\n+    0x21, 0xf5, 0x04, 0x06, 0x0a, 0xe3, 0x16, 0xea, 0x04, 0xe2, 0xf9, 0xf9,\n+    0xe6, 0xfb, 0x0f, 0xfc, 0x06, 0xfb, 0x10, 0x07, 0x07, 0x13, 0x07, 0xfc,\n+    0x16, 0xef, 0x07, 0xdc, 0x12, 0x1f, 0x08, 0xf4, 0xe9, 0x14, 0x06, 0xf7,\n+    0xf1, 0x0c, 0x01, 0x0c, 0xe6, 0x04, 0xf3, 0xf2, 0xe5, 0xf3, 0xef, 0x1d,\n+    0xf6, 0x20, 0x07, 0xfe, 0xf4, 0x05, 0xee, 0x10, 0xfd, 0x0e, 0x0b, 0x02,\n+    0x0d, 0xd8, 0x07, 0xfb, 0x26, 0x0a, 0x1c, 0x21, 0x06, 0x1f, 0xf4, 0x06,\n+    0x37, 0x18, 0xfa, 0x16, 0x1e, 0x24, 0xfb, 0xf0, 0x12, 0xf9, 0x02, 0x09,\n+    0x17, 0x16, 0xf3, 0xf9, 0x17, 0xf2, 0x02, 0x0a, 0x2d, 0xe7, 0xe3, 0x25,\n+    0xf0, 0xf9, 0x0f, 0xdd, 0x15, 0xe6, 0x04, 0xfc, 0xf1, 0x17, 0x0a, 0xea,\n+    0x24, 0x07, 0xf1, 0x11, 0x13, 0x29, 0xf4, 0xc5, 0xfb, 0x07, 0xef, 0x13,\n+    0x0b, 0xe1, 0xf1, 0xeb, 0xf8, 0x1b, 0x09, 0x08, 0x1f, 0x15, 0xf2, 0x05,\n+    0x02, 0xdd, 0x09, 0x0f, 0x16, 0x10, 0x01, 0x30, 0xf2, 0xe0, 0x27, 0xfe,\n+    0xf1, 0x0e, 0x0e, 0x07, 0xe6, 0x07, 0x0b, 0x18, 0xfe, 0x0f, 0x01, 0x07,\n+    0xf4, 0x07, 0x10, 0xe7, 0xfb, 0xf3, 0xf7, 0x0b, 0xf9, 0x15, 0x18, 0x25,\n+    0x0c, 0x14, 0x02, 0x08, 0x0a, 0x0f, 0x10, 0xec, 0xee, 0x1a, 0x03, 0x14,\n+    0x0f, 0xfa, 0x25, 0xff, 0x18, 0x0d, 0x0b, 0xea, 0x1f, 0x28, 0x10, 0x0c,\n+    0xe7, 0xee, 0xf7, 0xfa, 0x03, 0x15, 0x0c, 0x1d, 0x01, 0x00, 0x12, 0xee,\n+    0x01, 0xf1, 0xf8, 0x0b, 0xf3, 0xfd, 0x04, 0xf8, 0x02, 0x1e, 0x0e, 0xf3,\n+    0x02, 0x10, 0xfd, 0x07, 0x0b, 0x09, 0x03, 0x10, 0x3e, 0x08, 0x0e, 0x0c,\n+    0xf4, 0xe7, 0xfd, 0x1c, 0x27, 0x1a, 0xed, 0xe1, 0x08, 0xdc, 0xd9, 0xf1,\n+    0x1e, 0x07, 0x12, 0xf1, 0x10, 0xfb, 0xc8, 0x08, 0x0f, 0x03, 0x1d, 0xdc,\n+    0x23, 0x04, 0xf9, 0x0a, 0xff, 0x08, 0x0e, 0xc9, 0x39, 0x0a, 0x01, 0x07,\n+    0xec, 0xe0, 0x05, 0xe8, 0x14, 0xd8, 0xe1, 0xfa, 0xd6, 0xf8, 0xed, 0xdb,\n+    0xff, 0x1d, 0xf5, 0x17, 0x0f, 0x1c, 0xdc, 0xed, 0xff, 0xff, 0x04, 0x13,\n+    0xf5, 0xe7, 0xd2, 0x12, 0xdb, 0xe1, 0x13, 0x11, 0x23, 0x0e, 0xf9, 0x31,\n+    0xdc, 0xef, 0x07, 0x0a, 0x20, 0xf2, 0xf9, 0x13, 0xff, 0x1c, 0x2a, 0xdf,\n+    0xdb, 0xe7, 0x11, 0xf2, 0xfd, 0xfb, 0x28, 0x00, 0x15, 0x03, 0x02, 0x20,\n+    0x07, 0xf7, 0x19, 0x13, 0x13, 0xf6, 0x09, 0xfe, 0xfd, 0x20, 0x14, 0xf5,\n+    0xf5, 0xfc, 0x14, 0x0e, 0x17, 0xfe, 0x15, 0x04, 0xf9, 0xf6, 0x1d, 0xf6,\n+    0x1b, 0xe4, 0xee, 0xfd, 0x00, 0xe9, 0xee, 0xce, 0x0f, 0x20, 0x05, 0x02,\n+    0x0d, 0x06, 0x05, 0xf8, 0xef, 0xdf, 0x16, 0x17, 0xe6, 0xf1, 0x10, 0xf3,\n+    0x06, 0x04, 0xdb, 0xfb, 0xe7, 0xf8, 0x02, 0x11, 0xff, 0x0d, 0x0a, 0xfa,\n+    0x27, 0x0a, 0xfc, 0xe8, 0x11, 0x17, 0xf0, 0x0d, 0x0d, 0xee, 0xdf, 0xdd,\n+    0xf1, 0x15, 0xd6, 0xf7, 0x00, 0xef, 0x2e, 0xe6, 0x24, 0xfd, 0xd5, 0x04,\n+    0xf0, 0x08, 0x08, 0xed, 0x22, 0x07, 0xe1, 0x09, 0xd0, 0x0b, 0x18, 0xe6,\n+    0x3f, 0x0a, 0xe5, 0xe2, 0xf9, 0x08, 0x02, 0xd6, 0x13, 0x15, 0xbd, 0x00,\n+    0x0e, 0xf8, 0xe2, 0xca, 0xec, 0x0e, 0xe6, 0xef, 0x15, 0x11, 0xcb, 0xdf,\n+    0xf9, 0x03, 0x22, 0x10, 0xfb, 0xf9, 0xe5, 0x08, 0xe1, 0x11, 0x10, 0xfc,\n+    0xfa, 0x00, 0xf8, 0x30, 0xe5, 0x08, 0x14, 0xe8, 0x12, 0xe2, 0x04, 0x19,\n+    0x0b, 0xfa, 0x33, 0xf3, 0xec, 0xfe, 0xf8, 0x25, 0xf8, 0x21, 0x28, 0xef,\n+    0x00, 0xde, 0xff, 0x2b, 0x03, 0xfc, 0x10, 0x0c, 0xcf, 0xfd, 0x19, 0x0a,\n+    0x0c, 0xf2, 0xf7, 0x0c, 0xfd, 0x02, 0x1c, 0xdf, 0x26, 0x0d, 0xf0, 0x0b,\n+    0xce, 0x15, 0xfb, 0xec, 0x27, 0xf6, 0xf9, 0xe5, 0xe2, 0xfb, 0xfd, 0xd8,\n+    0x28, 0xec, 0xe9, 0xf2, 0xca, 0x09, 0x02, 0x06, 0x0c, 0xfa, 0x05, 0x01,\n+    0xd5, 0x0a, 0x02, 0xfb, 0x04, 0x17, 0xdd, 0xfe, 0xeb, 0xf1, 0x09, 0x10,\n+    0x12, 0xff, 0x00, 0xe0, 0x26, 0xf7, 0xed, 0xf4, 0x00, 0xf2, 0xfa, 0x07,\n+    0x02, 0xf5, 0x06, 0xe8, 0x03, 0xfd, 0xdc, 0xf2, 0xc2, 0xff, 0x0b, 0xd6,\n+    0x25, 0x04, 0xe9, 0xf0, 0xd9, 0x08, 0x09, 0xc5, 0x23, 0x12, 0xf6, 0x13,\n+    0x11, 0xf3, 0x18, 0xf0, 0x34, 0xfe, 0xfe, 0xed, 0xea, 0x02, 0x17, 0xdc,\n+    0x1b, 0x1b, 0xea, 0xfe, 0xea, 0xfe, 0xf2, 0xc4, 0xfd, 0x04, 0xe9, 0x0d,\n+    0x0d, 0x09, 0xca, 0xd4, 0xe1, 0x04, 0x1e, 0xff, 0x0f, 0xef, 0xd6, 0x0f,\n+    0xd5, 0xf8, 0x26, 0xd6, 0x33, 0xe8, 0xf5, 0x3b, 0xf1, 0xe8, 0x39, 0xe8,\n+    0x08, 0xe5, 0x01, 0x02, 0x04, 0xf6, 0x19, 0x0a, 0xd0, 0xeb, 0x0b, 0x15,\n+    0xf7, 0x0e, 0x23, 0xf6, 0xf4, 0xd8, 0xf4, 0x17, 0x23, 0x25, 0x14, 0x01,\n+    0xd7, 0xfd, 0xf9, 0x1f, 0x1b, 0x11, 0x0a, 0x18, 0xf5, 0xf5, 0x0f, 0xe0,\n+    0x2e, 0x01, 0xe5, 0xdb, 0xe2, 0xf2, 0x14, 0xfa, 0x2a, 0x00, 0xe2, 0xea,\n+    0xfd, 0x0e, 0xfc, 0xc1, 0x35, 0x08, 0xf6, 0xf9, 0xec, 0x00, 0x06, 0x00,\n+    0x0b, 0xf6, 0x01, 0xfe, 0xea, 0x0b, 0x08, 0x05, 0xe4, 0xea, 0xd7, 0xfd,\n+    0xee, 0xf3, 0x0c, 0x0c, 0x0d, 0x02, 0xfd, 0xee, 0x17, 0x10, 0x13, 0xfd,\n+    0x07, 0x03, 0xf8, 0x0c, 0xd4, 0xed, 0xfe, 0x07, 0xf4, 0xee, 0xf4, 0x03,\n+    0xc2, 0x18, 0x2c, 0xd1, 0x33, 0xd8, 0xdb, 0xfa, 0xed, 0x10, 0x1c, 0xe3,\n+    0x37, 0x0a, 0xea, 0xfe, 0xf6, 0xef, 0x20, 0xed, 0x32, 0xf7, 0xf5, 0xf3,\n+    0xca, 0xfd, 0x0a, 0xcf, 0x0d, 0x10, 0xde, 0x07, 0x18, 0x10, 0xf0, 0xd6,\n+    0x0c, 0x04, 0xeb, 0x1a, 0xf9, 0x08, 0xc4, 0xcb, 0xe4, 0x0b, 0x19, 0xfc,\n+    0x29, 0xf6, 0xec, 0x07, 0xf3, 0xed, 0x2b, 0xe9, 0xfa, 0x02, 0xec, 0x2b,\n+    0xf0, 0xf2, 0x2d, 0xe8, 0xed, 0x00, 0x12, 0x13, 0xed, 0x1a, 0x3d, 0xf0,\n+    0x05, 0x04, 0xfc, 0x13, 0x10, 0x01, 0x40, 0xf2, 0x06, 0x02, 0xf9, 0x22,\n+    0x24, 0xff, 0x18, 0x00, 0xeb, 0xe8, 0x14, 0xf9, 0x25, 0xe0, 0xff, 0x03,\n+    0xe5, 0xfd, 0x08, 0xea, 0x2e, 0x0b, 0x05, 0xe7, 0xde, 0xe4, 0xf5, 0xea,\n+    0x3a, 0xf4, 0xf4, 0xe7, 0xed, 0xec, 0xf8, 0xee, 0x30, 0x0a, 0xdb, 0x05,\n+    0xf7, 0x16, 0xff, 0xf7, 0xfa, 0x1f, 0xef, 0xe4, 0xce, 0xf8, 0x13, 0x04,\n+    0xf9, 0x01, 0xe1, 0x03, 0xf9, 0xf9, 0x08, 0x04, 0xfa, 0xe4, 0xe7, 0xf7,\n+    0x28, 0xfd, 0xfd, 0x00, 0xfc, 0xfb, 0xef, 0x0a, 0xec, 0x0c, 0x0a, 0xd2,\n+    0x05, 0xfb, 0xcd, 0xfb, 0x9d, 0xea, 0x1c, 0xe5, 0x25, 0xe8, 0xea, 0x0b,\n+    0xf0, 0xf3, 0x0d, 0xab, 0x49, 0x0e, 0xeb, 0x00, 0xe2, 0x03, 0x29, 0xe0,\n+    0x3d, 0x06, 0xf7, 0xf8, 0xcf, 0x0c, 0x1a, 0xd6, 0x1f, 0xef, 0xfd, 0xff,\n+    0xef, 0x0c, 0xdb, 0xe0, 0x20, 0x06, 0xdf, 0x1a, 0xe7, 0xfc, 0xb2, 0xd1,\n+    0xdf, 0x13, 0x07, 0x1f, 0x0c, 0xf7, 0xde, 0x0a, 0xdb, 0xdf, 0x1a, 0xf5,\n+    0x29, 0x0d, 0xeb, 0x2c, 0xcf, 0x0e, 0x26, 0xfe, 0xef, 0x04, 0xf5, 0x14,\n+    0x09, 0x13, 0x34, 0xff, 0xfe, 0x0e, 0x06, 0x0e, 0x10, 0xf9, 0x2a, 0x0b,\n+    0xe6, 0xfe, 0xf1, 0x1a, 0x36, 0x29, 0x29, 0x05, 0x05, 0xd8, 0x14, 0x12,\n+    0x26, 0x0b, 0x18, 0xff, 0xd7, 0xdf, 0x0f, 0xed, 0x31, 0xf7, 0xfc, 0xec,\n+    0x0b, 0xef, 0x0c, 0xd2, 0x30, 0xf9, 0x04, 0xfe, 0xef, 0xe4, 0xfb, 0xd1,\n+    0x32, 0xe5, 0xee, 0xf0, 0x0c, 0xe6, 0x13, 0xed, 0x1e, 0x0b, 0xe4, 0xe0,\n+    0xfa, 0xf4, 0x14, 0xf4, 0x18, 0xf7, 0xd9, 0xf6, 0xed, 0xea, 0xfc, 0x06,\n+    0xfc, 0xf5, 0xed, 0xeb, 0x05, 0x03, 0x1b, 0x0b, 0xff, 0x0b, 0xef, 0x01,\n+    0xf1, 0x16, 0x05, 0x00, 0xee, 0x0a, 0xdb, 0x10, 0xb4, 0x14, 0x0f, 0xe1,\n+    0x1c, 0xfd, 0xf0, 0xf8, 0xc3, 0x11, 0x17, 0xba, 0x47, 0x15, 0xe6, 0x01,\n+    0xea, 0xf1, 0x0c, 0x08, 0x4a, 0x15, 0xf0, 0xf7, 0xea, 0x00, 0xf5, 0xd4,\n+    0xf1, 0xff, 0xe0, 0x0c, 0xf4, 0x17, 0xd8, 0xea, 0x03, 0xff, 0xd5, 0x18,\n+    0xfb, 0x07, 0xc7, 0xc9, 0xdd, 0xf3, 0x15, 0x0d, 0x22, 0xea, 0xdb, 0x0a,\n+    0xd6, 0x09, 0x1d, 0xe5, 0x2d, 0x04, 0xfc, 0x35, 0xc6, 0x0e, 0x33, 0xf1,\n+    0xd7, 0xea, 0x01, 0x1b, 0x0e, 0x01, 0x2a, 0xff, 0xef, 0xf1, 0xf7, 0x0f,\n+    0xff, 0x00, 0x3b, 0xe8, 0x0a, 0xff, 0xf4, 0x0d, 0x1f, 0x04, 0x17, 0xf7,\n+    0xdf, 0xec, 0x12, 0x26, 0x36, 0x07, 0x0c, 0x06, 0xe7, 0xd6, 0x13, 0xe3,\n+    0x30, 0x09, 0x00, 0xf5, 0xe0, 0xf3, 0x11, 0xe2, 0x38, 0x0d, 0xf6, 0x05,\n+    0xec, 0x05, 0x00, 0xe5, 0x24, 0xef, 0xfe, 0xf8, 0x00, 0xd8, 0x18, 0xf1,\n+    0x26, 0x0b, 0xf2, 0xfc, 0xe0, 0xe4, 0x06, 0x0b, 0x1a, 0x05, 0xc6, 0xf6,\n+    0xe8, 0xde, 0xfe, 0x0c, 0x03, 0x09, 0xfe, 0xe2, 0x18, 0x1b, 0xfb, 0xf7,\n+    0x06, 0xf1, 0xfe, 0xf6, 0xef, 0x1b, 0x07, 0x0d, 0x01, 0x0a, 0xed, 0xf0,\n+    0xad, 0x1a, 0x17, 0xd6, 0x37, 0xfd, 0xd8, 0xec, 0xca, 0xf1, 0x15, 0xc4,\n+    0x33, 0xf1, 0xed, 0xf0, 0xe9, 0x15, 0x0d, 0xf2, 0x36, 0xde, 0xfd, 0x0e,\n+    0xfb, 0x10, 0x0f, 0xf6, 0xf9, 0x0c, 0xea, 0xf0, 0xe5, 0x0b, 0xee, 0xc1,\n+    0x10, 0xf4, 0xe8, 0x1f, 0xee, 0x00, 0xd0, 0xe4, 0xe7, 0x13, 0x07, 0x27,\n+    0x12, 0xea, 0xea, 0x0f, 0xea, 0xf4, 0x14, 0xee, 0xfe, 0x09, 0xfb, 0x31,\n+    0xdb, 0x1b, 0x1c, 0xe7, 0xef, 0xf5, 0xf7, 0x1a, 0x06, 0x01, 0x2c, 0xed,\n+    0xfb, 0x04, 0xfa, 0x07, 0x19, 0xec, 0x2b, 0x0d, 0xfc, 0xd8, 0xfc, 0x0f,\n+    0x1f, 0xfc, 0x2d, 0xf3, 0xc9, 0xda, 0x0a, 0xfe, 0x29, 0x00, 0xfa, 0x09,\n+    0xe8, 0xf6, 0x21, 0xf3, 0x4a, 0x1a, 0xf8, 0x00, 0xe7, 0xf0, 0x21, 0x01,\n+    0x22, 0xf3, 0x00, 0xe9, 0x06, 0xe3, 0x15, 0xd7, 0x3d, 0x0c, 0x07, 0xf1,\n+    0xf3, 0xec, 0x17, 0xdf, 0x29, 0x1b, 0xfd, 0xfe, 0xeb, 0xed, 0x17, 0xf6,\n+    0x23, 0x0a, 0xea, 0xee, 0xf9, 0xf3, 0x0f, 0x0c, 0xf8, 0xf5, 0xed, 0xe8,\n+    0x1c, 0x14, 0x07, 0x17, 0x0b, 0x0d, 0xed, 0xf7, 0xed, 0x10, 0x07, 0xd5,\n+    0xf2, 0x09, 0xd6, 0xf7, 0xb5, 0xf6, 0x19, 0xc9, 0x25, 0x15, 0xe8, 0xf5,\n+    0xc4, 0xf9, 0x2a, 0xb0, 0x39, 0x0e, 0x02, 0x11, 0xf0, 0xf7, 0x1d, 0xeb,\n+    0x39, 0x10, 0x02, 0x15, 0xe0, 0x08, 0x01, 0xee, 0x1c, 0x1e, 0x08, 0x04,\n+    0xf2, 0x02, 0xe8, 0xda, 0xfa, 0xfb, 0xe0, 0xfe, 0x05, 0x02, 0xd3, 0xca,\n+    0xf4, 0xec, 0x10, 0x16, 0x05, 0x0d, 0xd7, 0x09, 0xdc, 0xf6, 0x1e, 0xf8,\n+    0x10, 0xed, 0xf7, 0x27, 0xf5, 0x08, 0x28, 0xee, 0xec, 0xe0, 0xf8, 0x17,\n+    0xfb, 0x23, 0x2e, 0xf1, 0xfa, 0xf5, 0xfc, 0x1a, 0x10, 0xf7, 0x32, 0xfb,\n+    0xfb, 0xe8, 0xf1, 0x03, 0x24, 0xeb, 0x25, 0xf9, 0xca, 0xf1, 0xfe, 0x01,\n+    0x2e, 0x07, 0x18, 0x03, 0xe5, 0xea, 0x10, 0xfa, 0x3b, 0x07, 0x0f, 0x11,\n+    0x04, 0xf7, 0x1d, 0xf1, 0x24, 0xd9, 0x08, 0xef, 0x02, 0xdd, 0x07, 0xc8,\n+    0x2c, 0x0d, 0x06, 0xec, 0x17, 0xda, 0x21, 0xdf, 0x34, 0xd9, 0xfb, 0xf2,\n+    0xf4, 0xec, 0x0e, 0x0a, 0x0f, 0x0f, 0xdb, 0xf0, 0xfb, 0xe6, 0x0f, 0x00,\n+    0x04, 0xf9, 0x01, 0x05, 0x05, 0xfe, 0x08, 0xf3, 0x0e, 0xf2, 0xfb, 0x01,\n+    0xfd, 0x18, 0x1d, 0xf6, 0xee, 0x06, 0xcf, 0xfc, 0xae, 0x27, 0x21, 0xd2,\n+    0x33, 0x03, 0xe0, 0xe0, 0xc9, 0xfb, 0x3a, 0xbd, 0x4d, 0x04, 0xe8, 0xf5,\n+    0xe6, 0xeb, 0x19, 0xf2, 0x4b, 0x1d, 0xfc, 0xf7, 0xd9, 0xff, 0xfe, 0xea,\n+    0x0f, 0x04, 0x0e, 0x00, 0xed, 0x19, 0xe9, 0xe9, 0xff, 0x11, 0xef, 0x14,\n+    0x01, 0x17, 0xbc, 0xb5, 0xef, 0x0c, 0x22, 0x27, 0x0f, 0x01, 0xd4, 0x03,\n+    0xce, 0x01, 0x25, 0xff, 0xf9, 0xf0, 0x0a, 0x1c, 0xe5, 0x0f, 0x1c, 0xee,\n+    0xf4, 0xf1, 0xf4, 0x0c, 0x00, 0x08, 0x1c, 0xf4, 0xd5, 0xf1, 0xfc, 0x1f,\n+    0x11, 0x00, 0x18, 0x03, 0xf7, 0xe4, 0xff, 0x07, 0x09, 0x1a, 0x18, 0xff,\n+    0xea, 0xec, 0xfd, 0x13, 0x2b, 0xf8, 0x0c, 0xfa, 0xdf, 0xf6, 0x11, 0xda,\n+    0x2a, 0xdc, 0xfc, 0xff, 0xff, 0xec, 0x12, 0xe1, 0x37, 0xfd, 0xeb, 0xfe,\n+    0xea, 0xd1, 0x12, 0xfa, 0x28, 0x1a, 0x0d, 0xf0, 0xf7, 0xe0, 0x0c, 0xeb,\n+    0x35, 0x14, 0xeb, 0x00, 0xeb, 0xe7, 0x1b, 0xfc, 0x09, 0x00, 0xf2, 0x04,\n+    0xf9, 0xe5, 0x1a, 0x0e, 0x08, 0x12, 0xf8, 0xfe, 0x09, 0x0f, 0x0d, 0xea,\n+    0x03, 0xe1, 0xfe, 0xf2, 0xec, 0x0d, 0x02, 0xdb, 0x04, 0x1d, 0xd4, 0x01,\n+    0xca, 0x13, 0x29, 0xca, 0x28, 0x04, 0xe2, 0xf1, 0xdb, 0x0b, 0x2c, 0xcd,\n+    0x44, 0x00, 0xe7, 0xf4, 0xd0, 0x12, 0x15, 0xff, 0x42, 0x11, 0x05, 0xfd,\n+    0xd9, 0x11, 0x1c, 0xf4, 0x15, 0xec, 0xf2, 0x24, 0xd6, 0x1d, 0xec, 0xda,\n+    0xf5, 0xec, 0xe5, 0x22, 0xf2, 0x0b, 0xbd, 0xd0, 0xeb, 0x05, 0x07, 0x1b,\n+    0x01, 0xed, 0xf5, 0x02, 0xcf, 0x08, 0x15, 0xfd, 0x1c, 0xe5, 0x04, 0x19,\n+    0xc7, 0x25, 0x22, 0xf3, 0xde, 0xfb, 0xfb, 0x20, 0xf6, 0xeb, 0x25, 0xfe,\n+    0xf5, 0x08, 0xf5, 0x17, 0x0e, 0x04, 0x1c, 0xf9, 0xee, 0xec, 0xe1, 0x06,\n+    0x12, 0xff, 0x2a, 0x13, 0xed, 0xfe, 0x05, 0x18, 0x25, 0x20, 0x09, 0x13,\n+    0xea, 0xd7, 0x05, 0x06, 0x33, 0x25, 0xff, 0x0a, 0xf0, 0xea, 0x17, 0xe1,\n+    0x30, 0xfa, 0x0d, 0x0a, 0x04, 0x00, 0x0e, 0xe9, 0x16, 0x20, 0x0d, 0x02,\n+    0xe8, 0xed, 0x07, 0xe8, 0x3c, 0xf1, 0xd9, 0xfa, 0xe1, 0xed, 0x18, 0xfc,\n+    0xf0, 0x09, 0xe3, 0x05, 0xfe, 0xd1, 0x0b, 0x0e, 0xf5, 0x25, 0xfd, 0xfb,\n+    0x30, 0x1e, 0x08, 0xfc, 0x0c, 0x21, 0xea, 0xfc, 0xe5, 0x1e, 0x16, 0xf5,\n+    0xf4, 0xfc, 0xf0, 0xea, 0xc4, 0x21, 0x27, 0xe9, 0x2b, 0xdb, 0xdb, 0xec,\n+    0xe5, 0xfe, 0x37, 0xe2, 0x46, 0x25, 0xfa, 0xec, 0xe4, 0xf3, 0x19, 0xf2,\n+    0x4c, 0x06, 0x00, 0xfb, 0xeb, 0x10, 0x10, 0xf7, 0x2a, 0xf8, 0xe9, 0x18,\n+    0xee, 0x21, 0xe8, 0xd5, 0xf4, 0x0a, 0xed, 0x24, 0xfe, 0xf9, 0xb2, 0xbc,\n+    0xf3, 0x1d, 0x00, 0x2f, 0x07, 0x08, 0xe1, 0xf1, 0xed, 0x27, 0x27, 0xfe,\n+    0x22, 0xfd, 0x02, 0x20, 0xd8, 0x05, 0x25, 0xec, 0xf1, 0xff, 0x0a, 0x0f,\n+    0xe6, 0xfe, 0x46, 0xfd, 0xe1, 0xca, 0xf7, 0x22, 0x03, 0x08, 0x21, 0xf5,\n+    0x0f, 0xf7, 0xfb, 0x0c, 0xfb, 0x14, 0x2d, 0x03, 0xe5, 0xe4, 0x09, 0x0b,\n+    0x1a, 0xe6, 0x01, 0x28, 0xe9, 0xd6, 0x0b, 0xf7, 0x2c, 0xfb, 0x11, 0xee,\n+    0x0b, 0xed, 0x17, 0xf0, 0x3c, 0xf5, 0x08, 0xfa, 0xf8, 0xcd, 0x17, 0xfa,\n+    0x39, 0xea, 0x11, 0xf5, 0xed, 0xee, 0x0a, 0xec, 0x41, 0xd6, 0xe7, 0xf9,\n+    0xfa, 0xc8, 0x15, 0xf7, 0x08, 0x0e, 0xe3, 0x08, 0xe8, 0xec, 0xfd, 0xfe,\n+    0xf1, 0x00, 0xe9, 0xf4, 0x09, 0x26, 0x02, 0x16, 0xf0, 0x01, 0xef, 0x01,\n+    0xff, 0x03, 0x22, 0xdb, 0xfc, 0xf5, 0xde, 0xe5, 0xc4, 0x01, 0x28, 0xd4,\n+    0x38, 0x08, 0xd0, 0xec, 0xd5, 0x04, 0x2f, 0xce, 0x4e, 0xeb, 0xf9, 0xe7,\n+    0xdf, 0xf0, 0x1b, 0xf5, 0x42, 0xf1, 0xf6, 0x09, 0xd5, 0x0a, 0x0d, 0x08,\n+    0x04, 0x05, 0xe2, 0x0e, 0xd7, 0x19, 0xdb, 0xda, 0xe1, 0x25, 0xde, 0x15,\n+    0x0e, 0x14, 0xbd, 0xb0, 0xe3, 0xe5, 0x24, 0x1e, 0xf8, 0x0d, 0xd8, 0xf7,\n+    0xf2, 0xff, 0x18, 0xf5, 0x07, 0xf0, 0x02, 0x25, 0xd5, 0x1e, 0x2e, 0xdf,\n+    0xe7, 0x05, 0xef, 0x11, 0xe8, 0xe7, 0x47, 0xf4, 0xe1, 0xde, 0x09, 0x36,\n+    0x1a, 0x11, 0x11, 0xf5, 0x12, 0xe5, 0xe7, 0x18, 0x01, 0x17, 0x2a, 0x03,\n+    0x05, 0xea, 0x09, 0x0b, 0x12, 0x04, 0x17, 0xf0, 0xee, 0xd7, 0x11, 0xed,\n+    0x3c, 0x17, 0x16, 0xff, 0x02, 0xdc, 0x21, 0xf3, 0x2e, 0xe5, 0x13, 0xef,\n+    0xec, 0xe2, 0x10, 0xd0, 0x2e, 0xee, 0xff, 0x01, 0xe0, 0xe5, 0x0b, 0xda,\n+    0x1f, 0xf8, 0xf6, 0xfb, 0x07, 0xdb, 0x05, 0xf6, 0x0c, 0xf3, 0xf0, 0x10,\n+    0xf9, 0xf5, 0xf2, 0x0d, 0x10, 0xf7, 0xf6, 0xff, 0x2b, 0x0d, 0x06, 0x1e,\n+    0xf3, 0x0c, 0xe9, 0x01, 0xf2, 0x23, 0xfe, 0xe9, 0xdd, 0x12, 0xdd, 0xf7,\n+    0xbb, 0x22, 0x1b, 0xd4, 0x38, 0x29, 0xd4, 0xcf, 0xf5, 0xf9, 0x27, 0xdd,\n+    0x47, 0x00, 0xf2, 0xe5, 0x09, 0xfc, 0x0e, 0xf9, 0x34, 0x0a, 0x02, 0xfd,\n+    0xec, 0x25, 0x1d, 0x03, 0x15, 0x09, 0xf1, 0x1b, 0xd0, 0x17, 0xda, 0xda,\n+    0xe7, 0x07, 0xe3, 0x15, 0xf1, 0x02, 0xb9, 0xce, 0xe6, 0x0c, 0x10, 0x31,\n+    0xfe, 0xf7, 0xd9, 0xfa, 0xed, 0xed, 0x33, 0xf4, 0x19, 0xe7, 0xfe, 0x3f,\n+    0xe5, 0x06, 0x2e, 0xe6, 0xf2, 0xdc, 0xf5, 0x18, 0xe6, 0x01, 0x2f, 0xee,\n+    0xe7, 0xe4, 0xfe, 0x2c, 0x03, 0xf7, 0x20, 0x05, 0x07, 0xe2, 0x06, 0x1e,\n+    0x05, 0xed, 0x2f, 0x03, 0xea, 0xf8, 0x0e, 0x0c, 0x1f, 0xff, 0x20, 0xf4,\n+    0xe8, 0xe1, 0x1c, 0xec, 0x22, 0x1e, 0x05, 0xfd, 0xf5, 0xca, 0x30, 0xe9,\n+    0x30, 0xe4, 0x14, 0xff, 0xf2, 0xdc, 0x17, 0xf8, 0x26, 0xe1, 0x0b, 0x01,\n+    0x11, 0xc2, 0x02, 0xf1, 0x36, 0x10, 0x02, 0x05, 0xed, 0xf1, 0x15, 0xfa,\n+    0x17, 0xf8, 0xf7, 0xf1, 0xe8, 0xd3, 0xfd, 0x08, 0xfb, 0x27, 0xf5, 0xf5,\n+    0x13, 0x06, 0x0b, 0xf0, 0x01, 0xf9, 0xd7, 0x0e, 0xec, 0x12, 0xfe, 0xfd,\n+    0xee, 0x25, 0xd8, 0xf1, 0xb2, 0x09, 0x1c, 0xbf, 0x34, 0xea, 0xc8, 0xea,\n+    0xdb, 0x0e, 0x24, 0xde, 0x47, 0xfe, 0xdc, 0xe0, 0xf3, 0x06, 0x20, 0xfe,\n+    0x2b, 0xf6, 0x18, 0x14, 0xcd, 0x19, 0x16, 0xfe, 0x1a, 0x15, 0xf8, 0x11,\n+    0xf4, 0x22, 0xd7, 0xcc, 0xdd, 0x15, 0xdc, 0x14, 0xf9, 0x02, 0xbb, 0xca,\n+    0xe3, 0xf3, 0x0d, 0x1e, 0x2a, 0x0c, 0xe4, 0x05, 0xe0, 0x18, 0x2a, 0x07,\n+    0x20, 0xed, 0xf6, 0x17, 0xcf, 0xf4, 0x2a, 0xd6, 0xfb, 0xce, 0x03, 0x37,\n+    0xe2, 0xfd, 0x1d, 0xfb, 0xe5, 0xe0, 0x05, 0x29, 0xef, 0x16, 0x23, 0xf7,\n+    0x01, 0xf4, 0x0c, 0x14, 0xff, 0xee, 0x31, 0xf9, 0x12, 0xf9, 0x14, 0xf6,\n+    0x0c, 0xf6, 0x0b, 0x0f, 0xd8, 0xdc, 0xfe, 0x0f, 0x37, 0xfa, 0x01, 0x09,\n+    0x04, 0xd1, 0x0b, 0x0c, 0x29, 0xf3, 0x0a, 0xf9, 0xed, 0xc2, 0x18, 0xf4,\n+    0x25, 0x18, 0x0f, 0x08, 0xf7, 0xed, 0x1f, 0xf7, 0x4f, 0x0e, 0xf0, 0xe4,\n+    0x00, 0xeb, 0xfa, 0x1a, 0x0c, 0x03, 0xe9, 0xfc, 0xf0, 0xcc, 0x06, 0x05,\n+    0xf2, 0x12, 0x04, 0xe2, 0x16, 0x0a, 0x0a, 0xf3, 0x0b, 0xf3, 0xdc, 0xfd,\n+    0x10, 0xfc, 0x0e, 0xe2, 0xe0, 0xfe, 0xf0, 0xff, 0xb1, 0x06, 0x1b, 0xe4,\n+    0x30, 0x13, 0xc6, 0xc3, 0xfa, 0x0c, 0x1e, 0xd9, 0x57, 0x11, 0xe1, 0xd6,\n+    0xfa, 0xee, 0x1d, 0xf7, 0x37, 0xea, 0xf0, 0x05, 0xef, 0x24, 0x1e, 0xf1,\n+    0x10, 0xe8, 0xeb, 0x19, 0xd1, 0x18, 0xf5, 0xc8, 0xf8, 0xec, 0xf5, 0x1f,\n+    0xf2, 0xff, 0xb3, 0xd2, 0xe6, 0x0e, 0x06, 0x2e, 0x07, 0x17, 0xe0, 0xf5,\n+    0x02, 0xf9, 0x20, 0x07, 0x16, 0x08, 0xe8, 0x1d, 0xd3, 0x08, 0x34, 0xda,\n+    0xf2, 0xce, 0xfb, 0x1f, 0xe1, 0x00, 0x2d, 0xdb, 0xdf, 0xcc, 0x05, 0xfb,\n+    0xf7, 0x00, 0x33, 0xf9, 0x0b, 0x01, 0x13, 0x28, 0xf8, 0x07, 0x24, 0xf8,\n+    0x0f, 0x03, 0x0d, 0xe9, 0x06, 0xfe, 0x18, 0xf9, 0xed, 0xf5, 0x0c, 0xe0,\n+    0x2c, 0x0e, 0xf9, 0x06, 0xfb, 0xce, 0x27, 0xe8, 0x29, 0x19, 0xf9, 0x01,\n+    0x0e, 0xc8, 0x25, 0xed, 0x30, 0xeb, 0x01, 0xfe, 0x10, 0xdc, 0x1e, 0x00,\n+    0x1e, 0x10, 0xf9, 0x00, 0xfc, 0xc8, 0x0e, 0x04, 0x13, 0x04, 0xf0, 0x02,\n+    0xfe, 0xd8, 0x0f, 0x1b, 0xf7, 0xe1, 0xf8, 0xde, 0x12, 0xe2, 0xef, 0x0a,\n+    0x02, 0xe0, 0xdd, 0xf1, 0x0e, 0x2a, 0x25, 0x15, 0xeb, 0x02, 0xf4, 0xf0,\n+    0xbf, 0xfc, 0x27, 0xdc, 0x42, 0x0f, 0xe9, 0xbf, 0xe8, 0x20, 0x33, 0xc9,\n+    0x3f, 0x10, 0xec, 0xf3, 0x03, 0x02, 0x2c, 0x04, 0x38, 0x06, 0x0a, 0xf9,\n+    0xe5, 0x1c, 0x3f, 0x0f, 0x0c, 0x25, 0xe2, 0x06, 0xe6, 0x03, 0xf4, 0xd7,\n+    0xfe, 0xf6, 0xe7, 0x2f, 0xfa, 0x03, 0xb6, 0xcb, 0xf1, 0x11, 0x0a, 0x2c,\n+    0xfc, 0x1e, 0xe0, 0xff, 0xc2, 0xdd, 0x1d, 0xf3, 0x10, 0xfa, 0x07, 0x1e,\n+    0xf6, 0x20, 0x07, 0xe6, 0xf1, 0x0a, 0xe8, 0x27, 0xf1, 0xf5, 0x24, 0xed,\n+    0xfd, 0xee, 0x13, 0x15, 0xe9, 0xe2, 0x22, 0xe5, 0xf9, 0xdd, 0x1d, 0x32,\n+    0x04, 0xfa, 0x25, 0x00, 0xee, 0xfd, 0x0b, 0x0e, 0x23, 0xfa, 0x0f, 0x01,\n+    0xf8, 0xf0, 0x15, 0xe4, 0x21, 0xf7, 0x10, 0xf9, 0xe7, 0xc3, 0x19, 0xe1,\n+    0x34, 0xff, 0xed, 0xf4, 0xef, 0xd7, 0x21, 0x01, 0x31, 0xee, 0xf7, 0xf2,\n+    0xf3, 0xe5, 0x0a, 0xee, 0x2e, 0x1e, 0xf2, 0x0c, 0x07, 0xc2, 0x08, 0x0a,\n+    0x14, 0x14, 0x00, 0xfc, 0xf9, 0xd6, 0xfb, 0xf8, 0xe5, 0xf1, 0xfa, 0xe0,\n+    0x15, 0x21, 0xef, 0x06, 0xf9, 0x00, 0xf5, 0xf4, 0x0b, 0x0b, 0x18, 0x02,\n+    0xf5, 0x04, 0xdb, 0xfd, 0xcc, 0x32, 0x1d, 0xc9, 0x3b, 0x12, 0xd9, 0xaf,\n+    0xcf, 0x0f, 0x26, 0xde, 0x35, 0xe4, 0xdb, 0xd3, 0x22, 0x11, 0x2e, 0xfb,\n+    0x36, 0xfa, 0xfd, 0x02, 0xeb, 0x0f, 0x37, 0x0b, 0x14, 0x1d, 0xdd, 0x18,\n+    0xe0, 0x10, 0xe0, 0xdf, 0x14, 0xf9, 0xf0, 0x19, 0xf7, 0xfb, 0xc4, 0xe5,\n+    0xe7, 0x11, 0x01, 0x31, 0x1a, 0xf7, 0xd8, 0xf1, 0xe9, 0xf3, 0x21, 0xf9,\n+    0xfe, 0xe4, 0xe9, 0x02, 0xd0, 0x06, 0x14, 0xd7, 0xfc, 0xec, 0x06, 0x10,\n+    0xfc, 0xf0, 0x1c, 0xe7, 0xec, 0xe3, 0x03, 0x21, 0xe4, 0x04, 0x12, 0xf0,\n+    0xf3, 0xed, 0x16, 0x36, 0x02, 0xfd, 0x13, 0x11, 0xdf, 0xeb, 0x19, 0x07,\n+    0x10, 0x0c, 0xf9, 0x08, 0xf8, 0xf4, 0x1d, 0xfd, 0x1d, 0x16, 0xf4, 0x0a,\n+    0x08, 0xec, 0x0c, 0x09, 0x3d, 0xe0, 0x0b, 0xee, 0x10, 0xd1, 0x1e, 0x15,\n+    0x43, 0xeb, 0xfa, 0xf3, 0x05, 0xc7, 0xf2, 0xd9, 0x25, 0x20, 0xee, 0xe9,\n+    0xfd, 0xce, 0x16, 0x0c, 0x27, 0x06, 0x0a, 0x06, 0xf9, 0xd6, 0x0b, 0x05,\n+    0xe8, 0x02, 0xe8, 0xd2, 0x10, 0x01, 0xf2, 0x15, 0x09, 0x04, 0xd3, 0xe2,\n+    0xfe, 0xf0, 0x32, 0x1b, 0xd9, 0xf5, 0xea, 0xcc, 0xcb, 0x10, 0x1c, 0xf1,\n+    0x3b, 0x02, 0xd4, 0xbf, 0xca, 0xfe, 0x12, 0xdb, 0x3b, 0xf8, 0xd5, 0xe7,\n+    0x13, 0x10, 0x1a, 0xf4, 0x38, 0x09, 0x08, 0xee, 0xf4, 0xf4, 0x3c, 0xf7,\n+    0x15, 0x04, 0xe4, 0xfa, 0xf4, 0x04, 0xee, 0xf4, 0x07, 0xf8, 0xe9, 0x3b,\n+    0xe2, 0x1f, 0xd5, 0xed, 0xe6, 0xfd, 0x18, 0x49, 0x21, 0x06, 0xd8, 0xde,\n+    0xfa, 0xf0, 0x1b, 0xfe, 0xde, 0x08, 0xf7, 0x14, 0xc7, 0x0f, 0x1d, 0xcf,\n+    0x00, 0xea, 0xff, 0x1b, 0xd5, 0x08, 0x0d, 0xd9, 0xf1, 0xf4, 0x16, 0x23,\n+    0xd8, 0x0c, 0x29, 0xdc, 0xf1, 0xf2, 0x21, 0x49, 0xfc, 0xe2, 0x08, 0x01,\n+    0xf0, 0xf8, 0x17, 0xf9, 0x0f, 0xf5, 0xfa, 0x1a, 0xef, 0xec, 0x09, 0xeb,\n+    0x1a, 0x0c, 0x17, 0x09, 0x11, 0xe9, 0x1a, 0xf7, 0x29, 0xf9, 0xfd, 0x07,\n+    0x01, 0xdd, 0x0a, 0xec, 0x22, 0x15, 0x03, 0xfd, 0xe2, 0xd2, 0x15, 0xec,\n+    0x4d, 0xd7, 0xfc, 0xf6, 0x0b, 0xcc, 0x0e, 0x04, 0x03, 0xf7, 0xfb, 0xfb,\n+    0x0d, 0xeb, 0x19, 0x07, 0xf4, 0xf4, 0xe5, 0xde, 0x22, 0x07, 0xea, 0xf7,\n+    0xeb, 0x23, 0xc8, 0xee, 0x03, 0x04, 0x0f, 0x19, 0xc3, 0xf8, 0x06, 0xd0,\n+    0xf7, 0xfe, 0x0e, 0xe7, 0x0a, 0x02, 0xb0, 0xb8, 0x00, 0xfb, 0x18, 0x0f,\n+    0x22, 0xf7, 0xe9, 0xdc, 0x09, 0x15, 0x23, 0x0d, 0x22, 0x13, 0xe2, 0xed,\n+    0xeb, 0x18, 0x20, 0x0b, 0x12, 0xfc, 0x02, 0xf1, 0xdb, 0x0e, 0xe1, 0x04,\n+    0xdb, 0x0f, 0xf3, 0x1a, 0x06, 0xef, 0xdb, 0xdc, 0xdd, 0xfb, 0x00, 0x2a,\n+    0x20, 0xfd, 0xc1, 0xe3, 0xef, 0x01, 0x14, 0xf2, 0x14, 0x00, 0x0f, 0x28,\n+    0xd9, 0xff, 0xf4, 0xdc, 0x09, 0xfa, 0x1c, 0x08, 0xd1, 0x03, 0x0a, 0xf4,\n+    0xe4, 0xdb, 0x20, 0x30, 0xea, 0x06, 0x11, 0xe2, 0x26, 0xf7, 0x16, 0x22,\n+    0xf9, 0x07, 0x02, 0xf5, 0xf6, 0xfb, 0x1d, 0x0c, 0x16, 0x0a, 0x07, 0xf9,\n+    0x11, 0xde, 0x20, 0x08, 0x19, 0x04, 0x0a, 0x0b, 0x0c, 0xf7, 0xf4, 0xfc,\n+    0x41, 0xf1, 0xf8, 0x16, 0x09, 0xdc, 0x0e, 0x1a, 0x2b, 0x1f, 0xe7, 0xfe,\n+    0x01, 0xe0, 0xfd, 0xe2, 0x34, 0xec, 0xf3, 0xf5, 0x03, 0xec, 0x0b, 0xfb,\n+    0x04, 0xf6, 0xdd, 0xfd, 0x06, 0x14, 0x0d, 0xfa, 0xfc, 0xf1, 0x0a, 0xca,\n+    0x01, 0xec, 0x0e, 0x0e, 0xec, 0xd7, 0xee, 0xd4, 0xf2, 0xfe, 0x16, 0xfa,\n+    0xbd, 0x0d, 0xef, 0xcb, 0xc4, 0xee, 0xed, 0x13, 0x10, 0x19, 0xf8, 0xb1,\n+    0xf1, 0xe3, 0x00, 0xf3, 0x0c, 0xf6, 0xde, 0xc6, 0x15, 0x27, 0x14, 0x29,\n+    0x15, 0xf6, 0xf4, 0xf5, 0xe7, 0x00, 0x0b, 0x2f, 0x0c, 0xef, 0x03, 0x0f,\n+    0xfd, 0x08, 0xf3, 0xf9, 0xf9, 0x05, 0x0d, 0x34, 0x15, 0x1b, 0xc8, 0xd1,\n+    0xf2, 0x1b, 0x0a, 0x22, 0x12, 0x11, 0xe9, 0xf4, 0xe1, 0x2a, 0x20, 0x03,\n+    0xf2, 0xf8, 0x14, 0x0b, 0xd0, 0xf4, 0x0e, 0xbf, 0xc6, 0xd8, 0x04, 0x05,\n+    0xf8, 0xf4, 0x04, 0xc9, 0xea, 0xfd, 0xf7, 0xfa, 0xe3, 0x1b, 0x11, 0xde,\n+    0x0c, 0x11, 0x25, 0x29, 0xe5, 0x02, 0xef, 0xef, 0x02, 0xfa, 0x1a, 0x21,\n+    0x19, 0x09, 0x08, 0x05, 0x04, 0xe5, 0xfa, 0xed, 0x2d, 0x26, 0xfa, 0x17,\n+    0xf6, 0xe8, 0x12, 0x12, 0x31, 0xfc, 0x0d, 0x00, 0xf7, 0xeb, 0x19, 0xf1,\n+    0x2a, 0x06, 0x14, 0xec, 0x08, 0xd3, 0x21, 0x07, 0x32, 0xe3, 0x02, 0x0b,\n+    0xfb, 0xd8, 0x27, 0x07, 0x05, 0xe6, 0xf5, 0xf5, 0x0a, 0xf7, 0x2c, 0x2a,\n+    0xd8, 0x1b, 0xda, 0xf7, 0xea, 0xf6, 0xf9, 0x0e, 0xf8, 0x0c, 0x05, 0xc7,\n+    0xd6, 0x06, 0x12, 0xe3, 0xe1, 0xe1, 0xd8, 0xdb, 0xc6, 0xf8, 0xe6, 0xfa,\n+    0x0c, 0x07, 0xf8, 0xe7, 0xe1, 0x0f, 0x00, 0xf3, 0x03, 0xf0, 0xde, 0xcc,\n+    0xf5, 0xfc, 0xef, 0x1e, 0x16, 0x13, 0xfb, 0xf4, 0x03, 0xe9, 0xfc, 0xfa,\n+    0x15, 0xe8, 0x15, 0x09, 0xf1, 0x0d, 0xdb, 0x0a, 0xe8, 0x09, 0xf5, 0x1a,\n+    0x04, 0xf8, 0xd8, 0xd4, 0x04, 0xee, 0x25, 0x29, 0x09, 0xfe, 0xf3, 0xf5,\n+    0xd4, 0x0a, 0x15, 0x19, 0xf5, 0x12, 0xfe, 0x04, 0xe7, 0x01, 0xeb, 0xde,\n+    0xbe, 0xfe, 0x09, 0x12, 0xdf, 0x13, 0xe0, 0xef, 0xc7, 0xff, 0x03, 0x08,\n+    0xfe, 0xf2, 0x19, 0xe0, 0xe4, 0x0c, 0x22, 0x1e, 0x05, 0xf7, 0x16, 0xf2,\n+    0xf9, 0x06, 0x17, 0xf6, 0x0c, 0x1e, 0x23, 0x08, 0xfe, 0xdc, 0xfd, 0x17,\n+    0x11, 0xdf, 0xf5, 0x0f, 0x01, 0x03, 0x08, 0xee, 0x1b, 0x02, 0x0b, 0x1b,\n+    0x0c, 0x16, 0x1a, 0x00, 0x0f, 0x26, 0x14, 0xf8, 0xf4, 0xf3, 0x19, 0x16,\n+    0x22, 0x0a, 0xd0, 0xf9, 0xf1, 0x05, 0x2b, 0x1e, 0x1e, 0xef, 0xf5, 0x06,\n+    0x05, 0xe7, 0x3f, 0x2a, 0x06, 0xf0, 0x15, 0x14, 0x13, 0x20, 0x1b, 0xde,\n+    0x10, 0x05, 0x33, 0xf8, 0x08, 0x04, 0x17, 0x0d, 0x0f, 0xf6, 0x01, 0xed,\n+    0x28, 0x25, 0x1c, 0x13, 0xfb, 0xea, 0xfb, 0xf3, 0x1c, 0xf9, 0x1f, 0xf0,\n+    0xfb, 0x17, 0xf8, 0xff, 0x10, 0xf7, 0x0b, 0x24, 0x04, 0x00, 0x0d, 0x0c,\n+    0xf7, 0x0a, 0x16, 0x13, 0xf8, 0x05, 0x0a, 0xf1, 0xf5, 0xee, 0xf8, 0x14,\n+    0x0e, 0xed, 0xfe, 0x1b, 0xfe, 0x17, 0x13, 0x10, 0x12, 0x21, 0x1c, 0xfa,\n+    0xe5, 0x0b, 0x08, 0x0c, 0x10, 0x1b, 0x03, 0xef, 0x0d, 0x05, 0x0a, 0xf0,\n+    0x04, 0x11, 0x15, 0x00, 0xfd, 0xef, 0x02, 0x18, 0xf4, 0x09, 0xfa, 0xf6,\n+    0x02, 0xf7, 0xfd, 0x13, 0xef, 0x13, 0xf7, 0xf9, 0x17, 0x0f, 0xfa, 0xf8,\n+    0x15, 0xff, 0x04, 0xef, 0xf0, 0x15, 0xfa, 0xfe, 0xf0, 0xf4, 0xed, 0x06,\n+    0x1c, 0x02, 0xfb, 0xf7, 0x05, 0xfb, 0x0c, 0xef, 0xf4, 0xf0, 0xf6, 0xec,\n+    0x17, 0xf3, 0xf5, 0xef, 0x02, 0xfd, 0xe5, 0x21, 0x0c, 0xf1, 0x1e, 0x08,\n+    0xf1, 0x0b, 0xf7, 0x09, 0x1d, 0xf2, 0xf9, 0xf2, 0xfb, 0x0e, 0xed, 0xf8,\n+    0xfa, 0xdd, 0xf0, 0xfd, 0xdb, 0x1a, 0xf4, 0xef, 0x0c, 0x06, 0x0f, 0xdf,\n+    0xe2, 0x06, 0x06, 0xee, 0xfa, 0x0d, 0x17, 0xfc, 0xf9, 0x15, 0x1a, 0xe4,\n+    0xfb, 0x0c, 0x1a, 0xfc, 0x1b, 0x04, 0x07, 0x20, 0xff, 0x09, 0x0f, 0xf2,\n+    0x26, 0x19, 0x1f, 0x0d, 0x02, 0x16, 0x03, 0x03, 0xfd, 0x05, 0x01, 0x1b,\n+    0x0a, 0x11, 0xfa, 0x21, 0x13, 0xfb, 0x0c, 0x05, 0xf3, 0xdd, 0xe4, 0xdc,\n+    0x22, 0x1b, 0x15, 0x14, 0x0e, 0xe8, 0x00, 0xf7, 0xf8, 0xf4, 0x0b, 0x0b,\n+    0xfd, 0x21, 0xe3, 0x0f, 0xe1, 0x22, 0x01, 0x21, 0x0b, 0x1f, 0x09, 0x10,\n+    0xe2, 0x18, 0x11, 0x0e, 0xed, 0x01, 0x14, 0x12, 0xfd, 0x11, 0xf6, 0xe9,\n+    0x20, 0xe1, 0xf5, 0x1b, 0x27, 0x22, 0xfa, 0xf7, 0xfe, 0x13, 0xf6, 0xdc,\n+    0x06, 0x0d, 0xf4, 0x05, 0x20, 0x0d, 0x0b, 0xe4, 0x15, 0x28, 0x0c, 0x00,\n+    0xf5, 0x07, 0x0c, 0x0a, 0x06, 0x0e, 0xf3, 0xfb, 0xfe, 0x04, 0x08, 0xf4,\n+    0xef, 0x03, 0xe4, 0xeb, 0x06, 0xee, 0xed, 0xdb, 0xeb, 0x1d, 0xf4, 0xfa,\n+    0x0c, 0xfc, 0xfe, 0x11, 0xf7, 0xf8, 0xf5, 0xef, 0xe7, 0xfc, 0x1b, 0xdc,\n+    0x17, 0xfd, 0xfe, 0x00, 0xea, 0xf4, 0xf1, 0xf7, 0x0f, 0x21, 0x04, 0xfd,\n+    0x0d, 0x0c, 0x0a, 0x14, 0xfd, 0x19, 0x09, 0x01, 0xfd, 0xe2, 0x0c, 0x0c,\n+    0xe0, 0x25, 0xfb, 0xff, 0x0d, 0x18, 0xf6, 0x0b, 0x19, 0x12, 0x10, 0x09,\n+    0x0b, 0x06, 0x12, 0x1c, 0x10, 0x03, 0x13, 0x0a, 0x05, 0x0f, 0x09, 0x01,\n+    0x21, 0xe4, 0x01, 0x26, 0xf9, 0xf4, 0x05, 0x19, 0x00, 0xff, 0x0b, 0xff,\n+    0x16, 0x09, 0xe7, 0xee, 0xed, 0xf5, 0x0f, 0x2f, 0xee, 0x19, 0x03, 0x0a,\n+    0x10, 0xee, 0xf7, 0x2e, 0xf4, 0x08, 0xf7, 0xee, 0x07, 0x00, 0xfc, 0x0e,\n+    0xf0, 0x12, 0x08, 0x05, 0xed, 0x11, 0xfc, 0xfb, 0xf7, 0x25, 0xf1, 0x05,\n+    0x0c, 0xf9, 0xfa, 0x03, 0x0c, 0x16, 0x04, 0x25, 0xf8, 0xe7, 0xfc, 0x11,\n+    0x0d, 0x19, 0xd8, 0xfa, 0x0b, 0x06, 0xfd, 0xef, 0x13, 0xf6, 0xff, 0x0e,\n+    0xf9, 0x04, 0xf1, 0xdc, 0xfb, 0xe1, 0xf6, 0x0b, 0x15, 0x07, 0xf7, 0x02,\n+    0x0e, 0xf1, 0xfd, 0xe3, 0xeb, 0x07, 0xf1, 0xef, 0x03, 0xfe, 0xf8, 0x07,\n+    0x10, 0xf7, 0x00, 0xf9, 0xf2, 0x0e, 0xf9, 0xf2, 0x1d, 0xf5, 0xd8, 0xff,\n+    0xe6, 0x18, 0x2a, 0x1b, 0x03, 0x16, 0xfe, 0xf4, 0xf5, 0xfd, 0x04, 0x01,\n+    0xfe, 0xfe, 0x07, 0xfc, 0x0e, 0xfa, 0x15, 0xeb, 0x02, 0x15, 0xea, 0xfd,\n+    0x04, 0xe5, 0xfe, 0xed, 0xfe, 0x1a, 0x09, 0x2a, 0x1b, 0xdf, 0xfb, 0xf8,\n+    0xf1, 0x04, 0x1a, 0x34, 0x07, 0xf9, 0x0d, 0xf5, 0xef, 0xec, 0x10, 0x1a,\n+    0x0b, 0x0f, 0x13, 0xfe, 0x10, 0x22, 0x1e, 0x02, 0xe6, 0xf7, 0x11, 0xfa,\n+    0x11, 0xfc, 0x1b, 0x21, 0x12, 0xf4, 0x18, 0x16, 0x29, 0xe4, 0x0c, 0x2e,\n+    0x12, 0x07, 0x20, 0xf6, 0x1d, 0xf4, 0x12, 0x33, 0xf4, 0xee, 0xfe, 0x05,\n+    0x06, 0xfb, 0x13, 0x0c, 0x0e, 0xf0, 0x00, 0xf8, 0xee, 0xf3, 0x17, 0x00,\n+    0xf7, 0xfb, 0xfc, 0x0f, 0xf4, 0xd5, 0x0a, 0xed, 0xeb, 0xf5, 0xe9, 0xef,\n+    0xd8, 0xf0, 0xf8, 0xe2, 0x19, 0xf7, 0xf8, 0x0a, 0x0b, 0x09, 0xfa, 0xe7,\n+    0x0f, 0xfc, 0xe8, 0x02, 0x00, 0x1a, 0xfe, 0xfd, 0x1b, 0xe6, 0xef, 0x0f,\n+    0xe3, 0x10, 0xf1, 0xe2, 0x0b, 0x0e, 0x06, 0x29, 0x00, 0x01, 0xf3, 0x00,\n+    0x11, 0x04, 0xf2, 0xf7, 0xea, 0xf8, 0xe0, 0x09, 0x0e, 0x13, 0xf4, 0x00,\n+    0x09, 0xfa, 0xf5, 0x0c, 0xff, 0x18, 0x08, 0x0d, 0xfa, 0xde, 0xfa, 0x03,\n+    0xf2, 0xf3, 0x1b, 0xeb, 0x06, 0xea, 0xfb, 0xff, 0x0d, 0xf5, 0x10, 0x17,\n+    0xf8, 0xe8, 0xf1, 0xf1, 0xf5, 0x00, 0x03, 0x0a, 0x09, 0x0a, 0xf3, 0xfb,\n+    0x33, 0x26, 0xe7, 0x17, 0xe3, 0xfa, 0x1f, 0x24, 0xfc, 0x07, 0x02, 0xe2,\n+    0xeb, 0x08, 0x2c, 0xf8, 0x02, 0x1f, 0x04, 0xeb, 0x0b, 0x04, 0x17, 0xf7,\n+    0xff, 0x1c, 0xed, 0x00, 0x3f, 0xd5, 0x17, 0x1d, 0xfe, 0x03, 0xf1, 0x1c,\n+    0x17, 0xec, 0x0e, 0x54, 0xee, 0xf5, 0x25, 0xfa, 0x08, 0xee, 0x13, 0x32,\n+    0x0e, 0xd8, 0x09, 0x0f, 0xee, 0xe5, 0x06, 0x10, 0xf4, 0xfb, 0xe4, 0xfb,\n+    0x09, 0xde, 0x13, 0xff, 0x02, 0xf9, 0xec, 0x0a, 0x00, 0xe9, 0xfd, 0xdc,\n+    0x06, 0x04, 0xdb, 0x06, 0x01, 0xf8, 0x09, 0xe2, 0x0c, 0x14, 0xda, 0xfe,\n+    0x20, 0xe3, 0x09, 0xda, 0x14, 0x12, 0xe1, 0x05, 0xff, 0xf3, 0x00, 0x08,\n+    0xfb, 0xf1, 0xfd, 0xf3, 0x04, 0xfa, 0x08, 0xff, 0x01, 0x1d, 0x0b, 0xfd,\n+    0x0a, 0xf4, 0xfb, 0xfc, 0xf9, 0x19, 0xed, 0xfc, 0xf2, 0x06, 0xe7, 0x02,\n+    0xf6, 0x0c, 0xfc, 0xfb, 0x01, 0x0c, 0xeb, 0x1b, 0xff, 0xff, 0x08, 0x1d,\n+    0xf7, 0xe8, 0xfc, 0xf4, 0x0c, 0xfa, 0xf1, 0xee, 0xed, 0xdd, 0xfc, 0x06,\n+    0x05, 0xdc, 0x1a, 0xfc, 0xf9, 0x07, 0xdf, 0x1b, 0x14, 0x0c, 0xfc, 0x01,\n+    0x16, 0xe1, 0xed, 0x09, 0x34, 0xee, 0xe4, 0x1c, 0x1b, 0xfc, 0x3b, 0x03,\n+    0x15, 0xf2, 0xeb, 0x14, 0x00, 0xdd, 0x24, 0x04, 0xf1, 0xed, 0xfd, 0xe6,\n+    0x32, 0xf9, 0x24, 0x04, 0x0e, 0x22, 0x03, 0x14, 0x2f, 0xf5, 0x1a, 0x37,\n+    0xf4, 0x18, 0x03, 0x0f, 0x4b, 0xe6, 0x0d, 0x5c, 0xf7, 0x1f, 0x1c, 0xe6,\n+    0x23, 0x0c, 0x15, 0x4e, 0xe0, 0x05, 0x1c, 0xec, 0xff, 0x04, 0x13, 0x15,\n+    0xee, 0x07, 0xec, 0x0c, 0xdd, 0xf8, 0x0e, 0x03, 0x0c, 0x1f, 0xe8, 0x0e,\n+    0xf5, 0xec, 0xfc, 0xe2, 0xe8, 0xfb, 0xf6, 0x00, 0xe5, 0xea, 0xf3, 0xd3,\n+    0xf5, 0xfd, 0xd2, 0xfd, 0x1b, 0xed, 0x09, 0xd1, 0x23, 0xfa, 0xd4, 0xf7,\n+    0xe9, 0xf0, 0x0a, 0xd6, 0x14, 0x03, 0xe6, 0x10, 0xf4, 0x18, 0xfe, 0xe1,\n+    0x0b, 0x25, 0xf5, 0xfc, 0xe9, 0xf2, 0xe9, 0xf4, 0x0d, 0xf5, 0x00, 0xf9,\n+    0x17, 0x02, 0xfd, 0x03, 0x04, 0xf8, 0xf5, 0x14, 0xe3, 0xd3, 0xeb, 0xe7,\n+    0x09, 0xf3, 0x14, 0x17, 0xee, 0xe6, 0xf6, 0xff, 0x11, 0x26, 0xf4, 0xf7,\n+    0x02, 0xfa, 0x05, 0x08, 0x16, 0xff, 0x0d, 0xf7, 0xf1, 0xf7, 0xe6, 0xfb,\n+    0x04, 0x04, 0x07, 0x02, 0x04, 0x09, 0xf5, 0xfc, 0x5f, 0xd6, 0xe7, 0x2a,\n+    0x23, 0xf4, 0x1b, 0x06, 0x01, 0xea, 0xe7, 0x05, 0x25, 0xe3, 0x25, 0x07,\n+    0xea, 0xfb, 0xfb, 0x09, 0x25, 0xde, 0x37, 0x04, 0x07, 0xe5, 0xff, 0x14,\n+    0x2f, 0x0a, 0x30, 0x23, 0x04, 0xf0, 0x23, 0xfe, 0x1c, 0xd2, 0x2b, 0x55,\n+    0x01, 0xe5, 0x26, 0xfe, 0x14, 0xed, 0x24, 0x46, 0xe6, 0xee, 0x0f, 0xfd,\n+    0xed, 0xef, 0x0e, 0x1e, 0x05, 0x0a, 0x12, 0xff, 0xe4, 0xf5, 0x0c, 0xed,\n+    0xfd, 0xea, 0x0d, 0x13, 0x1a, 0xe5, 0xfc, 0xc2, 0xef, 0x0a, 0xe2, 0x0f,\n+    0xfe, 0xff, 0x0c, 0xf0, 0xff, 0xdf, 0xea, 0x00, 0xf6, 0xe1, 0x04, 0xd8,\n+    0x26, 0x20, 0xdc, 0xf4, 0x19, 0x06, 0xe8, 0xd2, 0x10, 0x04, 0xf1, 0x02,\n+    0x0c, 0x06, 0xf0, 0xf0, 0x04, 0x1f, 0xf4, 0xf5, 0xed, 0xf1, 0xfa, 0xf1,\n+    0x04, 0x02, 0xf8, 0xfb, 0x04, 0xf1, 0xe5, 0xe4, 0x0a, 0xf0, 0xfe, 0xef,\n+    0x1c, 0xe3, 0xeb, 0xf3, 0x00, 0x17, 0x01, 0x13, 0x19, 0xda, 0xf8, 0x06,\n+    0xde, 0x11, 0xea, 0xf7, 0xf4, 0xef, 0x03, 0x04, 0x0b, 0xe8, 0x08, 0x0e,\n+    0xe2, 0xee, 0xde, 0x06, 0x0e, 0x29, 0xfb, 0xfa, 0x00, 0x02, 0xec, 0x1b,\n+    0x52, 0xff, 0xde, 0x3a, 0x2f, 0x13, 0x30, 0xe9, 0xff, 0xf6, 0xe7, 0x15,\n+    0x1d, 0xd9, 0x3c, 0x0f, 0xe6, 0x14, 0xee, 0x13, 0x1f, 0xe7, 0x33, 0x08,\n+    0xfc, 0x06, 0x0c, 0x08, 0x19, 0xd9, 0x2b, 0x1f, 0x07, 0x10, 0x24, 0x16,\n+    0x29, 0xfc, 0x31, 0x4d, 0xf0, 0xd9, 0x3f, 0xf2, 0x20, 0xe2, 0x25, 0x49,\n+    0xe5, 0xec, 0x0a, 0xf5, 0xf2, 0xd9, 0x22, 0x1f, 0xed, 0x22, 0x02, 0x0a,\n+    0x16, 0x08, 0xf7, 0xfb, 0x0e, 0xfb, 0xfb, 0x1d, 0xf3, 0x1c, 0xf6, 0xe1,\n+    0xcf, 0x19, 0xf4, 0x0f, 0xee, 0xf9, 0x04, 0xd1, 0xf9, 0xe2, 0xda, 0xf1,\n+    0x24, 0xf5, 0x07, 0xdf, 0x1d, 0xf9, 0xdb, 0x18, 0x0b, 0xea, 0x08, 0xca,\n+    0xf2, 0xfa, 0xec, 0x04, 0x0e, 0x17, 0xed, 0xf1, 0x06, 0x15, 0xfc, 0xfd,\n+    0x08, 0xfa, 0xe3, 0xe4, 0x0a, 0xfc, 0xee, 0x08, 0xf5, 0x09, 0xef, 0xee,\n+    0x06, 0xef, 0xe1, 0x19, 0x07, 0xe8, 0xe6, 0xdf, 0xea, 0x0d, 0xf1, 0x16,\n+    0xee, 0xed, 0xf8, 0x09, 0xfa, 0xfb, 0x0c, 0xf8, 0xeb, 0xda, 0x00, 0xfc,\n+    0x04, 0xfe, 0xf5, 0xff, 0xf6, 0xe1, 0x0c, 0x0a, 0x13, 0x0d, 0xf6, 0xf5,\n+    0x15, 0x07, 0xca, 0xec, 0x50, 0x0e, 0xd0, 0x26, 0x4c, 0xf8, 0x23, 0xeb,\n+    0xff, 0x08, 0xe3, 0x11, 0x2c, 0xf9, 0x2a, 0xf1, 0xe9, 0x0b, 0xe9, 0x0f,\n+    0x15, 0xec, 0x33, 0x11, 0x0c, 0x0d, 0x01, 0x01, 0x32, 0xe3, 0x41, 0x27,\n+    0x11, 0x02, 0x2e, 0x07, 0x09, 0xe3, 0x22, 0x4d, 0xf1, 0x05, 0x27, 0x03,\n+    0x25, 0xf5, 0x2c, 0x3b, 0xf4, 0x00, 0x16, 0x0b, 0xec, 0xfe, 0x17, 0x0d,\n+    0xff, 0xe7, 0xfe, 0x24, 0x06, 0xee, 0xf0, 0xe9, 0xfa, 0x1c, 0xf2, 0x19,\n+    0x08, 0xfa, 0xff, 0xd2, 0x01, 0x02, 0xea, 0x05, 0xf2, 0xf4, 0x0b, 0xd2,\n+    0xf9, 0x0d, 0xcd, 0x0d, 0x12, 0xf2, 0x0e, 0xe1, 0x1f, 0x00, 0xe7, 0x14,\n+    0x04, 0xff, 0x09, 0xdb, 0xfc, 0xd9, 0x06, 0xf9, 0xeb, 0x01, 0xef, 0xfa,\n+    0xfb, 0xf5, 0xfc, 0xfb, 0x14, 0xe2, 0xf9, 0xf5, 0x02, 0xfd, 0xfc, 0x01,\n+    0xf7, 0xf3, 0x00, 0xec, 0xe7, 0xf2, 0x00, 0xf1, 0x11, 0xec, 0xf0, 0xe9,\n+    0x11, 0x0a, 0x07, 0x04, 0x01, 0xee, 0xfb, 0xf2, 0x14, 0x01, 0x12, 0xf0,\n+    0xf2, 0xf1, 0xf0, 0xfb, 0x08, 0x03, 0xf8, 0x01, 0xe8, 0xf9, 0x17, 0x26,\n+    0x0f, 0xea, 0xf7, 0xf8, 0x1e, 0xfe, 0xf2, 0xf8, 0x3f, 0x00, 0xd4, 0x1c,\n+    0x53, 0xfe, 0x1e, 0x0f, 0xef, 0xdd, 0xed, 0x10, 0x19, 0xe7, 0x34, 0x0e,\n+    0xde, 0xdf, 0xfa, 0x0e, 0x29, 0xe3, 0x16, 0x09, 0x06, 0x12, 0xeb, 0xf9,\n+    0x32, 0xe0, 0x1a, 0x1d, 0xf3, 0xed, 0x10, 0x07, 0x31, 0xf2, 0x12, 0x52,\n+    0xeb, 0xf7, 0x1e, 0xf7, 0x1a, 0xdc, 0x3e, 0x33, 0xe3, 0xfb, 0x1f, 0x0b,\n+    0x08, 0xfe, 0x13, 0x1a, 0xf4, 0xf8, 0xfe, 0x08, 0xfc, 0xe9, 0xfe, 0xeb,\n+    0xe6, 0xf6, 0x02, 0x18, 0x02, 0xe8, 0xfb, 0xf3, 0x01, 0x08, 0xd7, 0x13,\n+    0x04, 0xe6, 0x02, 0xe6, 0xd7, 0x01, 0xd4, 0xf0, 0x0e, 0x05, 0x18, 0xe5,\n+    0x08, 0xe5, 0xd2, 0x16, 0x12, 0xfe, 0x0e, 0xd3, 0xfc, 0x1f, 0xe9, 0xf8,\n+    0x11, 0x06, 0xf3, 0xd5, 0xf8, 0xff, 0xf0, 0x04, 0x0a, 0xd9, 0xf8, 0xfd,\n+    0xf5, 0x12, 0xff, 0x06, 0x1b, 0xe6, 0xfe, 0xfe, 0xde, 0xee, 0xf6, 0x18,\n+    0xf1, 0xf8, 0x06, 0xf3, 0x02, 0xea, 0x04, 0x14, 0xfc, 0xee, 0xe6, 0x09,\n+    0xf9, 0xee, 0xe3, 0xe7, 0xfc, 0xd9, 0xef, 0xfc, 0x0a, 0x0c, 0x03, 0xf6,\n+    0xe2, 0x11, 0x0f, 0x19, 0x18, 0x10, 0xef, 0xe5, 0x22, 0xf5, 0xe5, 0xe9,\n+    0x4b, 0xf7, 0xdb, 0x0c, 0x4f, 0xde, 0x22, 0x16, 0x09, 0x16, 0xd1, 0xf8,\n+    0x19, 0xe0, 0x24, 0xfe, 0xb8, 0xfb, 0xe5, 0x12, 0x1c, 0xe3, 0x22, 0x09,\n+    0x05, 0x29, 0xf7, 0x10, 0x31, 0xe1, 0x33, 0x3f, 0xfd, 0xed, 0x04, 0x03,\n+    0x2e, 0xed, 0x30, 0x36, 0xee, 0x16, 0x2f, 0xf5, 0x1b, 0xdc, 0x3a, 0x56,\n+    0xe5, 0xef, 0x26, 0xff, 0x03, 0xd7, 0x31, 0x16, 0xef, 0xf1, 0x08, 0x13,\n+    0x01, 0x02, 0x03, 0xf1, 0xf2, 0x08, 0xff, 0x05, 0x12, 0xf2, 0xee, 0xda,\n+    0xed, 0xec, 0xea, 0xf7, 0x0c, 0xf1, 0x09, 0xe6, 0xe6, 0x00, 0xcc, 0x10,\n+    0x0d, 0x0d, 0x20, 0xf4, 0x18, 0x23, 0xec, 0xf9, 0x00, 0xe4, 0x07, 0xd4,\n+    0xfb, 0x16, 0xd2, 0x01, 0xe6, 0x01, 0x06, 0xf0, 0xfe, 0x03, 0xf3, 0x09,\n+    0x01, 0x0d, 0x05, 0xf7, 0xd4, 0x02, 0xfb, 0xfb, 0x08, 0xf0, 0x1f, 0xf3,\n+    0xfe, 0xeb, 0x02, 0x0e, 0x1b, 0x0f, 0x04, 0xf5, 0xf0, 0x1f, 0x14, 0xf7,\n+    0x06, 0xdc, 0xf9, 0xe9, 0x01, 0xff, 0x08, 0xf2, 0x06, 0xff, 0xff, 0xf3,\n+    0x05, 0x1a, 0xfc, 0xfa, 0xeb, 0xfb, 0xfa, 0x12, 0x20, 0xf6, 0xe0, 0xe8,\n+    0x1c, 0xfa, 0xd6, 0x0d, 0x2c, 0x04, 0xe1, 0x09, 0x3b, 0xd3, 0x2a, 0xee,\n+    0xf7, 0xed, 0xf1, 0xf7, 0x0d, 0xf0, 0x32, 0x0f, 0xc9, 0x0e, 0x00, 0x10,\n+    0x24, 0xfb, 0x31, 0xf0, 0xf4, 0xdd, 0xf5, 0x04, 0x25, 0xc7, 0x27, 0x25,\n+    0x16, 0x11, 0x2e, 0x09, 0x30, 0xd1, 0x2c, 0x34, 0xe6, 0xf0, 0x21, 0xf5,\n+    0x21, 0xc8, 0x40, 0x39, 0xde, 0xf0, 0x12, 0xf3, 0x10, 0xe8, 0x1f, 0x18,\n+    0xfa, 0xea, 0x07, 0x11, 0xdf, 0xed, 0xfa, 0xf0, 0x07, 0xef, 0xf3, 0x05,\n+    0x10, 0xe5, 0xf3, 0xe9, 0xe9, 0xe8, 0xd6, 0x01, 0xf9, 0x05, 0x0b, 0xee,\n+    0xf9, 0x12, 0xe3, 0x05, 0xfd, 0xe6, 0x16, 0xe2, 0x1b, 0x12, 0xc5, 0x00,\n+    0xfd, 0x02, 0x04, 0xd2, 0xff, 0xec, 0xf6, 0xfd, 0x00, 0xe4, 0xf7, 0xf3,\n+    0xeb, 0xfa, 0xf8, 0x0d, 0x03, 0xfa, 0xfe, 0xe4, 0xdb, 0xe3, 0x06, 0xff,\n+    0xf4, 0xf2, 0x1b, 0xf1, 0xf7, 0x02, 0x01, 0x04, 0x13, 0xe5, 0x0c, 0x05,\n+    0xf7, 0x0a, 0x03, 0x03, 0x0b, 0x03, 0xee, 0xf7, 0x21, 0x20, 0xff, 0xf3,\n+    0x09, 0xe5, 0xff, 0xec, 0x17, 0x00, 0x06, 0x14, 0xeb, 0xf2, 0x18, 0x16,\n+    0x1f, 0xec, 0xee, 0xe1, 0x1e, 0x03, 0xfa, 0xfe, 0x28, 0x03, 0xc9, 0x0c,\n+    0x3f, 0xd8, 0x30, 0x16, 0x03, 0xf8, 0xe9, 0xfb, 0x28, 0xe1, 0x36, 0x0a,\n+    0xdf, 0xe5, 0xeb, 0x08, 0x1c, 0xcd, 0x29, 0xf2, 0xfc, 0x0a, 0xed, 0x01,\n+    0x29, 0xf1, 0x20, 0x13, 0x04, 0xec, 0x17, 0x0a, 0x35, 0xc3, 0x1a, 0x46,\n+    0xe0, 0xd7, 0x3c, 0x09, 0x28, 0xd1, 0x22, 0x20, 0xd5, 0xfa, 0x28, 0xfa,\n+    0xff, 0xea, 0x1d, 0x23, 0xe0, 0x07, 0x07, 0x0f, 0xf1, 0xf1, 0x08, 0xf0,\n+    0xf8, 0xff, 0x05, 0x1b, 0x05, 0xfa, 0xf0, 0xfb, 0xe3, 0xe4, 0xcc, 0x1a,\n+    0xf9, 0x09, 0x06, 0xee, 0xf4, 0x03, 0xd0, 0x14, 0xf4, 0xff, 0x1d, 0xe8,\n+    0x11, 0xf4, 0xd1, 0xf4, 0x04, 0x0b, 0xfb, 0xdc, 0x0a, 0x0c, 0xeb, 0xed,\n+    0x06, 0xf3, 0x04, 0xdd, 0xdf, 0xf9, 0xea, 0xfc, 0xf5, 0xf2, 0xfb, 0xea,\n+    0xe3, 0x03, 0xee, 0x0e, 0xff, 0xdb, 0x1e, 0x04, 0xf7, 0x1a, 0x04, 0x0c,\n+    0x0d, 0xda, 0x04, 0xe9, 0xff, 0x04, 0x00, 0x0c, 0xf9, 0xe4, 0xfb, 0xf6,\n+    0x14, 0xde, 0x1b, 0x00, 0x0b, 0xfe, 0x06, 0xf8, 0x0f, 0xdc, 0x01, 0xef,\n+    0xef, 0x0d, 0xf8, 0xf1, 0x0f, 0xf9, 0xf9, 0xdf, 0x0d, 0xe4, 0xd9, 0xf9,\n+    0x2b, 0xee, 0xe8, 0x09, 0x40, 0xf9, 0x2f, 0x0a, 0xfa, 0xe8, 0xe9, 0x01,\n+    0x0e, 0xe7, 0x23, 0x0a, 0xd0, 0x19, 0xd3, 0x0e, 0x04, 0xda, 0x2b, 0x0f,\n+    0xe7, 0xe6, 0xf3, 0xfb, 0x2c, 0xd3, 0x36, 0x19, 0x0e, 0xfe, 0x03, 0x1a,\n+    0x2e, 0xd0, 0x23, 0x32, 0xf1, 0xe1, 0x2a, 0x09, 0x1b, 0xf6, 0x29, 0x3e,\n+    0xce, 0x15, 0x0a, 0xe8, 0xec, 0xdf, 0x44, 0x28, 0xd9, 0xfd, 0xfa, 0x09,\n+    0xff, 0xe7, 0x08, 0xec, 0xf4, 0xef, 0x01, 0x19, 0x11, 0xf3, 0xeb, 0xeb,\n+    0xed, 0x1a, 0xdd, 0x15, 0x0f, 0x07, 0xfe, 0xeb, 0xff, 0xd6, 0xd5, 0x04,\n+    0xf5, 0x07, 0x10, 0xe6, 0x0c, 0xe4, 0xda, 0x0c, 0x08, 0xee, 0x06, 0xd8,\n+    0xf8, 0xf1, 0xe0, 0x01, 0x08, 0xfe, 0xf9, 0xf3, 0xdf, 0x03, 0xe6, 0xf4,\n+    0x0a, 0xff, 0xf2, 0xe0, 0xd9, 0xeb, 0x01, 0x10, 0x02, 0xfc, 0x0d, 0x14,\n+    0xea, 0xf8, 0x03, 0x18, 0xf3, 0x09, 0xfc, 0x0c, 0x0b, 0x1f, 0xf5, 0x05,\n+    0xf7, 0xf9, 0x00, 0xfd, 0x04, 0xfc, 0x16, 0x07, 0x00, 0xdf, 0xf9, 0xfa,\n+    0x0c, 0xfb, 0xf4, 0xf7, 0xf0, 0xeb, 0x07, 0x17, 0x20, 0xfb, 0xf0, 0xec,\n+    0x04, 0x00, 0xf8, 0xf2, 0x2d, 0xf9, 0xd9, 0x0b, 0x55, 0xec, 0x33, 0x26,\n+    0xf8, 0x0a, 0xf2, 0x0b, 0x25, 0xdf, 0x29, 0x05, 0xd1, 0x14, 0xe2, 0xf2,\n+    0x12, 0xdd, 0x28, 0xfc, 0xec, 0x08, 0xfd, 0x02, 0x3a, 0xe6, 0x29, 0x25,\n+    0x0d, 0x10, 0x09, 0x0a, 0x32, 0xf5, 0x17, 0x2d, 0xea, 0xfb, 0x35, 0xfc,\n+    0x28, 0xd0, 0x29, 0x2f, 0xcb, 0x06, 0x0f, 0x04, 0xf2, 0xf3, 0x34, 0x1c,\n+    0xf4, 0x08, 0x05, 0xfc, 0xfd, 0xed, 0x0f, 0xf8, 0xe9, 0xf0, 0x09, 0x16,\n+    0xfe, 0x02, 0xff, 0xd4, 0xea, 0x0a, 0xeb, 0x0c, 0xf8, 0xf4, 0x09, 0xf4,\n+    0xf2, 0x07, 0xd9, 0x0b, 0xfd, 0xe4, 0x1a, 0xef, 0x14, 0x08, 0xd8, 0xfc,\n+    0xf5, 0xe1, 0x03, 0xcf, 0xf1, 0x11, 0xdb, 0x15, 0x07, 0x10, 0xf8, 0xfc,\n+    0xe2, 0xf1, 0xf5, 0xde, 0xff, 0xe7, 0x01, 0xea, 0xee, 0xe9, 0x02, 0x0a,\n+    0x18, 0xec, 0xfe, 0xf9, 0x09, 0xf3, 0x0e, 0x02, 0xf1, 0xfc, 0xf9, 0x16,\n+    0x05, 0x07, 0x09, 0x0d, 0x0e, 0xf7, 0x04, 0xed, 0x04, 0xdb, 0x04, 0x04,\n+    0xf6, 0xdc, 0xee, 0xec, 0xf5, 0xfe, 0xf4, 0x02, 0xe4, 0x0b, 0xe0, 0x17,\n+    0x0a, 0xe0, 0xf7, 0xdc, 0x11, 0xd6, 0xfe, 0xfa, 0x35, 0xde, 0xe6, 0x06,\n+    0x44, 0xf9, 0x35, 0x0a, 0xfb, 0xff, 0xec, 0xfb, 0x16, 0xd9, 0x23, 0x0f,\n+    0xd4, 0xef, 0xdf, 0x06, 0x0b, 0xd9, 0x25, 0xff, 0xf8, 0xeb, 0xf4, 0x0a,\n+    0x20, 0xe5, 0x22, 0x1c, 0xeb, 0xf4, 0x0d, 0x0c, 0x19, 0xe1, 0x1e, 0x31,\n+    0xe9, 0xfb, 0x20, 0xf0, 0x23, 0xfe, 0x35, 0x28, 0xb4, 0x06, 0x28, 0xe7,\n+    0xfb, 0xe9, 0x2a, 0x1a, 0xef, 0x15, 0x0c, 0xed, 0xf1, 0x04, 0x0e, 0x0a,\n+    0xff, 0x16, 0x01, 0x04, 0x17, 0xea, 0xec, 0xdc, 0xf4, 0xf7, 0x04, 0x16,\n+    0x1f, 0x0a, 0x11, 0xef, 0x12, 0xdf, 0xd9, 0x0c, 0xf5, 0x10, 0x02, 0xf3,\n+    0x10, 0x03, 0xd3, 0xf5, 0x0b, 0x02, 0x00, 0xcb, 0xf6, 0x23, 0xf6, 0xf1,\n+    0x1f, 0xf9, 0xfc, 0xf0, 0xf6, 0xfe, 0xfa, 0xf8, 0xf9, 0xf4, 0xfb, 0x0a,\n+    0xd6, 0x29, 0x09, 0x02, 0x00, 0xfc, 0xfc, 0xee, 0xf5, 0x05, 0xfb, 0x1e,\n+    0xf1, 0xf1, 0xf3, 0x02, 0xec, 0x1c, 0x0c, 0x0e, 0x0b, 0x04, 0xf6, 0xe7,\n+    0x14, 0x08, 0x27, 0x01, 0xfe, 0xe5, 0xe7, 0x01, 0x1b, 0xf0, 0xf6, 0xff,\n+    0xf4, 0xe7, 0xee, 0x18, 0x0d, 0x08, 0xf8, 0xd6, 0x07, 0xf4, 0x08, 0xff,\n+    0x1d, 0x13, 0xe7, 0x0b, 0x42, 0xef, 0x28, 0x00, 0xf9, 0xf0, 0xf3, 0x00,\n+    0x15, 0xfd, 0x1a, 0x22, 0xc1, 0xf5, 0xe0, 0xf8, 0x09, 0xe6, 0x0e, 0x05,\n+    0xf9, 0xf6, 0x01, 0x01, 0x13, 0xdc, 0x1f, 0x0d, 0xfb, 0x04, 0x08, 0x0b,\n+    0x15, 0xdb, 0x28, 0x34, 0xed, 0x0b, 0x3a, 0xed, 0x16, 0xe3, 0x39, 0x32,\n+    0xc4, 0x0b, 0x20, 0xe7, 0xf7, 0x02, 0x35, 0x24, 0xfc, 0xe8, 0x1c, 0xf8,\n+    0xf1, 0xfa, 0x0c, 0x1d, 0xf2, 0x05, 0xff, 0x12, 0x0f, 0x01, 0xec, 0xea,\n+    0xf0, 0x03, 0xe7, 0x15, 0xfd, 0x05, 0x08, 0xe0, 0x1b, 0xf8, 0xe1, 0x1e,\n+    0xed, 0xdc, 0x11, 0xeb, 0xfd, 0x1a, 0xeb, 0x09, 0xf9, 0xf3, 0x00, 0xe8,\n+    0xe6, 0x08, 0xf7, 0xde, 0x1e, 0x00, 0x00, 0x00, 0xe4, 0x09, 0xf2, 0xf8,\n+    0xe7, 0xf2, 0x0d, 0xfa, 0xe2, 0x0f, 0x04, 0x08, 0xf2, 0x13, 0xf8, 0xf9,\n+    0xf1, 0xff, 0x03, 0x11, 0x12, 0xe9, 0xf4, 0x13, 0x07, 0x0c, 0x13, 0x2b,\n+    0xf7, 0xdd, 0xf9, 0xe9, 0xfa, 0xdb, 0x1d, 0xf6, 0xf6, 0xf9, 0xe4, 0xf6,\n+    0x0d, 0xeb, 0x0d, 0x08, 0xe7, 0xe7, 0xf2, 0x03, 0x1d, 0xd9, 0xd8, 0xe4,\n+    0xf7, 0xea, 0xdc, 0xdc, 0x26, 0x02, 0xee, 0xfa, 0x38, 0xfc, 0x1a, 0xef,\n+    0xda, 0xf1, 0xdf, 0x0b, 0x1a, 0xe0, 0x16, 0x16, 0xdc, 0x04, 0xfa, 0xf7,\n+    0xee, 0x02, 0x25, 0x02, 0xf5, 0xfb, 0x08, 0xf6, 0x11, 0xf5, 0x12, 0x08,\n+    0xf4, 0xe3, 0x1b, 0xf5, 0x3a, 0xdc, 0x20, 0x2e, 0xe0, 0xf5, 0x30, 0xe4,\n+    0x09, 0xf8, 0x3c, 0x45, 0xd3, 0x08, 0x23, 0xd8, 0x09, 0xe4, 0x35, 0x30,\n+    0xe4, 0xfe, 0x07, 0xf6, 0x05, 0x01, 0x05, 0xff, 0xf6, 0x0d, 0x02, 0xfd,\n+    0x03, 0x05, 0x0d, 0x00, 0xf5, 0xd6, 0xcf, 0x19, 0x06, 0xee, 0x0d, 0xf2,\n+    0x01, 0x18, 0xef, 0x12, 0x04, 0x02, 0x21, 0xd9, 0x02, 0x0d, 0xeb, 0xe9,\n+    0x13, 0x08, 0x15, 0xf0, 0xee, 0x03, 0xec, 0x06, 0x17, 0xed, 0x00, 0x1a,\n+    0xee, 0xf2, 0xfc, 0x09, 0xec, 0xf8, 0xf8, 0x18, 0xf4, 0x13, 0x04, 0xf6,\n+    0x02, 0xf0, 0xfc, 0xfe, 0xe3, 0x01, 0x0a, 0x1c, 0x1b, 0xec, 0x0e, 0x01,\n+    0xfb, 0x08, 0x11, 0xf5, 0x00, 0x14, 0xe6, 0x12, 0x07, 0xf4, 0x15, 0x07,\n+    0xfc, 0xfb, 0xf5, 0xf1, 0x01, 0x21, 0x01, 0xe9, 0xe8, 0xef, 0xdb, 0xdf,\n+    0x1f, 0x0a, 0xdd, 0xd1, 0x16, 0x04, 0xfd, 0xe1, 0x24, 0xf0, 0xec, 0xf4,\n+    0x38, 0xe1, 0x16, 0xfd, 0xe0, 0xec, 0xe7, 0x0c, 0x2a, 0x04, 0x0c, 0x17,\n+    0xdc, 0xe8, 0xf2, 0x03, 0xec, 0xfd, 0x19, 0xfe, 0xf3, 0xf0, 0xf3, 0xfb,\n+    0x18, 0xdf, 0x1c, 0x00, 0x09, 0xf4, 0x18, 0x0b, 0x1f, 0xf6, 0x34, 0x22,\n+    0xf4, 0x22, 0x45, 0xeb, 0x23, 0xcf, 0x32, 0x34, 0xf2, 0xf9, 0x29, 0xd4,\n+    0xf7, 0x0b, 0x38, 0x2a, 0x09, 0xe6, 0x05, 0x01, 0x0b, 0xfe, 0x17, 0xfb,\n+    0x00, 0xeb, 0x08, 0xfd, 0x0c, 0x02, 0x1d, 0xea, 0xfa, 0x0b, 0xeb, 0x09,\n+    0xfe, 0xfe, 0x10, 0xe0, 0xf6, 0x06, 0xf0, 0x15, 0xf3, 0x09, 0x11, 0xe4,\n+    0xf9, 0x07, 0xe1, 0xed, 0x17, 0x05, 0x0c, 0xe1, 0xdb, 0xf2, 0xf8, 0xea,\n+    0x22, 0xe9, 0x02, 0x00, 0xfd, 0xe7, 0xf2, 0xf8, 0xf9, 0xfc, 0xfa, 0xe8,\n+    0xe8, 0xeb, 0xe9, 0x0d, 0x04, 0xf8, 0xf8, 0xf7, 0xf8, 0x0d, 0x03, 0x0c,\n+    0x13, 0xf2, 0x0f, 0xf9, 0xe6, 0xfd, 0x0f, 0x19, 0x08, 0xf7, 0xfa, 0x01,\n+    0xf3, 0x12, 0x1e, 0x05, 0x0a, 0x09, 0xfd, 0x0b, 0x07, 0x08, 0x02, 0xfc,\n+    0xd6, 0xe8, 0x14, 0x01, 0x13, 0x19, 0xef, 0xda, 0x0e, 0x0a, 0x07, 0xef,\n+    0x34, 0xe0, 0x05, 0x1e, 0x4e, 0xe9, 0x19, 0xff, 0xe1, 0x04, 0xfb, 0x0e,\n+    0x11, 0x05, 0x1f, 0x15, 0xd4, 0xec, 0xf9, 0xe7, 0xf9, 0xfc, 0x25, 0xff,\n+    0x06, 0xf2, 0x01, 0xf6, 0x2a, 0x17, 0x24, 0x11, 0xf3, 0x1a, 0x1f, 0xfb,\n+    0x32, 0xeb, 0x33, 0x2f, 0x00, 0x08, 0x2c, 0xf0, 0x26, 0xf4, 0x25, 0x36,\n+    0xd9, 0xf1, 0x1a, 0xd5, 0xec, 0xf9, 0x32, 0x27, 0xfc, 0xf4, 0xf0, 0xe3,\n+    0xfa, 0x0c, 0x16, 0x17, 0xfa, 0xf9, 0xe5, 0x1f, 0x1f, 0xfa, 0xff, 0xfd,\n+    0x0d, 0x02, 0xe9, 0x0e, 0xf0, 0x12, 0x09, 0xda, 0x02, 0xea, 0xe5, 0x0a,\n+    0xff, 0x03, 0x13, 0xf0, 0x0a, 0xf9, 0xe9, 0xff, 0x10, 0xfc, 0x1a, 0xf3,\n+    0xf7, 0x0f, 0xf4, 0xfa, 0xf4, 0x05, 0x10, 0x0a, 0xdd, 0x09, 0xf7, 0xf0,\n+    0xe5, 0x07, 0x07, 0xfa, 0x02, 0xd7, 0xf8, 0xf7, 0x01, 0xfb, 0x0e, 0xf8,\n+    0x07, 0x0f, 0xfe, 0x03, 0x12, 0x05, 0x09, 0x13, 0xf8, 0xdc, 0xfd, 0x27,\n+    0x0f, 0xec, 0xf7, 0x07, 0x00, 0xfc, 0x12, 0xf8, 0xfb, 0xea, 0xe4, 0xe9,\n+    0xe9, 0xe0, 0xff, 0xdc, 0xd6, 0xeb, 0xf2, 0xf7, 0x0d, 0x1b, 0xe9, 0xc4,\n+    0x06, 0x00, 0xfd, 0x04, 0x46, 0xf9, 0xe9, 0x13, 0x2d, 0x0c, 0x1f, 0xf8,\n+    0xd3, 0x0c, 0x14, 0x11, 0x05, 0xe5, 0x27, 0x08, 0xc5, 0xef, 0xdf, 0xdd,\n+    0x04, 0xf8, 0x11, 0x10, 0xf0, 0xe7, 0xfb, 0x03, 0x3c, 0xe7, 0x14, 0x0c,\n+    0xf4, 0xf6, 0x1b, 0x0a, 0x23, 0xf2, 0x2d, 0x1a, 0x08, 0xff, 0x32, 0xe7,\n+    0x1a, 0x05, 0x2b, 0x34, 0xf1, 0x0a, 0x00, 0xe8, 0x02, 0xdf, 0x2c, 0x2a,\n+    0x03, 0xe6, 0xfc, 0xef, 0xfc, 0xe4, 0x03, 0x01, 0x03, 0xee, 0xe9, 0x15,\n+    0x05, 0x03, 0x13, 0x11, 0x0e, 0xee, 0xf5, 0x22, 0x1b, 0x0e, 0xfd, 0xf3,\n+    0x0a, 0x02, 0xdd, 0x20, 0xeb, 0x06, 0xf8, 0xe2, 0x06, 0x0e, 0xde, 0x0d,\n+    0xf9, 0x16, 0x1c, 0x0c, 0xe0, 0xf0, 0xec, 0x0c, 0x0f, 0xf2, 0x27, 0x1d,\n+    0xde, 0xe6, 0xf0, 0xf9, 0xf0, 0x02, 0x0a, 0x07, 0x06, 0xf9, 0x0f, 0xfa,\n+    0xf0, 0xee, 0xf1, 0xf7, 0xff, 0x02, 0x0b, 0x0d, 0x1b, 0xee, 0xf6, 0x05,\n+    0xff, 0x1c, 0x17, 0x04, 0x05, 0x17, 0x00, 0xff, 0x0d, 0xf3, 0x23, 0x10,\n+    0xfd, 0x05, 0xfb, 0xea, 0x03, 0x10, 0x07, 0xd7, 0xf7, 0xff, 0xf3, 0xf1,\n+    0x17, 0xed, 0xd3, 0xcb, 0x14, 0x1c, 0xf5, 0x03, 0x47, 0xf6, 0xf7, 0xf2,\n+    0x3e, 0xf2, 0x22, 0xf4, 0xed, 0xfc, 0xee, 0x0b, 0xf4, 0xf1, 0x25, 0x10,\n+    0xd0, 0xf6, 0x00, 0xef, 0x10, 0xfc, 0x15, 0xe5, 0xdb, 0xf3, 0xea, 0x10,\n+    0x22, 0xf2, 0x2b, 0x11, 0xf9, 0x0a, 0xfc, 0xf5, 0x53, 0x16, 0x25, 0x43,\n+    0xe0, 0x0e, 0x13, 0xfc, 0x2d, 0xe2, 0x55, 0x65, 0xf4, 0x08, 0x01, 0xdf,\n+    0x0a, 0x00, 0x49, 0x1c, 0xfe, 0xdf, 0xef, 0xf2, 0xf9, 0xf6, 0xfd, 0xff,\n+    0xf3, 0x02, 0xf6, 0x14, 0x0b, 0xe8, 0x09, 0xfc, 0xfc, 0xe2, 0xe5, 0x11,\n+    0x03, 0x09, 0xfb, 0x06, 0x10, 0x1a, 0xf3, 0x0d, 0xfa, 0x0a, 0xd5, 0xf5,\n+    0x1a, 0x11, 0xf2, 0xfc, 0x1f, 0xfe, 0x0e, 0xe4, 0xef, 0xd7, 0xee, 0x06,\n+    0x1e, 0x04, 0x12, 0x28, 0xf7, 0x0e, 0x06, 0xf8, 0xee, 0xf0, 0x1a, 0x01,\n+    0xf7, 0xfd, 0x03, 0x11, 0x19, 0x10, 0x04, 0xfb, 0xd7, 0xfa, 0x16, 0x06,\n+    0x07, 0x23, 0xfa, 0x14, 0x11, 0xf1, 0x12, 0x10, 0x04, 0xe1, 0xee, 0xf7,\n+    0x21, 0x0e, 0x0a, 0x0a, 0xf8, 0x07, 0x0a, 0xee, 0x03, 0x1f, 0xfa, 0xc4,\n+    0xec, 0x12, 0x01, 0x1e, 0xfd, 0xf1, 0xe8, 0xcc, 0xf4, 0x17, 0xff, 0xdd,\n+    0x45, 0x10, 0xee, 0xfa, 0x3d, 0xe7, 0x27, 0xdd, 0xd7, 0xf9, 0xf4, 0xf6,\n+    0x06, 0xf8, 0x1e, 0x13, 0xe7, 0xe2, 0xf1, 0xe3, 0xf3, 0xf7, 0x18, 0x12,\n+    0xe4, 0x0a, 0xdb, 0xff, 0xff, 0xfe, 0x20, 0x09, 0x00, 0xf7, 0x23, 0xf6,\n+    0x2d, 0x14, 0x26, 0x28, 0xe5, 0xff, 0x0f, 0xe3, 0x1d, 0xe8, 0x56, 0x43,\n+    0xe7, 0xfb, 0xf9, 0xe6, 0xe9, 0xe2, 0x19, 0x19, 0x08, 0xfa, 0xf3, 0xe5,\n+    0x23, 0x07, 0x0f, 0xf8, 0xf8, 0xf3, 0xfc, 0x11, 0x2a, 0x05, 0xf4, 0xf1,\n+    0xfa, 0xfb, 0xf1, 0x1e, 0x13, 0x0f, 0xf9, 0xf5, 0xfa, 0x09, 0xf9, 0x03,\n+    0xf0, 0xf0, 0xe7, 0xec, 0xf1, 0x0c, 0xe6, 0xee, 0xf6, 0x20, 0x0f, 0xe9,\n+    0x00, 0xf4, 0xfe, 0xf0, 0x13, 0x0a, 0x17, 0x13, 0xee, 0x13, 0xfb, 0xff,\n+    0xf8, 0xfd, 0xf4, 0xe2, 0xe8, 0x06, 0xfc, 0x14, 0x03, 0x17, 0x00, 0x03,\n+    0xe6, 0xfd, 0xf2, 0x12, 0x12, 0x20, 0xeb, 0x10, 0x02, 0xf7, 0x13, 0x0d,\n+    0x11, 0xfd, 0xde, 0xf5, 0x07, 0xf3, 0x04, 0xff, 0x06, 0x05, 0xfb, 0xea,\n+    0xf0, 0x0a, 0x00, 0xb5, 0xe8, 0x1a, 0x03, 0xfe, 0x0d, 0x1a, 0xe7, 0xc0,\n+    0xd6, 0xdc, 0xf6, 0xf8, 0x39, 0xf5, 0xd5, 0xf8, 0x22, 0xfa, 0x22, 0x05,\n+    0xd0, 0xf4, 0x2d, 0xfc, 0x00, 0x0a, 0x1b, 0xfc, 0xe6, 0x09, 0x14, 0xfa,\n+    0x00, 0x1d, 0x1a, 0xfd, 0xf3, 0x18, 0xfc, 0xeb, 0x15, 0xf5, 0x0e, 0x0a,\n+    0xf3, 0xf1, 0x1b, 0x05, 0x14, 0x03, 0x2d, 0x27, 0xfb, 0x18, 0x22, 0xef,\n+    0xf6, 0x06, 0x28, 0x2b, 0xde, 0xec, 0xef, 0xe8, 0xd3, 0xfe, 0x17, 0x12,\n+    0x01, 0x13, 0x05, 0xf7, 0x00, 0xde, 0xf3, 0xe5, 0x03, 0xfb, 0x07, 0x0b,\n+    0xfd, 0xdc, 0xdf, 0x03, 0x0c, 0x00, 0xfa, 0x06, 0x0e, 0x02, 0x05, 0xfa,\n+    0xfd, 0xed, 0x09, 0x0c, 0xfd, 0xfb, 0x0c, 0xf0, 0xe4, 0x04, 0xd6, 0xf3,\n+    0x09, 0x0a, 0xf9, 0xf8, 0xe2, 0xef, 0xdf, 0xf0, 0xf8, 0x03, 0x0f, 0x20,\n+    0xf4, 0xe3, 0xf8, 0x02, 0xe2, 0xe5, 0x25, 0x0f, 0xeb, 0xf8, 0xe9, 0xfd,\n+    0x04, 0x0c, 0x0c, 0xfe, 0x01, 0x08, 0xfc, 0xfc, 0x1b, 0x01, 0xe5, 0x13,\n+    0xf9, 0xe8, 0x07, 0x20, 0xfe, 0x06, 0xec, 0xfe, 0x09, 0xef, 0x14, 0x04,\n+    0x0b, 0xf5, 0xe7, 0xff, 0x0a, 0x02, 0x09, 0xe9, 0xc4, 0x16, 0x0d, 0xe7,\n+    0x15, 0x14, 0xf1, 0xd0, 0xec, 0xe7, 0xf0, 0xf0, 0x33, 0x05, 0xda, 0xf2,\n+    0x0b, 0x08, 0x38, 0x01, 0x07, 0xfd, 0xd8, 0x06, 0xd9, 0xf0, 0x16, 0x1f,\n+    0xff, 0xf7, 0xe0, 0xd8, 0xf3, 0xf7, 0x12, 0x08, 0x0e, 0x05, 0xf6, 0x03,\n+    0xef, 0x1b, 0x12, 0xf4, 0xe8, 0x0f, 0x02, 0xfd, 0xf2, 0x16, 0x26, 0x22,\n+    0xe0, 0x07, 0xf7, 0xe6, 0xeb, 0x16, 0x22, 0x1a, 0x0b, 0x01, 0xf5, 0xea,\n+    0xd2, 0x22, 0x0f, 0x13, 0x15, 0x08, 0xf0, 0xfb, 0xed, 0x11, 0xf3, 0xe9,\n+    0xff, 0xde, 0x0a, 0x18, 0x0f, 0x02, 0xfb, 0xf9, 0xfb, 0xe8, 0x12, 0x18,\n+    0x01, 0xf4, 0xf6, 0xf8, 0xf0, 0x1f, 0x24, 0x15, 0xf5, 0x00, 0x1c, 0xf9,\n+    0x01, 0x0a, 0x11, 0xd5, 0x01, 0x12, 0x02, 0xec, 0xfd, 0x07, 0xf2, 0xea,\n+    0xf9, 0xff, 0xf7, 0xfb, 0x15, 0xec, 0xe5, 0x01, 0xeb, 0x05, 0xf9, 0x10,\n+    0xfe, 0x28, 0xe5, 0x0a, 0xeb, 0x1b, 0x0e, 0xf9, 0xde, 0x02, 0x15, 0x0a,\n+    0xff, 0xfe, 0x11, 0x24, 0x03, 0xf8, 0x00, 0x08, 0xfd, 0x0e, 0xeb, 0xf3,\n+    0xf6, 0xf7, 0x14, 0x0e, 0xfc, 0xf5, 0xde, 0xf5, 0x9e, 0xfe, 0xff, 0xff,\n+    0x04, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0xab, 0x01, 0x00, 0x00,\n+    0xfa, 0xfd, 0xff, 0xff, 0xa2, 0xff, 0xff, 0xff, 0xba, 0x00, 0x00, 0x00,\n+    0x24, 0xfc, 0xff, 0xff, 0x0f, 0x00, 0x00, 0x00, 0x54, 0x4f, 0x43, 0x4f,\n+    0x20, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x65, 0x64, 0x2e, 0x00,\n+    0x01, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x24, 0xfb, 0xff, 0xff,\n+    0x68, 0x01, 0x00, 0x00, 0x5c, 0x01, 0x00, 0x00, 0x50, 0x01, 0x00, 0x00,\n+    0x04, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0xf4, 0x00, 0x00, 0x00,\n+    0x90, 0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,\n+    0xce, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x09, 0x03, 0x00, 0x00, 0x00,\n+    0x1c, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,\n+    0x1a, 0xff, 0xff, 0xff, 0x00, 0x00, 0x80, 0x3f, 0x01, 0x00, 0x00, 0x00,\n+    0x09, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00,\n+    0x00, 0x00, 0x0e, 0x00, 0x18, 0x00, 0x08, 0x00, 0x0c, 0x00, 0x10, 0x00,\n+    0x07, 0x00, 0x14, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08,\n+    0x01, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00,\n+    0x04, 0x00, 0x00, 0x00, 0xc4, 0xfc, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00,\n+    0x06, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,\n+    0x07, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x00,\n+    0x16, 0x00, 0x00, 0x00, 0x08, 0x00, 0x0c, 0x00, 0x07, 0x00, 0x10, 0x00,\n+    0x0e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x38, 0x00, 0x00, 0x00,\n+    0x2c, 0x00, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x00,\n+    0x14, 0x00, 0x00, 0x00, 0x08, 0x00, 0x0c, 0x00, 0x10, 0x00, 0x07, 0x00,\n+    0x0e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x02, 0x00, 0x00, 0x00,\n+    0x02, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,\n+    0x02, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,\n+    0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x00,\n+    0x1a, 0x00, 0x08, 0x00, 0x0c, 0x00, 0x10, 0x00, 0x07, 0x00, 0x14, 0x00,\n+    0x0e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x02, 0x00, 0x00, 0x00,\n+    0x38, 0x00, 0x00, 0x00, 0x2c, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00,\n+    0x00, 0x00, 0x06, 0x00, 0x08, 0x00, 0x04, 0x00, 0x06, 0x00, 0x00, 0x00,\n+    0x04, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff,\n+    0x31, 0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,\n+    0x01, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,\n+    0x03, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,\n+    0x09, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,\n+    0x0a, 0x00, 0x00, 0x00, 0x34, 0x04, 0x00, 0x00, 0xcc, 0x03, 0x00, 0x00,\n+    0x4c, 0x03, 0x00, 0x00, 0xdc, 0x02, 0x00, 0x00, 0x60, 0x02, 0x00, 0x00,\n+    0x20, 0x02, 0x00, 0x00, 0xb0, 0x01, 0x00, 0x00, 0x44, 0x01, 0x00, 0x00,\n+    0x70, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x02, 0xfc, 0xff, 0xff,\n+    0x00, 0x00, 0x00, 0x09, 0x44, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00,\n+    0x28, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0xf4, 0xfb, 0xff, 0xff,\n+    0x14, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,\n+    0x80, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00,\n+    0x00, 0x00, 0x80, 0x3b, 0x0e, 0x00, 0x00, 0x00, 0x6c, 0x61, 0x62, 0x65,\n+    0x6c, 0x73, 0x5f, 0x73, 0x6f, 0x66, 0x74, 0x6d, 0x61, 0x78, 0x00, 0x00,\n+    0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,\n+    0x00, 0x00, 0x0e, 0x00, 0x1a, 0x00, 0x08, 0x00, 0x07, 0x00, 0x0c, 0x00,\n+    0x10, 0x00, 0x14, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09,\n+    0xb4, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x94, 0x00, 0x00, 0x00,\n+    0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x12, 0x00, 0x10, 0x00, 0x00, 0x00,\n+    0x00, 0x00, 0x04, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x00,\n+    0x12, 0x00, 0x00, 0x00, 0x50, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,\n+    0x03, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n+    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n+    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n+    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n+    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n+    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n+    0x08, 0x00, 0x00, 0x00, 0x11, 0x1e, 0x23, 0x3a, 0x9e, 0xa1, 0x15, 0x39,\n+    0x23, 0x69, 0x45, 0x3a, 0x09, 0xe4, 0xe4, 0x39, 0x65, 0xd7, 0x13, 0x3a,\n+    0xe0, 0xb2, 0xfd, 0x39, 0x1b, 0xc1, 0x53, 0x3a, 0xc2, 0x50, 0x2d, 0x3a,\n+    0x12, 0x00, 0x00, 0x00, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x77, 0x65,\n+    0x69, 0x67, 0x68, 0x74, 0x73, 0x2f, 0x72, 0x65, 0x61, 0x64, 0x00, 0x00,\n+    0x04, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00,\n+    0x08, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x3a, 0xfd, 0xff, 0xff,\n+    0x00, 0x00, 0x00, 0x09, 0x54, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,\n+    0x28, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x2c, 0xfd, 0xff, 0xff,\n+    0x14, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,\n+    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,\n+    0xb5, 0xfa, 0xfa, 0x39, 0x1f, 0x00, 0x00, 0x00, 0x66, 0x69, 0x6e, 0x61,\n+    0x6c, 0x5f, 0x66, 0x63, 0x5f, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x73,\n+    0x2f, 0x72, 0x65, 0x61, 0x64, 0x2f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70,\n+    0x6f, 0x73, 0x65, 0x00, 0x02, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,\n+    0xa0, 0x0f, 0x00, 0x00, 0xa2, 0xfd, 0xff, 0xff, 0x00, 0x00, 0x00, 0x09,\n+    0x58, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x00,\n+    0x04, 0x00, 0x00, 0x00, 0x74, 0xfe, 0xff, 0xff, 0x30, 0x00, 0x00, 0x00,\n+    0x24, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,\n+    0x01, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n+    0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0xf2, 0xdd, 0xbb, 0x3d,\n+    0x01, 0x00, 0x00, 0x00, 0x32, 0xa3, 0x25, 0x41, 0x01, 0x00, 0x00, 0x00,\n+    0xf6, 0xa0, 0x50, 0xc1, 0x05, 0x00, 0x00, 0x00, 0x61, 0x64, 0x64, 0x5f,\n+    0x31, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,\n+    0x04, 0x00, 0x00, 0x00, 0x0e, 0xfe, 0xff, 0xff, 0x00, 0x00, 0x00, 0x02,\n+    0x2c, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,\n+    0x08, 0x00, 0x00, 0x00, 0x04, 0x00, 0x04, 0x00, 0x04, 0x00, 0x00, 0x00,\n+    0x0f, 0x00, 0x00, 0x00, 0x52, 0x65, 0x73, 0x68, 0x61, 0x70, 0x65, 0x5f,\n+    0x32, 0x2f, 0x73, 0x68, 0x61, 0x70, 0x65, 0x00, 0x01, 0x00, 0x00, 0x00,\n+    0x04, 0x00, 0x00, 0x00, 0x4a, 0xfe, 0xff, 0xff, 0x00, 0x00, 0x00, 0x09,\n+    0x5c, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x00,\n+    0x04, 0x00, 0x00, 0x00, 0x1c, 0xff, 0xff, 0xff, 0x30, 0x00, 0x00, 0x00,\n+    0x24, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,\n+    0x01, 0x00, 0x00, 0x00, 0x80, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,\n+    0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x50, 0x50, 0xd0, 0x3d,\n+    0x01, 0x00, 0x00, 0x00, 0x00, 0x80, 0xcf, 0x41, 0x01, 0x00, 0x00, 0x00,\n+    0x00, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x52, 0x65, 0x73, 0x68,\n+    0x61, 0x70, 0x65, 0x5f, 0x32, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,\n+    0x01, 0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00,\n+    0x01, 0x00, 0x00, 0x00, 0xc2, 0xfe, 0xff, 0xff, 0x00, 0x00, 0x00, 0x09,\n+    0x58, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00,\n+    0x04, 0x00, 0x00, 0x00, 0x94, 0xff, 0xff, 0xff, 0x2c, 0x00, 0x00, 0x00,\n+    0x20, 0x00, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,\n+    0x01, 0x00, 0x00, 0x00, 0x80, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,\n+    0x01, 0x00, 0x00, 0x00, 0x50, 0x50, 0xd0, 0x3d, 0x01, 0x00, 0x00, 0x00,\n+    0x00, 0x80, 0xcf, 0x41, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n+    0x09, 0x00, 0x00, 0x00, 0x52, 0x65, 0x73, 0x68, 0x61, 0x70, 0x65, 0x5f,\n+    0x31, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,\n+    0xa8, 0x07, 0x00, 0x00, 0x2e, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x09,\n+    0x60, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x4c, 0x00, 0x00, 0x00,\n+    0x10, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x14, 0x00, 0x04, 0x00, 0x08, 0x00,\n+    0x0c, 0x00, 0x10, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x2c, 0x00, 0x00, 0x00,\n+    0x20, 0x00, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,\n+    0x01, 0x00, 0x00, 0x00, 0x80, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,\n+    0x01, 0x00, 0x00, 0x00, 0x3a, 0x6a, 0xac, 0x3d, 0x01, 0x00, 0x00, 0x00,\n+    0xd0, 0xbd, 0xab, 0x41, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n+    0x04, 0x00, 0x00, 0x00, 0x52, 0x65, 0x6c, 0x75, 0x00, 0x00, 0x00, 0x00,\n+    0x04, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x19, 0x00, 0x00, 0x00,\n+    0x14, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0xaa, 0xff, 0xff, 0xff,\n+    0x00, 0x00, 0x00, 0x02, 0x44, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,\n+    0x2c, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x9c, 0xff, 0xff, 0xff,\n+    0x18, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,\n+    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n+    0x01, 0x00, 0x00, 0x00, 0x96, 0x08, 0x29, 0x38, 0x0b, 0x00, 0x00, 0x00,\n+    0x4d, 0x61, 0x74, 0x4d, 0x75, 0x6c, 0x5f, 0x62, 0x69, 0x61, 0x73, 0x00,\n+    0x01, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x00,\n+    0x18, 0x00, 0x08, 0x00, 0x07, 0x00, 0x0c, 0x00, 0x10, 0x00, 0x14, 0x00,\n+    0x0e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xa0, 0x00, 0x00, 0x00,\n+    0x03, 0x00, 0x00, 0x00, 0x88, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,\n+    0x0c, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x08, 0x00,\n+    0x0c, 0x00, 0x00, 0x00, 0x4c, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,\n+    0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n+    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n+    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n+    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n+    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n+    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,\n+    0x9a, 0xbb, 0x84, 0x38, 0x83, 0x84, 0x73, 0x37, 0x5b, 0xa3, 0xa0, 0x38,\n+    0x16, 0x41, 0x3a, 0x38, 0xc7, 0x9a, 0x70, 0x38, 0xed, 0x70, 0x4e, 0x38,\n+    0x54, 0x4f, 0xac, 0x38, 0xfd, 0x07, 0x8d, 0x38, 0x0b, 0x00, 0x00, 0x00,\n+    0x43, 0x6f, 0x6e, 0x76, 0x32, 0x44, 0x5f, 0x62, 0x69, 0x61, 0x73, 0x00,\n+    0x01, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,\n+    0x4c, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x00, 0x00,\n+    0x04, 0x00, 0x00, 0x00, 0xe6, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x19,\n+    0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x06, 0x00, 0x05, 0x00,\n+    0x06, 0x00, 0x00, 0x00, 0x00, 0x16, 0x0a, 0x00, 0x0e, 0x00, 0x07, 0x00,\n+    0x00, 0x00, 0x08, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09,\n+    0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x0c, 0x00, 0x07, 0x00,\n+    0x00, 0x00, 0x08, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04,\n+    0x03, 0x00, 0x00, 0x00};\n+const int g_model_len = 18712;\n",
            "comment_added_diff": {
                "16": "// This is a standard TensorFlow Lite FlatBuffer model file that has been",
                "17": "// converted into a C data array, so it can be easily compiled into a binary",
                "18": "// for devices that don't have a file system. It was created using the command:",
                "19": "// xxd -i model.tflite > model.cc",
                "23": "// We need to keep the data array aligned on some architectures."
            },
            "comment_deleted_diff": {},
            "comment_modified_diff": {}
        }
    ],
    "model.h": [],
    "output_handler.cpp": [
        {
            "commit": "1da0ca88e85ee4b50d81b41f23f5d41ddec90f5a",
            "timestamp": "2023-10-06T13:50:53+03:00",
            "author": "Me No Dev",
            "commit_message": "Add TFLite Micro examples (#8717)\n\n* create TFLite library\r\n\r\n* add TFLite hello_world example\r\n\r\n* add TFLite micro_speech example\r\n\r\n---------\r\n\r\nCo-authored-by: Sanket Wadekar <67091512+sanketwadekar@users.noreply.github.com>",
            "additions": 23,
            "deletions": 0,
            "change_type": "ADD",
            "diff": "@@ -0,0 +1,23 @@\n+/* Copyright 2019 The TensorFlow Authors. All Rights Reserved.\n+\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+\n+    http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+==============================================================================*/\n+\n+#include \"output_handler.h\"\n+#include \"tensorflow/lite/micro/micro_log.h\"\n+\n+void HandleOutput(float x_value, float y_value) {\n+  // Log the current X and Y values\n+  MicroPrintf(\"x_value: %f, y_value: %f\\n\", static_cast<double>(x_value),\n+              static_cast<double>(y_value));\n+}\n",
            "comment_added_diff": {
                "20": "  // Log the current X and Y values"
            },
            "comment_deleted_diff": {},
            "comment_modified_diff": {}
        }
    ],
    "output_handler.h": [],
    "audio_provider.cpp": [
        {
            "commit": "1da0ca88e85ee4b50d81b41f23f5d41ddec90f5a",
            "timestamp": "2023-10-06T13:50:53+03:00",
            "author": "Me No Dev",
            "commit_message": "Add TFLite Micro examples (#8717)\n\n* create TFLite library\r\n\r\n* add TFLite hello_world example\r\n\r\n* add TFLite micro_speech example\r\n\r\n---------\r\n\r\nCo-authored-by: Sanket Wadekar <67091512+sanketwadekar@users.noreply.github.com>",
            "additions": 198,
            "deletions": 0,
            "change_type": "ADD",
            "diff": "@@ -0,0 +1,198 @@\n+/* Copyright 2019 The TensorFlow Authors. All Rights Reserved.\n+\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+\n+    http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+==============================================================================*/\n+\n+#include \"audio_provider.h\"\n+\n+#include <cstdlib>\n+#include <cstring>\n+\n+// FreeRTOS.h must be included before some of the following dependencies.\n+// Solves b/150260343.\n+// clang-format off\n+#include \"freertos/FreeRTOS.h\"\n+// clang-format on\n+\n+#include \"driver/i2s.h\"\n+#include \"esp_log.h\"\n+#include \"esp_spi_flash.h\"\n+#include \"esp_system.h\"\n+#include \"esp_timer.h\"\n+#include \"freertos/task.h\"\n+#include \"ringbuf.h\"\n+#include \"micro_model_settings.h\"\n+\n+using namespace std;\n+\n+#define NO_I2S_SUPPORT CONFIG_IDF_TARGET_ESP32C2 || \\\n+                          (CONFIG_IDF_TARGET_ESP32C3 \\\n+                          && (ESP_IDF_VERSION < ESP_IDF_VERSION_VAL(4, 4, 0)))\n+\n+static const char* TAG = \"TF_LITE_AUDIO_PROVIDER\";\n+/* ringbuffer to hold the incoming audio data */\n+ringbuf_t* g_audio_capture_buffer;\n+volatile int32_t g_latest_audio_timestamp = 0;\n+/* model requires 20ms new data from g_audio_capture_buffer and 10ms old data\n+ * each time , storing old data in the histrory buffer , {\n+ * history_samples_to_keep = 10 * 16 } */\n+constexpr int32_t history_samples_to_keep =\n+    ((kFeatureSliceDurationMs - kFeatureSliceStrideMs) *\n+     (kAudioSampleFrequency / 1000));\n+/* new samples to get each time from ringbuffer, { new_samples_to_get =  20 * 16\n+ * } */\n+constexpr int32_t new_samples_to_get =\n+    (kFeatureSliceStrideMs * (kAudioSampleFrequency / 1000));\n+\n+namespace {\n+int16_t g_audio_output_buffer[kMaxAudioSampleSize];\n+bool g_is_audio_initialized = false;\n+int16_t g_history_buffer[history_samples_to_keep];\n+}  // namespace\n+\n+const int32_t kAudioCaptureBufferSize = 80000;\n+const int32_t i2s_bytes_to_read = 3200;\n+\n+#if NO_I2S_SUPPORT\n+  // nothing to be done here\n+#else\n+static void i2s_init(void) {\n+  // Start listening for audio: MONO @ 16KHz\n+  i2s_config_t i2s_config = {\n+      .mode = (i2s_mode_t)(I2S_MODE_MASTER | I2S_MODE_RX | I2S_MODE_TX),\n+      .sample_rate = 16000,\n+      .bits_per_sample = (i2s_bits_per_sample_t)16,\n+      .channel_format = I2S_CHANNEL_FMT_ONLY_LEFT,\n+      .communication_format = I2S_COMM_FORMAT_I2S,\n+      .intr_alloc_flags = 0,\n+      .dma_buf_count = 3,\n+      .dma_buf_len = 300,\n+      .use_apll = false,\n+      .tx_desc_auto_clear = false,\n+      .fixed_mclk = -1,\n+  };\n+  i2s_pin_config_t pin_config = {\n+      .bck_io_num = 26,    // IIS_SCLK\n+      .ws_io_num = 32,     // IIS_LCLK\n+      .data_out_num = -1,  // IIS_DSIN\n+      .data_in_num = 33,   // IIS_DOUT\n+  };\n+  esp_err_t ret = 0;\n+  ret = i2s_driver_install((i2s_port_t)1, &i2s_config, 0, NULL);\n+  if (ret != ESP_OK) {\n+    ESP_LOGE(TAG, \"Error in i2s_driver_install\");\n+  }\n+  ret = i2s_set_pin((i2s_port_t)1, &pin_config);\n+  if (ret != ESP_OK) {\n+    ESP_LOGE(TAG, \"Error in i2s_set_pin\");\n+  }\n+\n+  ret = i2s_zero_dma_buffer((i2s_port_t)1);\n+  if (ret != ESP_OK) {\n+    ESP_LOGE(TAG, \"Error in initializing dma buffer with 0\");\n+  }\n+}\n+#endif\n+\n+static void CaptureSamples(void* arg) {\n+#if NO_I2S_SUPPORT\n+  ESP_LOGE(TAG, \"i2s support not available on C3 chip for IDF < 4.4.0\");\n+  return;\n+#else\n+  size_t bytes_read = i2s_bytes_to_read;\n+  uint8_t i2s_read_buffer[i2s_bytes_to_read] = {};\n+  i2s_init();\n+  while (1) {\n+    /* read 100ms data at once from i2s */\n+    i2s_read((i2s_port_t)1, (void*)i2s_read_buffer, i2s_bytes_to_read,\n+             &bytes_read, pdMS_TO_TICKS(100));\n+    if (bytes_read <= 0) {\n+      ESP_LOGE(TAG, \"Error in I2S read : %d\", bytes_read);\n+    } else {\n+      if (bytes_read < i2s_bytes_to_read) {\n+        ESP_LOGW(TAG, \"Partial I2S read\");\n+      }\n+      /* write bytes read by i2s into ring buffer */\n+      int bytes_written = rb_write(g_audio_capture_buffer,\n+                                   (uint8_t*)i2s_read_buffer, bytes_read, pdMS_TO_TICKS(100));\n+      /* update the timestamp (in ms) to let the model know that new data has\n+       * arrived */\n+      g_latest_audio_timestamp = g_latest_audio_timestamp +\n+          ((1000 * (bytes_written / 2)) / kAudioSampleFrequency);\n+      if (bytes_written <= 0) {\n+        ESP_LOGE(TAG, \"Could Not Write in Ring Buffer: %d \", bytes_written);\n+      } else if (bytes_written < bytes_read) {\n+        ESP_LOGW(TAG, \"Partial Write\");\n+      }\n+    }\n+  }\n+#endif\n+  vTaskDelete(NULL);\n+}\n+\n+TfLiteStatus InitAudioRecording() {\n+  g_audio_capture_buffer = rb_init(\"tf_ringbuffer\", kAudioCaptureBufferSize);\n+  if (!g_audio_capture_buffer) {\n+    ESP_LOGE(TAG, \"Error creating ring buffer\");\n+    return kTfLiteError;\n+  }\n+  /* create CaptureSamples Task which will get the i2s_data from mic and fill it\n+   * in the ring buffer */\n+  xTaskCreate(CaptureSamples, \"CaptureSamples\", 1024 * 32, NULL, 10, NULL);\n+  while (!g_latest_audio_timestamp) {\n+    vTaskDelay(1); // one tick delay to avoid watchdog\n+  }\n+  ESP_LOGI(TAG, \"Audio Recording started\");\n+  return kTfLiteOk;\n+}\n+\n+TfLiteStatus GetAudioSamples(int start_ms, int duration_ms,\n+                             int* audio_samples_size, int16_t** audio_samples) {\n+  if (!g_is_audio_initialized) {\n+    TfLiteStatus init_status = InitAudioRecording();\n+    if (init_status != kTfLiteOk) {\n+      return init_status;\n+    }\n+    g_is_audio_initialized = true;\n+  }\n+  /* copy 160 samples (320 bytes) into output_buff from history */\n+  memcpy((void*)(g_audio_output_buffer), (void*)(g_history_buffer),\n+         history_samples_to_keep * sizeof(int16_t));\n+\n+  /* copy 320 samples (640 bytes) from rb at ( int16_t*(g_audio_output_buffer) +\n+   * 160 ), first 160 samples (320 bytes) will be from history */\n+  int bytes_read =\n+      rb_read(g_audio_capture_buffer,\n+              ((uint8_t*)(g_audio_output_buffer + history_samples_to_keep)),\n+              new_samples_to_get * sizeof(int16_t), pdMS_TO_TICKS(100));\n+  if (bytes_read < 0) {\n+    ESP_LOGE(TAG, \" Model Could not read data from Ring Buffer\");\n+  } else if (bytes_read < new_samples_to_get * sizeof(int16_t)) {\n+    ESP_LOGD(TAG, \"RB FILLED RIGHT NOW IS %d\",\n+             rb_filled(g_audio_capture_buffer));\n+    ESP_LOGD(TAG, \" Partial Read of Data by Model \");\n+    ESP_LOGV(TAG, \" Could only read %d bytes when required %d bytes \",\n+             bytes_read, (int) (new_samples_to_get * sizeof(int16_t)));\n+  }\n+\n+  /* copy 320 bytes from output_buff into history */\n+  memcpy((void*)(g_history_buffer),\n+         (void*)(g_audio_output_buffer + new_samples_to_get),\n+         history_samples_to_keep * sizeof(int16_t));\n+\n+  *audio_samples_size = kMaxAudioSampleSize;\n+  *audio_samples = g_audio_output_buffer;\n+  return kTfLiteOk;\n+}\n+\n+int32_t LatestAudioTimestamp() { return g_latest_audio_timestamp; }\n",
            "comment_added_diff": {
                "21": "// FreeRTOS.h must be included before some of the following dependencies.",
                "22": "// Solves b/150260343.",
                "23": "// clang-format off",
                "25": "// clang-format on",
                "61": "}  // namespace",
                "67": "  // nothing to be done here",
                "70": "  // Start listening for audio: MONO @ 16KHz",
                "85": "      .bck_io_num = 26,    // IIS_SCLK",
                "86": "      .ws_io_num = 32,     // IIS_LCLK",
                "87": "      .data_out_num = -1,  // IIS_DSIN",
                "88": "      .data_in_num = 33,   // IIS_DOUT",
                "153": "    vTaskDelay(1); // one tick delay to avoid watchdog"
            },
            "comment_deleted_diff": {},
            "comment_modified_diff": {}
        }
    ],
    "audio_provider.h": [],
    "command_responder.cpp": [
        {
            "commit": "1da0ca88e85ee4b50d81b41f23f5d41ddec90f5a",
            "timestamp": "2023-10-06T13:50:53+03:00",
            "author": "Me No Dev",
            "commit_message": "Add TFLite Micro examples (#8717)\n\n* create TFLite library\r\n\r\n* add TFLite hello_world example\r\n\r\n* add TFLite micro_speech example\r\n\r\n---------\r\n\r\nCo-authored-by: Sanket Wadekar <67091512+sanketwadekar@users.noreply.github.com>",
            "additions": 27,
            "deletions": 0,
            "change_type": "ADD",
            "diff": "@@ -0,0 +1,27 @@\n+/* Copyright 2019 The TensorFlow Authors. All Rights Reserved.\n+\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+\n+    http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+==============================================================================*/\n+\n+#include \"command_responder.h\"\n+#include \"tensorflow/lite/micro/micro_log.h\"\n+\n+// The default implementation writes out the name of the recognized command\n+// to the error console. Real applications will want to take some custom\n+// action instead, and should implement their own versions of this function.\n+void RespondToCommand(int32_t current_time, const char* found_command,\n+                      uint8_t score, bool is_new_command) {\n+  if (is_new_command) {\n+    MicroPrintf(\"Heard %s (%d) @%dms\", found_command, score, current_time);\n+  }\n+}\n",
            "comment_added_diff": {
                "19": "// The default implementation writes out the name of the recognized command",
                "20": "// to the error console. Real applications will want to take some custom",
                "21": "// action instead, and should implement their own versions of this function."
            },
            "comment_deleted_diff": {},
            "comment_modified_diff": {}
        }
    ],
    "command_responder.h": [],
    "feature_provider.cpp": [
        {
            "commit": "1da0ca88e85ee4b50d81b41f23f5d41ddec90f5a",
            "timestamp": "2023-10-06T13:50:53+03:00",
            "author": "Me No Dev",
            "commit_message": "Add TFLite Micro examples (#8717)\n\n* create TFLite library\r\n\r\n* add TFLite hello_world example\r\n\r\n* add TFLite micro_speech example\r\n\r\n---------\r\n\r\nCo-authored-by: Sanket Wadekar <67091512+sanketwadekar@users.noreply.github.com>",
            "additions": 118,
            "deletions": 0,
            "change_type": "ADD",
            "diff": "@@ -0,0 +1,118 @@\n+/* Copyright 2018 The TensorFlow Authors. All Rights Reserved.\n+\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+\n+    http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+==============================================================================*/\n+\n+#include \"feature_provider.h\"\n+\n+#include \"audio_provider.h\"\n+#include \"micro_features_generator.h\"\n+#include \"micro_model_settings.h\"\n+#include \"tensorflow/lite/micro/micro_log.h\"\n+\n+FeatureProvider::FeatureProvider(int feature_size, int8_t* feature_data)\n+    : feature_size_(feature_size),\n+      feature_data_(feature_data),\n+      is_first_run_(true) {\n+  // Initialize the feature data to default values.\n+  for (int n = 0; n < feature_size_; ++n) {\n+    feature_data_[n] = 0;\n+  }\n+}\n+\n+FeatureProvider::~FeatureProvider() {}\n+\n+TfLiteStatus FeatureProvider::PopulateFeatureData(\n+    int32_t last_time_in_ms, int32_t time_in_ms, int* how_many_new_slices) {\n+  if (feature_size_ != kFeatureElementCount) {\n+    MicroPrintf(\"Requested feature_data_ size %d doesn't match %d\",\n+                feature_size_, kFeatureElementCount);\n+    return kTfLiteError;\n+  }\n+\n+  // Quantize the time into steps as long as each window stride, so we can\n+  // figure out which audio data we need to fetch.\n+  const int last_step = (last_time_in_ms / kFeatureSliceStrideMs);\n+  const int current_step = (time_in_ms / kFeatureSliceStrideMs);\n+\n+  int slices_needed = current_step - last_step;\n+  // If this is the first call, make sure we don't use any cached information.\n+  if (is_first_run_) {\n+    TfLiteStatus init_status = InitializeMicroFeatures();\n+    if (init_status != kTfLiteOk) {\n+      return init_status;\n+    }\n+    is_first_run_ = false;\n+    slices_needed = kFeatureSliceCount;\n+  }\n+  if (slices_needed > kFeatureSliceCount) {\n+    slices_needed = kFeatureSliceCount;\n+  }\n+  *how_many_new_slices = slices_needed;\n+\n+  const int slices_to_keep = kFeatureSliceCount - slices_needed;\n+  const int slices_to_drop = kFeatureSliceCount - slices_to_keep;\n+  // If we can avoid recalculating some slices, just move the existing data\n+  // up in the spectrogram, to perform something like this:\n+  // last time = 80ms          current time = 120ms\n+  // +-----------+             +-----------+\n+  // | data@20ms |         --> | data@60ms |\n+  // +-----------+       --    +-----------+\n+  // | data@40ms |     --  --> | data@80ms |\n+  // +-----------+   --  --    +-----------+\n+  // | data@60ms | --  --      |  <empty>  |\n+  // +-----------+   --        +-----------+\n+  // | data@80ms | --          |  <empty>  |\n+  // +-----------+             +-----------+\n+  if (slices_to_keep > 0) {\n+    for (int dest_slice = 0; dest_slice < slices_to_keep; ++dest_slice) {\n+      int8_t* dest_slice_data =\n+          feature_data_ + (dest_slice * kFeatureSliceSize);\n+      const int src_slice = dest_slice + slices_to_drop;\n+      const int8_t* src_slice_data =\n+          feature_data_ + (src_slice * kFeatureSliceSize);\n+      for (int i = 0; i < kFeatureSliceSize; ++i) {\n+        dest_slice_data[i] = src_slice_data[i];\n+      }\n+    }\n+  }\n+  // Any slices that need to be filled in with feature data have their\n+  // appropriate audio data pulled, and features calculated for that slice.\n+  if (slices_needed > 0) {\n+    for (int new_slice = slices_to_keep; new_slice < kFeatureSliceCount;\n+         ++new_slice) {\n+      const int new_step = (current_step - kFeatureSliceCount + 1) + new_slice;\n+      const int32_t slice_start_ms = (new_step * kFeatureSliceStrideMs);\n+      int16_t* audio_samples = nullptr;\n+      int audio_samples_size = 0;\n+      // TODO(petewarden): Fix bug that leads to non-zero slice_start_ms\n+      GetAudioSamples((slice_start_ms > 0 ? slice_start_ms : 0),\n+                      kFeatureSliceDurationMs, &audio_samples_size,\n+                      &audio_samples);\n+      if (audio_samples_size < kMaxAudioSampleSize) {\n+        MicroPrintf(\"Audio data size %d too small, want %d\",\n+                    audio_samples_size, kMaxAudioSampleSize);\n+        return kTfLiteError;\n+      }\n+      int8_t* new_slice_data = feature_data_ + (new_slice * kFeatureSliceSize);\n+      size_t num_samples_read;\n+      TfLiteStatus generate_status = GenerateMicroFeatures(\n+          audio_samples, audio_samples_size, kFeatureSliceSize,\n+          new_slice_data, &num_samples_read);\n+      if (generate_status != kTfLiteOk) {\n+        return generate_status;\n+      }\n+    }\n+  }\n+  return kTfLiteOk;\n+}\n",
            "comment_added_diff": {
                "27": "  // Initialize the feature data to default values.",
                "43": "  // Quantize the time into steps as long as each window stride, so we can",
                "44": "  // figure out which audio data we need to fetch.",
                "49": "  // If this is the first call, make sure we don't use any cached information.",
                "65": "  // If we can avoid recalculating some slices, just move the existing data",
                "66": "  // up in the spectrogram, to perform something like this:",
                "67": "  // last time = 80ms          current time = 120ms",
                "68": "  // +-----------+             +-----------+",
                "69": "  // | data@20ms |         --> | data@60ms |",
                "70": "  // +-----------+       --    +-----------+",
                "71": "  // | data@40ms |     --  --> | data@80ms |",
                "72": "  // +-----------+   --  --    +-----------+",
                "73": "  // | data@60ms | --  --      |  <empty>  |",
                "74": "  // +-----------+   --        +-----------+",
                "75": "  // | data@80ms | --          |  <empty>  |",
                "76": "  // +-----------+             +-----------+",
                "89": "  // Any slices that need to be filled in with feature data have their",
                "90": "  // appropriate audio data pulled, and features calculated for that slice.",
                "98": "      // TODO(petewarden): Fix bug that leads to non-zero slice_start_ms"
            },
            "comment_deleted_diff": {},
            "comment_modified_diff": {}
        }
    ],
    "feature_provider.h": [],
    "micro_features_generator.cpp": [
        {
            "commit": "1da0ca88e85ee4b50d81b41f23f5d41ddec90f5a",
            "timestamp": "2023-10-06T13:50:53+03:00",
            "author": "Me No Dev",
            "commit_message": "Add TFLite Micro examples (#8717)\n\n* create TFLite library\r\n\r\n* add TFLite hello_world example\r\n\r\n* add TFLite micro_speech example\r\n\r\n---------\r\n\r\nCo-authored-by: Sanket Wadekar <67091512+sanketwadekar@users.noreply.github.com>",
            "additions": 116,
            "deletions": 0,
            "change_type": "ADD",
            "diff": "@@ -0,0 +1,116 @@\n+/* Copyright 2019 The TensorFlow Authors. All Rights Reserved.\n+\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+\n+    http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+==============================================================================*/\n+\n+#include \"micro_features_generator.h\"\n+\n+#include <cmath>\n+#include <cstring>\n+\n+#include \"tensorflow/lite/experimental/microfrontend/lib/frontend.h\"\n+#include \"tensorflow/lite/experimental/microfrontend/lib/frontend_util.h\"\n+#include \"tensorflow/lite/micro/micro_log.h\"\n+#include \"micro_model_settings.h\"\n+\n+// Configure FFT to output 16 bit fixed point.\n+#define FIXED_POINT 16\n+\n+namespace {\n+\n+FrontendState g_micro_features_state;\n+bool g_is_first_time = true;\n+\n+}  // namespace\n+\n+TfLiteStatus InitializeMicroFeatures() {\n+  FrontendConfig config;\n+  config.window.size_ms = kFeatureSliceDurationMs;\n+  config.window.step_size_ms = kFeatureSliceStrideMs;\n+  config.noise_reduction.smoothing_bits = 10;\n+  config.filterbank.num_channels = kFeatureSliceSize;\n+  config.filterbank.lower_band_limit = 125.0;\n+  config.filterbank.upper_band_limit = 7500.0;\n+  config.noise_reduction.smoothing_bits = 10;\n+  config.noise_reduction.even_smoothing = 0.025;\n+  config.noise_reduction.odd_smoothing = 0.06;\n+  config.noise_reduction.min_signal_remaining = 0.05;\n+  config.pcan_gain_control.enable_pcan = 1;\n+  config.pcan_gain_control.strength = 0.95;\n+  config.pcan_gain_control.offset = 80.0;\n+  config.pcan_gain_control.gain_bits = 21;\n+  config.log_scale.enable_log = 1;\n+  config.log_scale.scale_shift = 6;\n+  if (!FrontendPopulateState(&config, &g_micro_features_state,\n+                             kAudioSampleFrequency)) {\n+    MicroPrintf(\"FrontendPopulateState() failed\");\n+    return kTfLiteError;\n+  }\n+  g_is_first_time = true;\n+  return kTfLiteOk;\n+}\n+\n+// This is not exposed in any header, and is only used for testing, to ensure\n+// that the state is correctly set up before generating results.\n+void SetMicroFeaturesNoiseEstimates(const uint32_t* estimate_presets) {\n+  for (int i = 0; i < g_micro_features_state.filterbank.num_channels; ++i) {\n+    g_micro_features_state.noise_reduction.estimate[i] = estimate_presets[i];\n+  }\n+}\n+\n+TfLiteStatus GenerateMicroFeatures(const int16_t* input, int input_size,\n+                                   int output_size, int8_t* output,\n+                                   size_t* num_samples_read) {\n+  const int16_t* frontend_input;\n+  if (g_is_first_time) {\n+    frontend_input = input;\n+    g_is_first_time = false;\n+  } else {\n+    frontend_input = input + 160;\n+  }\n+  FrontendOutput frontend_output = FrontendProcessSamples(\n+      &g_micro_features_state, frontend_input, input_size, num_samples_read);\n+\n+  for (size_t i = 0; i < frontend_output.size; ++i) {\n+    // These scaling values are derived from those used in input_data.py in the\n+    // training pipeline.\n+    // The feature pipeline outputs 16-bit signed integers in roughly a 0 to 670\n+    // range. In training, these are then arbitrarily divided by 25.6 to get\n+    // float values in the rough range of 0.0 to 26.0. This scaling is performed\n+    // for historical reasons, to match up with the output of other feature\n+    // generators.\n+    // The process is then further complicated when we quantize the model. This\n+    // means we have to scale the 0.0 to 26.0 real values to the -128 to 127\n+    // signed integer numbers.\n+    // All this means that to get matching values from our integer feature\n+    // output into the tensor input, we have to perform:\n+    // input = (((feature / 25.6) / 26.0) * 256) - 128\n+    // To simplify this and perform it in 32-bit integer math, we rearrange to:\n+    // input = (feature * 256) / (25.6 * 26.0) - 128\n+    constexpr int32_t value_scale = 256;\n+    constexpr int32_t value_div = static_cast<int32_t>((25.6f * 26.0f) + 0.5f);\n+    int32_t value =\n+        ((frontend_output.values[i] * value_scale) + (value_div / 2)) /\n+        value_div;\n+    value -= 128;\n+    if (value < -128) {\n+      value = -128;\n+    }\n+    if (value > 127) {\n+      value = 127;\n+    }\n+    output[i] = value;\n+  }\n+\n+  return kTfLiteOk;\n+}\n",
            "comment_added_diff": {
                "26": "// Configure FFT to output 16 bit fixed point.",
                "34": "}  // namespace",
                "63": "// This is not exposed in any header, and is only used for testing, to ensure",
                "64": "// that the state is correctly set up before generating results.",
                "85": "    // These scaling values are derived from those used in input_data.py in the",
                "86": "    // training pipeline.",
                "87": "    // The feature pipeline outputs 16-bit signed integers in roughly a 0 to 670",
                "88": "    // range. In training, these are then arbitrarily divided by 25.6 to get",
                "89": "    // float values in the rough range of 0.0 to 26.0. This scaling is performed",
                "90": "    // for historical reasons, to match up with the output of other feature",
                "91": "    // generators.",
                "92": "    // The process is then further complicated when we quantize the model. This",
                "93": "    // means we have to scale the 0.0 to 26.0 real values to the -128 to 127",
                "94": "    // signed integer numbers.",
                "95": "    // All this means that to get matching values from our integer feature",
                "96": "    // output into the tensor input, we have to perform:",
                "97": "    // input = (((feature / 25.6) / 26.0) * 256) - 128",
                "98": "    // To simplify this and perform it in 32-bit integer math, we rearrange to:",
                "99": "    // input = (feature * 256) / (25.6 * 26.0) - 128"
            },
            "comment_deleted_diff": {},
            "comment_modified_diff": {}
        }
    ],
    "micro_features_generator.h": [],
    "micro_model_settings.cpp": [],
    "micro_model_settings.h": [],
    "micro_speech.ino": [],
    "recognize_commands.cpp": [
        {
            "commit": "1da0ca88e85ee4b50d81b41f23f5d41ddec90f5a",
            "timestamp": "2023-10-06T13:50:53+03:00",
            "author": "Me No Dev",
            "commit_message": "Add TFLite Micro examples (#8717)\n\n* create TFLite library\r\n\r\n* add TFLite hello_world example\r\n\r\n* add TFLite micro_speech example\r\n\r\n---------\r\n\r\nCo-authored-by: Sanket Wadekar <67091512+sanketwadekar@users.noreply.github.com>",
            "additions": 137,
            "deletions": 0,
            "change_type": "ADD",
            "diff": "@@ -0,0 +1,137 @@\n+/* Copyright 2017 The TensorFlow Authors. All Rights Reserved.\n+\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+\n+    http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+==============================================================================*/\n+\n+#include \"recognize_commands.h\"\n+\n+#include <limits>\n+\n+RecognizeCommands::RecognizeCommands(int32_t average_window_duration_ms,\n+                                     uint8_t detection_threshold,\n+                                     int32_t suppression_ms,\n+                                     int32_t minimum_count)\n+    : average_window_duration_ms_(average_window_duration_ms),\n+      detection_threshold_(detection_threshold),\n+      suppression_ms_(suppression_ms),\n+      minimum_count_(minimum_count),\n+      previous_results_() {\n+  previous_top_label_ = \"silence\";\n+  previous_top_label_time_ = std::numeric_limits<int32_t>::min();\n+}\n+\n+TfLiteStatus RecognizeCommands::ProcessLatestResults(\n+    const TfLiteTensor* latest_results, const int32_t current_time_ms,\n+    const char** found_command, uint8_t* score, bool* is_new_command) {\n+  if ((latest_results->dims->size != 2) ||\n+      (latest_results->dims->data[0] != 1) ||\n+      (latest_results->dims->data[1] != kCategoryCount)) {\n+    MicroPrintf(\n+        \"The results for recognition should contain %d elements, but there are \"\n+        \"%d in an %d-dimensional shape\",\n+        kCategoryCount, latest_results->dims->data[1],\n+        latest_results->dims->size);\n+    return kTfLiteError;\n+  }\n+\n+  if (latest_results->type != kTfLiteInt8) {\n+    MicroPrintf(\n+        \"The results for recognition should be int8_t elements, but are %d\",\n+        latest_results->type);\n+    return kTfLiteError;\n+  }\n+\n+  if ((!previous_results_.empty()) &&\n+      (current_time_ms < previous_results_.front().time_)) {\n+    MicroPrintf(\n+        \"Results must be fed in increasing time order, but received a \"\n+        \"timestamp of %d that was earlier than the previous one of %d\",\n+        current_time_ms, previous_results_.front().time_);\n+    return kTfLiteError;\n+  }\n+\n+  // Add the latest results to the head of the queue.\n+  previous_results_.push_back({current_time_ms, latest_results->data.int8});\n+\n+  // Prune any earlier results that are too old for the averaging window.\n+  const int64_t time_limit = current_time_ms - average_window_duration_ms_;\n+  while ((!previous_results_.empty()) &&\n+         previous_results_.front().time_ < time_limit) {\n+    previous_results_.pop_front();\n+  }\n+\n+  // If there are too few results, assume the result will be unreliable and\n+  // bail.\n+  const int64_t how_many_results = previous_results_.size();\n+  const int64_t earliest_time = previous_results_.front().time_;\n+  const int64_t samples_duration = current_time_ms - earliest_time;\n+  if ((how_many_results < minimum_count_) ||\n+      (samples_duration < (average_window_duration_ms_ / 4))) {\n+    *found_command = previous_top_label_;\n+    *score = 0;\n+    *is_new_command = false;\n+    return kTfLiteOk;\n+  }\n+\n+  // Calculate the average score across all the results in the window.\n+  int32_t average_scores[kCategoryCount];\n+  for (int offset = 0; offset < previous_results_.size(); ++offset) {\n+    PreviousResultsQueue::Result previous_result =\n+        previous_results_.from_front(offset);\n+    const int8_t* scores = previous_result.scores;\n+    for (int i = 0; i < kCategoryCount; ++i) {\n+      if (offset == 0) {\n+        average_scores[i] = scores[i] + 128;\n+      } else {\n+        average_scores[i] += scores[i] + 128;\n+      }\n+    }\n+  }\n+  for (int i = 0; i < kCategoryCount; ++i) {\n+    average_scores[i] /= how_many_results;\n+  }\n+\n+  // Find the current highest scoring category.\n+  int current_top_index = 0;\n+  int32_t current_top_score = 0;\n+  for (int i = 0; i < kCategoryCount; ++i) {\n+    if (average_scores[i] > current_top_score) {\n+      current_top_score = average_scores[i];\n+      current_top_index = i;\n+    }\n+  }\n+  const char* current_top_label = kCategoryLabels[current_top_index];\n+\n+  // If we've recently had another label trigger, assume one that occurs too\n+  // soon afterwards is a bad result.\n+  int64_t time_since_last_top;\n+  if ((previous_top_label_ == kCategoryLabels[0]) ||\n+      (previous_top_label_time_ == std::numeric_limits<int32_t>::min())) {\n+    time_since_last_top = std::numeric_limits<int32_t>::max();\n+  } else {\n+    time_since_last_top = current_time_ms - previous_top_label_time_;\n+  }\n+  if ((current_top_score > detection_threshold_) &&\n+      ((current_top_label != previous_top_label_) ||\n+       (time_since_last_top > suppression_ms_))) {\n+    previous_top_label_ = current_top_label;\n+    previous_top_label_time_ = current_time_ms;\n+    *is_new_command = true;\n+  } else {\n+    *is_new_command = false;\n+  }\n+  *found_command = current_top_label;\n+  *score = current_top_score;\n+\n+  return kTfLiteOk;\n+}\n",
            "comment_added_diff": {
                "63": "  // Add the latest results to the head of the queue.",
                "66": "  // Prune any earlier results that are too old for the averaging window.",
                "73": "  // If there are too few results, assume the result will be unreliable and",
                "74": "  // bail.",
                "86": "  // Calculate the average score across all the results in the window.",
                "104": "  // Find the current highest scoring category.",
                "115": "  // If we've recently had another label trigger, assume one that occurs too",
                "116": "  // soon afterwards is a bad result."
            },
            "comment_deleted_diff": {},
            "comment_modified_diff": {}
        }
    ],
    "recognize_commands.h": [],
    "ringbuf.c": [],
    "TFLIteMicro.h": [],
    "utility.h": [],
    "DiscoverConnect.ino": [],
    "SerialToSerialBT.ino": [],
    "SerialToSerialBTM.ino": [],
    "SerialToSerialBT_Legacy.ino": [],
    "SerialToSerialBT_SSP.ino": [],
    "SerialToSerialBT_SSP_pairing.ino": [],
    "bt_classic_device_discovery.ino": [],
    "bt_remove_paired_devices.ino": [],
    "BTScan.h": [],
    "Beacon_Scanner.ino": [],
    "Beacon_Scanner.md": [],
    "Client.ino": [],
    "EddystoneTLM_Beacon.ino": [],
    "EddystoneTLM_Beacon.md": [],
    "EddystoneURL_Beacon.ino": [],
    "EddystoneURL_Beacon.md": [],
    "Notify.ino": [],
    "Scan.ino": [],
    "Server.ino": [],
    "Server_multiconnect.ino": [],
    "UART.ino": [],
    "Write.ino": [],
    "iBeacon.ino": [],
    "BLEEddystoneTLM.cppwithheadder": [],
    "BLEEddystoneURL.h.orig": [],
    "GeneralUtils.h": [],
    "RTOS.h": []
}