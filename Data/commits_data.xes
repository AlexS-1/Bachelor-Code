<?xml version="1.0" encoding="utf-8" ?>
<log xes.version="1849-2016" xes.features="nested-attributes" xmlns="http://www.xes-standard.org/">
	<trace>
		<string key="file" value="boards.txt" />
	</trace>
	<trace>
		<string key="file" value="bootloader-tinyuf2.bin" />
	</trace>
	<trace>
		<string key="file" value="partitions-8MB-tinyuf2.csv" />
	</trace>
	<trace>
		<string key="file" value="pins_arduino.h" />
	</trace>
	<trace>
		<string key="file" value="tinyuf2.bin" />
	</trace>
	<trace>
		<string key="file" value="variant.cpp" />
		<event>
			<string key="timestamp" value="2022-10-25T11:57:07+02:00" />
			<string key="author" value="Wai Weng" />
			<string key="change_type" value="ADD" />
			<string key="commit_message" value="Add New Board: Cytron Maker Feather AIoT S3. (#7348)&#10;&#10;* Added support for Cytron Maker Feather AIoT S3.&#13;&#10;&#13;&#10;* 1. Select OPI PSRAM by default.&#13;&#10;2. Fixed pin name error in variant.cpp.&#13;&#10;3. Added definition for RGB_BUILTIN.&#13;&#10;&#13;&#10;* Define the RGB_BUILTIN as shown in #6979.&#13;&#10;&#13;&#10;* Added pin definition for A12 (Vin Sense)." />
			<int key="additions" value="38" />
			<int key="deletions" value="0" />
			<string key="diff" value='@@ -0,0 +1,38 @@&#10;+/* &#10;+ * The MIT License (MIT)&#10;+ *&#10;+ * Copyright (c) 2022 Wai Weng for Cytron Technologies&#10;+ *&#10;+ * Permission is hereby granted, free of charge, to any person obtaining a copy&#10;+ * of this software and associated documentation files (the "Software"), to deal&#10;+ * in the Software without restriction, including without limitation the rights&#10;+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell&#10;+ * copies of the Software, and to permit persons to whom the Software is&#10;+ * furnished to do so, subject to the following conditions:&#10;+ *&#10;+ * The above copyright notice and this permission notice shall be included in&#10;+ * all copies or substantial portions of the Software.&#10;+ *&#10;+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR&#10;+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,&#10;+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE&#10;+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER&#10;+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,&#10;+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN&#10;+ * THE SOFTWARE.&#10;+ */&#10;+&#10;+&#10;+#include "esp32-hal-gpio.h"&#10;+#include "pins_arduino.h"&#10;+&#10;+extern "C" {&#10;+&#10;+// Initialize variant/board, called before setup()&#10;+void initVariant(void)&#10;+{&#10;+  // Turn on VPeripheral by default.&#10;+  pinMode(VP_EN, OUTPUT);&#10;+  digitalWrite(VP_EN, HIGH);&#10;+}&#10;+}&#10;' />
			<string key="comment_change" value="True" />
		</event>
		<event>
			<string key="timestamp" value="2023-02-06T14:31:06+02:00" />
			<string key="author" value="Ha Thach" />
			<string key="change_type" value="MODIFY" />
			<string key="commit_message" value="add adafruit new board feather esp32s2 reserve tft (#7794)" />
			<int key="additions" value="6" />
			<int key="deletions" value="1" />
			<string key="diff" value='@@ -31,7 +31,12 @@ extern "C" {&#10; // Initialize variant/board, called before setup()&#10; void initVariant(void)&#10; {&#10;-&#10;+  // This board has power control pins, and we must set them to output and high&#10;+  // in order to enable the NeoPixels, TFT &amp; I2C&#10;+  pinMode(NEOPIXEL_POWER, OUTPUT);&#10;+  digitalWrite(NEOPIXEL_POWER, HIGH);&#10;+  pinMode(TFT_I2C_POWER, OUTPUT);&#10;+  digitalWrite(TFT_I2C_POWER, HIGH);&#10; }&#10; &#10; }&#10;' />
			<string key="comment_change" value="True" />
		</event>
		<event>
			<string key="timestamp" value="2023-02-06T21:12:06+02:00" />
			<string key="author" value="surt" />
			<string key="change_type" value="ADD" />
			<string key="commit_message" value="Add LED_BUILTIN* definitions and initialization for LEDs to stop them floating. (#7636)&#10;&#10;Co-authored-by: Rodrigo Garcia &lt;rodrigo.garcia@espressif.com&gt;" />
			<int key="additions" value="7" />
			<int key="deletions" value="0" />
			<string key="diff" value='@@ -0,0 +1,7 @@&#10;+#include "Arduino.h"&#10;+&#10;+extern "C" void initVariant(void){&#10;+&#9;// Stop LEDs floating&#10;+&#9;pinMode(LED_BUILTIN, OUTPUT); digitalWrite(LED_BUILTIN, LOW);&#10;+&#9;pinMode(LED_BUILTIN_AUX, OUTPUT); digitalWrite(LED_BUILTIN_AUX, LOW);&#10;+}&#10;\ No newline at end of file&#10;' />
			<string key="comment_change" value="True" />
		</event>
		<event>
			<string key="timestamp" value="2023-02-08T12:34:54+02:00" />
			<string key="author" value="Ha Thach" />
			<string key="change_type" value="ADD" />
			<string key="commit_message" value="add new board Adafruit Feather ESP32-S3 Reverse TFT (#7811)" />
			<int key="additions" value="42" />
			<int key="deletions" value="0" />
			<string key="diff" value='@@ -0,0 +1,42 @@&#10;+/* &#10;+ * The MIT License (MIT)&#10;+ *&#10;+ * Copyright (c) 2021 Ha Thach (tinyusb.org) for Adafruit Industries&#10;+ *&#10;+ * Permission is hereby granted, free of charge, to any person obtaining a copy&#10;+ * of this software and associated documentation files (the "Software"), to deal&#10;+ * in the Software without restriction, including without limitation the rights&#10;+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell&#10;+ * copies of the Software, and to permit persons to whom the Software is&#10;+ * furnished to do so, subject to the following conditions:&#10;+ *&#10;+ * The above copyright notice and this permission notice shall be included in&#10;+ * all copies or substantial portions of the Software.&#10;+ *&#10;+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR&#10;+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,&#10;+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE&#10;+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER&#10;+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,&#10;+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN&#10;+ * THE SOFTWARE.&#10;+ */&#10;+&#10;+&#10;+#include "esp32-hal-gpio.h"&#10;+#include "pins_arduino.h"&#10;+&#10;+extern "C" {&#10;+&#10;+// Initialize variant/board, called before setup()&#10;+void initVariant(void)&#10;+{&#10;+  // This board has power control pins, and we must set them to output and high&#10;+  // in order to enable the NeoPixels, TFT &amp; I2C&#10;+  pinMode(NEOPIXEL_POWER, OUTPUT);&#10;+  digitalWrite(NEOPIXEL_POWER, HIGH);&#10;+  pinMode(TFT_I2C_POWER, OUTPUT);&#10;+  digitalWrite(TFT_I2C_POWER, HIGH);&#10;+}&#10;+&#10;+}&#10;' />
			<string key="comment_change" value="True" />
		</event>
		<event>
			<string key="timestamp" value="2023-07-01T11:08:21+03:00" />
			<string key="author" value="Ha Thach" />
			<string key="change_type" value="ADD" />
			<string key="commit_message" value="add Adafruit QT PY S3 with 4MB flash 2 MB PSRAM (#8370)&#10;&#10;also re-order Adafruit boards a bit" />
			<int key="additions" value="39" />
			<int key="deletions" value="0" />
			<string key="diff" value='@@ -0,0 +1,39 @@&#10;+/* &#10;+ * The MIT License (MIT)&#10;+ *&#10;+ * Copyright (c) 2021 Ha Thach (tinyusb.org) for Adafruit Industries&#10;+ *&#10;+ * Permission is hereby granted, free of charge, to any person obtaining a copy&#10;+ * of this software and associated documentation files (the "Software"), to deal&#10;+ * in the Software without restriction, including without limitation the rights&#10;+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell&#10;+ * copies of the Software, and to permit persons to whom the Software is&#10;+ * furnished to do so, subject to the following conditions:&#10;+ *&#10;+ * The above copyright notice and this permission notice shall be included in&#10;+ * all copies or substantial portions of the Software.&#10;+ *&#10;+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR&#10;+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,&#10;+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE&#10;+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER&#10;+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,&#10;+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN&#10;+ * THE SOFTWARE.&#10;+ */&#10;+&#10;+&#10;+#include "esp32-hal-gpio.h"&#10;+#include "pins_arduino.h"&#10;+&#10;+extern "C" {&#10;+&#10;+// Initialize variant/board, called before setup()&#10;+void initVariant(void)&#10;+{&#10;+  // This board has a power control pin, and we must set it to output and high&#10;+  // in order to enable the NeoPixels.&#10;+  pinMode(NEOPIXEL_POWER, OUTPUT);&#10;+  digitalWrite(NEOPIXEL_POWER, HIGH);&#10;+}&#10;+}&#10;' />
			<string key="comment_change" value="True" />
		</event>
		<event>
			<string key="timestamp" value="2023-08-29T13:56:23+03:00" />
			<string key="author" value="Ha Thach" />
			<string key="change_type" value="ADD" />
			<string key="commit_message" value="add Adafruit metro S3 16MB Flash, 8MB PSRam (#8478)&#10;&#10;* add Adafruit metro S3 16MB Flash, 8MB PSRam&#13;&#10;&#13;&#10;also reorder to have feather boards next to each others&#13;&#10;&#13;&#10;* correct SS pin to 21, also add NEOPIXEL_PIN&#13;&#10;&#13;&#10;* change metro s3 psram type to opi, default SD_CS (SS) to input pull up&#13;&#10;&#13;&#10;* remove psram qspi option" />
			<int key="additions" value="37" />
			<int key="deletions" value="0" />
			<string key="diff" value='@@ -0,0 +1,37 @@&#10;+/* &#10;+ * The MIT License (MIT)&#10;+ *&#10;+ * Copyright (c) 2021 Ha Thach (tinyusb.org) for Adafruit Industries&#10;+ *&#10;+ * Permission is hereby granted, free of charge, to any person obtaining a copy&#10;+ * of this software and associated documentation files (the "Software"), to deal&#10;+ * in the Software without restriction, including without limitation the rights&#10;+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell&#10;+ * copies of the Software, and to permit persons to whom the Software is&#10;+ * furnished to do so, subject to the following conditions:&#10;+ *&#10;+ * The above copyright notice and this permission notice shall be included in&#10;+ * all copies or substantial portions of the Software.&#10;+ *&#10;+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR&#10;+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,&#10;+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE&#10;+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER&#10;+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,&#10;+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN&#10;+ * THE SOFTWARE.&#10;+ */&#10;+&#10;+&#10;+#include "esp32-hal-gpio.h"&#10;+#include "pins_arduino.h"&#10;+&#10;+extern "C" {&#10;+&#10;+// Initialize variant/board, called before setup()&#10;+void initVariant(void) {&#10;+  // default SD_CS to input pullup&#10;+  pinMode(SS, INPUT_PULLUP);&#10;+}&#10;+&#10;+}&#10;' />
			<string key="comment_change" value="True" />
		</event>
		<event>
			<string key="timestamp" value="2023-10-04T20:01:41+03:00" />
			<string key="author" value="Melissa LeBlanc-Williams" />
			<string key="change_type" value="ADD" />
			<string key="commit_message" value="Add Additional Adafruit boards including the new Qualia ESP32-S3 and Camera ESP32-S3 (#8696)&#10;&#10;* Add MatrixPortal ESP32-S3 (WIP)&#13;&#10;&#13;&#10;* Update bootloader files, etc.&#13;&#10;&#13;&#10;* Add MatrixPortal S3 PSRAM setup to boards.txt&#13;&#10;&#13;&#10;* fix neopixel pin&#13;&#10;&#13;&#10;* initialize bsp&#13;&#10;&#13;&#10;* ?&#13;&#10;&#13;&#10;* new variant for tft board with RGB666 40-pin display contact&#13;&#10;&#13;&#10;* fix menu name&#13;&#10;&#13;&#10;* fix neopixel pins&#13;&#10;&#13;&#10;* more pin defs&#13;&#10;&#13;&#10;* second bootloader file&#13;&#10;&#13;&#10;* fix partition&#13;&#10;&#13;&#10;* Update variants/adafruit_camera_esp32s3/pins_arduino.h&#13;&#10;&#13;&#10;Co-authored-by: Jan Procházka &lt;90197375+P-R-O-C-H-Y@users.noreply.github.com&gt;&#13;&#10;&#13;&#10;* Update variants/adafruit_qualia_s3_rgb666/pins_arduino.h&#13;&#10;&#13;&#10;Co-authored-by: Jan Procházka &lt;90197375+P-R-O-C-H-Y@users.noreply.github.com&gt;&#13;&#10;&#13;&#10;* add some #'s&#13;&#10;&#13;&#10;* hardware design mistakes? in this economy? now we can use PSRAM and SPI at the same time :)&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Phillip Burgess &lt;paintyourdragon@dslextreme.com&gt;&#13;&#10;Co-authored-by: Limor &quot;Ladyada&quot; Fried &lt;limor@ladyada.net&gt;&#13;&#10;Co-authored-by: Jan Procházka &lt;90197375+P-R-O-C-H-Y@users.noreply.github.com&gt;" />
			<int key="additions" value="36" />
			<int key="deletions" value="0" />
			<string key="diff" value='@@ -0,0 +1,36 @@&#10;+/* &#10;+ * The MIT License (MIT)&#10;+ *&#10;+ * Copyright (c) 2021 Ha Thach (tinyusb.org) for Adafruit Industries&#10;+ *&#10;+ * Permission is hereby granted, free of charge, to any person obtaining a copy&#10;+ * of this software and associated documentation files (the "Software"), to deal&#10;+ * in the Software without restriction, including without limitation the rights&#10;+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell&#10;+ * copies of the Software, and to permit persons to whom the Software is&#10;+ * furnished to do so, subject to the following conditions:&#10;+ *&#10;+ * The above copyright notice and this permission notice shall be included in&#10;+ * all copies or substantial portions of the Software.&#10;+ *&#10;+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR&#10;+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,&#10;+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE&#10;+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER&#10;+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,&#10;+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN&#10;+ * THE SOFTWARE.&#10;+ */&#10;+&#10;+&#10;+#include "esp32-hal-gpio.h"&#10;+#include "pins_arduino.h"&#10;+&#10;+extern "C" {&#10;+&#10;+// Initialize variant/board, called before setup()&#10;+void initVariant(void)&#10;+{&#10;+&#10;+}&#10;+}&#10;' />
			<string key="comment_change" value="True" />
		</event>
		<event>
			<string key="timestamp" value="2023-10-04T20:01:41+03:00" />
			<string key="author" value="Melissa LeBlanc-Williams" />
			<string key="change_type" value="MODIFY" />
			<string key="commit_message" value="Add Additional Adafruit boards including the new Qualia ESP32-S3 and Camera ESP32-S3 (#8696)&#10;&#10;* Add MatrixPortal ESP32-S3 (WIP)&#13;&#10;&#13;&#10;* Update bootloader files, etc.&#13;&#10;&#13;&#10;* Add MatrixPortal S3 PSRAM setup to boards.txt&#13;&#10;&#13;&#10;* fix neopixel pin&#13;&#10;&#13;&#10;* initialize bsp&#13;&#10;&#13;&#10;* ?&#13;&#10;&#13;&#10;* new variant for tft board with RGB666 40-pin display contact&#13;&#10;&#13;&#10;* fix menu name&#13;&#10;&#13;&#10;* fix neopixel pins&#13;&#10;&#13;&#10;* more pin defs&#13;&#10;&#13;&#10;* second bootloader file&#13;&#10;&#13;&#10;* fix partition&#13;&#10;&#13;&#10;* Update variants/adafruit_camera_esp32s3/pins_arduino.h&#13;&#10;&#13;&#10;Co-authored-by: Jan Procházka &lt;90197375+P-R-O-C-H-Y@users.noreply.github.com&gt;&#13;&#10;&#13;&#10;* Update variants/adafruit_qualia_s3_rgb666/pins_arduino.h&#13;&#10;&#13;&#10;Co-authored-by: Jan Procházka &lt;90197375+P-R-O-C-H-Y@users.noreply.github.com&gt;&#13;&#10;&#13;&#10;* add some #'s&#13;&#10;&#13;&#10;* hardware design mistakes? in this economy? now we can use PSRAM and SPI at the same time :)&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Phillip Burgess &lt;paintyourdragon@dslextreme.com&gt;&#13;&#10;Co-authored-by: Limor &quot;Ladyada&quot; Fried &lt;limor@ladyada.net&gt;&#13;&#10;Co-authored-by: Jan Procházka &lt;90197375+P-R-O-C-H-Y@users.noreply.github.com&gt;" />
			<int key="additions" value="2" />
			<int key="deletions" value="1" />
			<string key="diff" value='@@ -30,7 +30,8 @@ extern "C" {&#10; &#10; // Initialize variant/board, called before setup()&#10; void initVariant(void) {&#10;-  // default SD_CS to input pullup&#10;+  // default SD_CS to input pullup (we cannot have built in pullup since its&#10;+  // a strapping pin!)&#10;   pinMode(SS, INPUT_PULLUP);&#10; }&#10; &#10;' />
			<string key="comment_change" value="True" />
		</event>
		<event>
			<string key="timestamp" value="2023-10-04T20:01:41+03:00" />
			<string key="author" value="Melissa LeBlanc-Williams" />
			<string key="change_type" value="ADD" />
			<string key="commit_message" value="Add Additional Adafruit boards including the new Qualia ESP32-S3 and Camera ESP32-S3 (#8696)&#10;&#10;* Add MatrixPortal ESP32-S3 (WIP)&#13;&#10;&#13;&#10;* Update bootloader files, etc.&#13;&#10;&#13;&#10;* Add MatrixPortal S3 PSRAM setup to boards.txt&#13;&#10;&#13;&#10;* fix neopixel pin&#13;&#10;&#13;&#10;* initialize bsp&#13;&#10;&#13;&#10;* ?&#13;&#10;&#13;&#10;* new variant for tft board with RGB666 40-pin display contact&#13;&#10;&#13;&#10;* fix menu name&#13;&#10;&#13;&#10;* fix neopixel pins&#13;&#10;&#13;&#10;* more pin defs&#13;&#10;&#13;&#10;* second bootloader file&#13;&#10;&#13;&#10;* fix partition&#13;&#10;&#13;&#10;* Update variants/adafruit_camera_esp32s3/pins_arduino.h&#13;&#10;&#13;&#10;Co-authored-by: Jan Procházka &lt;90197375+P-R-O-C-H-Y@users.noreply.github.com&gt;&#13;&#10;&#13;&#10;* Update variants/adafruit_qualia_s3_rgb666/pins_arduino.h&#13;&#10;&#13;&#10;Co-authored-by: Jan Procházka &lt;90197375+P-R-O-C-H-Y@users.noreply.github.com&gt;&#13;&#10;&#13;&#10;* add some #'s&#13;&#10;&#13;&#10;* hardware design mistakes? in this economy? now we can use PSRAM and SPI at the same time :)&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Phillip Burgess &lt;paintyourdragon@dslextreme.com&gt;&#13;&#10;Co-authored-by: Limor &quot;Ladyada&quot; Fried &lt;limor@ladyada.net&gt;&#13;&#10;Co-authored-by: Jan Procházka &lt;90197375+P-R-O-C-H-Y@users.noreply.github.com&gt;" />
			<int key="additions" value="37" />
			<int key="deletions" value="0" />
			<string key="diff" value='@@ -0,0 +1,37 @@&#10;+/* &#10;+ * The MIT License (MIT)&#10;+ *&#10;+ * Copyright (c) 2021 Ha Thach (tinyusb.org) for Adafruit Industries&#10;+ *&#10;+ * Permission is hereby granted, free of charge, to any person obtaining a copy&#10;+ * of this software and associated documentation files (the "Software"), to deal&#10;+ * in the Software without restriction, including without limitation the rights&#10;+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell&#10;+ * copies of the Software, and to permit persons to whom the Software is&#10;+ * furnished to do so, subject to the following conditions:&#10;+ *&#10;+ * The above copyright notice and this permission notice shall be included in&#10;+ * all copies or substantial portions of the Software.&#10;+ *&#10;+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR&#10;+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,&#10;+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE&#10;+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER&#10;+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,&#10;+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN&#10;+ * THE SOFTWARE.&#10;+ */&#10;+&#10;+&#10;+#include "esp32-hal-gpio.h"&#10;+#include "pins_arduino.h"&#10;+&#10;+extern "C" {&#10;+&#10;+// Initialize variant/board, called before setup()&#10;+void initVariant(void) {&#10;+  // default SD_CS to input pullup&#10;+  pinMode(SS, INPUT_PULLUP);&#10;+}&#10;+&#10;+}&#10;' />
			<string key="comment_change" value="True" />
		</event>
		<event>
			<string key="timestamp" value="2023-10-06T13:50:15+03:00" />
			<string key="author" value="Rodrigo Garcia" />
			<string key="change_type" value="MODIFY" />
			<string key="commit_message" value="Master5.1 s3 gpio48 and platform txt review (#8726)&#10;&#10;* variants + S3 GPIO48&#13;&#10;&#13;&#10;* fixes unphone8.build.flash_type&#13;&#10;&#13;&#10;* fixes unphone8.build.flash_type&#13;&#10;&#13;&#10;* heltec board name issue step 1&#13;&#10;&#13;&#10;* heltec board name issue step 2&#13;&#10;&#13;&#10;* fixes defines and new boards&#13;&#10;&#13;&#10;* final review" />
			<int key="additions" value="1" />
			<int key="deletions" value="2" />
			<string key="diff" value='@@ -30,8 +30,7 @@ extern "C" {&#10; &#10; // Initialize variant/board, called before setup()&#10; void initVariant(void) {&#10;-  // default SD_CS to input pullup (we cannot have built in pullup since its&#10;-  // a strapping pin!)&#10;+  // default SD_CS to input pullup&#10;   pinMode(SS, INPUT_PULLUP);&#10; }&#10; &#10;' />
			<string key="comment_change" value="True" />
		</event>
	</trace>
	<trace>
		<string key="file" value="HardwareSerial.cpp" />
		<event>
			<string key="timestamp" value="2022-11-02T12:30:02+02:00" />
			<string key="author" value="Rodrigo Garcia" />
			<string key="change_type" value="MODIFY" />
			<string key="commit_message" value="fixes UART pin detach on end() (#7402)" />
			<int key="additions" value="19" />
			<int key="deletions" value="3" />
			<string key="diff" value='@@ -145,6 +145,10 @@ _eventTask(NULL)&#10; #if !CONFIG_DISABLE_HAL_LOCKS&#10;     ,_lock(NULL)&#10; #endif&#10;+,_rxPin(-1) &#10;+,_txPin(-1)&#10;+,_ctsPin(-1)&#10;+,_rtsPin(-1)&#10; {&#10; #if !CONFIG_DISABLE_HAL_LOCKS&#10;     if(_lock == NULL){&#10;@@ -384,7 +388,8 @@ void HardwareSerial::begin(unsigned long baud, uint32_t config, int8_t rxPin, in&#10; &#10;     // Set UART RX timeout&#10;     uartSetRxTimeout(_uart, _rxTimeout);&#10;-&#10;+    _rxPin = rxPin;&#10;+    _txPin = txPin;&#10;     HSERIAL_MUTEX_UNLOCK();&#10; }&#10; &#10;@@ -403,6 +408,8 @@ void HardwareSerial::end(bool fullyTerminate)&#10;         if (uartGetDebug() == _uart_nr) {&#10;             uartSetDebug(0);&#10;         }&#10;+        uartDetachPins(_uart, _rxPin, _txPin, _ctsPin, _rtsPin);&#10;+        _rxPin = _txPin = _ctsPin = _rtsPin = -1;&#10;     }&#10;     delay(10);&#10;     uartEnd(_uart);&#10;@@ -507,10 +514,19 @@ void HardwareSerial::setRxInvert(bool invert)&#10; void HardwareSerial::setPins(int8_t rxPin, int8_t txPin, int8_t ctsPin, int8_t rtsPin)&#10; {&#10;     if(_uart == NULL) {&#10;-        log_e("setPins() shall be called after begin() - nothing done");&#10;+        log_e("setPins() shall be called after begin() - nothing done\n");&#10;         return;&#10;     }&#10;-    uartSetPins(_uart, rxPin, txPin, ctsPin, rtsPin);&#10;+&#10;+    // uartSetPins() checks if pins are valid for each function and for the SoC &#10;+    if (uartSetPins(_uart, rxPin, txPin, ctsPin, rtsPin)) {&#10;+        _txPin = _txPin &gt;= 0 ? txPin : _txPin;&#10;+        _rxPin = _rxPin &gt;= 0 ? rxPin : _rxPin;&#10;+        _rtsPin = _rtsPin &gt;= 0 ? rtsPin : _rtsPin;&#10;+        _ctsPin = _ctsPin &gt;= 0 ? ctsPin : _ctsPin;&#10;+    } else {&#10;+        log_e("Error when setting Serial port Pins. Invalid Pin.\n");&#10;+    }&#10; }&#10; &#10; // Enables or disables Hardware Flow Control using RTS and/or CTS pins (must use setAllPins() before)&#10;' />
			<string key="comment_change" value="True" />
		</event>
		<event>
			<string key="timestamp" value="2022-12-13T11:54:07+02:00" />
			<string key="author" value="Rodrigo Garcia" />
			<string key="change_type" value="MODIFY" />
			<string key="commit_message" value="Improves UART reading performance (#7525)&#10;&#10;* Improves UART reading performance&#13;&#10;&#13;&#10;* overrides Stream::readBytes()&#13;&#10;&#13;&#10;* fixes override signature&#13;&#10;&#13;&#10;* adds some IDF error return  conditions" />
			<int key="additions" value="12" />
			<int key="deletions" value="13" />
			<string key="diff" value="@@ -450,10 +450,12 @@ int HardwareSerial::peek(void)&#10; &#10; int HardwareSerial::read(void)&#10; {&#10;-    if(available()) {&#10;-        return uartRead(_uart);&#10;+    uint8_t c = 0;&#10;+    if (uartReadBytes(_uart, &amp;c, 1, 0) == 1) {&#10;+        return c;&#10;+    } else {&#10;+        return -1;&#10;     }&#10;-    return -1;&#10; }&#10; &#10; // read characters into buffer&#10;@@ -462,16 +464,13 @@ int HardwareSerial::read(void)&#10; // the buffer is NOT null terminated.&#10; size_t HardwareSerial::read(uint8_t *buffer, size_t size)&#10; {&#10;-    size_t avail = available();&#10;-    if (size &lt; avail) {&#10;-        avail = size;&#10;-    }&#10;-    size_t count = 0;&#10;-    while(count &lt; avail) {&#10;-        *buffer++ = uartRead(_uart);&#10;-        count++;&#10;-    }&#10;-    return count;&#10;+    return uartReadBytes(_uart, buffer, size, 0);&#10;+}&#10;+&#10;+// Overrides Stream::readBytes() to be faster using IDF&#10;+size_t HardwareSerial::readBytes(uint8_t *buffer, size_t length)&#10;+{&#10;+    return uartReadBytes(_uart, buffer, length, (uint32_t)getTimeout());&#10; }&#10; &#10; void HardwareSerial::flush(void)&#10;" />
			<string key="comment_change" value="True" />
		</event>
		<event>
			<string key="timestamp" value="2022-12-21T18:47:17+02:00" />
			<string key="author" value="Rodrigo Garcia" />
			<string key="change_type" value="MODIFY" />
			<string key="commit_message" value='Fixes inconsistencies and adds extended HardwareSerial examples (#7412)&#10;&#10;* adds extended HardwareSerial examples&#13;&#10;&#13;&#10;* Adds new example with Serial RxTimeout&#13;&#10;&#13;&#10;* adds and improves Serial onReceive expamples&#13;&#10;&#13;&#10;* adjust includes CMake - UART example&#13;&#10;&#13;&#10;* adjust includes CMake - UART example&#13;&#10;&#13;&#10;* fixes CMake and CI&#13;&#10;&#13;&#10;* adds ESP/Serial to CMakeList&#13;&#10;&#13;&#10;* adds ESP/Serial to CMakeList&#13;&#10;&#13;&#10;* fixes demo include&#13;&#10;&#13;&#10;* fixes BREAK demo&#13;&#10;&#13;&#10;* fixes onReceive demo&#13;&#10;&#13;&#10;* Changes FIFO Full criteria&#13;&#10;&#13;&#10;Changed the "1-by-1" Serial only when baud rate is 57600 or lower.&#13;&#10;&#13;&#10;* example code replacement&#13;&#10;&#13;&#10;* replaces functions in hal' />
			<int key="additions" value="45" />
			<int key="deletions" value="7" />
			<string key="diff" value='@@ -139,8 +139,9 @@ _rxBufferSize(256),&#10; _txBufferSize(0), &#10; _onReceiveCB(NULL), &#10; _onReceiveErrorCB(NULL),&#10;-_onReceiveTimeout(true),&#10;+_onReceiveTimeout(false),&#10; _rxTimeout(2),&#10;+_rxFIFOFull(0),&#10; _eventTask(NULL)&#10; #if !CONFIG_DISABLE_HAL_LOCKS&#10;     ,_lock(NULL)&#10;@@ -206,12 +207,23 @@ void HardwareSerial::onReceive(OnReceiveCb function, bool onlyOnTimeout)&#10;     HSERIAL_MUTEX_LOCK();&#10;     // function may be NULL to cancel onReceive() from its respective task &#10;     _onReceiveCB = function;&#10;-    // When Rx timeout is Zero (disabled), there is only one possible option that is callback when FIFO reaches 120 bytes&#10;-    _onReceiveTimeout = _rxTimeout &gt; 0 ? onlyOnTimeout : false;&#10; &#10;-    // this can be called after Serial.begin(), therefore it shall create the event task&#10;-    if (function != NULL &amp;&amp; _uart != NULL &amp;&amp; _eventTask == NULL) {&#10;-        _createEventTask(this); // Create event task&#10;+    // setting the callback to NULL will just disable it&#10;+    if (_onReceiveCB != NULL) {&#10;+        // When Rx timeout is Zero (disabled), there is only one possible option that is callback when FIFO reaches 120 bytes&#10;+        _onReceiveTimeout = _rxTimeout &gt; 0 ? onlyOnTimeout : false;&#10;+&#10;+        // in case that onReceive() shall work only with RX Timeout, FIFO shall be high&#10;+        // this is a work around for an IDF issue with events and low FIFO Full value (&lt; 3)&#10;+        if (_onReceiveTimeout) {&#10;+            uartSetRxFIFOFull(_uart, 120);&#10;+            log_w("OnReceive is set to Timeout only, thus FIFO Full is now 120 bytes.");&#10;+        }&#10;+&#10;+        // this method can be called after Serial.begin(), therefore it shall create the event task&#10;+        if (_uart != NULL &amp;&amp; _eventTask == NULL) {&#10;+            _createEventTask(this); // Create event task&#10;+        }&#10;     }&#10;     HSERIAL_MUTEX_UNLOCK();&#10; }&#10;@@ -224,7 +236,14 @@ void HardwareSerial::onReceive(OnReceiveCb function, bool onlyOnTimeout)&#10; void HardwareSerial::setRxFIFOFull(uint8_t fifoBytes)&#10; {&#10;     HSERIAL_MUTEX_LOCK();&#10;+    // in case that onReceive() shall work only with RX Timeout, FIFO shall be high&#10;+    // this is a work around for an IDF issue with events and low FIFO Full value (&lt; 3)&#10;+    if (_onReceiveCB != NULL &amp;&amp; _onReceiveTimeout) {&#10;+        fifoBytes = 120;&#10;+        log_w("OnReceive is set to Timeout only, thus FIFO Full is now 120 bytes.");&#10;+    }&#10;     uartSetRxFIFOFull(_uart, fifoBytes); // Set new timeout&#10;+    if (fifoBytes &gt; 0 &amp;&amp; fifoBytes &lt; SOC_UART_FIFO_LEN - 1) _rxFIFOFull = fifoBytes;&#10;     HSERIAL_MUTEX_UNLOCK();&#10; }&#10; &#10;@@ -299,7 +318,6 @@ void HardwareSerial::_uartEventTask(void *args)&#10;                 }&#10;                 if (currentErr != UART_NO_ERROR) {&#10;                     if(uart-&gt;_onReceiveErrorCB) uart-&gt;_onReceiveErrorCB(currentErr);&#10;-                    if(uart-&gt;_onReceiveCB &amp;&amp; uart-&gt;available() &gt; 0) uart-&gt;_onReceiveCB();   // forces User Callback too&#10;                 }&#10;             }&#10;         }&#10;@@ -388,8 +406,24 @@ void HardwareSerial::begin(unsigned long baud, uint32_t config, int8_t rxPin, in&#10; &#10;     // Set UART RX timeout&#10;     uartSetRxTimeout(_uart, _rxTimeout);&#10;+&#10;+    // Set UART FIFO Full depending on the baud rate. &#10;+    // Lower baud rates will force to emulate byte-by-byte reading&#10;+    // Higher baud rates will keep IDF default of 120 bytes for FIFO FULL Interrupt&#10;+    // It can also be changed by the application at any time &#10;+    if (!_rxFIFOFull) {    // it has not being changed before calling begin()&#10;+      //  set a default FIFO Full value for the IDF driver&#10;+      uint8_t fifoFull = 1;&#10;+      if (baud &gt; 57600 || (_onReceiveCB != NULL &amp;&amp; _onReceiveTimeout)) {&#10;+        fifoFull = 120;&#10;+      }&#10;+      uartSetRxFIFOFull(_uart, fifoFull);&#10;+      _rxFIFOFull = fifoFull;&#10;+    }&#10;+&#10;     _rxPin = rxPin;&#10;     _txPin = txPin;&#10;+&#10;     HSERIAL_MUTEX_UNLOCK();&#10; }&#10; &#10;@@ -408,8 +442,12 @@ void HardwareSerial::end(bool fullyTerminate)&#10;         if (uartGetDebug() == _uart_nr) {&#10;             uartSetDebug(0);&#10;         }&#10;+&#10;+        _rxFIFOFull = 0; &#10;+&#10;         uartDetachPins(_uart, _rxPin, _txPin, _ctsPin, _rtsPin);&#10;         _rxPin = _txPin = _ctsPin = _rtsPin = -1;&#10;+&#10;     }&#10;     delay(10);&#10;     uartEnd(_uart);&#10;' />
			<string key="comment_change" value="True" />
		</event>
		<event>
			<string key="timestamp" value="2023-10-05T14:54:25+03:00" />
			<string key="author" value="Me No Dev" />
			<string key="change_type" value="MODIFY" />
			<string key="commit_message" value="ESP-IDF v5.1 (#7733)&#10;&#10;* Initial changes to compile under ESP-IDF v5.1&#13;&#10;&#13;&#10;* Initial import for ESP-IDF v5.1 libs&#13;&#10;&#13;&#10;* Update toolchain&#13;&#10;&#13;&#10;* Update esp32-hal-psram.c&#13;&#10;&#13;&#10;* Add missing LDs&#13;&#10;&#13;&#10;* Update platform.txt&#13;&#10;&#13;&#10;* Stop some CI jobs, because they will always fail&#13;&#10;&#13;&#10;* Fix examples&#13;&#10;&#13;&#10;* Update app_httpd.cpp&#13;&#10;&#13;&#10;* Update ResetReason.ino&#13;&#10;&#13;&#10;* Warnings fixes&#13;&#10;&#13;&#10;* Added the example guideline and template (#7665)&#13;&#10;&#13;&#10;* Added the example guideline and template&#13;&#10;&#13;&#10;* PR review changes with some typos and grammar fixes&#13;&#10;&#13;&#10;* Changes according to the PR review&#13;&#10;&#13;&#10;* Added ESP32-S3 link to the datasheet (#7738)&#13;&#10;&#13;&#10;* Update HiFreq_ADC.ino&#13;&#10;&#13;&#10;* Replace periph_ctrl.h use because of deprecation&#13;&#10;&#13;&#10;* Replace esp_spi_flash.h use because of deprecation&#13;&#10;&#13;&#10;* Add includes to male mDNS::enableWorkstation compile&#13;&#10;&#13;&#10;* Fix ssl_client mbedtls_pk_parse_key callback&#13;&#10;&#13;&#10;* Update temperature sensor driver&#13;&#10;&#13;&#10;* Allow sketch_utils to compile with arduino-cli&#13;&#10;&#13;&#10;* Run CI with arduino-cli&#13;&#10;&#13;&#10;* Fix arduino-cli CI build on Windows&#13;&#10;&#13;&#10;* Refactor platform.txt to not use components installed through the board manager when running from git&#13;&#10;&#13;&#10;* Initial Peripheral Manager Implementation&#13;&#10;&#13;&#10;* Update SigmaDelta driver to use the new ESP-IDF driver API&#13;&#10;&#13;&#10;* Small improvements to peripheral manager and SigmaDelta&#13;&#10;&#13;&#10;* Remove deleted function from SigmaDelta header&#13;&#10;&#13;&#10;* Update DAC driver to use the new ESP-IDF driver API&#13;&#10;&#13;&#10;* Adds softAp(String) to make it compatible with ESP8266 (#7801)&#13;&#10;&#13;&#10;* Fix commentary (#7800)&#13;&#10;&#13;&#10;Minor fix based on observation done in https://github.com/espressif/arduino-esp32/issues/7795#issuecomment-1416868611&#13;&#10;&#13;&#10;* add adafruit new board feather esp32s2 reserve tft (#7794)&#13;&#10;&#13;&#10;* bugfix: add &lt;stdint.h&gt; for uint8_t to avoid compilation failure (GCC 11.2.0) (#7744)&#13;&#10;&#13;&#10;* Adding 3rd party boards for VALTRACK-V4-VTS-ESP32-C3 &amp; VALTRACK-V4-MFW-ESP32-C3 (#7735)&#13;&#10;&#13;&#10;* Added VALTRACK-V4-VTS-ESP32-C3 board definition&#13;&#10;&#13;&#10;Created pins_arduino.h &amp; made changes to boards.txt with necessary changes&#13;&#10;&#13;&#10;* Modified the URL&#13;&#10;&#13;&#10;* Renamed json&#13;&#10;&#13;&#10;* renamed all auRL&#13;&#10;&#13;&#10;* Adding VALTRACK-V4 series board definitions&#13;&#10;&#13;&#10;Added VALTRACK-V4-VTS-ESP32C3 &amp; VALTRACK-V4-MFW-ESP32-C3 board variants&#13;&#10;&#13;&#10;* Adding VALTRACK-V4 series board definitions&#13;&#10;&#13;&#10;Added VALTRACK-V4-VTS-ESP32C3 &amp; VALTRACK-V4-MFW-ESP32-C3 board variants&#13;&#10;&#13;&#10;* Reverted package_esp32_index.template.json&#13;&#10;&#13;&#10;restored package_esp32_index.template.json from edits&#13;&#10;&#13;&#10;* Reverted package_esp32_index.template.json&#13;&#10;&#13;&#10;Added new line to package_esp32_index.template.json&#13;&#10;&#13;&#10;* Update Platformio CI (#7725)&#13;&#10;&#13;&#10;* WiFiClient example fix (#7711)&#13;&#10;&#13;&#10;* Modified WiFiClient example to use thingspeak instead of non-functionig sparkfun&#13;&#10;&#13;&#10;* Moved instructions to README&#13;&#10;&#13;&#10;* Fixed spelling&#13;&#10;&#13;&#10;* Added link to S3 datasheet&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Jan Procházka &lt;90197375+P-R-O-C-H-Y@users.noreply.github.com&gt;&#13;&#10;&#13;&#10;* Mirror update from Heltec repository (#7709)&#13;&#10;&#13;&#10;Heltec updated the I2C pins in https://github.com/Heltec-Aaron-Lee/WiFi_Kit_series/commit/b10f4bf85d13fd01be80dcdb0eb59e6a8c8ba19a&#13;&#10;&#13;&#10;* Fixes BLE data printing (#7699)&#13;&#10;&#13;&#10;* Fixes BLE data printing&#13;&#10;&#13;&#10;BLE data has no '\0' terminator, therefore it can't be printed as a regular C string.&#13;&#10;This fix just prints the BLE data based on its length.&#13;&#10;&#13;&#10;* Simplify printing to a single call&#13;&#10;&#13;&#10;* split menu options + lora_32_V3 fix (#7697)&#13;&#10;&#13;&#10;* Change header gaurd name (#7696)&#13;&#10;&#13;&#10;* Fix Name (#7691)&#13;&#10;&#13;&#10;Wrong name in definitions.&#13;&#10;&#13;&#10;* Fix error in WiFiClient.cpp where the connect function fails for timeouts below 1 second (#7686)&#13;&#10;&#13;&#10;* Update WiFiClient.cpp&#13;&#10;&#13;&#10;This change will allow specifying connect timeouts below 1 second. Without this change, if connect timeouts under 1 second are given, the connect defaults to 0ms and fails. &#13;&#10;This will also allow timeouts in fractions of seconds, e.g. 1500ms. Without this change, connect timeouts are truncated to full second increments.&#13;&#10;&#13;&#10;* Make parameter timeout_ms clear&#13;&#10;&#13;&#10;* Change connection timeout_ms name for clarity&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Rodrigo Garcia &lt;rodrigo.garcia@espressif.com&gt;&#13;&#10;&#13;&#10;* fixed the function header (#7674)&#13;&#10;&#13;&#10;* fixed the function header&#13;&#10;&#13;&#10;* fixed function name and paramaters&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Jan Procházka &lt;90197375+P-R-O-C-H-Y@users.noreply.github.com&gt;&#13;&#10;&#13;&#10;* Ticker fix solving #6155 (#7664)&#13;&#10;&#13;&#10;* Wrapped Ticker functions with #pragma disabling -Wcast-function-type&#13;&#10;&#13;&#10;* Revert &quot;Wrapped Ticker functions with #pragma disabling -Wcast-function-type&quot;&#13;&#10;&#13;&#10;This reverts commit 160be7e67a10d01b6e44c4bf2521c0ccd6348976.&#13;&#10;&#13;&#10;* Fixed Ticker example&#13;&#10;&#13;&#10;* Modified Ticker example&#13;&#10;&#13;&#10;* Fixed LED_BUILTIN err for ESP32&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Jan Procházka &lt;90197375+P-R-O-C-H-Y@users.noreply.github.com&gt;&#13;&#10;&#13;&#10;* setPins fix ESP32 &quot;specified pins are not supported by this chip.&quot; (#7646)&#13;&#10;&#13;&#10;[ESP32: SDMMCFS::begin hardcodes the usage of slot 1, only check if the pins match slot 1 pins.]&#13;&#10;&#13;&#10;setPins() was testing pins D1, D2 and D3 all against D1 ... fine in 1 pin mode when all are -1 not so much if you're trying to get 4 pin mode working.&#13;&#10;I now see this function doesn't really do anything on the ESP32...accept now correctly checks that you are trying to use the slot 1 pins.&#13;&#10;&#13;&#10;Co-authored-by: Jan Procházka &lt;90197375+P-R-O-C-H-Y@users.noreply.github.com&gt;&#13;&#10;&#13;&#10;* Allow passing IP as connect method parameter in WiFiClientSecure and skip unnecessary host-ip conversions (#7643)&#13;&#10;&#13;&#10;* Add LED_BUILTIN* definitions and initialization for LEDs to stop them floating. (#7636)&#13;&#10;&#13;&#10;Co-authored-by: Rodrigo Garcia &lt;rodrigo.garcia@espressif.com&gt;&#13;&#10;&#13;&#10;* Expand path to tinuf2 image when checking existence in platformio-build.py (#7631)&#13;&#10;&#13;&#10;* Expand path to tinuf2 image when checking existence&#13;&#10;&#13;&#10;* More isFiles fixed&#13;&#10;&#13;&#10;* Remove (useless) trailing semicolon from Print.cpp (#7622)&#13;&#10;&#13;&#10;* ADD: New variant Edgebox-ESP-100 (#7771)&#13;&#10;&#13;&#10;* ADD: New variant Edgebox-ESP-100&#13;&#10;&#13;&#10;* FIX: Edgebox-ESP-100 Board.txt usb mode option change back to default value as ESP32S3&#13;&#10;&#13;&#10;* Add Crabik Slot ESP32-S3 board (#7790)&#13;&#10;&#13;&#10;* Added Crabik Slot ESP32-S3&#13;&#10;&#13;&#10;* Adding CPU frequency settings and removing excess from partition scheme settings&#13;&#10;&#13;&#10;* new variant LilyGO T-Display-S3 (#7763)&#13;&#10;&#13;&#10;* new variant LilyGO T-Display-S3&#13;&#10;&#13;&#10;https://github.com/Xinyuan-LilyGO/T-Display-S3&#13;&#10;&#13;&#10;* Add boards.txt definition&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Me No Dev &lt;me-no-dev@users.noreply.github.com&gt;&#13;&#10;&#13;&#10;* Update get.py to support Apple ARM64&#13;&#10;&#13;&#10;* Update package_esp32_index.template.json&#13;&#10;&#13;&#10;* WString Return bool (#7774)&#13;&#10;&#13;&#10;* Add Roboheart Hercules development board to the esp32-core (#7672)&#13;&#10;&#13;&#10;* added Roboheart Hercules pin definitions and board.txt entries&#13;&#10;&#13;&#10;* added package_roboheat.json for prototyping&#13;&#10;&#13;&#10;* Roboheart Hercules pins&#13;&#10;&#13;&#10;* Updated the pins&#13;&#10;&#13;&#10;* Delete package_roboheart.json&#13;&#10;&#13;&#10;* Requested changes&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: renebohne &lt;rene.bohne@gmail.com&gt;&#13;&#10;&#13;&#10;* Reword &quot;ESP-IDF as Component&quot; (#7812)&#13;&#10;&#13;&#10;I think &quot;Arduino as an ESP-IDF component&quot; or just &quot;As ESP-IDF component&quot; instead of  &quot;ESP-IDF as Component&quot; is more correct way to name the link.&#13;&#10;&#13;&#10;1. &quot;ESP-IDF as Component&quot; would imply that ESP-IDF is some sort of library for Arduino, which is (IMO) misleading, because it's true the other way around.&#13;&#10;2. It's written as &quot;Arduino as an ESP-IDF component&quot; on the webpage it points to as well.&#13;&#10;&#13;&#10;- Also I removed the capitalization from &quot;Component&quot; as I have not found a reason why is it capitalized.&#13;&#10;&#13;&#10;* add new board Adafruit Feather ESP32-S3 Reverse TFT (#7811)&#13;&#10;&#13;&#10;* Multi threading examples (tasks, queues, semaphores, mutexes) (#7660)&#13;&#10;&#13;&#10;* Moved and renamed example ESP32/FreeRTOS to MultiThreading/BasicMultiThreading&#13;&#10;&#13;&#10;* Added dummy files&#13;&#10;&#13;&#10;* Modified original example&#13;&#10;&#13;&#10;* Fixed BasicMultiThreading.ino&#13;&#10;&#13;&#10;* Added Example demonstrating use of queues&#13;&#10;&#13;&#10;* Extended info in BasicMultiThreading&#13;&#10;&#13;&#10;* Renamed Queues to singular Queue&#13;&#10;&#13;&#10;* Added Mutex example&#13;&#10;&#13;&#10;* Added Semaphore example&#13;&#10;&#13;&#10;* Moved info from example to README&#13;&#10;&#13;&#10;* Moved doc from Mutex to README&#13;&#10;&#13;&#10;* Added Queue README&#13;&#10;&#13;&#10;* Removed unecesary text&#13;&#10;&#13;&#10;* Fixed grammar&#13;&#10;&#13;&#10;* Increased stack size for Sempahore example&#13;&#10;&#13;&#10;* Added headers into .ino files&#13;&#10;&#13;&#10;* Added word Example at the end of title in README&#13;&#10;&#13;&#10;* removed unused line&#13;&#10;&#13;&#10;* Added forgotten README&#13;&#10;&#13;&#10;* Modified BasicMultiThreading example&#13;&#10;&#13;&#10;* Added missing S3 entry in README&#13;&#10;&#13;&#10;* moved location&#13;&#10;&#13;&#10;* Update ESP-IDF libs&#13;&#10;&#13;&#10;* Update CMakeLists.txt&#13;&#10;&#13;&#10;* Update esptool to v4.4&#13;&#10;&#13;&#10;* Add function timerAttachInterruptFlag (#7809)&#13;&#10;&#13;&#10;* Update esptool to v4.5&#13;&#10;&#13;&#10;* ADC refactoring (#7827)&#13;&#10;&#13;&#10;* Adc refactored + periman implementation&#13;&#10;&#13;&#10;Peripheral manager still needs to be checked if the implementation is right.&#13;&#10;&#13;&#10;* switched to working solution for milivolts read&#13;&#10;&#13;&#10;* Periman detachbus fix&#13;&#10;&#13;&#10;* coding style&#13;&#10;&#13;&#10;* fix CI warnings&#13;&#10;&#13;&#10;* fix FreeRTOS example&#13;&#10;&#13;&#10;* Update ETH.cpp&#13;&#10;&#13;&#10;* Update FunctionalInterruptStruct.ino&#13;&#10;&#13;&#10;* Update package_esp32_index.template.json&#13;&#10;&#13;&#10;* Update package_esp32_index.template.json&#13;&#10;&#13;&#10;* Fixes for the latest IDF v5.1&#13;&#10;&#13;&#10;* update esp-idf libs and toolchain&#13;&#10;&#13;&#10;* Turn OFF auto crystal frequency for ESP32 (needed by TWAI)&#13;&#10;&#13;&#10;* Update examples&#13;&#10;&#13;&#10;* Switch build to mostly use flags from files&#13;&#10;&#13;&#10;Includes can not be done this way&#13;&#10;&#13;&#10;* Reorganize flag files&#13;&#10;&#13;&#10;* Optimize chip build flags further&#13;&#10;&#13;&#10;* Revert defines from file. MBEDTLS_CONFIG_FILE does not properly expand&#13;&#10;&#13;&#10;* Add support for includes and defines from file&#13;&#10;&#13;&#10;* Replace old sdk path references in platform.txt&#13;&#10;&#13;&#10;* use gcc-ar (#8013)&#13;&#10;&#13;&#10;* Makes F_CPU generic for all SoC (#8007)&#13;&#10;&#13;&#10;Based on CONFIG_ESP_DEFAULT_CPU_FREQ_MHZ that is correctly defined in the sdkconfig file for each SoC.&#13;&#10;&#13;&#10;* TIMER refactoring (#7904)&#13;&#10;&#13;&#10;* refactor using GPtimer&#13;&#10;&#13;&#10;* Updated timer HW test&#13;&#10;&#13;&#10;* fix examples&#13;&#10;&#13;&#10;* Add v2.0.7 in issue template (#7871)&#13;&#10;&#13;&#10;* refactor using GPtimer&#13;&#10;&#13;&#10;* Updated timer HW test&#13;&#10;&#13;&#10;* fix examples&#13;&#10;&#13;&#10;* Revert &quot;Add v2.0.7 in issue template (#7871)&quot;&#13;&#10;&#13;&#10;This reverts commit fcc3b17d62ff57861f8913ca1f142fd5163b7457.&#13;&#10;&#13;&#10;* Update upload-artifact to v3 in HW CI&#13;&#10;&#13;&#10;* Revert &quot;Update upload-artifact to v3 in HW CI&quot;&#13;&#10;&#13;&#10;This reverts commit 1ba228071718ba37c4e26d98db22f77b2a7364a6.&#13;&#10;&#13;&#10;* replace resolution with frequency&#13;&#10;&#13;&#10;* remove count_down option&#13;&#10;&#13;&#10;* countup removed from examples + header&#13;&#10;&#13;&#10;* Refactored timer object&#13;&#10;&#13;&#10;* code cleanup + examples and tests fixes&#13;&#10;&#13;&#10;* TimerAlarm fix&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Vojtěch Bartoška &lt;76958047+VojtechBartoska@users.noreply.github.com&gt;&#13;&#10;&#13;&#10;* [Docs] ADC and Timer API Update (+some docs fixes) (#7906)&#13;&#10;&#13;&#10;* updated docs&#13;&#10;&#13;&#10;* remove hall sensor docs&#13;&#10;&#13;&#10;Removed Hall sensor documentation as its no longer supported in IDF-5&#13;&#10;&#13;&#10;* Fixed ESPNow examples location in docs&#13;&#10;&#13;&#10;* Last timer refactored API + gpio small fix&#13;&#10;&#13;&#10;* AlarmWrite fix&#13;&#10;&#13;&#10;* Fixes APLL/PLL with RTC Frequency (#8025)&#13;&#10;&#13;&#10;log_d() was displaying APLL for any SoC, but S3 and C3 has not such option, causing compilation errors.&#13;&#10;&#13;&#10;* Update IDF libs and fix OPI PSRAM on S3&#13;&#10;&#13;&#10;* Add setMode function HardwareSerial.c to set the esp32 uart mode for use with RS485 auto RTS (#7935)&#13;&#10;&#13;&#10;* Added setMode function to set the esp32 uart mode&#13;&#10;&#13;&#10;Used to set the esp32 uart mode for use with RS485 Half Duplex and the auto RTS pin mode. This will set/clear the RTS pin output to control the RE/DE pin on most RS485 chips.&#13;&#10;&#13;&#10;* Add Success (bool) return in some functions&#13;&#10;&#13;&#10;* Add Success (bool) return code to some functions&#13;&#10;&#13;&#10;* Add Success (bool) return to some functions&#13;&#10;&#13;&#10;* Add Success (bool) return to some functions&#13;&#10;&#13;&#10;* Fix uartSetRxTimeout return type&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Rodrigo Garcia &lt;rodrigo.garcia@espressif.com&gt;&#13;&#10;&#13;&#10;* Add support for esp-elf-gdb&#13;&#10;&#13;&#10;* WFG Crashfix (#8044)&#13;&#10;&#13;&#10;* Update component libs&#13;&#10;&#13;&#10;* IDF release/v5.1 (#8061)&#13;&#10;&#13;&#10;* IDF release/v5.1 bb9200acec&#13;&#10;&#13;&#10;* Update Esp.cpp&#13;&#10;&#13;&#10;* IDF release/v5.1 420ebd208a&#13;&#10;&#13;&#10;* Update esp32-hal-psram.c&#13;&#10;&#13;&#10;* Switch SDK to be an external package&#13;&#10;&#13;&#10;* fix path (#8096)&#13;&#10;&#13;&#10;* Makes UART work at any APB Frequency (#8097)&#13;&#10;&#13;&#10;Fixes HardwareSerial to work with IDF 5.1 on any CPU/APB Frequency (240MHz to 10MHZ), including user created low power modes.&#13;&#10;&#13;&#10;* Add required callbacks for TinyUSB DFU&#13;&#10;&#13;&#10;* Update version to 3.0.0&#13;&#10;&#13;&#10;* Add ESP.getCoreVersion() and update ESP.getChipModel()&#13;&#10;&#13;&#10;* Update timer hal for the latest 5.1&#13;&#10;&#13;&#10;* Use separate RX and TX buffer sizes in HTTP client&#13;&#10;&#13;&#10;optimizes download by allowing up to 4K packets to be received&#13;&#10;&#13;&#10;* Rename clock tree enum name in latest 5.1&#13;&#10;&#13;&#10;* ESP32-H4 support was removed in ESP-IDF v5.1&#13;&#10;&#13;&#10;* IDF release/v5.1 2004bf4e11 (#8165)&#13;&#10;&#13;&#10;* Deinit previous bus first (#8180)&#13;&#10;&#13;&#10;* TIMER - add timer_started flag, fix timerEnd() + timer HW test (#8135)&#13;&#10;&#13;&#10;* Add timer_started flag and stop before disable&#13;&#10;&#13;&#10;* Fix timer HW test&#13;&#10;&#13;&#10;* TOUCH - Peripheral manager implementation (#8129)&#13;&#10;&#13;&#10;* Touch periman implemented&#13;&#10;&#13;&#10;* Deinit previous bus first&#13;&#10;&#13;&#10;* LEDC Refactoring - Peripheral manager implemented (#8126)&#13;&#10;&#13;&#10;* LEDC periman implementation&#13;&#10;&#13;&#10;* Fix examples&#13;&#10;&#13;&#10;* Rework tone&#13;&#10;&#13;&#10;* Update ledc docs&#13;&#10;&#13;&#10;* fix missing bracket&#13;&#10;&#13;&#10;* Update analog funtions esp32-hal.h&#13;&#10;&#13;&#10;* Update CameraWebServer example&#13;&#10;&#13;&#10;* Fix HiFreq_ADC example&#13;&#10;&#13;&#10;* minor fixes - typos&#13;&#10;&#13;&#10;* Avoid calling tone/notone when tone already runs on dif. pin&#13;&#10;&#13;&#10;* Remove unused channels_resolution&#13;&#10;&#13;&#10;* GPIO - Peripheral manager implementation (#8179)&#13;&#10;&#13;&#10;* periman-implementation&#13;&#10;&#13;&#10;* fix RGB_BUILTIN and remove space&#13;&#10;&#13;&#10;* Enforces more consistency into Peripheral Manager (#8188)&#13;&#10;&#13;&#10;* Avoid log_i() message the first time a bus is assigned&#13;&#10;&#13;&#10;* Prevent operation with ESP32_BUS_TYPE_INIT&#13;&#10;&#13;&#10;* keeps coding style&#13;&#10;&#13;&#10;* do not print messages on INIT bus type&#13;&#10;&#13;&#10;* [Arduino Core 3.0.0] RMT IDF5.1 Refactoring (#7994)&#13;&#10;&#13;&#10;* RMT IDF5.1 refactoring&#13;&#10;&#13;&#10;* Fixes initial value setting&#13;&#10;&#13;&#10;* removed rmtRead() with user callback&#13;&#10;&#13;&#10;* simplify/remove Read data structure&#13;&#10;&#13;&#10;* Deep API simplification&#13;&#10;&#13;&#10;* fixes the examples&#13;&#10;&#13;&#10;* fix rmt.h&#13;&#10;&#13;&#10;* adds support to APB different frequencies&#13;&#10;&#13;&#10;* fixes CI and not defined RGB_BUILTIN&#13;&#10;&#13;&#10;* new RMT API and examples&#13;&#10;&#13;&#10;* fixing commentaties&#13;&#10;&#13;&#10;* Update esp32-hal-rgb-led.c&#13;&#10;&#13;&#10;* changes Filter API&#13;&#10;&#13;&#10;* Fixes example with Filter API&#13;&#10;&#13;&#10;* Update PlatformIO scripts for the upcoming 3.0 core (#8183)&#13;&#10;&#13;&#10;* Update PlatformIO scripts for the upcoming 3.0 core&#13;&#10;&#13;&#10;* Dynamically select proper framework-arduinoespressif32-libs package&#13;&#10;&#13;&#10;With this change the dev-platform will be dynamically configured to&#13;&#10;pull the latest .zip package with precompiled libraries from extracted from&#13;&#10;package_esp32_index.template.json&#13;&#10;&#13;&#10;* free memory on detach (#8264)&#13;&#10;&#13;&#10;* SPI - Peripheral manager implementation  (#8255)&#13;&#10;&#13;&#10;* spi periman implementation&#13;&#10;&#13;&#10;* fix header file&#13;&#10;&#13;&#10;* remove unused struct&#13;&#10;&#13;&#10;* fix missing braces&#13;&#10;&#13;&#10;* Update esp32-hal-rmt.c (#8216)&#13;&#10;&#13;&#10;Optimizing Peripheral Manager Test&#13;&#10;&#13;&#10;* I2C - Peripheral manager implementation (#8220)&#13;&#10;&#13;&#10;* i2c-master periman initial commit&#13;&#10;&#13;&#10;* i2c-master make detachbus static + comment remove&#13;&#10;&#13;&#10;* i2c-slave periman implementation&#13;&#10;&#13;&#10;* SetPinBus to INIT on i2cDeinits&#13;&#10;&#13;&#10;* Fix slave pins deinit&#13;&#10;&#13;&#10;* remove dbg logs&#13;&#10;&#13;&#10;* set ret to ESP_FAIL instead of returning&#13;&#10;&#13;&#10;* Fix warnings in hal-spi caused by pariman transition&#13;&#10;&#13;&#10;* Update esptool.py to version 4.6&#13;&#10;&#13;&#10;* Add platform support for ESP_SR&#13;&#10;&#13;&#10;* Add USB Type and valid pin check to periman&#13;&#10;&#13;&#10;* replace bus with spi-&gt;num+1 (#8279)&#13;&#10;&#13;&#10;* Remove default pins from SPI HAL&#13;&#10;&#13;&#10;* Add commented out handlers for esptool.js in TinyUSB CDC&#13;&#10;&#13;&#10;For future use&#13;&#10;&#13;&#10;* Add build defines for host os and fqbn (for debug purposes)&#13;&#10;&#13;&#10;* Provide proper memory caps total size&#13;&#10;&#13;&#10;* Update Esp.cpp&#13;&#10;&#13;&#10;* SDMMC - Peripheral manager implementation (#8289)&#13;&#10;&#13;&#10;* sdmmc periman implemented&#13;&#10;&#13;&#10;* save pins when SOC_SDMMC_USE_IOMUX&#13;&#10;&#13;&#10;* IDF release/v5.1 4bc762621d (#8292)&#13;&#10;&#13;&#10;* Adds missing pinMode (#8312)&#13;&#10;&#13;&#10;* Adds missing pinMode&#13;&#10;&#13;&#10;The example code lacks a pinMode() to initialize the GPIO 0 (button). In Arduino Core 3.0.0, it prints an error message when trying to read a not initialized GPIO.&#13;&#10;&#13;&#10;* Update KeyboardLogout.ino&#13;&#10;&#13;&#10;Adds &lt;buttonPin&gt; to keep code standard&#13;&#10;&#13;&#10;* Update KeyboardReprogram.ino&#13;&#10;&#13;&#10;Adds &lt;buttonPin&gt; to keep code standard&#13;&#10;&#13;&#10;* LEDC Fade implementation (#8338)&#13;&#10;&#13;&#10;* fade API + pointer fixes&#13;&#10;&#13;&#10;* Add fade api&#13;&#10;&#13;&#10;* Add fade example&#13;&#10;&#13;&#10;* update ledc docs&#13;&#10;&#13;&#10;* remove unused variables&#13;&#10;&#13;&#10;* fix path to example&#13;&#10;&#13;&#10;* Adds USB to Peripheral Manager - Arduino Core 3.0.0 (#8335)&#13;&#10;&#13;&#10;* ETHERNET - Peripheral manager implementation (#8297)&#13;&#10;&#13;&#10;* Peripheral manager implemented&#13;&#10;&#13;&#10;* remove unused variable&#13;&#10;&#13;&#10;* Add all RMII pins&#13;&#10;&#13;&#10;* fix typo&#13;&#10;&#13;&#10;* Adds HardwareSerial to Peripheral Manager Arduino 3.0.0 (#8328)&#13;&#10;&#13;&#10;* Do not limit ETHERNET in periman to only ESP32. SPI is also an option&#13;&#10;&#13;&#10;* Initial support for ESP32-C6 (#8337)&#13;&#10;&#13;&#10;* Add checks for SOC defines (#8351)&#13;&#10;&#13;&#10;* Add checks for SOC defines&#13;&#10;&#13;&#10;* Add SoC checks to BLE library&#13;&#10;&#13;&#10;* fix i2c compilation error&#13;&#10;&#13;&#10;* fix wrong placement of include&#13;&#10;&#13;&#10;* add check to SPI library&#13;&#10;&#13;&#10;* add check to USB library&#13;&#10;&#13;&#10;* add checks to Wire library&#13;&#10;&#13;&#10;* Feature/esp32h2 support (#8373)&#13;&#10;&#13;&#10;* Initial support for ESP32H2&#13;&#10;&#13;&#10;* Additional changes for ESP32H2&#13;&#10;&#13;&#10;* Update libs for ESP32H2&#13;&#10;&#13;&#10;* Fix flashing on ESP32-H2&#13;&#10;&#13;&#10;* Fix GPIO Configs for ESP32-C6 and ESP32-H2&#13;&#10;&#13;&#10;* Update Timer test sketch&#13;&#10;&#13;&#10;* Fix upload flash parameters&#13;&#10;&#13;&#10;* Use ets_write_char_uart instead of ets_printf in log_printfv&#13;&#10;&#13;&#10;* Print full chip report when log level is sufficient (#8282)&#13;&#10;&#13;&#10;* ESP32-C3 does not have ets_write_char_uart&#13;&#10;&#13;&#10;* Fix BLE gap event name&#13;&#10;&#13;&#10;* HW Testing - Pytest update (#8389)&#13;&#10;&#13;&#10;* update tests requirements&#13;&#10;&#13;&#10;* remove already handled components&#13;&#10;&#13;&#10;* Update version of pytest&#13;&#10;&#13;&#10;* Add missing ESP32-H2 to hil.yml&#13;&#10;&#13;&#10;* Updated FreeRTOS names (#8418)&#13;&#10;&#13;&#10;* HW Testing -  ESP32-C6 + ESP32-H2 fixes (#8404)&#13;&#10;&#13;&#10;* add C6/H2 to tests cfg.json&#13;&#10;&#13;&#10;* remove ,&#13;&#10;&#13;&#10;* workflow runs-on runner by matrix&#13;&#10;&#13;&#10;* Add need for arduino tag to select runner&#13;&#10;&#13;&#10;* Add cryptography to requirements.txt&#13;&#10;&#13;&#10;* Removed duplicate TX1 define for H2 (#8402)&#13;&#10;&#13;&#10;* Fix broken examples&#13;&#10;&#13;&#10;* Fixes RMT filter &amp; idle timing and setup (#8359)&#13;&#10;&#13;&#10;* Fixes Filter and Idle parameter to uint32&#13;&#10;&#13;&#10;* Fixes Filter and Idle setup&#13;&#10;&#13;&#10;* Fixes it to 5.1Libs branch&#13;&#10;&#13;&#10;* fix RMT CLK source and Filter API&#13;&#10;&#13;&#10;* fixes missing ;&#13;&#10;&#13;&#10;* fixes missing ;&#13;&#10;&#13;&#10;* fixes RMT example&#13;&#10;&#13;&#10;* IDF release/v5.1 a7b62bbcaf (#8438)&#13;&#10;&#13;&#10;* Add workflow to build executables from python scripts (#8290)&#13;&#10;&#13;&#10;* Add workflow to build executables from python scripts&#13;&#10;&#13;&#10;* Push binary to tools&#13;&#10;&#13;&#10;* Enable executable signing on Windows&#13;&#10;&#13;&#10;* Update get.py&#13;&#10;&#13;&#10;* Push binary to tools&#13;&#10;&#13;&#10;* Try with multiple files&#13;&#10;&#13;&#10;* Try more actions&#13;&#10;&#13;&#10;* Try powershell&#13;&#10;&#13;&#10;* Restore tools so they do not get rebuilt&#13;&#10;&#13;&#10;* Finalize scripts&#13;&#10;&#13;&#10;* Push binary to tools&#13;&#10;&#13;&#10;* App rollback should be after PSRAM is initialized&#13;&#10;&#13;&#10;* Correcting RX1 to GPIO4 and TX1 to GPIO5 to be consistent with documentation. Previous pin use works but is inconsistent with C6 docs.&#13;&#10;&#13;&#10;* Fixes Memory Leak (#8486)&#13;&#10;&#13;&#10;* fixes preprocessor test (#8485)&#13;&#10;&#13;&#10;* fixes preprocessor test&#13;&#10;&#13;&#10;When using `#define USE_SOFT_AP` &#13;&#10;Change&#13;&#10;`&amp;&amp; not USE_SOFT_AP` ==&gt; `&amp;&amp; !defined(USE_SOFT_AP)`&#13;&#10;&#13;&#10;* Adds any BLE capable device in WiFiProv.ino&#13;&#10;&#13;&#10;Removing ESP32 restriction for BLE Provisioning.&#13;&#10;&#13;&#10;* fix flash mode read out for C6&#13;&#10;&#13;&#10;* Add option for custom partitions without restrictions&#13;&#10;&#13;&#10;* SD_MMC update (#8298)&#13;&#10;&#13;&#10;* Updated SD_MMC lib and examples&#13;&#10;&#13;&#10;* Removed getter implementation and commented usage in examples&#13;&#10;&#13;&#10;* squashed updates&#13;&#10;&#13;&#10;* IDF release/v5.1 f0437b945f (#8599)&#13;&#10;&#13;&#10;* Update package_esp32_index.template.json&#13;&#10;&#13;&#10;* Fix printf format build error in BTAdvertisedDeviceSet.cpp&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Pedro Minatel &lt;pedro.minatel@espressif.com&gt;&#13;&#10;Co-authored-by: Rodrigo Garcia &lt;rodrigo.garcia@espressif.com&gt;&#13;&#10;Co-authored-by: Ha Thach &lt;thach@tinyusb.org&gt;&#13;&#10;Co-authored-by: Martin Turski &lt;quiret@vfemail.net&gt;&#13;&#10;Co-authored-by: raviypujar &lt;raviypujar@gmail.com&gt;&#13;&#10;Co-authored-by: Jason2866 &lt;24528715+Jason2866@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: Tomáš Pilný &lt;34927466+PilnyTomas@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: Jan Procházka &lt;90197375+P-R-O-C-H-Y@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: Daniel Berlin &lt;dberlin@dberlin.org&gt;&#13;&#10;Co-authored-by: Nima Askari (نیما عسکری) &lt;nimaltd@yahoo.com&gt;&#13;&#10;Co-authored-by: rtpmsys &lt;106180646+rtpmsys@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: bytiful &lt;55647551+bytiful@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: tmfarrington &lt;tmfarrington@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: Krzysiek S &lt;chris.streh@gmail.com&gt;&#13;&#10;Co-authored-by: surt &lt;carl.olsson@gmail.com&gt;&#13;&#10;Co-authored-by: Max Scheffler &lt;max.scheffler@pm.me&gt;&#13;&#10;Co-authored-by: Clemens Kirchgatterer &lt;clemens@1541.org&gt;&#13;&#10;Co-authored-by: Peter Pan's Techland &lt;twinkle-pirate@hotmail.com&gt;&#13;&#10;Co-authored-by: Roman &lt;programmeofficemilkyway@gmail.com&gt;&#13;&#10;Co-authored-by: Eistee &lt;Eistee82@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: David McCurley &lt;44048235+mrengineer7777@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: Gaya3N25 &lt;30388176+Gaya3N25@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: renebohne &lt;rene.bohne@gmail.com&gt;&#13;&#10;Co-authored-by: Olivér Remény &lt;25034625+remenyo@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: davidk88 &lt;david.kotar@gmail.com&gt;&#13;&#10;Co-authored-by: Vojtěch Bartoška &lt;76958047+VojtechBartoska@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: James Armstrong &lt;jamesarmstrong3@me.com&gt;&#13;&#10;Co-authored-by: Valerii Koval &lt;valeros@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: Peter G. Jensen &lt;root@petergjoel.dk&gt;" />
			<int key="additions" value="65" />
			<int key="deletions" value="52" />
			<string key="diff" value='@@ -28,6 +28,10 @@&#10; #define SOC_RX0 44&#10; #elif CONFIG_IDF_TARGET_ESP32C3&#10; #define SOC_RX0 20&#10;+#elif CONFIG_IDF_TARGET_ESP32C6&#10;+#define SOC_RX0 17&#10;+#elif CONFIG_IDF_TARGET_ESP32H2&#10;+#define SOC_RX0 23&#10; #endif&#10; #endif&#10; &#10;@@ -38,6 +42,10 @@&#10; #define SOC_TX0 43&#10; #elif CONFIG_IDF_TARGET_ESP32C3&#10; #define SOC_TX0 21&#10;+#elif CONFIG_IDF_TARGET_ESP32C6&#10;+#define SOC_TX0 16&#10;+#elif CONFIG_IDF_TARGET_ESP32H2&#10;+#define SOC_TX0 24&#10; #endif&#10; #endif&#10; &#10;@@ -55,6 +63,10 @@ void serialEvent(void) {}&#10; #define RX1 18&#10; #elif CONFIG_IDF_TARGET_ESP32S3&#10; #define RX1 15&#10;+#elif CONFIG_IDF_TARGET_ESP32C6&#10;+#define RX1 4&#10;+#elif CONFIG_IDF_TARGET_ESP32H2&#10;+#define RX1 0&#10; #endif&#10; #endif&#10; &#10;@@ -67,6 +79,10 @@ void serialEvent(void) {}&#10; #define TX1 19&#10; #elif CONFIG_IDF_TARGET_ESP32S3&#10; #define TX1 16&#10;+#elif CONFIG_IDF_TARGET_ESP32C6&#10;+#define TX1 5&#10;+#elif CONFIG_IDF_TARGET_ESP32H2&#10;+#define TX1 1&#10; #endif&#10; #endif&#10; &#10;@@ -79,7 +95,7 @@ void serialEvent1(void) {}&#10; #if CONFIG_IDF_TARGET_ESP32&#10; #define RX2 16&#10; #elif CONFIG_IDF_TARGET_ESP32S3&#10;-#define RX2 19 &#10;+#define RX2 19&#10; #endif&#10; #endif&#10; &#10;@@ -128,16 +144,16 @@ void serialEventRun(void)&#10; #define HSERIAL_MUTEX_LOCK()    do {} while (xSemaphoreTake(_lock, portMAX_DELAY) != pdPASS)&#10; #define HSERIAL_MUTEX_UNLOCK()  xSemaphoreGive(_lock)&#10; #else&#10;-#define HSERIAL_MUTEX_LOCK()    &#10;-#define HSERIAL_MUTEX_UNLOCK()  &#10;+#define HSERIAL_MUTEX_LOCK()&#10;+#define HSERIAL_MUTEX_UNLOCK()&#10; #endif&#10; &#10;-HardwareSerial::HardwareSerial(int uart_nr) : &#10;-_uart_nr(uart_nr), &#10;+HardwareSerial::HardwareSerial(int uart_nr) :&#10;+_uart_nr(uart_nr),&#10; _uart(NULL),&#10; _rxBufferSize(256),&#10;-_txBufferSize(0), &#10;-_onReceiveCB(NULL), &#10;+_txBufferSize(0),&#10;+_onReceiveCB(NULL),&#10; _onReceiveErrorCB(NULL),&#10; _onReceiveTimeout(false),&#10; _rxTimeout(2),&#10;@@ -146,10 +162,6 @@ _eventTask(NULL)&#10; #if !CONFIG_DISABLE_HAL_LOCKS&#10;     ,_lock(NULL)&#10; #endif&#10;-,_rxPin(-1) &#10;-,_txPin(-1)&#10;-,_ctsPin(-1)&#10;-,_rtsPin(-1)&#10; {&#10; #if !CONFIG_DISABLE_HAL_LOCKS&#10;     if(_lock == NULL){&#10;@@ -190,10 +202,10 @@ void HardwareSerial::_destroyEventTask(void)&#10;     }&#10; }&#10; &#10;-void HardwareSerial::onReceiveError(OnReceiveErrorCb function) &#10;+void HardwareSerial::onReceiveError(OnReceiveErrorCb function)&#10; {&#10;     HSERIAL_MUTEX_LOCK();&#10;-    // function may be NULL to cancel onReceive() from its respective task &#10;+    // function may be NULL to cancel onReceive() from its respective task&#10;     _onReceiveErrorCB = function;&#10;     // this can be called after Serial.begin(), therefore it shall create the event task&#10;     if (function != NULL &amp;&amp; _uart != NULL &amp;&amp; _eventTask == NULL) {&#10;@@ -205,7 +217,7 @@ void HardwareSerial::onReceiveError(OnReceiveErrorCb function)&#10; void HardwareSerial::onReceive(OnReceiveCb function, bool onlyOnTimeout)&#10; {&#10;     HSERIAL_MUTEX_LOCK();&#10;-    // function may be NULL to cancel onReceive() from its respective task &#10;+    // function may be NULL to cancel onReceive() from its respective task&#10;     _onReceiveCB = function;&#10; &#10;     // setting the callback to NULL will just disable it&#10;@@ -233,7 +245,7 @@ void HardwareSerial::onReceive(OnReceiveCb function, bool onlyOnTimeout)&#10; // A low value of FIFO Full bytes will consume more CPU time within the ISR&#10; // A high value of FIFO Full bytes will make the application wait longer to have byte available for the Stkech in a streaming scenario&#10; // Both RX FIFO Full and RX Timeout may affect when onReceive() will be called&#10;-void HardwareSerial::setRxFIFOFull(uint8_t fifoBytes)&#10;+bool HardwareSerial::setRxFIFOFull(uint8_t fifoBytes)&#10; {&#10;     HSERIAL_MUTEX_LOCK();&#10;     // in case that onReceive() shall work only with RX Timeout, FIFO shall be high&#10;@@ -242,32 +254,34 @@ void HardwareSerial::setRxFIFOFull(uint8_t fifoBytes)&#10;         fifoBytes = 120;&#10;         log_w("OnReceive is set to Timeout only, thus FIFO Full is now 120 bytes.");&#10;     }&#10;-    uartSetRxFIFOFull(_uart, fifoBytes); // Set new timeout&#10;+    bool retCode = uartSetRxFIFOFull(_uart, fifoBytes); // Set new timeout&#10;     if (fifoBytes &gt; 0 &amp;&amp; fifoBytes &lt; SOC_UART_FIFO_LEN - 1) _rxFIFOFull = fifoBytes;&#10;     HSERIAL_MUTEX_UNLOCK();&#10;+    return retCode;&#10; }&#10; &#10; // timout is calculates in time to receive UART symbols at the UART baudrate.&#10; // the estimation is about 11 bits per symbol (SERIAL_8N1)&#10;-void HardwareSerial::setRxTimeout(uint8_t symbols_timeout)&#10;+bool HardwareSerial::setRxTimeout(uint8_t symbols_timeout)&#10; {&#10;     HSERIAL_MUTEX_LOCK();&#10;-    &#10;+&#10;     // Zero disables timeout, thus, onReceive callback will only be called when RX FIFO reaches 120 bytes&#10;-    // Any non-zero value will activate onReceive callback based on UART baudrate with about 11 bits per symbol &#10;-    _rxTimeout = symbols_timeout;   &#10;-    if (!symbols_timeout) _onReceiveTimeout = false;  // only when RX timeout is disabled, we also must disable this flag &#10;+    // Any non-zero value will activate onReceive callback based on UART baudrate with about 11 bits per symbol&#10;+    _rxTimeout = symbols_timeout;&#10;+    if (!symbols_timeout) _onReceiveTimeout = false;  // only when RX timeout is disabled, we also must disable this flag&#10;+&#10;+    bool retCode = uartSetRxTimeout(_uart, _rxTimeout); // Set new timeout&#10; &#10;-    uartSetRxTimeout(_uart, _rxTimeout); // Set new timeout&#10;-    &#10;     HSERIAL_MUTEX_UNLOCK();&#10;+    return retCode;&#10; }&#10; &#10; void HardwareSerial::eventQueueReset()&#10; {&#10;     QueueHandle_t uartEventQueue = NULL;&#10;     if (_uart == NULL) {&#10;-&#9;    return;&#10;+      return;&#10;     }&#10;     uartGetEventQueue(_uart, &amp;uartEventQueue);&#10;     if (uartEventQueue != NULL) {&#10;@@ -284,12 +298,12 @@ void HardwareSerial::_uartEventTask(void *args)&#10;     if (uartEventQueue != NULL) {&#10;         for(;;) {&#10;             //Waiting for UART event.&#10;-            if(xQueueReceive(uartEventQueue, (void * )&amp;event, (portTickType)portMAX_DELAY)) {&#10;+            if(xQueueReceive(uartEventQueue, (void * )&amp;event, (TickType_t)portMAX_DELAY)) {&#10;                 hardwareSerial_error_t currentErr = UART_NO_ERROR;&#10;                 switch(event.type) {&#10;                     case UART_DATA:&#10;-                        if(uart-&gt;_onReceiveCB &amp;&amp; uart-&gt;available() &gt; 0 &amp;&amp; &#10;-                            ((uart-&gt;_onReceiveTimeout &amp;&amp; event.timeout_flag) || !uart-&gt;_onReceiveTimeout) ) &#10;+                        if(uart-&gt;_onReceiveCB &amp;&amp; uart-&gt;available() &gt; 0 &amp;&amp;&#10;+                            ((uart-&gt;_onReceiveTimeout &amp;&amp; event.timeout_flag) || !uart-&gt;_onReceiveTimeout) )&#10;                                 uart-&gt;_onReceiveCB();&#10;                         break;&#10;                     case UART_FIFO_OVF:&#10;@@ -396,7 +410,7 @@ void HardwareSerial::begin(unsigned long baud, uint32_t config, int8_t rxPin, in&#10;         }&#10;     }&#10;     // create a task to deal with Serial Events when, for example, calling begin() twice to change the baudrate,&#10;-    // or when setting the callback before calling begin() &#10;+    // or when setting the callback before calling begin()&#10;     if (_uart != NULL &amp;&amp; (_onReceiveCB != NULL || _onReceiveErrorCB != NULL) &amp;&amp; _eventTask == NULL) {&#10;         _createEventTask(this);&#10;     }&#10;@@ -404,10 +418,10 @@ void HardwareSerial::begin(unsigned long baud, uint32_t config, int8_t rxPin, in&#10;     // Set UART RX timeout&#10;     uartSetRxTimeout(_uart, _rxTimeout);&#10; &#10;-    // Set UART FIFO Full depending on the baud rate. &#10;+    // Set UART FIFO Full depending on the baud rate.&#10;     // Lower baud rates will force to emulate byte-by-byte reading&#10;     // Higher baud rates will keep IDF default of 120 bytes for FIFO FULL Interrupt&#10;-    // It can also be changed by the application at any time &#10;+    // It can also be changed by the application at any time&#10;     if (!_rxFIFOFull) {    // it has not being changed before calling begin()&#10;       //  set a default FIFO Full value for the IDF driver&#10;       uint8_t fifoFull = 1;&#10;@@ -418,20 +432,17 @@ void HardwareSerial::begin(unsigned long baud, uint32_t config, int8_t rxPin, in&#10;       _rxFIFOFull = fifoFull;&#10;     }&#10; &#10;-    _rxPin = rxPin;&#10;-    _txPin = txPin;&#10;-&#10;     HSERIAL_MUTEX_UNLOCK();&#10; }&#10; &#10; void HardwareSerial::updateBaudRate(unsigned long baud)&#10; {&#10;-&#9;uartSetBaudRate(_uart, baud);&#10;+  uartSetBaudRate(_uart, baud);&#10; }&#10; &#10; void HardwareSerial::end(bool fullyTerminate)&#10; {&#10;-    // default Serial.end() will completely disable HardwareSerial, &#10;+    // default Serial.end() will completely disable HardwareSerial,&#10;     // including any tasks or debug message channel (log_x()) - but not for IDF log messages!&#10;     if(fullyTerminate) {&#10;         _onReceiveCB = NULL;&#10;@@ -439,12 +450,11 @@ void HardwareSerial::end(bool fullyTerminate)&#10;         if (uartGetDebug() == _uart_nr) {&#10;             uartSetDebug(0);&#10;         }&#10;-&#10;-        _rxFIFOFull = 0; &#10;-&#10;-        uartDetachPins(_uart, _rxPin, _txPin, _ctsPin, _rtsPin);&#10;-        _rxPin = _txPin = _ctsPin = _rtsPin = -1;&#10;-&#10;+        _rxFIFOFull = 0;&#10;+        uartEnd(_uart);  // fully detach all pins and delete the UART driver&#10;+    } else {&#10;+      // do not invalidate callbacks, detach pins, invalidate DBG output&#10;+      uart_driver_delete(_uart_nr);&#10;     }&#10; &#10;     uartEnd(_uart);&#10;@@ -532,7 +542,7 @@ size_t HardwareSerial::write(const uint8_t *buffer, size_t size)&#10; uint32_t  HardwareSerial::baudRate()&#10; &#10; {&#10;-&#9;return uartGetBaudRate(_uart);&#10;+  return uartGetBaudRate(_uart);&#10; }&#10; HardwareSerial::operator bool() const&#10; {&#10;@@ -545,28 +555,31 @@ void HardwareSerial::setRxInvert(bool invert)&#10; }&#10; &#10; // negative Pin value will keep it unmodified&#10;-void HardwareSerial::setPins(int8_t rxPin, int8_t txPin, int8_t ctsPin, int8_t rtsPin)&#10;+bool HardwareSerial::setPins(int8_t rxPin, int8_t txPin, int8_t ctsPin, int8_t rtsPin)&#10; {&#10;     if(_uart == NULL) {&#10;         log_e("setPins() shall be called after begin() - nothing done\n");&#10;-        return;&#10;+        return false;&#10;     }&#10; &#10;-    // uartSetPins() checks if pins are valid for each function and for the SoC &#10;+    // uartSetPins() checks if pins are valid for each function and for the SoC&#10;     if (uartSetPins(_uart, rxPin, txPin, ctsPin, rtsPin)) {&#10;-        _txPin = _txPin &gt;= 0 ? txPin : _txPin;&#10;-        _rxPin = _rxPin &gt;= 0 ? rxPin : _rxPin;&#10;-        _rtsPin = _rtsPin &gt;= 0 ? rtsPin : _rtsPin;&#10;-        _ctsPin = _ctsPin &gt;= 0 ? ctsPin : _ctsPin;&#10;+        return true;&#10;     } else {&#10;-        log_e("Error when setting Serial port Pins. Invalid Pin.\n");&#10;+        return false;&#10;     }&#10; }&#10; &#10; // Enables or disables Hardware Flow Control using RTS and/or CTS pins (must use setAllPins() before)&#10;-void HardwareSerial::setHwFlowCtrlMode(uint8_t mode, uint8_t threshold)&#10;+bool HardwareSerial::setHwFlowCtrlMode(uint8_t mode, uint8_t threshold)&#10;+{&#10;+    return uartSetHwFlowCtrlMode(_uart, mode, threshold);&#10;+}&#10;+&#10;+// Sets the uart mode in the esp32 uart for use with RS485 modes (HwFlowCtrl must be disabled and RTS pin set)&#10;+bool HardwareSerial::setMode(uint8_t mode)&#10; {&#10;-    uartSetHwFlowCtrlMode(_uart, mode, threshold);&#10;+    return uartSetMode(_uart, mode);&#10; }&#10; &#10; size_t HardwareSerial::setRxBufferSize(size_t new_size) {&#10;' />
			<string key="comment_change" value="True" />
		</event>
		<event>
			<string key="timestamp" value="2023-10-06T13:45:56+03:00" />
			<string key="author" value="Rodrigo Garcia" />
			<string key="change_type" value="MODIFY" />
			<string key="commit_message" value="3.0.0 - UART Peripheral Manager + Detach UART pins on begin()/setPins() (#8719)&#10;&#10;* detach UART pins&#13;&#10;&#13;&#10;* fixes uartEnd() call" />
			<int key="additions" value="28" />
			<int key="deletions" value="23" />
			<string key="diff" value='@@ -149,7 +149,7 @@ void serialEventRun(void)&#10; #define HSERIAL_MUTEX_UNLOCK()&#10; #endif&#10; &#10;-HardwareSerial::HardwareSerial(int uart_nr) :&#10;+HardwareSerial::HardwareSerial(uint8_t uart_nr) :&#10; _uart_nr(uart_nr),&#10; _uart(NULL),&#10; _rxBufferSize(256),&#10;@@ -173,6 +173,12 @@ _eventTask(NULL)&#10;         }&#10;     }&#10; #endif&#10;+    // sets UART0 (default console) RX/TX pins as already configured in boot&#10;+    if (uart_nr == 0) {&#10;+        setPins(SOC_RX0, SOC_TX0);&#10;+    }&#10;+    // set deinit function in the Peripheral Manager&#10;+    uart_init_PeriMan();&#10; }&#10; &#10; HardwareSerial::~HardwareSerial()&#10;@@ -342,8 +348,8 @@ void HardwareSerial::_uartEventTask(void *args)&#10; &#10; void HardwareSerial::begin(unsigned long baud, uint32_t config, int8_t rxPin, int8_t txPin, bool invert, unsigned long timeout_ms, uint8_t rxfifo_full_thrhd)&#10; {&#10;-    if(0 &gt; _uart_nr || _uart_nr &gt;= SOC_UART_NUM) {&#10;-        log_e("Serial number is invalid, please use numers from 0 to %u", SOC_UART_NUM - 1);&#10;+    if(_uart_nr &gt;= SOC_UART_NUM) {&#10;+        log_e("Serial number is invalid, please use a number from 0 to %u", SOC_UART_NUM - 1);&#10;         return;&#10;     }&#10; &#10;@@ -357,26 +363,32 @@ void HardwareSerial::begin(unsigned long baud, uint32_t config, int8_t rxPin, in&#10;     HSERIAL_MUTEX_LOCK();&#10;     // First Time or after end() --&gt; set default Pins&#10;     if (!uartIsDriverInstalled(_uart)) {&#10;+        // get previously used RX/TX pins, if any.&#10;+        int8_t _rxPin = uart_get_RxPin(_uart_nr);&#10;+        int8_t _txPin = uart_get_TxPin(_uart_nr);&#10;         switch (_uart_nr) {&#10;             case UART_NUM_0:&#10;                 if (rxPin &lt; 0 &amp;&amp; txPin &lt; 0) {&#10;-                    rxPin = SOC_RX0;&#10;-                    txPin = SOC_TX0;&#10;+                    // do not change RX0/TX0 if it has already been set before&#10;+                    rxPin = _rxPin &lt; 0 ? SOC_RX0 : _rxPin;&#10;+                    txPin = _txPin &lt; 0 ? SOC_TX0 : _txPin;&#10;                 }&#10;             break;&#10; #if SOC_UART_NUM &gt; 1                   // may save some flash bytes...&#10;             case UART_NUM_1:&#10;                if (rxPin &lt; 0 &amp;&amp; txPin &lt; 0) {&#10;-                    rxPin = RX1;&#10;-                    txPin = TX1;&#10;+                    // do not change RX1/TX1 if it has already been set before&#10;+                    rxPin = _rxPin &lt; 0 ? RX1 : _rxPin;&#10;+                    txPin = _txPin &lt; 0 ? TX1 : _txPin;&#10;                 }&#10;             break;&#10; #endif&#10; #if SOC_UART_NUM &gt; 2                   // may save some flash bytes...&#10;             case UART_NUM_2:&#10;                if (rxPin &lt; 0 &amp;&amp; txPin &lt; 0) {&#10;-                    rxPin = RX2;&#10;-                    txPin = TX2;&#10;+                    // do not change RX2/TX2 if it has already been set before&#10;+                    rxPin = _rxPin &lt; 0 ? RX2 : _rxPin;&#10;+                    txPin = _txPin &lt; 0 ? TX2 : _txPin;&#10;                 }&#10;             break;&#10; #endif&#10;@@ -390,6 +402,7 @@ void HardwareSerial::begin(unsigned long baud, uint32_t config, int8_t rxPin, in&#10;     }&#10; &#10;     // IDF UART driver keeps Pin setting on restarting. Negative Pin number will keep it unmodified.&#10;+    // it will detach previous UART attached pins&#10;     _uart = uartBegin(_uart_nr, baud ? baud : 9600, config, rxPin, txPin, _rxBufferSize, _txBufferSize, invert, rxfifo_full_thrhd);&#10;     if (!baud) {&#10;         // using baud rate as zero, forces it to try to detect the current baud rate in place&#10;@@ -452,13 +465,13 @@ void HardwareSerial::end(bool fullyTerminate)&#10;             uartSetDebug(0);&#10;         }&#10;         _rxFIFOFull = 0;&#10;-        uartEnd(_uart);  // fully detach all pins and delete the UART driver&#10;+        uartEnd(_uart_nr);  // fully detach all pins and delete the UART driver&#10;     } else {&#10;       // do not invalidate callbacks, detach pins, invalidate DBG output&#10;       uart_driver_delete(_uart_nr);&#10;     }&#10; &#10;-    uartEnd(_uart);&#10;+    uartEnd(_uart_nr);&#10;     _uart = 0;&#10;     _destroyEventTask();&#10; }&#10;@@ -540,8 +553,8 @@ size_t HardwareSerial::write(const uint8_t *buffer, size_t size)&#10;     uartWriteBuf(_uart, buffer, size);&#10;     return size;&#10; }&#10;-uint32_t  HardwareSerial::baudRate()&#10; &#10;+uint32_t  HardwareSerial::baudRate()&#10; {&#10;   return uartGetBaudRate(_uart);&#10; }&#10;@@ -556,19 +569,11 @@ void HardwareSerial::setRxInvert(bool invert)&#10; }&#10; &#10; // negative Pin value will keep it unmodified&#10;+// can be called after or before begin()&#10; bool HardwareSerial::setPins(int8_t rxPin, int8_t txPin, int8_t ctsPin, int8_t rtsPin)&#10; {&#10;-    if(_uart == NULL) {&#10;-        log_e("setPins() shall be called after begin() - nothing done\n");&#10;-        return false;&#10;-    }&#10;-&#10;-    // uartSetPins() checks if pins are valid for each function and for the SoC&#10;-    if (uartSetPins(_uart, rxPin, txPin, ctsPin, rtsPin)) {&#10;-        return true;&#10;-    } else {&#10;-        return false;&#10;-    }&#10;+    // uartSetPins() checks if pins are valid and, if necessary, detaches the previous ones&#10;+    return uartSetPins(_uart_nr, rxPin, txPin, ctsPin, rtsPin);&#10; }&#10; &#10; // Enables or disables Hardware Flow Control using RTS and/or CTS pins (must use setAllPins() before)&#10;' />
			<string key="comment_change" value="True" />
		</event>
		<event>
			<string key="timestamp" value="2023-10-06T13:46:40+03:00" />
			<string key="author" value="Rodrigo Garcia" />
			<string key="change_type" value="MODIFY" />
			<string key="commit_message" value="Reorganize RS485 Mode - FlowCtrl (#8718)" />
			<int key="additions" value="10" />
			<int key="deletions" value="4" />
			<string key="diff" value="@@ -576,14 +576,20 @@ bool HardwareSerial::setPins(int8_t rxPin, int8_t txPin, int8_t ctsPin, int8_t r&#10;     return uartSetPins(_uart_nr, rxPin, txPin, ctsPin, rtsPin);&#10; }&#10; &#10;-// Enables or disables Hardware Flow Control using RTS and/or CTS pins (must use setAllPins() before)&#10;-bool HardwareSerial::setHwFlowCtrlMode(uint8_t mode, uint8_t threshold)&#10;+// Enables or disables Hardware Flow Control using RTS and/or CTS pins &#10;+// must use setAllPins() in order to set RTS/CTS pins&#10;+// SerialHwFlowCtrl = UART_HW_FLOWCTRL_DISABLE, UART_HW_FLOWCTRL_RTS, &#10;+//                    UART_HW_FLOWCTRL_CTS, UART_HW_FLOWCTRL_CTS_RTS&#10;+bool HardwareSerial::setHwFlowCtrlMode(SerialHwFlowCtrl mode, uint8_t threshold)&#10; {&#10;     return uartSetHwFlowCtrlMode(_uart, mode, threshold);&#10; }&#10; &#10;-// Sets the uart mode in the esp32 uart for use with RS485 modes (HwFlowCtrl must be disabled and RTS pin set)&#10;-bool HardwareSerial::setMode(uint8_t mode)&#10;+// Sets the uart mode in the esp32 uart for use with RS485 modes &#10;+// HwFlowCtrl must be disabled and RTS pin set&#10;+// SerialMode = UART_MODE_UART, UART_MODE_RS485_HALF_DUPLEX, UART_MODE_IRDA, &#10;+// or testing mode: UART_MODE_RS485_COLLISION_DETECT, UART_MODE_RS485_APP_CTRL &#10;+bool HardwareSerial::setMode(SerialMode mode)&#10; {&#10;     return uartSetMode(_uart, mode);&#10; }&#10;" />
			<string key="comment_change" value="True" />
		</event>
	</trace>
	<trace>
		<string key="file" value="HardwareSerial.h" />
	</trace>
	<trace>
		<string key="file" value="esp32-hal-uart.c" />
	</trace>
	<trace>
		<string key="file" value="esp32-hal-uart.h" />
	</trace>
	<trace>
		<string key="file" value="WiFiGeneric.cpp" />
		<event>
			<string key="timestamp" value="2022-11-02T12:30:43+02:00" />
			<string key="author" value="Juan Luis Leal Contreras" />
			<string key="change_type" value="MODIFY" />
			<string key="commit_message" value='Fixed #7406 crash on WiFi STA_DISCONNECTED event with reason 0 (#7414)&#10;&#10;Fixed #7406 . The "reason2str" macro in WiFiGeneric.cpp tries to read memory from index "-1"  in "system_event_reasons" array when handling STA_DISCONNECTED event with reason 0. Dealing with reason 0 as a reason 1 (WIFI_REASON_UNSPECIFIED) will solve the problem (the reason for this event to arrive with reason 0 is unknown). #7406' />
			<int key="additions" value="3" />
			<int key="deletions" value="0" />
			<string key="diff" value='@@ -947,6 +947,9 @@ esp_err_t WiFiGenericClass::_eventCallback(arduino_event_t *event)&#10;         //esp_netif_create_ip6_linklocal(esp_netifs[ESP_IF_WIFI_STA]);&#10;     } else if(event-&gt;event_id == ARDUINO_EVENT_WIFI_STA_DISCONNECTED) {&#10;         uint8_t reason = event-&gt;event_info.wifi_sta_disconnected.reason;&#10;+        // Reason 0 causes crash, use reason 1 (UNSPECIFIED) instead&#10;+        if(!reason)&#10;+&#9;    reason = WIFI_REASON_UNSPECIFIED;&#10;         log_w("Reason: %u - %s", reason, reason2str(reason));&#10;         if(reason == WIFI_REASON_NO_AP_FOUND) {&#10;             WiFiSTAClass::_setStatus(WL_NO_SSID_AVAIL);&#10;' />
			<string key="comment_change" value="True" />
		</event>
	</trace>
	<trace>
		<string key="file" value="RMaker.cpp" />
	</trace>
	<trace>
		<string key="file" value="BLERemoteCharacteristic.cpp" />
		<event>
			<string key="timestamp" value="2022-11-02T13:07:47+02:00" />
			<string key="author" value="Rotzbua" />
			<string key="change_type" value="MODIFY" />
			<string key="commit_message" value="[BLE Client] Fix deadlock if connection loss ... (#7319)&#10;&#10;... while readValue" />
			<int key="additions" value="2" />
			<int key="deletions" value="0" />
			<string key="diff" value="@@ -247,6 +247,8 @@ void BLERemoteCharacteristic::gattClientEventHandler(esp_gattc_cb_event_t event,&#10; &#9;&#9;&#9;break;&#10; &#10; &#9;&#9;case ESP_GATTC_DISCONNECT_EVT:&#10;+&#9;&#9;&#9;// Cleanup semaphores to avoid deadlocks.&#10;+&#9;&#9;&#9;m_semaphoreReadCharEvt.give(1);&#10; &#9;&#9;&#9;m_semaphoreWriteCharEvt.give(1);&#10; &#9;&#9;&#9;break;&#10; &#9;&#9;&#9;&#10;" />
			<string key="comment_change" value="True" />
		</event>
		<event>
			<string key="timestamp" value="2023-10-06T15:50:11+03:00" />
			<string key="author" value="Me No Dev" />
			<string key="change_type" value="MODIFY" />
			<string key="commit_message" value="BLE upgrades (#8724)&#10;&#10;* Renamed library description&#13;&#10;&#13;&#10;* Updated Eddystone URL (not complete)&#13;&#10;&#13;&#10;* Updated Eddystone URL&#13;&#10;&#13;&#10;* Updated Eddystone classes and beacon scanner&#13;&#10;&#13;&#10;* Renamed examples - removing prefix BLE_&#13;&#10;&#13;&#10;* Renamed Beacon_Scanner&#13;&#10;&#13;&#10;* Updated TLM&#13;&#10;&#13;&#10;* Changed std::string to Arduino String&#13;&#10;&#13;&#10;* More std::string -&gt; String&#13;&#10;&#13;&#10;* Changed String in forgotten file&#13;&#10;&#13;&#10;* Changed .data to .c_str&#13;&#10;&#13;&#10;* Reverting single String type change&#13;&#10;&#13;&#10;* Few more fixes related to the String transition&#13;&#10;&#13;&#10;* Fixed URL and Utils error&#13;&#10;&#13;&#10;* Added and modified compatibility safeguards for BLE5 examples&#13;&#10;&#13;&#10;* Added #include WString.h&#13;&#10;&#13;&#10;* Fixed Beacon_Scanner&#13;&#10;&#13;&#10;* Remove commented include&#13;&#10;&#13;&#10;Co-authored-by: Lucas Saavedra Vaz &lt;lucassvaz@yahoo.com.br&gt;&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Tomas Pilny &lt;tomas.pilny@espressif.com&gt;&#13;&#10;Co-authored-by: Lucas Saavedra Vaz &lt;lucassvaz@yahoo.com.br&gt;" />
			<int key="additions" value="19" />
			<int key="deletions" value="19" />
			<string key="diff" value='@@ -187,7 +187,7 @@ void BLERemoteCharacteristic::gattClientEventHandler(esp_gattc_cb_event_t event,&#10; &#9;&#9;&#9;// At this point, we have determined that the event is for us, so now we save the value&#10; &#9;&#9;&#9;// and unlock the semaphore to ensure that the requestor of the data can continue.&#10; &#9;&#9;&#9;if (evtParam-&gt;read.status == ESP_GATT_OK) {&#10;-&#9;&#9;&#9;&#9;m_value = std::string((char*) evtParam-&gt;read.value, evtParam-&gt;read.value_len);&#10;+&#9;&#9;&#9;&#9;m_value = String((char*) evtParam-&gt;read.value, evtParam-&gt;read.value_len);&#10; &#9;&#9;&#9;&#9;if(m_rawData != nullptr) free(m_rawData);&#10; &#9;&#9;&#9;&#9;m_rawData = (uint8_t*) calloc(evtParam-&gt;read.value_len, sizeof(uint8_t));&#10; &#9;&#9;&#9;&#9;memcpy(m_rawData, evtParam-&gt;read.value, evtParam-&gt;read.value_len);&#10;@@ -304,7 +304,7 @@ void BLERemoteCharacteristic::retrieveDescriptors() {&#10; &#9;&#9;&#9;this&#10; &#9;&#9;);&#10; &#10;-&#9;&#9;m_descriptorMap.insert(std::pair&lt;std::string, BLERemoteDescriptor*&gt;(pNewRemoteDescriptor-&gt;getUUID().toString(), pNewRemoteDescriptor));&#10;+&#9;&#9;m_descriptorMap.insert(std::pair&lt;String, BLERemoteDescriptor*&gt;(pNewRemoteDescriptor-&gt;getUUID().toString(), pNewRemoteDescriptor));&#10; &#10; &#9;&#9;offset++;&#10; &#9;} // while true&#10;@@ -316,7 +316,7 @@ void BLERemoteCharacteristic::retrieveDescriptors() {&#10; /**&#10;  * @brief Retrieve the map of descriptors keyed by UUID.&#10;  */&#10;-std::map&lt;std::string, BLERemoteDescriptor*&gt;* BLERemoteCharacteristic::getDescriptors() {&#10;+std::map&lt;String, BLERemoteDescriptor*&gt;* BLERemoteCharacteristic::getDescriptors() {&#10; &#9;return &amp;m_descriptorMap;&#10; } // getDescriptors&#10; &#10;@@ -339,7 +339,7 @@ uint16_t BLERemoteCharacteristic::getHandle() {&#10;  */&#10; BLERemoteDescriptor* BLERemoteCharacteristic::getDescriptor(BLEUUID uuid) {&#10; &#9;log_v("&gt;&gt; getDescriptor: uuid: %s", uuid.toString().c_str());&#10;-&#9;std::string v = uuid.toString();&#10;+&#9;String v = uuid.toString();&#10; &#9;for (auto &amp;myPair : m_descriptorMap) {&#10; &#9;&#9;if (myPair.first == v) {&#10; &#9;&#9;&#9;log_v("&lt;&lt; getDescriptor: found");&#10;@@ -374,9 +374,9 @@ BLEUUID BLERemoteCharacteristic::getUUID() {&#10;  * @return The unsigned 16 bit value.&#10;  */&#10; uint16_t BLERemoteCharacteristic::readUInt16() {&#10;-&#9;std::string value = readValue();&#10;+&#9;String value = readValue();&#10; &#9;if (value.length() &gt;= 2) {&#10;-&#9;&#9;return *(uint16_t*)(value.data());&#10;+&#9;&#9;return *(uint16_t*)(value.c_str());&#10; &#9;}&#10; &#9;return 0;&#10; } // readUInt16&#10;@@ -387,9 +387,9 @@ uint16_t BLERemoteCharacteristic::readUInt16() {&#10;  * @return the unsigned 32 bit value.&#10;  */&#10; uint32_t BLERemoteCharacteristic::readUInt32() {&#10;-&#9;std::string value = readValue();&#10;+&#9;String value = readValue();&#10; &#9;if (value.length() &gt;= 4) {&#10;-&#9;&#9;return *(uint32_t*)(value.data());&#10;+&#9;&#9;return *(uint32_t*)(value.c_str());&#10; &#9;}&#10; &#9;return 0;&#10; } // readUInt32&#10;@@ -400,7 +400,7 @@ uint32_t BLERemoteCharacteristic::readUInt32() {&#10;  * @return The value as a byte&#10;  */&#10; uint8_t BLERemoteCharacteristic::readUInt8() {&#10;-&#9;std::string value = readValue();&#10;+&#9;String value = readValue();&#10; &#9;if (value.length() &gt;= 1) {&#10; &#9;&#9;return (uint8_t)value[0];&#10; &#9;}&#10;@@ -412,9 +412,9 @@ uint8_t BLERemoteCharacteristic::readUInt8() {&#10;  * @return the float value.&#10;  */&#10; float BLERemoteCharacteristic::readFloat() {&#10;-&#9;std::string value = readValue();&#10;+&#9;String value = readValue();&#10; &#9;if (value.length() &gt;= 4) {&#10;-&#9;&#9;return *(float*)(value.data());&#10;+&#9;&#9;return *(float*)(value.c_str());&#10; &#9;}&#10; &#9;return 0.0;&#10; } // readFloat&#10;@@ -423,13 +423,13 @@ float BLERemoteCharacteristic::readFloat() {&#10;  * @brief Read the value of the remote characteristic.&#10;  * @return The value of the remote characteristic.&#10;  */&#10;-std::string BLERemoteCharacteristic::readValue() {&#10;+String BLERemoteCharacteristic::readValue() {&#10; &#9;log_v("&gt;&gt; readValue(): uuid: %s, handle: %d 0x%.2x", getUUID().toString().c_str(), getHandle(), getHandle());&#10; &#10; &#9;// Check to see that we are connected.&#10; &#9;if (!getRemoteService()-&gt;getClient()-&gt;isConnected()) {&#10; &#9;&#9;log_e("Disconnected");&#10;-&#9;&#9;return std::string();&#10;+&#9;&#9;return String();&#10; &#9;}&#10; &#10; &#9;m_semaphoreReadCharEvt.take("readValue");&#10;@@ -448,7 +448,7 @@ std::string BLERemoteCharacteristic::readValue() {&#10; &#9;&#9;return "";&#10; &#9;}&#10; &#10;-&#9;// Block waiting for the event that indicates that the read has completed.  When it has, the std::string found&#10;+&#9;// Block waiting for the event that indicates that the read has completed.  When it has, the String found&#10; &#9;// in m_value will contain our data.&#10; &#9;m_semaphoreReadCharEvt.wait("readValue");&#10; &#10;@@ -531,8 +531,8 @@ void BLERemoteCharacteristic::removeDescriptors() {&#10;  * @brief Convert a BLERemoteCharacteristic to a string representation;&#10;  * @return a String representation.&#10;  */&#10;-std::string BLERemoteCharacteristic::toString() {&#10;-&#9;std::string res = "Characteristic: uuid: " + m_uuid.toString();&#10;+String BLERemoteCharacteristic::toString() {&#10;+&#9;String res = "Characteristic: uuid: " + m_uuid.toString();&#10; &#9;char val[6];&#10; &#9;res += ", handle: ";&#10; &#9;snprintf(val, sizeof(val), "%d", getHandle());&#10;@@ -551,8 +551,8 @@ std::string BLERemoteCharacteristic::toString() {&#10;  * @param [in] response Do we expect a response?&#10;  * @return N/A.&#10;  */&#10;-void BLERemoteCharacteristic::writeValue(std::string newValue, bool response) {&#10;-&#9;writeValue((uint8_t*)newValue.data(), newValue.length(), response);&#10;+void BLERemoteCharacteristic::writeValue(String newValue, bool response) {&#10;+&#9;writeValue((uint8_t*)newValue.c_str(), newValue.length(), response);&#10; } // writeValue&#10; &#10; &#10;@@ -576,7 +576,7 @@ void BLERemoteCharacteristic::writeValue(uint8_t newValue, bool response) {&#10;  * @param [in] response Whether we require a response from the write.&#10;  */&#10; void BLERemoteCharacteristic::writeValue(uint8_t* data, size_t length, bool response) {&#10;-&#9;// writeValue(std::string((char*)data, length), response);&#10;+&#9;// writeValue(String((char*)data, length), response);&#10; &#9;log_v("&gt;&gt; writeValue(), length: %d", length);&#10; &#10; &#9;// Check to see that we are connected.&#10;' />
			<string key="comment_change" value="True" />
		</event>
	</trace>
	<trace>
		<string key="file" value="README.md" />
	</trace>
	<trace>
		<string key="file" value="RMakerDevice.cpp" />
	</trace>
	<trace>
		<string key="file" value="RMakerDevice.h" />
	</trace>
	<trace>
		<string key="file" value="WiFiGeneric.h" />
	</trace>
	<trace>
		<string key="file" value="rainmaker.rst" />
	</trace>
	<trace>
		<string key="file" value="RMakerCustom.ino" />
	</trace>
	<trace>
		<string key="file" value="RMakerCustomAirCooler.ino" />
	</trace>
	<trace>
		<string key="file" value="RMakerSonoffDualR3.ino" />
	</trace>
	<trace>
		<string key="file" value="RMakerSwitch.ino" />
	</trace>
	<trace>
		<string key="file" value="RMaker.h" />
	</trace>
	<trace>
		<string key="file" value="RMakerUtils.cpp" />
	</trace>
	<trace>
		<string key="file" value="FS.cpp" />
	</trace>
	<trace>
		<string key="file" value="FS.h" />
	</trace>
	<trace>
		<string key="file" value="FSImpl.h" />
	</trace>
	<trace>
		<string key="file" value="vfs_api.cpp" />
		<event>
			<string key="timestamp" value="2023-04-18T01:56:36+03:00" />
			<string key="author" value="Dirk Carstensen" />
			<string key="change_type" value="MODIFY" />
			<string key="commit_message" value="getNextFileName: Get info whether filename is a file or directory (#8079)&#10;&#10;re-submit #8068" />
			<int key="additions" value="26" />
			<int key="deletions" value="0" />
			<string key="diff" value='@@ -540,6 +540,32 @@ String VFSFileImpl::getNextFileName()&#10;     return name;&#10; }&#10; &#10;+String VFSFileImpl::getNextFileName(bool *isDir)&#10;+{&#10;+    if (!_isDirectory || !_d) {&#10;+        return "";&#10;+    }&#10;+    struct dirent *file = readdir(_d);&#10;+    if (file == NULL) {&#10;+        return "";&#10;+    }&#10;+    if (file-&gt;d_type != DT_REG &amp;&amp; file-&gt;d_type != DT_DIR) {&#10;+        return "";&#10;+    }&#10;+    String fname = String(file-&gt;d_name);&#10;+    String name = String(_path);&#10;+    if (!fname.startsWith("/") &amp;&amp; !name.endsWith("/")) {&#10;+        name += "/";&#10;+    }&#10;+    name += fname;&#10;+&#10;+    // check entry is a directory&#10;+    if (isDir) {&#10;+        *isDir = (file-&gt;d_type == DT_DIR);&#10;+    }&#10;+    return name;&#10;+}&#10;+&#10; void VFSFileImpl::rewindDirectory(void)&#10; {&#10;     if(!_isDirectory || !_d) {&#10;' />
			<string key="comment_change" value="True" />
		</event>
	</trace>
	<trace>
		<string key="file" value="vfs_api.h" />
	</trace>
	<trace>
		<string key="file" value="ssl_client.cpp" />
		<event>
			<string key="timestamp" value="2022-12-07T18:27:02-03:00" />
			<string key="author" value="Krzysiek S" />
			<string key="change_type" value="MODIFY" />
			<string key="commit_message" value="Fix unnecessary DNS query in hostByName and deadlock in ssl_client (#7351)&#10;&#10;* Fix hostByName to avoid asking DNS when valid IP is passed via hostname param&#13;&#10;* Fix hanging in send_ssl_data" />
			<int key="additions" value="16" />
			<int key="deletions" value="3" />
			<string key="diff" value='@@ -90,6 +90,8 @@ int start_ssl_client(sslclient_context *ssl_client, const char *host, uint32_t p&#10;         timeout = 30000; // Milli seconds.&#10;     }&#10; &#10;+    ssl_client-&gt;socket_timeout = timeout;&#10;+&#10;     fd_set fdset;&#10;     struct timeval tv;&#10;     FD_ZERO(&amp;fdset);&#10;@@ -341,12 +343,15 @@ void stop_ssl_socket(sslclient_context *ssl_client, const char *rootCABuff, cons&#10;     mbedtls_ctr_drbg_free(&amp;ssl_client-&gt;drbg_ctx);&#10;     mbedtls_entropy_free(&amp;ssl_client-&gt;entropy_ctx);&#10;     &#10;-    // save only interesting field&#10;-    int timeout = ssl_client-&gt;handshake_timeout;&#10;+    // save only interesting fields&#10;+    int handshake_timeout = ssl_client-&gt;handshake_timeout;&#10;+    int socket_timeout = ssl_client-&gt;socket_timeout;&#10;+&#10;     // reset embedded pointers to zero&#10;     memset(ssl_client, 0, sizeof(sslclient_context));&#10;     &#10;-    ssl_client-&gt;handshake_timeout = timeout;&#10;+    ssl_client-&gt;handshake_timeout = handshake_timeout;&#10;+    ssl_client-&gt;socket_timeout = socket_timeout;&#10; }&#10; &#10; &#10;@@ -369,11 +374,19 @@ int send_ssl_data(sslclient_context *ssl_client, const uint8_t *data, size_t len&#10;     log_v("Writing HTTP request with %d bytes...", len); //for low level debug&#10;     int ret = -1;&#10; &#10;+    unsigned long write_start_time=millis();&#10;+&#10;     while ((ret = mbedtls_ssl_write(&amp;ssl_client-&gt;ssl_ctx, data, len)) &lt;= 0) {&#10;+        if((millis()-write_start_time)&gt;ssl_client-&gt;socket_timeout) {&#10;+            log_v("SSL write timed out.");&#10;+            return -1;&#10;+        }&#10;+&#10;         if (ret != MBEDTLS_ERR_SSL_WANT_READ &amp;&amp; ret != MBEDTLS_ERR_SSL_WANT_WRITE &amp;&amp; ret &lt; 0) {&#10;             log_v("Handling error %d", ret); //for low level debug&#10;             return handle_error(ret);&#10;         }&#10;+        &#10;         //wait for space to become available&#10;         vTaskDelay(2);&#10;     }&#10;' />
			<string key="comment_change" value="True" />
		</event>
	</trace>
	<trace>
		<string key="file" value="ssl_client.h" />
	</trace>
	<trace>
		<string key="file" value="WiFiClient.h" />
	</trace>
	<trace>
		<string key="file" value="WiFiClientSecure.cpp" />
	</trace>
	<trace>
		<string key="file" value="WiFiClientSecure.h" />
	</trace>
	<trace>
		<string key="file" value="CameraWebServer.ino" />
	</trace>
	<trace>
		<string key="file" value="app_httpd.cpp" />
		<event>
			<string key="timestamp" value="2022-12-08T10:46:19-03:00" />
			<string key="author" value="Jan Procházka" />
			<string key="change_type" value="MODIFY" />
			<string key="commit_message" value="Updated camera example (#7533)" />
			<int key="additions" value="60" />
			<int key="deletions" value="49" />
			<string key="diff" value="@@ -16,16 +16,12 @@&#10; #include &quot;esp_camera.h&quot;&#10; #include &quot;img_converters.h&quot;&#10; #include &quot;fb_gfx.h&quot;&#10;-#include &quot;driver/ledc.h&quot;&#10;+#include &quot;esp32-hal-ledc.h&quot;&#10; #include &quot;sdkconfig.h&quot;&#10; #include &quot;camera_index.h&quot;&#10; &#10; #if defined(ARDUINO_ARCH_ESP32) &amp;&amp; defined(CONFIG_ARDUHAL_ESP_LOG)&#10; #include &quot;esp32-hal-log.h&quot;&#10;-#define TAG &quot;&quot;&#10;-#else&#10;-#include &quot;esp_log.h&quot;&#10;-static const char *TAG = &quot;camera_httpd&quot;;&#10; #endif&#10; &#10; // Face Detection will not work on boards without (or with disabled) PSRAM&#10;@@ -72,14 +68,18 @@ static const char *TAG = &quot;camera_httpd&quot;;&#10; #define FACE_COLOR_PURPLE (FACE_COLOR_BLUE | FACE_COLOR_RED)&#10; #endif&#10; &#10;-#ifdef CONFIG_LED_ILLUMINATOR_ENABLED&#10;+// Enable LED FLASH setting&#10;+#define CONFIG_LED_ILLUMINATOR_ENABLED 1&#10;+&#10;+// LED FLASH setup&#10;+#if CONFIG_LED_ILLUMINATOR_ENABLED&#10;+&#10;+#define LED_LEDC_CHANNEL 2 //Using different ledc channel/timer than camera&#10;+#define CONFIG_LED_MAX_INTENSITY 255&#10;+&#10; int led_duty = 0;&#10; bool isStreaming = false;&#10;-#ifdef CONFIG_LED_LEDC_LOW_SPEED_MODE&#10;-#define CONFIG_LED_LEDC_SPEED_MODE LEDC_LOW_SPEED_MODE&#10;-#else&#10;-#define CONFIG_LED_LEDC_SPEED_MODE LEDC_HIGH_SPEED_MODE&#10;-#endif&#10;+&#10; #endif&#10; &#10; typedef struct&#10;@@ -263,7 +263,7 @@ static int run_face_recognition(fb_data_t *fb, std::list&lt;dl::detect::result_t&gt; *&#10; &#10;     if (enrolled_count &lt; FACE_ID_SAVE_NUMBER &amp;&amp; is_enrolling){&#10;         id = recognizer.enroll_id(tensor, landmarks, &quot;&quot;, true);&#10;-        ESP_LOGI(TAG, &quot;Enrolled ID: %d&quot;, id);&#10;+        log_i(&quot;Enrolled ID: %d&quot;, id);&#10;         rgb_printf(fb, FACE_COLOR_CYAN, &quot;ID[%u]&quot;, id);&#10;     }&#10; &#10;@@ -278,7 +278,7 @@ static int run_face_recognition(fb_data_t *fb, std::list&lt;dl::detect::result_t&gt; *&#10; #endif&#10; #endif&#10; &#10;-#ifdef CONFIG_LED_ILLUMINATOR_ENABLED&#10;+#if CONFIG_LED_ILLUMINATOR_ENABLED&#10; void enable_led(bool en)&#10; { // Turn LED On or Off&#10;     int duty = en ? led_duty : 0;&#10;@@ -286,9 +286,10 @@ void enable_led(bool en)&#10;     {&#10;         duty = CONFIG_LED_MAX_INTENSITY;&#10;     }&#10;-    ledc_set_duty(CONFIG_LED_LEDC_SPEED_MODE, CONFIG_LED_LEDC_CHANNEL, duty);&#10;-    ledc_update_duty(CONFIG_LED_LEDC_SPEED_MODE, CONFIG_LED_LEDC_CHANNEL);&#10;-    ESP_LOGI(TAG, &quot;Set LED intensity to %d&quot;, duty);&#10;+    ledcWrite(LED_LEDC_CHANNEL, duty);&#10;+    //ledc_set_duty(CONFIG_LED_LEDC_SPEED_MODE, CONFIG_LED_LEDC_CHANNEL, duty);&#10;+    //ledc_update_duty(CONFIG_LED_LEDC_SPEED_MODE, CONFIG_LED_LEDC_CHANNEL);&#10;+    log_i(&quot;Set LED intensity to %d&quot;, duty);&#10; }&#10; #endif&#10; &#10;@@ -302,7 +303,7 @@ static esp_err_t bmp_handler(httpd_req_t *req)&#10;     fb = esp_camera_fb_get();&#10;     if (!fb)&#10;     {&#10;-        ESP_LOGE(TAG, &quot;Camera capture failed&quot;);&#10;+        log_e(&quot;Camera capture failed&quot;);&#10;         httpd_resp_send_500(req);&#10;         return ESP_FAIL;&#10;     }&#10;@@ -321,7 +322,7 @@ static esp_err_t bmp_handler(httpd_req_t *req)&#10;     bool converted = frame2bmp(fb, &amp;buf, &amp;buf_len);&#10;     esp_camera_fb_return(fb);&#10;     if(!converted){&#10;-        ESP_LOGE(TAG, &quot;BMP Conversion failed&quot;);&#10;+        log_e(&quot;BMP Conversion failed&quot;);&#10;         httpd_resp_send_500(req);&#10;         return ESP_FAIL;&#10;     }&#10;@@ -330,7 +331,7 @@ static esp_err_t bmp_handler(httpd_req_t *req)&#10; #if ARDUHAL_LOG_LEVEL &gt;= ARDUHAL_LOG_LEVEL_INFO&#10;     uint64_t fr_end = esp_timer_get_time();&#10; #endif&#10;-    ESP_LOGI(TAG, &quot;BMP: %llums, %uB&quot;, (uint64_t)((fr_end - fr_start) / 1000), buf_len);&#10;+    log_i(&quot;BMP: %llums, %uB&quot;, (uint64_t)((fr_end - fr_start) / 1000), buf_len);&#10;     return res;&#10; }&#10; &#10;@@ -357,7 +358,7 @@ static esp_err_t capture_handler(httpd_req_t *req)&#10;     int64_t fr_start = esp_timer_get_time();&#10; #endif&#10; &#10;-#ifdef CONFIG_LED_ILLUMINATOR_ENABLED&#10;+#if CONFIG_LED_ILLUMINATOR_ENABLED&#10;     enable_led(true);&#10;     vTaskDelay(150 / portTICK_PERIOD_MS); // The LED needs to be turned on ~150ms before the call to esp_camera_fb_get()&#10;     fb = esp_camera_fb_get();             // or it won't be visible in the frame. A better way to do this is needed.&#10;@@ -368,7 +369,7 @@ static esp_err_t capture_handler(httpd_req_t *req)&#10; &#10;     if (!fb)&#10;     {&#10;-        ESP_LOGE(TAG, &quot;Camera capture failed&quot;);&#10;+        log_e(&quot;Camera capture failed&quot;);&#10;         httpd_resp_send_500(req);&#10;         return ESP_FAIL;&#10;     }&#10;@@ -415,7 +416,7 @@ static esp_err_t capture_handler(httpd_req_t *req)&#10; #if ARDUHAL_LOG_LEVEL &gt;= ARDUHAL_LOG_LEVEL_INFO&#10;         int64_t fr_end = esp_timer_get_time();&#10; #endif&#10;-        ESP_LOGI(TAG, &quot;JPG: %uB %ums&quot;, (uint32_t)(fb_len), (uint32_t)((fr_end - fr_start) / 1000));&#10;+        log_i(&quot;JPG: %uB %ums&quot;, (uint32_t)(fb_len), (uint32_t)((fr_end - fr_start) / 1000));&#10;         return res;&#10; #if CONFIG_ESP_FACE_DETECT_ENABLED&#10;     }&#10;@@ -457,7 +458,7 @@ static esp_err_t capture_handler(httpd_req_t *req)&#10;         out_height = fb-&gt;height;&#10;         out_buf = (uint8_t*)malloc(out_len);&#10;         if (!out_buf) {&#10;-            ESP_LOGE(TAG, &quot;out_buf malloc failed&quot;);&#10;+            log_e(&quot;out_buf malloc failed&quot;);&#10;             httpd_resp_send_500(req);&#10;             return ESP_FAIL;&#10;         }&#10;@@ -465,7 +466,7 @@ static esp_err_t capture_handler(httpd_req_t *req)&#10;         esp_camera_fb_return(fb);&#10;         if (!s) {&#10;             free(out_buf);&#10;-            ESP_LOGE(TAG, &quot;to rgb888 failed&quot;);&#10;+            log_e(&quot;To rgb888 failed&quot;);&#10;             httpd_resp_send_500(req);&#10;             return ESP_FAIL;&#10;         }&#10;@@ -504,14 +505,14 @@ static esp_err_t capture_handler(httpd_req_t *req)&#10;     }&#10; &#10;     if (!s) {&#10;-        ESP_LOGE(TAG, &quot;JPEG compression failed&quot;);&#10;+        log_e(&quot;JPEG compression failed&quot;);&#10;         httpd_resp_send_500(req);&#10;         return ESP_FAIL;&#10;     }&#10; #if ARDUHAL_LOG_LEVEL &gt;= ARDUHAL_LOG_LEVEL_INFO&#10;     int64_t fr_end = esp_timer_get_time();&#10; #endif&#10;-    ESP_LOGI(TAG, &quot;FACE: %uB %ums %s%d&quot;, (uint32_t)(jchunk.len), (uint32_t)((fr_end - fr_start) / 1000), detected ? &quot;DETECTED &quot; : &quot;&quot;, face_id);&#10;+    log_i(&quot;FACE: %uB %ums %s%d&quot;, (uint32_t)(jchunk.len), (uint32_t)((fr_end - fr_start) / 1000), detected ? &quot;DETECTED &quot; : &quot;&quot;, face_id);&#10;     return res;&#10; #endif&#10; }&#10;@@ -560,7 +561,7 @@ static esp_err_t stream_handler(httpd_req_t *req)&#10;     httpd_resp_set_hdr(req, &quot;Access-Control-Allow-Origin&quot;, &quot;*&quot;);&#10;     httpd_resp_set_hdr(req, &quot;X-Framerate&quot;, &quot;60&quot;);&#10; &#10;-#ifdef CONFIG_LED_ILLUMINATOR_ENABLED&#10;+#if CONFIG_LED_ILLUMINATOR_ENABLED&#10;     enable_led(true);&#10;     isStreaming = true;&#10; #endif&#10;@@ -577,7 +578,7 @@ static esp_err_t stream_handler(httpd_req_t *req)&#10;         fb = esp_camera_fb_get();&#10;         if (!fb)&#10;         {&#10;-            ESP_LOGE(TAG, &quot;Camera capture failed&quot;);&#10;+            log_e(&quot;Camera capture failed&quot;);&#10;             res = ESP_FAIL;&#10;         }&#10;         else&#10;@@ -602,7 +603,7 @@ static esp_err_t stream_handler(httpd_req_t *req)&#10;                     fb = NULL;&#10;                     if (!jpeg_converted)&#10;                     {&#10;-                        ESP_LOGE(TAG, &quot;JPEG compression failed&quot;);&#10;+                        log_e(&quot;JPEG compression failed&quot;);&#10;                         res = ESP_FAIL;&#10;                     }&#10;                 }&#10;@@ -649,7 +650,7 @@ static esp_err_t stream_handler(httpd_req_t *req)&#10;                     esp_camera_fb_return(fb);&#10;                     fb = NULL;&#10;                     if (!s) {&#10;-                        ESP_LOGE(TAG, &quot;fmt2jpg failed&quot;);&#10;+                        log_e(&quot;fmt2jpg failed&quot;);&#10;                         res = ESP_FAIL;&#10;                     }&#10; #if CONFIG_ESP_FACE_DETECT_ENABLED &amp;&amp; ARDUHAL_LOG_LEVEL &gt;= ARDUHAL_LOG_LEVEL_INFO&#10;@@ -662,7 +663,7 @@ static esp_err_t stream_handler(httpd_req_t *req)&#10;                     out_height = fb-&gt;height;&#10;                     out_buf = (uint8_t*)malloc(out_len);&#10;                     if (!out_buf) {&#10;-                        ESP_LOGE(TAG, &quot;out_buf malloc failed&quot;);&#10;+                        log_e(&quot;out_buf malloc failed&quot;);&#10;                         res = ESP_FAIL;&#10;                     } else {&#10;                         s = fmt2rgb888(fb-&gt;buf, fb-&gt;len, fb-&gt;format, out_buf);&#10;@@ -670,7 +671,7 @@ static esp_err_t stream_handler(httpd_req_t *req)&#10;                         fb = NULL;&#10;                         if (!s) {&#10;                             free(out_buf);&#10;-                            ESP_LOGE(TAG, &quot;to rgb888 failed&quot;);&#10;+                            log_e(&quot;To rgb888 failed&quot;);&#10;                             res = ESP_FAIL;&#10;                         } else {&#10; #if ARDUHAL_LOG_LEVEL &gt;= ARDUHAL_LOG_LEVEL_INFO&#10;@@ -713,7 +714,7 @@ static esp_err_t stream_handler(httpd_req_t *req)&#10;                             s = fmt2jpg(out_buf, out_len, out_width, out_height, PIXFORMAT_RGB888, 90, &amp;_jpg_buf, &amp;_jpg_buf_len);&#10;                             free(out_buf);&#10;                             if (!s) {&#10;-                                ESP_LOGE(TAG, &quot;fmt2jpg failed&quot;);&#10;+                                log_e(&quot;fmt2jpg failed&quot;);&#10;                                 res = ESP_FAIL;&#10;                             }&#10; #if CONFIG_ESP_FACE_DETECT_ENABLED &amp;&amp; ARDUHAL_LOG_LEVEL &gt;= ARDUHAL_LOG_LEVEL_INFO&#10;@@ -751,7 +752,7 @@ static esp_err_t stream_handler(httpd_req_t *req)&#10;         }&#10;         if (res != ESP_OK)&#10;         {&#10;-            ESP_LOGE(TAG, &quot;send frame failed failed&quot;);&#10;+            log_e(&quot;Send frame failed&quot;);&#10;             break;&#10;         }&#10;         int64_t fr_end = esp_timer_get_time();&#10;@@ -769,7 +770,7 @@ static esp_err_t stream_handler(httpd_req_t *req)&#10; #if ARDUHAL_LOG_LEVEL &gt;= ARDUHAL_LOG_LEVEL_INFO&#10;         uint32_t avg_frame_time = ra_filter_run(&amp;ra_filter, frame_time);&#10; #endif&#10;-        ESP_LOGI(TAG, &quot;MJPG: %uB %ums (%.1ffps), AVG: %ums (%.1ffps)&quot;&#10;+        log_i(&quot;MJPG: %uB %ums (%.1ffps), AVG: %ums (%.1ffps)&quot;&#10; #if CONFIG_ESP_FACE_DETECT_ENABLED&#10;                       &quot;, %u+%u+%u+%u=%u %s%d&quot;&#10; #endif&#10;@@ -785,7 +786,7 @@ static esp_err_t stream_handler(httpd_req_t *req)&#10;         );&#10;     }&#10; &#10;-#ifdef CONFIG_LED_ILLUMINATOR_ENABLED&#10;+#if CONFIG_LED_ILLUMINATOR_ENABLED&#10;     isStreaming = false;&#10;     enable_led(false);&#10; #endif&#10;@@ -833,7 +834,7 @@ static esp_err_t cmd_handler(httpd_req_t *req)&#10;     free(buf);&#10; &#10;     int val = atoi(value);&#10;-    ESP_LOGI(TAG, &quot;%s = %d&quot;, variable, val);&#10;+    log_i(&quot;%s = %d&quot;, variable, val);&#10;     sensor_t *s = esp_camera_sensor_get();&#10;     int res = 0;&#10; &#10;@@ -888,7 +889,7 @@ static esp_err_t cmd_handler(httpd_req_t *req)&#10;         res = s-&gt;set_wb_mode(s, val);&#10;     else if (!strcmp(variable, &quot;ae_level&quot;))&#10;         res = s-&gt;set_ae_level(s, val);&#10;-#ifdef CONFIG_LED_ILLUMINATOR_ENABLED&#10;+#if CONFIG_LED_ILLUMINATOR_ENABLED&#10;     else if (!strcmp(variable, &quot;led_intensity&quot;)) {&#10;         led_duty = val;&#10;         if (isStreaming)&#10;@@ -908,7 +909,7 @@ static esp_err_t cmd_handler(httpd_req_t *req)&#10; #if CONFIG_ESP_FACE_RECOGNITION_ENABLED&#10;     else if (!strcmp(variable, &quot;face_enroll&quot;)){&#10;         is_enrolling = !is_enrolling;&#10;-        ESP_LOGI(TAG, &quot;Enrolling: %s&quot;, is_enrolling?&quot;true&quot;:&quot;false&quot;);&#10;+        log_i(&quot;Enrolling: %s&quot;, is_enrolling?&quot;true&quot;:&quot;false&quot;);&#10;     }&#10;     else if (!strcmp(variable, &quot;face_recognize&quot;)) {&#10;         recognition_enabled = val;&#10;@@ -919,7 +920,7 @@ static esp_err_t cmd_handler(httpd_req_t *req)&#10; #endif&#10; #endif&#10;     else {&#10;-        ESP_LOGI(TAG, &quot;Unknown command: %s&quot;, variable);&#10;+        log_i(&quot;Unknown command: %s&quot;, variable);&#10;         res = -1;&#10;     }&#10; &#10;@@ -998,7 +999,7 @@ static esp_err_t status_handler(httpd_req_t *req)&#10;     p += sprintf(p, &quot;\&quot;hmirror\&quot;:%u,&quot;, s-&gt;status.hmirror);&#10;     p += sprintf(p, &quot;\&quot;dcw\&quot;:%u,&quot;, s-&gt;status.dcw);&#10;     p += sprintf(p, &quot;\&quot;colorbar\&quot;:%u&quot;, s-&gt;status.colorbar);&#10;-#ifdef CONFIG_LED_ILLUMINATOR_ENABLED&#10;+#if CONFIG_LED_ILLUMINATOR_ENABLED&#10;     p += sprintf(p, &quot;,\&quot;led_intensity\&quot;:%u&quot;, led_duty);&#10; #else&#10;     p += sprintf(p, &quot;,\&quot;led_intensity\&quot;:%d&quot;, -1);&#10;@@ -1033,7 +1034,7 @@ static esp_err_t xclk_handler(httpd_req_t *req)&#10;     free(buf);&#10; &#10;     int xclk = atoi(_xclk);&#10;-    ESP_LOGI(TAG, &quot;Set XCLK: %d MHz&quot;, xclk);&#10;+    log_i(&quot;Set XCLK: %d MHz&quot;, xclk);&#10; &#10;     sensor_t *s = esp_camera_sensor_get();&#10;     int res = s-&gt;set_xclk(s, LEDC_TIMER_0, xclk);&#10;@@ -1067,7 +1068,7 @@ static esp_err_t reg_handler(httpd_req_t *req)&#10;     int reg = atoi(_reg);&#10;     int mask = atoi(_mask);&#10;     int val = atoi(_val);&#10;-    ESP_LOGI(TAG, &quot;Set Register: reg: 0x%02x, mask: 0x%02x, value: 0x%02x&quot;, reg, mask, val);&#10;+    log_i(&quot;Set Register: reg: 0x%02x, mask: 0x%02x, value: 0x%02x&quot;, reg, mask, val);&#10; &#10;     sensor_t *s = esp_camera_sensor_get();&#10;     int res = s-&gt;set_reg(s, reg, mask, val);&#10;@@ -1103,7 +1104,7 @@ static esp_err_t greg_handler(httpd_req_t *req)&#10;     if (res &lt; 0) {&#10;         return httpd_resp_send_500(req);&#10;     }&#10;-    ESP_LOGI(TAG, &quot;Get Register: reg: 0x%02x, mask: 0x%02x, value: 0x%02x&quot;, reg, mask, res);&#10;+    log_i(&quot;Get Register: reg: 0x%02x, mask: 0x%02x, value: 0x%02x&quot;, reg, mask, res);&#10; &#10;     char buffer[20];&#10;     const char * val = itoa(res, buffer, 10);&#10;@@ -1138,7 +1139,7 @@ static esp_err_t pll_handler(httpd_req_t *req)&#10;     int pclk = parse_get_var(buf, &quot;pclk&quot;, 0);&#10;     free(buf);&#10; &#10;-    ESP_LOGI(TAG, &quot;Set Pll: bypass: %d, mul: %d, sys: %d, root: %d, pre: %d, seld5: %d, pclken: %d, pclk: %d&quot;, bypass, mul, sys, root, pre, seld5, pclken, pclk);&#10;+    log_i(&quot;Set Pll: bypass: %d, mul: %d, sys: %d, root: %d, pre: %d, seld5: %d, pclken: %d, pclk: %d&quot;, bypass, mul, sys, root, pre, seld5, pclken, pclk);&#10;     sensor_t *s = esp_camera_sensor_get();&#10;     int res = s-&gt;set_pll(s, bypass, mul, sys, root, pre, seld5, pclken, pclk);&#10;     if (res) {&#10;@@ -1171,7 +1172,7 @@ static esp_err_t win_handler(httpd_req_t *req)&#10;     bool binning = parse_get_var(buf, &quot;binning&quot;, 0) == 1;&#10;     free(buf);&#10; &#10;-    ESP_LOGI(TAG, &quot;Set Window: Start: %d %d, End: %d %d, Offset: %d %d, Total: %d %d, Output: %d %d, Scale: %u, Binning: %u&quot;, startX, startY, endX, endY, offsetX, offsetY, totalX, totalY, outputX, outputY, scale, binning);&#10;+    log_i(&quot;Set Window: Start: %d %d, End: %d %d, Offset: %d %d, Total: %d %d, Output: %d %d, Scale: %u, Binning: %u&quot;, startX, startY, endX, endY, offsetX, offsetY, totalX, totalY, outputX, outputY, scale, binning);&#10;     sensor_t *s = esp_camera_sensor_get();&#10;     int res = s-&gt;set_res_raw(s, startX, startY, endX, endY, offsetX, offsetY, totalX, totalY, outputX, outputY, scale, binning);&#10;     if (res) {&#10;@@ -1196,7 +1197,7 @@ static esp_err_t index_handler(httpd_req_t *req)&#10;             return httpd_resp_send(req, (const char *)index_ov2640_html_gz, index_ov2640_html_gz_len);&#10;         }&#10;     } else {&#10;-        ESP_LOGE(TAG, &quot;Camera sensor not found&quot;);&#10;+        log_e(&quot;Camera sensor not found&quot;);&#10;         return httpd_resp_send_500(req);&#10;     }&#10; }&#10;@@ -1357,7 +1358,7 @@ void startCameraServer()&#10;     // load ids from flash partition&#10;     recognizer.set_ids_from_flash();&#10; #endif&#10;-    ESP_LOGI(TAG, &quot;Starting web server on port: '%d'&quot;, config.server_port);&#10;+    log_i(&quot;Starting web server on port: '%d'&quot;, config.server_port);&#10;     if (httpd_start(&amp;camera_httpd, &amp;config) == ESP_OK)&#10;     {&#10;         httpd_register_uri_handler(camera_httpd, &amp;index_uri);&#10;@@ -1375,9 +1376,19 @@ void startCameraServer()&#10; &#10;     config.server_port += 1;&#10;     config.ctrl_port += 1;&#10;-    ESP_LOGI(TAG, &quot;Starting stream server on port: '%d'&quot;, config.server_port);&#10;+    log_i(&quot;Starting stream server on port: '%d'&quot;, config.server_port);&#10;     if (httpd_start(&amp;stream_httpd, &amp;config) == ESP_OK)&#10;     {&#10;         httpd_register_uri_handler(stream_httpd, &amp;stream_uri);&#10;     }&#10; }&#10;+&#10;+void setupLedFlash(int pin) &#10;+{&#10;+    #if CONFIG_LED_ILLUMINATOR_ENABLED&#10;+    ledcSetup(LED_LEDC_CHANNEL, 5000, 8);&#10;+    ledcAttachPin(pin, LED_LEDC_CHANNEL);&#10;+    #else&#10;+    log_i(&quot;LED flash is disabled -&gt; CONFIG_LED_ILLUMINATOR_ENABLED = 0&quot;);&#10;+    #endif&#10;+}&#10;" />
			<string key="comment_change" value="True" />
		</event>
	</trace>
	<trace>
		<string key="file" value="camera_pins.h" />
	</trace>
	<trace>
		<string key="file" value="USB.cpp" />
	</trace>
	<trace>
		<string key="file" value="esp_crt_bundle.c" />
	</trace>
	<trace>
		<string key="file" value="esp_crt_bundle.h" />
	</trace>
	<trace>
		<string key="file" value="HWCDC.cpp" />
		<event>
			<string key="timestamp" value="2022-12-14T12:47:29+02:00" />
			<string key="author" value="Rodrigo Garcia" />
			<string key="change_type" value="MODIFY" />
			<string key="commit_message" value="Workaround for when USB CDC is unplugged (#7583)&#10;&#10;* Workaround for when USB CDC is unplugged&#13;&#10;&#13;&#10;* Considers default TX timeout&#13;&#10;&#13;&#10;Sets back default TX timeout whenever USB is plugged, otherwise it is kept as zero.&#13;&#10;&#13;&#10;* fixed left over code" />
			<int key="additions" value="14" />
			<int key="deletions" value="2" />
			<string key="diff" value="@@ -32,7 +32,11 @@ static uint8_t rx_data_buf[64];&#10; static intr_handle_t intr_handle = NULL;&#10; static volatile bool initial_empty = false;&#10; static xSemaphoreHandle tx_lock = NULL;&#10;-static uint32_t tx_timeout_ms = 200;&#10;+&#10;+// workaround for when USB CDC is not connected&#10;+static uint32_t tx_timeout_ms = 0;&#10;+static bool tx_timeout_change_request = false;&#10;+&#10; static esp_event_loop_handle_t arduino_hw_cdc_event_loop_handle = NULL;&#10; &#10; static esp_err_t arduino_hw_cdc_event_post(esp_event_base_t event_base, int32_t event_id, void *event_data, size_t event_data_size, BaseType_t *task_unblocked){&#10;@@ -72,9 +76,14 @@ static void hw_cdc_isr_handler(void *arg) {&#10;         if (usb_serial_jtag_ll_txfifo_writable() == 1) {&#10;             // We disable the interrupt here so that the interrupt won't be triggered if there is no data to send.&#10;             usb_serial_jtag_ll_disable_intr_mask(USB_SERIAL_JTAG_INTR_SERIAL_IN_EMPTY);&#10;-&#10;             if(!initial_empty){&#10;                 initial_empty = true;&#10;+                // First time USB is plugged and the application has not explicitly set TX Timeout, set it to default 100ms.&#10;+                // Otherwise, USB is still unplugged and the timeout will be kept as Zero in order to avoid any delay in the&#10;+                // application whenever it uses write() and the TX Queue gets full.&#10;+                if (!tx_timeout_change_request) {&#10;+                    tx_timeout_ms = 100;&#10;+                }&#10;                 //send event?&#10;                 //ets_printf(&quot;CONNECTED\n&quot;);&#10;                 arduino_hw_cdc_event_post(ARDUINO_HW_CDC_EVENTS, ARDUINO_HW_CDC_CONNECTED_EVENT, &amp;event, sizeof(arduino_hw_cdc_event_data_t), &amp;xTaskWoken);&#10;@@ -197,6 +206,9 @@ void HWCDC::end()&#10; &#10; void HWCDC::setTxTimeoutMs(uint32_t timeout){&#10;     tx_timeout_ms = timeout;&#10;+    // it registers that the user has explicitly requested to use a value as TX timeout&#10;+    // used for the workaround with unplugged USB and TX Queue Full that causes a delay on every write()&#10;+    tx_timeout_change_request = true;&#10; }&#10; &#10; /*&#10;" />
			<string key="comment_change" value="True" />
		</event>
		<event>
			<string key="timestamp" value="2023-10-05T14:54:25+03:00" />
			<string key="author" value="Me No Dev" />
			<string key="change_type" value="MODIFY" />
			<string key="commit_message" value="ESP-IDF v5.1 (#7733)&#10;&#10;* Initial changes to compile under ESP-IDF v5.1&#13;&#10;&#13;&#10;* Initial import for ESP-IDF v5.1 libs&#13;&#10;&#13;&#10;* Update toolchain&#13;&#10;&#13;&#10;* Update esp32-hal-psram.c&#13;&#10;&#13;&#10;* Add missing LDs&#13;&#10;&#13;&#10;* Update platform.txt&#13;&#10;&#13;&#10;* Stop some CI jobs, because they will always fail&#13;&#10;&#13;&#10;* Fix examples&#13;&#10;&#13;&#10;* Update app_httpd.cpp&#13;&#10;&#13;&#10;* Update ResetReason.ino&#13;&#10;&#13;&#10;* Warnings fixes&#13;&#10;&#13;&#10;* Added the example guideline and template (#7665)&#13;&#10;&#13;&#10;* Added the example guideline and template&#13;&#10;&#13;&#10;* PR review changes with some typos and grammar fixes&#13;&#10;&#13;&#10;* Changes according to the PR review&#13;&#10;&#13;&#10;* Added ESP32-S3 link to the datasheet (#7738)&#13;&#10;&#13;&#10;* Update HiFreq_ADC.ino&#13;&#10;&#13;&#10;* Replace periph_ctrl.h use because of deprecation&#13;&#10;&#13;&#10;* Replace esp_spi_flash.h use because of deprecation&#13;&#10;&#13;&#10;* Add includes to male mDNS::enableWorkstation compile&#13;&#10;&#13;&#10;* Fix ssl_client mbedtls_pk_parse_key callback&#13;&#10;&#13;&#10;* Update temperature sensor driver&#13;&#10;&#13;&#10;* Allow sketch_utils to compile with arduino-cli&#13;&#10;&#13;&#10;* Run CI with arduino-cli&#13;&#10;&#13;&#10;* Fix arduino-cli CI build on Windows&#13;&#10;&#13;&#10;* Refactor platform.txt to not use components installed through the board manager when running from git&#13;&#10;&#13;&#10;* Initial Peripheral Manager Implementation&#13;&#10;&#13;&#10;* Update SigmaDelta driver to use the new ESP-IDF driver API&#13;&#10;&#13;&#10;* Small improvements to peripheral manager and SigmaDelta&#13;&#10;&#13;&#10;* Remove deleted function from SigmaDelta header&#13;&#10;&#13;&#10;* Update DAC driver to use the new ESP-IDF driver API&#13;&#10;&#13;&#10;* Adds softAp(String) to make it compatible with ESP8266 (#7801)&#13;&#10;&#13;&#10;* Fix commentary (#7800)&#13;&#10;&#13;&#10;Minor fix based on observation done in https://github.com/espressif/arduino-esp32/issues/7795#issuecomment-1416868611&#13;&#10;&#13;&#10;* add adafruit new board feather esp32s2 reserve tft (#7794)&#13;&#10;&#13;&#10;* bugfix: add &lt;stdint.h&gt; for uint8_t to avoid compilation failure (GCC 11.2.0) (#7744)&#13;&#10;&#13;&#10;* Adding 3rd party boards for VALTRACK-V4-VTS-ESP32-C3 &amp; VALTRACK-V4-MFW-ESP32-C3 (#7735)&#13;&#10;&#13;&#10;* Added VALTRACK-V4-VTS-ESP32-C3 board definition&#13;&#10;&#13;&#10;Created pins_arduino.h &amp; made changes to boards.txt with necessary changes&#13;&#10;&#13;&#10;* Modified the URL&#13;&#10;&#13;&#10;* Renamed json&#13;&#10;&#13;&#10;* renamed all auRL&#13;&#10;&#13;&#10;* Adding VALTRACK-V4 series board definitions&#13;&#10;&#13;&#10;Added VALTRACK-V4-VTS-ESP32C3 &amp; VALTRACK-V4-MFW-ESP32-C3 board variants&#13;&#10;&#13;&#10;* Adding VALTRACK-V4 series board definitions&#13;&#10;&#13;&#10;Added VALTRACK-V4-VTS-ESP32C3 &amp; VALTRACK-V4-MFW-ESP32-C3 board variants&#13;&#10;&#13;&#10;* Reverted package_esp32_index.template.json&#13;&#10;&#13;&#10;restored package_esp32_index.template.json from edits&#13;&#10;&#13;&#10;* Reverted package_esp32_index.template.json&#13;&#10;&#13;&#10;Added new line to package_esp32_index.template.json&#13;&#10;&#13;&#10;* Update Platformio CI (#7725)&#13;&#10;&#13;&#10;* WiFiClient example fix (#7711)&#13;&#10;&#13;&#10;* Modified WiFiClient example to use thingspeak instead of non-functionig sparkfun&#13;&#10;&#13;&#10;* Moved instructions to README&#13;&#10;&#13;&#10;* Fixed spelling&#13;&#10;&#13;&#10;* Added link to S3 datasheet&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Jan Procházka &lt;90197375+P-R-O-C-H-Y@users.noreply.github.com&gt;&#13;&#10;&#13;&#10;* Mirror update from Heltec repository (#7709)&#13;&#10;&#13;&#10;Heltec updated the I2C pins in https://github.com/Heltec-Aaron-Lee/WiFi_Kit_series/commit/b10f4bf85d13fd01be80dcdb0eb59e6a8c8ba19a&#13;&#10;&#13;&#10;* Fixes BLE data printing (#7699)&#13;&#10;&#13;&#10;* Fixes BLE data printing&#13;&#10;&#13;&#10;BLE data has no '\0' terminator, therefore it can't be printed as a regular C string.&#13;&#10;This fix just prints the BLE data based on its length.&#13;&#10;&#13;&#10;* Simplify printing to a single call&#13;&#10;&#13;&#10;* split menu options + lora_32_V3 fix (#7697)&#13;&#10;&#13;&#10;* Change header gaurd name (#7696)&#13;&#10;&#13;&#10;* Fix Name (#7691)&#13;&#10;&#13;&#10;Wrong name in definitions.&#13;&#10;&#13;&#10;* Fix error in WiFiClient.cpp where the connect function fails for timeouts below 1 second (#7686)&#13;&#10;&#13;&#10;* Update WiFiClient.cpp&#13;&#10;&#13;&#10;This change will allow specifying connect timeouts below 1 second. Without this change, if connect timeouts under 1 second are given, the connect defaults to 0ms and fails. &#13;&#10;This will also allow timeouts in fractions of seconds, e.g. 1500ms. Without this change, connect timeouts are truncated to full second increments.&#13;&#10;&#13;&#10;* Make parameter timeout_ms clear&#13;&#10;&#13;&#10;* Change connection timeout_ms name for clarity&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Rodrigo Garcia &lt;rodrigo.garcia@espressif.com&gt;&#13;&#10;&#13;&#10;* fixed the function header (#7674)&#13;&#10;&#13;&#10;* fixed the function header&#13;&#10;&#13;&#10;* fixed function name and paramaters&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Jan Procházka &lt;90197375+P-R-O-C-H-Y@users.noreply.github.com&gt;&#13;&#10;&#13;&#10;* Ticker fix solving #6155 (#7664)&#13;&#10;&#13;&#10;* Wrapped Ticker functions with #pragma disabling -Wcast-function-type&#13;&#10;&#13;&#10;* Revert &quot;Wrapped Ticker functions with #pragma disabling -Wcast-function-type&quot;&#13;&#10;&#13;&#10;This reverts commit 160be7e67a10d01b6e44c4bf2521c0ccd6348976.&#13;&#10;&#13;&#10;* Fixed Ticker example&#13;&#10;&#13;&#10;* Modified Ticker example&#13;&#10;&#13;&#10;* Fixed LED_BUILTIN err for ESP32&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Jan Procházka &lt;90197375+P-R-O-C-H-Y@users.noreply.github.com&gt;&#13;&#10;&#13;&#10;* setPins fix ESP32 &quot;specified pins are not supported by this chip.&quot; (#7646)&#13;&#10;&#13;&#10;[ESP32: SDMMCFS::begin hardcodes the usage of slot 1, only check if the pins match slot 1 pins.]&#13;&#10;&#13;&#10;setPins() was testing pins D1, D2 and D3 all against D1 ... fine in 1 pin mode when all are -1 not so much if you're trying to get 4 pin mode working.&#13;&#10;I now see this function doesn't really do anything on the ESP32...accept now correctly checks that you are trying to use the slot 1 pins.&#13;&#10;&#13;&#10;Co-authored-by: Jan Procházka &lt;90197375+P-R-O-C-H-Y@users.noreply.github.com&gt;&#13;&#10;&#13;&#10;* Allow passing IP as connect method parameter in WiFiClientSecure and skip unnecessary host-ip conversions (#7643)&#13;&#10;&#13;&#10;* Add LED_BUILTIN* definitions and initialization for LEDs to stop them floating. (#7636)&#13;&#10;&#13;&#10;Co-authored-by: Rodrigo Garcia &lt;rodrigo.garcia@espressif.com&gt;&#13;&#10;&#13;&#10;* Expand path to tinuf2 image when checking existence in platformio-build.py (#7631)&#13;&#10;&#13;&#10;* Expand path to tinuf2 image when checking existence&#13;&#10;&#13;&#10;* More isFiles fixed&#13;&#10;&#13;&#10;* Remove (useless) trailing semicolon from Print.cpp (#7622)&#13;&#10;&#13;&#10;* ADD: New variant Edgebox-ESP-100 (#7771)&#13;&#10;&#13;&#10;* ADD: New variant Edgebox-ESP-100&#13;&#10;&#13;&#10;* FIX: Edgebox-ESP-100 Board.txt usb mode option change back to default value as ESP32S3&#13;&#10;&#13;&#10;* Add Crabik Slot ESP32-S3 board (#7790)&#13;&#10;&#13;&#10;* Added Crabik Slot ESP32-S3&#13;&#10;&#13;&#10;* Adding CPU frequency settings and removing excess from partition scheme settings&#13;&#10;&#13;&#10;* new variant LilyGO T-Display-S3 (#7763)&#13;&#10;&#13;&#10;* new variant LilyGO T-Display-S3&#13;&#10;&#13;&#10;https://github.com/Xinyuan-LilyGO/T-Display-S3&#13;&#10;&#13;&#10;* Add boards.txt definition&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Me No Dev &lt;me-no-dev@users.noreply.github.com&gt;&#13;&#10;&#13;&#10;* Update get.py to support Apple ARM64&#13;&#10;&#13;&#10;* Update package_esp32_index.template.json&#13;&#10;&#13;&#10;* WString Return bool (#7774)&#13;&#10;&#13;&#10;* Add Roboheart Hercules development board to the esp32-core (#7672)&#13;&#10;&#13;&#10;* added Roboheart Hercules pin definitions and board.txt entries&#13;&#10;&#13;&#10;* added package_roboheat.json for prototyping&#13;&#10;&#13;&#10;* Roboheart Hercules pins&#13;&#10;&#13;&#10;* Updated the pins&#13;&#10;&#13;&#10;* Delete package_roboheart.json&#13;&#10;&#13;&#10;* Requested changes&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: renebohne &lt;rene.bohne@gmail.com&gt;&#13;&#10;&#13;&#10;* Reword &quot;ESP-IDF as Component&quot; (#7812)&#13;&#10;&#13;&#10;I think &quot;Arduino as an ESP-IDF component&quot; or just &quot;As ESP-IDF component&quot; instead of  &quot;ESP-IDF as Component&quot; is more correct way to name the link.&#13;&#10;&#13;&#10;1. &quot;ESP-IDF as Component&quot; would imply that ESP-IDF is some sort of library for Arduino, which is (IMO) misleading, because it's true the other way around.&#13;&#10;2. It's written as &quot;Arduino as an ESP-IDF component&quot; on the webpage it points to as well.&#13;&#10;&#13;&#10;- Also I removed the capitalization from &quot;Component&quot; as I have not found a reason why is it capitalized.&#13;&#10;&#13;&#10;* add new board Adafruit Feather ESP32-S3 Reverse TFT (#7811)&#13;&#10;&#13;&#10;* Multi threading examples (tasks, queues, semaphores, mutexes) (#7660)&#13;&#10;&#13;&#10;* Moved and renamed example ESP32/FreeRTOS to MultiThreading/BasicMultiThreading&#13;&#10;&#13;&#10;* Added dummy files&#13;&#10;&#13;&#10;* Modified original example&#13;&#10;&#13;&#10;* Fixed BasicMultiThreading.ino&#13;&#10;&#13;&#10;* Added Example demonstrating use of queues&#13;&#10;&#13;&#10;* Extended info in BasicMultiThreading&#13;&#10;&#13;&#10;* Renamed Queues to singular Queue&#13;&#10;&#13;&#10;* Added Mutex example&#13;&#10;&#13;&#10;* Added Semaphore example&#13;&#10;&#13;&#10;* Moved info from example to README&#13;&#10;&#13;&#10;* Moved doc from Mutex to README&#13;&#10;&#13;&#10;* Added Queue README&#13;&#10;&#13;&#10;* Removed unecesary text&#13;&#10;&#13;&#10;* Fixed grammar&#13;&#10;&#13;&#10;* Increased stack size for Sempahore example&#13;&#10;&#13;&#10;* Added headers into .ino files&#13;&#10;&#13;&#10;* Added word Example at the end of title in README&#13;&#10;&#13;&#10;* removed unused line&#13;&#10;&#13;&#10;* Added forgotten README&#13;&#10;&#13;&#10;* Modified BasicMultiThreading example&#13;&#10;&#13;&#10;* Added missing S3 entry in README&#13;&#10;&#13;&#10;* moved location&#13;&#10;&#13;&#10;* Update ESP-IDF libs&#13;&#10;&#13;&#10;* Update CMakeLists.txt&#13;&#10;&#13;&#10;* Update esptool to v4.4&#13;&#10;&#13;&#10;* Add function timerAttachInterruptFlag (#7809)&#13;&#10;&#13;&#10;* Update esptool to v4.5&#13;&#10;&#13;&#10;* ADC refactoring (#7827)&#13;&#10;&#13;&#10;* Adc refactored + periman implementation&#13;&#10;&#13;&#10;Peripheral manager still needs to be checked if the implementation is right.&#13;&#10;&#13;&#10;* switched to working solution for milivolts read&#13;&#10;&#13;&#10;* Periman detachbus fix&#13;&#10;&#13;&#10;* coding style&#13;&#10;&#13;&#10;* fix CI warnings&#13;&#10;&#13;&#10;* fix FreeRTOS example&#13;&#10;&#13;&#10;* Update ETH.cpp&#13;&#10;&#13;&#10;* Update FunctionalInterruptStruct.ino&#13;&#10;&#13;&#10;* Update package_esp32_index.template.json&#13;&#10;&#13;&#10;* Update package_esp32_index.template.json&#13;&#10;&#13;&#10;* Fixes for the latest IDF v5.1&#13;&#10;&#13;&#10;* update esp-idf libs and toolchain&#13;&#10;&#13;&#10;* Turn OFF auto crystal frequency for ESP32 (needed by TWAI)&#13;&#10;&#13;&#10;* Update examples&#13;&#10;&#13;&#10;* Switch build to mostly use flags from files&#13;&#10;&#13;&#10;Includes can not be done this way&#13;&#10;&#13;&#10;* Reorganize flag files&#13;&#10;&#13;&#10;* Optimize chip build flags further&#13;&#10;&#13;&#10;* Revert defines from file. MBEDTLS_CONFIG_FILE does not properly expand&#13;&#10;&#13;&#10;* Add support for includes and defines from file&#13;&#10;&#13;&#10;* Replace old sdk path references in platform.txt&#13;&#10;&#13;&#10;* use gcc-ar (#8013)&#13;&#10;&#13;&#10;* Makes F_CPU generic for all SoC (#8007)&#13;&#10;&#13;&#10;Based on CONFIG_ESP_DEFAULT_CPU_FREQ_MHZ that is correctly defined in the sdkconfig file for each SoC.&#13;&#10;&#13;&#10;* TIMER refactoring (#7904)&#13;&#10;&#13;&#10;* refactor using GPtimer&#13;&#10;&#13;&#10;* Updated timer HW test&#13;&#10;&#13;&#10;* fix examples&#13;&#10;&#13;&#10;* Add v2.0.7 in issue template (#7871)&#13;&#10;&#13;&#10;* refactor using GPtimer&#13;&#10;&#13;&#10;* Updated timer HW test&#13;&#10;&#13;&#10;* fix examples&#13;&#10;&#13;&#10;* Revert &quot;Add v2.0.7 in issue template (#7871)&quot;&#13;&#10;&#13;&#10;This reverts commit fcc3b17d62ff57861f8913ca1f142fd5163b7457.&#13;&#10;&#13;&#10;* Update upload-artifact to v3 in HW CI&#13;&#10;&#13;&#10;* Revert &quot;Update upload-artifact to v3 in HW CI&quot;&#13;&#10;&#13;&#10;This reverts commit 1ba228071718ba37c4e26d98db22f77b2a7364a6.&#13;&#10;&#13;&#10;* replace resolution with frequency&#13;&#10;&#13;&#10;* remove count_down option&#13;&#10;&#13;&#10;* countup removed from examples + header&#13;&#10;&#13;&#10;* Refactored timer object&#13;&#10;&#13;&#10;* code cleanup + examples and tests fixes&#13;&#10;&#13;&#10;* TimerAlarm fix&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Vojtěch Bartoška &lt;76958047+VojtechBartoska@users.noreply.github.com&gt;&#13;&#10;&#13;&#10;* [Docs] ADC and Timer API Update (+some docs fixes) (#7906)&#13;&#10;&#13;&#10;* updated docs&#13;&#10;&#13;&#10;* remove hall sensor docs&#13;&#10;&#13;&#10;Removed Hall sensor documentation as its no longer supported in IDF-5&#13;&#10;&#13;&#10;* Fixed ESPNow examples location in docs&#13;&#10;&#13;&#10;* Last timer refactored API + gpio small fix&#13;&#10;&#13;&#10;* AlarmWrite fix&#13;&#10;&#13;&#10;* Fixes APLL/PLL with RTC Frequency (#8025)&#13;&#10;&#13;&#10;log_d() was displaying APLL for any SoC, but S3 and C3 has not such option, causing compilation errors.&#13;&#10;&#13;&#10;* Update IDF libs and fix OPI PSRAM on S3&#13;&#10;&#13;&#10;* Add setMode function HardwareSerial.c to set the esp32 uart mode for use with RS485 auto RTS (#7935)&#13;&#10;&#13;&#10;* Added setMode function to set the esp32 uart mode&#13;&#10;&#13;&#10;Used to set the esp32 uart mode for use with RS485 Half Duplex and the auto RTS pin mode. This will set/clear the RTS pin output to control the RE/DE pin on most RS485 chips.&#13;&#10;&#13;&#10;* Add Success (bool) return in some functions&#13;&#10;&#13;&#10;* Add Success (bool) return code to some functions&#13;&#10;&#13;&#10;* Add Success (bool) return to some functions&#13;&#10;&#13;&#10;* Add Success (bool) return to some functions&#13;&#10;&#13;&#10;* Fix uartSetRxTimeout return type&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Rodrigo Garcia &lt;rodrigo.garcia@espressif.com&gt;&#13;&#10;&#13;&#10;* Add support for esp-elf-gdb&#13;&#10;&#13;&#10;* WFG Crashfix (#8044)&#13;&#10;&#13;&#10;* Update component libs&#13;&#10;&#13;&#10;* IDF release/v5.1 (#8061)&#13;&#10;&#13;&#10;* IDF release/v5.1 bb9200acec&#13;&#10;&#13;&#10;* Update Esp.cpp&#13;&#10;&#13;&#10;* IDF release/v5.1 420ebd208a&#13;&#10;&#13;&#10;* Update esp32-hal-psram.c&#13;&#10;&#13;&#10;* Switch SDK to be an external package&#13;&#10;&#13;&#10;* fix path (#8096)&#13;&#10;&#13;&#10;* Makes UART work at any APB Frequency (#8097)&#13;&#10;&#13;&#10;Fixes HardwareSerial to work with IDF 5.1 on any CPU/APB Frequency (240MHz to 10MHZ), including user created low power modes.&#13;&#10;&#13;&#10;* Add required callbacks for TinyUSB DFU&#13;&#10;&#13;&#10;* Update version to 3.0.0&#13;&#10;&#13;&#10;* Add ESP.getCoreVersion() and update ESP.getChipModel()&#13;&#10;&#13;&#10;* Update timer hal for the latest 5.1&#13;&#10;&#13;&#10;* Use separate RX and TX buffer sizes in HTTP client&#13;&#10;&#13;&#10;optimizes download by allowing up to 4K packets to be received&#13;&#10;&#13;&#10;* Rename clock tree enum name in latest 5.1&#13;&#10;&#13;&#10;* ESP32-H4 support was removed in ESP-IDF v5.1&#13;&#10;&#13;&#10;* IDF release/v5.1 2004bf4e11 (#8165)&#13;&#10;&#13;&#10;* Deinit previous bus first (#8180)&#13;&#10;&#13;&#10;* TIMER - add timer_started flag, fix timerEnd() + timer HW test (#8135)&#13;&#10;&#13;&#10;* Add timer_started flag and stop before disable&#13;&#10;&#13;&#10;* Fix timer HW test&#13;&#10;&#13;&#10;* TOUCH - Peripheral manager implementation (#8129)&#13;&#10;&#13;&#10;* Touch periman implemented&#13;&#10;&#13;&#10;* Deinit previous bus first&#13;&#10;&#13;&#10;* LEDC Refactoring - Peripheral manager implemented (#8126)&#13;&#10;&#13;&#10;* LEDC periman implementation&#13;&#10;&#13;&#10;* Fix examples&#13;&#10;&#13;&#10;* Rework tone&#13;&#10;&#13;&#10;* Update ledc docs&#13;&#10;&#13;&#10;* fix missing bracket&#13;&#10;&#13;&#10;* Update analog funtions esp32-hal.h&#13;&#10;&#13;&#10;* Update CameraWebServer example&#13;&#10;&#13;&#10;* Fix HiFreq_ADC example&#13;&#10;&#13;&#10;* minor fixes - typos&#13;&#10;&#13;&#10;* Avoid calling tone/notone when tone already runs on dif. pin&#13;&#10;&#13;&#10;* Remove unused channels_resolution&#13;&#10;&#13;&#10;* GPIO - Peripheral manager implementation (#8179)&#13;&#10;&#13;&#10;* periman-implementation&#13;&#10;&#13;&#10;* fix RGB_BUILTIN and remove space&#13;&#10;&#13;&#10;* Enforces more consistency into Peripheral Manager (#8188)&#13;&#10;&#13;&#10;* Avoid log_i() message the first time a bus is assigned&#13;&#10;&#13;&#10;* Prevent operation with ESP32_BUS_TYPE_INIT&#13;&#10;&#13;&#10;* keeps coding style&#13;&#10;&#13;&#10;* do not print messages on INIT bus type&#13;&#10;&#13;&#10;* [Arduino Core 3.0.0] RMT IDF5.1 Refactoring (#7994)&#13;&#10;&#13;&#10;* RMT IDF5.1 refactoring&#13;&#10;&#13;&#10;* Fixes initial value setting&#13;&#10;&#13;&#10;* removed rmtRead() with user callback&#13;&#10;&#13;&#10;* simplify/remove Read data structure&#13;&#10;&#13;&#10;* Deep API simplification&#13;&#10;&#13;&#10;* fixes the examples&#13;&#10;&#13;&#10;* fix rmt.h&#13;&#10;&#13;&#10;* adds support to APB different frequencies&#13;&#10;&#13;&#10;* fixes CI and not defined RGB_BUILTIN&#13;&#10;&#13;&#10;* new RMT API and examples&#13;&#10;&#13;&#10;* fixing commentaties&#13;&#10;&#13;&#10;* Update esp32-hal-rgb-led.c&#13;&#10;&#13;&#10;* changes Filter API&#13;&#10;&#13;&#10;* Fixes example with Filter API&#13;&#10;&#13;&#10;* Update PlatformIO scripts for the upcoming 3.0 core (#8183)&#13;&#10;&#13;&#10;* Update PlatformIO scripts for the upcoming 3.0 core&#13;&#10;&#13;&#10;* Dynamically select proper framework-arduinoespressif32-libs package&#13;&#10;&#13;&#10;With this change the dev-platform will be dynamically configured to&#13;&#10;pull the latest .zip package with precompiled libraries from extracted from&#13;&#10;package_esp32_index.template.json&#13;&#10;&#13;&#10;* free memory on detach (#8264)&#13;&#10;&#13;&#10;* SPI - Peripheral manager implementation  (#8255)&#13;&#10;&#13;&#10;* spi periman implementation&#13;&#10;&#13;&#10;* fix header file&#13;&#10;&#13;&#10;* remove unused struct&#13;&#10;&#13;&#10;* fix missing braces&#13;&#10;&#13;&#10;* Update esp32-hal-rmt.c (#8216)&#13;&#10;&#13;&#10;Optimizing Peripheral Manager Test&#13;&#10;&#13;&#10;* I2C - Peripheral manager implementation (#8220)&#13;&#10;&#13;&#10;* i2c-master periman initial commit&#13;&#10;&#13;&#10;* i2c-master make detachbus static + comment remove&#13;&#10;&#13;&#10;* i2c-slave periman implementation&#13;&#10;&#13;&#10;* SetPinBus to INIT on i2cDeinits&#13;&#10;&#13;&#10;* Fix slave pins deinit&#13;&#10;&#13;&#10;* remove dbg logs&#13;&#10;&#13;&#10;* set ret to ESP_FAIL instead of returning&#13;&#10;&#13;&#10;* Fix warnings in hal-spi caused by pariman transition&#13;&#10;&#13;&#10;* Update esptool.py to version 4.6&#13;&#10;&#13;&#10;* Add platform support for ESP_SR&#13;&#10;&#13;&#10;* Add USB Type and valid pin check to periman&#13;&#10;&#13;&#10;* replace bus with spi-&gt;num+1 (#8279)&#13;&#10;&#13;&#10;* Remove default pins from SPI HAL&#13;&#10;&#13;&#10;* Add commented out handlers for esptool.js in TinyUSB CDC&#13;&#10;&#13;&#10;For future use&#13;&#10;&#13;&#10;* Add build defines for host os and fqbn (for debug purposes)&#13;&#10;&#13;&#10;* Provide proper memory caps total size&#13;&#10;&#13;&#10;* Update Esp.cpp&#13;&#10;&#13;&#10;* SDMMC - Peripheral manager implementation (#8289)&#13;&#10;&#13;&#10;* sdmmc periman implemented&#13;&#10;&#13;&#10;* save pins when SOC_SDMMC_USE_IOMUX&#13;&#10;&#13;&#10;* IDF release/v5.1 4bc762621d (#8292)&#13;&#10;&#13;&#10;* Adds missing pinMode (#8312)&#13;&#10;&#13;&#10;* Adds missing pinMode&#13;&#10;&#13;&#10;The example code lacks a pinMode() to initialize the GPIO 0 (button). In Arduino Core 3.0.0, it prints an error message when trying to read a not initialized GPIO.&#13;&#10;&#13;&#10;* Update KeyboardLogout.ino&#13;&#10;&#13;&#10;Adds &lt;buttonPin&gt; to keep code standard&#13;&#10;&#13;&#10;* Update KeyboardReprogram.ino&#13;&#10;&#13;&#10;Adds &lt;buttonPin&gt; to keep code standard&#13;&#10;&#13;&#10;* LEDC Fade implementation (#8338)&#13;&#10;&#13;&#10;* fade API + pointer fixes&#13;&#10;&#13;&#10;* Add fade api&#13;&#10;&#13;&#10;* Add fade example&#13;&#10;&#13;&#10;* update ledc docs&#13;&#10;&#13;&#10;* remove unused variables&#13;&#10;&#13;&#10;* fix path to example&#13;&#10;&#13;&#10;* Adds USB to Peripheral Manager - Arduino Core 3.0.0 (#8335)&#13;&#10;&#13;&#10;* ETHERNET - Peripheral manager implementation (#8297)&#13;&#10;&#13;&#10;* Peripheral manager implemented&#13;&#10;&#13;&#10;* remove unused variable&#13;&#10;&#13;&#10;* Add all RMII pins&#13;&#10;&#13;&#10;* fix typo&#13;&#10;&#13;&#10;* Adds HardwareSerial to Peripheral Manager Arduino 3.0.0 (#8328)&#13;&#10;&#13;&#10;* Do not limit ETHERNET in periman to only ESP32. SPI is also an option&#13;&#10;&#13;&#10;* Initial support for ESP32-C6 (#8337)&#13;&#10;&#13;&#10;* Add checks for SOC defines (#8351)&#13;&#10;&#13;&#10;* Add checks for SOC defines&#13;&#10;&#13;&#10;* Add SoC checks to BLE library&#13;&#10;&#13;&#10;* fix i2c compilation error&#13;&#10;&#13;&#10;* fix wrong placement of include&#13;&#10;&#13;&#10;* add check to SPI library&#13;&#10;&#13;&#10;* add check to USB library&#13;&#10;&#13;&#10;* add checks to Wire library&#13;&#10;&#13;&#10;* Feature/esp32h2 support (#8373)&#13;&#10;&#13;&#10;* Initial support for ESP32H2&#13;&#10;&#13;&#10;* Additional changes for ESP32H2&#13;&#10;&#13;&#10;* Update libs for ESP32H2&#13;&#10;&#13;&#10;* Fix flashing on ESP32-H2&#13;&#10;&#13;&#10;* Fix GPIO Configs for ESP32-C6 and ESP32-H2&#13;&#10;&#13;&#10;* Update Timer test sketch&#13;&#10;&#13;&#10;* Fix upload flash parameters&#13;&#10;&#13;&#10;* Use ets_write_char_uart instead of ets_printf in log_printfv&#13;&#10;&#13;&#10;* Print full chip report when log level is sufficient (#8282)&#13;&#10;&#13;&#10;* ESP32-C3 does not have ets_write_char_uart&#13;&#10;&#13;&#10;* Fix BLE gap event name&#13;&#10;&#13;&#10;* HW Testing - Pytest update (#8389)&#13;&#10;&#13;&#10;* update tests requirements&#13;&#10;&#13;&#10;* remove already handled components&#13;&#10;&#13;&#10;* Update version of pytest&#13;&#10;&#13;&#10;* Add missing ESP32-H2 to hil.yml&#13;&#10;&#13;&#10;* Updated FreeRTOS names (#8418)&#13;&#10;&#13;&#10;* HW Testing -  ESP32-C6 + ESP32-H2 fixes (#8404)&#13;&#10;&#13;&#10;* add C6/H2 to tests cfg.json&#13;&#10;&#13;&#10;* remove ,&#13;&#10;&#13;&#10;* workflow runs-on runner by matrix&#13;&#10;&#13;&#10;* Add need for arduino tag to select runner&#13;&#10;&#13;&#10;* Add cryptography to requirements.txt&#13;&#10;&#13;&#10;* Removed duplicate TX1 define for H2 (#8402)&#13;&#10;&#13;&#10;* Fix broken examples&#13;&#10;&#13;&#10;* Fixes RMT filter &amp; idle timing and setup (#8359)&#13;&#10;&#13;&#10;* Fixes Filter and Idle parameter to uint32&#13;&#10;&#13;&#10;* Fixes Filter and Idle setup&#13;&#10;&#13;&#10;* Fixes it to 5.1Libs branch&#13;&#10;&#13;&#10;* fix RMT CLK source and Filter API&#13;&#10;&#13;&#10;* fixes missing ;&#13;&#10;&#13;&#10;* fixes missing ;&#13;&#10;&#13;&#10;* fixes RMT example&#13;&#10;&#13;&#10;* IDF release/v5.1 a7b62bbcaf (#8438)&#13;&#10;&#13;&#10;* Add workflow to build executables from python scripts (#8290)&#13;&#10;&#13;&#10;* Add workflow to build executables from python scripts&#13;&#10;&#13;&#10;* Push binary to tools&#13;&#10;&#13;&#10;* Enable executable signing on Windows&#13;&#10;&#13;&#10;* Update get.py&#13;&#10;&#13;&#10;* Push binary to tools&#13;&#10;&#13;&#10;* Try with multiple files&#13;&#10;&#13;&#10;* Try more actions&#13;&#10;&#13;&#10;* Try powershell&#13;&#10;&#13;&#10;* Restore tools so they do not get rebuilt&#13;&#10;&#13;&#10;* Finalize scripts&#13;&#10;&#13;&#10;* Push binary to tools&#13;&#10;&#13;&#10;* App rollback should be after PSRAM is initialized&#13;&#10;&#13;&#10;* Correcting RX1 to GPIO4 and TX1 to GPIO5 to be consistent with documentation. Previous pin use works but is inconsistent with C6 docs.&#13;&#10;&#13;&#10;* Fixes Memory Leak (#8486)&#13;&#10;&#13;&#10;* fixes preprocessor test (#8485)&#13;&#10;&#13;&#10;* fixes preprocessor test&#13;&#10;&#13;&#10;When using `#define USE_SOFT_AP` &#13;&#10;Change&#13;&#10;`&amp;&amp; not USE_SOFT_AP` ==&gt; `&amp;&amp; !defined(USE_SOFT_AP)`&#13;&#10;&#13;&#10;* Adds any BLE capable device in WiFiProv.ino&#13;&#10;&#13;&#10;Removing ESP32 restriction for BLE Provisioning.&#13;&#10;&#13;&#10;* fix flash mode read out for C6&#13;&#10;&#13;&#10;* Add option for custom partitions without restrictions&#13;&#10;&#13;&#10;* SD_MMC update (#8298)&#13;&#10;&#13;&#10;* Updated SD_MMC lib and examples&#13;&#10;&#13;&#10;* Removed getter implementation and commented usage in examples&#13;&#10;&#13;&#10;* squashed updates&#13;&#10;&#13;&#10;* IDF release/v5.1 f0437b945f (#8599)&#13;&#10;&#13;&#10;* Update package_esp32_index.template.json&#13;&#10;&#13;&#10;* Fix printf format build error in BTAdvertisedDeviceSet.cpp&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Pedro Minatel &lt;pedro.minatel@espressif.com&gt;&#13;&#10;Co-authored-by: Rodrigo Garcia &lt;rodrigo.garcia@espressif.com&gt;&#13;&#10;Co-authored-by: Ha Thach &lt;thach@tinyusb.org&gt;&#13;&#10;Co-authored-by: Martin Turski &lt;quiret@vfemail.net&gt;&#13;&#10;Co-authored-by: raviypujar &lt;raviypujar@gmail.com&gt;&#13;&#10;Co-authored-by: Jason2866 &lt;24528715+Jason2866@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: Tomáš Pilný &lt;34927466+PilnyTomas@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: Jan Procházka &lt;90197375+P-R-O-C-H-Y@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: Daniel Berlin &lt;dberlin@dberlin.org&gt;&#13;&#10;Co-authored-by: Nima Askari (نیما عسکری) &lt;nimaltd@yahoo.com&gt;&#13;&#10;Co-authored-by: rtpmsys &lt;106180646+rtpmsys@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: bytiful &lt;55647551+bytiful@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: tmfarrington &lt;tmfarrington@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: Krzysiek S &lt;chris.streh@gmail.com&gt;&#13;&#10;Co-authored-by: surt &lt;carl.olsson@gmail.com&gt;&#13;&#10;Co-authored-by: Max Scheffler &lt;max.scheffler@pm.me&gt;&#13;&#10;Co-authored-by: Clemens Kirchgatterer &lt;clemens@1541.org&gt;&#13;&#10;Co-authored-by: Peter Pan's Techland &lt;twinkle-pirate@hotmail.com&gt;&#13;&#10;Co-authored-by: Roman &lt;programmeofficemilkyway@gmail.com&gt;&#13;&#10;Co-authored-by: Eistee &lt;Eistee82@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: David McCurley &lt;44048235+mrengineer7777@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: Gaya3N25 &lt;30388176+Gaya3N25@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: renebohne &lt;rene.bohne@gmail.com&gt;&#13;&#10;Co-authored-by: Olivér Remény &lt;25034625+remenyo@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: davidk88 &lt;david.kotar@gmail.com&gt;&#13;&#10;Co-authored-by: Vojtěch Bartoška &lt;76958047+VojtechBartoska@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: James Armstrong &lt;jamesarmstrong3@me.com&gt;&#13;&#10;Co-authored-by: Valerii Koval &lt;valeros@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: Peter G. Jensen &lt;root@petergjoel.dk&gt;" />
			<int key="additions" value="40" />
			<int key="deletions" value="4" />
			<string key="diff" value="@@ -12,9 +12,10 @@&#10; // See the License for the specific language governing permissions and&#10; // limitations under the License.&#10; #include &quot;USB.h&quot;&#10;-#if CONFIG_IDF_TARGET_ESP32C3 || CONFIG_IDF_TARGET_ESP32S3&#10;+#if SOC_USB_SERIAL_JTAG_SUPPORTED&#10; &#10; #include &quot;esp32-hal.h&quot;&#10;+#include &quot;esp32-hal-periman.h&quot;&#10; #include &quot;HWCDC.h&quot;&#10; #include &quot;freertos/FreeRTOS.h&quot;&#10; #include &quot;freertos/semphr.h&quot;&#10;@@ -22,16 +23,20 @@&#10; #include &quot;freertos/ringbuf.h&quot;&#10; #include &quot;esp_intr_alloc.h&quot;&#10; #include &quot;soc/periph_defs.h&quot;&#10;+#include &quot;soc/io_mux_reg.h&quot;&#10;+#pragma GCC diagnostic ignored &quot;-Wvolatile&quot;&#10; #include &quot;hal/usb_serial_jtag_ll.h&quot;&#10;+#pragma GCC diagnostic warning &quot;-Wvolatile&quot;&#10;+#include &quot;rom/ets_sys.h&quot;&#10; &#10; ESP_EVENT_DEFINE_BASE(ARDUINO_HW_CDC_EVENTS);&#10; &#10; static RingbufHandle_t tx_ring_buf = NULL;&#10;-static xQueueHandle rx_queue = NULL;&#10;+static QueueHandle_t rx_queue = NULL;&#10; static uint8_t rx_data_buf[64] = {0};&#10; static intr_handle_t intr_handle = NULL;&#10; static volatile bool initial_empty = false;&#10;-static xSemaphoreHandle tx_lock = NULL;&#10;+static SemaphoreHandle_t tx_lock = NULL;&#10; &#10; // workaround for when USB CDC is not connected&#10; static uint32_t tx_timeout_ms = 0;&#10;@@ -168,6 +173,28 @@ void HWCDC::onEvent(arduino_hw_cdc_event_t event, esp_event_handler_t callback){&#10;     arduino_hw_cdc_event_handler_register_with(ARDUINO_HW_CDC_EVENTS, event, callback, this);&#10; }&#10; &#10;+bool HWCDC::deinit(void * busptr) &#10;+{&#10;+    // avoid any recursion issue with Peripheral Manager perimanSetPinBus() call&#10;+    static bool running = false;&#10;+    if (running) return true;&#10;+    running = true; &#10;+    // Setting USB D+ D- pins&#10;+    bool retCode = true;&#10;+    retCode &amp;= perimanSetPinBus(USB_DM_GPIO_NUM, ESP32_BUS_TYPE_INIT, NULL);&#10;+    retCode &amp;= perimanSetPinBus(USB_DP_GPIO_NUM, ESP32_BUS_TYPE_INIT, NULL);&#10;+    if (retCode) {&#10;+        // Force the host to re-enumerate (BUS_RESET)&#10;+        pinMode(USB_DM_GPIO_NUM, OUTPUT_OPEN_DRAIN);&#10;+        pinMode(USB_DP_GPIO_NUM, OUTPUT_OPEN_DRAIN);&#10;+        digitalWrite(USB_DM_GPIO_NUM, LOW);&#10;+        digitalWrite(USB_DP_GPIO_NUM, LOW);&#10;+    }&#10;+    // release the flag&#10;+    running = false;&#10;+    return retCode;&#10;+}&#10;+&#10; void HWCDC::begin(unsigned long baud)&#10; {&#10;     if(tx_lock == NULL) {&#10;@@ -193,6 +220,14 @@ void HWCDC::begin(unsigned long baud)&#10;         end();&#10;         return;&#10;     }&#10;+    if (perimanSetBusDeinit(ESP32_BUS_TYPE_USB, HWCDC::deinit)) {&#10;+        // Setting USB D+ D- pins&#10;+        perimanSetPinBus(USB_DM_GPIO_NUM, ESP32_BUS_TYPE_USB, (void *) this);&#10;+        perimanSetPinBus(USB_DP_GPIO_NUM, ESP32_BUS_TYPE_USB, (void *) this);&#10;+    } else {&#10;+        log_e(&quot;Serial JTAG Pins can't be set into Peripheral Manager.&quot;);&#10;+    }&#10;+&#10;     usb_serial_jtag_ll_txfifo_flush();&#10; }&#10; &#10;@@ -212,6 +247,7 @@ void HWCDC::end()&#10;         esp_event_loop_delete(arduino_hw_cdc_event_loop_handle);&#10;         arduino_hw_cdc_event_loop_handle = NULL;&#10;     }&#10;+    HWCDC::deinit(this);&#10; }&#10; &#10; void HWCDC::setTxTimeoutMs(uint32_t timeout){&#10;@@ -408,4 +444,4 @@ HWCDC USBSerial;&#10; #endif&#10; #endif&#10; &#10;-#endif /* CONFIG_TINYUSB_CDC_ENABLED */&#10;+#endif /* SOC_USB_SERIAL_JTAG_SUPPORTED */&#10;" />
			<string key="comment_change" value="True" />
		</event>
	</trace>
	<trace>
		<string key="file" value="DNSServer.cpp" />
	</trace>
	<trace>
		<string key="file" value="BLEServer.cpp" />
		<event>
			<string key="timestamp" value="2022-12-14T17:17:20+02:00" />
			<string key="author" value="RM-Alltrons" />
			<string key="change_type" value="MODIFY" />
			<string key="commit_message" value="Added onDisconnect with gatt parameters to BLUEServerCallbacks, equivalent to the existing onConnect (#7559)&#10;&#10;Co-authored-by: Admin &lt;admin@wlan-244060.nbw.tue.nl&gt;" />
			<int key="additions" value="6" />
			<int key="deletions" value="0" />
			<string key="diff" value='@@ -374,6 +374,12 @@ void BLEServerCallbacks::onDisconnect(BLEServer* pServer) {&#10; &#9;log_d("BLEServerCallbacks", "&lt;&lt; onDisconnect()");&#10; } // onDisconnect&#10; &#10;+void BLEServerCallbacks::onDisconnect(BLEServer* pServer, esp_ble_gatts_cb_param_t* param) {&#10;+&#9;log_d("BLEServerCallbacks", "&gt;&gt; onDisconnect(): Default");&#10;+&#9;log_d("BLEServerCallbacks", "Device: %s", BLEDevice::toString().c_str());&#10;+&#9;log_d("BLEServerCallbacks", "&lt;&lt; onDisconnect()");&#10;+} // onDisconnect&#10;+&#10; void BLEServerCallbacks::onMtuChanged(BLEServer* pServer, esp_ble_gatts_cb_param_t* param) {&#10; &#9;log_d("BLEServerCallbacks", "&gt;&gt; onMtuChanged(): Default");&#10; &#9;log_d("BLEServerCallbacks", "Device: %s MTU: %d", BLEDevice::toString().c_str(), param-&gt;mtu.mtu);&#10;' />
			<string key="comment_change" value="True" />
		</event>
		<event>
			<string key="timestamp" value="2023-10-05T14:54:25+03:00" />
			<string key="author" value="Me No Dev" />
			<string key="change_type" value="MODIFY" />
			<string key="commit_message" value="ESP-IDF v5.1 (#7733)&#10;&#10;* Initial changes to compile under ESP-IDF v5.1&#13;&#10;&#13;&#10;* Initial import for ESP-IDF v5.1 libs&#13;&#10;&#13;&#10;* Update toolchain&#13;&#10;&#13;&#10;* Update esp32-hal-psram.c&#13;&#10;&#13;&#10;* Add missing LDs&#13;&#10;&#13;&#10;* Update platform.txt&#13;&#10;&#13;&#10;* Stop some CI jobs, because they will always fail&#13;&#10;&#13;&#10;* Fix examples&#13;&#10;&#13;&#10;* Update app_httpd.cpp&#13;&#10;&#13;&#10;* Update ResetReason.ino&#13;&#10;&#13;&#10;* Warnings fixes&#13;&#10;&#13;&#10;* Added the example guideline and template (#7665)&#13;&#10;&#13;&#10;* Added the example guideline and template&#13;&#10;&#13;&#10;* PR review changes with some typos and grammar fixes&#13;&#10;&#13;&#10;* Changes according to the PR review&#13;&#10;&#13;&#10;* Added ESP32-S3 link to the datasheet (#7738)&#13;&#10;&#13;&#10;* Update HiFreq_ADC.ino&#13;&#10;&#13;&#10;* Replace periph_ctrl.h use because of deprecation&#13;&#10;&#13;&#10;* Replace esp_spi_flash.h use because of deprecation&#13;&#10;&#13;&#10;* Add includes to male mDNS::enableWorkstation compile&#13;&#10;&#13;&#10;* Fix ssl_client mbedtls_pk_parse_key callback&#13;&#10;&#13;&#10;* Update temperature sensor driver&#13;&#10;&#13;&#10;* Allow sketch_utils to compile with arduino-cli&#13;&#10;&#13;&#10;* Run CI with arduino-cli&#13;&#10;&#13;&#10;* Fix arduino-cli CI build on Windows&#13;&#10;&#13;&#10;* Refactor platform.txt to not use components installed through the board manager when running from git&#13;&#10;&#13;&#10;* Initial Peripheral Manager Implementation&#13;&#10;&#13;&#10;* Update SigmaDelta driver to use the new ESP-IDF driver API&#13;&#10;&#13;&#10;* Small improvements to peripheral manager and SigmaDelta&#13;&#10;&#13;&#10;* Remove deleted function from SigmaDelta header&#13;&#10;&#13;&#10;* Update DAC driver to use the new ESP-IDF driver API&#13;&#10;&#13;&#10;* Adds softAp(String) to make it compatible with ESP8266 (#7801)&#13;&#10;&#13;&#10;* Fix commentary (#7800)&#13;&#10;&#13;&#10;Minor fix based on observation done in https://github.com/espressif/arduino-esp32/issues/7795#issuecomment-1416868611&#13;&#10;&#13;&#10;* add adafruit new board feather esp32s2 reserve tft (#7794)&#13;&#10;&#13;&#10;* bugfix: add &lt;stdint.h&gt; for uint8_t to avoid compilation failure (GCC 11.2.0) (#7744)&#13;&#10;&#13;&#10;* Adding 3rd party boards for VALTRACK-V4-VTS-ESP32-C3 &amp; VALTRACK-V4-MFW-ESP32-C3 (#7735)&#13;&#10;&#13;&#10;* Added VALTRACK-V4-VTS-ESP32-C3 board definition&#13;&#10;&#13;&#10;Created pins_arduino.h &amp; made changes to boards.txt with necessary changes&#13;&#10;&#13;&#10;* Modified the URL&#13;&#10;&#13;&#10;* Renamed json&#13;&#10;&#13;&#10;* renamed all auRL&#13;&#10;&#13;&#10;* Adding VALTRACK-V4 series board definitions&#13;&#10;&#13;&#10;Added VALTRACK-V4-VTS-ESP32C3 &amp; VALTRACK-V4-MFW-ESP32-C3 board variants&#13;&#10;&#13;&#10;* Adding VALTRACK-V4 series board definitions&#13;&#10;&#13;&#10;Added VALTRACK-V4-VTS-ESP32C3 &amp; VALTRACK-V4-MFW-ESP32-C3 board variants&#13;&#10;&#13;&#10;* Reverted package_esp32_index.template.json&#13;&#10;&#13;&#10;restored package_esp32_index.template.json from edits&#13;&#10;&#13;&#10;* Reverted package_esp32_index.template.json&#13;&#10;&#13;&#10;Added new line to package_esp32_index.template.json&#13;&#10;&#13;&#10;* Update Platformio CI (#7725)&#13;&#10;&#13;&#10;* WiFiClient example fix (#7711)&#13;&#10;&#13;&#10;* Modified WiFiClient example to use thingspeak instead of non-functionig sparkfun&#13;&#10;&#13;&#10;* Moved instructions to README&#13;&#10;&#13;&#10;* Fixed spelling&#13;&#10;&#13;&#10;* Added link to S3 datasheet&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Jan Procházka &lt;90197375+P-R-O-C-H-Y@users.noreply.github.com&gt;&#13;&#10;&#13;&#10;* Mirror update from Heltec repository (#7709)&#13;&#10;&#13;&#10;Heltec updated the I2C pins in https://github.com/Heltec-Aaron-Lee/WiFi_Kit_series/commit/b10f4bf85d13fd01be80dcdb0eb59e6a8c8ba19a&#13;&#10;&#13;&#10;* Fixes BLE data printing (#7699)&#13;&#10;&#13;&#10;* Fixes BLE data printing&#13;&#10;&#13;&#10;BLE data has no '\0' terminator, therefore it can't be printed as a regular C string.&#13;&#10;This fix just prints the BLE data based on its length.&#13;&#10;&#13;&#10;* Simplify printing to a single call&#13;&#10;&#13;&#10;* split menu options + lora_32_V3 fix (#7697)&#13;&#10;&#13;&#10;* Change header gaurd name (#7696)&#13;&#10;&#13;&#10;* Fix Name (#7691)&#13;&#10;&#13;&#10;Wrong name in definitions.&#13;&#10;&#13;&#10;* Fix error in WiFiClient.cpp where the connect function fails for timeouts below 1 second (#7686)&#13;&#10;&#13;&#10;* Update WiFiClient.cpp&#13;&#10;&#13;&#10;This change will allow specifying connect timeouts below 1 second. Without this change, if connect timeouts under 1 second are given, the connect defaults to 0ms and fails. &#13;&#10;This will also allow timeouts in fractions of seconds, e.g. 1500ms. Without this change, connect timeouts are truncated to full second increments.&#13;&#10;&#13;&#10;* Make parameter timeout_ms clear&#13;&#10;&#13;&#10;* Change connection timeout_ms name for clarity&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Rodrigo Garcia &lt;rodrigo.garcia@espressif.com&gt;&#13;&#10;&#13;&#10;* fixed the function header (#7674)&#13;&#10;&#13;&#10;* fixed the function header&#13;&#10;&#13;&#10;* fixed function name and paramaters&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Jan Procházka &lt;90197375+P-R-O-C-H-Y@users.noreply.github.com&gt;&#13;&#10;&#13;&#10;* Ticker fix solving #6155 (#7664)&#13;&#10;&#13;&#10;* Wrapped Ticker functions with #pragma disabling -Wcast-function-type&#13;&#10;&#13;&#10;* Revert &quot;Wrapped Ticker functions with #pragma disabling -Wcast-function-type&quot;&#13;&#10;&#13;&#10;This reverts commit 160be7e67a10d01b6e44c4bf2521c0ccd6348976.&#13;&#10;&#13;&#10;* Fixed Ticker example&#13;&#10;&#13;&#10;* Modified Ticker example&#13;&#10;&#13;&#10;* Fixed LED_BUILTIN err for ESP32&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Jan Procházka &lt;90197375+P-R-O-C-H-Y@users.noreply.github.com&gt;&#13;&#10;&#13;&#10;* setPins fix ESP32 &quot;specified pins are not supported by this chip.&quot; (#7646)&#13;&#10;&#13;&#10;[ESP32: SDMMCFS::begin hardcodes the usage of slot 1, only check if the pins match slot 1 pins.]&#13;&#10;&#13;&#10;setPins() was testing pins D1, D2 and D3 all against D1 ... fine in 1 pin mode when all are -1 not so much if you're trying to get 4 pin mode working.&#13;&#10;I now see this function doesn't really do anything on the ESP32...accept now correctly checks that you are trying to use the slot 1 pins.&#13;&#10;&#13;&#10;Co-authored-by: Jan Procházka &lt;90197375+P-R-O-C-H-Y@users.noreply.github.com&gt;&#13;&#10;&#13;&#10;* Allow passing IP as connect method parameter in WiFiClientSecure and skip unnecessary host-ip conversions (#7643)&#13;&#10;&#13;&#10;* Add LED_BUILTIN* definitions and initialization for LEDs to stop them floating. (#7636)&#13;&#10;&#13;&#10;Co-authored-by: Rodrigo Garcia &lt;rodrigo.garcia@espressif.com&gt;&#13;&#10;&#13;&#10;* Expand path to tinuf2 image when checking existence in platformio-build.py (#7631)&#13;&#10;&#13;&#10;* Expand path to tinuf2 image when checking existence&#13;&#10;&#13;&#10;* More isFiles fixed&#13;&#10;&#13;&#10;* Remove (useless) trailing semicolon from Print.cpp (#7622)&#13;&#10;&#13;&#10;* ADD: New variant Edgebox-ESP-100 (#7771)&#13;&#10;&#13;&#10;* ADD: New variant Edgebox-ESP-100&#13;&#10;&#13;&#10;* FIX: Edgebox-ESP-100 Board.txt usb mode option change back to default value as ESP32S3&#13;&#10;&#13;&#10;* Add Crabik Slot ESP32-S3 board (#7790)&#13;&#10;&#13;&#10;* Added Crabik Slot ESP32-S3&#13;&#10;&#13;&#10;* Adding CPU frequency settings and removing excess from partition scheme settings&#13;&#10;&#13;&#10;* new variant LilyGO T-Display-S3 (#7763)&#13;&#10;&#13;&#10;* new variant LilyGO T-Display-S3&#13;&#10;&#13;&#10;https://github.com/Xinyuan-LilyGO/T-Display-S3&#13;&#10;&#13;&#10;* Add boards.txt definition&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Me No Dev &lt;me-no-dev@users.noreply.github.com&gt;&#13;&#10;&#13;&#10;* Update get.py to support Apple ARM64&#13;&#10;&#13;&#10;* Update package_esp32_index.template.json&#13;&#10;&#13;&#10;* WString Return bool (#7774)&#13;&#10;&#13;&#10;* Add Roboheart Hercules development board to the esp32-core (#7672)&#13;&#10;&#13;&#10;* added Roboheart Hercules pin definitions and board.txt entries&#13;&#10;&#13;&#10;* added package_roboheat.json for prototyping&#13;&#10;&#13;&#10;* Roboheart Hercules pins&#13;&#10;&#13;&#10;* Updated the pins&#13;&#10;&#13;&#10;* Delete package_roboheart.json&#13;&#10;&#13;&#10;* Requested changes&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: renebohne &lt;rene.bohne@gmail.com&gt;&#13;&#10;&#13;&#10;* Reword &quot;ESP-IDF as Component&quot; (#7812)&#13;&#10;&#13;&#10;I think &quot;Arduino as an ESP-IDF component&quot; or just &quot;As ESP-IDF component&quot; instead of  &quot;ESP-IDF as Component&quot; is more correct way to name the link.&#13;&#10;&#13;&#10;1. &quot;ESP-IDF as Component&quot; would imply that ESP-IDF is some sort of library for Arduino, which is (IMO) misleading, because it's true the other way around.&#13;&#10;2. It's written as &quot;Arduino as an ESP-IDF component&quot; on the webpage it points to as well.&#13;&#10;&#13;&#10;- Also I removed the capitalization from &quot;Component&quot; as I have not found a reason why is it capitalized.&#13;&#10;&#13;&#10;* add new board Adafruit Feather ESP32-S3 Reverse TFT (#7811)&#13;&#10;&#13;&#10;* Multi threading examples (tasks, queues, semaphores, mutexes) (#7660)&#13;&#10;&#13;&#10;* Moved and renamed example ESP32/FreeRTOS to MultiThreading/BasicMultiThreading&#13;&#10;&#13;&#10;* Added dummy files&#13;&#10;&#13;&#10;* Modified original example&#13;&#10;&#13;&#10;* Fixed BasicMultiThreading.ino&#13;&#10;&#13;&#10;* Added Example demonstrating use of queues&#13;&#10;&#13;&#10;* Extended info in BasicMultiThreading&#13;&#10;&#13;&#10;* Renamed Queues to singular Queue&#13;&#10;&#13;&#10;* Added Mutex example&#13;&#10;&#13;&#10;* Added Semaphore example&#13;&#10;&#13;&#10;* Moved info from example to README&#13;&#10;&#13;&#10;* Moved doc from Mutex to README&#13;&#10;&#13;&#10;* Added Queue README&#13;&#10;&#13;&#10;* Removed unecesary text&#13;&#10;&#13;&#10;* Fixed grammar&#13;&#10;&#13;&#10;* Increased stack size for Sempahore example&#13;&#10;&#13;&#10;* Added headers into .ino files&#13;&#10;&#13;&#10;* Added word Example at the end of title in README&#13;&#10;&#13;&#10;* removed unused line&#13;&#10;&#13;&#10;* Added forgotten README&#13;&#10;&#13;&#10;* Modified BasicMultiThreading example&#13;&#10;&#13;&#10;* Added missing S3 entry in README&#13;&#10;&#13;&#10;* moved location&#13;&#10;&#13;&#10;* Update ESP-IDF libs&#13;&#10;&#13;&#10;* Update CMakeLists.txt&#13;&#10;&#13;&#10;* Update esptool to v4.4&#13;&#10;&#13;&#10;* Add function timerAttachInterruptFlag (#7809)&#13;&#10;&#13;&#10;* Update esptool to v4.5&#13;&#10;&#13;&#10;* ADC refactoring (#7827)&#13;&#10;&#13;&#10;* Adc refactored + periman implementation&#13;&#10;&#13;&#10;Peripheral manager still needs to be checked if the implementation is right.&#13;&#10;&#13;&#10;* switched to working solution for milivolts read&#13;&#10;&#13;&#10;* Periman detachbus fix&#13;&#10;&#13;&#10;* coding style&#13;&#10;&#13;&#10;* fix CI warnings&#13;&#10;&#13;&#10;* fix FreeRTOS example&#13;&#10;&#13;&#10;* Update ETH.cpp&#13;&#10;&#13;&#10;* Update FunctionalInterruptStruct.ino&#13;&#10;&#13;&#10;* Update package_esp32_index.template.json&#13;&#10;&#13;&#10;* Update package_esp32_index.template.json&#13;&#10;&#13;&#10;* Fixes for the latest IDF v5.1&#13;&#10;&#13;&#10;* update esp-idf libs and toolchain&#13;&#10;&#13;&#10;* Turn OFF auto crystal frequency for ESP32 (needed by TWAI)&#13;&#10;&#13;&#10;* Update examples&#13;&#10;&#13;&#10;* Switch build to mostly use flags from files&#13;&#10;&#13;&#10;Includes can not be done this way&#13;&#10;&#13;&#10;* Reorganize flag files&#13;&#10;&#13;&#10;* Optimize chip build flags further&#13;&#10;&#13;&#10;* Revert defines from file. MBEDTLS_CONFIG_FILE does not properly expand&#13;&#10;&#13;&#10;* Add support for includes and defines from file&#13;&#10;&#13;&#10;* Replace old sdk path references in platform.txt&#13;&#10;&#13;&#10;* use gcc-ar (#8013)&#13;&#10;&#13;&#10;* Makes F_CPU generic for all SoC (#8007)&#13;&#10;&#13;&#10;Based on CONFIG_ESP_DEFAULT_CPU_FREQ_MHZ that is correctly defined in the sdkconfig file for each SoC.&#13;&#10;&#13;&#10;* TIMER refactoring (#7904)&#13;&#10;&#13;&#10;* refactor using GPtimer&#13;&#10;&#13;&#10;* Updated timer HW test&#13;&#10;&#13;&#10;* fix examples&#13;&#10;&#13;&#10;* Add v2.0.7 in issue template (#7871)&#13;&#10;&#13;&#10;* refactor using GPtimer&#13;&#10;&#13;&#10;* Updated timer HW test&#13;&#10;&#13;&#10;* fix examples&#13;&#10;&#13;&#10;* Revert &quot;Add v2.0.7 in issue template (#7871)&quot;&#13;&#10;&#13;&#10;This reverts commit fcc3b17d62ff57861f8913ca1f142fd5163b7457.&#13;&#10;&#13;&#10;* Update upload-artifact to v3 in HW CI&#13;&#10;&#13;&#10;* Revert &quot;Update upload-artifact to v3 in HW CI&quot;&#13;&#10;&#13;&#10;This reverts commit 1ba228071718ba37c4e26d98db22f77b2a7364a6.&#13;&#10;&#13;&#10;* replace resolution with frequency&#13;&#10;&#13;&#10;* remove count_down option&#13;&#10;&#13;&#10;* countup removed from examples + header&#13;&#10;&#13;&#10;* Refactored timer object&#13;&#10;&#13;&#10;* code cleanup + examples and tests fixes&#13;&#10;&#13;&#10;* TimerAlarm fix&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Vojtěch Bartoška &lt;76958047+VojtechBartoska@users.noreply.github.com&gt;&#13;&#10;&#13;&#10;* [Docs] ADC and Timer API Update (+some docs fixes) (#7906)&#13;&#10;&#13;&#10;* updated docs&#13;&#10;&#13;&#10;* remove hall sensor docs&#13;&#10;&#13;&#10;Removed Hall sensor documentation as its no longer supported in IDF-5&#13;&#10;&#13;&#10;* Fixed ESPNow examples location in docs&#13;&#10;&#13;&#10;* Last timer refactored API + gpio small fix&#13;&#10;&#13;&#10;* AlarmWrite fix&#13;&#10;&#13;&#10;* Fixes APLL/PLL with RTC Frequency (#8025)&#13;&#10;&#13;&#10;log_d() was displaying APLL for any SoC, but S3 and C3 has not such option, causing compilation errors.&#13;&#10;&#13;&#10;* Update IDF libs and fix OPI PSRAM on S3&#13;&#10;&#13;&#10;* Add setMode function HardwareSerial.c to set the esp32 uart mode for use with RS485 auto RTS (#7935)&#13;&#10;&#13;&#10;* Added setMode function to set the esp32 uart mode&#13;&#10;&#13;&#10;Used to set the esp32 uart mode for use with RS485 Half Duplex and the auto RTS pin mode. This will set/clear the RTS pin output to control the RE/DE pin on most RS485 chips.&#13;&#10;&#13;&#10;* Add Success (bool) return in some functions&#13;&#10;&#13;&#10;* Add Success (bool) return code to some functions&#13;&#10;&#13;&#10;* Add Success (bool) return to some functions&#13;&#10;&#13;&#10;* Add Success (bool) return to some functions&#13;&#10;&#13;&#10;* Fix uartSetRxTimeout return type&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Rodrigo Garcia &lt;rodrigo.garcia@espressif.com&gt;&#13;&#10;&#13;&#10;* Add support for esp-elf-gdb&#13;&#10;&#13;&#10;* WFG Crashfix (#8044)&#13;&#10;&#13;&#10;* Update component libs&#13;&#10;&#13;&#10;* IDF release/v5.1 (#8061)&#13;&#10;&#13;&#10;* IDF release/v5.1 bb9200acec&#13;&#10;&#13;&#10;* Update Esp.cpp&#13;&#10;&#13;&#10;* IDF release/v5.1 420ebd208a&#13;&#10;&#13;&#10;* Update esp32-hal-psram.c&#13;&#10;&#13;&#10;* Switch SDK to be an external package&#13;&#10;&#13;&#10;* fix path (#8096)&#13;&#10;&#13;&#10;* Makes UART work at any APB Frequency (#8097)&#13;&#10;&#13;&#10;Fixes HardwareSerial to work with IDF 5.1 on any CPU/APB Frequency (240MHz to 10MHZ), including user created low power modes.&#13;&#10;&#13;&#10;* Add required callbacks for TinyUSB DFU&#13;&#10;&#13;&#10;* Update version to 3.0.0&#13;&#10;&#13;&#10;* Add ESP.getCoreVersion() and update ESP.getChipModel()&#13;&#10;&#13;&#10;* Update timer hal for the latest 5.1&#13;&#10;&#13;&#10;* Use separate RX and TX buffer sizes in HTTP client&#13;&#10;&#13;&#10;optimizes download by allowing up to 4K packets to be received&#13;&#10;&#13;&#10;* Rename clock tree enum name in latest 5.1&#13;&#10;&#13;&#10;* ESP32-H4 support was removed in ESP-IDF v5.1&#13;&#10;&#13;&#10;* IDF release/v5.1 2004bf4e11 (#8165)&#13;&#10;&#13;&#10;* Deinit previous bus first (#8180)&#13;&#10;&#13;&#10;* TIMER - add timer_started flag, fix timerEnd() + timer HW test (#8135)&#13;&#10;&#13;&#10;* Add timer_started flag and stop before disable&#13;&#10;&#13;&#10;* Fix timer HW test&#13;&#10;&#13;&#10;* TOUCH - Peripheral manager implementation (#8129)&#13;&#10;&#13;&#10;* Touch periman implemented&#13;&#10;&#13;&#10;* Deinit previous bus first&#13;&#10;&#13;&#10;* LEDC Refactoring - Peripheral manager implemented (#8126)&#13;&#10;&#13;&#10;* LEDC periman implementation&#13;&#10;&#13;&#10;* Fix examples&#13;&#10;&#13;&#10;* Rework tone&#13;&#10;&#13;&#10;* Update ledc docs&#13;&#10;&#13;&#10;* fix missing bracket&#13;&#10;&#13;&#10;* Update analog funtions esp32-hal.h&#13;&#10;&#13;&#10;* Update CameraWebServer example&#13;&#10;&#13;&#10;* Fix HiFreq_ADC example&#13;&#10;&#13;&#10;* minor fixes - typos&#13;&#10;&#13;&#10;* Avoid calling tone/notone when tone already runs on dif. pin&#13;&#10;&#13;&#10;* Remove unused channels_resolution&#13;&#10;&#13;&#10;* GPIO - Peripheral manager implementation (#8179)&#13;&#10;&#13;&#10;* periman-implementation&#13;&#10;&#13;&#10;* fix RGB_BUILTIN and remove space&#13;&#10;&#13;&#10;* Enforces more consistency into Peripheral Manager (#8188)&#13;&#10;&#13;&#10;* Avoid log_i() message the first time a bus is assigned&#13;&#10;&#13;&#10;* Prevent operation with ESP32_BUS_TYPE_INIT&#13;&#10;&#13;&#10;* keeps coding style&#13;&#10;&#13;&#10;* do not print messages on INIT bus type&#13;&#10;&#13;&#10;* [Arduino Core 3.0.0] RMT IDF5.1 Refactoring (#7994)&#13;&#10;&#13;&#10;* RMT IDF5.1 refactoring&#13;&#10;&#13;&#10;* Fixes initial value setting&#13;&#10;&#13;&#10;* removed rmtRead() with user callback&#13;&#10;&#13;&#10;* simplify/remove Read data structure&#13;&#10;&#13;&#10;* Deep API simplification&#13;&#10;&#13;&#10;* fixes the examples&#13;&#10;&#13;&#10;* fix rmt.h&#13;&#10;&#13;&#10;* adds support to APB different frequencies&#13;&#10;&#13;&#10;* fixes CI and not defined RGB_BUILTIN&#13;&#10;&#13;&#10;* new RMT API and examples&#13;&#10;&#13;&#10;* fixing commentaties&#13;&#10;&#13;&#10;* Update esp32-hal-rgb-led.c&#13;&#10;&#13;&#10;* changes Filter API&#13;&#10;&#13;&#10;* Fixes example with Filter API&#13;&#10;&#13;&#10;* Update PlatformIO scripts for the upcoming 3.0 core (#8183)&#13;&#10;&#13;&#10;* Update PlatformIO scripts for the upcoming 3.0 core&#13;&#10;&#13;&#10;* Dynamically select proper framework-arduinoespressif32-libs package&#13;&#10;&#13;&#10;With this change the dev-platform will be dynamically configured to&#13;&#10;pull the latest .zip package with precompiled libraries from extracted from&#13;&#10;package_esp32_index.template.json&#13;&#10;&#13;&#10;* free memory on detach (#8264)&#13;&#10;&#13;&#10;* SPI - Peripheral manager implementation  (#8255)&#13;&#10;&#13;&#10;* spi periman implementation&#13;&#10;&#13;&#10;* fix header file&#13;&#10;&#13;&#10;* remove unused struct&#13;&#10;&#13;&#10;* fix missing braces&#13;&#10;&#13;&#10;* Update esp32-hal-rmt.c (#8216)&#13;&#10;&#13;&#10;Optimizing Peripheral Manager Test&#13;&#10;&#13;&#10;* I2C - Peripheral manager implementation (#8220)&#13;&#10;&#13;&#10;* i2c-master periman initial commit&#13;&#10;&#13;&#10;* i2c-master make detachbus static + comment remove&#13;&#10;&#13;&#10;* i2c-slave periman implementation&#13;&#10;&#13;&#10;* SetPinBus to INIT on i2cDeinits&#13;&#10;&#13;&#10;* Fix slave pins deinit&#13;&#10;&#13;&#10;* remove dbg logs&#13;&#10;&#13;&#10;* set ret to ESP_FAIL instead of returning&#13;&#10;&#13;&#10;* Fix warnings in hal-spi caused by pariman transition&#13;&#10;&#13;&#10;* Update esptool.py to version 4.6&#13;&#10;&#13;&#10;* Add platform support for ESP_SR&#13;&#10;&#13;&#10;* Add USB Type and valid pin check to periman&#13;&#10;&#13;&#10;* replace bus with spi-&gt;num+1 (#8279)&#13;&#10;&#13;&#10;* Remove default pins from SPI HAL&#13;&#10;&#13;&#10;* Add commented out handlers for esptool.js in TinyUSB CDC&#13;&#10;&#13;&#10;For future use&#13;&#10;&#13;&#10;* Add build defines for host os and fqbn (for debug purposes)&#13;&#10;&#13;&#10;* Provide proper memory caps total size&#13;&#10;&#13;&#10;* Update Esp.cpp&#13;&#10;&#13;&#10;* SDMMC - Peripheral manager implementation (#8289)&#13;&#10;&#13;&#10;* sdmmc periman implemented&#13;&#10;&#13;&#10;* save pins when SOC_SDMMC_USE_IOMUX&#13;&#10;&#13;&#10;* IDF release/v5.1 4bc762621d (#8292)&#13;&#10;&#13;&#10;* Adds missing pinMode (#8312)&#13;&#10;&#13;&#10;* Adds missing pinMode&#13;&#10;&#13;&#10;The example code lacks a pinMode() to initialize the GPIO 0 (button). In Arduino Core 3.0.0, it prints an error message when trying to read a not initialized GPIO.&#13;&#10;&#13;&#10;* Update KeyboardLogout.ino&#13;&#10;&#13;&#10;Adds &lt;buttonPin&gt; to keep code standard&#13;&#10;&#13;&#10;* Update KeyboardReprogram.ino&#13;&#10;&#13;&#10;Adds &lt;buttonPin&gt; to keep code standard&#13;&#10;&#13;&#10;* LEDC Fade implementation (#8338)&#13;&#10;&#13;&#10;* fade API + pointer fixes&#13;&#10;&#13;&#10;* Add fade api&#13;&#10;&#13;&#10;* Add fade example&#13;&#10;&#13;&#10;* update ledc docs&#13;&#10;&#13;&#10;* remove unused variables&#13;&#10;&#13;&#10;* fix path to example&#13;&#10;&#13;&#10;* Adds USB to Peripheral Manager - Arduino Core 3.0.0 (#8335)&#13;&#10;&#13;&#10;* ETHERNET - Peripheral manager implementation (#8297)&#13;&#10;&#13;&#10;* Peripheral manager implemented&#13;&#10;&#13;&#10;* remove unused variable&#13;&#10;&#13;&#10;* Add all RMII pins&#13;&#10;&#13;&#10;* fix typo&#13;&#10;&#13;&#10;* Adds HardwareSerial to Peripheral Manager Arduino 3.0.0 (#8328)&#13;&#10;&#13;&#10;* Do not limit ETHERNET in periman to only ESP32. SPI is also an option&#13;&#10;&#13;&#10;* Initial support for ESP32-C6 (#8337)&#13;&#10;&#13;&#10;* Add checks for SOC defines (#8351)&#13;&#10;&#13;&#10;* Add checks for SOC defines&#13;&#10;&#13;&#10;* Add SoC checks to BLE library&#13;&#10;&#13;&#10;* fix i2c compilation error&#13;&#10;&#13;&#10;* fix wrong placement of include&#13;&#10;&#13;&#10;* add check to SPI library&#13;&#10;&#13;&#10;* add check to USB library&#13;&#10;&#13;&#10;* add checks to Wire library&#13;&#10;&#13;&#10;* Feature/esp32h2 support (#8373)&#13;&#10;&#13;&#10;* Initial support for ESP32H2&#13;&#10;&#13;&#10;* Additional changes for ESP32H2&#13;&#10;&#13;&#10;* Update libs for ESP32H2&#13;&#10;&#13;&#10;* Fix flashing on ESP32-H2&#13;&#10;&#13;&#10;* Fix GPIO Configs for ESP32-C6 and ESP32-H2&#13;&#10;&#13;&#10;* Update Timer test sketch&#13;&#10;&#13;&#10;* Fix upload flash parameters&#13;&#10;&#13;&#10;* Use ets_write_char_uart instead of ets_printf in log_printfv&#13;&#10;&#13;&#10;* Print full chip report when log level is sufficient (#8282)&#13;&#10;&#13;&#10;* ESP32-C3 does not have ets_write_char_uart&#13;&#10;&#13;&#10;* Fix BLE gap event name&#13;&#10;&#13;&#10;* HW Testing - Pytest update (#8389)&#13;&#10;&#13;&#10;* update tests requirements&#13;&#10;&#13;&#10;* remove already handled components&#13;&#10;&#13;&#10;* Update version of pytest&#13;&#10;&#13;&#10;* Add missing ESP32-H2 to hil.yml&#13;&#10;&#13;&#10;* Updated FreeRTOS names (#8418)&#13;&#10;&#13;&#10;* HW Testing -  ESP32-C6 + ESP32-H2 fixes (#8404)&#13;&#10;&#13;&#10;* add C6/H2 to tests cfg.json&#13;&#10;&#13;&#10;* remove ,&#13;&#10;&#13;&#10;* workflow runs-on runner by matrix&#13;&#10;&#13;&#10;* Add need for arduino tag to select runner&#13;&#10;&#13;&#10;* Add cryptography to requirements.txt&#13;&#10;&#13;&#10;* Removed duplicate TX1 define for H2 (#8402)&#13;&#10;&#13;&#10;* Fix broken examples&#13;&#10;&#13;&#10;* Fixes RMT filter &amp; idle timing and setup (#8359)&#13;&#10;&#13;&#10;* Fixes Filter and Idle parameter to uint32&#13;&#10;&#13;&#10;* Fixes Filter and Idle setup&#13;&#10;&#13;&#10;* Fixes it to 5.1Libs branch&#13;&#10;&#13;&#10;* fix RMT CLK source and Filter API&#13;&#10;&#13;&#10;* fixes missing ;&#13;&#10;&#13;&#10;* fixes missing ;&#13;&#10;&#13;&#10;* fixes RMT example&#13;&#10;&#13;&#10;* IDF release/v5.1 a7b62bbcaf (#8438)&#13;&#10;&#13;&#10;* Add workflow to build executables from python scripts (#8290)&#13;&#10;&#13;&#10;* Add workflow to build executables from python scripts&#13;&#10;&#13;&#10;* Push binary to tools&#13;&#10;&#13;&#10;* Enable executable signing on Windows&#13;&#10;&#13;&#10;* Update get.py&#13;&#10;&#13;&#10;* Push binary to tools&#13;&#10;&#13;&#10;* Try with multiple files&#13;&#10;&#13;&#10;* Try more actions&#13;&#10;&#13;&#10;* Try powershell&#13;&#10;&#13;&#10;* Restore tools so they do not get rebuilt&#13;&#10;&#13;&#10;* Finalize scripts&#13;&#10;&#13;&#10;* Push binary to tools&#13;&#10;&#13;&#10;* App rollback should be after PSRAM is initialized&#13;&#10;&#13;&#10;* Correcting RX1 to GPIO4 and TX1 to GPIO5 to be consistent with documentation. Previous pin use works but is inconsistent with C6 docs.&#13;&#10;&#13;&#10;* Fixes Memory Leak (#8486)&#13;&#10;&#13;&#10;* fixes preprocessor test (#8485)&#13;&#10;&#13;&#10;* fixes preprocessor test&#13;&#10;&#13;&#10;When using `#define USE_SOFT_AP` &#13;&#10;Change&#13;&#10;`&amp;&amp; not USE_SOFT_AP` ==&gt; `&amp;&amp; !defined(USE_SOFT_AP)`&#13;&#10;&#13;&#10;* Adds any BLE capable device in WiFiProv.ino&#13;&#10;&#13;&#10;Removing ESP32 restriction for BLE Provisioning.&#13;&#10;&#13;&#10;* fix flash mode read out for C6&#13;&#10;&#13;&#10;* Add option for custom partitions without restrictions&#13;&#10;&#13;&#10;* SD_MMC update (#8298)&#13;&#10;&#13;&#10;* Updated SD_MMC lib and examples&#13;&#10;&#13;&#10;* Removed getter implementation and commented usage in examples&#13;&#10;&#13;&#10;* squashed updates&#13;&#10;&#13;&#10;* IDF release/v5.1 f0437b945f (#8599)&#13;&#10;&#13;&#10;* Update package_esp32_index.template.json&#13;&#10;&#13;&#10;* Fix printf format build error in BTAdvertisedDeviceSet.cpp&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Pedro Minatel &lt;pedro.minatel@espressif.com&gt;&#13;&#10;Co-authored-by: Rodrigo Garcia &lt;rodrigo.garcia@espressif.com&gt;&#13;&#10;Co-authored-by: Ha Thach &lt;thach@tinyusb.org&gt;&#13;&#10;Co-authored-by: Martin Turski &lt;quiret@vfemail.net&gt;&#13;&#10;Co-authored-by: raviypujar &lt;raviypujar@gmail.com&gt;&#13;&#10;Co-authored-by: Jason2866 &lt;24528715+Jason2866@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: Tomáš Pilný &lt;34927466+PilnyTomas@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: Jan Procházka &lt;90197375+P-R-O-C-H-Y@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: Daniel Berlin &lt;dberlin@dberlin.org&gt;&#13;&#10;Co-authored-by: Nima Askari (نیما عسکری) &lt;nimaltd@yahoo.com&gt;&#13;&#10;Co-authored-by: rtpmsys &lt;106180646+rtpmsys@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: bytiful &lt;55647551+bytiful@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: tmfarrington &lt;tmfarrington@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: Krzysiek S &lt;chris.streh@gmail.com&gt;&#13;&#10;Co-authored-by: surt &lt;carl.olsson@gmail.com&gt;&#13;&#10;Co-authored-by: Max Scheffler &lt;max.scheffler@pm.me&gt;&#13;&#10;Co-authored-by: Clemens Kirchgatterer &lt;clemens@1541.org&gt;&#13;&#10;Co-authored-by: Peter Pan's Techland &lt;twinkle-pirate@hotmail.com&gt;&#13;&#10;Co-authored-by: Roman &lt;programmeofficemilkyway@gmail.com&gt;&#13;&#10;Co-authored-by: Eistee &lt;Eistee82@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: David McCurley &lt;44048235+mrengineer7777@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: Gaya3N25 &lt;30388176+Gaya3N25@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: renebohne &lt;rene.bohne@gmail.com&gt;&#13;&#10;Co-authored-by: Olivér Remény &lt;25034625+remenyo@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: davidk88 &lt;david.kotar@gmail.com&gt;&#13;&#10;Co-authored-by: Vojtěch Bartoška &lt;76958047+VojtechBartoska@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: James Armstrong &lt;jamesarmstrong3@me.com&gt;&#13;&#10;Co-authored-by: Valerii Koval &lt;valeros@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: Peter G. Jensen &lt;root@petergjoel.dk&gt;" />
			<int key="additions" value="4" />
			<int key="deletions" value="1" />
			<string key="diff" value='@@ -4,6 +4,8 @@&#10;  *  Created on: Apr 16, 2017&#10;  *      Author: kolban&#10;  */&#10;+#include "soc/soc_caps.h"&#10;+#if SOC_BLE_SUPPORTED&#10; &#10; #include "sdkconfig.h"&#10; #if defined(CONFIG_BLUEDROID_ENABLED)&#10;@@ -439,4 +441,5 @@ void BLEServer::disconnect(uint16_t connId) {&#10; &#9;esp_ble_gatts_close(m_gatts_if, connId);&#10; }&#10; &#10;-#endif // CONFIG_BLUEDROID_ENABLED&#10;+#endif /* CONFIG_BLUEDROID_ENABLED */&#10;+#endif /* SOC_BLE_SUPPORTED */&#10;' />
			<string key="comment_change" value="False" />
		</event>
	</trace>
	<trace>
		<string key="file" value="BLEServer.h" />
	</trace>
	<trace>
		<string key="file" value="ETH.cpp" />
		<event>
			<string key="timestamp" value="2023-02-06T14:29:58+02:00" />
			<string key="author" value="Rodrigo Garcia" />
			<string key="change_type" value="MODIFY" />
			<string key="commit_message" value="Fix commentary (#7800)&#10;&#10;Minor fix based on observation done in https://github.com/espressif/arduino-esp32/issues/7795#issuecomment-1416868611" />
			<int key="additions" value="1" />
			<int key="deletions" value="1" />
			<string key="diff" value='@@ -392,7 +392,7 @@ bool ETHClass::begin(uint8_t phy_addr, int power, int mdc, int mdio, eth_phy_typ&#10;         log_e("esp_eth_init error: %d", err);&#10;     }&#10; #endif&#10;-    // holds a few microseconds to let DHCP start and enter into a good state&#10;+    // holds a few milliseconds to let DHCP start and enter into a good state&#10;     // FIX ME -- adresses issue https://github.com/espressif/arduino-esp32/issues/5733&#10;     delay(50);&#10; &#10;' />
			<string key="comment_change" value="True" />
		</event>
		<event>
			<string key="timestamp" value="2023-10-06T13:47:54+03:00" />
			<string key="author" value="Me No Dev" />
			<string key="change_type" value="MODIFY" />
			<string key="commit_message" value="[ETH] Implement SPI support, multiple interfaces and more (#8712)" />
			<int key="additions" value="750" />
			<int key="deletions" value="424" />
			<string key="diff" value="@@ -20,23 +20,17 @@&#10; &#10; #include &quot;ETH.h&quot;&#10; #include &quot;esp_system.h&quot;&#10;-#if ESP_IDF_VERSION_MAJOR &gt; 3&#10;-    #include &quot;esp_event.h&quot;&#10;-    #include &quot;esp_eth.h&quot;&#10;-    #include &quot;esp_eth_mac.h&quot;&#10;-    #include &quot;esp_eth_com.h&quot;&#10;-#if CONFIG_IDF_TARGET_ESP32&#10;-    #include &quot;soc/emac_ext_struct.h&quot;&#10;-    #include &quot;soc/rtc.h&quot;&#10;-    //#include &quot;soc/io_mux_reg.h&quot;&#10;-    //#include &quot;hal/gpio_hal.h&quot;&#10;-#endif&#10;-    #include &quot;esp32-hal-periman.h&quot;&#10;-#else&#10;-    #include &quot;eth_phy/phy.h&quot;&#10;-    #include &quot;eth_phy/phy_tlk110.h&quot;&#10;-    #include &quot;eth_phy/phy_lan8720.h&quot;&#10;-#endif&#10;+#include &quot;esp_event.h&quot;&#10;+#include &quot;esp_eth.h&quot;&#10;+#include &quot;esp_eth_mac.h&quot;&#10;+#include &quot;esp_eth_com.h&quot;&#10;+#include &quot;driver/gpio.h&quot;&#10;+#include &quot;driver/spi_master.h&quot;&#10;+#if CONFIG_ETH_USE_ESP32_EMAC&#10;+#include &quot;soc/emac_ext_struct.h&quot;&#10;+#include &quot;soc/rtc.h&quot;&#10;+#endif /* CONFIG_ETH_USE_ESP32_EMAC */&#10;+#include &quot;esp32-hal-periman.h&quot;&#10; #include &quot;lwip/err.h&quot;&#10; #include &quot;lwip/dns.h&quot;&#10; #include &quot;esp_mac.h&quot;&#10;@@ -48,336 +42,167 @@&#10; extern void tcpipInit();&#10; extern void add_esp_interface_netif(esp_interface_t interface, esp_netif_t* esp_netif); /* from WiFiGeneric */&#10; &#10;-#if ESP_IDF_VERSION_MAJOR &gt; 3&#10;-&#10;-/**&#10;-* @brief Callback function invoked when lowlevel initialization is finished&#10;-*&#10;-* @param[in] eth_handle: handle of Ethernet driver&#10;-*&#10;-* @return&#10;-*       - ESP_OK: process extra lowlevel initialization successfully&#10;-*       - ESP_FAIL: error occurred when processing extra lowlevel initialization&#10;-*/&#10;-&#10;-static eth_clock_mode_t eth_clock_mode = ETH_CLK_MODE;&#10;-&#10;-#if CONFIG_ETH_RMII_CLK_INPUT&#10;-/*&#10;-static void emac_config_apll_clock(void)&#10;-{&#10;-    // apll_freq = xtal_freq * (4 + sdm2 + sdm1/256 + sdm0/65536)/((o_div + 2) * 2)&#10;-    rtc_xtal_freq_t rtc_xtal_freq = rtc_clk_xtal_freq_get();&#10;-    switch (rtc_xtal_freq) {&#10;-    case RTC_XTAL_FREQ_40M: // Recommended&#10;-        // 50 MHz = 40MHz * (4 + 6) / (2 * (2 + 2) = 50.000&#10;-        // sdm0 = 0, sdm1 = 0, sdm2 = 6, o_div = 2&#10;-        rtc_clk_apll_enable(true, 0, 0, 6, 2);&#10;-        break;&#10;-    case RTC_XTAL_FREQ_26M:&#10;-        // 50 MHz = 26MHz * (4 + 15 + 118 / 256 + 39/65536) / ((3 + 2) * 2) = 49.999992&#10;-        // sdm0 = 39, sdm1 = 118, sdm2 = 15, o_div = 3&#10;-        rtc_clk_apll_enable(true, 39, 118, 15, 3);&#10;-        break;&#10;-    case RTC_XTAL_FREQ_24M:&#10;-        // 50 MHz = 24MHz * (4 + 12 + 255 / 256 + 255/65536) / ((2 + 2) * 2) = 49.499977&#10;-        // sdm0 = 255, sdm1 = 255, sdm2 = 12, o_div = 2&#10;-        rtc_clk_apll_enable(true, 255, 255, 12, 2);&#10;-        break;&#10;-    default: // Assume we have a 40M xtal&#10;-        rtc_clk_apll_enable(true, 0, 0, 6, 2);&#10;-        break;&#10;-    }&#10;-}&#10;-*/&#10;-#endif&#10;-&#10;-/*&#10;-static esp_err_t on_lowlevel_init_done(esp_eth_handle_t eth_handle){&#10;-#if CONFIG_IDF_TARGET_ESP32&#10;-    if(eth_clock_mode &gt; ETH_CLOCK_GPIO17_OUT){&#10;-        return ESP_FAIL;&#10;-    }&#10;-    // First deinit current config if different&#10;-#if CONFIG_ETH_RMII_CLK_INPUT&#10;-    if(eth_clock_mode != ETH_CLOCK_GPIO0_IN &amp;&amp; eth_clock_mode != ETH_CLOCK_GPIO0_OUT){&#10;-        pinMode(0, INPUT);&#10;-    }&#10;-#endif&#10;-&#10;-#if CONFIG_ETH_RMII_CLK_OUTPUT&#10;-#if CONFIG_ETH_RMII_CLK_OUTPUT_GPIO0&#10;-    if(eth_clock_mode &gt; ETH_CLOCK_GPIO0_OUT){&#10;-        pinMode(0, INPUT);&#10;-    }&#10;-#elif CONFIG_ETH_RMII_CLK_OUT_GPIO == 16&#10;-    if(eth_clock_mode != ETH_CLOCK_GPIO16_OUT){&#10;-        pinMode(16, INPUT);&#10;-    }&#10;-#elif CONFIG_ETH_RMII_CLK_OUT_GPIO == 17&#10;-    if(eth_clock_mode != ETH_CLOCK_GPIO17_OUT){&#10;-        pinMode(17, INPUT);&#10;-    }&#10;-#endif&#10;-#endif&#10;-&#10;-    // Setup interface for the correct pin&#10;-#if CONFIG_ETH_PHY_INTERFACE_MII&#10;-    EMAC_EXT.ex_phyinf_conf.phy_intf_sel = 4;&#10;-#endif&#10; &#10;-    if(eth_clock_mode == ETH_CLOCK_GPIO0_IN){&#10;-#ifndef CONFIG_ETH_RMII_CLK_INPUT&#10;-        // RMII clock (50MHz) input to GPIO0&#10;-        //gpio_hal_iomux_func_sel(PERIPHS_IO_MUX_GPIO0_U, FUNC_GPIO0_EMAC_TX_CLK);&#10;-        //PIN_INPUT_ENABLE(GPIO_PIN_MUX_REG[0]);&#10;-        pinMode(0, INPUT);&#10;-        PIN_FUNC_SELECT(GPIO_PIN_MUX_REG[0], 5);&#10;-        EMAC_EXT.ex_clk_ctrl.ext_en = 1;&#10;-        EMAC_EXT.ex_clk_ctrl.int_en = 0;&#10;-        EMAC_EXT.ex_oscclk_conf.clk_sel = 1;&#10;+ETHClass::ETHClass(uint8_t eth_index)&#10;+    :_eth_started(false)&#10;+    ,_eth_handle(NULL)&#10;+    ,_esp_netif(NULL)&#10;+    ,_eth_index(eth_index)&#10;+    ,_phy_type(ETH_PHY_MAX)&#10;+#if ETH_SPI_SUPPORTS_CUSTOM&#10;+    ,_spi(NULL)&#10; #endif&#10;-    } else {&#10;-        if(eth_clock_mode == ETH_CLOCK_GPIO0_OUT){&#10;-#ifndef CONFIG_ETH_RMII_CLK_OUTPUT_GPIO0&#10;-            // APLL clock output to GPIO0 (must be configured to 50MHz!)&#10;-            //gpio_hal_iomux_func_sel(PERIPHS_IO_MUX_GPIO0_U, FUNC_GPIO0_CLK_OUT1);&#10;-            //PIN_INPUT_DISABLE(GPIO_PIN_MUX_REG[0]);&#10;-            pinMode(0, OUTPUT);&#10;-            PIN_FUNC_SELECT(GPIO_PIN_MUX_REG[0], 1);&#10;-            // Choose the APLL clock to output on GPIO&#10;-            REG_WRITE(PIN_CTRL, 6);&#10;-#endif&#10;-        } else if(eth_clock_mode == ETH_CLOCK_GPIO16_OUT){&#10;-#if CONFIG_ETH_RMII_CLK_OUT_GPIO != 16&#10;-            // RMII CLK (50MHz) output to GPIO16&#10;-            //gpio_hal_iomux_func_sel(PERIPHS_IO_MUX_GPIO16_U, FUNC_GPIO16_EMAC_CLK_OUT);&#10;-            //PIN_INPUT_DISABLE(GPIO_PIN_MUX_REG[16]);&#10;-            pinMode(16, OUTPUT);&#10;-            PIN_FUNC_SELECT(GPIO_PIN_MUX_REG[16], 5);&#10;-#endif&#10;-        } else if(eth_clock_mode == ETH_CLOCK_GPIO17_OUT){&#10;-#if CONFIG_ETH_RMII_CLK_OUT_GPIO != 17&#10;-            // RMII CLK (50MHz) output to GPIO17&#10;-            //gpio_hal_iomux_func_sel(PERIPHS_IO_MUX_GPIO17_U, FUNC_GPIO17_EMAC_CLK_OUT_180);&#10;-            //PIN_INPUT_DISABLE(GPIO_PIN_MUX_REG[17]);&#10;-            pinMode(17, OUTPUT);&#10;-            PIN_FUNC_SELECT(GPIO_PIN_MUX_REG[17], 5);&#10;-#endif&#10;-        }&#10;-#if CONFIG_ETH_RMII_CLK_INPUT&#10;-        EMAC_EXT.ex_clk_ctrl.ext_en = 0;&#10;-        EMAC_EXT.ex_clk_ctrl.int_en = 1;&#10;-        EMAC_EXT.ex_oscclk_conf.clk_sel = 0;&#10;-        emac_config_apll_clock();&#10;-        EMAC_EXT.ex_clkout_conf.div_num = 0;&#10;-        EMAC_EXT.ex_clkout_conf.h_div_num = 0;&#10;-#endif&#10;-    }&#10;-#endif&#10;-    return ESP_OK;&#10;-}&#10;-*/&#10;-&#10;-&#10;-/**&#10;-* @brief Callback function invoked when lowlevel deinitialization is finished&#10;-*&#10;-* @param[in] eth_handle: handle of Ethernet driver&#10;-*&#10;-* @return&#10;-*       - ESP_OK: process extra lowlevel deinitialization successfully&#10;-*       - ESP_FAIL: error occurred when processing extra lowlevel deinitialization&#10;-*/&#10;-//static esp_err_t on_lowlevel_deinit_done(esp_eth_handle_t eth_handle){&#10;-//    return ESP_OK;&#10;-//}&#10;-&#10;-&#10;-&#10;-#else&#10;-static int _eth_phy_mdc_pin = -1;&#10;-static int _eth_phy_mdio_pin = -1;&#10;-static int _eth_phy_power_pin = -1;&#10;-static eth_phy_power_enable_func _eth_phy_power_enable_orig = NULL;&#10;-&#10;-static void _eth_phy_config_gpio(void)&#10;-{&#10;-    if(_eth_phy_mdc_pin &lt; 0 || _eth_phy_mdio_pin &lt; 0){&#10;-        log_e(&quot;MDC and MDIO pins are not configured!&quot;);&#10;-        return;&#10;-    }&#10;-    phy_rmii_configure_data_interface_pins();&#10;-    phy_rmii_smi_configure_pins(_eth_phy_mdc_pin, _eth_phy_mdio_pin);&#10;-}&#10;-&#10;-static void _eth_phy_power_enable(bool enable)&#10;-{&#10;-    pinMode(_eth_phy_power_pin, OUTPUT);&#10;-    digitalWrite(_eth_phy_power_pin, enable);&#10;-    delay(1);&#10;-}&#10;-#endif&#10;-&#10;-ETHClass::ETHClass()&#10;-    :initialized(false)&#10;-    ,staticIP(false)&#10;-#if ESP_IDF_VERSION_MAJOR &gt; 3&#10;-     ,eth_handle(NULL)&#10;-#endif&#10;-     ,_started(false)&#10;-{&#10;-}&#10;+    ,_spi_freq_mhz(20)&#10;+    ,_pin_cs(-1)&#10;+    ,_pin_irq(-1)&#10;+    ,_pin_rst(-1)&#10;+    ,_pin_sck(-1)&#10;+    ,_pin_miso(-1)&#10;+    ,_pin_mosi(-1)&#10;+#if CONFIG_ETH_USE_ESP32_EMAC&#10;+    ,_pin_mcd(-1)&#10;+    ,_pin_mdio(-1)&#10;+    ,_pin_power(-1)&#10;+    ,_pin_rmii_clock(-1)&#10;+#endif /* CONFIG_ETH_USE_ESP32_EMAC */&#10;+{}&#10; &#10; ETHClass::~ETHClass()&#10; {}&#10; &#10; bool ETHClass::ethDetachBus(void * bus_pointer){&#10;     ETHClass *bus = (ETHClass *) bus_pointer;&#10;-    if(bus-&gt;_started) {&#10;+    if(bus-&gt;_eth_started){&#10;         bus-&gt;end();&#10;     }&#10;     return true;&#10; }&#10; &#10;-bool ETHClass::begin(uint8_t phy_addr, int power, int mdc, int mdio, eth_phy_type_t type, eth_clock_mode_t clock_mode, bool use_mac_from_efuse)&#10;+#if CONFIG_ETH_USE_ESP32_EMAC&#10;+bool ETHClass::begin(eth_phy_type_t type, uint8_t phy_addr, int mdc, int mdio, int power, eth_clock_mode_t clock_mode)&#10; {&#10;-#if ESP_IDF_VERSION_MAJOR &gt; 3&#10;-    if(esp_netif != NULL){&#10;+    esp_err_t ret = ESP_OK;&#10;+    if(_esp_netif != NULL){&#10;         return true;&#10;     }&#10;     perimanSetBusDeinit(ESP32_BUS_TYPE_ETHERNET, ETHClass::ethDetachBus);&#10; &#10;-    eth_clock_mode = clock_mode;&#10;     tcpipInit();&#10; &#10;-    if (use_mac_from_efuse)&#10;-    {&#10;-        uint8_t p[6] = { 0x00,0x00,0x00,0x00,0x00,0x00 };&#10;-        esp_efuse_mac_get_custom(p);&#10;-        esp_base_mac_addr_set(p);&#10;-    }&#10;+    eth_esp32_emac_config_t mac_config = ETH_ESP32_EMAC_DEFAULT_CONFIG();&#10;+    mac_config.clock_config.rmii.clock_mode = (clock_mode) ? EMAC_CLK_OUT : EMAC_CLK_EXT_IN;&#10;+    mac_config.clock_config.rmii.clock_gpio = (1 == clock_mode) ? EMAC_APPL_CLK_OUT_GPIO : (2 == clock_mode) ? EMAC_CLK_OUT_GPIO : (3 == clock_mode) ? EMAC_CLK_OUT_180_GPIO : EMAC_CLK_IN_GPIO;&#10;+    mac_config.smi_mdc_gpio_num = mdc;&#10;+    mac_config.smi_mdio_gpio_num = mdio;&#10; &#10;-    //tcpip_adapter_set_default_eth_handlers();&#10;-    &#10;-    esp_netif_config_t cfg = ESP_NETIF_DEFAULT_ETH();&#10;-    esp_netif = esp_netif_new(&amp;cfg);&#10;+    _pin_mcd = mdc;&#10;+    _pin_mdio = mdio;&#10;+    _pin_rmii_clock = mac_config.clock_config.rmii.clock_gpio;&#10;+    _pin_power = power;&#10; &#10;-    esp_eth_mac_t *eth_mac = NULL;&#10;-#if CONFIG_ETH_SPI_ETHERNET_DM9051&#10;-    if(type == ETH_PHY_DM9051){&#10;-        return false;//todo&#10;-    } else {&#10;-#endif&#10;-#if CONFIG_ETH_USE_ESP32_EMAC&#10;-        eth_esp32_emac_config_t mac_config = ETH_ESP32_EMAC_DEFAULT_CONFIG();&#10;-        mac_config.clock_config.rmii.clock_mode = (eth_clock_mode) ? EMAC_CLK_OUT : EMAC_CLK_EXT_IN;&#10;-        mac_config.clock_config.rmii.clock_gpio = (1 == eth_clock_mode) ? EMAC_APPL_CLK_OUT_GPIO : (2 == eth_clock_mode) ? EMAC_CLK_OUT_GPIO : (3 == eth_clock_mode) ? EMAC_CLK_OUT_180_GPIO : EMAC_CLK_IN_GPIO;&#10;-        mac_config.smi_mdc_gpio_num = mdc;&#10;-        mac_config.smi_mdio_gpio_num = mdio;&#10;-&#10;-        _pin_mcd = mdc;&#10;-        _pin_mdio = mdio;&#10;-        _pin_rmii_clock = mac_config.clock_config.rmii.clock_gpio;&#10;-&#10;-        if(!perimanSetPinBus(_pin_rmii_clock, ESP32_BUS_TYPE_INIT, NULL)){ return false; }&#10;-        if(!perimanSetPinBus(_pin_mcd, ESP32_BUS_TYPE_INIT, NULL)){ return false; }&#10;-        if(!perimanSetPinBus(_pin_mdio,  ESP32_BUS_TYPE_INIT, NULL)){ return false; }&#10;-&#10;-        eth_mac_config_t eth_mac_config = ETH_MAC_DEFAULT_CONFIG();&#10;-        eth_mac_config.sw_reset_timeout_ms = 1000;&#10;-&#10;-        eth_mac = esp_eth_mac_new_esp32(&amp;mac_config, &amp;eth_mac_config);&#10;-&#10;-        if(!perimanSetPinBus(ETH_RMII_TX_EN, ESP32_BUS_TYPE_INIT, NULL)){ return false; }&#10;-        if(!perimanSetPinBus(ETH_RMII_TX0, ESP32_BUS_TYPE_INIT, NULL)){ return false; }&#10;-        if(!perimanSetPinBus(ETH_RMII_TX1, ESP32_BUS_TYPE_INIT, NULL)){ return false; }&#10;-        if(!perimanSetPinBus(ETH_RMII_RX0, ESP32_BUS_TYPE_INIT, NULL)){ return false; }&#10;-        if(!perimanSetPinBus(ETH_RMII_RX1_EN, ESP32_BUS_TYPE_INIT, NULL)){ return false; }&#10;-        if(!perimanSetPinBus(ETH_RMII_CRS_DV, ESP32_BUS_TYPE_INIT, NULL)){ return false; }&#10;-#endif&#10;-#if CONFIG_ETH_SPI_ETHERNET_DM9051&#10;+    if(!perimanSetPinBus(_pin_rmii_clock, ESP32_BUS_TYPE_INIT, NULL)){ return false; }&#10;+    if(!perimanSetPinBus(_pin_mcd, ESP32_BUS_TYPE_INIT, NULL)){ return false; }&#10;+    if(!perimanSetPinBus(_pin_mdio,  ESP32_BUS_TYPE_INIT, NULL)){ return false; }&#10;+    if(!perimanSetPinBus(ETH_RMII_TX_EN, ESP32_BUS_TYPE_INIT, NULL)){ return false; }&#10;+    if(!perimanSetPinBus(ETH_RMII_TX0, ESP32_BUS_TYPE_INIT, NULL)){ return false; }&#10;+    if(!perimanSetPinBus(ETH_RMII_TX1, ESP32_BUS_TYPE_INIT, NULL)){ return false; }&#10;+    if(!perimanSetPinBus(ETH_RMII_RX0, ESP32_BUS_TYPE_INIT, NULL)){ return false; }&#10;+    if(!perimanSetPinBus(ETH_RMII_RX1_EN, ESP32_BUS_TYPE_INIT, NULL)){ return false; }&#10;+    if(!perimanSetPinBus(ETH_RMII_CRS_DV, ESP32_BUS_TYPE_INIT, NULL)){ return false; }&#10;+    if(_pin_power != -1){&#10;+        if(!perimanSetPinBus(_pin_power,  ESP32_BUS_TYPE_INIT, NULL)){ return false; }&#10;     }&#10;-#endif&#10; &#10;-    if(eth_mac == NULL){&#10;+    eth_mac_config_t eth_mac_config = ETH_MAC_DEFAULT_CONFIG();&#10;+    eth_mac_config.sw_reset_timeout_ms = 1000;&#10;+&#10;+    esp_eth_mac_t * mac = esp_eth_mac_new_esp32(&amp;mac_config, &amp;eth_mac_config);&#10;+    if(mac == NULL){&#10;         log_e(&quot;esp_eth_mac_new_esp32 failed&quot;);&#10;         return false;&#10;     }&#10; &#10;-    _pin_power = power;&#10;-    if(_pin_power != -1){&#10;-        if(!perimanSetPinBus(_pin_power,  ESP32_BUS_TYPE_INIT, NULL)){ return false; }&#10;-    }&#10;-&#10;     eth_phy_config_t phy_config = ETH_PHY_DEFAULT_CONFIG();&#10;     phy_config.phy_addr = phy_addr;&#10;     phy_config.reset_gpio_num = power;&#10; &#10;-    esp_eth_phy_t *eth_phy = NULL;&#10;+    esp_eth_phy_t *phy = NULL;&#10;     switch(type){&#10;         case ETH_PHY_LAN8720:&#10;-            eth_phy = esp_eth_phy_new_lan87xx(&amp;phy_config);&#10;+            phy = esp_eth_phy_new_lan87xx(&amp;phy_config);&#10;             break;&#10;         case ETH_PHY_TLK110:&#10;-            eth_phy = esp_eth_phy_new_ip101(&amp;phy_config);&#10;+            phy = esp_eth_phy_new_ip101(&amp;phy_config);&#10;             break;&#10;         case ETH_PHY_RTL8201:&#10;-            eth_phy = esp_eth_phy_new_rtl8201(&amp;phy_config);&#10;+            phy = esp_eth_phy_new_rtl8201(&amp;phy_config);&#10;             break;&#10;         case ETH_PHY_DP83848:&#10;-            eth_phy = esp_eth_phy_new_dp83848(&amp;phy_config);&#10;-            break;&#10;-#if CONFIG_ETH_SPI_ETHERNET_DM9051&#10;-        case ETH_PHY_DM9051:&#10;-            eth_phy = esp_eth_phy_new_dm9051(&amp;phy_config);&#10;+            phy = esp_eth_phy_new_dp83848(&amp;phy_config);&#10;             break;&#10;-#endif&#10;         case ETH_PHY_KSZ8041:&#10;-#if ESP_IDF_VERSION &gt;= ESP_IDF_VERSION_VAL(4,4,0)&#10;-            eth_phy = esp_eth_phy_new_ksz80xx(&amp;phy_config);&#10;-#else&#10;-            log_e(&quot;unsupported ethernet type 'ETH_PHY_KSZ8041'&quot;);&#10;-#endif&#10;+            phy = esp_eth_phy_new_ksz80xx(&amp;phy_config);&#10;             break;&#10;         case ETH_PHY_KSZ8081:&#10;-#if ESP_IDF_VERSION &gt;= ESP_IDF_VERSION_VAL(4,4,0)&#10;-            eth_phy = esp_eth_phy_new_ksz80xx(&amp;phy_config);&#10;-#else&#10;-            log_e(&quot;unsupported ethernet type 'ETH_PHY_KSZ8081'&quot;);&#10;-#endif&#10;+            phy = esp_eth_phy_new_ksz80xx(&amp;phy_config);&#10;             break;&#10;         default:&#10;+            log_e(&quot;Unsupported PHY %d&quot;, type);&#10;             break;&#10;     }&#10;-    if(eth_phy == NULL){&#10;+    if(phy == NULL){&#10;         log_e(&quot;esp_eth_phy_new failed&quot;);&#10;         return false;&#10;     }&#10; &#10;-    eth_handle = NULL;&#10;-    esp_eth_config_t eth_config = ETH_DEFAULT_CONFIG(eth_mac, eth_phy);&#10;-    //eth_config.on_lowlevel_init_done = on_lowlevel_init_done;&#10;-    //eth_config.on_lowlevel_deinit_done = on_lowlevel_deinit_done;&#10;-    if(esp_eth_driver_install(&amp;eth_config, &amp;eth_handle) != ESP_OK || eth_handle == NULL){&#10;-        log_e(&quot;esp_eth_driver_install failed&quot;);&#10;+    _eth_handle = NULL;&#10;+    esp_eth_config_t eth_config = ETH_DEFAULT_CONFIG(mac, phy);&#10;+    ret = esp_eth_driver_install(&amp;eth_config, &amp;_eth_handle);&#10;+    if(ret != ESP_OK){&#10;+        log_e(&quot;SPI Ethernet driver install failed: %d&quot;, ret);&#10;+        return false;&#10;+    }&#10;+    if(_eth_handle == NULL){&#10;+        log_e(&quot;esp_eth_driver_install failed! eth_handle is NULL&quot;);&#10;         return false;&#10;     }&#10;     &#10;+    esp_netif_config_t cfg = ESP_NETIF_DEFAULT_ETH();&#10;+&#10;+    // Use ESP_NETIF_INHERENT_DEFAULT_ETH when multiple Ethernet interfaces are used and so you need to modify&#10;+    // esp-netif configuration parameters for each interface (name, priority, etc.).&#10;+    char if_key_str[10];&#10;+    char if_desc_str[10];&#10;+    char num_str[3];&#10;+    itoa(_eth_index, num_str, 10);&#10;+    strcat(strcpy(if_key_str, &quot;ETH_&quot;), num_str);&#10;+    strcat(strcpy(if_desc_str, &quot;eth&quot;), num_str);&#10;+&#10;+    esp_netif_inherent_config_t esp_netif_config = ESP_NETIF_INHERENT_DEFAULT_ETH();&#10;+    esp_netif_config.if_key = if_key_str;&#10;+    esp_netif_config.if_desc = if_desc_str;&#10;+    esp_netif_config.route_prio -= _eth_index*5;&#10;+&#10;+    cfg.base = &amp;esp_netif_config;&#10;+&#10;+    _esp_netif = esp_netif_new(&amp;cfg);&#10;+&#10;     /* attach Ethernet driver to TCP/IP stack */&#10;-    if(esp_netif_attach(esp_netif, esp_eth_new_netif_glue(eth_handle)) != ESP_OK){&#10;-        log_e(&quot;esp_netif_attach failed&quot;);&#10;+    ret = esp_netif_attach(_esp_netif, esp_eth_new_netif_glue(_eth_handle));&#10;+    if(ret != ESP_OK){&#10;+        log_e(&quot;esp_netif_attach failed: %d&quot;, ret);&#10;         return false;&#10;     }&#10; &#10;     /* attach to WiFiGeneric to receive events */&#10;-    add_esp_interface_netif(ESP_IF_ETH, esp_netif);&#10;+    add_esp_interface_netif(ESP_IF_ETH, _esp_netif);&#10; &#10;-    if(esp_eth_start(eth_handle) != ESP_OK){&#10;-        log_e(&quot;esp_eth_start failed&quot;);&#10;+    ret = esp_eth_start(_eth_handle);&#10;+    if(ret != ESP_OK){&#10;+        log_e(&quot;esp_eth_start failed: %d&quot;, ret);&#10;         return false;&#10;     }&#10;-    _started = true;&#10;+    _eth_started = true;&#10; &#10;     if(!perimanSetPinBus(_pin_rmii_clock, ESP32_BUS_TYPE_ETHERNET, (void *)(this))){ goto err; }&#10;     if(!perimanSetPinBus(_pin_mcd, ESP32_BUS_TYPE_ETHERNET, (void *)(this))){ goto err; }&#10;@@ -393,70 +218,378 @@ bool ETHClass::begin(uint8_t phy_addr, int power, int mdc, int mdio, eth_phy_typ&#10;     if(_pin_power != -1){&#10;         if(!perimanSetPinBus(_pin_power,  ESP32_BUS_TYPE_ETHERNET, (void *)(this))){ goto err; }&#10;     }&#10;-#else&#10;-    esp_err_t err;&#10;-    if(initialized){&#10;-        err = esp_eth_enable();&#10;-        if(err){&#10;-            log_e(&quot;esp_eth_enable error: %d&quot;, err);&#10;-            return false;&#10;+    // holds a few milliseconds to let DHCP start and enter into a good state&#10;+    // FIX ME -- adresses issue https://github.com/espressif/arduino-esp32/issues/5733&#10;+    delay(50);&#10;+&#10;+    return true;&#10;+&#10;+err:&#10;+    log_e(&quot;Failed to set all pins bus to ETHERNET&quot;);&#10;+    ETHClass::ethDetachBus((void *)(this));&#10;+    return false;&#10;+}&#10;+#endif /* CONFIG_ETH_USE_ESP32_EMAC */&#10;+&#10;+#if ETH_SPI_SUPPORTS_CUSTOM&#10;+static void *_eth_spi_init(const void *ctx){&#10;+    return (void*)ctx;&#10;+}&#10;+&#10;+static esp_err_t _eth_spi_deinit(void *ctx){&#10;+    return ESP_OK;&#10;+}&#10;+&#10;+esp_err_t ETHClass::_eth_spi_read(void *ctx, uint32_t cmd, uint32_t addr, void *data, uint32_t data_len){&#10;+    return ((ETHClass*)ctx)-&gt;eth_spi_read(cmd, addr, data, data_len);&#10;+}&#10;+&#10;+esp_err_t ETHClass::_eth_spi_write(void *ctx, uint32_t cmd, uint32_t addr, const void *data, uint32_t data_len){&#10;+    return ((ETHClass*)ctx)-&gt;eth_spi_write(cmd, addr, data, data_len);&#10;+}&#10;+&#10;+esp_err_t ETHClass::eth_spi_read(uint32_t cmd, uint32_t addr, void *data, uint32_t data_len){&#10;+    if(_spi == NULL){&#10;+        return ESP_FAIL;&#10;+    }&#10;+    // log_i(&quot; 0x%04lx 0x%04lx %lu&quot;, cmd, addr, data_len);&#10;+    _spi-&gt;beginTransaction(SPISettings(_spi_freq_mhz * 1000 * 1000, MSBFIRST, SPI_MODE0));&#10;+    digitalWrite(_pin_cs, LOW);&#10;+&#10;+#if CONFIG_ETH_SPI_ETHERNET_DM9051&#10;+    if(_phy_type == ETH_PHY_DM9051){&#10;+        _spi-&gt;write(((cmd &amp; 0x01) &lt;&lt; 7) | (addr &amp; 0x7F));&#10;+    } else&#10;+#endif&#10;+#if CONFIG_ETH_SPI_ETHERNET_W5500&#10;+    if(_phy_type == ETH_PHY_W5500){&#10;+        _spi-&gt;write16(cmd);&#10;+        _spi-&gt;write(addr);&#10;+    } else&#10;+#endif&#10;+#if CONFIG_ETH_SPI_ETHERNET_KSZ8851SNL&#10;+    if(_phy_type == ETH_PHY_KSZ8851){&#10;+        if(cmd &gt; 1){&#10;+            _spi-&gt;write(cmd &lt;&lt; 6 | addr);&#10;+        } else {&#10;+            _spi-&gt;write16(cmd &lt;&lt; 14 | addr);&#10;+        }&#10;+    } else&#10;+#endif&#10;+    {&#10;+        log_e(&quot;Unsupported PHY module: %d&quot;, _phy_type);&#10;+        digitalWrite(_pin_cs, HIGH);&#10;+        _spi-&gt;endTransaction();&#10;+        return ESP_FAIL;&#10;+    }&#10;+    _spi-&gt;transferBytes(NULL, (uint8_t *)data, data_len);&#10;+&#10;+    digitalWrite(_pin_cs, HIGH);&#10;+    _spi-&gt;endTransaction();&#10;+    return ESP_OK;&#10;+}&#10;+&#10;+esp_err_t ETHClass::eth_spi_write(uint32_t cmd, uint32_t addr, const void *data, uint32_t data_len){&#10;+    if(_spi == NULL){&#10;+        return ESP_FAIL;&#10;+    }&#10;+    // log_i(&quot;0x%04lx 0x%04lx %lu&quot;, cmd, addr, data_len);&#10;+    _spi-&gt;beginTransaction(SPISettings(_spi_freq_mhz * 1000 * 1000, MSBFIRST, SPI_MODE0));&#10;+    digitalWrite(_pin_cs, LOW);&#10;+&#10;+#if CONFIG_ETH_SPI_ETHERNET_DM9051&#10;+    if(_phy_type == ETH_PHY_DM9051){&#10;+        _spi-&gt;write(((cmd &amp; 0x01) &lt;&lt; 7) | (addr &amp; 0x7F));&#10;+    } else&#10;+#endif&#10;+#if CONFIG_ETH_SPI_ETHERNET_W5500&#10;+    if(_phy_type == ETH_PHY_W5500){&#10;+        _spi-&gt;write16(cmd);&#10;+        _spi-&gt;write(addr);&#10;+    } else&#10;+#endif&#10;+#if CONFIG_ETH_SPI_ETHERNET_KSZ8851SNL&#10;+    if(_phy_type == ETH_PHY_KSZ8851){&#10;+        if(cmd &gt; 1){&#10;+            _spi-&gt;write(cmd &lt;&lt; 6 | addr);&#10;+        } else {&#10;+            _spi-&gt;write16(cmd &lt;&lt; 14 | addr);&#10;         }&#10;-        _started = true;&#10;+    } else&#10;+#endif&#10;+    {&#10;+        log_e(&quot;Unsupported PHY module: %d&quot;, _phy_type);&#10;+        digitalWrite(_pin_cs, HIGH);&#10;+        _spi-&gt;endTransaction();&#10;+        return ESP_FAIL;&#10;+    }&#10;+    _spi-&gt;writeBytes((const uint8_t *)data, data_len);&#10;+&#10;+    digitalWrite(_pin_cs, HIGH);&#10;+    _spi-&gt;endTransaction();&#10;+    return ESP_OK;&#10;+}&#10;+#endif&#10;+&#10;+bool ETHClass::beginSPI(eth_phy_type_t type, uint8_t phy_addr, int cs, int irq, int rst, &#10;+#if ETH_SPI_SUPPORTS_CUSTOM&#10;+    SPIClass *spi, &#10;+#endif&#10;+    int sck, int miso, int mosi, spi_host_device_t spi_host, uint8_t spi_freq_mhz){&#10;+    esp_err_t ret = ESP_OK;&#10;+&#10;+    if(_eth_started || _esp_netif != NULL || _eth_handle != NULL){&#10;+        log_w(&quot;ETH Already Started&quot;);&#10;         return true;&#10;     }&#10;-    _eth_phy_mdc_pin = mdc;&#10;-    _eth_phy_mdio_pin = mdio;&#10;-    _eth_phy_power_pin = power;&#10;-&#10;-    if(type == ETH_PHY_LAN8720){&#10;-        eth_config_t config = phy_lan8720_default_ethernet_config;&#10;-        memcpy(&amp;eth_config, &amp;config, sizeof(eth_config_t));&#10;-    } else if(type == ETH_PHY_TLK110){&#10;-        eth_config_t config = phy_tlk110_default_ethernet_config;&#10;-        memcpy(&amp;eth_config, &amp;config, sizeof(eth_config_t));&#10;-    } else if(type == ETH_PHY_IP101) {&#10;-      eth_config_t config = phy_ip101_default_ethernet_config;&#10;-      memcpy(&amp;eth_config, &amp;config, sizeof(eth_config_t));&#10;-    } else {&#10;-        log_e(&quot;Bad ETH_PHY type: %u&quot;, (uint8_t)type);&#10;+    if(cs &lt; 0 || irq &lt; 0){&#10;+        log_e(&quot;CS and IRQ pins must be defined!&quot;);&#10;         return false;&#10;     }&#10; &#10;-    eth_config.phy_addr = (eth_phy_base_t)phy_addr;&#10;-    eth_config.clock_mode = clock_mode;&#10;-    eth_config.gpio_config = _eth_phy_config_gpio;&#10;-    eth_config.tcpip_input = tcpip_adapter_eth_input;&#10;-    if(_eth_phy_power_pin &gt;= 0){&#10;-        _eth_phy_power_enable_orig = eth_config.phy_power_enable;&#10;-        eth_config.phy_power_enable = _eth_phy_power_enable;&#10;+    perimanSetBusDeinit(ESP32_BUS_TYPE_ETHERNET, ETHClass::ethDetachBus);&#10;+&#10;+    if(_pin_cs != -1){&#10;+        if(!perimanSetPinBus(_pin_cs, ESP32_BUS_TYPE_INIT, NULL)){ return false; }&#10;+    }&#10;+    if(_pin_rst != -1){&#10;+        if(!perimanSetPinBus(_pin_rst, ESP32_BUS_TYPE_INIT, NULL)){ return false; }&#10;+    }&#10;+    if(_pin_irq != -1){&#10;+        if(!perimanSetPinBus(_pin_irq, ESP32_BUS_TYPE_INIT, NULL)){ return false; }&#10;+    }&#10;+    if(_pin_sck != -1){&#10;+        if(!perimanSetPinBus(_pin_sck,  ESP32_BUS_TYPE_INIT, NULL)){ return false; }&#10;+    }&#10;+    if(_pin_miso != -1){&#10;+        if(!perimanSetPinBus(_pin_miso, ESP32_BUS_TYPE_INIT, NULL)){ return false; }&#10;+    }&#10;+    if(_pin_mosi != -1){&#10;+        if(!perimanSetPinBus(_pin_mosi, ESP32_BUS_TYPE_INIT, NULL)){ return false; }&#10;+    }&#10;+&#10;+#if ETH_SPI_SUPPORTS_CUSTOM&#10;+    _spi = spi;&#10;+#endif&#10;+    if(spi_freq_mhz){&#10;+        _spi_freq_mhz = spi_freq_mhz;&#10;+    }&#10;+    _phy_type = type;&#10;+    _pin_cs = cs;&#10;+    _pin_irq = irq;&#10;+    _pin_rst = rst;&#10;+    _pin_sck = sck;&#10;+    _pin_miso = miso;&#10;+    _pin_mosi = mosi;&#10;+&#10;+#if ETH_SPI_SUPPORTS_CUSTOM&#10;+    if(_spi != NULL){&#10;+        pinMode(_pin_cs, OUTPUT);&#10;+        digitalWrite(_pin_cs, HIGH);&#10;+    }&#10;+#endif&#10;+&#10;+    // Init SPI bus&#10;+    if(_pin_sck &gt;= 0 &amp;&amp; _pin_miso &gt;= 0 &amp;&amp; _pin_mosi &gt;= 0){&#10;+        spi_bus_config_t buscfg = {&#10;+            .mosi_io_num = _pin_mosi,&#10;+            .miso_io_num = _pin_miso,&#10;+            .sclk_io_num = _pin_sck,&#10;+            .quadwp_io_num = -1,&#10;+            .quadhd_io_num = -1,&#10;+        };&#10;+        ret = spi_bus_initialize(spi_host, &amp;buscfg, SPI_DMA_CH_AUTO);&#10;+        if(ret != ESP_OK){&#10;+            log_e(&quot;SPI bus initialize failed: %d&quot;, ret);&#10;+            return false;&#10;+        }&#10;     }&#10; &#10;     tcpipInit();&#10; &#10;-    if (use_mac_from_efuse)&#10;-    {&#10;-        uint8_t p[6] = { 0x00,0x00,0x00,0x00,0x00,0x00 };&#10;-        esp_efuse_mac_get_custom(p);&#10;-        esp_base_mac_addr_set(p);&#10;+    // Install GPIO ISR handler to be able to service SPI Eth modules interrupts&#10;+    ret = gpio_install_isr_service(0);&#10;+    if(ret != ESP_OK &amp;&amp; ret != ESP_ERR_INVALID_STATE){&#10;+        log_e(&quot;GPIO ISR handler install failed: %d&quot;, ret);&#10;+        return false;&#10;     }&#10; &#10;-    err = esp_eth_init(&amp;eth_config);&#10;-    if(!err){&#10;-        initialized = true;&#10;-        err = esp_eth_enable();&#10;-        if(err){&#10;-            log_e(&quot;esp_eth_enable error: %d&quot;, err);&#10;-        } else {&#10;-            _started = true;&#10;-            return true;&#10;+    // Init common MAC and PHY configs to default&#10;+    eth_mac_config_t eth_mac_config = ETH_MAC_DEFAULT_CONFIG();&#10;+    eth_phy_config_t phy_config = ETH_PHY_DEFAULT_CONFIG();&#10;+&#10;+    // Update PHY config based on board specific configuration&#10;+    phy_config.phy_addr = phy_addr;&#10;+    phy_config.reset_gpio_num = _pin_rst;&#10;+&#10;+    // Configure SPI interface for specific SPI module&#10;+    spi_device_interface_config_t spi_devcfg = {&#10;+        .mode = 0,&#10;+        .clock_speed_hz = _spi_freq_mhz * 1000 * 1000,&#10;+        .input_delay_ns = 20,&#10;+        .spics_io_num = _pin_cs,&#10;+        .queue_size = 20,&#10;+    };&#10;+&#10;+    esp_eth_mac_t *mac = NULL;&#10;+    esp_eth_phy_t *phy = NULL;&#10;+#if CONFIG_ETH_SPI_ETHERNET_W5500&#10;+    if(type == ETH_PHY_W5500){&#10;+        eth_w5500_config_t mac_config = ETH_W5500_DEFAULT_CONFIG(spi_host, &amp;spi_devcfg);&#10;+        mac_config.int_gpio_num = _pin_irq;&#10;+#if ETH_SPI_SUPPORTS_CUSTOM&#10;+        if(_spi != NULL){&#10;+            mac_config.custom_spi_driver.config = this;&#10;+            mac_config.custom_spi_driver.init = _eth_spi_init;&#10;+            mac_config.custom_spi_driver.deinit = _eth_spi_deinit;&#10;+            mac_config.custom_spi_driver.read = _eth_spi_read;&#10;+            mac_config.custom_spi_driver.write = _eth_spi_write;&#10;         }&#10;-    } else {&#10;-        log_e(&quot;esp_eth_init error: %d&quot;, err);&#10;+#endif&#10;+        mac = esp_eth_mac_new_w5500(&amp;mac_config, &amp;eth_mac_config);&#10;+        phy = esp_eth_phy_new_w5500(&amp;phy_config);&#10;+    } else &#10;+#endif&#10;+#if CONFIG_ETH_SPI_ETHERNET_DM9051&#10;+    if(type == ETH_PHY_DM9051){&#10;+        eth_dm9051_config_t mac_config = ETH_DM9051_DEFAULT_CONFIG(spi_host, &amp;spi_devcfg);&#10;+        mac_config.int_gpio_num = _pin_irq;&#10;+#if ETH_SPI_SUPPORTS_CUSTOM&#10;+        if(_spi != NULL){&#10;+            mac_config.custom_spi_driver.config = this;&#10;+            mac_config.custom_spi_driver.init = _eth_spi_init;&#10;+            mac_config.custom_spi_driver.deinit = _eth_spi_deinit;&#10;+            mac_config.custom_spi_driver.read = _eth_spi_read;&#10;+            mac_config.custom_spi_driver.write = _eth_spi_write;&#10;+        }&#10;+#endif&#10;+        mac = esp_eth_mac_new_dm9051(&amp;mac_config, &amp;eth_mac_config);&#10;+        phy = esp_eth_phy_new_dm9051(&amp;phy_config);&#10;+    } else&#10;+#endif&#10;+#if CONFIG_ETH_SPI_ETHERNET_KSZ8851SNL&#10;+    if(type == ETH_PHY_KSZ8851){&#10;+        eth_ksz8851snl_config_t mac_config = ETH_KSZ8851SNL_DEFAULT_CONFIG(spi_host, &amp;spi_devcfg);&#10;+        mac_config.int_gpio_num = _pin_irq;&#10;+#if ETH_SPI_SUPPORTS_CUSTOM&#10;+        if(_spi != NULL){&#10;+            mac_config.custom_spi_driver.config = this;&#10;+            mac_config.custom_spi_driver.init = _eth_spi_init;&#10;+            mac_config.custom_spi_driver.deinit = _eth_spi_deinit;&#10;+            mac_config.custom_spi_driver.read = _eth_spi_read;&#10;+            mac_config.custom_spi_driver.write = _eth_spi_write;&#10;+        }&#10;+#endif&#10;+        mac = esp_eth_mac_new_ksz8851snl(&amp;mac_config, &amp;eth_mac_config);&#10;+        phy = esp_eth_phy_new_ksz8851snl(&amp;phy_config);&#10;+    } else&#10;+#endif&#10;+    {&#10;+        log_e(&quot;Unsupported PHY module: %d&quot;, (int)type);&#10;+        return false;&#10;+    }&#10;+&#10;+    // Init Ethernet driver to default and install it&#10;+    esp_eth_config_t eth_config = ETH_DEFAULT_CONFIG(mac, phy);&#10;+    ret = esp_eth_driver_install(&amp;eth_config, &amp;_eth_handle);&#10;+    if(ret != ESP_OK){&#10;+        log_e(&quot;SPI Ethernet driver install failed: %d&quot;, ret);&#10;+        return false;&#10;+    }&#10;+    if(_eth_handle == NULL){&#10;+        log_e(&quot;esp_eth_driver_install failed! eth_handle is NULL&quot;);&#10;+        return false;&#10;+    }&#10;+&#10;+    // Derive a new MAC address for this interface&#10;+    uint8_t base_mac_addr[ETH_ADDR_LEN];&#10;+    ret = esp_efuse_mac_get_default(base_mac_addr);&#10;+    if(ret != ESP_OK){&#10;+        log_e(&quot;Get EFUSE MAC failed: %d&quot;, ret);&#10;+        return false;&#10;+    }&#10;+    uint8_t mac_addr[ETH_ADDR_LEN];&#10;+    base_mac_addr[ETH_ADDR_LEN - 1] += _eth_index; //Increment by the ETH number&#10;+    esp_derive_local_mac(mac_addr, base_mac_addr);&#10;+&#10;+    ret = esp_eth_ioctl(_eth_handle, ETH_CMD_S_MAC_ADDR, mac_addr);&#10;+    if(ret != ESP_OK){&#10;+        log_e(&quot;SPI Ethernet MAC address config failed: %d&quot;, ret);&#10;+        return false;&#10;     }&#10;+&#10;+    // Use ESP_NETIF_DEFAULT_ETH when just one Ethernet interface is used and you don't need to modify&#10;+    // default esp-netif configuration parameters.&#10;+    esp_netif_config_t cfg = ESP_NETIF_DEFAULT_ETH();&#10;+&#10;+    // Use ESP_NETIF_INHERENT_DEFAULT_ETH when multiple Ethernet interfaces are used and so you need to modify&#10;+    // esp-netif configuration parameters for each interface (name, priority, etc.).&#10;+    char if_key_str[10];&#10;+    char if_desc_str[10];&#10;+    char num_str[3];&#10;+    itoa(_eth_index, num_str, 10);&#10;+    strcat(strcpy(if_key_str, &quot;ETH_&quot;), num_str);&#10;+    strcat(strcpy(if_desc_str, &quot;eth&quot;), num_str);&#10;+&#10;+    esp_netif_inherent_config_t esp_netif_config = ESP_NETIF_INHERENT_DEFAULT_ETH();&#10;+    esp_netif_config.if_key = if_key_str;&#10;+    esp_netif_config.if_desc = if_desc_str;&#10;+    esp_netif_config.route_prio -= _eth_index*5;&#10;+&#10;+    cfg.base = &amp;esp_netif_config;&#10;+&#10;+    _esp_netif = esp_netif_new(&amp;cfg);&#10;+    if(_esp_netif == NULL){&#10;+        log_e(&quot;esp_netif_new failed&quot;);&#10;+        return false;&#10;+    }&#10;+    // Attach Ethernet driver to TCP/IP stack&#10;+    esp_eth_netif_glue_handle_t new_netif_glue = esp_eth_new_netif_glue(_eth_handle);&#10;+    if(new_netif_glue == NULL){&#10;+        log_e(&quot;esp_eth_new_netif_glue failed&quot;);&#10;+        return false;&#10;+    }&#10;+&#10;+    ret = esp_netif_attach(_esp_netif, new_netif_glue);&#10;+    if(ret != ESP_OK){&#10;+        log_e(&quot;esp_netif_attach failed: %d&quot;, ret);&#10;+        return false;&#10;+    }&#10;+&#10;+    // attach to WiFiGeneric to receive events&#10;+    add_esp_interface_netif(ESP_IF_ETH, _esp_netif);&#10;+&#10;+    // Start Ethernet driver state machine&#10;+    ret = esp_eth_start(_eth_handle);&#10;+    if(ret != ESP_OK){&#10;+        log_e(&quot;esp_eth_start failed: %d&quot;, ret);&#10;+        return false;&#10;+    }&#10;+&#10;+    _eth_started = true;&#10;+&#10;+    // If Arduino's SPI is used, cs pin is in GPIO mode&#10;+#if ETH_SPI_SUPPORTS_CUSTOM&#10;+    if(_spi == NULL){&#10; #endif&#10;-    // holds a few milliseconds to let DHCP start and enter into a good state&#10;-    // FIX ME -- adresses issue https://github.com/espressif/arduino-esp32/issues/5733&#10;-    delay(50);&#10;+        if(!perimanSetPinBus(_pin_cs, ESP32_BUS_TYPE_ETHERNET, (void *)(this))){ goto err; }&#10;+#if ETH_SPI_SUPPORTS_CUSTOM&#10;+    }&#10;+#endif&#10;+    if(!perimanSetPinBus(_pin_irq, ESP32_BUS_TYPE_ETHERNET, (void *)(this))){ goto err; }&#10;+&#10;+    if(_pin_sck != -1){&#10;+        if(!perimanSetPinBus(_pin_sck, ESP32_BUS_TYPE_ETHERNET, (void *)(this))){ goto err; }&#10;+    }&#10;+    if(_pin_miso != -1){&#10;+        if(!perimanSetPinBus(_pin_miso, ESP32_BUS_TYPE_ETHERNET, (void *)(this))){ goto err; }&#10;+    }&#10;+    if(_pin_mosi != -1){&#10;+        if(!perimanSetPinBus(_pin_mosi,  ESP32_BUS_TYPE_ETHERNET, (void *)(this))){ goto err; }&#10;+    }&#10;+    if(_pin_rst != -1){&#10;+        if(!perimanSetPinBus(_pin_rst,  ESP32_BUS_TYPE_ETHERNET, (void *)(this))){ goto err; }&#10;+    }&#10; &#10;     return true;&#10; &#10;@@ -466,57 +599,149 @@ err:&#10;     return false;&#10; }&#10; &#10;+#if ETH_SPI_SUPPORTS_CUSTOM&#10;+bool ETHClass::begin(eth_phy_type_t type, uint8_t phy_addr, int cs, int irq, int rst, SPIClass &amp;spi, uint8_t spi_freq_mhz){&#10;+&#10;+    return beginSPI(type, phy_addr, cs, irq, rst, &amp;spi, -1, -1, -1, SPI2_HOST, spi_freq_mhz);&#10;+}&#10;+#endif&#10;+&#10;+bool ETHClass::begin(eth_phy_type_t type, uint8_t phy_addr, int cs, int irq, int rst, spi_host_device_t spi_host, int sck, int miso, int mosi, uint8_t spi_freq_mhz){&#10;+&#10;+    return beginSPI(type, phy_addr, cs, irq, rst,&#10;+#if ETH_SPI_SUPPORTS_CUSTOM &#10;+        NULL, &#10;+#endif&#10;+        sck, miso, mosi, spi_host, spi_freq_mhz);&#10;+}&#10;+&#10;+void ETHClass::end(void)&#10;+{&#10;+    _eth_started = false;&#10;+&#10;+    if(_esp_netif != NULL){&#10;+        esp_netif_destroy(_esp_netif);&#10;+        _esp_netif = NULL;&#10;+    }&#10;+&#10;+    if(_eth_handle != NULL){&#10;+        if(esp_eth_stop(_eth_handle) != ESP_OK){&#10;+            log_e(&quot;Failed to stop Ethernet&quot;);&#10;+            return;&#10;+        }&#10;+        if(esp_eth_driver_uninstall(_eth_handle) != ESP_OK){&#10;+            log_e(&quot;Failed to stop Ethernet&quot;);&#10;+            return;&#10;+        }&#10;+        _eth_handle = NULL;&#10;+    }&#10;+&#10;+#if ETH_SPI_SUPPORTS_CUSTOM&#10;+    _spi = NULL;&#10;+#endif&#10;+&#10;+#if CONFIG_ETH_USE_ESP32_EMAC&#10;+    if(_pin_rmii_clock != -1 &amp;&amp; _pin_mcd != -1 &amp;&amp; _pin_mdio != -1){&#10;+        perimanSetPinBus(_pin_rmii_clock, ESP32_BUS_TYPE_INIT, NULL);&#10;+        perimanSetPinBus(_pin_mcd, ESP32_BUS_TYPE_INIT, NULL);&#10;+        perimanSetPinBus(_pin_mdio, ESP32_BUS_TYPE_INIT, NULL);&#10;+&#10;+        perimanSetPinBus(ETH_RMII_TX_EN, ESP32_BUS_TYPE_INIT, NULL);&#10;+        perimanSetPinBus(ETH_RMII_TX0, ESP32_BUS_TYPE_INIT, NULL);&#10;+        perimanSetPinBus(ETH_RMII_TX1, ESP32_BUS_TYPE_INIT, NULL);&#10;+        perimanSetPinBus(ETH_RMII_RX0, ESP32_BUS_TYPE_INIT, NULL);&#10;+        perimanSetPinBus(ETH_RMII_RX1_EN, ESP32_BUS_TYPE_INIT, NULL);&#10;+        perimanSetPinBus(ETH_RMII_CRS_DV, ESP32_BUS_TYPE_INIT, NULL);&#10;+&#10;+        _pin_rmii_clock = -1;&#10;+        _pin_mcd = -1;&#10;+        _pin_mdio = -1;&#10;+    }&#10;+&#10;+    if(_pin_power != -1){&#10;+        perimanSetPinBus(_pin_power, ESP32_BUS_TYPE_INIT, NULL);&#10;+        _pin_power = -1;&#10;+    }&#10;+#endif /* CONFIG_ETH_USE_ESP32_EMAC */&#10;+    if(_pin_cs != -1){&#10;+        perimanSetPinBus(_pin_cs, ESP32_BUS_TYPE_INIT, NULL);&#10;+        _pin_cs = -1;&#10;+    }&#10;+    if(_pin_irq != -1){&#10;+        perimanSetPinBus(_pin_irq, ESP32_BUS_TYPE_INIT, NULL);&#10;+        _pin_irq = -1;&#10;+    }&#10;+    if(_pin_sck != -1){&#10;+        perimanSetPinBus(_pin_sck,  ESP32_BUS_TYPE_INIT, NULL);&#10;+        _pin_sck = -1;&#10;+    }&#10;+    if(_pin_miso != -1){&#10;+        perimanSetPinBus(_pin_miso, ESP32_BUS_TYPE_INIT, NULL);&#10;+        _pin_miso = -1;&#10;+    }&#10;+    if(_pin_mosi != -1){&#10;+        perimanSetPinBus(_pin_mosi, ESP32_BUS_TYPE_INIT, NULL);&#10;+        _pin_mosi = -1;&#10;+    }&#10;+    if(_pin_rst != -1){&#10;+        perimanSetPinBus(_pin_rst, ESP32_BUS_TYPE_INIT, NULL);&#10;+        _pin_rst = -1;&#10;+    }&#10;+}&#10;+&#10; bool ETHClass::config(IPAddress local_ip, IPAddress gateway, IPAddress subnet, IPAddress dns1, IPAddress dns2)&#10; {&#10;+    if(_esp_netif == NULL){&#10;+        return false;&#10;+    }&#10;     esp_err_t err = ESP_OK;&#10;     esp_netif_ip_info_t info;&#10;+    esp_netif_dns_info_t d1;&#10;+    esp_netif_dns_info_t d2;&#10;+    d1.ip.type = IPADDR_TYPE_V4;&#10;+    d2.ip.type = IPADDR_TYPE_V4;&#10; &#10;     if(static_cast&lt;uint32_t&gt;(local_ip) != 0){&#10;         info.ip.addr = static_cast&lt;uint32_t&gt;(local_ip);&#10;         info.gw.addr = static_cast&lt;uint32_t&gt;(gateway);&#10;         info.netmask.addr = static_cast&lt;uint32_t&gt;(subnet);&#10;+        d1.ip.u_addr.ip4.addr = static_cast&lt;uint32_t&gt;(dns1);&#10;+        d2.ip.u_addr.ip4.addr = static_cast&lt;uint32_t&gt;(dns2);&#10;     } else {&#10;         info.ip.addr = 0;&#10;         info.gw.addr = 0;&#10;         info.netmask.addr = 0;&#10;+        d1.ip.u_addr.ip4.addr = 0;&#10;+        d2.ip.u_addr.ip4.addr = 0;&#10; &#9;}&#10; &#10;-    err = esp_netif_dhcpc_stop(esp_netif);&#10;+    // Stop DHCPC&#10;+    err = esp_netif_dhcpc_stop(_esp_netif);&#10;     if(err != ESP_OK &amp;&amp; err != ESP_ERR_ESP_NETIF_DHCP_ALREADY_STOPPED){&#10;         log_e(&quot;DHCP could not be stopped! Error: %d&quot;, err);&#10;         return false;&#10;     }&#10; &#10;-    err = esp_netif_set_ip_info(esp_netif, &amp;info);&#10;+    // Set IPv4, Netmask, Gateway&#10;+    err = esp_netif_set_ip_info(_esp_netif, &amp;info);&#10;     if(err != ERR_OK){&#10;         log_e(&quot;ETH IP could not be configured! Error: %d&quot;, err);&#10;         return false;&#10;     }&#10;     &#10;-    if(info.ip.addr){&#10;-        staticIP = true;&#10;-    } else {&#10;-        err = esp_netif_dhcpc_start(esp_netif);&#10;+    // Set DNS1-Server&#10;+    esp_netif_set_dns_info(_esp_netif, ESP_NETIF_DNS_MAIN, &amp;d1);&#10;+&#10;+    // Set DNS2-Server&#10;+    esp_netif_set_dns_info(_esp_netif, ESP_NETIF_DNS_BACKUP, &amp;d2);&#10;+&#10;+    // Start DHCPC if static IP was set&#10;+    if(info.ip.addr == 0){&#10;+        err = esp_netif_dhcpc_start(_esp_netif);&#10;         if(err != ESP_OK &amp;&amp; err != ESP_ERR_ESP_NETIF_DHCP_ALREADY_STARTED){&#10;             log_w(&quot;DHCP could not be started! Error: %d&quot;, err);&#10;             return false;&#10;         }&#10;-        staticIP = false;&#10;-    }&#10;-&#10;-    esp_netif_dns_info_t d;&#10;-    d.ip.type = IPADDR_TYPE_V4;&#10;-&#10;-    if(static_cast&lt;uint32_t&gt;(dns1) != 0) {&#10;-        // Set DNS1-Server&#10;-        d.ip.u_addr.ip4.addr = static_cast&lt;uint32_t&gt;(dns1);&#10;-        esp_netif_set_dns_info(esp_netif, ESP_NETIF_DNS_MAIN, &amp;d);&#10;-    }&#10;-&#10;-    if(static_cast&lt;uint32_t&gt;(dns2) != 0) {&#10;-        // Set DNS2-Server&#10;-        d.ip.u_addr.ip4.addr = static_cast&lt;uint32_t&gt;(dns2);&#10;-        esp_netif_set_dns_info(esp_netif, ESP_NETIF_DNS_BACKUP, &amp;d);&#10;     }&#10; &#10;     return true;&#10;@@ -524,8 +749,11 @@ bool ETHClass::config(IPAddress local_ip, IPAddress gateway, IPAddress subnet, I&#10; &#10; IPAddress ETHClass::localIP()&#10; {&#10;+    if(_esp_netif == NULL){&#10;+        return IPAddress();&#10;+    }&#10;     esp_netif_ip_info_t ip;&#10;-    if(esp_netif_get_ip_info(esp_netif, &amp;ip)){&#10;+    if(esp_netif_get_ip_info(_esp_netif, &amp;ip)){&#10;         return IPAddress();&#10;     }&#10;     return IPAddress(ip.ip.addr);&#10;@@ -533,8 +761,11 @@ IPAddress ETHClass::localIP()&#10; &#10; IPAddress ETHClass::subnetMask()&#10; {&#10;+    if(_esp_netif == NULL){&#10;+        return IPAddress();&#10;+    }&#10;     esp_netif_ip_info_t ip;&#10;-    if(esp_netif_get_ip_info(esp_netif, &amp;ip)){&#10;+    if(esp_netif_get_ip_info(_esp_netif, &amp;ip)){&#10;         return IPAddress();&#10;     }&#10;     return IPAddress(ip.netmask.addr);&#10;@@ -542,8 +773,11 @@ IPAddress ETHClass::subnetMask()&#10; &#10; IPAddress ETHClass::gatewayIP()&#10; {&#10;+    if(_esp_netif == NULL){&#10;+        return IPAddress();&#10;+    }&#10;     esp_netif_ip_info_t ip;&#10;-    if(esp_netif_get_ip_info(esp_netif, &amp;ip)){&#10;+    if(esp_netif_get_ip_info(_esp_netif, &amp;ip)){&#10;         return IPAddress();&#10;     }&#10;     return IPAddress(ip.gw.addr);&#10;@@ -551,8 +785,11 @@ IPAddress ETHClass::gatewayIP()&#10; &#10; IPAddress ETHClass::dnsIP(uint8_t dns_no)&#10; {&#10;+    if(_esp_netif == NULL){&#10;+        return IPAddress();&#10;+    }&#10;     esp_netif_dns_info_t d;&#10;-    if(esp_netif_get_dns_info(esp_netif, dns_no?ESP_NETIF_DNS_BACKUP:ESP_NETIF_DNS_MAIN, &amp;d) != ESP_OK){&#10;+    if(esp_netif_get_dns_info(_esp_netif, dns_no?ESP_NETIF_DNS_BACKUP:ESP_NETIF_DNS_MAIN, &amp;d) != ESP_OK){&#10;         return IPAddress();&#10;     }&#10;     return IPAddress(d.ip.u_addr.ip4.addr);&#10;@@ -560,8 +797,11 @@ IPAddress ETHClass::dnsIP(uint8_t dns_no)&#10; &#10; IPAddress ETHClass::broadcastIP()&#10; {&#10;+    if(_esp_netif == NULL){&#10;+        return IPAddress();&#10;+    }&#10;     esp_netif_ip_info_t ip;&#10;-    if(esp_netif_get_ip_info(esp_netif, &amp;ip)){&#10;+    if(esp_netif_get_ip_info(_esp_netif, &amp;ip)){&#10;         return IPAddress();&#10;     }&#10;     return WiFiGenericClass::calculateBroadcast(IPAddress(ip.gw.addr), IPAddress(ip.netmask.addr));&#10;@@ -569,8 +809,11 @@ IPAddress ETHClass::broadcastIP()&#10; &#10; IPAddress ETHClass::networkID()&#10; {&#10;+    if(_esp_netif == NULL){&#10;+        return IPAddress();&#10;+    }&#10;     esp_netif_ip_info_t ip;&#10;-    if(esp_netif_get_ip_info(esp_netif, &amp;ip)){&#10;+    if(esp_netif_get_ip_info(_esp_netif, &amp;ip)){&#10;         return IPAddress();&#10;     }&#10;     return WiFiGenericClass::calculateNetworkID(IPAddress(ip.gw.addr), IPAddress(ip.netmask.addr));&#10;@@ -578,8 +821,11 @@ IPAddress ETHClass::networkID()&#10; &#10; uint8_t ETHClass::subnetCIDR()&#10; {&#10;+    if(_esp_netif == NULL){&#10;+        return (uint8_t)0;&#10;+    }&#10;     esp_netif_ip_info_t ip;&#10;-    if(esp_netif_get_ip_info(esp_netif, &amp;ip)){&#10;+    if(esp_netif_get_ip_info(_esp_netif, &amp;ip)){&#10;         return (uint8_t)0;&#10;     }&#10;     return WiFiGenericClass::calculateSubnetCIDR(IPAddress(ip.netmask.addr));&#10;@@ -587,8 +833,11 @@ uint8_t ETHClass::subnetCIDR()&#10; &#10; const char * ETHClass::getHostname()&#10; {&#10;+    if(_esp_netif == NULL){&#10;+        return &quot;&quot;;&#10;+    }&#10;     const char * hostname;&#10;-    if(esp_netif_get_hostname(esp_netif, &amp;hostname)){&#10;+    if(esp_netif_get_hostname(_esp_netif, &amp;hostname)){&#10;         return NULL;&#10;     }&#10;     return hostname;&#10;@@ -596,64 +845,129 @@ const char * ETHClass::getHostname()&#10; &#10; bool ETHClass::setHostname(const char * hostname)&#10; {&#10;-    return esp_netif_set_hostname(esp_netif, hostname) == 0;&#10;+    if(_esp_netif == NULL){&#10;+        return false;&#10;+    }&#10;+    return esp_netif_set_hostname(_esp_netif, hostname) == 0;&#10; }&#10; &#10;-bool ETHClass::fullDuplex()&#10;+bool ETHClass::enableIpV6()&#10; {&#10;-#if ESP_IDF_VERSION_MAJOR &gt; 3&#10;-    eth_duplex_t link_duplex;&#10;-    esp_eth_ioctl(eth_handle, ETH_CMD_G_DUPLEX_MODE, &amp;link_duplex);&#10;-    return (link_duplex == ETH_DUPLEX_FULL);&#10;-#else&#10;-    return eth_config.phy_get_duplex_mode();&#10;-#endif&#10;+    if(_esp_netif == NULL){&#10;+        return false;&#10;+    }&#10;+    return esp_netif_create_ip6_linklocal(_esp_netif) == 0;&#10; }&#10; &#10;-bool ETHClass::linkUp()&#10;+IPv6Address ETHClass::localIPv6()&#10;+{&#10;+    if(_esp_netif == NULL){&#10;+        return IPv6Address();&#10;+    }&#10;+    static esp_ip6_addr_t addr;&#10;+    if(esp_netif_get_ip6_linklocal(_esp_netif, &amp;addr)){&#10;+        return IPv6Address();&#10;+    }&#10;+    return IPv6Address(addr.addr);&#10;+}&#10;+&#10;+const char * ETHClass::ifkey(void)&#10;+{&#10;+    if(_esp_netif == NULL){&#10;+        return &quot;&quot;;&#10;+    }&#10;+    return esp_netif_get_ifkey(_esp_netif);&#10;+}&#10;+&#10;+const char * ETHClass::desc(void)&#10;+{&#10;+    if(_esp_netif == NULL){&#10;+        return &quot;&quot;;&#10;+    }&#10;+    return esp_netif_get_desc(_esp_netif);&#10;+}&#10;+&#10;+String ETHClass::impl_name(void)&#10;+{&#10;+    if(_esp_netif == NULL){&#10;+        return String(&quot;&quot;);&#10;+    }&#10;+    char netif_name[8];&#10;+    esp_err_t err = esp_netif_get_netif_impl_name(_esp_netif, netif_name);&#10;+    if(err != ESP_OK){&#10;+        log_e(&quot;Failed to get netif impl_name: %d&quot;, err);&#10;+        return String(&quot;&quot;);&#10;+    }&#10;+    return String(netif_name);&#10;+}&#10;+&#10;+bool ETHClass::connected()&#10; {&#10;-#if ESP_IDF_VERSION_MAJOR &gt; 3&#10;     return WiFiGenericClass::getStatusBits() &amp; ETH_CONNECTED_BIT;&#10;-#else&#10;-    return eth_config.phy_check_link();&#10;-#endif&#10; }&#10; &#10;-uint8_t ETHClass::linkSpeed()&#10;+bool ETHClass::hasIP()&#10; {&#10;-#if ESP_IDF_VERSION_MAJOR &gt; 3&#10;-    eth_speed_t link_speed;&#10;-    esp_eth_ioctl(eth_handle, ETH_CMD_G_SPEED, &amp;link_speed);&#10;-    return (link_speed == ETH_SPEED_10M)?10:100;&#10;-#else&#10;-    return eth_config.phy_get_speed_mode()?100:10;&#10;-#endif&#10;+    return WiFiGenericClass::getStatusBits() &amp; ETH_HAS_IP_BIT;&#10; }&#10; &#10;-bool ETHClass::enableIpV6()&#10;+bool ETHClass::linkUp()&#10; {&#10;-    return esp_netif_create_ip6_linklocal(esp_netif) == 0;&#10;+    if(_esp_netif == NULL){&#10;+        return false;&#10;+    }&#10;+    return esp_netif_is_netif_up(_esp_netif);&#10; }&#10; &#10;-IPv6Address ETHClass::localIPv6()&#10;+bool ETHClass::fullDuplex()&#10; {&#10;-    static esp_ip6_addr_t addr;&#10;-    if(esp_netif_get_ip6_linklocal(esp_netif, &amp;addr)){&#10;-        return IPv6Address();&#10;+    if(_eth_handle == NULL){&#10;+        return false;&#10;     }&#10;-    return IPv6Address(addr.addr);&#10;+    eth_duplex_t link_duplex;&#10;+    esp_eth_ioctl(_eth_handle, ETH_CMD_G_DUPLEX_MODE, &amp;link_duplex);&#10;+    return (link_duplex == ETH_DUPLEX_FULL);&#10;+}&#10;+&#10;+bool ETHClass::autoNegotiation()&#10;+{&#10;+    if(_eth_handle == NULL){&#10;+        return false;&#10;+    }&#10;+    bool auto_nego;&#10;+    esp_eth_ioctl(_eth_handle, ETH_CMD_G_AUTONEGO, &amp;auto_nego);&#10;+    return auto_nego;&#10;+}&#10;+&#10;+uint32_t ETHClass::phyAddr()&#10;+{&#10;+    if(_eth_handle == NULL){&#10;+        return 0;&#10;+    }&#10;+    uint32_t phy_addr;&#10;+    esp_eth_ioctl(_eth_handle, ETH_CMD_G_PHY_ADDR, &amp;phy_addr);&#10;+    return phy_addr;&#10;+}&#10;+&#10;+uint8_t ETHClass::linkSpeed()&#10;+{&#10;+    if(_eth_handle == NULL){&#10;+        return 0;&#10;+    }&#10;+    eth_speed_t link_speed;&#10;+    esp_eth_ioctl(_eth_handle, ETH_CMD_G_SPEED, &amp;link_speed);&#10;+    return (link_speed == ETH_SPEED_10M)?10:100;&#10; }&#10; &#10; uint8_t * ETHClass::macAddress(uint8_t* mac)&#10; {&#10;+    if(_eth_handle == NULL){&#10;+        return NULL;&#10;+    }&#10;     if(!mac){&#10;         return NULL;&#10;     }&#10;-#ifdef ESP_IDF_VERSION_MAJOR&#10;-    esp_eth_ioctl(eth_handle, ETH_CMD_G_MAC_ADDR, mac);&#10;-#else&#10;-    esp_eth_get_mac(mac);&#10;-#endif&#10;+    esp_eth_ioctl(_eth_handle, ETH_CMD_G_MAC_ADDR, mac);&#10;     return mac;&#10; }&#10; &#10;@@ -666,36 +980,48 @@ String ETHClass::macAddress(void)&#10;     return String(macStr);&#10; }&#10; &#10;-#if ESP_IDF_VERSION_MAJOR &gt; 3&#10;-&#10;-void ETHClass::end(void)&#10;-{&#10;-    if(esp_eth_stop(eth_handle) != ESP_OK) {&#10;-        log_e(&quot;Failed to stop Ehternet&quot;);&#10;-        return;&#10;+void ETHClass::printInfo(Print &amp; out){&#10;+    out.print(desc());&#10;+    out.print(&quot;:&quot;);&#10;+    if(linkUp()){&#10;+        out.print(&quot; &lt;UP&quot;);&#10;+    } else {&#10;+        out.print(&quot; &lt;DOWN&quot;);&#10;     }&#10;-    if(esp_eth_driver_uninstall(eth_handle) != ESP_OK) {&#10;-        log_e(&quot;Failed to stop Ethernet&quot;);&#10;-        return;&#10;+    out.print(&quot;,&quot;);&#10;+    out.print(linkSpeed());&#10;+    out.print(&quot;M&quot;);&#10;+    if(fullDuplex()){&#10;+        out.print(&quot;,FULL_DUPLEX&quot;);&#10;     }&#10;-    _started = false;&#10;-&#10;-    perimanSetPinBus(_pin_rmii_clock, ESP32_BUS_TYPE_INIT, NULL);&#10;-    perimanSetPinBus(_pin_mcd, ESP32_BUS_TYPE_INIT, NULL);&#10;-    perimanSetPinBus(_pin_mdio, ESP32_BUS_TYPE_INIT, NULL);&#10;-&#10;-    perimanSetPinBus(ETH_RMII_TX_EN, ESP32_BUS_TYPE_INIT, NULL);&#10;-    perimanSetPinBus(ETH_RMII_TX0, ESP32_BUS_TYPE_INIT, NULL);&#10;-    perimanSetPinBus(ETH_RMII_TX1, ESP32_BUS_TYPE_INIT, NULL);&#10;-    perimanSetPinBus(ETH_RMII_RX0, ESP32_BUS_TYPE_INIT, NULL);&#10;-    perimanSetPinBus(ETH_RMII_RX1_EN, ESP32_BUS_TYPE_INIT, NULL);&#10;-    perimanSetPinBus(ETH_RMII_CRS_DV, ESP32_BUS_TYPE_INIT, NULL);&#10;-&#10;-    if(_pin_power != -1){&#10;-        perimanSetPinBus(_pin_power, ESP32_BUS_TYPE_INIT, NULL);&#10;+    if(autoNegotiation()){&#10;+        out.print(&quot;,AUTO&quot;);&#10;     }&#10;+    out.println(&quot;&gt;&quot;);&#10;+&#10;+    out.print(&quot;      &quot;);&#10;+    out.print(&quot;ether &quot;);&#10;+    out.print(macAddress());&#10;+    out.printf(&quot; phy 0x%lX&quot;, phyAddr());&#10;+    out.println();&#10;+&#10;+    out.print(&quot;      &quot;);&#10;+    out.print(&quot;inet &quot;);&#10;+    out.print(localIP());&#10;+    out.print(&quot; netmask &quot;);&#10;+    out.print(subnetMask());&#10;+    out.print(&quot; broadcast &quot;);&#10;+    out.print(broadcastIP());&#10;+    out.println();&#10;+&#10;+    out.print(&quot;      &quot;);&#10;+    out.print(&quot;gateway &quot;);&#10;+    out.print(gatewayIP());&#10;+    out.print(&quot; dns &quot;);&#10;+    out.print(dnsIP());&#10;+    out.println();&#10;+&#10;+    out.println();&#10; }&#10; &#10;-#endif&#10;-&#10; ETHClass ETH;&#10;" />
			<string key="comment_change" value="True" />
		</event>
	</trace>
	<trace>
		<string key="file" value="ETH.h" />
	</trace>
	<trace>
		<string key="file" value="BluetoothSerial.cpp" />
		<event>
			<string key="timestamp" value="2023-02-13T12:32:47+02:00" />
			<string key="author" value="Tomáš Pilný" />
			<string key="change_type" value="MODIFY" />
			<string key="commit_message" value="Added methods + example to retrive local MAC for BT (#7778)&#10;&#10;* Added methods + example to retrive local MAC for BT&#13;&#10;&#13;&#10;* Added .skip files in the new example folder&#13;&#10;&#13;&#10;* Fixed typos and formatting + added doxygen comments&#13;&#10;&#13;&#10;* changed std::string to String&#13;&#10;&#13;&#10;* another std::string -&gt; String&#13;&#10;&#13;&#10;* Changed std::string to String&#13;&#10;&#13;&#10;* chaged string type in example" />
			<int key="additions" value="27" />
			<int key="deletions" value="2" />
			<string key="diff" value='@@ -661,8 +661,6 @@ static bool _init_bt(const char *deviceName)&#10;         }&#10;     }&#10; &#10;-    // Why only master need this?  Slave need this during pairing as well&#10;-//    if (_isMaster &amp;&amp; esp_bt_gap_register_callback(esp_bt_gap_cb) != ESP_OK) {&#10;     if (esp_bt_gap_register_callback(esp_bt_gap_cb) != ESP_OK) {&#10;         log_e("gap register failed");&#10;         return false;&#10;@@ -1183,4 +1181,31 @@ std::map&lt;int, std::string&gt; BluetoothSerial::getChannels(const BTAddress &amp;remoteA&#10;     return sdpRecords;&#10; }&#10; &#10;+/**&#10;+ * @brief      Gets the MAC address of local BT device in byte array.&#10;+ *&#10;+ * @param      mac [out]  The mac&#10;+ */&#10;+void BluetoothSerial::getBtAddress(uint8_t *mac) {&#10;+    const uint8_t *dev_mac = esp_bt_dev_get_address();&#10;+    memcpy(mac, dev_mac, ESP_BD_ADDR_LEN);&#10;+}&#10;+/**&#10;+ * @brief      Gets the MAC address of local BT device as BTAddress object.&#10;+ *&#10;+ * @return     The BTAddress object.&#10;+ */&#10;+BTAddress BluetoothSerial::getBtAddressObject() {&#10;+    uint8_t mac_arr[ESP_BD_ADDR_LEN];&#10;+    getBtAddress(mac_arr);&#10;+    return BTAddress(mac_arr);&#10;+}&#10;+/**&#10;+ * @brief      Gets the MAC address of local BT device as string.&#10;+ *&#10;+ * @return     The BT MAC address string.&#10;+ */&#10;+String BluetoothSerial::getBtAddressString() {&#10;+    return getBtAddressObject().toString(true);&#10;+}&#10; #endif&#10;' />
			<string key="comment_change" value="False" />
		</event>
		<event>
			<string key="timestamp" value="2023-10-06T15:49:51+03:00" />
			<string key="author" value="Me No Dev" />
			<string key="change_type" value="MODIFY" />
			<string key="commit_message" value="BT serial: SSP improvements, added missing events (#8723)&#10;&#10;* Renamed SerialToSerialBT_SSP_pairing&#13;&#10;&#13;&#10;* Clarified useage of SPP example&#13;&#10;&#13;&#10;* Added missing events&#13;&#10;&#13;&#10;* Implemented dropCache() method to remove bonded devices&#13;&#10;&#13;&#10;* Removed legacy pairing, enhaced SSP&#13;&#10;&#13;&#10;* Minor updates to examples&#13;&#10;&#13;&#10;* Updated README + asociated comments in source and example&#13;&#10;&#13;&#10;* Implemented more methods to manipulate bonded devices + modified example&#13;&#10;&#13;&#10;* Added SPP event&#13;&#10;&#13;&#10;* Reordered event to match enum declaration; added missing events; added comments&#13;&#10;&#13;&#10;* Re-implemented legacy pairing support&#13;&#10;&#13;&#10;* Spelling fixes in README&#13;&#10;&#13;&#10;* Removed unnecessary test in discover()&#13;&#10;&#13;&#10;* Updates&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Tomas Pilny &lt;tomas.pilny@espressif.com&gt;&#13;&#10;Co-authored-by: Tomáš Pilný &lt;pilnyt@seznam.cz&gt;" />
			<int key="additions" value="367" />
			<int key="deletions" value="187" />
			<string key="diff" value="@@ -24,10 +24,11 @@&#10; #if defined(CONFIG_BT_ENABLED) &amp;&amp; defined(CONFIG_BLUEDROID_ENABLED)&#10; &#10; #ifdef ARDUINO_ARCH_ESP32&#10;-#include &quot;esp32-hal-log.h&quot;&#10;+  #include &quot;esp32-hal-log.h&quot;&#10; #endif&#10; &#10; #include &quot;BluetoothSerial.h&quot;&#10;+#include &quot;BTAdvertisedDevice.h&quot;&#10; &#10; #include &quot;esp_bt.h&quot;&#10; #include &quot;esp_bt_main.h&quot;&#10;@@ -58,7 +59,10 @@ static esp_spp_cb_t * custom_spp_callback = NULL;&#10; static BluetoothSerialDataCb custom_data_callback = NULL;&#10; static esp_bd_addr_t current_bd_addr;&#10; static ConfirmRequestCb confirm_request_callback = NULL;&#10;+static KeyRequestCb key_request_callback = NULL;&#10; static AuthCompleteCb auth_complete_callback = NULL;&#10;+static bool _rmt_name_valid = false;&#10;+static uint8_t _rmt_name[ESP_BT_GAP_MAX_BDNAME_LEN + 1] = {0};&#10; &#10; #define INQ_LEN 0x10&#10; #define INQ_NUM_RSPS 20&#10;@@ -68,10 +72,13 @@ static esp_bd_addr_t _peer_bd_addr;&#10; static char _remote_name[ESP_BT_GAP_MAX_BDNAME_LEN + 1];&#10; static bool _isRemoteAddressSet;&#10; static bool _isMaster;&#10;-static esp_bt_pin_code_t _pin_code;&#10;-static int _pin_len;&#10;-static bool _isPinSet;&#10;-static bool _enableSSP;&#10;+#ifdef CONFIG_BT_SSP_ENABLED&#10;+  static bool _enableSSP;&#10;+  static bool _IO_CAP_INPUT;&#10;+  static bool _IO_CAP_OUTPUT;&#10;+#endif&#10;+esp_bt_pin_code_t _pin_code = {0};&#10;+uint8_t _pin_code_len = 0; // Number of valid Bytes in the esp_bt_pin_code_t array&#10; static esp_spp_sec_t _sec_mask;&#10; static esp_spp_role_t _role;&#10; // start connect on ESP_SPP_DISCOVERY_COMP_EVT or save entry for getChannels&#10;@@ -139,22 +146,6 @@ static bool get_name_from_eir(uint8_t *eir, char *bdname, uint8_t *bdname_len)&#10;     return false;&#10; }&#10; &#10;-static bool btSetPin() {&#10;-    esp_bt_pin_type_t pin_type;&#10;-    if (_isPinSet) {&#10;-        if (_pin_len) {&#10;-            log_i(&quot;pin set&quot;);&#10;-            pin_type = ESP_BT_PIN_TYPE_FIXED;&#10;-        } else {&#10;-            _isPinSet = false;&#10;-            log_i(&quot;pin reset&quot;);&#10;-            pin_type = ESP_BT_PIN_TYPE_VARIABLE; // pin_code would be ignored (default)&#10;-        }&#10;-        return (esp_bt_gap_set_pin(pin_type, _pin_len, _pin_code) == ESP_OK);        &#10;-    }&#10;-    return false;&#10;-}&#10;-&#10; static esp_err_t _spp_queue_packet(uint8_t *data, size_t len){&#10;     if(!data || !len){&#10;         log_w(&quot;No data provided&quot;);&#10;@@ -259,7 +250,7 @@ static void esp_spp_cb(esp_spp_cb_event_t event, esp_spp_cb_param_t *param)&#10; {&#10;     switch (event)&#10;     {&#10;-    case ESP_SPP_INIT_EVT:&#10;+    case ESP_SPP_INIT_EVT: // Enum 0 - When SPP is initialized&#10;         log_i(&quot;ESP_SPP_INIT_EVT&quot;);&#10; #ifdef ESP_IDF_VERSION_MAJOR&#10;         esp_bt_gap_set_scan_mode(ESP_BT_CONNECTABLE, ESP_BT_GENERAL_DISCOVERABLE);&#10;@@ -273,80 +264,11 @@ static void esp_spp_cb(esp_spp_cb_event_t event, esp_spp_cb_param_t *param)&#10;         xEventGroupSetBits(_spp_event_group, SPP_RUNNING);&#10;         break;&#10; &#10;-    case ESP_SPP_SRV_OPEN_EVT://Server connection open&#10;-        if (param-&gt;srv_open.status == ESP_SPP_SUCCESS) {&#10;-            log_i(&quot;ESP_SPP_SRV_OPEN_EVT: %u&quot;, _spp_client);&#10;-            if (!_spp_client){&#10;-                _spp_client = param-&gt;srv_open.handle;&#10;-                _spp_tx_buffer_len = 0;&#10;-            } else {&#10;-                secondConnectionAttempt = true;&#10;-                esp_spp_disconnect(param-&gt;srv_open.handle);&#10;-            }&#10;-            xEventGroupClearBits(_spp_event_group, SPP_DISCONNECTED);&#10;-            xEventGroupSetBits(_spp_event_group, SPP_CONNECTED);&#10;-        } else {&#10;-            log_e(&quot;ESP_SPP_SRV_OPEN_EVT Failed!, status:%d&quot;, param-&gt;srv_open.status);&#10;-        }&#10;-        break;&#10;-&#10;-    case ESP_SPP_CLOSE_EVT://Client connection closed&#10;-        if ((param-&gt;close.async == false &amp;&amp; param-&gt;close.status == ESP_SPP_SUCCESS) || param-&gt;close.async) {&#10;-            log_i(&quot;ESP_SPP_CLOSE_EVT status:%d handle:%d close_by_remote:%d attempt %u&quot;, param-&gt;close.status,&#10;-                 param-&gt;close.handle, param-&gt;close.async, secondConnectionAttempt);&#10;-            if(secondConnectionAttempt) {&#10;-                secondConnectionAttempt = false;&#10;-            } else {&#10;-                _spp_client = 0;&#10;-                xEventGroupSetBits(_spp_event_group, SPP_DISCONNECTED);&#10;-                xEventGroupSetBits(_spp_event_group, SPP_CONGESTED);&#10;-                xEventGroupSetBits(_spp_event_group, SPP_CLOSED);&#10;-                xEventGroupClearBits(_spp_event_group, SPP_CONNECTED);&#10;-            }        &#10;-        } else {&#10;-            log_e(&quot;ESP_SPP_CLOSE_EVT failed!, status:%d&quot;, param-&gt;close.status);&#10;-        }&#10;-        break;&#10;-&#10;-    case ESP_SPP_CONG_EVT://connection congestion status changed&#10;-        if(param-&gt;cong.cong){&#10;-            xEventGroupClearBits(_spp_event_group, SPP_CONGESTED);&#10;-        } else {&#10;-            xEventGroupSetBits(_spp_event_group, SPP_CONGESTED);&#10;-        }&#10;-        log_v(&quot;ESP_SPP_CONG_EVT: %s&quot;, param-&gt;cong.cong?&quot;CONGESTED&quot;:&quot;FREE&quot;);&#10;-        break;&#10;-&#10;-    case ESP_SPP_WRITE_EVT://write operation completed&#10;-        if (param-&gt;write.status == ESP_SPP_SUCCESS) {&#10;-            if(param-&gt;write.cong){&#10;-                xEventGroupClearBits(_spp_event_group, SPP_CONGESTED);&#10;-            }&#10;-            log_v(&quot;ESP_SPP_WRITE_EVT: %u %s&quot;, param-&gt;write.len, param-&gt;write.cong?&quot;CONGESTED&quot;:&quot;&quot;);&#10;-        } else {&#10;-            log_e(&quot;ESP_SPP_WRITE_EVT failed!, status:%d&quot;, param-&gt;write.status);&#10;-        }&#10;-        xSemaphoreGive(_spp_tx_done);//we can try to send another packet&#10;-        break;&#10;-&#10;-    case ESP_SPP_DATA_IND_EVT://connection received data&#10;-        log_v(&quot;ESP_SPP_DATA_IND_EVT len=%d handle=%d&quot;, param-&gt;data_ind.len, param-&gt;data_ind.handle);&#10;-        //esp_log_buffer_hex(&quot;&quot;,param-&gt;data_ind.data,param-&gt;data_ind.len); //for low level debug&#10;-        //ets_printf(&quot;r:%u\n&quot;, param-&gt;data_ind.len);&#10;-&#10;-        if(custom_data_callback){&#10;-            custom_data_callback(param-&gt;data_ind.data, param-&gt;data_ind.len);&#10;-        } else if (_spp_rx_queue != NULL){&#10;-            for (int i = 0; i &lt; param-&gt;data_ind.len; i++){&#10;-                if(xQueueSend(_spp_rx_queue, param-&gt;data_ind.data + i, (TickType_t)0) != pdTRUE){&#10;-                    log_e(&quot;RX Full! Discarding %u bytes&quot;, param-&gt;data_ind.len - i);&#10;-                    break;&#10;-                }&#10;-            }&#10;-        }&#10;+    case ESP_SPP_UNINIT_EVT: // Enum 1 - When SPP is deinitialized&#10;+        log_i(&quot;ESP_SPP_UNINIT_EVT: SPP is deinitialized&quot;);&#10;         break;&#10; &#10;-    case ESP_SPP_DISCOVERY_COMP_EVT://discovery complete&#10;+    case ESP_SPP_DISCOVERY_COMP_EVT: // Enum 8 - When SDP discovery complete&#10;         log_i(&quot;ESP_SPP_DISCOVERY_COMP_EVT num=%d&quot;, param-&gt;disc_comp.scn_num);&#10;         if (param-&gt;disc_comp.status == ESP_SPP_SUCCESS) {&#10;             for(int i=0; i &lt; param-&gt;disc_comp.scn_num; i++) {&#10;@@ -380,7 +302,7 @@ static void esp_spp_cb(esp_spp_cb_event_t event, esp_spp_cb_param_t *param)&#10;         xEventGroupSetBits(_bt_event_group, BT_SDP_COMPLETED);&#10;         break;&#10; &#10;-    case ESP_SPP_OPEN_EVT://Client connection open&#10;+    case ESP_SPP_OPEN_EVT: // Enum 26 - When SPP Client connection open&#10;         log_i(&quot;ESP_SPP_OPEN_EVT&quot;);&#10;         if (!_spp_client){&#10;                 _spp_client = param-&gt;open.handle;&#10;@@ -393,11 +315,29 @@ static void esp_spp_cb(esp_spp_cb_event_t event, esp_spp_cb_param_t *param)&#10;         xEventGroupSetBits(_spp_event_group, SPP_CONGESTED);&#10;         break;&#10; &#10;-    case ESP_SPP_START_EVT://server started&#10;+    case ESP_SPP_CLOSE_EVT: // Enum 27 - When SPP connection closed&#10;+        if ((param-&gt;close.async == false &amp;&amp; param-&gt;close.status == ESP_SPP_SUCCESS) || param-&gt;close.async) {&#10;+            log_i(&quot;ESP_SPP_CLOSE_EVT status:%d handle:%d close_by_remote:%d attempt %u&quot;, param-&gt;close.status,&#10;+                 param-&gt;close.handle, param-&gt;close.async, secondConnectionAttempt);&#10;+            if(secondConnectionAttempt) {&#10;+                secondConnectionAttempt = false;&#10;+            } else {&#10;+                _spp_client = 0;&#10;+                xEventGroupSetBits(_spp_event_group, SPP_DISCONNECTED);&#10;+                xEventGroupSetBits(_spp_event_group, SPP_CONGESTED);&#10;+                xEventGroupSetBits(_spp_event_group, SPP_CLOSED);&#10;+                xEventGroupClearBits(_spp_event_group, SPP_CONNECTED);&#10;+            }&#10;+        } else {&#10;+            log_e(&quot;ESP_SPP_CLOSE_EVT failed!, status:%d&quot;, param-&gt;close.status);&#10;+        }&#10;+        break;&#10;+&#10;+    case ESP_SPP_START_EVT: // Enum 28 - When SPP server started&#10;         log_i(&quot;ESP_SPP_START_EVT&quot;);&#10;         break;&#10; &#10;-    case ESP_SPP_CL_INIT_EVT://client initiated a connection&#10;+    case ESP_SPP_CL_INIT_EVT: // Enum 29 - When SPP client initiated a connection&#10;         if (param-&gt;cl_init.status == ESP_SPP_SUCCESS) {&#10;             log_i(&quot;ESP_SPP_CL_INIT_EVT handle:%d sec_id:%d&quot;, param-&gt;cl_init.handle, param-&gt;cl_init.sec_id);&#10;         } else {&#10;@@ -405,8 +345,75 @@ static void esp_spp_cb(esp_spp_cb_event_t event, esp_spp_cb_param_t *param)&#10;         }&#10;         break;&#10; &#10;+    case ESP_SPP_DATA_IND_EVT: // Enum 30 - When SPP connection received data, only for ESP_SPP_MODE_CB&#10;+        log_v(&quot;ESP_SPP_DATA_IND_EVT len=%d handle=%d&quot;, param-&gt;data_ind.len, param-&gt;data_ind.handle);&#10;+        //esp_log_buffer_hex(&quot;&quot;,param-&gt;data_ind.data,param-&gt;data_ind.len); //for low level debug&#10;+        //ets_printf(&quot;r:%u\n&quot;, param-&gt;data_ind.len);&#10;+&#10;+        if(custom_data_callback){&#10;+            custom_data_callback(param-&gt;data_ind.data, param-&gt;data_ind.len);&#10;+        } else if (_spp_rx_queue != NULL){&#10;+            for (int i = 0; i &lt; param-&gt;data_ind.len; i++){&#10;+                if(xQueueSend(_spp_rx_queue, param-&gt;data_ind.data + i, (TickType_t)0) != pdTRUE){&#10;+                    log_e(&quot;RX Full! Discarding %u bytes&quot;, param-&gt;data_ind.len - i);&#10;+                    break;&#10;+                }&#10;+            }&#10;+        }&#10;+        break;&#10;+&#10;+    case ESP_SPP_CONG_EVT: // Enum 31 - When SPP connection congestion status changed, only for ESP_SPP_MODE_CB&#10;+        if(param-&gt;cong.cong){&#10;+            xEventGroupClearBits(_spp_event_group, SPP_CONGESTED);&#10;+        } else {&#10;+            xEventGroupSetBits(_spp_event_group, SPP_CONGESTED);&#10;+        }&#10;+        log_v(&quot;ESP_SPP_CONG_EVT: %s&quot;, param-&gt;cong.cong?&quot;CONGESTED&quot;:&quot;FREE&quot;);&#10;+        break;&#10;+&#10;+    case ESP_SPP_WRITE_EVT: // Enum 33 - When SPP write operation completes, only for ESP_SPP_MODE_CB&#10;+        if (param-&gt;write.status == ESP_SPP_SUCCESS) {&#10;+            if(param-&gt;write.cong){&#10;+                xEventGroupClearBits(_spp_event_group, SPP_CONGESTED);&#10;+            }&#10;+            log_v(&quot;ESP_SPP_WRITE_EVT: %u %s&quot;, param-&gt;write.len, param-&gt;write.cong?&quot;CONGESTED&quot;:&quot;&quot;);&#10;+        } else {&#10;+            log_e(&quot;ESP_SPP_WRITE_EVT failed!, status:%d&quot;, param-&gt;write.status);&#10;+        }&#10;+        xSemaphoreGive(_spp_tx_done);//we can try to send another packet&#10;+        break;&#10;+&#10;+    case ESP_SPP_SRV_OPEN_EVT: // Enum 34 - When SPP Server connection open&#10;+        if (param-&gt;srv_open.status == ESP_SPP_SUCCESS) {&#10;+            log_i(&quot;ESP_SPP_SRV_OPEN_EVT: %u&quot;, _spp_client);&#10;+            if (!_spp_client){&#10;+                _spp_client = param-&gt;srv_open.handle;&#10;+                _spp_tx_buffer_len = 0;&#10;+            } else {&#10;+                secondConnectionAttempt = true;&#10;+                esp_spp_disconnect(param-&gt;srv_open.handle);&#10;+            }&#10;+            xEventGroupClearBits(_spp_event_group, SPP_DISCONNECTED);&#10;+            xEventGroupSetBits(_spp_event_group, SPP_CONNECTED);&#10;+        } else {&#10;+            log_e(&quot;ESP_SPP_SRV_OPEN_EVT Failed!, status:%d&quot;, param-&gt;srv_open.status);&#10;+        }&#10;+        break;&#10;+&#10;+    case ESP_SPP_SRV_STOP_EVT: // Enum 35 - When SPP server stopped&#10;+        log_i(&quot;ESP_SPP_SRV_STOP_EVT&quot;);&#10;+        break;&#10;+&#10;+    case ESP_SPP_VFS_REGISTER_EVT: // Enum 36 - When SPP VFS register&#10;+        log_i(&quot;ESP_SPP_VFS_REGISTER_EVT&quot;);&#10;+        break;&#10;+&#10;+    case ESP_SPP_VFS_UNREGISTER_EVT: // Enum 37 - When SPP VFS unregister&#10;+        log_i(&quot;ESP_SPP_VFS_UNREGISTER_EVT&quot;);&#10;+        break;&#10;+&#10;     default:&#10;-        log_i(&quot;ESP_SPP_* event unhandled %d&quot;, event);&#10;+        log_i(&quot;ESP_SPP_* event #%d unhandled&quot;, event);&#10;         break;&#10;     }&#10;     if(custom_spp_callback)(*custom_spp_callback)(event, param);&#10;@@ -416,10 +423,11 @@ void BluetoothSerial::onData(BluetoothSerialDataCb cb){&#10;     custom_data_callback = cb;&#10; }&#10; &#10;+&#10; static void esp_bt_gap_cb(esp_bt_gap_cb_event_t event, esp_bt_gap_cb_param_t *param)&#10; {&#10;     switch(event){&#10;-        case ESP_BT_GAP_DISC_RES_EVT: {&#10;+        case ESP_BT_GAP_DISC_RES_EVT: { // Enum 0 - Device discovery result event&#10;             log_i(&quot;ESP_BT_GAP_DISC_RES_EVT properties=%d&quot;, param-&gt;disc_res.num_prop);&#10; #if (ARDUHAL_LOG_LEVEL &gt;= ARDUHAL_LOG_LEVEL_INFO)&#10;             char bda_str[18];&#10;@@ -430,21 +438,7 @@ static void esp_bt_gap_cb(esp_bt_gap_cb_event_t event, esp_bt_gap_cb_param_t *pa&#10;             char peer_bdname[ESP_BT_GAP_MAX_BDNAME_LEN + 1];&#10;             for (int i = 0; i &lt; param-&gt;disc_res.num_prop; i++) {&#10;                 switch(param-&gt;disc_res.prop[i].type) {&#10;-                    case ESP_BT_GAP_DEV_PROP_EIR:  &#10;-                        if (get_name_from_eir((uint8_t*)param-&gt;disc_res.prop[i].val, peer_bdname, &amp;peer_bdname_len)) {&#10;-                            log_i(&quot;ESP_BT_GAP_DISC_RES_EVT : EIR : %s : %d&quot;, peer_bdname, peer_bdname_len);&#10;-                            if (strlen(_remote_name) == peer_bdname_len&#10;-                                &amp;&amp; strncmp(peer_bdname, _remote_name, peer_bdname_len) == 0) {&#10;-                                log_v(&quot;ESP_BT_GAP_DISC_RES_EVT : SPP_START_DISCOVERY_EIR : %s&quot;, peer_bdname, peer_bdname_len);&#10;-                                _isRemoteAddressSet = true;&#10;-                                memcpy(_peer_bd_addr, param-&gt;disc_res.bda, ESP_BD_ADDR_LEN);&#10;-                                esp_bt_gap_cancel_discovery();&#10;-                                esp_spp_start_discovery(_peer_bd_addr);&#10;-                            }&#10;-                        }&#10;-                        break;&#10;-&#10;-                    case ESP_BT_GAP_DEV_PROP_BDNAME:&#10;+                    case ESP_BT_GAP_DEV_PROP_BDNAME: // Enum 1 - Bluetooth device name, value type is int8_t []&#10;                         peer_bdname_len = param-&gt;disc_res.prop[i].len;&#10;                         memcpy(peer_bdname, param-&gt;disc_res.prop[i].val, peer_bdname_len);&#10;                         peer_bdname_len--; // len includes 0 terminator&#10;@@ -456,10 +450,10 @@ static void esp_bt_gap_cb(esp_bt_gap_cb_event_t event, esp_bt_gap_cb_param_t *pa&#10;                             memcpy(_peer_bd_addr, param-&gt;disc_res.bda, ESP_BD_ADDR_LEN);&#10;                             esp_bt_gap_cancel_discovery();&#10;                             esp_spp_start_discovery(_peer_bd_addr);&#10;-                        } &#10;+                        }&#10;                         break;&#10; &#10;-                    case ESP_BT_GAP_DEV_PROP_COD:&#10;+                    case ESP_BT_GAP_DEV_PROP_COD: // Enum 2 - Class of Device, value type is uint32_t&#10;                         if (param-&gt;disc_res.prop[i].len &lt;= sizeof(int)) {&#10;                             uint32_t cod = 0;&#10;                             memcpy(&amp;cod, param-&gt;disc_res.prop[i].val, param-&gt;disc_res.prop[i].len);&#10;@@ -470,7 +464,7 @@ static void esp_bt_gap_cb(esp_bt_gap_cb_event_t event, esp_bt_gap_cb_param_t *pa&#10;                         }&#10;                         break;&#10; &#10;-                    case ESP_BT_GAP_DEV_PROP_RSSI:&#10;+                    case ESP_BT_GAP_DEV_PROP_RSSI: // Enum 3 - Received Signal strength Indication, value type is int8_t, ranging from -128 to 127&#10;                         if (param-&gt;disc_res.prop[i].len &lt;= sizeof(int)) {&#10;                             uint8_t rssi = 0;&#10;                             memcpy(&amp;rssi, param-&gt;disc_res.prop[i].val, param-&gt;disc_res.prop[i].len);&#10;@@ -480,7 +474,21 @@ static void esp_bt_gap_cb(esp_bt_gap_cb_event_t event, esp_bt_gap_cb_param_t *pa&#10;                             log_d(&quot;ESP_BT_GAP_DEV_PROP_RSSI invalid RSSI: Value size larger than integer&quot;);&#10;                         }&#10;                         break;&#10;-                        &#10;+&#10;+                    case ESP_BT_GAP_DEV_PROP_EIR: // Enum 4 - Extended Inquiry Response, value type is uint8_t []&#10;+                        if (get_name_from_eir((uint8_t*)param-&gt;disc_res.prop[i].val, peer_bdname, &amp;peer_bdname_len)) {&#10;+                            log_i(&quot;ESP_BT_GAP_DISC_RES_EVT : EIR : %s : %d&quot;, peer_bdname, peer_bdname_len);&#10;+                            if (strlen(_remote_name) == peer_bdname_len&#10;+                                &amp;&amp; strncmp(peer_bdname, _remote_name, peer_bdname_len) == 0) {&#10;+                                log_v(&quot;ESP_BT_GAP_DISC_RES_EVT : SPP_START_DISCOVERY_EIR : %s&quot;, peer_bdname, peer_bdname_len);&#10;+                                _isRemoteAddressSet = true;&#10;+                                memcpy(_peer_bd_addr, param-&gt;disc_res.bda, ESP_BD_ADDR_LEN);&#10;+                                esp_bt_gap_cancel_discovery();&#10;+                                esp_spp_start_discovery(_peer_bd_addr);&#10;+                            }&#10;+                        }&#10;+                        break;&#10;+&#10;                     default:&#10;                         log_i(&quot;ESP_BT_GAP_DISC_RES_EVT unknown property [%d]:type:%d&quot;, i, param-&gt;disc_res.prop[i].type);&#10;                         break;&#10;@@ -498,7 +506,7 @@ static void esp_bt_gap_cb(esp_bt_gap_cb_event_t event, esp_bt_gap_cb_param_t *pa&#10;         }&#10;         break;&#10; &#10;-        case ESP_BT_GAP_DISC_STATE_CHANGED_EVT:&#10;+        case ESP_BT_GAP_DISC_STATE_CHANGED_EVT: // Enum 1 - Discovery state changed event&#10;             if (param-&gt;disc_st_chg.state == ESP_BT_GAP_DISCOVERY_STOPPED) {&#10;                 log_i(&quot;ESP_BT_GAP_DISC_STATE_CHANGED_EVT stopped&quot;);&#10;                 xEventGroupClearBits(_bt_event_group, BT_DISCOVERY_RUNNING);&#10;@@ -510,15 +518,15 @@ static void esp_bt_gap_cb(esp_bt_gap_cb_event_t event, esp_bt_gap_cb_param_t *pa&#10;             }&#10;             break;&#10; &#10;-        case ESP_BT_GAP_RMT_SRVCS_EVT:&#10;+        case ESP_BT_GAP_RMT_SRVCS_EVT: // Enum 2 - Get remote services event&#10;             log_i( &quot;ESP_BT_GAP_RMT_SRVCS_EVT: status = %d, num_uuids = %d&quot;, param-&gt;rmt_srvcs.stat, param-&gt;rmt_srvcs.num_uuids);&#10;             break;&#10; &#10;-        case ESP_BT_GAP_RMT_SRVC_REC_EVT:&#10;+        case ESP_BT_GAP_RMT_SRVC_REC_EVT: // Enum 3 - Get remote service record event&#10;             log_i(&quot;ESP_BT_GAP_RMT_SRVC_REC_EVT: status = %d&quot;, param-&gt;rmt_srvc_rec.stat);&#10;             break;&#10; &#10;-        case ESP_BT_GAP_AUTH_CMPL_EVT:&#10;+        case ESP_BT_GAP_AUTH_CMPL_EVT: // Enum 4 - Authentication complete event&#10;             if (param-&gt;auth_cmpl.stat == ESP_BT_STATUS_SUCCESS) {&#10;                 log_v(&quot;authentication success: %s&quot;, param-&gt;auth_cmpl.device_name);&#10;                 if (auth_complete_callback) {&#10;@@ -531,58 +539,89 @@ static void esp_bt_gap_cb(esp_bt_gap_cb_event_t event, esp_bt_gap_cb_param_t *pa&#10;                 }&#10;             }&#10;             break;&#10;-&#10;-        case ESP_BT_GAP_PIN_REQ_EVT:&#10;-            // default pairing pins&#10;-            log_i(&quot;ESP_BT_GAP_PIN_REQ_EVT min_16_digit:%d&quot;, param-&gt;pin_req.min_16_digit);&#10;-            if (param-&gt;pin_req.min_16_digit) {&#10;-                log_i(&quot;Input pin code: 0000 0000 0000 0000&quot;);&#10;-                esp_bt_pin_code_t pin_code;&#10;-                memset(pin_code, '0', ESP_BT_PIN_CODE_LEN);&#10;-                esp_bt_gap_pin_reply(param-&gt;pin_req.bda, true, 16, pin_code);&#10;+        case ESP_BT_GAP_PIN_REQ_EVT: // Enum 5 - Legacy Pairing Pin code request&#10;+            log_i(&quot;ESP_BT_GAP_PIN_REQ_EVT (min_16_digit=%d)&quot;, param-&gt;pin_req.min_16_digit);&#10;+            if (param-&gt;pin_req.min_16_digit &amp;&amp; _pin_code_len &lt; 16) {&#10;+                esp_bt_gap_pin_reply(param-&gt;pin_req.bda, false, 0, NULL);&#10;             } else {&#10;-                log_i(&quot;Input pin code: 1234&quot;);&#10;-                esp_bt_pin_code_t pin_code;&#10;-                memcpy(pin_code, &quot;1234&quot;, 4);&#10;-                esp_bt_gap_pin_reply(param-&gt;pin_req.bda, true, 4, pin_code);&#10;+                //log_i(&quot;Input pin code: \&quot;%s\&quot;=0x%x&quot;, _pin_code);&#10;+                log_i(&quot;Input pin code: \&quot;%.*s\&quot;=0x%x&quot;, _pin_code_len, _pin_code, *(int*)_pin_code);&#10;+                esp_bt_gap_pin_reply(param-&gt;pin_req.bda, true, _pin_code_len, _pin_code);&#10;             }&#10;             break;&#10;-       &#10;-        case ESP_BT_GAP_CFM_REQ_EVT:&#10;+#ifdef CONFIG_BT_SSP_ENABLED&#10;+        case ESP_BT_GAP_CFM_REQ_EVT: // Enum 6 - Security Simple Pairing User Confirmation request.&#10;             log_i(&quot;ESP_BT_GAP_CFM_REQ_EVT Please compare the numeric value: %d&quot;, param-&gt;cfm_req.num_val);&#10;             if (confirm_request_callback) {&#10;                 memcpy(current_bd_addr, param-&gt;cfm_req.bda, sizeof(esp_bd_addr_t));&#10;                 confirm_request_callback(param-&gt;cfm_req.num_val);&#10;             }&#10;             else {&#10;-                esp_bt_gap_ssp_confirm_reply(param-&gt;cfm_req.bda, true);&#10;+                log_w(&quot;ESP_BT_GAP_CFM_REQ_EVT: confirm_request_callback does not exist - refusing pairing&quot;);&#10;+                esp_bt_gap_ssp_confirm_reply(param-&gt;cfm_req.bda, false);&#10;             }&#10;             break;&#10;+#endif&#10; &#10;-        case ESP_BT_GAP_KEY_NOTIF_EVT:&#10;+        case ESP_BT_GAP_KEY_NOTIF_EVT: // Enum 7 - Security Simple Pairing Passkey Notification&#10;             log_i(&quot;ESP_BT_GAP_KEY_NOTIF_EVT passkey:%d&quot;, param-&gt;key_notif.passkey);&#10;             break;&#10; &#10;-        case ESP_BT_GAP_KEY_REQ_EVT:&#10;+#ifdef CONFIG_BT_SSP_ENABLED&#10;+        case ESP_BT_GAP_KEY_REQ_EVT: // Enum 8 - Security Simple Pairing Passkey request&#10;             log_i(&quot;ESP_BT_GAP_KEY_REQ_EVT Please enter passkey!&quot;);&#10;+            if (key_request_callback) {&#10;+                memcpy(current_bd_addr, param-&gt;cfm_req.bda, sizeof(esp_bd_addr_t));&#10;+                key_request_callback();&#10;+            } else {&#10;+                log_w(&quot;ESP_BT_GAP_KEY_REQ_EVT: key_request_callback does not exist - refuseing pairing&quot;);&#10;+                esp_bt_gap_ssp_confirm_reply(param-&gt;cfm_req.bda, false);&#10;+            }&#10;             break;&#10;+#endif&#10; &#10;-        case ESP_BT_GAP_CONFIG_EIR_DATA_EVT:&#10;+        case ESP_BT_GAP_READ_RSSI_DELTA_EVT: // Enum 9 - Read rssi event&#10;+            log_i(&quot;ESP_BT_GAP_READ_RSSI_DELTA_EVT Read rssi event&quot;);&#10;+            break;&#10;+        case ESP_BT_GAP_CONFIG_EIR_DATA_EVT: // Enum 10 - Config EIR data event&#10;             log_i(&quot;ESP_BT_GAP_CONFIG_EIR_DATA_EVT: stat:%d num:%d&quot;, param-&gt;config_eir_data.stat, param-&gt;config_eir_data.eir_type_num);&#10;             break;&#10; &#10;-        case ESP_BT_GAP_READ_REMOTE_NAME_EVT:&#10;+        case ESP_BT_GAP_SET_AFH_CHANNELS_EVT: // Enum 11 - Set AFH channels event&#10;+            log_i(&quot;ESP_BT_GAP_SET_AFH_CHANNELS_EVT Set AFH channels event&quot;);&#10;+            break;&#10;+&#10;+        case ESP_BT_GAP_READ_REMOTE_NAME_EVT: // Enum 12 - Read Remote Name event&#10;             if (param-&gt;read_rmt_name.stat == ESP_BT_STATUS_SUCCESS ) {&#10;                 log_i(&quot;ESP_BT_GAP_READ_REMOTE_NAME_EVT: %s&quot;, param-&gt;read_rmt_name.rmt_name);&#10;+                memcpy(_rmt_name, param-&gt;read_rmt_name.rmt_name, ESP_BT_GAP_MAX_BDNAME_LEN + 1);&#10;+                _rmt_name_valid = true;&#10;             } else {&#10;                 log_i(&quot;ESP_BT_GAP_READ_REMOTE_NAME_EVT: no success stat:%d&quot;, param-&gt;read_rmt_name.stat);&#10;             }&#10;             break;&#10; &#10;-        case ESP_BT_GAP_MODE_CHG_EVT:&#10;+&#10;+        case ESP_BT_GAP_MODE_CHG_EVT: // Enum 13&#10;             log_i(&quot;ESP_BT_GAP_MODE_CHG_EVT: mode: %d&quot;, param-&gt;mode_chg.mode);&#10;             break;&#10; &#10;+        case ESP_BT_GAP_REMOVE_BOND_DEV_COMPLETE_EVT: // Enum - 14 remove bond device complete event&#10;+            log_i(&quot;ESP_BT_GAP_REMOVE_BOND_DEV_COMPLETE_EVT remove bond device complete event&quot;);&#10;+            break;&#10;+&#10;+        case ESP_BT_GAP_QOS_CMPL_EVT: // Enum 15 - QOS complete event&#10;+            log_i(&quot;ESP_BT_GAP_QOS_CMPL_EVT QOS complete event&quot;);&#10;+            break;&#10;+&#10;+        case ESP_BT_GAP_ACL_CONN_CMPL_STAT_EVT: // Enum 16 - ACL connection complete status event&#10;+            log_i(&quot;ESP_BT_GAP_ACL_CONN_CMPL_STAT_EVT ACL connection complete status event&quot;);&#10;+            break;&#10;+&#10;+        case ESP_BT_GAP_ACL_DISCONN_CMPL_STAT_EVT: // Enum 17 - ACL disconnection complete status event&#10;+            log_i(&quot;ESP_BT_GAP_ACL_DISCONN_CMPL_STAT_EVT ACL disconnection complete status event: reason %d, handle %d&quot;, param-&gt;acl_disconn_cmpl_stat.reason, param-&gt;acl_disconn_cmpl_stat.handle);&#10;+            break;&#10;+&#10;         default:&#10;             log_i(&quot;ESP-BT_GAP_* unknown message: %d&quot;, event);&#10;             break;&#10;@@ -678,24 +717,26 @@ static bool _init_bt(const char *deviceName)&#10;         return false;&#10;     }&#10; &#10;-    // if (esp_bt_sleep_disable() != ESP_OK){&#10;-    //     log_e(&quot;esp_bt_sleep_disable failed&quot;);&#10;-    // }&#10;-&#10;     log_i(&quot;device name set&quot;);&#10;     esp_bt_dev_set_device_name(deviceName);&#10; &#10;-    if (_isPinSet) {&#10;-        log_i(&quot;pin set&quot;);&#10;-        btSetPin();&#10;-    }&#10;-&#10;+#ifdef CONFIG_BT_SSP_ENABLED&#10;     if (_enableSSP) {&#10;         log_i(&quot;Simple Secure Pairing&quot;);&#10;         esp_bt_sp_param_t param_type = ESP_BT_SP_IOCAP_MODE;&#10;-        esp_bt_io_cap_t iocap = ESP_BT_IO_CAP_IO;&#10;+        esp_bt_io_cap_t iocap;&#10;+        if(_IO_CAP_INPUT &amp;&amp; _IO_CAP_OUTPUT){&#10;+            iocap = ESP_BT_IO_CAP_IO; // Display with prompt&#10;+        }else if(!_IO_CAP_INPUT &amp;&amp; _IO_CAP_OUTPUT){&#10;+            iocap = ESP_BT_IO_CAP_OUT; // DisplayOnly&#10;+        }else if(_IO_CAP_INPUT &amp;&amp; !_IO_CAP_OUTPUT){&#10;+            iocap = ESP_BT_IO_CAP_IN; // Input only&#10;+        }else if(!_IO_CAP_INPUT &amp;&amp; !_IO_CAP_OUTPUT){&#10;+            iocap = ESP_BT_IO_CAP_NONE; // No input/output&#10;+        }&#10;         esp_bt_gap_set_security_param(param_type, &amp;iocap, sizeof(uint8_t));&#10;     }&#10;+#endif&#10; &#10;     // the default BTA_DM_COD_LOUDSPEAKER does not work with the macOS BT stack&#10;     esp_bt_cod_t cod;&#10;@@ -871,11 +912,22 @@ void BluetoothSerial::end()&#10;     _stop_bt();&#10; }&#10; &#10;+#ifdef CONFIG_BT_SSP_ENABLED&#10; void BluetoothSerial::onConfirmRequest(ConfirmRequestCb cb)&#10; {&#10;     confirm_request_callback = cb;&#10; }&#10; &#10;+void BluetoothSerial::onKeyRequest(KeyRequestCb cb)&#10;+{&#10;+    key_request_callback = cb;&#10;+}&#10;+&#10;+void BluetoothSerial::respondPasskey(uint32_t passkey){&#10;+    esp_bt_gap_ssp_passkey_reply(current_bd_addr, true, passkey);&#10;+}&#10;+#endif&#10;+&#10; void BluetoothSerial::onAuthComplete(AuthCompleteCb cb)&#10; {&#10;     auth_complete_callback = cb;&#10;@@ -883,7 +935,7 @@ void BluetoothSerial::onAuthComplete(AuthCompleteCb cb)&#10; &#10; void BluetoothSerial::confirmReply(boolean confirm)&#10; {&#10;-    esp_bt_gap_ssp_confirm_reply(current_bd_addr, confirm);  &#10;+    esp_bt_gap_ssp_confirm_reply(current_bd_addr, confirm);&#10; }&#10; &#10; &#10;@@ -893,32 +945,54 @@ esp_err_t BluetoothSerial::register_callback(esp_spp_cb_t * callback)&#10;     return ESP_OK;&#10; }&#10; &#10;-//Simple Secure Pairing&#10;+#ifdef CONFIG_BT_SSP_ENABLED&#10;+// Enable Simple Secure Pairing (using generated PIN)&#10;+// This must be called before calling begin, otherwise has no effect!&#10; void BluetoothSerial::enableSSP() {&#10;+    if(isReady(false, READY_TIMEOUT)){&#10;+        log_i(&quot;Attempted to enable SSP for already initialized driver. Restart to take effect with end() followed by begin()&quot;);&#10;+        return;&#10;+    }&#10;     _enableSSP = true;&#10;+    _IO_CAP_INPUT = true;&#10;+    _IO_CAP_OUTPUT = true;&#10; }&#10;-/*&#10;-     * Set default parameters for Legacy Pairing&#10;-     * Use fixed pin code&#10;-*/&#10;-bool BluetoothSerial::setPin(const char *pin) {&#10;-    log_i(&quot;pin: %s&quot;, pin);&#10;-    bool isEmpty =  !(pin  &amp;&amp; *pin);&#10;-    if (isEmpty &amp;&amp; !_isPinSet) {&#10;-        return true; // nothing to do&#10;-    } else if (!isEmpty){&#10;-        _pin_len = strlen(pin);&#10;-        memcpy(_pin_code, pin, _pin_len);&#10;-    } else {&#10;-        _pin_len = 0; // resetting pin to none (default)&#10;-    }&#10;-    _pin_code[_pin_len] = 0;&#10;-    _isPinSet = true;&#10;-    if (isReady(false, READY_TIMEOUT)) {&#10;-        btSetPin();&#10;+&#10;+// Enable Simple Secure Pairing (using generated PIN)&#10;+// This must be called before calling begin, otherwise has no effect!&#10;+// Behavior description:&#10;+// When both Input and Output are false only the other device authenticates pairing without any pin.&#10;+// When Output is true and Input is false only the other device authenticates pairing without any pin.&#10;+// When both Input and Output are true both devices display randomly generated code and if they match authenticate pairing on both devices&#10;+//   - This must be implemented by registering callback via onConfirmRequest() and in this callback request user input and call confirmReply(true); if the authenticated&#10;+//      otherwise call `confirmReply(false)` to reject the pairing.&#10;+// When Input is true and Output is false User will be required to input the passkey to the ESP32 device to authenticate.&#10;+//   - This must be implemented by registering callback via onKeyRequest() and in this callback the entered passkey will be responded via respondPasskey(passkey);&#10;+void BluetoothSerial::enableSSP(bool inputCpability, bool outputCapability) {&#10;+    log_i(&quot;Enabling SSP: input capability=%d; output capability=%d&quot;, inputCpability, outputCapability);&#10;+    _enableSSP = true;&#10;+    _IO_CAP_INPUT = inputCpability;&#10;+    _IO_CAP_OUTPUT = outputCapability;&#10;+}&#10;+&#10;+// Disable Simple Secure Pairing (using generated PIN)&#10;+// This must be called before calling begin, otherwise has no effect!&#10;+void BluetoothSerial::disableSSP() {&#10;+    _enableSSP = false;&#10;+}&#10;+&#10;+#else&#10;+&#10;+bool BluetoothSerial::setPin(const char *pin, uint8_t pin_code_len){&#10;+    if(pin_code_len == 0 || pin_code_len &gt; 16){&#10;+        log_e(&quot;PIN code must be 1-16 Bytes long! Called with length %d&quot;, pin_code_len);&#10;+        return false;&#10;     }&#10;-    return true;&#10;+    _pin_code_len = pin_code_len;&#10;+    memcpy(_pin_code, pin, pin_code_len);&#10;+    return (esp_bt_gap_set_pin(ESP_BT_PIN_TYPE_FIXED, _pin_code_len, _pin_code) == ESP_OK);&#10; }&#10;+#endif&#10; &#10; bool BluetoothSerial::connect(String remoteName)&#10; {&#10;@@ -931,9 +1005,9 @@ bool BluetoothSerial::connect(String remoteName)&#10;     }&#10;     disconnect();&#10;     _doConnect = true;&#10;-    _isRemoteAddressSet = false;&#10;-&#9;_sec_mask = ESP_SPP_SEC_ENCRYPT|ESP_SPP_SEC_AUTHENTICATE;&#10;-&#9;_role = ESP_SPP_ROLE_MASTER;&#10;+    _isRemoteAddressSet = true;&#10;+    _sec_mask = ESP_SPP_SEC_ENCRYPT|ESP_SPP_SEC_AUTHENTICATE;&#10;+    _role = ESP_SPP_ROLE_MASTER;&#10;     strncpy(_remote_name, remoteName.c_str(), ESP_BT_GAP_MAX_BDNAME_LEN);&#10;     _remote_name[ESP_BT_GAP_MAX_BDNAME_LEN] = 0;&#10;     log_i(&quot;master : remoteName&quot;);&#10;@@ -974,8 +1048,8 @@ bool BluetoothSerial::connect(uint8_t remoteAddress[], int channel, esp_spp_sec_&#10;     _doConnect = true;&#10;     _remote_name[0] = 0;&#10;     _isRemoteAddressSet = true;&#10;-&#9;_sec_mask = sec_mask;&#10;-&#9;_role = role;&#10;+    _sec_mask = sec_mask;&#10;+    _role = role;&#10;     memcpy(_peer_bd_addr, remoteAddress, ESP_BD_ADDR_LEN);&#10;     log_i(&quot;master : remoteAddress&quot;);&#10;     xEventGroupClearBits(_spp_event_group, SPP_CLOSED);&#10;@@ -987,7 +1061,7 @@ bool BluetoothSerial::connect(uint8_t remoteAddress[], int channel, esp_spp_sec_&#10;             channel);&#10; #endif&#10;         if(esp_spp_connect(sec_mask, role, channel, _peer_bd_addr) != ESP_OK ) {&#10;-&#9;&#9;&#9;log_e(&quot;spp connect failed&quot;);&#10;+            log_e(&quot;spp connect failed&quot;);&#10;       retval = false;&#10;     } else {&#10;       retval = waitForConnect(READY_TIMEOUT);&#10;@@ -1088,14 +1162,16 @@ bool BluetoothSerial::isReady(bool checkMaster, int timeout) {&#10; &#10; /**&#10;  * @brief           RemoteName or address are not allowed to be set during discovery&#10;- *                  (otherwhise it might connect automatically and stop discovery)&#10;+ *                  (otherwise it might connect automatically and stop discovery)&#10;  * @param[in]       timeoutMs can range from MIN_INQ_TIME to MAX_INQ_TIME&#10;  * @return          in case of Error immediately Empty ScanResults.&#10;  */&#10; BTScanResults* BluetoothSerial::discover(int timeoutMs) {&#10;     scanResults.clear();&#10;-    if (timeoutMs &lt; MIN_INQ_TIME || timeoutMs &gt; MAX_INQ_TIME || strlen(_remote_name) || _isRemoteAddressSet)&#10;+    if (timeoutMs &lt; MIN_INQ_TIME || timeoutMs &gt; MAX_INQ_TIME){&#10;+        log_e(&quot;Timeout out of bounds: MIN=%d; MAX=%d; requested=%d&quot;, MIN_INQ_TIME, MAX_INQ_TIME, timeoutMs);&#10;         return nullptr;&#10;+    }&#10;     int timeout = timeoutMs / INQ_TIME;&#10;     log_i(&quot;discover::disconnect&quot;);&#10;     disconnect();&#10;@@ -1112,11 +1188,11 @@ BTScanResults* BluetoothSerial::discover(int timeoutMs) {&#10; &#10; /**&#10;  * @brief           RemoteName or address are not allowed to be set during discovery&#10;- *                  (otherwhise it might connect automatically and stop discovery)&#10;+ *                  (otherwise it might connect automatically and stop discovery)&#10;  * @param[in]       cb called when a [b]new[/b] device has been discovered&#10;  * @param[in]       timeoutMs can be 0 or range from MIN_INQ_TIME to MAX_INQ_TIME&#10;  *&#10;- * @return          Wheter start was successfull or problems with params&#10;+ * @return          Whether start was successful or problems with params&#10;  */&#10; bool BluetoothSerial::discoverAsync(BTAdvertisedDeviceCb cb, int timeoutMs) {&#10;     scanResults.clear();&#10;@@ -1139,7 +1215,7 @@ void BluetoothSerial::discoverAsyncStop() {&#10;     advertisedDeviceCb = nullptr;&#10; }&#10; &#10;-/** @brief      Clears scanresult entries */&#10;+/** @brief      Clears scanResult entries */&#10; void BluetoothSerial::discoverClear() {&#10;     scanResults.clear();&#10; }&#10;@@ -1211,4 +1287,108 @@ BTAddress BluetoothSerial::getBtAddressObject() {&#10; String BluetoothSerial::getBtAddressString() {&#10;     return getBtAddressObject().toString(true);&#10; }&#10;-#endif&#10;+&#10;+// Send a request to the remote device defined by the remoteAddress to send back its name.&#10;+// The name will be read by background task and stored. It can be later read with radRemoteName()&#10;+void BluetoothSerial::requestRemoteName(uint8_t remoteAddress[]){&#10;+    if(isReady(false, READY_TIMEOUT)){&#10;+        esp_bt_gap_read_remote_name(remoteAddress);&#10;+    }&#10;+}&#10;+&#10;+// If remote name is valid (was already received) this function will copy the name to the aprameter rmt_name&#10;+// The buffer must have size at least ESP_BT_GAP_MAX_BDNAME_LEN + 1&#10;+// If the name is valid the function will return true&#10;+// If the name is not valid (was not read yet) returns false&#10;+bool BluetoothSerial::readRemoteName(char rmt_name[ESP_BT_GAP_MAX_BDNAME_LEN + 1]){&#10;+    if(_rmt_name_valid){&#10;+        memcpy(rmt_name, _rmt_name, ESP_BT_GAP_MAX_BDNAME_LEN + 1);&#10;+        return true;&#10;+    }&#10;+    return false;&#10;+}&#10;+&#10;+// Set validity of remote name before reading name from different device&#10;+void BluetoothSerial::invalidateRemoteName(){&#10;+    _rmt_name_valid = false;&#10;+}&#10;+&#10;+int BluetoothSerial::getNumberOfBondedDevices(){&#10;+    return esp_bt_gap_get_bond_device_num();&#10;+}&#10;+&#10;+// Accepts the maximum number of devices that can fit in given array dev_list.&#10;+// Create you list this way: esp_bd_addr_t dev_list[dev_num];&#10;+// Returns number of retrieved devices (on error returns 0)&#10;+int BluetoothSerial::getBondedDevices(uint dev_num, esp_bd_addr_t *dev_list){&#10;+    // typedef uint8_t esp_bd_addr_t[ESP_BD_ADDR_LEN]&#10;+    if(dev_list == NULL){&#10;+        log_e(&quot;Device list is NULL&quot;);&#10;+        return 0;&#10;+    }&#10;+    if(dev_num == 0){&#10;+        log_e(&quot;Device number must be larger than 0!&quot;);&#10;+        return 0;&#10;+    }&#10;+    int _dev_num = dev_num;&#10;+    esp_bt_gap_get_bond_device_list(&amp;_dev_num, dev_list);&#10;+    return _dev_num;&#10;+}&#10;+&#10;+bool BluetoothSerial::deleteBondedDevice(uint8_t *remoteAddress){&#10;+    esp_err_t ret = esp_bt_gap_remove_bond_device(remoteAddress);&#10;+    if(ret == ESP_OK){&#10;+        return true;&#10;+    }else{&#10;+        return false;&#10;+    }&#10;+}&#10;+&#10;+void BluetoothSerial::deleteAllBondedDevices(){&#10;+    if(!isReady(false, READY_TIMEOUT)){&#10;+        log_w(&quot;Attempted to drop cache for uninitialized driver. First call begin()&quot;);&#10;+        return;&#10;+    }&#10;+&#10;+    int expected_dev_num = esp_bt_gap_get_bond_device_num();&#10;+    if(expected_dev_num == 0){&#10;+        log_i(&quot;No devices in cache.&quot;);&#10;+        return;&#10;+    } else {&#10;+        log_d(&quot;Found %d bonded devices&quot;, expected_dev_num);&#10;+    }&#10;+    esp_err_t ret;&#10;+&#10;+    // typedef uint8_t esp_bd_addr_t[ESP_BD_ADDR_LEN] // ESP_BD_ADDR_LEN = 6&#10;+    esp_bd_addr_t *dev_list = NULL;&#10;+    log_d(&quot;Allocate buffer: sizeof(esp_bd_addr_t)=%d * expected_dev_num=%d&quot;, sizeof(esp_bd_addr_t), expected_dev_num);&#10;+    dev_list = (esp_bd_addr_t*) malloc(sizeof(esp_bd_addr_t) * expected_dev_num);&#10;+    if(dev_list == NULL){&#10;+        log_e(&quot;Could not allocated BT device buffer!&quot;);&#10;+        return;&#10;+    }&#10;+    //uint8_t dev_list [20][6];&#10;+&#10;+    int dev_num;&#10;+    ret = esp_bt_gap_get_bond_device_list(&amp;dev_num, dev_list);&#10;+    log_d(&quot;esp_bt_gap_get_bond_device_list ret = %d&quot;, ret);&#10;+    if(ret == ESP_OK){&#10;+        if(dev_num != expected_dev_num){&#10;+            log_w(&quot;Inconsistent number of bonded devices. Expected %d; returned %d&quot;,expected_dev_num, dev_num);&#10;+        }&#10;+        for(int i=0; i&lt;dev_num; ++i){&#10;+            ret = esp_bt_gap_remove_bond_device(dev_list[i]);&#10;+            log_d(&quot;esp_bt_gap_remove_bond_device ret = %d&quot;, ret);&#10;+            if(ret == ESP_OK){&#10;+                log_d(&quot;Removed bonded device #%d&quot;, i);&#10;+            } else {&#10;+                log_w(&quot;Failed to removed bonded device #%d&quot;, i);&#10;+            }&#10;+            //btc_storage_remove_bonded_device(dev_list[i]);&#10;+        }&#10;+        log_d(&quot;device num after delete = %d&quot;, esp_bt_gap_get_bond_device_num());&#10;+    }else{&#10;+        log_w(&quot;Function esp_bt_gap_get_bond_device_list() returned code %d&quot;, ret);&#10;+    }&#10;+}&#10;+#endif // defined(CONFIG_BT_ENABLED) &amp;&amp; defined(CONFIG_BLUEDROID_ENABLED)&#10;" />
			<string key="comment_change" value="True" />
		</event>
	</trace>
	<trace>
		<string key="file" value="EEPROM.cpp" />
	</trace>
	<trace>
		<string key="file" value="BLEAdvertisedDevice.cpp" />
	</trace>
	<trace>
		<string key="file" value="OnReceiveError_BREAK_Demo.ino" />
	</trace>
	<trace>
		<string key="file" value="OnReceive_Demo.ino" />
	</trace>
	<trace>
		<string key="file" value="RxFIFOFull_Demo.ino" />
	</trace>
	<trace>
		<string key="file" value="RxTimeout_Demo.ino" />
	</trace>
	<trace>
		<string key="file" value="Print.cpp" />
		<event>
			<string key="timestamp" value="2022-12-21T18:48:10+02:00" />
			<string key="author" value="Rodrigo Garcia" />
			<string key="change_type" value="MODIFY" />
			<string key="commit_message" value="Removes a few Warnings and fixes Math rand() to work like Arduino mainstream (#7613)&#10;&#10;* fixes warnings and rand function&#13;&#10;&#13;&#10;* removes extra space - style" />
			<int key="additions" value="1" />
			<int key="deletions" value="1" />
			<string key="diff" value="@@ -58,7 +58,7 @@ size_t Print::printf(const char *format, ...)&#10;         va_end(arg);&#10;         return 0;&#10;     };&#10;-    if(len &gt;= sizeof(loc_buf)){&#10;+    if(len &gt;= (int)sizeof(loc_buf)){  // comparation of same sign type for the compiler&#10;         temp = (char*) malloc(len+1);&#10;         if(temp == NULL) {&#10;             va_end(arg);&#10;" />
			<string key="comment_change" value="True" />
		</event>
	</trace>
	<trace>
		<string key="file" value="WMath.cpp" />
		<event>
			<string key="timestamp" value="2023-02-15T13:26:18+02:00" />
			<string key="author" value="Rodrigo Garcia" />
			<string key="change_type" value="MODIFY" />
			<string key="commit_message" value="Adds pseudo random numbers generation (#7848)" />
			<int key="additions" value="15" />
			<int key="deletions" value="1" />
			<string key="diff" value='@@ -29,10 +29,22 @@ extern "C" {&#10; }&#10; #include "esp32-hal-log.h"&#10; &#10;+// Allows the user to choose between Real Hardware&#10;+// or Software Pseudo random generators for the&#10;+// Arduino random() functions&#10;+static bool s_useRandomHW = true;&#10;+void useRealRandomGenerator(bool useRandomHW) {&#10;+  s_useRandomHW = useRandomHW;&#10;+}&#10;+&#10;+// Calling randomSeed() will force the&#10;+// Pseudo Random generator like in &#10;+// Arduino mainstream API&#10; void randomSeed(unsigned long seed)&#10; {&#10;     if(seed != 0) {&#10;         srand(seed);&#10;+        s_useRandomHW = false;&#10;     }&#10; }&#10; &#10;@@ -46,7 +58,9 @@ long random( long howbig )&#10;   if (howbig &lt; 0) {&#10;     return (random(0, -howbig));&#10;   }&#10;-  return esp_random() % howbig;&#10;+  // if randomSeed was called, fall back to software PRNG&#10;+  uint32_t val = (s_useRandomHW) ? esp_random() : rand();&#10;+  return val % howbig;&#10; }&#10; &#10; long random(long howsmall, long howbig)&#10;' />
			<string key="comment_change" value="True" />
		</event>
	</trace>
	<trace>
		<string key="file" value="esp32-hal-rmt.c" />
	</trace>
	<trace>
		<string key="file" value="esp32-hal-spi.c" />
	</trace>
	<trace>
		<string key="file" value="esp32-hal-timer.c" />
	</trace>
	<trace>
		<string key="file" value="stdlib_noniso.c" />
	</trace>
	<trace>
		<string key="file" value="BLEDevice.cpp" />
		<event>
			<string key="timestamp" value="2023-10-05T14:54:25+03:00" />
			<string key="author" value="Me No Dev" />
			<string key="change_type" value="MODIFY" />
			<string key="commit_message" value="ESP-IDF v5.1 (#7733)&#10;&#10;* Initial changes to compile under ESP-IDF v5.1&#13;&#10;&#13;&#10;* Initial import for ESP-IDF v5.1 libs&#13;&#10;&#13;&#10;* Update toolchain&#13;&#10;&#13;&#10;* Update esp32-hal-psram.c&#13;&#10;&#13;&#10;* Add missing LDs&#13;&#10;&#13;&#10;* Update platform.txt&#13;&#10;&#13;&#10;* Stop some CI jobs, because they will always fail&#13;&#10;&#13;&#10;* Fix examples&#13;&#10;&#13;&#10;* Update app_httpd.cpp&#13;&#10;&#13;&#10;* Update ResetReason.ino&#13;&#10;&#13;&#10;* Warnings fixes&#13;&#10;&#13;&#10;* Added the example guideline and template (#7665)&#13;&#10;&#13;&#10;* Added the example guideline and template&#13;&#10;&#13;&#10;* PR review changes with some typos and grammar fixes&#13;&#10;&#13;&#10;* Changes according to the PR review&#13;&#10;&#13;&#10;* Added ESP32-S3 link to the datasheet (#7738)&#13;&#10;&#13;&#10;* Update HiFreq_ADC.ino&#13;&#10;&#13;&#10;* Replace periph_ctrl.h use because of deprecation&#13;&#10;&#13;&#10;* Replace esp_spi_flash.h use because of deprecation&#13;&#10;&#13;&#10;* Add includes to male mDNS::enableWorkstation compile&#13;&#10;&#13;&#10;* Fix ssl_client mbedtls_pk_parse_key callback&#13;&#10;&#13;&#10;* Update temperature sensor driver&#13;&#10;&#13;&#10;* Allow sketch_utils to compile with arduino-cli&#13;&#10;&#13;&#10;* Run CI with arduino-cli&#13;&#10;&#13;&#10;* Fix arduino-cli CI build on Windows&#13;&#10;&#13;&#10;* Refactor platform.txt to not use components installed through the board manager when running from git&#13;&#10;&#13;&#10;* Initial Peripheral Manager Implementation&#13;&#10;&#13;&#10;* Update SigmaDelta driver to use the new ESP-IDF driver API&#13;&#10;&#13;&#10;* Small improvements to peripheral manager and SigmaDelta&#13;&#10;&#13;&#10;* Remove deleted function from SigmaDelta header&#13;&#10;&#13;&#10;* Update DAC driver to use the new ESP-IDF driver API&#13;&#10;&#13;&#10;* Adds softAp(String) to make it compatible with ESP8266 (#7801)&#13;&#10;&#13;&#10;* Fix commentary (#7800)&#13;&#10;&#13;&#10;Minor fix based on observation done in https://github.com/espressif/arduino-esp32/issues/7795#issuecomment-1416868611&#13;&#10;&#13;&#10;* add adafruit new board feather esp32s2 reserve tft (#7794)&#13;&#10;&#13;&#10;* bugfix: add &lt;stdint.h&gt; for uint8_t to avoid compilation failure (GCC 11.2.0) (#7744)&#13;&#10;&#13;&#10;* Adding 3rd party boards for VALTRACK-V4-VTS-ESP32-C3 &amp; VALTRACK-V4-MFW-ESP32-C3 (#7735)&#13;&#10;&#13;&#10;* Added VALTRACK-V4-VTS-ESP32-C3 board definition&#13;&#10;&#13;&#10;Created pins_arduino.h &amp; made changes to boards.txt with necessary changes&#13;&#10;&#13;&#10;* Modified the URL&#13;&#10;&#13;&#10;* Renamed json&#13;&#10;&#13;&#10;* renamed all auRL&#13;&#10;&#13;&#10;* Adding VALTRACK-V4 series board definitions&#13;&#10;&#13;&#10;Added VALTRACK-V4-VTS-ESP32C3 &amp; VALTRACK-V4-MFW-ESP32-C3 board variants&#13;&#10;&#13;&#10;* Adding VALTRACK-V4 series board definitions&#13;&#10;&#13;&#10;Added VALTRACK-V4-VTS-ESP32C3 &amp; VALTRACK-V4-MFW-ESP32-C3 board variants&#13;&#10;&#13;&#10;* Reverted package_esp32_index.template.json&#13;&#10;&#13;&#10;restored package_esp32_index.template.json from edits&#13;&#10;&#13;&#10;* Reverted package_esp32_index.template.json&#13;&#10;&#13;&#10;Added new line to package_esp32_index.template.json&#13;&#10;&#13;&#10;* Update Platformio CI (#7725)&#13;&#10;&#13;&#10;* WiFiClient example fix (#7711)&#13;&#10;&#13;&#10;* Modified WiFiClient example to use thingspeak instead of non-functionig sparkfun&#13;&#10;&#13;&#10;* Moved instructions to README&#13;&#10;&#13;&#10;* Fixed spelling&#13;&#10;&#13;&#10;* Added link to S3 datasheet&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Jan Procházka &lt;90197375+P-R-O-C-H-Y@users.noreply.github.com&gt;&#13;&#10;&#13;&#10;* Mirror update from Heltec repository (#7709)&#13;&#10;&#13;&#10;Heltec updated the I2C pins in https://github.com/Heltec-Aaron-Lee/WiFi_Kit_series/commit/b10f4bf85d13fd01be80dcdb0eb59e6a8c8ba19a&#13;&#10;&#13;&#10;* Fixes BLE data printing (#7699)&#13;&#10;&#13;&#10;* Fixes BLE data printing&#13;&#10;&#13;&#10;BLE data has no '\0' terminator, therefore it can't be printed as a regular C string.&#13;&#10;This fix just prints the BLE data based on its length.&#13;&#10;&#13;&#10;* Simplify printing to a single call&#13;&#10;&#13;&#10;* split menu options + lora_32_V3 fix (#7697)&#13;&#10;&#13;&#10;* Change header gaurd name (#7696)&#13;&#10;&#13;&#10;* Fix Name (#7691)&#13;&#10;&#13;&#10;Wrong name in definitions.&#13;&#10;&#13;&#10;* Fix error in WiFiClient.cpp where the connect function fails for timeouts below 1 second (#7686)&#13;&#10;&#13;&#10;* Update WiFiClient.cpp&#13;&#10;&#13;&#10;This change will allow specifying connect timeouts below 1 second. Without this change, if connect timeouts under 1 second are given, the connect defaults to 0ms and fails. &#13;&#10;This will also allow timeouts in fractions of seconds, e.g. 1500ms. Without this change, connect timeouts are truncated to full second increments.&#13;&#10;&#13;&#10;* Make parameter timeout_ms clear&#13;&#10;&#13;&#10;* Change connection timeout_ms name for clarity&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Rodrigo Garcia &lt;rodrigo.garcia@espressif.com&gt;&#13;&#10;&#13;&#10;* fixed the function header (#7674)&#13;&#10;&#13;&#10;* fixed the function header&#13;&#10;&#13;&#10;* fixed function name and paramaters&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Jan Procházka &lt;90197375+P-R-O-C-H-Y@users.noreply.github.com&gt;&#13;&#10;&#13;&#10;* Ticker fix solving #6155 (#7664)&#13;&#10;&#13;&#10;* Wrapped Ticker functions with #pragma disabling -Wcast-function-type&#13;&#10;&#13;&#10;* Revert &quot;Wrapped Ticker functions with #pragma disabling -Wcast-function-type&quot;&#13;&#10;&#13;&#10;This reverts commit 160be7e67a10d01b6e44c4bf2521c0ccd6348976.&#13;&#10;&#13;&#10;* Fixed Ticker example&#13;&#10;&#13;&#10;* Modified Ticker example&#13;&#10;&#13;&#10;* Fixed LED_BUILTIN err for ESP32&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Jan Procházka &lt;90197375+P-R-O-C-H-Y@users.noreply.github.com&gt;&#13;&#10;&#13;&#10;* setPins fix ESP32 &quot;specified pins are not supported by this chip.&quot; (#7646)&#13;&#10;&#13;&#10;[ESP32: SDMMCFS::begin hardcodes the usage of slot 1, only check if the pins match slot 1 pins.]&#13;&#10;&#13;&#10;setPins() was testing pins D1, D2 and D3 all against D1 ... fine in 1 pin mode when all are -1 not so much if you're trying to get 4 pin mode working.&#13;&#10;I now see this function doesn't really do anything on the ESP32...accept now correctly checks that you are trying to use the slot 1 pins.&#13;&#10;&#13;&#10;Co-authored-by: Jan Procházka &lt;90197375+P-R-O-C-H-Y@users.noreply.github.com&gt;&#13;&#10;&#13;&#10;* Allow passing IP as connect method parameter in WiFiClientSecure and skip unnecessary host-ip conversions (#7643)&#13;&#10;&#13;&#10;* Add LED_BUILTIN* definitions and initialization for LEDs to stop them floating. (#7636)&#13;&#10;&#13;&#10;Co-authored-by: Rodrigo Garcia &lt;rodrigo.garcia@espressif.com&gt;&#13;&#10;&#13;&#10;* Expand path to tinuf2 image when checking existence in platformio-build.py (#7631)&#13;&#10;&#13;&#10;* Expand path to tinuf2 image when checking existence&#13;&#10;&#13;&#10;* More isFiles fixed&#13;&#10;&#13;&#10;* Remove (useless) trailing semicolon from Print.cpp (#7622)&#13;&#10;&#13;&#10;* ADD: New variant Edgebox-ESP-100 (#7771)&#13;&#10;&#13;&#10;* ADD: New variant Edgebox-ESP-100&#13;&#10;&#13;&#10;* FIX: Edgebox-ESP-100 Board.txt usb mode option change back to default value as ESP32S3&#13;&#10;&#13;&#10;* Add Crabik Slot ESP32-S3 board (#7790)&#13;&#10;&#13;&#10;* Added Crabik Slot ESP32-S3&#13;&#10;&#13;&#10;* Adding CPU frequency settings and removing excess from partition scheme settings&#13;&#10;&#13;&#10;* new variant LilyGO T-Display-S3 (#7763)&#13;&#10;&#13;&#10;* new variant LilyGO T-Display-S3&#13;&#10;&#13;&#10;https://github.com/Xinyuan-LilyGO/T-Display-S3&#13;&#10;&#13;&#10;* Add boards.txt definition&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Me No Dev &lt;me-no-dev@users.noreply.github.com&gt;&#13;&#10;&#13;&#10;* Update get.py to support Apple ARM64&#13;&#10;&#13;&#10;* Update package_esp32_index.template.json&#13;&#10;&#13;&#10;* WString Return bool (#7774)&#13;&#10;&#13;&#10;* Add Roboheart Hercules development board to the esp32-core (#7672)&#13;&#10;&#13;&#10;* added Roboheart Hercules pin definitions and board.txt entries&#13;&#10;&#13;&#10;* added package_roboheat.json for prototyping&#13;&#10;&#13;&#10;* Roboheart Hercules pins&#13;&#10;&#13;&#10;* Updated the pins&#13;&#10;&#13;&#10;* Delete package_roboheart.json&#13;&#10;&#13;&#10;* Requested changes&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: renebohne &lt;rene.bohne@gmail.com&gt;&#13;&#10;&#13;&#10;* Reword &quot;ESP-IDF as Component&quot; (#7812)&#13;&#10;&#13;&#10;I think &quot;Arduino as an ESP-IDF component&quot; or just &quot;As ESP-IDF component&quot; instead of  &quot;ESP-IDF as Component&quot; is more correct way to name the link.&#13;&#10;&#13;&#10;1. &quot;ESP-IDF as Component&quot; would imply that ESP-IDF is some sort of library for Arduino, which is (IMO) misleading, because it's true the other way around.&#13;&#10;2. It's written as &quot;Arduino as an ESP-IDF component&quot; on the webpage it points to as well.&#13;&#10;&#13;&#10;- Also I removed the capitalization from &quot;Component&quot; as I have not found a reason why is it capitalized.&#13;&#10;&#13;&#10;* add new board Adafruit Feather ESP32-S3 Reverse TFT (#7811)&#13;&#10;&#13;&#10;* Multi threading examples (tasks, queues, semaphores, mutexes) (#7660)&#13;&#10;&#13;&#10;* Moved and renamed example ESP32/FreeRTOS to MultiThreading/BasicMultiThreading&#13;&#10;&#13;&#10;* Added dummy files&#13;&#10;&#13;&#10;* Modified original example&#13;&#10;&#13;&#10;* Fixed BasicMultiThreading.ino&#13;&#10;&#13;&#10;* Added Example demonstrating use of queues&#13;&#10;&#13;&#10;* Extended info in BasicMultiThreading&#13;&#10;&#13;&#10;* Renamed Queues to singular Queue&#13;&#10;&#13;&#10;* Added Mutex example&#13;&#10;&#13;&#10;* Added Semaphore example&#13;&#10;&#13;&#10;* Moved info from example to README&#13;&#10;&#13;&#10;* Moved doc from Mutex to README&#13;&#10;&#13;&#10;* Added Queue README&#13;&#10;&#13;&#10;* Removed unecesary text&#13;&#10;&#13;&#10;* Fixed grammar&#13;&#10;&#13;&#10;* Increased stack size for Sempahore example&#13;&#10;&#13;&#10;* Added headers into .ino files&#13;&#10;&#13;&#10;* Added word Example at the end of title in README&#13;&#10;&#13;&#10;* removed unused line&#13;&#10;&#13;&#10;* Added forgotten README&#13;&#10;&#13;&#10;* Modified BasicMultiThreading example&#13;&#10;&#13;&#10;* Added missing S3 entry in README&#13;&#10;&#13;&#10;* moved location&#13;&#10;&#13;&#10;* Update ESP-IDF libs&#13;&#10;&#13;&#10;* Update CMakeLists.txt&#13;&#10;&#13;&#10;* Update esptool to v4.4&#13;&#10;&#13;&#10;* Add function timerAttachInterruptFlag (#7809)&#13;&#10;&#13;&#10;* Update esptool to v4.5&#13;&#10;&#13;&#10;* ADC refactoring (#7827)&#13;&#10;&#13;&#10;* Adc refactored + periman implementation&#13;&#10;&#13;&#10;Peripheral manager still needs to be checked if the implementation is right.&#13;&#10;&#13;&#10;* switched to working solution for milivolts read&#13;&#10;&#13;&#10;* Periman detachbus fix&#13;&#10;&#13;&#10;* coding style&#13;&#10;&#13;&#10;* fix CI warnings&#13;&#10;&#13;&#10;* fix FreeRTOS example&#13;&#10;&#13;&#10;* Update ETH.cpp&#13;&#10;&#13;&#10;* Update FunctionalInterruptStruct.ino&#13;&#10;&#13;&#10;* Update package_esp32_index.template.json&#13;&#10;&#13;&#10;* Update package_esp32_index.template.json&#13;&#10;&#13;&#10;* Fixes for the latest IDF v5.1&#13;&#10;&#13;&#10;* update esp-idf libs and toolchain&#13;&#10;&#13;&#10;* Turn OFF auto crystal frequency for ESP32 (needed by TWAI)&#13;&#10;&#13;&#10;* Update examples&#13;&#10;&#13;&#10;* Switch build to mostly use flags from files&#13;&#10;&#13;&#10;Includes can not be done this way&#13;&#10;&#13;&#10;* Reorganize flag files&#13;&#10;&#13;&#10;* Optimize chip build flags further&#13;&#10;&#13;&#10;* Revert defines from file. MBEDTLS_CONFIG_FILE does not properly expand&#13;&#10;&#13;&#10;* Add support for includes and defines from file&#13;&#10;&#13;&#10;* Replace old sdk path references in platform.txt&#13;&#10;&#13;&#10;* use gcc-ar (#8013)&#13;&#10;&#13;&#10;* Makes F_CPU generic for all SoC (#8007)&#13;&#10;&#13;&#10;Based on CONFIG_ESP_DEFAULT_CPU_FREQ_MHZ that is correctly defined in the sdkconfig file for each SoC.&#13;&#10;&#13;&#10;* TIMER refactoring (#7904)&#13;&#10;&#13;&#10;* refactor using GPtimer&#13;&#10;&#13;&#10;* Updated timer HW test&#13;&#10;&#13;&#10;* fix examples&#13;&#10;&#13;&#10;* Add v2.0.7 in issue template (#7871)&#13;&#10;&#13;&#10;* refactor using GPtimer&#13;&#10;&#13;&#10;* Updated timer HW test&#13;&#10;&#13;&#10;* fix examples&#13;&#10;&#13;&#10;* Revert &quot;Add v2.0.7 in issue template (#7871)&quot;&#13;&#10;&#13;&#10;This reverts commit fcc3b17d62ff57861f8913ca1f142fd5163b7457.&#13;&#10;&#13;&#10;* Update upload-artifact to v3 in HW CI&#13;&#10;&#13;&#10;* Revert &quot;Update upload-artifact to v3 in HW CI&quot;&#13;&#10;&#13;&#10;This reverts commit 1ba228071718ba37c4e26d98db22f77b2a7364a6.&#13;&#10;&#13;&#10;* replace resolution with frequency&#13;&#10;&#13;&#10;* remove count_down option&#13;&#10;&#13;&#10;* countup removed from examples + header&#13;&#10;&#13;&#10;* Refactored timer object&#13;&#10;&#13;&#10;* code cleanup + examples and tests fixes&#13;&#10;&#13;&#10;* TimerAlarm fix&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Vojtěch Bartoška &lt;76958047+VojtechBartoska@users.noreply.github.com&gt;&#13;&#10;&#13;&#10;* [Docs] ADC and Timer API Update (+some docs fixes) (#7906)&#13;&#10;&#13;&#10;* updated docs&#13;&#10;&#13;&#10;* remove hall sensor docs&#13;&#10;&#13;&#10;Removed Hall sensor documentation as its no longer supported in IDF-5&#13;&#10;&#13;&#10;* Fixed ESPNow examples location in docs&#13;&#10;&#13;&#10;* Last timer refactored API + gpio small fix&#13;&#10;&#13;&#10;* AlarmWrite fix&#13;&#10;&#13;&#10;* Fixes APLL/PLL with RTC Frequency (#8025)&#13;&#10;&#13;&#10;log_d() was displaying APLL for any SoC, but S3 and C3 has not such option, causing compilation errors.&#13;&#10;&#13;&#10;* Update IDF libs and fix OPI PSRAM on S3&#13;&#10;&#13;&#10;* Add setMode function HardwareSerial.c to set the esp32 uart mode for use with RS485 auto RTS (#7935)&#13;&#10;&#13;&#10;* Added setMode function to set the esp32 uart mode&#13;&#10;&#13;&#10;Used to set the esp32 uart mode for use with RS485 Half Duplex and the auto RTS pin mode. This will set/clear the RTS pin output to control the RE/DE pin on most RS485 chips.&#13;&#10;&#13;&#10;* Add Success (bool) return in some functions&#13;&#10;&#13;&#10;* Add Success (bool) return code to some functions&#13;&#10;&#13;&#10;* Add Success (bool) return to some functions&#13;&#10;&#13;&#10;* Add Success (bool) return to some functions&#13;&#10;&#13;&#10;* Fix uartSetRxTimeout return type&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Rodrigo Garcia &lt;rodrigo.garcia@espressif.com&gt;&#13;&#10;&#13;&#10;* Add support for esp-elf-gdb&#13;&#10;&#13;&#10;* WFG Crashfix (#8044)&#13;&#10;&#13;&#10;* Update component libs&#13;&#10;&#13;&#10;* IDF release/v5.1 (#8061)&#13;&#10;&#13;&#10;* IDF release/v5.1 bb9200acec&#13;&#10;&#13;&#10;* Update Esp.cpp&#13;&#10;&#13;&#10;* IDF release/v5.1 420ebd208a&#13;&#10;&#13;&#10;* Update esp32-hal-psram.c&#13;&#10;&#13;&#10;* Switch SDK to be an external package&#13;&#10;&#13;&#10;* fix path (#8096)&#13;&#10;&#13;&#10;* Makes UART work at any APB Frequency (#8097)&#13;&#10;&#13;&#10;Fixes HardwareSerial to work with IDF 5.1 on any CPU/APB Frequency (240MHz to 10MHZ), including user created low power modes.&#13;&#10;&#13;&#10;* Add required callbacks for TinyUSB DFU&#13;&#10;&#13;&#10;* Update version to 3.0.0&#13;&#10;&#13;&#10;* Add ESP.getCoreVersion() and update ESP.getChipModel()&#13;&#10;&#13;&#10;* Update timer hal for the latest 5.1&#13;&#10;&#13;&#10;* Use separate RX and TX buffer sizes in HTTP client&#13;&#10;&#13;&#10;optimizes download by allowing up to 4K packets to be received&#13;&#10;&#13;&#10;* Rename clock tree enum name in latest 5.1&#13;&#10;&#13;&#10;* ESP32-H4 support was removed in ESP-IDF v5.1&#13;&#10;&#13;&#10;* IDF release/v5.1 2004bf4e11 (#8165)&#13;&#10;&#13;&#10;* Deinit previous bus first (#8180)&#13;&#10;&#13;&#10;* TIMER - add timer_started flag, fix timerEnd() + timer HW test (#8135)&#13;&#10;&#13;&#10;* Add timer_started flag and stop before disable&#13;&#10;&#13;&#10;* Fix timer HW test&#13;&#10;&#13;&#10;* TOUCH - Peripheral manager implementation (#8129)&#13;&#10;&#13;&#10;* Touch periman implemented&#13;&#10;&#13;&#10;* Deinit previous bus first&#13;&#10;&#13;&#10;* LEDC Refactoring - Peripheral manager implemented (#8126)&#13;&#10;&#13;&#10;* LEDC periman implementation&#13;&#10;&#13;&#10;* Fix examples&#13;&#10;&#13;&#10;* Rework tone&#13;&#10;&#13;&#10;* Update ledc docs&#13;&#10;&#13;&#10;* fix missing bracket&#13;&#10;&#13;&#10;* Update analog funtions esp32-hal.h&#13;&#10;&#13;&#10;* Update CameraWebServer example&#13;&#10;&#13;&#10;* Fix HiFreq_ADC example&#13;&#10;&#13;&#10;* minor fixes - typos&#13;&#10;&#13;&#10;* Avoid calling tone/notone when tone already runs on dif. pin&#13;&#10;&#13;&#10;* Remove unused channels_resolution&#13;&#10;&#13;&#10;* GPIO - Peripheral manager implementation (#8179)&#13;&#10;&#13;&#10;* periman-implementation&#13;&#10;&#13;&#10;* fix RGB_BUILTIN and remove space&#13;&#10;&#13;&#10;* Enforces more consistency into Peripheral Manager (#8188)&#13;&#10;&#13;&#10;* Avoid log_i() message the first time a bus is assigned&#13;&#10;&#13;&#10;* Prevent operation with ESP32_BUS_TYPE_INIT&#13;&#10;&#13;&#10;* keeps coding style&#13;&#10;&#13;&#10;* do not print messages on INIT bus type&#13;&#10;&#13;&#10;* [Arduino Core 3.0.0] RMT IDF5.1 Refactoring (#7994)&#13;&#10;&#13;&#10;* RMT IDF5.1 refactoring&#13;&#10;&#13;&#10;* Fixes initial value setting&#13;&#10;&#13;&#10;* removed rmtRead() with user callback&#13;&#10;&#13;&#10;* simplify/remove Read data structure&#13;&#10;&#13;&#10;* Deep API simplification&#13;&#10;&#13;&#10;* fixes the examples&#13;&#10;&#13;&#10;* fix rmt.h&#13;&#10;&#13;&#10;* adds support to APB different frequencies&#13;&#10;&#13;&#10;* fixes CI and not defined RGB_BUILTIN&#13;&#10;&#13;&#10;* new RMT API and examples&#13;&#10;&#13;&#10;* fixing commentaties&#13;&#10;&#13;&#10;* Update esp32-hal-rgb-led.c&#13;&#10;&#13;&#10;* changes Filter API&#13;&#10;&#13;&#10;* Fixes example with Filter API&#13;&#10;&#13;&#10;* Update PlatformIO scripts for the upcoming 3.0 core (#8183)&#13;&#10;&#13;&#10;* Update PlatformIO scripts for the upcoming 3.0 core&#13;&#10;&#13;&#10;* Dynamically select proper framework-arduinoespressif32-libs package&#13;&#10;&#13;&#10;With this change the dev-platform will be dynamically configured to&#13;&#10;pull the latest .zip package with precompiled libraries from extracted from&#13;&#10;package_esp32_index.template.json&#13;&#10;&#13;&#10;* free memory on detach (#8264)&#13;&#10;&#13;&#10;* SPI - Peripheral manager implementation  (#8255)&#13;&#10;&#13;&#10;* spi periman implementation&#13;&#10;&#13;&#10;* fix header file&#13;&#10;&#13;&#10;* remove unused struct&#13;&#10;&#13;&#10;* fix missing braces&#13;&#10;&#13;&#10;* Update esp32-hal-rmt.c (#8216)&#13;&#10;&#13;&#10;Optimizing Peripheral Manager Test&#13;&#10;&#13;&#10;* I2C - Peripheral manager implementation (#8220)&#13;&#10;&#13;&#10;* i2c-master periman initial commit&#13;&#10;&#13;&#10;* i2c-master make detachbus static + comment remove&#13;&#10;&#13;&#10;* i2c-slave periman implementation&#13;&#10;&#13;&#10;* SetPinBus to INIT on i2cDeinits&#13;&#10;&#13;&#10;* Fix slave pins deinit&#13;&#10;&#13;&#10;* remove dbg logs&#13;&#10;&#13;&#10;* set ret to ESP_FAIL instead of returning&#13;&#10;&#13;&#10;* Fix warnings in hal-spi caused by pariman transition&#13;&#10;&#13;&#10;* Update esptool.py to version 4.6&#13;&#10;&#13;&#10;* Add platform support for ESP_SR&#13;&#10;&#13;&#10;* Add USB Type and valid pin check to periman&#13;&#10;&#13;&#10;* replace bus with spi-&gt;num+1 (#8279)&#13;&#10;&#13;&#10;* Remove default pins from SPI HAL&#13;&#10;&#13;&#10;* Add commented out handlers for esptool.js in TinyUSB CDC&#13;&#10;&#13;&#10;For future use&#13;&#10;&#13;&#10;* Add build defines for host os and fqbn (for debug purposes)&#13;&#10;&#13;&#10;* Provide proper memory caps total size&#13;&#10;&#13;&#10;* Update Esp.cpp&#13;&#10;&#13;&#10;* SDMMC - Peripheral manager implementation (#8289)&#13;&#10;&#13;&#10;* sdmmc periman implemented&#13;&#10;&#13;&#10;* save pins when SOC_SDMMC_USE_IOMUX&#13;&#10;&#13;&#10;* IDF release/v5.1 4bc762621d (#8292)&#13;&#10;&#13;&#10;* Adds missing pinMode (#8312)&#13;&#10;&#13;&#10;* Adds missing pinMode&#13;&#10;&#13;&#10;The example code lacks a pinMode() to initialize the GPIO 0 (button). In Arduino Core 3.0.0, it prints an error message when trying to read a not initialized GPIO.&#13;&#10;&#13;&#10;* Update KeyboardLogout.ino&#13;&#10;&#13;&#10;Adds &lt;buttonPin&gt; to keep code standard&#13;&#10;&#13;&#10;* Update KeyboardReprogram.ino&#13;&#10;&#13;&#10;Adds &lt;buttonPin&gt; to keep code standard&#13;&#10;&#13;&#10;* LEDC Fade implementation (#8338)&#13;&#10;&#13;&#10;* fade API + pointer fixes&#13;&#10;&#13;&#10;* Add fade api&#13;&#10;&#13;&#10;* Add fade example&#13;&#10;&#13;&#10;* update ledc docs&#13;&#10;&#13;&#10;* remove unused variables&#13;&#10;&#13;&#10;* fix path to example&#13;&#10;&#13;&#10;* Adds USB to Peripheral Manager - Arduino Core 3.0.0 (#8335)&#13;&#10;&#13;&#10;* ETHERNET - Peripheral manager implementation (#8297)&#13;&#10;&#13;&#10;* Peripheral manager implemented&#13;&#10;&#13;&#10;* remove unused variable&#13;&#10;&#13;&#10;* Add all RMII pins&#13;&#10;&#13;&#10;* fix typo&#13;&#10;&#13;&#10;* Adds HardwareSerial to Peripheral Manager Arduino 3.0.0 (#8328)&#13;&#10;&#13;&#10;* Do not limit ETHERNET in periman to only ESP32. SPI is also an option&#13;&#10;&#13;&#10;* Initial support for ESP32-C6 (#8337)&#13;&#10;&#13;&#10;* Add checks for SOC defines (#8351)&#13;&#10;&#13;&#10;* Add checks for SOC defines&#13;&#10;&#13;&#10;* Add SoC checks to BLE library&#13;&#10;&#13;&#10;* fix i2c compilation error&#13;&#10;&#13;&#10;* fix wrong placement of include&#13;&#10;&#13;&#10;* add check to SPI library&#13;&#10;&#13;&#10;* add check to USB library&#13;&#10;&#13;&#10;* add checks to Wire library&#13;&#10;&#13;&#10;* Feature/esp32h2 support (#8373)&#13;&#10;&#13;&#10;* Initial support for ESP32H2&#13;&#10;&#13;&#10;* Additional changes for ESP32H2&#13;&#10;&#13;&#10;* Update libs for ESP32H2&#13;&#10;&#13;&#10;* Fix flashing on ESP32-H2&#13;&#10;&#13;&#10;* Fix GPIO Configs for ESP32-C6 and ESP32-H2&#13;&#10;&#13;&#10;* Update Timer test sketch&#13;&#10;&#13;&#10;* Fix upload flash parameters&#13;&#10;&#13;&#10;* Use ets_write_char_uart instead of ets_printf in log_printfv&#13;&#10;&#13;&#10;* Print full chip report when log level is sufficient (#8282)&#13;&#10;&#13;&#10;* ESP32-C3 does not have ets_write_char_uart&#13;&#10;&#13;&#10;* Fix BLE gap event name&#13;&#10;&#13;&#10;* HW Testing - Pytest update (#8389)&#13;&#10;&#13;&#10;* update tests requirements&#13;&#10;&#13;&#10;* remove already handled components&#13;&#10;&#13;&#10;* Update version of pytest&#13;&#10;&#13;&#10;* Add missing ESP32-H2 to hil.yml&#13;&#10;&#13;&#10;* Updated FreeRTOS names (#8418)&#13;&#10;&#13;&#10;* HW Testing -  ESP32-C6 + ESP32-H2 fixes (#8404)&#13;&#10;&#13;&#10;* add C6/H2 to tests cfg.json&#13;&#10;&#13;&#10;* remove ,&#13;&#10;&#13;&#10;* workflow runs-on runner by matrix&#13;&#10;&#13;&#10;* Add need for arduino tag to select runner&#13;&#10;&#13;&#10;* Add cryptography to requirements.txt&#13;&#10;&#13;&#10;* Removed duplicate TX1 define for H2 (#8402)&#13;&#10;&#13;&#10;* Fix broken examples&#13;&#10;&#13;&#10;* Fixes RMT filter &amp; idle timing and setup (#8359)&#13;&#10;&#13;&#10;* Fixes Filter and Idle parameter to uint32&#13;&#10;&#13;&#10;* Fixes Filter and Idle setup&#13;&#10;&#13;&#10;* Fixes it to 5.1Libs branch&#13;&#10;&#13;&#10;* fix RMT CLK source and Filter API&#13;&#10;&#13;&#10;* fixes missing ;&#13;&#10;&#13;&#10;* fixes missing ;&#13;&#10;&#13;&#10;* fixes RMT example&#13;&#10;&#13;&#10;* IDF release/v5.1 a7b62bbcaf (#8438)&#13;&#10;&#13;&#10;* Add workflow to build executables from python scripts (#8290)&#13;&#10;&#13;&#10;* Add workflow to build executables from python scripts&#13;&#10;&#13;&#10;* Push binary to tools&#13;&#10;&#13;&#10;* Enable executable signing on Windows&#13;&#10;&#13;&#10;* Update get.py&#13;&#10;&#13;&#10;* Push binary to tools&#13;&#10;&#13;&#10;* Try with multiple files&#13;&#10;&#13;&#10;* Try more actions&#13;&#10;&#13;&#10;* Try powershell&#13;&#10;&#13;&#10;* Restore tools so they do not get rebuilt&#13;&#10;&#13;&#10;* Finalize scripts&#13;&#10;&#13;&#10;* Push binary to tools&#13;&#10;&#13;&#10;* App rollback should be after PSRAM is initialized&#13;&#10;&#13;&#10;* Correcting RX1 to GPIO4 and TX1 to GPIO5 to be consistent with documentation. Previous pin use works but is inconsistent with C6 docs.&#13;&#10;&#13;&#10;* Fixes Memory Leak (#8486)&#13;&#10;&#13;&#10;* fixes preprocessor test (#8485)&#13;&#10;&#13;&#10;* fixes preprocessor test&#13;&#10;&#13;&#10;When using `#define USE_SOFT_AP` &#13;&#10;Change&#13;&#10;`&amp;&amp; not USE_SOFT_AP` ==&gt; `&amp;&amp; !defined(USE_SOFT_AP)`&#13;&#10;&#13;&#10;* Adds any BLE capable device in WiFiProv.ino&#13;&#10;&#13;&#10;Removing ESP32 restriction for BLE Provisioning.&#13;&#10;&#13;&#10;* fix flash mode read out for C6&#13;&#10;&#13;&#10;* Add option for custom partitions without restrictions&#13;&#10;&#13;&#10;* SD_MMC update (#8298)&#13;&#10;&#13;&#10;* Updated SD_MMC lib and examples&#13;&#10;&#13;&#10;* Removed getter implementation and commented usage in examples&#13;&#10;&#13;&#10;* squashed updates&#13;&#10;&#13;&#10;* IDF release/v5.1 f0437b945f (#8599)&#13;&#10;&#13;&#10;* Update package_esp32_index.template.json&#13;&#10;&#13;&#10;* Fix printf format build error in BTAdvertisedDeviceSet.cpp&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Pedro Minatel &lt;pedro.minatel@espressif.com&gt;&#13;&#10;Co-authored-by: Rodrigo Garcia &lt;rodrigo.garcia@espressif.com&gt;&#13;&#10;Co-authored-by: Ha Thach &lt;thach@tinyusb.org&gt;&#13;&#10;Co-authored-by: Martin Turski &lt;quiret@vfemail.net&gt;&#13;&#10;Co-authored-by: raviypujar &lt;raviypujar@gmail.com&gt;&#13;&#10;Co-authored-by: Jason2866 &lt;24528715+Jason2866@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: Tomáš Pilný &lt;34927466+PilnyTomas@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: Jan Procházka &lt;90197375+P-R-O-C-H-Y@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: Daniel Berlin &lt;dberlin@dberlin.org&gt;&#13;&#10;Co-authored-by: Nima Askari (نیما عسکری) &lt;nimaltd@yahoo.com&gt;&#13;&#10;Co-authored-by: rtpmsys &lt;106180646+rtpmsys@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: bytiful &lt;55647551+bytiful@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: tmfarrington &lt;tmfarrington@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: Krzysiek S &lt;chris.streh@gmail.com&gt;&#13;&#10;Co-authored-by: surt &lt;carl.olsson@gmail.com&gt;&#13;&#10;Co-authored-by: Max Scheffler &lt;max.scheffler@pm.me&gt;&#13;&#10;Co-authored-by: Clemens Kirchgatterer &lt;clemens@1541.org&gt;&#13;&#10;Co-authored-by: Peter Pan's Techland &lt;twinkle-pirate@hotmail.com&gt;&#13;&#10;Co-authored-by: Roman &lt;programmeofficemilkyway@gmail.com&gt;&#13;&#10;Co-authored-by: Eistee &lt;Eistee82@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: David McCurley &lt;44048235+mrengineer7777@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: Gaya3N25 &lt;30388176+Gaya3N25@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: renebohne &lt;rene.bohne@gmail.com&gt;&#13;&#10;Co-authored-by: Olivér Remény &lt;25034625+remenyo@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: davidk88 &lt;david.kotar@gmail.com&gt;&#13;&#10;Co-authored-by: Vojtěch Bartoška &lt;76958047+VojtechBartoska@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: James Armstrong &lt;jamesarmstrong3@me.com&gt;&#13;&#10;Co-authored-by: Valerii Koval &lt;valeros@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: Peter G. Jensen &lt;root@petergjoel.dk&gt;" />
			<int key="additions" value="5" />
			<int key="deletions" value="1" />
			<string key="diff" value='@@ -4,6 +4,9 @@&#10;  *  Created on: Mar 16, 2017&#10;  *      Author: kolban&#10;  */&#10;+#include "soc/soc_caps.h"&#10;+#if SOC_BLE_SUPPORTED&#10;+&#10; #include "sdkconfig.h"&#10; #if defined(CONFIG_BLUEDROID_ENABLED)&#10; #include &lt;freertos/FreeRTOS.h&gt;&#10;@@ -674,4 +677,5 @@ void BLEDevice::setCustomGattsHandler(gatts_event_handler handler) {&#10; &#9;m_customGattsHandler = handler;&#10; }&#10; &#10;-#endif // CONFIG_BLUEDROID_ENABLED&#10;+#endif /* CONFIG_BLUEDROID_ENABLED */&#10;+#endif /* SOC_BLE_SUPPORTED */&#10;' />
			<string key="comment_change" value="False" />
		</event>
	</trace>
	<trace>
		<string key="file" value="BLEDevice.h" />
	</trace>
	<trace>
		<string key="file" value="CMakeLists.txt" />
	</trace>
	<trace>
		<string key="file" value="insights.rst" />
	</trace>
	<trace>
		<string key="file" value="DiagnosticsSmokeTest.ino" />
	</trace>
	<trace>
		<string key="file" value="MinimalDiagnostics.ino" />
	</trace>
	<trace>
		<string key="file" value="library.properties" />
	</trace>
	<trace>
		<string key="file" value="Insights.cpp" />
		<event>
			<string key="timestamp" value="2022-12-22T17:42:56+02:00" />
			<string key="author" value="Sanket Wadekar" />
			<string key="change_type" value="ADD" />
			<string key="commit_message" value="Draft: Esp insights library support (#7566)&#10;&#10;* ESP Insights: Added library support&#13;&#10;&#13;&#10;* ESP Insights: Added Examples&#13;&#10;&#13;&#10;* ESP Insights: Added custom partitions file&#13;&#10;&#13;&#10;* ESP Insights: Added API documentation.&#13;&#10;&#13;&#10;* Added recipe and script to create Insights package&#13;&#10;&#13;&#10;* Updated ESP Insights examples.&#13;&#10;&#13;&#10;* Changed Insights Firmware package output directory&#13;&#10;&#13;&#10;* Changed license to include SPDX license&#13;&#10;&#13;&#10;* Fix Insights package for Windows&#13;&#10;&#13;&#10;* Updated .exe of insights script&#13;&#10;&#13;&#10;* Added coredump partition to all schemes&#13;&#10;&#13;&#10;* Updated header files of Insights diagnostics&#13;&#10;&#13;&#10;* hotfix: Added elf-sha256-offset flag in elf2bin&#13;&#10;builder&#13;&#10;&#13;&#10;* Update API to be more Arduino-like and partitions offsets&#13;&#10;&#13;&#10;Co-authored-by: Me No Dev &lt;me-no-dev@users.noreply.github.com&gt;" />
			<int key="additions" value="283" />
			<int key="deletions" value="0" />
			<string key="diff" value="@@ -0,0 +1,283 @@&#10;+/*&#10;+ * SPDX-FileCopyrightText: 2022 Espressif Systems (Shanghai) CO LTD&#10;+ *&#10;+ * SPDX-License-Identifier: Apache-2.0&#10;+ */&#10;+#include &quot;Insights.h&quot;&#10;+#ifdef CONFIG_ESP_INSIGHTS_ENABLED&#10;+#include &quot;esp_insights.h&quot;&#10;+#include &quot;esp_diagnostics.h&quot;&#10;+#include &quot;esp_diagnostics_metrics.h&quot;&#10;+#include &quot;esp_diagnostics_system_metrics.h&quot;&#10;+#include &quot;esp_diagnostics_variables.h&quot;&#10;+#include &quot;esp_diagnostics_network_variables.h&quot;&#10;+&#10;+const char * ERROR_INSIGHTS_NOT_INIT = &quot;ESP Insights not initialized&quot;;&#10;+&#10;+#define BOOL_FN_OR_ERROR(f,e) \&#10;+    if(!initialized){ \&#10;+        log_e(&quot;%s&quot;,ERROR_INSIGHTS_NOT_INIT); \&#10;+        return false; \&#10;+    } \&#10;+    esp_err_t err = f; \&#10;+    if (err != ESP_OK) { \&#10;+        log_e(&quot;ESP Insights &quot; e &quot;, err:0x%x&quot;, err); \&#10;+    } \&#10;+    return err == ESP_OK;&#10;+&#10;+#define BOOL_FN_OR_ERROR_ARG(f,e,a) \&#10;+    if(!initialized){ \&#10;+        log_e(&quot;%s&quot;,ERROR_INSIGHTS_NOT_INIT); \&#10;+        return false; \&#10;+    } \&#10;+    esp_err_t err = f; \&#10;+    if (err != ESP_OK) { \&#10;+        log_e(&quot;ESP Insights &quot; e &quot;, err:0x%x&quot;, a, err); \&#10;+    } \&#10;+    return err == ESP_OK;&#10;+&#10;+#define VOID_FN_OR_ERROR(f) \&#10;+    if(!initialized){ \&#10;+        log_e(&quot;%s&quot;,ERROR_INSIGHTS_NOT_INIT); \&#10;+        return; \&#10;+    } \&#10;+    f;&#10;+&#10;+ESPInsightsClass::ESPInsightsClass(): initialized(false){}&#10;+&#10;+ESPInsightsClass::~ESPInsightsClass(){&#10;+    end();&#10;+}&#10;+&#10;+bool ESPInsightsClass::begin(const char *auth_key, const char *node_id, uint32_t log_type, bool alloc_ext_ram){&#10;+    if(!initialized){&#10;+        if(log_type == 0xFFFFFFFF){&#10;+            log_type = (ESP_DIAG_LOG_TYPE_ERROR | ESP_DIAG_LOG_TYPE_WARNING | ESP_DIAG_LOG_TYPE_EVENT);&#10;+        }&#10;+        esp_insights_config_t config = {.log_type = log_type, .node_id = node_id, .auth_key = auth_key, .alloc_ext_ram = alloc_ext_ram};&#10;+        esp_err_t err = esp_insights_init(&amp;config);&#10;+        if (err != ESP_OK) {&#10;+            log_e(&quot;Failed to initialize ESP Insights, err:0x%x&quot;, err);&#10;+        }&#10;+        initialized = err == ESP_OK;&#10;+        metrics.setInitialized(initialized);&#10;+        variables.setInitialized(initialized);&#10;+    } else {&#10;+        log_i(&quot;ESP Insights already initialized&quot;);&#10;+    }&#10;+    return initialized;&#10;+}&#10;+&#10;+void ESPInsightsClass::end(){&#10;+    if(initialized){&#10;+        esp_insights_deinit();&#10;+        initialized = false;&#10;+        metrics.setInitialized(initialized);&#10;+        variables.setInitialized(initialized);&#10;+    }&#10;+}&#10;+&#10;+const char * ESPInsightsClass::nodeID(){&#10;+    if(!initialized){&#10;+        log_e(&quot;%s&quot;,ERROR_INSIGHTS_NOT_INIT);&#10;+        return &quot;&quot;;&#10;+    }&#10;+    return esp_insights_get_node_id();&#10;+}&#10;+&#10;+bool ESPInsightsClass::event(const char *tag, const char *format, ...){&#10;+    if(!initialized){&#10;+        log_e(&quot;%s&quot;,ERROR_INSIGHTS_NOT_INIT);&#10;+        return false;&#10;+    }&#10;+&#10;+    char loc_buf[64];&#10;+    char * temp = loc_buf;&#10;+    va_list arg;&#10;+    va_list copy;&#10;+    va_start(arg, format);&#10;+    va_copy(copy, arg);&#10;+    int len = vsnprintf(temp, sizeof(loc_buf), format, copy);&#10;+    va_end(copy);&#10;+    if(len &lt; 0) {&#10;+        va_end(arg);&#10;+        return false;&#10;+    };&#10;+    if(len &gt;= (int)sizeof(loc_buf)){  // comparation of same sign type for the compiler&#10;+        temp = (char*) malloc(len+1);&#10;+        if(temp == NULL) {&#10;+            va_end(arg);&#10;+            return false;&#10;+        }&#10;+        len = vsnprintf(temp, len+1, format, arg);&#10;+    }&#10;+    va_end(arg);&#10;+    esp_err_t err = esp_diag_log_event(tag, &quot;%s&quot;, temp);&#10;+    if(temp != loc_buf){&#10;+        free(temp);&#10;+    }&#10;+    if (err != ESP_OK) {&#10;+        log_e(&quot;Failed to send ESP Insights event, err:0x%x&quot;, err);&#10;+    }&#10;+    return err == ESP_OK;&#10;+}&#10;+&#10;+bool ESPInsightsClass::send(){&#10;+    BOOL_FN_OR_ERROR(esp_insights_send_data(),&quot;Failed to send&quot;);&#10;+}&#10;+&#10;+void ESPInsightsClass::dumpTasksStatus(){&#10;+    VOID_FN_OR_ERROR(esp_diag_task_snapshot_dump());&#10;+}&#10;+&#10;+// ESPInsightsMetricsClass&#10;+&#10;+bool ESPInsightsMetricsClass::addBool(const char *tag, const char *key, const char *label, const char *path){&#10;+    BOOL_FN_OR_ERROR_ARG(esp_diag_metrics_register(tag, key, label, path, ESP_DIAG_DATA_TYPE_BOOL),&quot;Failed to add metric '%s'&quot;,key);&#10;+}&#10;+&#10;+bool ESPInsightsMetricsClass::addInt(const char *tag, const char *key, const char *label, const char *path){&#10;+    BOOL_FN_OR_ERROR_ARG(esp_diag_metrics_register(tag, key, label, path, ESP_DIAG_DATA_TYPE_INT),&quot;Failed to add metric '%s'&quot;,key);&#10;+}&#10;+&#10;+bool ESPInsightsMetricsClass::addUint(const char *tag, const char *key, const char *label, const char *path){&#10;+    BOOL_FN_OR_ERROR_ARG(esp_diag_metrics_register(tag, key, label, path, ESP_DIAG_DATA_TYPE_UINT),&quot;Failed to add metric '%s'&quot;,key);&#10;+}&#10;+&#10;+bool ESPInsightsMetricsClass::addFloat(const char *tag, const char *key, const char *label, const char *path){&#10;+    BOOL_FN_OR_ERROR_ARG(esp_diag_metrics_register(tag, key, label, path, ESP_DIAG_DATA_TYPE_FLOAT),&quot;Failed to add metric '%s'&quot;,key);&#10;+}&#10;+&#10;+bool ESPInsightsMetricsClass::addString(const char *tag, const char *key, const char *label, const char *path){&#10;+    BOOL_FN_OR_ERROR_ARG(esp_diag_metrics_register(tag, key, label, path, ESP_DIAG_DATA_TYPE_STR),&quot;Failed to add metric '%s'&quot;,key);&#10;+}&#10;+&#10;+bool ESPInsightsMetricsClass::addIPv4(const char *tag, const char *key, const char *label, const char *path){&#10;+    BOOL_FN_OR_ERROR_ARG(esp_diag_metrics_register(tag, key, label, path, ESP_DIAG_DATA_TYPE_IPv4),&quot;Failed to add metric '%s'&quot;,key);&#10;+}&#10;+&#10;+bool ESPInsightsMetricsClass::addMAC(const char *tag, const char *key, const char *label, const char *path){&#10;+    BOOL_FN_OR_ERROR_ARG(esp_diag_metrics_register(tag, key, label, path, ESP_DIAG_DATA_TYPE_MAC),&quot;Failed to add metric '%s'&quot;,key);&#10;+}&#10;+&#10;+bool ESPInsightsMetricsClass::setBool(const char *key, bool b){&#10;+    BOOL_FN_OR_ERROR_ARG(esp_diag_metrics_add_bool(key, b),&quot;Failed to set metric '%s'&quot;,key);&#10;+}&#10;+&#10;+bool ESPInsightsMetricsClass::setInt(const char *key, int32_t i){&#10;+    BOOL_FN_OR_ERROR_ARG(esp_diag_metrics_add_int(key, i),&quot;Failed to set metric '%s'&quot;,key);&#10;+}&#10;+&#10;+bool ESPInsightsMetricsClass::setUint(const char *key, uint32_t u){&#10;+    BOOL_FN_OR_ERROR_ARG(esp_diag_metrics_add_uint(key, u),&quot;Failed to set metric '%s'&quot;,key);&#10;+}&#10;+&#10;+bool ESPInsightsMetricsClass::setFloat(const char *key, float f){&#10;+    BOOL_FN_OR_ERROR_ARG(esp_diag_metrics_add_float(key, f),&quot;Failed to set metric '%s'&quot;,key);&#10;+}&#10;+&#10;+bool ESPInsightsMetricsClass::setString(const char *key, const char *str){&#10;+    BOOL_FN_OR_ERROR_ARG(esp_diag_metrics_add_str(key, str),&quot;Failed to set metric '%s'&quot;,key);&#10;+}&#10;+&#10;+bool ESPInsightsMetricsClass::setIPv4(const char *key, uint32_t ip){&#10;+    BOOL_FN_OR_ERROR_ARG(esp_diag_metrics_add_ipv4(key, ip),&quot;Failed to set metric '%s'&quot;,key);&#10;+}&#10;+&#10;+bool ESPInsightsMetricsClass::setMAC(const char *key, uint8_t *mac){&#10;+    BOOL_FN_OR_ERROR_ARG(esp_diag_metrics_add_mac(key, mac),&quot;Failed to set metric '%s'&quot;,key);&#10;+}&#10;+&#10;+bool ESPInsightsMetricsClass::remove(const char *key){&#10;+    BOOL_FN_OR_ERROR_ARG(esp_diag_metrics_unregister(key),&quot;Failed to remove metric '%s'&quot;,key);&#10;+}&#10;+&#10;+bool ESPInsightsMetricsClass::removeAll(){&#10;+    BOOL_FN_OR_ERROR(esp_diag_metrics_unregister_all(),&quot;Failed to remove metrics&quot;);&#10;+}&#10;+&#10;+void ESPInsightsMetricsClass::setHeapPeriod(uint32_t seconds){&#10;+    VOID_FN_OR_ERROR(esp_diag_heap_metrics_reset_interval(seconds));&#10;+}&#10;+&#10;+bool ESPInsightsMetricsClass::dumpHeap(){&#10;+    BOOL_FN_OR_ERROR(esp_diag_heap_metrics_dump(),&quot;Failed to send heap metrics&quot;);&#10;+}&#10;+&#10;+void ESPInsightsMetricsClass::setWiFiPeriod(uint32_t seconds){&#10;+    VOID_FN_OR_ERROR(esp_diag_wifi_metrics_reset_interval(seconds));&#10;+}&#10;+&#10;+bool ESPInsightsMetricsClass::dumpWiFi(){&#10;+    BOOL_FN_OR_ERROR(esp_diag_wifi_metrics_dump(),&quot;Failed to send wifi metrics&quot;);&#10;+}&#10;+&#10;+// ESPInsightsVariablesClass&#10;+&#10;+bool ESPInsightsVariablesClass::addBool(const char *tag, const char *key, const char *label, const char *path){&#10;+    BOOL_FN_OR_ERROR_ARG(esp_diag_variable_register(tag, key, label, path, ESP_DIAG_DATA_TYPE_BOOL),&quot;Failed to add variable '%s'&quot;,key);&#10;+}&#10;+&#10;+bool ESPInsightsVariablesClass::addInt(const char *tag, const char *key, const char *label, const char *path){&#10;+    BOOL_FN_OR_ERROR_ARG(esp_diag_variable_register(tag, key, label, path, ESP_DIAG_DATA_TYPE_INT),&quot;Failed to add variable '%s'&quot;,key);&#10;+}&#10;+&#10;+bool ESPInsightsVariablesClass::addUint(const char *tag, const char *key, const char *label, const char *path){&#10;+    BOOL_FN_OR_ERROR_ARG(esp_diag_variable_register(tag, key, label, path, ESP_DIAG_DATA_TYPE_UINT),&quot;Failed to add variable '%s'&quot;,key);&#10;+}&#10;+&#10;+bool ESPInsightsVariablesClass::addFloat(const char *tag, const char *key, const char *label, const char *path){&#10;+    BOOL_FN_OR_ERROR_ARG(esp_diag_variable_register(tag, key, label, path, ESP_DIAG_DATA_TYPE_FLOAT),&quot;Failed to add variable '%s'&quot;,key);&#10;+}&#10;+&#10;+bool ESPInsightsVariablesClass::addString(const char *tag, const char *key, const char *label, const char *path){&#10;+    BOOL_FN_OR_ERROR_ARG(esp_diag_variable_register(tag, key, label, path, ESP_DIAG_DATA_TYPE_STR),&quot;Failed to add variable '%s'&quot;,key);&#10;+}&#10;+&#10;+bool ESPInsightsVariablesClass::addIPv4(const char *tag, const char *key, const char *label, const char *path){&#10;+    BOOL_FN_OR_ERROR_ARG(esp_diag_variable_register(tag, key, label, path, ESP_DIAG_DATA_TYPE_IPv4),&quot;Failed to add variable '%s'&quot;,key);&#10;+}&#10;+&#10;+bool ESPInsightsVariablesClass::addMAC(const char *tag, const char *key, const char *label, const char *path){&#10;+    BOOL_FN_OR_ERROR_ARG(esp_diag_variable_register(tag, key, label, path, ESP_DIAG_DATA_TYPE_MAC),&quot;Failed to add variable '%s'&quot;,key);&#10;+}&#10;+&#10;+bool ESPInsightsVariablesClass::setBool(const char *key, bool b){&#10;+    BOOL_FN_OR_ERROR_ARG(esp_diag_variable_add_bool(key, b),&quot;Failed to set variable '%s'&quot;,key);&#10;+}&#10;+&#10;+bool ESPInsightsVariablesClass::setInt(const char *key, int32_t i){&#10;+    BOOL_FN_OR_ERROR_ARG(esp_diag_variable_add_int(key, i),&quot;Failed to set variable '%s'&quot;,key);&#10;+}&#10;+&#10;+bool ESPInsightsVariablesClass::setUint(const char *key, uint32_t u){&#10;+    BOOL_FN_OR_ERROR_ARG(esp_diag_variable_add_uint(key, u),&quot;Failed to set variable '%s'&quot;,key);&#10;+}&#10;+&#10;+bool ESPInsightsVariablesClass::setFloat(const char *key, float f){&#10;+    BOOL_FN_OR_ERROR_ARG(esp_diag_variable_add_float(key, f),&quot;Failed to set variable '%s'&quot;,key);&#10;+}&#10;+&#10;+bool ESPInsightsVariablesClass::setString(const char *key, const char *str){&#10;+    BOOL_FN_OR_ERROR_ARG(esp_diag_variable_add_str(key, str),&quot;Failed to set variable '%s'&quot;,key);&#10;+}&#10;+&#10;+bool ESPInsightsVariablesClass::setIPv4(const char *key, uint32_t ip){&#10;+    BOOL_FN_OR_ERROR_ARG(esp_diag_variable_add_ipv4(key, ip),&quot;Failed to set variable '%s'&quot;,key);&#10;+}&#10;+&#10;+bool ESPInsightsVariablesClass::setMAC(const char *key, uint8_t *mac){&#10;+    BOOL_FN_OR_ERROR_ARG(esp_diag_variable_add_mac(key, mac),&quot;Failed to set variable '%s'&quot;,key);&#10;+}&#10;+&#10;+bool ESPInsightsVariablesClass::remove(const char *key){&#10;+    BOOL_FN_OR_ERROR_ARG(esp_diag_variable_unregister(key),&quot;Failed to remove variable '%s'&quot;,key);&#10;+}&#10;+&#10;+bool ESPInsightsVariablesClass::removeAll(){&#10;+    BOOL_FN_OR_ERROR(esp_diag_variable_unregister_all(),&quot;Failed to remove variables&quot;);&#10;+}&#10;+&#10;+ESPInsightsClass Insights;&#10;+&#10;+#endif&#10;" />
			<string key="comment_change" value="True" />
		</event>
	</trace>
	<trace>
		<string key="file" value="Insights.h" />
	</trace>
	<trace>
		<string key="file" value="platform.txt" />
	</trace>
	<trace>
		<string key="file" value="gen_insights_package.exe" />
	</trace>
	<trace>
		<string key="file" value="gen_insights_package.py" />
	</trace>
	<trace>
		<string key="file" value="app3M_fat9M_16MB.csv" />
	</trace>
	<trace>
		<string key="file" value="bare_minimum_2MB.csv" />
	</trace>
	<trace>
		<string key="file" value="default.csv" />
	</trace>
	<trace>
		<string key="file" value="default_16MB.csv" />
	</trace>
	<trace>
		<string key="file" value="default_8MB.csv" />
	</trace>
	<trace>
		<string key="file" value="default_ffat.csv" />
	</trace>
	<trace>
		<string key="file" value="ffat.csv" />
	</trace>
	<trace>
		<string key="file" value="huge_app.csv" />
	</trace>
	<trace>
		<string key="file" value="large_spiffs_16MB.csv" />
	</trace>
	<trace>
		<string key="file" value="max_app_8MB.csv" />
	</trace>
	<trace>
		<string key="file" value="min_spiffs.csv" />
	</trace>
	<trace>
		<string key="file" value="minimal.csv" />
	</trace>
	<trace>
		<string key="file" value="no_ota.csv" />
	</trace>
	<trace>
		<string key="file" value="noota_3g.csv" />
	</trace>
	<trace>
		<string key="file" value="noota_3gffat.csv" />
	</trace>
	<trace>
		<string key="file" value="noota_ffat.csv" />
	</trace>
	<trace>
		<string key="file" value="rainmaker.csv" />
	</trace>
	<trace>
		<string key="file" value="platformio-build.py" />
	</trace>
	<trace>
		<string key="file" value="esp_diagnostics.h" />
	</trace>
	<trace>
		<string key="file" value="WiFiClientConnect.ino" />
	</trace>
	<trace>
		<string key="file" value="BluetoothSerial.h" />
	</trace>
	<trace>
		<string key="file" value="WiFiClient.cpp" />
	</trace>
	<trace>
		<string key="file" value="SD_MMC.cpp" />
		<event>
			<string key="timestamp" value="2023-08-30T16:23:51+03:00" />
			<string key="author" value="Tomáš Pilný" />
			<string key="change_type" value="MODIFY" />
			<string key="commit_message" value="Doc update: Troubleshooting + SD libs (#8241)&#10;&#10;* Updated preferences.rst&#13;&#10;&#13;&#10;* Added into FAQ info about SPIFFS failed mount&#13;&#10;&#13;&#10;* Updated troubleshooting&#13;&#10;&#13;&#10;* Moved SPIFFS paragraph from FAQ to troubleshooting&#13;&#10;&#13;&#10;* Minor updates&#13;&#10;&#13;&#10;* Updated troubleshooting&#13;&#10;&#13;&#10;* Updated SD README files and example comments&#13;&#10;&#13;&#10;* Updated troubleshooting with SD issue&#13;&#10;&#13;&#10;* Added note about S3 pins&#13;&#10;&#13;&#10;* Updated SDMMC test setPins calls + added definition for default pins&#13;&#10;&#13;&#10;* Updated SD_MMC comments&#13;&#10;&#13;&#10;* Added pin table to SD_MMC readme&#13;&#10;&#13;&#10;* Updated table in SD_SPI&#13;&#10;&#13;&#10;* Updated based on comments&#13;&#10;&#13;&#10;* Update io_mux.rst&#13;&#10;&#13;&#10;* Update README.md" />
			<int key="additions" value="1" />
			<int key="deletions" value="1" />
			<string key="diff" value='@@ -93,7 +93,7 @@ bool SDMMCFS::begin(const char * mountpoint, bool mode1bit, bool format_if_mount&#10;     sdmmc_slot_config_t slot_config = SDMMC_SLOT_CONFIG_DEFAULT();&#10; #ifdef SOC_SDMMC_USE_GPIO_MATRIX&#10;     // SoC supports SDMMC pin configuration via GPIO matrix.&#10;-    // Chech that the pins have been set either in the constructor or setPins function.&#10;+    // Check that the pins have been set either in the constructor or setPins function.&#10;     if (_pin_cmd == -1 || _pin_clk == -1 || _pin_d0 == -1&#10;         || (!mode1bit &amp;&amp; (_pin_d1 == -1 || _pin_d2 == -1 || _pin_d3 == -1))) {&#10;         log_e("SDMMCFS: some SD pins are not set");&#10;' />
			<string key="comment_change" value="True" />
		</event>
		<event>
			<string key="timestamp" value="2023-10-05T14:54:25+03:00" />
			<string key="author" value="Me No Dev" />
			<string key="change_type" value="MODIFY" />
			<string key="commit_message" value="ESP-IDF v5.1 (#7733)&#10;&#10;* Initial changes to compile under ESP-IDF v5.1&#13;&#10;&#13;&#10;* Initial import for ESP-IDF v5.1 libs&#13;&#10;&#13;&#10;* Update toolchain&#13;&#10;&#13;&#10;* Update esp32-hal-psram.c&#13;&#10;&#13;&#10;* Add missing LDs&#13;&#10;&#13;&#10;* Update platform.txt&#13;&#10;&#13;&#10;* Stop some CI jobs, because they will always fail&#13;&#10;&#13;&#10;* Fix examples&#13;&#10;&#13;&#10;* Update app_httpd.cpp&#13;&#10;&#13;&#10;* Update ResetReason.ino&#13;&#10;&#13;&#10;* Warnings fixes&#13;&#10;&#13;&#10;* Added the example guideline and template (#7665)&#13;&#10;&#13;&#10;* Added the example guideline and template&#13;&#10;&#13;&#10;* PR review changes with some typos and grammar fixes&#13;&#10;&#13;&#10;* Changes according to the PR review&#13;&#10;&#13;&#10;* Added ESP32-S3 link to the datasheet (#7738)&#13;&#10;&#13;&#10;* Update HiFreq_ADC.ino&#13;&#10;&#13;&#10;* Replace periph_ctrl.h use because of deprecation&#13;&#10;&#13;&#10;* Replace esp_spi_flash.h use because of deprecation&#13;&#10;&#13;&#10;* Add includes to male mDNS::enableWorkstation compile&#13;&#10;&#13;&#10;* Fix ssl_client mbedtls_pk_parse_key callback&#13;&#10;&#13;&#10;* Update temperature sensor driver&#13;&#10;&#13;&#10;* Allow sketch_utils to compile with arduino-cli&#13;&#10;&#13;&#10;* Run CI with arduino-cli&#13;&#10;&#13;&#10;* Fix arduino-cli CI build on Windows&#13;&#10;&#13;&#10;* Refactor platform.txt to not use components installed through the board manager when running from git&#13;&#10;&#13;&#10;* Initial Peripheral Manager Implementation&#13;&#10;&#13;&#10;* Update SigmaDelta driver to use the new ESP-IDF driver API&#13;&#10;&#13;&#10;* Small improvements to peripheral manager and SigmaDelta&#13;&#10;&#13;&#10;* Remove deleted function from SigmaDelta header&#13;&#10;&#13;&#10;* Update DAC driver to use the new ESP-IDF driver API&#13;&#10;&#13;&#10;* Adds softAp(String) to make it compatible with ESP8266 (#7801)&#13;&#10;&#13;&#10;* Fix commentary (#7800)&#13;&#10;&#13;&#10;Minor fix based on observation done in https://github.com/espressif/arduino-esp32/issues/7795#issuecomment-1416868611&#13;&#10;&#13;&#10;* add adafruit new board feather esp32s2 reserve tft (#7794)&#13;&#10;&#13;&#10;* bugfix: add &lt;stdint.h&gt; for uint8_t to avoid compilation failure (GCC 11.2.0) (#7744)&#13;&#10;&#13;&#10;* Adding 3rd party boards for VALTRACK-V4-VTS-ESP32-C3 &amp; VALTRACK-V4-MFW-ESP32-C3 (#7735)&#13;&#10;&#13;&#10;* Added VALTRACK-V4-VTS-ESP32-C3 board definition&#13;&#10;&#13;&#10;Created pins_arduino.h &amp; made changes to boards.txt with necessary changes&#13;&#10;&#13;&#10;* Modified the URL&#13;&#10;&#13;&#10;* Renamed json&#13;&#10;&#13;&#10;* renamed all auRL&#13;&#10;&#13;&#10;* Adding VALTRACK-V4 series board definitions&#13;&#10;&#13;&#10;Added VALTRACK-V4-VTS-ESP32C3 &amp; VALTRACK-V4-MFW-ESP32-C3 board variants&#13;&#10;&#13;&#10;* Adding VALTRACK-V4 series board definitions&#13;&#10;&#13;&#10;Added VALTRACK-V4-VTS-ESP32C3 &amp; VALTRACK-V4-MFW-ESP32-C3 board variants&#13;&#10;&#13;&#10;* Reverted package_esp32_index.template.json&#13;&#10;&#13;&#10;restored package_esp32_index.template.json from edits&#13;&#10;&#13;&#10;* Reverted package_esp32_index.template.json&#13;&#10;&#13;&#10;Added new line to package_esp32_index.template.json&#13;&#10;&#13;&#10;* Update Platformio CI (#7725)&#13;&#10;&#13;&#10;* WiFiClient example fix (#7711)&#13;&#10;&#13;&#10;* Modified WiFiClient example to use thingspeak instead of non-functionig sparkfun&#13;&#10;&#13;&#10;* Moved instructions to README&#13;&#10;&#13;&#10;* Fixed spelling&#13;&#10;&#13;&#10;* Added link to S3 datasheet&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Jan Procházka &lt;90197375+P-R-O-C-H-Y@users.noreply.github.com&gt;&#13;&#10;&#13;&#10;* Mirror update from Heltec repository (#7709)&#13;&#10;&#13;&#10;Heltec updated the I2C pins in https://github.com/Heltec-Aaron-Lee/WiFi_Kit_series/commit/b10f4bf85d13fd01be80dcdb0eb59e6a8c8ba19a&#13;&#10;&#13;&#10;* Fixes BLE data printing (#7699)&#13;&#10;&#13;&#10;* Fixes BLE data printing&#13;&#10;&#13;&#10;BLE data has no '\0' terminator, therefore it can't be printed as a regular C string.&#13;&#10;This fix just prints the BLE data based on its length.&#13;&#10;&#13;&#10;* Simplify printing to a single call&#13;&#10;&#13;&#10;* split menu options + lora_32_V3 fix (#7697)&#13;&#10;&#13;&#10;* Change header gaurd name (#7696)&#13;&#10;&#13;&#10;* Fix Name (#7691)&#13;&#10;&#13;&#10;Wrong name in definitions.&#13;&#10;&#13;&#10;* Fix error in WiFiClient.cpp where the connect function fails for timeouts below 1 second (#7686)&#13;&#10;&#13;&#10;* Update WiFiClient.cpp&#13;&#10;&#13;&#10;This change will allow specifying connect timeouts below 1 second. Without this change, if connect timeouts under 1 second are given, the connect defaults to 0ms and fails. &#13;&#10;This will also allow timeouts in fractions of seconds, e.g. 1500ms. Without this change, connect timeouts are truncated to full second increments.&#13;&#10;&#13;&#10;* Make parameter timeout_ms clear&#13;&#10;&#13;&#10;* Change connection timeout_ms name for clarity&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Rodrigo Garcia &lt;rodrigo.garcia@espressif.com&gt;&#13;&#10;&#13;&#10;* fixed the function header (#7674)&#13;&#10;&#13;&#10;* fixed the function header&#13;&#10;&#13;&#10;* fixed function name and paramaters&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Jan Procházka &lt;90197375+P-R-O-C-H-Y@users.noreply.github.com&gt;&#13;&#10;&#13;&#10;* Ticker fix solving #6155 (#7664)&#13;&#10;&#13;&#10;* Wrapped Ticker functions with #pragma disabling -Wcast-function-type&#13;&#10;&#13;&#10;* Revert &quot;Wrapped Ticker functions with #pragma disabling -Wcast-function-type&quot;&#13;&#10;&#13;&#10;This reverts commit 160be7e67a10d01b6e44c4bf2521c0ccd6348976.&#13;&#10;&#13;&#10;* Fixed Ticker example&#13;&#10;&#13;&#10;* Modified Ticker example&#13;&#10;&#13;&#10;* Fixed LED_BUILTIN err for ESP32&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Jan Procházka &lt;90197375+P-R-O-C-H-Y@users.noreply.github.com&gt;&#13;&#10;&#13;&#10;* setPins fix ESP32 &quot;specified pins are not supported by this chip.&quot; (#7646)&#13;&#10;&#13;&#10;[ESP32: SDMMCFS::begin hardcodes the usage of slot 1, only check if the pins match slot 1 pins.]&#13;&#10;&#13;&#10;setPins() was testing pins D1, D2 and D3 all against D1 ... fine in 1 pin mode when all are -1 not so much if you're trying to get 4 pin mode working.&#13;&#10;I now see this function doesn't really do anything on the ESP32...accept now correctly checks that you are trying to use the slot 1 pins.&#13;&#10;&#13;&#10;Co-authored-by: Jan Procházka &lt;90197375+P-R-O-C-H-Y@users.noreply.github.com&gt;&#13;&#10;&#13;&#10;* Allow passing IP as connect method parameter in WiFiClientSecure and skip unnecessary host-ip conversions (#7643)&#13;&#10;&#13;&#10;* Add LED_BUILTIN* definitions and initialization for LEDs to stop them floating. (#7636)&#13;&#10;&#13;&#10;Co-authored-by: Rodrigo Garcia &lt;rodrigo.garcia@espressif.com&gt;&#13;&#10;&#13;&#10;* Expand path to tinuf2 image when checking existence in platformio-build.py (#7631)&#13;&#10;&#13;&#10;* Expand path to tinuf2 image when checking existence&#13;&#10;&#13;&#10;* More isFiles fixed&#13;&#10;&#13;&#10;* Remove (useless) trailing semicolon from Print.cpp (#7622)&#13;&#10;&#13;&#10;* ADD: New variant Edgebox-ESP-100 (#7771)&#13;&#10;&#13;&#10;* ADD: New variant Edgebox-ESP-100&#13;&#10;&#13;&#10;* FIX: Edgebox-ESP-100 Board.txt usb mode option change back to default value as ESP32S3&#13;&#10;&#13;&#10;* Add Crabik Slot ESP32-S3 board (#7790)&#13;&#10;&#13;&#10;* Added Crabik Slot ESP32-S3&#13;&#10;&#13;&#10;* Adding CPU frequency settings and removing excess from partition scheme settings&#13;&#10;&#13;&#10;* new variant LilyGO T-Display-S3 (#7763)&#13;&#10;&#13;&#10;* new variant LilyGO T-Display-S3&#13;&#10;&#13;&#10;https://github.com/Xinyuan-LilyGO/T-Display-S3&#13;&#10;&#13;&#10;* Add boards.txt definition&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Me No Dev &lt;me-no-dev@users.noreply.github.com&gt;&#13;&#10;&#13;&#10;* Update get.py to support Apple ARM64&#13;&#10;&#13;&#10;* Update package_esp32_index.template.json&#13;&#10;&#13;&#10;* WString Return bool (#7774)&#13;&#10;&#13;&#10;* Add Roboheart Hercules development board to the esp32-core (#7672)&#13;&#10;&#13;&#10;* added Roboheart Hercules pin definitions and board.txt entries&#13;&#10;&#13;&#10;* added package_roboheat.json for prototyping&#13;&#10;&#13;&#10;* Roboheart Hercules pins&#13;&#10;&#13;&#10;* Updated the pins&#13;&#10;&#13;&#10;* Delete package_roboheart.json&#13;&#10;&#13;&#10;* Requested changes&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: renebohne &lt;rene.bohne@gmail.com&gt;&#13;&#10;&#13;&#10;* Reword &quot;ESP-IDF as Component&quot; (#7812)&#13;&#10;&#13;&#10;I think &quot;Arduino as an ESP-IDF component&quot; or just &quot;As ESP-IDF component&quot; instead of  &quot;ESP-IDF as Component&quot; is more correct way to name the link.&#13;&#10;&#13;&#10;1. &quot;ESP-IDF as Component&quot; would imply that ESP-IDF is some sort of library for Arduino, which is (IMO) misleading, because it's true the other way around.&#13;&#10;2. It's written as &quot;Arduino as an ESP-IDF component&quot; on the webpage it points to as well.&#13;&#10;&#13;&#10;- Also I removed the capitalization from &quot;Component&quot; as I have not found a reason why is it capitalized.&#13;&#10;&#13;&#10;* add new board Adafruit Feather ESP32-S3 Reverse TFT (#7811)&#13;&#10;&#13;&#10;* Multi threading examples (tasks, queues, semaphores, mutexes) (#7660)&#13;&#10;&#13;&#10;* Moved and renamed example ESP32/FreeRTOS to MultiThreading/BasicMultiThreading&#13;&#10;&#13;&#10;* Added dummy files&#13;&#10;&#13;&#10;* Modified original example&#13;&#10;&#13;&#10;* Fixed BasicMultiThreading.ino&#13;&#10;&#13;&#10;* Added Example demonstrating use of queues&#13;&#10;&#13;&#10;* Extended info in BasicMultiThreading&#13;&#10;&#13;&#10;* Renamed Queues to singular Queue&#13;&#10;&#13;&#10;* Added Mutex example&#13;&#10;&#13;&#10;* Added Semaphore example&#13;&#10;&#13;&#10;* Moved info from example to README&#13;&#10;&#13;&#10;* Moved doc from Mutex to README&#13;&#10;&#13;&#10;* Added Queue README&#13;&#10;&#13;&#10;* Removed unecesary text&#13;&#10;&#13;&#10;* Fixed grammar&#13;&#10;&#13;&#10;* Increased stack size for Sempahore example&#13;&#10;&#13;&#10;* Added headers into .ino files&#13;&#10;&#13;&#10;* Added word Example at the end of title in README&#13;&#10;&#13;&#10;* removed unused line&#13;&#10;&#13;&#10;* Added forgotten README&#13;&#10;&#13;&#10;* Modified BasicMultiThreading example&#13;&#10;&#13;&#10;* Added missing S3 entry in README&#13;&#10;&#13;&#10;* moved location&#13;&#10;&#13;&#10;* Update ESP-IDF libs&#13;&#10;&#13;&#10;* Update CMakeLists.txt&#13;&#10;&#13;&#10;* Update esptool to v4.4&#13;&#10;&#13;&#10;* Add function timerAttachInterruptFlag (#7809)&#13;&#10;&#13;&#10;* Update esptool to v4.5&#13;&#10;&#13;&#10;* ADC refactoring (#7827)&#13;&#10;&#13;&#10;* Adc refactored + periman implementation&#13;&#10;&#13;&#10;Peripheral manager still needs to be checked if the implementation is right.&#13;&#10;&#13;&#10;* switched to working solution for milivolts read&#13;&#10;&#13;&#10;* Periman detachbus fix&#13;&#10;&#13;&#10;* coding style&#13;&#10;&#13;&#10;* fix CI warnings&#13;&#10;&#13;&#10;* fix FreeRTOS example&#13;&#10;&#13;&#10;* Update ETH.cpp&#13;&#10;&#13;&#10;* Update FunctionalInterruptStruct.ino&#13;&#10;&#13;&#10;* Update package_esp32_index.template.json&#13;&#10;&#13;&#10;* Update package_esp32_index.template.json&#13;&#10;&#13;&#10;* Fixes for the latest IDF v5.1&#13;&#10;&#13;&#10;* update esp-idf libs and toolchain&#13;&#10;&#13;&#10;* Turn OFF auto crystal frequency for ESP32 (needed by TWAI)&#13;&#10;&#13;&#10;* Update examples&#13;&#10;&#13;&#10;* Switch build to mostly use flags from files&#13;&#10;&#13;&#10;Includes can not be done this way&#13;&#10;&#13;&#10;* Reorganize flag files&#13;&#10;&#13;&#10;* Optimize chip build flags further&#13;&#10;&#13;&#10;* Revert defines from file. MBEDTLS_CONFIG_FILE does not properly expand&#13;&#10;&#13;&#10;* Add support for includes and defines from file&#13;&#10;&#13;&#10;* Replace old sdk path references in platform.txt&#13;&#10;&#13;&#10;* use gcc-ar (#8013)&#13;&#10;&#13;&#10;* Makes F_CPU generic for all SoC (#8007)&#13;&#10;&#13;&#10;Based on CONFIG_ESP_DEFAULT_CPU_FREQ_MHZ that is correctly defined in the sdkconfig file for each SoC.&#13;&#10;&#13;&#10;* TIMER refactoring (#7904)&#13;&#10;&#13;&#10;* refactor using GPtimer&#13;&#10;&#13;&#10;* Updated timer HW test&#13;&#10;&#13;&#10;* fix examples&#13;&#10;&#13;&#10;* Add v2.0.7 in issue template (#7871)&#13;&#10;&#13;&#10;* refactor using GPtimer&#13;&#10;&#13;&#10;* Updated timer HW test&#13;&#10;&#13;&#10;* fix examples&#13;&#10;&#13;&#10;* Revert &quot;Add v2.0.7 in issue template (#7871)&quot;&#13;&#10;&#13;&#10;This reverts commit fcc3b17d62ff57861f8913ca1f142fd5163b7457.&#13;&#10;&#13;&#10;* Update upload-artifact to v3 in HW CI&#13;&#10;&#13;&#10;* Revert &quot;Update upload-artifact to v3 in HW CI&quot;&#13;&#10;&#13;&#10;This reverts commit 1ba228071718ba37c4e26d98db22f77b2a7364a6.&#13;&#10;&#13;&#10;* replace resolution with frequency&#13;&#10;&#13;&#10;* remove count_down option&#13;&#10;&#13;&#10;* countup removed from examples + header&#13;&#10;&#13;&#10;* Refactored timer object&#13;&#10;&#13;&#10;* code cleanup + examples and tests fixes&#13;&#10;&#13;&#10;* TimerAlarm fix&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Vojtěch Bartoška &lt;76958047+VojtechBartoska@users.noreply.github.com&gt;&#13;&#10;&#13;&#10;* [Docs] ADC and Timer API Update (+some docs fixes) (#7906)&#13;&#10;&#13;&#10;* updated docs&#13;&#10;&#13;&#10;* remove hall sensor docs&#13;&#10;&#13;&#10;Removed Hall sensor documentation as its no longer supported in IDF-5&#13;&#10;&#13;&#10;* Fixed ESPNow examples location in docs&#13;&#10;&#13;&#10;* Last timer refactored API + gpio small fix&#13;&#10;&#13;&#10;* AlarmWrite fix&#13;&#10;&#13;&#10;* Fixes APLL/PLL with RTC Frequency (#8025)&#13;&#10;&#13;&#10;log_d() was displaying APLL for any SoC, but S3 and C3 has not such option, causing compilation errors.&#13;&#10;&#13;&#10;* Update IDF libs and fix OPI PSRAM on S3&#13;&#10;&#13;&#10;* Add setMode function HardwareSerial.c to set the esp32 uart mode for use with RS485 auto RTS (#7935)&#13;&#10;&#13;&#10;* Added setMode function to set the esp32 uart mode&#13;&#10;&#13;&#10;Used to set the esp32 uart mode for use with RS485 Half Duplex and the auto RTS pin mode. This will set/clear the RTS pin output to control the RE/DE pin on most RS485 chips.&#13;&#10;&#13;&#10;* Add Success (bool) return in some functions&#13;&#10;&#13;&#10;* Add Success (bool) return code to some functions&#13;&#10;&#13;&#10;* Add Success (bool) return to some functions&#13;&#10;&#13;&#10;* Add Success (bool) return to some functions&#13;&#10;&#13;&#10;* Fix uartSetRxTimeout return type&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Rodrigo Garcia &lt;rodrigo.garcia@espressif.com&gt;&#13;&#10;&#13;&#10;* Add support for esp-elf-gdb&#13;&#10;&#13;&#10;* WFG Crashfix (#8044)&#13;&#10;&#13;&#10;* Update component libs&#13;&#10;&#13;&#10;* IDF release/v5.1 (#8061)&#13;&#10;&#13;&#10;* IDF release/v5.1 bb9200acec&#13;&#10;&#13;&#10;* Update Esp.cpp&#13;&#10;&#13;&#10;* IDF release/v5.1 420ebd208a&#13;&#10;&#13;&#10;* Update esp32-hal-psram.c&#13;&#10;&#13;&#10;* Switch SDK to be an external package&#13;&#10;&#13;&#10;* fix path (#8096)&#13;&#10;&#13;&#10;* Makes UART work at any APB Frequency (#8097)&#13;&#10;&#13;&#10;Fixes HardwareSerial to work with IDF 5.1 on any CPU/APB Frequency (240MHz to 10MHZ), including user created low power modes.&#13;&#10;&#13;&#10;* Add required callbacks for TinyUSB DFU&#13;&#10;&#13;&#10;* Update version to 3.0.0&#13;&#10;&#13;&#10;* Add ESP.getCoreVersion() and update ESP.getChipModel()&#13;&#10;&#13;&#10;* Update timer hal for the latest 5.1&#13;&#10;&#13;&#10;* Use separate RX and TX buffer sizes in HTTP client&#13;&#10;&#13;&#10;optimizes download by allowing up to 4K packets to be received&#13;&#10;&#13;&#10;* Rename clock tree enum name in latest 5.1&#13;&#10;&#13;&#10;* ESP32-H4 support was removed in ESP-IDF v5.1&#13;&#10;&#13;&#10;* IDF release/v5.1 2004bf4e11 (#8165)&#13;&#10;&#13;&#10;* Deinit previous bus first (#8180)&#13;&#10;&#13;&#10;* TIMER - add timer_started flag, fix timerEnd() + timer HW test (#8135)&#13;&#10;&#13;&#10;* Add timer_started flag and stop before disable&#13;&#10;&#13;&#10;* Fix timer HW test&#13;&#10;&#13;&#10;* TOUCH - Peripheral manager implementation (#8129)&#13;&#10;&#13;&#10;* Touch periman implemented&#13;&#10;&#13;&#10;* Deinit previous bus first&#13;&#10;&#13;&#10;* LEDC Refactoring - Peripheral manager implemented (#8126)&#13;&#10;&#13;&#10;* LEDC periman implementation&#13;&#10;&#13;&#10;* Fix examples&#13;&#10;&#13;&#10;* Rework tone&#13;&#10;&#13;&#10;* Update ledc docs&#13;&#10;&#13;&#10;* fix missing bracket&#13;&#10;&#13;&#10;* Update analog funtions esp32-hal.h&#13;&#10;&#13;&#10;* Update CameraWebServer example&#13;&#10;&#13;&#10;* Fix HiFreq_ADC example&#13;&#10;&#13;&#10;* minor fixes - typos&#13;&#10;&#13;&#10;* Avoid calling tone/notone when tone already runs on dif. pin&#13;&#10;&#13;&#10;* Remove unused channels_resolution&#13;&#10;&#13;&#10;* GPIO - Peripheral manager implementation (#8179)&#13;&#10;&#13;&#10;* periman-implementation&#13;&#10;&#13;&#10;* fix RGB_BUILTIN and remove space&#13;&#10;&#13;&#10;* Enforces more consistency into Peripheral Manager (#8188)&#13;&#10;&#13;&#10;* Avoid log_i() message the first time a bus is assigned&#13;&#10;&#13;&#10;* Prevent operation with ESP32_BUS_TYPE_INIT&#13;&#10;&#13;&#10;* keeps coding style&#13;&#10;&#13;&#10;* do not print messages on INIT bus type&#13;&#10;&#13;&#10;* [Arduino Core 3.0.0] RMT IDF5.1 Refactoring (#7994)&#13;&#10;&#13;&#10;* RMT IDF5.1 refactoring&#13;&#10;&#13;&#10;* Fixes initial value setting&#13;&#10;&#13;&#10;* removed rmtRead() with user callback&#13;&#10;&#13;&#10;* simplify/remove Read data structure&#13;&#10;&#13;&#10;* Deep API simplification&#13;&#10;&#13;&#10;* fixes the examples&#13;&#10;&#13;&#10;* fix rmt.h&#13;&#10;&#13;&#10;* adds support to APB different frequencies&#13;&#10;&#13;&#10;* fixes CI and not defined RGB_BUILTIN&#13;&#10;&#13;&#10;* new RMT API and examples&#13;&#10;&#13;&#10;* fixing commentaties&#13;&#10;&#13;&#10;* Update esp32-hal-rgb-led.c&#13;&#10;&#13;&#10;* changes Filter API&#13;&#10;&#13;&#10;* Fixes example with Filter API&#13;&#10;&#13;&#10;* Update PlatformIO scripts for the upcoming 3.0 core (#8183)&#13;&#10;&#13;&#10;* Update PlatformIO scripts for the upcoming 3.0 core&#13;&#10;&#13;&#10;* Dynamically select proper framework-arduinoespressif32-libs package&#13;&#10;&#13;&#10;With this change the dev-platform will be dynamically configured to&#13;&#10;pull the latest .zip package with precompiled libraries from extracted from&#13;&#10;package_esp32_index.template.json&#13;&#10;&#13;&#10;* free memory on detach (#8264)&#13;&#10;&#13;&#10;* SPI - Peripheral manager implementation  (#8255)&#13;&#10;&#13;&#10;* spi periman implementation&#13;&#10;&#13;&#10;* fix header file&#13;&#10;&#13;&#10;* remove unused struct&#13;&#10;&#13;&#10;* fix missing braces&#13;&#10;&#13;&#10;* Update esp32-hal-rmt.c (#8216)&#13;&#10;&#13;&#10;Optimizing Peripheral Manager Test&#13;&#10;&#13;&#10;* I2C - Peripheral manager implementation (#8220)&#13;&#10;&#13;&#10;* i2c-master periman initial commit&#13;&#10;&#13;&#10;* i2c-master make detachbus static + comment remove&#13;&#10;&#13;&#10;* i2c-slave periman implementation&#13;&#10;&#13;&#10;* SetPinBus to INIT on i2cDeinits&#13;&#10;&#13;&#10;* Fix slave pins deinit&#13;&#10;&#13;&#10;* remove dbg logs&#13;&#10;&#13;&#10;* set ret to ESP_FAIL instead of returning&#13;&#10;&#13;&#10;* Fix warnings in hal-spi caused by pariman transition&#13;&#10;&#13;&#10;* Update esptool.py to version 4.6&#13;&#10;&#13;&#10;* Add platform support for ESP_SR&#13;&#10;&#13;&#10;* Add USB Type and valid pin check to periman&#13;&#10;&#13;&#10;* replace bus with spi-&gt;num+1 (#8279)&#13;&#10;&#13;&#10;* Remove default pins from SPI HAL&#13;&#10;&#13;&#10;* Add commented out handlers for esptool.js in TinyUSB CDC&#13;&#10;&#13;&#10;For future use&#13;&#10;&#13;&#10;* Add build defines for host os and fqbn (for debug purposes)&#13;&#10;&#13;&#10;* Provide proper memory caps total size&#13;&#10;&#13;&#10;* Update Esp.cpp&#13;&#10;&#13;&#10;* SDMMC - Peripheral manager implementation (#8289)&#13;&#10;&#13;&#10;* sdmmc periman implemented&#13;&#10;&#13;&#10;* save pins when SOC_SDMMC_USE_IOMUX&#13;&#10;&#13;&#10;* IDF release/v5.1 4bc762621d (#8292)&#13;&#10;&#13;&#10;* Adds missing pinMode (#8312)&#13;&#10;&#13;&#10;* Adds missing pinMode&#13;&#10;&#13;&#10;The example code lacks a pinMode() to initialize the GPIO 0 (button). In Arduino Core 3.0.0, it prints an error message when trying to read a not initialized GPIO.&#13;&#10;&#13;&#10;* Update KeyboardLogout.ino&#13;&#10;&#13;&#10;Adds &lt;buttonPin&gt; to keep code standard&#13;&#10;&#13;&#10;* Update KeyboardReprogram.ino&#13;&#10;&#13;&#10;Adds &lt;buttonPin&gt; to keep code standard&#13;&#10;&#13;&#10;* LEDC Fade implementation (#8338)&#13;&#10;&#13;&#10;* fade API + pointer fixes&#13;&#10;&#13;&#10;* Add fade api&#13;&#10;&#13;&#10;* Add fade example&#13;&#10;&#13;&#10;* update ledc docs&#13;&#10;&#13;&#10;* remove unused variables&#13;&#10;&#13;&#10;* fix path to example&#13;&#10;&#13;&#10;* Adds USB to Peripheral Manager - Arduino Core 3.0.0 (#8335)&#13;&#10;&#13;&#10;* ETHERNET - Peripheral manager implementation (#8297)&#13;&#10;&#13;&#10;* Peripheral manager implemented&#13;&#10;&#13;&#10;* remove unused variable&#13;&#10;&#13;&#10;* Add all RMII pins&#13;&#10;&#13;&#10;* fix typo&#13;&#10;&#13;&#10;* Adds HardwareSerial to Peripheral Manager Arduino 3.0.0 (#8328)&#13;&#10;&#13;&#10;* Do not limit ETHERNET in periman to only ESP32. SPI is also an option&#13;&#10;&#13;&#10;* Initial support for ESP32-C6 (#8337)&#13;&#10;&#13;&#10;* Add checks for SOC defines (#8351)&#13;&#10;&#13;&#10;* Add checks for SOC defines&#13;&#10;&#13;&#10;* Add SoC checks to BLE library&#13;&#10;&#13;&#10;* fix i2c compilation error&#13;&#10;&#13;&#10;* fix wrong placement of include&#13;&#10;&#13;&#10;* add check to SPI library&#13;&#10;&#13;&#10;* add check to USB library&#13;&#10;&#13;&#10;* add checks to Wire library&#13;&#10;&#13;&#10;* Feature/esp32h2 support (#8373)&#13;&#10;&#13;&#10;* Initial support for ESP32H2&#13;&#10;&#13;&#10;* Additional changes for ESP32H2&#13;&#10;&#13;&#10;* Update libs for ESP32H2&#13;&#10;&#13;&#10;* Fix flashing on ESP32-H2&#13;&#10;&#13;&#10;* Fix GPIO Configs for ESP32-C6 and ESP32-H2&#13;&#10;&#13;&#10;* Update Timer test sketch&#13;&#10;&#13;&#10;* Fix upload flash parameters&#13;&#10;&#13;&#10;* Use ets_write_char_uart instead of ets_printf in log_printfv&#13;&#10;&#13;&#10;* Print full chip report when log level is sufficient (#8282)&#13;&#10;&#13;&#10;* ESP32-C3 does not have ets_write_char_uart&#13;&#10;&#13;&#10;* Fix BLE gap event name&#13;&#10;&#13;&#10;* HW Testing - Pytest update (#8389)&#13;&#10;&#13;&#10;* update tests requirements&#13;&#10;&#13;&#10;* remove already handled components&#13;&#10;&#13;&#10;* Update version of pytest&#13;&#10;&#13;&#10;* Add missing ESP32-H2 to hil.yml&#13;&#10;&#13;&#10;* Updated FreeRTOS names (#8418)&#13;&#10;&#13;&#10;* HW Testing -  ESP32-C6 + ESP32-H2 fixes (#8404)&#13;&#10;&#13;&#10;* add C6/H2 to tests cfg.json&#13;&#10;&#13;&#10;* remove ,&#13;&#10;&#13;&#10;* workflow runs-on runner by matrix&#13;&#10;&#13;&#10;* Add need for arduino tag to select runner&#13;&#10;&#13;&#10;* Add cryptography to requirements.txt&#13;&#10;&#13;&#10;* Removed duplicate TX1 define for H2 (#8402)&#13;&#10;&#13;&#10;* Fix broken examples&#13;&#10;&#13;&#10;* Fixes RMT filter &amp; idle timing and setup (#8359)&#13;&#10;&#13;&#10;* Fixes Filter and Idle parameter to uint32&#13;&#10;&#13;&#10;* Fixes Filter and Idle setup&#13;&#10;&#13;&#10;* Fixes it to 5.1Libs branch&#13;&#10;&#13;&#10;* fix RMT CLK source and Filter API&#13;&#10;&#13;&#10;* fixes missing ;&#13;&#10;&#13;&#10;* fixes missing ;&#13;&#10;&#13;&#10;* fixes RMT example&#13;&#10;&#13;&#10;* IDF release/v5.1 a7b62bbcaf (#8438)&#13;&#10;&#13;&#10;* Add workflow to build executables from python scripts (#8290)&#13;&#10;&#13;&#10;* Add workflow to build executables from python scripts&#13;&#10;&#13;&#10;* Push binary to tools&#13;&#10;&#13;&#10;* Enable executable signing on Windows&#13;&#10;&#13;&#10;* Update get.py&#13;&#10;&#13;&#10;* Push binary to tools&#13;&#10;&#13;&#10;* Try with multiple files&#13;&#10;&#13;&#10;* Try more actions&#13;&#10;&#13;&#10;* Try powershell&#13;&#10;&#13;&#10;* Restore tools so they do not get rebuilt&#13;&#10;&#13;&#10;* Finalize scripts&#13;&#10;&#13;&#10;* Push binary to tools&#13;&#10;&#13;&#10;* App rollback should be after PSRAM is initialized&#13;&#10;&#13;&#10;* Correcting RX1 to GPIO4 and TX1 to GPIO5 to be consistent with documentation. Previous pin use works but is inconsistent with C6 docs.&#13;&#10;&#13;&#10;* Fixes Memory Leak (#8486)&#13;&#10;&#13;&#10;* fixes preprocessor test (#8485)&#13;&#10;&#13;&#10;* fixes preprocessor test&#13;&#10;&#13;&#10;When using `#define USE_SOFT_AP` &#13;&#10;Change&#13;&#10;`&amp;&amp; not USE_SOFT_AP` ==&gt; `&amp;&amp; !defined(USE_SOFT_AP)`&#13;&#10;&#13;&#10;* Adds any BLE capable device in WiFiProv.ino&#13;&#10;&#13;&#10;Removing ESP32 restriction for BLE Provisioning.&#13;&#10;&#13;&#10;* fix flash mode read out for C6&#13;&#10;&#13;&#10;* Add option for custom partitions without restrictions&#13;&#10;&#13;&#10;* SD_MMC update (#8298)&#13;&#10;&#13;&#10;* Updated SD_MMC lib and examples&#13;&#10;&#13;&#10;* Removed getter implementation and commented usage in examples&#13;&#10;&#13;&#10;* squashed updates&#13;&#10;&#13;&#10;* IDF release/v5.1 f0437b945f (#8599)&#13;&#10;&#13;&#10;* Update package_esp32_index.template.json&#13;&#10;&#13;&#10;* Fix printf format build error in BTAdvertisedDeviceSet.cpp&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Pedro Minatel &lt;pedro.minatel@espressif.com&gt;&#13;&#10;Co-authored-by: Rodrigo Garcia &lt;rodrigo.garcia@espressif.com&gt;&#13;&#10;Co-authored-by: Ha Thach &lt;thach@tinyusb.org&gt;&#13;&#10;Co-authored-by: Martin Turski &lt;quiret@vfemail.net&gt;&#13;&#10;Co-authored-by: raviypujar &lt;raviypujar@gmail.com&gt;&#13;&#10;Co-authored-by: Jason2866 &lt;24528715+Jason2866@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: Tomáš Pilný &lt;34927466+PilnyTomas@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: Jan Procházka &lt;90197375+P-R-O-C-H-Y@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: Daniel Berlin &lt;dberlin@dberlin.org&gt;&#13;&#10;Co-authored-by: Nima Askari (نیما عسکری) &lt;nimaltd@yahoo.com&gt;&#13;&#10;Co-authored-by: rtpmsys &lt;106180646+rtpmsys@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: bytiful &lt;55647551+bytiful@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: tmfarrington &lt;tmfarrington@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: Krzysiek S &lt;chris.streh@gmail.com&gt;&#13;&#10;Co-authored-by: surt &lt;carl.olsson@gmail.com&gt;&#13;&#10;Co-authored-by: Max Scheffler &lt;max.scheffler@pm.me&gt;&#13;&#10;Co-authored-by: Clemens Kirchgatterer &lt;clemens@1541.org&gt;&#13;&#10;Co-authored-by: Peter Pan's Techland &lt;twinkle-pirate@hotmail.com&gt;&#13;&#10;Co-authored-by: Roman &lt;programmeofficemilkyway@gmail.com&gt;&#13;&#10;Co-authored-by: Eistee &lt;Eistee82@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: David McCurley &lt;44048235+mrengineer7777@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: Gaya3N25 &lt;30388176+Gaya3N25@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: renebohne &lt;rene.bohne@gmail.com&gt;&#13;&#10;Co-authored-by: Olivér Remény &lt;25034625+remenyo@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: davidk88 &lt;david.kotar@gmail.com&gt;&#13;&#10;Co-authored-by: Vojtěch Bartoška &lt;76958047+VojtechBartoska@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: James Armstrong &lt;jamesarmstrong3@me.com&gt;&#13;&#10;Co-authored-by: Valerii Koval &lt;valeros@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: Peter G. Jensen &lt;root@petergjoel.dk&gt;" />
			<int key="additions" value="64" />
			<int key="deletions" value="10" />
			<string key="diff" value='@@ -24,10 +24,10 @@&#10; #include "sdmmc_cmd.h"&#10; #include "soc/sdmmc_pins.h"&#10; #include "ff.h"&#10;+#include "esp32-hal-periman.h"&#10; &#10; using namespace fs;&#10; &#10;-&#10; SDMMCFS::SDMMCFS(FSImplPtr impl)&#10;     : FS(impl), _card(nullptr)&#10; {&#10;@@ -40,7 +40,25 @@ SDMMCFS::SDMMCFS(FSImplPtr impl)&#10;     _pin_d2 = SDMMC_D2;&#10;     _pin_d3 = SDMMC_D3;&#10; #endif // BOARD_HAS_1BIT_SDMMC&#10;-#endif // defined(SOC_SDMMC_USE_GPIO_MATRIX) &amp;&amp; defined(BOARD_HAS_SDMMC)&#10;+&#10;+#elif SOC_SDMMC_USE_IOMUX&#10;+    _pin_clk = SDMMC_SLOT1_IOMUX_PIN_NUM_CLK;&#10;+    _pin_cmd = SDMMC_SLOT1_IOMUX_PIN_NUM_CMD;&#10;+    _pin_d0 = SDMMC_SLOT1_IOMUX_PIN_NUM_D0;&#10;+#ifndef BOARD_HAS_1BIT_SDMMC&#10;+    _pin_d1 = SDMMC_SLOT1_IOMUX_PIN_NUM_D1;&#10;+    _pin_d2 = SDMMC_SLOT1_IOMUX_PIN_NUM_D2;&#10;+    _pin_d3 = SDMMC_SLOT1_IOMUX_PIN_NUM_D3;&#10;+#endif // BOARD_HAS_1BIT_SDMMC&#10;+#endif&#10;+}&#10;+&#10;+bool SDMMCFS::sdmmcDetachBus(void * bus_pointer){&#10;+    SDMMCFS *bus = (SDMMCFS *) bus_pointer;&#10;+    if(bus-&gt;_card) {&#10;+        bus-&gt;end();&#10;+    }&#10;+    return true;&#10; }&#10; &#10; bool SDMMCFS::setPins(int clk, int cmd, int d0)&#10;@@ -68,12 +86,12 @@ bool SDMMCFS::setPins(int clk, int cmd, int d0, int d1, int d2, int d3)&#10;     // Since SDMMCFS::begin hardcodes the usage of slot 1, only check if&#10;     // the pins match slot 1 pins.&#10;     bool pins_ok = (clk == (int)SDMMC_SLOT1_IOMUX_PIN_NUM_CLK) &amp;&amp;&#10;-        (cmd == (int)SDMMC_SLOT1_IOMUX_PIN_NUM_CMD) &amp;&amp;&#10;-        (d0 == (int)SDMMC_SLOT1_IOMUX_PIN_NUM_D0) &amp;&amp;&#10;-        (((d1 == -1) &amp;&amp; (d2 == -1) &amp;&amp; (d3 == -1)) ||&#10;-         ((d1 == (int)SDMMC_SLOT1_IOMUX_PIN_NUM_D1) &amp;&amp;&#10;-         (d2 == (int)SDMMC_SLOT1_IOMUX_PIN_NUM_D2) &amp;&amp;&#10;-         (d3 == (int)SDMMC_SLOT1_IOMUX_PIN_NUM_D3)));&#10;+                   (cmd == (int)SDMMC_SLOT1_IOMUX_PIN_NUM_CMD) &amp;&amp;&#10;+                   (d0 == (int)SDMMC_SLOT1_IOMUX_PIN_NUM_D0) &amp;&amp;&#10;+                   (((d1 == -1) &amp;&amp; (d2 == -1) &amp;&amp; (d3 == -1)) ||&#10;+                   ((d1 == (int)SDMMC_SLOT1_IOMUX_PIN_NUM_D1) &amp;&amp;&#10;+                   (d2 == (int)SDMMC_SLOT1_IOMUX_PIN_NUM_D2) &amp;&amp;&#10;+                   (d3 == (int)SDMMC_SLOT1_IOMUX_PIN_NUM_D3)));&#10;     if (!pins_ok) {&#10;         log_e("SDMMCFS: specified pins are not supported by this chip.");&#10;         return false;&#10;@@ -89,6 +107,8 @@ bool SDMMCFS::begin(const char * mountpoint, bool mode1bit, bool format_if_mount&#10;     if(_card) {&#10;         return true;&#10;     }&#10;+    perimanSetBusDeinit(ESP32_BUS_TYPE_SDMMC, SDMMCFS::sdmmcDetachBus);&#10;+&#10;     //mount&#10;     sdmmc_slot_config_t slot_config = SDMMC_SLOT_CONFIG_DEFAULT();&#10; #ifdef SOC_SDMMC_USE_GPIO_MATRIX&#10;@@ -108,6 +128,16 @@ bool SDMMCFS::begin(const char * mountpoint, bool mode1bit, bool format_if_mount&#10;     slot_config.d3 = (gpio_num_t) _pin_d3;&#10;     slot_config.width = 4;&#10; #endif // SOC_SDMMC_USE_GPIO_MATRIX&#10;+&#10;+    if(!perimanSetPinBus(_pin_cmd, ESP32_BUS_TYPE_INIT, NULL)){ return false; }&#10;+    if(!perimanSetPinBus(_pin_clk, ESP32_BUS_TYPE_INIT, NULL)){ return false; }&#10;+    if(!perimanSetPinBus(_pin_d0,  ESP32_BUS_TYPE_INIT, NULL)){ return false; }&#10;+    if(!mode1bit) {&#10;+        if(!perimanSetPinBus(_pin_d1, ESP32_BUS_TYPE_INIT, NULL)){ return false; }&#10;+        if(!perimanSetPinBus(_pin_d2, ESP32_BUS_TYPE_INIT, NULL)){ return false; }&#10;+        if(!perimanSetPinBus(_pin_d3, ESP32_BUS_TYPE_INIT, NULL)){ return false; }&#10;+    }&#10;+    &#10;     sdmmc_host_t host = SDMMC_HOST_DEFAULT();&#10;     host.flags = SDMMC_HOST_FLAG_4BIT;&#10;     host.slot = SDMMC_HOST_SLOT_1;&#10;@@ -119,11 +149,13 @@ bool SDMMCFS::begin(const char * mountpoint, bool mode1bit, bool format_if_mount&#10;         host.flags = SDMMC_HOST_FLAG_1BIT; //use 1-line SD mode&#10;         slot_config.width = 1;&#10;     }&#10;+    _mode1bit = mode1bit;&#10; &#10;     esp_vfs_fat_sdmmc_mount_config_t mount_config = {&#10;         .format_if_mount_failed = format_if_mount_failed,&#10;         .max_files = maxOpenFiles,&#10;-        .allocation_unit_size = 0&#10;+        .allocation_unit_size = 0,&#10;+        .disk_status_check_enable = false&#10;     };&#10; &#10;     esp_err_t ret = esp_vfs_fat_sdmmc_mount(mountpoint, &amp;host, &amp;slot_config, &amp;mount_config, &amp;_card);&#10;@@ -141,15 +173,37 @@ bool SDMMCFS::begin(const char * mountpoint, bool mode1bit, bool format_if_mount&#10;         return false;&#10;     }&#10;     _impl-&gt;mountpoint(mountpoint);&#10;+&#10;+    if(!perimanSetPinBus(_pin_cmd, ESP32_BUS_TYPE_SDMMC, (void *)(this))){ goto err; }&#10;+    if(!perimanSetPinBus(_pin_clk, ESP32_BUS_TYPE_SDMMC, (void *)(this))){ goto err; }&#10;+    if(!perimanSetPinBus(_pin_d0,  ESP32_BUS_TYPE_SDMMC, (void *)(this))){ goto err; }&#10;+    if(!mode1bit) {&#10;+        if(!perimanSetPinBus(_pin_d1, ESP32_BUS_TYPE_SDMMC, (void *)(this))){ goto err; }&#10;+        if(!perimanSetPinBus(_pin_d2, ESP32_BUS_TYPE_SDMMC, (void *)(this))){ goto err; }&#10;+        if(!perimanSetPinBus(_pin_d3, ESP32_BUS_TYPE_SDMMC, (void *)(this))){ goto err; }&#10;+    }&#10;     return true;&#10;+&#10;+err:&#10;+    log_e("Failed to set all pins bus to SDMMC");&#10;+    SDMMCFS::sdmmcDetachBus((void *)(this));&#10;+    return false;&#10; }&#10; &#10; void SDMMCFS::end()&#10; {&#10;     if(_card) {&#10;-        esp_vfs_fat_sdmmc_unmount();&#10;+        esp_vfs_fat_sdcard_unmount(_impl-&gt;mountpoint(), _card);&#10;         _impl-&gt;mountpoint(NULL);&#10;         _card = NULL;&#10;+        perimanSetPinBus(_pin_cmd, ESP32_BUS_TYPE_INIT, NULL);&#10;+        perimanSetPinBus(_pin_clk, ESP32_BUS_TYPE_INIT, NULL);&#10;+        perimanSetPinBus(_pin_d0,  ESP32_BUS_TYPE_INIT, NULL);&#10;+        if(!_mode1bit) {&#10;+            perimanSetPinBus(_pin_d1, ESP32_BUS_TYPE_INIT, NULL);&#10;+            perimanSetPinBus(_pin_d2, ESP32_BUS_TYPE_INIT, NULL);&#10;+            perimanSetPinBus(_pin_d3, ESP32_BUS_TYPE_INIT, NULL);&#10;+        }&#10;     }&#10; }&#10; &#10;' />
			<string key="comment_change" value="True" />
		</event>
	</trace>
	<trace>
		<string key="file" value="WString.cpp" />
		<event>
			<string key="timestamp" value="2023-02-15T14:22:30+02:00" />
			<string key="author" value="David McCurley" />
			<string key="change_type" value="MODIFY" />
			<string key="commit_message" value="WString Fix int64_t (#7765)&#10;&#10;WString Fix int64_t&#13;&#10;&#13;&#10;Fixed int64_t String support. Resolves issue #7760.&#13;&#10;&#13;&#10;Background:&#13;&#10;sprintf on esp32 doesn't support &quot;%lld&quot; parameter.  It's possible to recompile the underlying libraries to add that option, but I have an easier solution.&#13;&#10;This has already been solved in ESP8266 version of WString by replacing sprintf() with itoa/ltoa/lltoa.&#13;&#10;&#13;&#10;This PR does the following:&#13;&#10;Fixes integer print issues by replacing sprintf() with itoa/ltoa/lltoa&#13;&#10;Moves concat(long long num), concat(unsigned long long num) location (match ESP8266)&#13;&#10;Cleans up code formatting (matches ESP8266)&#13;&#10;&#13;&#10;Co-authored-by: Me No Dev &lt;me-no-dev@users.noreply.github.com&gt;" />
			<int key="additions" value="50" />
			<int key="deletions" value="63" />
			<string key="diff" value="@@ -21,7 +21,7 @@&#10;  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA&#10;  */&#10; &#10;-#include &lt;Arduino.h&gt;&#10;+#include &quot;Arduino.h&quot;&#10; #include &quot;WString.h&quot;&#10; #include &quot;stdlib_noniso.h&quot;&#10; #include &quot;esp32-hal-log.h&quot;&#10;@@ -80,11 +80,7 @@ String::String(unsigned char value, unsigned char base) {&#10; String::String(int value, unsigned char base) {&#10;     init();&#10;     char buf[2 + 8 * sizeof(int)];&#10;-    if (base == 10) {&#10;-        sprintf(buf, &quot;%d&quot;, value);&#10;-    } else {&#10;-        itoa(value, buf, base);&#10;-    }&#10;+    itoa(value, buf, base);&#10;     *this = buf;&#10; }&#10; &#10;@@ -98,11 +94,7 @@ String::String(unsigned int value, unsigned char base) {&#10; String::String(long value, unsigned char base) {&#10;     init();&#10;     char buf[2 + 8 * sizeof(long)];&#10;-    if (base==10) {&#10;-        sprintf(buf, &quot;%ld&quot;, value);&#10;-    } else {&#10;-        ltoa(value, buf, base);&#10;-    }&#10;+    ltoa(value, buf, base);&#10;     *this = buf;&#10; }&#10; &#10;@@ -140,11 +132,7 @@ String::String(double value, unsigned int decimalPlaces) {&#10; String::String(long long value, unsigned char base) {&#10;     init();&#10;     char buf[2 + 8 * sizeof(long long)];&#10;-    if (base==10) {&#10;-        sprintf(buf, &quot;%lld&quot;, value);   // NOT SURE - NewLib Nano ... does it support %lld? &#10;-    } else {&#10;-        lltoa(value, buf, base);&#10;-    }&#10;+    lltoa(value, buf, base);&#10;     *this = buf;&#10; }&#10; &#10;@@ -159,9 +147,9 @@ String::~String() {&#10;     invalidate();&#10; }&#10; &#10;-// /*********************************************/&#10;-// /*  Memory Management                        */&#10;-// /*********************************************/&#10;+/*********************************************/&#10;+/*  Memory Management                        */&#10;+/*********************************************/&#10; &#10; inline void String::init(void) {&#10;     setSSO(false);&#10;@@ -221,8 +209,7 @@ bool String::changeBuffer(unsigned int maxStrLen) {&#10;             // Copy the SSO buffer into allocated space&#10;             memmove(newbuffer, sso.buff, sizeof(sso.buff));&#10;         }&#10;-        if (newSize &gt; oldSize)&#10;-        {&#10;+        if (newSize &gt; oldSize) {&#10;             memset(newbuffer + oldSize, 0, newSize - oldSize);&#10;         }&#10;         setSSO(false);&#10;@@ -234,9 +221,9 @@ bool String::changeBuffer(unsigned int maxStrLen) {&#10;     return false;&#10; }&#10; &#10;-// /*********************************************/&#10;-// /*  Copy and Move                            */&#10;-// /*********************************************/&#10;+/*********************************************/&#10;+/*  Copy and Move                            */&#10;+/*********************************************/&#10; &#10; String &amp; String::copy(const char *cstr, unsigned int length) {&#10;     if(!reserve(length)) {&#10;@@ -292,12 +279,10 @@ void String::move(String &amp;rhs) {&#10; String &amp; String::operator =(const String &amp;rhs) {&#10;     if(this == &amp;rhs)&#10;         return *this;&#10;-&#10;     if(rhs.buffer())&#10;         copy(rhs.buffer(), rhs.len());&#10;     else&#10;         invalidate();&#10;-&#10;     return *this;&#10; }&#10; &#10;@@ -320,7 +305,6 @@ String &amp; String::operator =(const char *cstr) {&#10;         copy(cstr, strlen(cstr));&#10;     else&#10;         invalidate();&#10;-&#10;     return *this;&#10; }&#10; &#10;@@ -333,9 +317,9 @@ String &amp; String::operator =(const __FlashStringHelper *pstr) {&#10;     return *this;&#10; }&#10; &#10;-// /*********************************************/&#10;-// /*  concat                                   */&#10;-// /*********************************************/&#10;+/*********************************************/&#10;+/*  concat                                   */&#10;+/*********************************************/&#10; &#10; bool String::concat(const String &amp;s) {&#10;     // Special case if we're concatting ourself (s += s;) since we may end up&#10;@@ -388,12 +372,14 @@ bool String::concat(char c) {&#10; &#10; bool String::concat(unsigned char num) {&#10;     char buf[1 + 3 * sizeof(unsigned char)];&#10;-    return concat(buf, sprintf(buf, &quot;%d&quot;, num));&#10;+    utoa(num, buf, 10);&#10;+    return concat(buf, strlen(buf));&#10; }&#10; &#10; bool String::concat(int num) {&#10;     char buf[2 + 3 * sizeof(int)];&#10;-    return concat(buf, sprintf(buf, &quot;%d&quot;, num));&#10;+    itoa(num, buf, 10);&#10;+    return concat(buf, strlen(buf));&#10; }&#10; &#10; bool String::concat(unsigned int num) {&#10;@@ -404,7 +390,8 @@ bool String::concat(unsigned int num) {&#10; &#10; bool String::concat(long num) {&#10;     char buf[2 + 3 * sizeof(long)];&#10;-    return concat(buf, sprintf(buf, &quot;%ld&quot;, num));&#10;+    ltoa(num, buf, 10);&#10;+    return concat(buf, strlen(buf));&#10; }&#10; &#10; bool String::concat(unsigned long num) {&#10;@@ -413,6 +400,18 @@ bool String::concat(unsigned long num) {&#10;     return concat(buf, strlen(buf));&#10; }&#10; &#10;+bool String::concat(long long num) {&#10;+    char buf[2 + 3 * sizeof(long long)];&#10;+    lltoa(num, buf, 10);&#10;+    return concat(buf, strlen(buf));&#10;+}&#10;+&#10;+bool String::concat(unsigned long long num) {&#10;+    char buf[1 + 3 * sizeof(unsigned long long)];&#10;+    ulltoa(num, buf, 10);&#10;+    return concat(buf, strlen(buf));&#10;+}&#10;+&#10; bool String::concat(float num) {&#10;     char buf[20];&#10;     char* string = dtostrf(num, 4, 2, buf);&#10;@@ -425,17 +424,6 @@ bool String::concat(double num) {&#10;     return concat(string, strlen(string));&#10; }&#10; &#10;-bool String::concat(long long num) {&#10;-    char buf[2 + 3 * sizeof(long long)];&#10;-    return concat(buf, sprintf(buf, &quot;%lld&quot;, num));    // NOT SURE - NewLib Nano ... does it support %lld?&#10;-}&#10;-&#10;-bool String::concat(unsigned long long num) {&#10;-    char buf[1 + 3 * sizeof(unsigned long long)];&#10;-    ulltoa(num, buf, 10);&#10;-    return concat(buf, strlen(buf));&#10;-}&#10;-&#10; bool String::concat(const __FlashStringHelper * str) {&#10;     if (!str)&#10;         return false;&#10;@@ -546,9 +534,9 @@ StringSumHelper &amp; operator + (const StringSumHelper &amp;lhs, const __FlashStringHel&#10;     return a;&#10; }&#10; &#10;-// /*********************************************/&#10;-// /*  Comparison                               */&#10;-// /*********************************************/&#10;+/*********************************************/&#10;+/*  Comparison                               */&#10;+/*********************************************/&#10; &#10; int String::compareTo(const String &amp;s) const {&#10;     if(!buffer() || !s.buffer()) {&#10;@@ -650,9 +638,9 @@ bool String::endsWith(const String &amp;s2) const {&#10;     return strcmp(&amp;buffer()[len() - s2.len()], s2.buffer()) == 0;&#10; }&#10; &#10;-// /*********************************************/&#10;-// /*  Character Access                         */&#10;-// /*********************************************/&#10;+/*********************************************/&#10;+/*  Character Access                         */&#10;+/*********************************************/&#10; &#10; char String::charAt(unsigned int loc) const {&#10;     return operator[](loc);&#10;@@ -692,9 +680,9 @@ void String::getBytes(unsigned char *buf, unsigned int bufsize, unsigned int ind&#10;     buf[n] = 0;&#10; }&#10; &#10;-// /*********************************************/&#10;-// /*  Search                                   */&#10;-// /*********************************************/&#10;+/*********************************************/&#10;+/*  Search                                   */&#10;+/*********************************************/&#10; &#10; int String::indexOf(char c) const {&#10;     return indexOf(c, 0);&#10;@@ -703,7 +691,7 @@ int String::indexOf(char c) const {&#10; int String::indexOf(char ch, unsigned int fromIndex) const {&#10;     if(fromIndex &gt;= len())&#10;         return -1;&#10;-    const char* temp = strchr(buffer() + fromIndex, ch);&#10;+    const char *temp = strchr(buffer() + fromIndex, ch);&#10;     if(temp == NULL)&#10;         return -1;&#10;     return temp - buffer();&#10;@@ -773,9 +761,9 @@ String String::substring(unsigned int left, unsigned int right) const {&#10;     return out;&#10; }&#10; &#10;-// /*********************************************/&#10;-// /*  Modification                             */&#10;-// /*********************************************/&#10;+/*********************************************/&#10;+/*  Modification                             */&#10;+/*********************************************/&#10; &#10; void String::replace(char find, char replace) {&#10;     if(!buffer())&#10;@@ -786,7 +774,7 @@ void String::replace(char find, char replace) {&#10;     }&#10; }&#10; &#10;-void String::replace(const String&amp; find, const String&amp; replace) {&#10;+void String::replace(const String &amp;find, const String &amp;replace) {&#10;     if(len() == 0 || find.len() == 0)&#10;         return;&#10;     int diff = replace.len() - find.len();&#10;@@ -892,9 +880,9 @@ void String::trim(void) {&#10;     wbuffer()[newlen] = 0;&#10; }&#10; &#10;-// /*********************************************/&#10;-// /*  Parsing / Conversion                     */&#10;-// /*********************************************/&#10;+/*********************************************/&#10;+/*  Parsing / Conversion                     */&#10;+/*********************************************/&#10; &#10; long String::toInt(void) const {&#10;     if (buffer())&#10;@@ -908,8 +896,7 @@ float String::toFloat(void) const {&#10;     return 0;&#10; }&#10; &#10;-double String::toDouble(void) const&#10;-{&#10;+double String::toDouble(void) const {&#10;     if (buffer())&#10;         return atof(buffer());&#10;     return 0.0;&#10;" />
			<string key="comment_change" value="False" />
		</event>
		<event>
			<string key="timestamp" value="2023-04-06T13:32:21+03:00" />
			<string key="author" value="Dirk O. Kaar" />
			<string key="change_type" value="MODIFY" />
			<string key="commit_message" value="Completely inline the helper pure abstract __FlashStringHelper class (#7941)&#10;&#10;* Remove __FlashStringHelper from ESP32, it's not needed - all the files using it are different from their ESP8266 counterparts anyway.&#13;&#10;&#13;&#10;* Revert removal of class __FlashStringHelper forward for continued compatibility with external libs&#13;&#10;&#13;&#10;* Improved fix, works for libs that return const __FlashStringHelper*&#13;&#10;&#13;&#10;* Inline all wrappers using const __FlashStringHelper*." />
			<int key="additions" value="0" />
			<int key="deletions" value="46" />
			<string key="diff" value="@@ -47,11 +47,6 @@ String::String(const String &amp;value) {&#10;     *this = value;&#10; }&#10; &#10;-String::String(const __FlashStringHelper *pstr) {&#10;-    init();&#10;-    *this = pstr; // see operator =&#10;-}&#10;-&#10; #ifdef __GXX_EXPERIMENTAL_CXX0X__&#10; String::String(String &amp;&amp;rval) {&#10;     init();&#10;@@ -235,16 +230,6 @@ String &amp; String::copy(const char *cstr, unsigned int length) {&#10;     return *this;&#10; }&#10; &#10;-String &amp; String::copy(const __FlashStringHelper *pstr, unsigned int length) {&#10;-    if (!reserve(length)) {&#10;-        invalidate();&#10;-        return *this;&#10;-    }&#10;-    memcpy_P(wbuffer(), (PGM_P)pstr, length + 1); // We know wbuffer() cannot ever be in PROGMEM, so memcpy safe here&#10;-    setLen(length);&#10;-    return *this;&#10;-}&#10;-&#10; #ifdef __GXX_EXPERIMENTAL_CXX0X__&#10; void String::move(String &amp;rhs) {&#10;     if(buffer()) {&#10;@@ -308,15 +293,6 @@ String &amp; String::operator =(const char *cstr) {&#10;     return *this;&#10; }&#10; &#10;-String &amp; String::operator =(const __FlashStringHelper *pstr) {&#10;-    if(pstr)&#10;-        copy(pstr, strlen_P((PGM_P)pstr));&#10;-    else&#10;-        invalidate();&#10;-&#10;-    return *this;&#10;-}&#10;-&#10; /*********************************************/&#10; /*  concat                                   */&#10; /*********************************************/&#10;@@ -424,20 +400,6 @@ bool String::concat(double num) {&#10;     return concat(string, strlen(string));&#10; }&#10; &#10;-bool String::concat(const __FlashStringHelper * str) {&#10;-    if (!str)&#10;-        return false;&#10;-    int length = strlen_P((PGM_P)str);&#10;-    if (length == 0)&#10;-        return true;&#10;-    unsigned int newlen = len() + length;&#10;-    if (!reserve(newlen))&#10;-        return false;&#10;-    memcpy_P(wbuffer() + len(), (PGM_P)str, length + 1);&#10;-    setLen(newlen);&#10;-    return true;&#10;-}&#10;-&#10; /*********************************************/&#10; /*  Concatenate                              */&#10; /*********************************************/&#10;@@ -526,14 +488,6 @@ StringSumHelper &amp; operator +(const StringSumHelper &amp;lhs, unsigned long long num)&#10;     return a;&#10; }&#10; &#10;-StringSumHelper &amp; operator + (const StringSumHelper &amp;lhs, const __FlashStringHelper *rhs)&#10;-{&#10;-    StringSumHelper &amp;a = const_cast&lt;StringSumHelper&amp;&gt;(lhs);&#10;-    if (!a.concat(rhs))&#10;-        a.invalidate();&#10;-    return a;&#10;-}&#10;-&#10; /*********************************************/&#10; /*  Comparison                               */&#10; /*********************************************/&#10;" />
			<string key="comment_change" value="False" />
		</event>
	</trace>
	<trace>
		<string key="file" value="WString.h" />
	</trace>
	<trace>
		<string key="file" value="partitions-4MB-tinyuf2.csv" />
	</trace>
	<trace>
		<string key="file" value="WiFiAccessPoint.ino" />
	</trace>
	<trace>
		<string key="file" value="WiFiAP.cpp" />
		<event>
			<string key="timestamp" value="2023-02-13T12:28:50+02:00" />
			<string key="author" value="Rodrigo Garcia" />
			<string key="change_type" value="MODIFY" />
			<string key="commit_message" value="Avoid starting AP Mode even when the password is too short (#7832)&#10;&#10;* Avoid starting AP Mode even when the password is too short&#13;&#10;&#13;&#10;* Check SoftAP return code in case of failure" />
			<int key="additions" value="7" />
			<int key="deletions" value="6" />
			<string key="diff" value='@@ -136,12 +136,6 @@ void wifi_softap_config(wifi_config_t *wifi_config, const char * ssid=NULL, cons&#10; bool WiFiAPClass::softAP(const char* ssid, const char* passphrase, int channel, int ssid_hidden, int max_connection, bool ftm_responder)&#10; {&#10; &#10;-    if(!WiFi.enableAP(true)) {&#10;-        // enable AP failed&#10;-        log_e("enable AP first!");&#10;-        return false;&#10;-    }&#10;-&#10;     if(!ssid || *ssid == 0) {&#10;         // fail SSID missing&#10;         log_e("SSID missing!");&#10;@@ -154,6 +148,13 @@ bool WiFiAPClass::softAP(const char* ssid, const char* passphrase, int channel,&#10;         return false;&#10;     }&#10; &#10;+    // last step after checking the SSID and password&#10;+    if(!WiFi.enableAP(true)) {&#10;+        // enable AP failed&#10;+        log_e("enable AP first!");&#10;+        return false;&#10;+    }&#10;+&#10;     wifi_config_t conf;&#10;     wifi_config_t conf_current;&#10;     wifi_softap_config(&amp;conf, ssid, passphrase, channel, WIFI_AUTH_WPA2_PSK, ssid_hidden, max_connection, ftm_responder);&#10;' />
			<string key="comment_change" value="True" />
		</event>
	</trace>
	<trace>
		<string key="file" value=".skip.esp32c3" />
	</trace>
	<trace>
		<string key="file" value=".skip.esp32s2" />
	</trace>
	<trace>
		<string key="file" value=".skip.esp32s3" />
	</trace>
	<trace>
		<string key="file" value="GetLocalMAC.ino" />
	</trace>
	<trace>
		<string key="file" value="BTAddress.cpp" />
	</trace>
	<trace>
		<string key="file" value="BTAddress.h" />
	</trace>
	<trace>
		<string key="file" value="BTAdvertisedDeviceSet.cpp" />
	</trace>
	<trace>
		<string key="file" value="BTScanResultsSet.cpp" />
	</trace>
	<trace>
		<string key="file" value="Arduino.h" />
	</trace>
	<trace>
		<string key="file" value="BLE_Beacon_Scanner.ino" />
	</trace>
	<trace>
		<string key="file" value="BLE_EddystoneTLM_Beacon.ino" />
	</trace>
	<trace>
		<string key="file" value="BLEBeacon.cpp" />
	</trace>
	<trace>
		<string key="file" value="BLEEddystoneTLM.cpp" />
		<event>
			<string key="timestamp" value="2023-02-20T13:30:04+02:00" />
			<string key="author" value="Tomáš Pilný" />
			<string key="change_type" value="MODIFY" />
			<string key="commit_message" value='Fix for negative temp in Eddystone TLM; solving #7618 (#7791)&#10;&#10;* Changed data type of temperature&#13;&#10;&#13;&#10;* Changed data type in EddystoneTLM class and example&#13;&#10;&#13;&#10;* Revert "Changed data type in EddystoneTLM class and example"&#13;&#10;&#13;&#10;This reverts commit 1f3a9414ee13341f80bd6d51cdbd57254aadfe97.&#13;&#10;&#13;&#10;* Draft of Eddystone TLM example&#13;&#10;&#13;&#10;* Adds MACROs to convert beacon temperature &#13;&#10;&#13;&#10;2 Macros&#13;&#10;EDDYSTONE_TEMP_U16_TO_FLOAT(tempU16)  - takes the TLM BigEndian 8.8 fixed point representation and returns its float value &#13;&#10;EDDYSTONE_TEMP_FLOAT_TO_U16(tempFloat)  - takes a float (temperature) and returns its BigEndian 8.8 fixed point representation&#13;&#10;&#13;&#10;* Fixed temp&#13;&#10;&#13;&#10;* Changed to conform with PR comments&#13;&#10;&#13;&#10;* Fixed comment on closing bracket&#13;&#10;&#13;&#10;* Prints negative TEMP big endian as just 2 bytes&#13;&#10;&#13;&#10;* Extacts correct Eddyston Service Data&#13;&#10;&#13;&#10;* Fixes BLEEddystoneTLM::toString() negative temp&#13;&#10;&#13;&#10;* Fixes URL field length&#13;&#10;&#13;&#10;* Fixes Eddystone URL decoding&#13;&#10;&#13;&#10;* Fixes MSB for iBeacon UUID&#13;&#10;&#13;&#10;iBeacons use big endian BLE fields.&#13;&#10;&#13;&#10;* Fix to detect iBeacon that also has Service UUID&#13;&#10;&#13;&#10;This fix makes the BLE_iBeacon.ino to work correctly with the BLE_Beacon_Scanner.ino example&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Rodrigo Garcia &lt;rodrigo.garcia@espressif.com&gt;' />
			<int key="additions" value="22" />
			<int key="deletions" value="5" />
			<string key="diff" value='@@ -17,8 +17,6 @@&#10; #include "BLEEddystoneTLM.h"&#10; &#10; static const char LOG_TAG[] = "BLEEddystoneTLM";&#10;-#define ENDIAN_CHANGE_U16(x) ((((x)&amp;0xFF00)&gt;&gt;8) + (((x)&amp;0xFF)&lt;&lt;8))&#10;-#define ENDIAN_CHANGE_U32(x) ((((x)&amp;0xFF000000)&gt;&gt;24) + (((x)&amp;0x00FF0000)&gt;&gt;8)) + ((((x)&amp;0xFF00)&lt;&lt;8) + (((x)&amp;0xFF)&lt;&lt;24))&#10; &#10; BLEEddystoneTLM::BLEEddystoneTLM() {&#10; &#9;beaconUUID = 0xFEAA;&#10;@@ -47,9 +45,13 @@ uint16_t BLEEddystoneTLM::getVolt() {&#10; } // getVolt&#10; &#10; float BLEEddystoneTLM::getTemp() {&#10;-&#9;return ENDIAN_CHANGE_U16(m_eddystoneData.temp) / 256.0f;&#10;+  return EDDYSTONE_TEMP_U16_TO_FLOAT(m_eddystoneData.temp);&#10; } // getTemp&#10; &#10;+uint16_t BLEEddystoneTLM::getRawTemp() {&#10;+&#9;return ENDIAN_CHANGE_U16(m_eddystoneData.temp);&#10;+} // getRawTemp&#10;+&#10; uint32_t BLEEddystoneTLM::getCount() {&#10; &#9;return ENDIAN_CHANGE_U32(m_eddystoneData.advCount);&#10; } // getCount&#10;@@ -73,7 +75,7 @@ std::string BLEEddystoneTLM::toString() {&#10;   out += " mV\n";&#10; &#10;   out += "Temperature ";&#10;-  snprintf(val, sizeof(val), "%.2f", ENDIAN_CHANGE_U16(m_eddystoneData.temp) / 256.0f);&#10;+  snprintf(val, sizeof(val), "%.2f", ((int16_t)ENDIAN_CHANGE_U16(m_eddystoneData.temp)) / 256.0f);&#10;   out += val;&#10;   out += " C\n";&#10; &#10;@@ -110,6 +112,21 @@ std::string BLEEddystoneTLM::toString() {&#10; &#10; /**&#10;  * Set the raw data for the beacon record.&#10;+ * Example:&#10;+ * uint8_t *payLoad = advertisedDevice.getPayload();&#10;+ * eddystoneTLM.setData(std::string((char*)payLoad+22, advertisedDevice.getPayloadLength() - 22));&#10;+ * Note: the offset 22 works for current implementation of example BLE_EddystoneTLM Beacon.ino, however it is not static and will be reimplemented&#10;+ * Data frame:&#10;+ * | Field  || Len | Type | UUID        | EddyStone TLM |&#10;+ * | Offset || 0   | 1    | 2           | 4             |&#10;+ * | Len    || 1 B | 1 B  | 2 B         | 14 B          |&#10;+ * | Data   || ??  | ??   | 0xAA | 0xFE | ???           |&#10;+ *&#10;+ * EddyStone TLM frame:&#10;+ * | Field  || Type  | Version | Batt mV     | Beacon temp | Cnt since boot | Time since boot |&#10;+ * | Offset || 0     | 1       | 2           | 4           | 6              | 10              |&#10;+ * | Len    || 1 B   | 1 B     | 2 B         | 2 B         | 4 B            | 4 B             |&#10;+ * | Data   || 0x20  | ??      | ??   | ??   | ??    | ??  |   |   |   |    |   |   |   |     |&#10;  */&#10; void BLEEddystoneTLM::setData(std::string data) {&#10; &#9;if (data.length() != sizeof(m_eddystoneData)) {&#10;@@ -132,7 +149,7 @@ void BLEEddystoneTLM::setVolt(uint16_t volt) {&#10; } // setVolt&#10; &#10; void BLEEddystoneTLM::setTemp(float temp) {&#10;-&#9;m_eddystoneData.temp = (uint16_t)temp;&#10;+&#9;m_eddystoneData.temp = EDDYSTONE_TEMP_FLOAT_TO_U16(temp);&#10; } // setTemp&#10; &#10; void BLEEddystoneTLM::setCount(uint32_t advCount) {&#10;' />
			<string key="comment_change" value="True" />
		</event>
		<event>
			<string key="timestamp" value="2023-10-06T15:50:11+03:00" />
			<string key="author" value="Me No Dev" />
			<string key="change_type" value="MODIFY" />
			<string key="commit_message" value="BLE upgrades (#8724)&#10;&#10;* Renamed library description&#13;&#10;&#13;&#10;* Updated Eddystone URL (not complete)&#13;&#10;&#13;&#10;* Updated Eddystone URL&#13;&#10;&#13;&#10;* Updated Eddystone classes and beacon scanner&#13;&#10;&#13;&#10;* Renamed examples - removing prefix BLE_&#13;&#10;&#13;&#10;* Renamed Beacon_Scanner&#13;&#10;&#13;&#10;* Updated TLM&#13;&#10;&#13;&#10;* Changed std::string to Arduino String&#13;&#10;&#13;&#10;* More std::string -&gt; String&#13;&#10;&#13;&#10;* Changed String in forgotten file&#13;&#10;&#13;&#10;* Changed .data to .c_str&#13;&#10;&#13;&#10;* Reverting single String type change&#13;&#10;&#13;&#10;* Few more fixes related to the String transition&#13;&#10;&#13;&#10;* Fixed URL and Utils error&#13;&#10;&#13;&#10;* Added and modified compatibility safeguards for BLE5 examples&#13;&#10;&#13;&#10;* Added #include WString.h&#13;&#10;&#13;&#10;* Fixed Beacon_Scanner&#13;&#10;&#13;&#10;* Remove commented include&#13;&#10;&#13;&#10;Co-authored-by: Lucas Saavedra Vaz &lt;lucassvaz@yahoo.com.br&gt;&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Tomas Pilny &lt;tomas.pilny@espressif.com&gt;&#13;&#10;Co-authored-by: Lucas Saavedra Vaz &lt;lucassvaz@yahoo.com.br&gt;" />
			<int key="additions" value="48" />
			<int key="deletions" value="36" />
			<string key="diff" value='@@ -22,29 +22,39 @@&#10; static const char LOG_TAG[] = "BLEEddystoneTLM";&#10; &#10; BLEEddystoneTLM::BLEEddystoneTLM() {&#10;-&#9;beaconUUID = 0xFEAA;&#10;-&#9;m_eddystoneData.frameType = EDDYSTONE_TLM_FRAME_TYPE;&#10;-&#9;m_eddystoneData.version = 0;&#10;-&#9;m_eddystoneData.volt = 3300; // 3300mV = 3.3V&#10;-&#9;m_eddystoneData.temp = (uint16_t) ((float) 23.00)/256;&#10;-&#9;m_eddystoneData.advCount = 0;&#10;-&#9;m_eddystoneData.tmil = 0;&#10;+  m_eddystoneData.frameType = EDDYSTONE_TLM_FRAME_TYPE;&#10;+  m_eddystoneData.version = 0;&#10;+  m_eddystoneData.volt = 3300; // 3300mV = 3.3V&#10;+  m_eddystoneData.temp = (uint16_t) ((float) 23.00)/256;&#10;+  m_eddystoneData.advCount = 0;&#10;+  m_eddystoneData.tmil = 0;&#10; } // BLEEddystoneTLM&#10; &#10;-std::string BLEEddystoneTLM::getData() {&#10;-&#9;return std::string((char*) &amp;m_eddystoneData, sizeof(m_eddystoneData));&#10;+BLEEddystoneTLM::BLEEddystoneTLM(BLEAdvertisedDevice *advertisedDevice){&#10;+  char* payload = (char*)advertisedDevice-&gt;getPayload();&#10;+  for(int i = 0; i &lt; advertisedDevice-&gt;getPayloadLength(); ++i){&#10;+    if(payload[i] == 0x16 &amp;&amp; advertisedDevice-&gt;getPayloadLength() &gt;= i+2+sizeof(m_eddystoneData) &amp;&amp; payload[i+1] == 0xAA &amp;&amp; payload[i+2] == 0xFE &amp;&amp; payload[i+3] == 0x20){&#10;+      log_d("Eddystone TLM data frame starting at byte [%d]", i+3);&#10;+      setData(String(payload+i+3, sizeof(m_eddystoneData)));&#10;+      break;&#10;+    }&#10;+  }&#10;+}&#10;+&#10;+String BLEEddystoneTLM::getData() {&#10;+  return String((char*) &amp;m_eddystoneData, sizeof(m_eddystoneData));&#10; } // getData&#10; &#10; BLEUUID BLEEddystoneTLM::getUUID() {&#10;-&#9;return BLEUUID(beaconUUID);&#10;+  return beaconUUID;&#10; } // getUUID&#10; &#10; uint8_t BLEEddystoneTLM::getVersion() {&#10;-&#9;return m_eddystoneData.version;&#10;+  return m_eddystoneData.version;&#10; } // getVersion&#10; &#10; uint16_t BLEEddystoneTLM::getVolt() {&#10;-&#9;return ENDIAN_CHANGE_U16(m_eddystoneData.volt);&#10;+  return ENDIAN_CHANGE_U16(m_eddystoneData.volt);&#10; } // getVolt&#10; &#10; float BLEEddystoneTLM::getTemp() {&#10;@@ -52,25 +62,25 @@ float BLEEddystoneTLM::getTemp() {&#10; } // getTemp&#10; &#10; uint16_t BLEEddystoneTLM::getRawTemp() {&#10;-&#9;return ENDIAN_CHANGE_U16(m_eddystoneData.temp);&#10;+  return ENDIAN_CHANGE_U16(m_eddystoneData.temp);&#10; } // getRawTemp&#10; &#10; uint32_t BLEEddystoneTLM::getCount() {&#10;-&#9;return ENDIAN_CHANGE_U32(m_eddystoneData.advCount);&#10;+  return ENDIAN_CHANGE_U32(m_eddystoneData.advCount);&#10; } // getCount&#10; &#10; uint32_t BLEEddystoneTLM::getTime() {&#10;-&#9;return (ENDIAN_CHANGE_U32(m_eddystoneData.tmil)) / 10;&#10;+  return (ENDIAN_CHANGE_U32(m_eddystoneData.tmil)) / 10;&#10; } // getTime&#10; &#10;-std::string BLEEddystoneTLM::toString() {&#10;-  std::string out = "";&#10;+String BLEEddystoneTLM::toString() {&#10;+  String out = "";&#10;   uint32_t rawsec = ENDIAN_CHANGE_U32(m_eddystoneData.tmil);&#10;   char val[12];&#10; &#10;-  out += "Version "; // + std::string(m_eddystoneData.version);&#10;-  snprintf(val, sizeof(val), "%d", m_eddystoneData.version);&#10;-  out += val;&#10;+  out += "Version " + String(m_eddystoneData.version);&#10;+  //snprintf(val, sizeof(val), "%d", m_eddystoneData.version);&#10;+  //out += val;&#10;   out += "\n";&#10;   out += "Battery Voltage "; // + ENDIAN_CHANGE_U16(m_eddystoneData.volt);&#10;   snprintf(val, sizeof(val), "%d", ENDIAN_CHANGE_U16(m_eddystoneData.volt));&#10;@@ -116,9 +126,10 @@ std::string BLEEddystoneTLM::toString() {&#10; /**&#10;  * Set the raw data for the beacon record.&#10;  * Example:&#10;- * uint8_t *payLoad = advertisedDevice.getPayload();&#10;- * eddystoneTLM.setData(std::string((char*)payLoad+22, advertisedDevice.getPayloadLength() - 22));&#10;- * Note: the offset 22 works for current implementation of example BLE_EddystoneTLM Beacon.ino, however it is not static and will be reimplemented&#10;+ * uint8_t *payload = advertisedDevice.getPayload();&#10;+ * eddystoneTLM.setData(String((char*)payload+22, advertisedDevice.getPayloadLength() - 22));&#10;+ * Note: the offset 22 works for current implementation of example BLE_EddystoneTLM Beacon.ino, however&#10;+ *   the position is not static and it is programmers responsibility to align the data.&#10;  * Data frame:&#10;  * | Field  || Len | Type | UUID        | EddyStone TLM |&#10;  * | Offset || 0   | 1    | 2           | 4             |&#10;@@ -131,37 +142,38 @@ std::string BLEEddystoneTLM::toString() {&#10;  * | Len    || 1 B   | 1 B     | 2 B         | 2 B         | 4 B            | 4 B             |&#10;  * | Data   || 0x20  | ??      | ??   | ??   | ??    | ??  |   |   |   |    |   |   |   |     |&#10;  */&#10;-void BLEEddystoneTLM::setData(std::string data) {&#10;-&#9;if (data.length() != sizeof(m_eddystoneData)) {&#10;-&#9;&#9;log_e("Unable to set the data ... length passed in was %d and expected %d", data.length(), sizeof(m_eddystoneData));&#10;-&#9;&#9;return;&#10;-&#9;}&#10;-  memcpy(&amp;m_eddystoneData, data.data(), data.length());&#10;+void BLEEddystoneTLM::setData(String data) {&#10;+  if (data.length() != sizeof(m_eddystoneData)) {&#10;+    log_e("Unable to set the data ... length passed in was %d and expected %d", data.length(), sizeof(m_eddystoneData));&#10;+    return;&#10;+  }&#10;+  memcpy(&amp;m_eddystoneData, data.c_str(), data.length());&#10; } // setData&#10; &#10; void BLEEddystoneTLM::setUUID(BLEUUID l_uuid) {&#10;-&#9;beaconUUID = l_uuid.getNative()-&gt;uuid.uuid16;&#10;+  beaconUUID = l_uuid;&#10; } // setUUID&#10; &#10; void BLEEddystoneTLM::setVersion(uint8_t version) {&#10;-&#9;m_eddystoneData.version = version;&#10;+  m_eddystoneData.version = version;&#10; } // setVersion&#10; &#10;+// Set voltage in ESP32 native Big endian and convert it to little endian used for BLE Frame&#10; void BLEEddystoneTLM::setVolt(uint16_t volt) {&#10;-&#9;m_eddystoneData.volt = volt;&#10;+  m_eddystoneData.volt = ENDIAN_CHANGE_U16(volt);&#10; } // setVolt&#10; &#10; void BLEEddystoneTLM::setTemp(float temp) {&#10;-&#9;m_eddystoneData.temp = EDDYSTONE_TEMP_FLOAT_TO_U16(temp);&#10;+  m_eddystoneData.temp = EDDYSTONE_TEMP_FLOAT_TO_U16(temp);&#10; } // setTemp&#10; &#10; void BLEEddystoneTLM::setCount(uint32_t advCount) {&#10;-&#9;m_eddystoneData.advCount = advCount;&#10;+  m_eddystoneData.advCount = advCount;&#10; } // setCount&#10; &#10; void BLEEddystoneTLM::setTime(uint32_t tmil) {&#10;-&#9;m_eddystoneData.tmil = tmil;&#10;+  m_eddystoneData.tmil = tmil;&#10; } // setTime&#10; &#10;-#endif&#10;+#endif /* CONFIG_BLUEDROID_ENABLED */&#10; #endif /* SOC_BLE_SUPPORTED */&#10;' />
			<string key="comment_change" value="True" />
		</event>
	</trace>
	<trace>
		<string key="file" value="BLEEddystoneTLM.h" />
	</trace>
	<trace>
		<string key="file" value="BLEEddystoneURL.h" />
	</trace>
	<trace>
		<string key="file" value="WiFiUdp.cpp" />
	</trace>
	<trace>
		<string key="file" value="HTTPClient.cpp" />
		<event>
			<string key="timestamp" value="2023-10-05T14:54:25+03:00" />
			<string key="author" value="Me No Dev" />
			<string key="change_type" value="MODIFY" />
			<string key="commit_message" value="ESP-IDF v5.1 (#7733)&#10;&#10;* Initial changes to compile under ESP-IDF v5.1&#13;&#10;&#13;&#10;* Initial import for ESP-IDF v5.1 libs&#13;&#10;&#13;&#10;* Update toolchain&#13;&#10;&#13;&#10;* Update esp32-hal-psram.c&#13;&#10;&#13;&#10;* Add missing LDs&#13;&#10;&#13;&#10;* Update platform.txt&#13;&#10;&#13;&#10;* Stop some CI jobs, because they will always fail&#13;&#10;&#13;&#10;* Fix examples&#13;&#10;&#13;&#10;* Update app_httpd.cpp&#13;&#10;&#13;&#10;* Update ResetReason.ino&#13;&#10;&#13;&#10;* Warnings fixes&#13;&#10;&#13;&#10;* Added the example guideline and template (#7665)&#13;&#10;&#13;&#10;* Added the example guideline and template&#13;&#10;&#13;&#10;* PR review changes with some typos and grammar fixes&#13;&#10;&#13;&#10;* Changes according to the PR review&#13;&#10;&#13;&#10;* Added ESP32-S3 link to the datasheet (#7738)&#13;&#10;&#13;&#10;* Update HiFreq_ADC.ino&#13;&#10;&#13;&#10;* Replace periph_ctrl.h use because of deprecation&#13;&#10;&#13;&#10;* Replace esp_spi_flash.h use because of deprecation&#13;&#10;&#13;&#10;* Add includes to male mDNS::enableWorkstation compile&#13;&#10;&#13;&#10;* Fix ssl_client mbedtls_pk_parse_key callback&#13;&#10;&#13;&#10;* Update temperature sensor driver&#13;&#10;&#13;&#10;* Allow sketch_utils to compile with arduino-cli&#13;&#10;&#13;&#10;* Run CI with arduino-cli&#13;&#10;&#13;&#10;* Fix arduino-cli CI build on Windows&#13;&#10;&#13;&#10;* Refactor platform.txt to not use components installed through the board manager when running from git&#13;&#10;&#13;&#10;* Initial Peripheral Manager Implementation&#13;&#10;&#13;&#10;* Update SigmaDelta driver to use the new ESP-IDF driver API&#13;&#10;&#13;&#10;* Small improvements to peripheral manager and SigmaDelta&#13;&#10;&#13;&#10;* Remove deleted function from SigmaDelta header&#13;&#10;&#13;&#10;* Update DAC driver to use the new ESP-IDF driver API&#13;&#10;&#13;&#10;* Adds softAp(String) to make it compatible with ESP8266 (#7801)&#13;&#10;&#13;&#10;* Fix commentary (#7800)&#13;&#10;&#13;&#10;Minor fix based on observation done in https://github.com/espressif/arduino-esp32/issues/7795#issuecomment-1416868611&#13;&#10;&#13;&#10;* add adafruit new board feather esp32s2 reserve tft (#7794)&#13;&#10;&#13;&#10;* bugfix: add &lt;stdint.h&gt; for uint8_t to avoid compilation failure (GCC 11.2.0) (#7744)&#13;&#10;&#13;&#10;* Adding 3rd party boards for VALTRACK-V4-VTS-ESP32-C3 &amp; VALTRACK-V4-MFW-ESP32-C3 (#7735)&#13;&#10;&#13;&#10;* Added VALTRACK-V4-VTS-ESP32-C3 board definition&#13;&#10;&#13;&#10;Created pins_arduino.h &amp; made changes to boards.txt with necessary changes&#13;&#10;&#13;&#10;* Modified the URL&#13;&#10;&#13;&#10;* Renamed json&#13;&#10;&#13;&#10;* renamed all auRL&#13;&#10;&#13;&#10;* Adding VALTRACK-V4 series board definitions&#13;&#10;&#13;&#10;Added VALTRACK-V4-VTS-ESP32C3 &amp; VALTRACK-V4-MFW-ESP32-C3 board variants&#13;&#10;&#13;&#10;* Adding VALTRACK-V4 series board definitions&#13;&#10;&#13;&#10;Added VALTRACK-V4-VTS-ESP32C3 &amp; VALTRACK-V4-MFW-ESP32-C3 board variants&#13;&#10;&#13;&#10;* Reverted package_esp32_index.template.json&#13;&#10;&#13;&#10;restored package_esp32_index.template.json from edits&#13;&#10;&#13;&#10;* Reverted package_esp32_index.template.json&#13;&#10;&#13;&#10;Added new line to package_esp32_index.template.json&#13;&#10;&#13;&#10;* Update Platformio CI (#7725)&#13;&#10;&#13;&#10;* WiFiClient example fix (#7711)&#13;&#10;&#13;&#10;* Modified WiFiClient example to use thingspeak instead of non-functionig sparkfun&#13;&#10;&#13;&#10;* Moved instructions to README&#13;&#10;&#13;&#10;* Fixed spelling&#13;&#10;&#13;&#10;* Added link to S3 datasheet&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Jan Procházka &lt;90197375+P-R-O-C-H-Y@users.noreply.github.com&gt;&#13;&#10;&#13;&#10;* Mirror update from Heltec repository (#7709)&#13;&#10;&#13;&#10;Heltec updated the I2C pins in https://github.com/Heltec-Aaron-Lee/WiFi_Kit_series/commit/b10f4bf85d13fd01be80dcdb0eb59e6a8c8ba19a&#13;&#10;&#13;&#10;* Fixes BLE data printing (#7699)&#13;&#10;&#13;&#10;* Fixes BLE data printing&#13;&#10;&#13;&#10;BLE data has no '\0' terminator, therefore it can't be printed as a regular C string.&#13;&#10;This fix just prints the BLE data based on its length.&#13;&#10;&#13;&#10;* Simplify printing to a single call&#13;&#10;&#13;&#10;* split menu options + lora_32_V3 fix (#7697)&#13;&#10;&#13;&#10;* Change header gaurd name (#7696)&#13;&#10;&#13;&#10;* Fix Name (#7691)&#13;&#10;&#13;&#10;Wrong name in definitions.&#13;&#10;&#13;&#10;* Fix error in WiFiClient.cpp where the connect function fails for timeouts below 1 second (#7686)&#13;&#10;&#13;&#10;* Update WiFiClient.cpp&#13;&#10;&#13;&#10;This change will allow specifying connect timeouts below 1 second. Without this change, if connect timeouts under 1 second are given, the connect defaults to 0ms and fails. &#13;&#10;This will also allow timeouts in fractions of seconds, e.g. 1500ms. Without this change, connect timeouts are truncated to full second increments.&#13;&#10;&#13;&#10;* Make parameter timeout_ms clear&#13;&#10;&#13;&#10;* Change connection timeout_ms name for clarity&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Rodrigo Garcia &lt;rodrigo.garcia@espressif.com&gt;&#13;&#10;&#13;&#10;* fixed the function header (#7674)&#13;&#10;&#13;&#10;* fixed the function header&#13;&#10;&#13;&#10;* fixed function name and paramaters&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Jan Procházka &lt;90197375+P-R-O-C-H-Y@users.noreply.github.com&gt;&#13;&#10;&#13;&#10;* Ticker fix solving #6155 (#7664)&#13;&#10;&#13;&#10;* Wrapped Ticker functions with #pragma disabling -Wcast-function-type&#13;&#10;&#13;&#10;* Revert &quot;Wrapped Ticker functions with #pragma disabling -Wcast-function-type&quot;&#13;&#10;&#13;&#10;This reverts commit 160be7e67a10d01b6e44c4bf2521c0ccd6348976.&#13;&#10;&#13;&#10;* Fixed Ticker example&#13;&#10;&#13;&#10;* Modified Ticker example&#13;&#10;&#13;&#10;* Fixed LED_BUILTIN err for ESP32&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Jan Procházka &lt;90197375+P-R-O-C-H-Y@users.noreply.github.com&gt;&#13;&#10;&#13;&#10;* setPins fix ESP32 &quot;specified pins are not supported by this chip.&quot; (#7646)&#13;&#10;&#13;&#10;[ESP32: SDMMCFS::begin hardcodes the usage of slot 1, only check if the pins match slot 1 pins.]&#13;&#10;&#13;&#10;setPins() was testing pins D1, D2 and D3 all against D1 ... fine in 1 pin mode when all are -1 not so much if you're trying to get 4 pin mode working.&#13;&#10;I now see this function doesn't really do anything on the ESP32...accept now correctly checks that you are trying to use the slot 1 pins.&#13;&#10;&#13;&#10;Co-authored-by: Jan Procházka &lt;90197375+P-R-O-C-H-Y@users.noreply.github.com&gt;&#13;&#10;&#13;&#10;* Allow passing IP as connect method parameter in WiFiClientSecure and skip unnecessary host-ip conversions (#7643)&#13;&#10;&#13;&#10;* Add LED_BUILTIN* definitions and initialization for LEDs to stop them floating. (#7636)&#13;&#10;&#13;&#10;Co-authored-by: Rodrigo Garcia &lt;rodrigo.garcia@espressif.com&gt;&#13;&#10;&#13;&#10;* Expand path to tinuf2 image when checking existence in platformio-build.py (#7631)&#13;&#10;&#13;&#10;* Expand path to tinuf2 image when checking existence&#13;&#10;&#13;&#10;* More isFiles fixed&#13;&#10;&#13;&#10;* Remove (useless) trailing semicolon from Print.cpp (#7622)&#13;&#10;&#13;&#10;* ADD: New variant Edgebox-ESP-100 (#7771)&#13;&#10;&#13;&#10;* ADD: New variant Edgebox-ESP-100&#13;&#10;&#13;&#10;* FIX: Edgebox-ESP-100 Board.txt usb mode option change back to default value as ESP32S3&#13;&#10;&#13;&#10;* Add Crabik Slot ESP32-S3 board (#7790)&#13;&#10;&#13;&#10;* Added Crabik Slot ESP32-S3&#13;&#10;&#13;&#10;* Adding CPU frequency settings and removing excess from partition scheme settings&#13;&#10;&#13;&#10;* new variant LilyGO T-Display-S3 (#7763)&#13;&#10;&#13;&#10;* new variant LilyGO T-Display-S3&#13;&#10;&#13;&#10;https://github.com/Xinyuan-LilyGO/T-Display-S3&#13;&#10;&#13;&#10;* Add boards.txt definition&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Me No Dev &lt;me-no-dev@users.noreply.github.com&gt;&#13;&#10;&#13;&#10;* Update get.py to support Apple ARM64&#13;&#10;&#13;&#10;* Update package_esp32_index.template.json&#13;&#10;&#13;&#10;* WString Return bool (#7774)&#13;&#10;&#13;&#10;* Add Roboheart Hercules development board to the esp32-core (#7672)&#13;&#10;&#13;&#10;* added Roboheart Hercules pin definitions and board.txt entries&#13;&#10;&#13;&#10;* added package_roboheat.json for prototyping&#13;&#10;&#13;&#10;* Roboheart Hercules pins&#13;&#10;&#13;&#10;* Updated the pins&#13;&#10;&#13;&#10;* Delete package_roboheart.json&#13;&#10;&#13;&#10;* Requested changes&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: renebohne &lt;rene.bohne@gmail.com&gt;&#13;&#10;&#13;&#10;* Reword &quot;ESP-IDF as Component&quot; (#7812)&#13;&#10;&#13;&#10;I think &quot;Arduino as an ESP-IDF component&quot; or just &quot;As ESP-IDF component&quot; instead of  &quot;ESP-IDF as Component&quot; is more correct way to name the link.&#13;&#10;&#13;&#10;1. &quot;ESP-IDF as Component&quot; would imply that ESP-IDF is some sort of library for Arduino, which is (IMO) misleading, because it's true the other way around.&#13;&#10;2. It's written as &quot;Arduino as an ESP-IDF component&quot; on the webpage it points to as well.&#13;&#10;&#13;&#10;- Also I removed the capitalization from &quot;Component&quot; as I have not found a reason why is it capitalized.&#13;&#10;&#13;&#10;* add new board Adafruit Feather ESP32-S3 Reverse TFT (#7811)&#13;&#10;&#13;&#10;* Multi threading examples (tasks, queues, semaphores, mutexes) (#7660)&#13;&#10;&#13;&#10;* Moved and renamed example ESP32/FreeRTOS to MultiThreading/BasicMultiThreading&#13;&#10;&#13;&#10;* Added dummy files&#13;&#10;&#13;&#10;* Modified original example&#13;&#10;&#13;&#10;* Fixed BasicMultiThreading.ino&#13;&#10;&#13;&#10;* Added Example demonstrating use of queues&#13;&#10;&#13;&#10;* Extended info in BasicMultiThreading&#13;&#10;&#13;&#10;* Renamed Queues to singular Queue&#13;&#10;&#13;&#10;* Added Mutex example&#13;&#10;&#13;&#10;* Added Semaphore example&#13;&#10;&#13;&#10;* Moved info from example to README&#13;&#10;&#13;&#10;* Moved doc from Mutex to README&#13;&#10;&#13;&#10;* Added Queue README&#13;&#10;&#13;&#10;* Removed unecesary text&#13;&#10;&#13;&#10;* Fixed grammar&#13;&#10;&#13;&#10;* Increased stack size for Sempahore example&#13;&#10;&#13;&#10;* Added headers into .ino files&#13;&#10;&#13;&#10;* Added word Example at the end of title in README&#13;&#10;&#13;&#10;* removed unused line&#13;&#10;&#13;&#10;* Added forgotten README&#13;&#10;&#13;&#10;* Modified BasicMultiThreading example&#13;&#10;&#13;&#10;* Added missing S3 entry in README&#13;&#10;&#13;&#10;* moved location&#13;&#10;&#13;&#10;* Update ESP-IDF libs&#13;&#10;&#13;&#10;* Update CMakeLists.txt&#13;&#10;&#13;&#10;* Update esptool to v4.4&#13;&#10;&#13;&#10;* Add function timerAttachInterruptFlag (#7809)&#13;&#10;&#13;&#10;* Update esptool to v4.5&#13;&#10;&#13;&#10;* ADC refactoring (#7827)&#13;&#10;&#13;&#10;* Adc refactored + periman implementation&#13;&#10;&#13;&#10;Peripheral manager still needs to be checked if the implementation is right.&#13;&#10;&#13;&#10;* switched to working solution for milivolts read&#13;&#10;&#13;&#10;* Periman detachbus fix&#13;&#10;&#13;&#10;* coding style&#13;&#10;&#13;&#10;* fix CI warnings&#13;&#10;&#13;&#10;* fix FreeRTOS example&#13;&#10;&#13;&#10;* Update ETH.cpp&#13;&#10;&#13;&#10;* Update FunctionalInterruptStruct.ino&#13;&#10;&#13;&#10;* Update package_esp32_index.template.json&#13;&#10;&#13;&#10;* Update package_esp32_index.template.json&#13;&#10;&#13;&#10;* Fixes for the latest IDF v5.1&#13;&#10;&#13;&#10;* update esp-idf libs and toolchain&#13;&#10;&#13;&#10;* Turn OFF auto crystal frequency for ESP32 (needed by TWAI)&#13;&#10;&#13;&#10;* Update examples&#13;&#10;&#13;&#10;* Switch build to mostly use flags from files&#13;&#10;&#13;&#10;Includes can not be done this way&#13;&#10;&#13;&#10;* Reorganize flag files&#13;&#10;&#13;&#10;* Optimize chip build flags further&#13;&#10;&#13;&#10;* Revert defines from file. MBEDTLS_CONFIG_FILE does not properly expand&#13;&#10;&#13;&#10;* Add support for includes and defines from file&#13;&#10;&#13;&#10;* Replace old sdk path references in platform.txt&#13;&#10;&#13;&#10;* use gcc-ar (#8013)&#13;&#10;&#13;&#10;* Makes F_CPU generic for all SoC (#8007)&#13;&#10;&#13;&#10;Based on CONFIG_ESP_DEFAULT_CPU_FREQ_MHZ that is correctly defined in the sdkconfig file for each SoC.&#13;&#10;&#13;&#10;* TIMER refactoring (#7904)&#13;&#10;&#13;&#10;* refactor using GPtimer&#13;&#10;&#13;&#10;* Updated timer HW test&#13;&#10;&#13;&#10;* fix examples&#13;&#10;&#13;&#10;* Add v2.0.7 in issue template (#7871)&#13;&#10;&#13;&#10;* refactor using GPtimer&#13;&#10;&#13;&#10;* Updated timer HW test&#13;&#10;&#13;&#10;* fix examples&#13;&#10;&#13;&#10;* Revert &quot;Add v2.0.7 in issue template (#7871)&quot;&#13;&#10;&#13;&#10;This reverts commit fcc3b17d62ff57861f8913ca1f142fd5163b7457.&#13;&#10;&#13;&#10;* Update upload-artifact to v3 in HW CI&#13;&#10;&#13;&#10;* Revert &quot;Update upload-artifact to v3 in HW CI&quot;&#13;&#10;&#13;&#10;This reverts commit 1ba228071718ba37c4e26d98db22f77b2a7364a6.&#13;&#10;&#13;&#10;* replace resolution with frequency&#13;&#10;&#13;&#10;* remove count_down option&#13;&#10;&#13;&#10;* countup removed from examples + header&#13;&#10;&#13;&#10;* Refactored timer object&#13;&#10;&#13;&#10;* code cleanup + examples and tests fixes&#13;&#10;&#13;&#10;* TimerAlarm fix&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Vojtěch Bartoška &lt;76958047+VojtechBartoska@users.noreply.github.com&gt;&#13;&#10;&#13;&#10;* [Docs] ADC and Timer API Update (+some docs fixes) (#7906)&#13;&#10;&#13;&#10;* updated docs&#13;&#10;&#13;&#10;* remove hall sensor docs&#13;&#10;&#13;&#10;Removed Hall sensor documentation as its no longer supported in IDF-5&#13;&#10;&#13;&#10;* Fixed ESPNow examples location in docs&#13;&#10;&#13;&#10;* Last timer refactored API + gpio small fix&#13;&#10;&#13;&#10;* AlarmWrite fix&#13;&#10;&#13;&#10;* Fixes APLL/PLL with RTC Frequency (#8025)&#13;&#10;&#13;&#10;log_d() was displaying APLL for any SoC, but S3 and C3 has not such option, causing compilation errors.&#13;&#10;&#13;&#10;* Update IDF libs and fix OPI PSRAM on S3&#13;&#10;&#13;&#10;* Add setMode function HardwareSerial.c to set the esp32 uart mode for use with RS485 auto RTS (#7935)&#13;&#10;&#13;&#10;* Added setMode function to set the esp32 uart mode&#13;&#10;&#13;&#10;Used to set the esp32 uart mode for use with RS485 Half Duplex and the auto RTS pin mode. This will set/clear the RTS pin output to control the RE/DE pin on most RS485 chips.&#13;&#10;&#13;&#10;* Add Success (bool) return in some functions&#13;&#10;&#13;&#10;* Add Success (bool) return code to some functions&#13;&#10;&#13;&#10;* Add Success (bool) return to some functions&#13;&#10;&#13;&#10;* Add Success (bool) return to some functions&#13;&#10;&#13;&#10;* Fix uartSetRxTimeout return type&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Rodrigo Garcia &lt;rodrigo.garcia@espressif.com&gt;&#13;&#10;&#13;&#10;* Add support for esp-elf-gdb&#13;&#10;&#13;&#10;* WFG Crashfix (#8044)&#13;&#10;&#13;&#10;* Update component libs&#13;&#10;&#13;&#10;* IDF release/v5.1 (#8061)&#13;&#10;&#13;&#10;* IDF release/v5.1 bb9200acec&#13;&#10;&#13;&#10;* Update Esp.cpp&#13;&#10;&#13;&#10;* IDF release/v5.1 420ebd208a&#13;&#10;&#13;&#10;* Update esp32-hal-psram.c&#13;&#10;&#13;&#10;* Switch SDK to be an external package&#13;&#10;&#13;&#10;* fix path (#8096)&#13;&#10;&#13;&#10;* Makes UART work at any APB Frequency (#8097)&#13;&#10;&#13;&#10;Fixes HardwareSerial to work with IDF 5.1 on any CPU/APB Frequency (240MHz to 10MHZ), including user created low power modes.&#13;&#10;&#13;&#10;* Add required callbacks for TinyUSB DFU&#13;&#10;&#13;&#10;* Update version to 3.0.0&#13;&#10;&#13;&#10;* Add ESP.getCoreVersion() and update ESP.getChipModel()&#13;&#10;&#13;&#10;* Update timer hal for the latest 5.1&#13;&#10;&#13;&#10;* Use separate RX and TX buffer sizes in HTTP client&#13;&#10;&#13;&#10;optimizes download by allowing up to 4K packets to be received&#13;&#10;&#13;&#10;* Rename clock tree enum name in latest 5.1&#13;&#10;&#13;&#10;* ESP32-H4 support was removed in ESP-IDF v5.1&#13;&#10;&#13;&#10;* IDF release/v5.1 2004bf4e11 (#8165)&#13;&#10;&#13;&#10;* Deinit previous bus first (#8180)&#13;&#10;&#13;&#10;* TIMER - add timer_started flag, fix timerEnd() + timer HW test (#8135)&#13;&#10;&#13;&#10;* Add timer_started flag and stop before disable&#13;&#10;&#13;&#10;* Fix timer HW test&#13;&#10;&#13;&#10;* TOUCH - Peripheral manager implementation (#8129)&#13;&#10;&#13;&#10;* Touch periman implemented&#13;&#10;&#13;&#10;* Deinit previous bus first&#13;&#10;&#13;&#10;* LEDC Refactoring - Peripheral manager implemented (#8126)&#13;&#10;&#13;&#10;* LEDC periman implementation&#13;&#10;&#13;&#10;* Fix examples&#13;&#10;&#13;&#10;* Rework tone&#13;&#10;&#13;&#10;* Update ledc docs&#13;&#10;&#13;&#10;* fix missing bracket&#13;&#10;&#13;&#10;* Update analog funtions esp32-hal.h&#13;&#10;&#13;&#10;* Update CameraWebServer example&#13;&#10;&#13;&#10;* Fix HiFreq_ADC example&#13;&#10;&#13;&#10;* minor fixes - typos&#13;&#10;&#13;&#10;* Avoid calling tone/notone when tone already runs on dif. pin&#13;&#10;&#13;&#10;* Remove unused channels_resolution&#13;&#10;&#13;&#10;* GPIO - Peripheral manager implementation (#8179)&#13;&#10;&#13;&#10;* periman-implementation&#13;&#10;&#13;&#10;* fix RGB_BUILTIN and remove space&#13;&#10;&#13;&#10;* Enforces more consistency into Peripheral Manager (#8188)&#13;&#10;&#13;&#10;* Avoid log_i() message the first time a bus is assigned&#13;&#10;&#13;&#10;* Prevent operation with ESP32_BUS_TYPE_INIT&#13;&#10;&#13;&#10;* keeps coding style&#13;&#10;&#13;&#10;* do not print messages on INIT bus type&#13;&#10;&#13;&#10;* [Arduino Core 3.0.0] RMT IDF5.1 Refactoring (#7994)&#13;&#10;&#13;&#10;* RMT IDF5.1 refactoring&#13;&#10;&#13;&#10;* Fixes initial value setting&#13;&#10;&#13;&#10;* removed rmtRead() with user callback&#13;&#10;&#13;&#10;* simplify/remove Read data structure&#13;&#10;&#13;&#10;* Deep API simplification&#13;&#10;&#13;&#10;* fixes the examples&#13;&#10;&#13;&#10;* fix rmt.h&#13;&#10;&#13;&#10;* adds support to APB different frequencies&#13;&#10;&#13;&#10;* fixes CI and not defined RGB_BUILTIN&#13;&#10;&#13;&#10;* new RMT API and examples&#13;&#10;&#13;&#10;* fixing commentaties&#13;&#10;&#13;&#10;* Update esp32-hal-rgb-led.c&#13;&#10;&#13;&#10;* changes Filter API&#13;&#10;&#13;&#10;* Fixes example with Filter API&#13;&#10;&#13;&#10;* Update PlatformIO scripts for the upcoming 3.0 core (#8183)&#13;&#10;&#13;&#10;* Update PlatformIO scripts for the upcoming 3.0 core&#13;&#10;&#13;&#10;* Dynamically select proper framework-arduinoespressif32-libs package&#13;&#10;&#13;&#10;With this change the dev-platform will be dynamically configured to&#13;&#10;pull the latest .zip package with precompiled libraries from extracted from&#13;&#10;package_esp32_index.template.json&#13;&#10;&#13;&#10;* free memory on detach (#8264)&#13;&#10;&#13;&#10;* SPI - Peripheral manager implementation  (#8255)&#13;&#10;&#13;&#10;* spi periman implementation&#13;&#10;&#13;&#10;* fix header file&#13;&#10;&#13;&#10;* remove unused struct&#13;&#10;&#13;&#10;* fix missing braces&#13;&#10;&#13;&#10;* Update esp32-hal-rmt.c (#8216)&#13;&#10;&#13;&#10;Optimizing Peripheral Manager Test&#13;&#10;&#13;&#10;* I2C - Peripheral manager implementation (#8220)&#13;&#10;&#13;&#10;* i2c-master periman initial commit&#13;&#10;&#13;&#10;* i2c-master make detachbus static + comment remove&#13;&#10;&#13;&#10;* i2c-slave periman implementation&#13;&#10;&#13;&#10;* SetPinBus to INIT on i2cDeinits&#13;&#10;&#13;&#10;* Fix slave pins deinit&#13;&#10;&#13;&#10;* remove dbg logs&#13;&#10;&#13;&#10;* set ret to ESP_FAIL instead of returning&#13;&#10;&#13;&#10;* Fix warnings in hal-spi caused by pariman transition&#13;&#10;&#13;&#10;* Update esptool.py to version 4.6&#13;&#10;&#13;&#10;* Add platform support for ESP_SR&#13;&#10;&#13;&#10;* Add USB Type and valid pin check to periman&#13;&#10;&#13;&#10;* replace bus with spi-&gt;num+1 (#8279)&#13;&#10;&#13;&#10;* Remove default pins from SPI HAL&#13;&#10;&#13;&#10;* Add commented out handlers for esptool.js in TinyUSB CDC&#13;&#10;&#13;&#10;For future use&#13;&#10;&#13;&#10;* Add build defines for host os and fqbn (for debug purposes)&#13;&#10;&#13;&#10;* Provide proper memory caps total size&#13;&#10;&#13;&#10;* Update Esp.cpp&#13;&#10;&#13;&#10;* SDMMC - Peripheral manager implementation (#8289)&#13;&#10;&#13;&#10;* sdmmc periman implemented&#13;&#10;&#13;&#10;* save pins when SOC_SDMMC_USE_IOMUX&#13;&#10;&#13;&#10;* IDF release/v5.1 4bc762621d (#8292)&#13;&#10;&#13;&#10;* Adds missing pinMode (#8312)&#13;&#10;&#13;&#10;* Adds missing pinMode&#13;&#10;&#13;&#10;The example code lacks a pinMode() to initialize the GPIO 0 (button). In Arduino Core 3.0.0, it prints an error message when trying to read a not initialized GPIO.&#13;&#10;&#13;&#10;* Update KeyboardLogout.ino&#13;&#10;&#13;&#10;Adds &lt;buttonPin&gt; to keep code standard&#13;&#10;&#13;&#10;* Update KeyboardReprogram.ino&#13;&#10;&#13;&#10;Adds &lt;buttonPin&gt; to keep code standard&#13;&#10;&#13;&#10;* LEDC Fade implementation (#8338)&#13;&#10;&#13;&#10;* fade API + pointer fixes&#13;&#10;&#13;&#10;* Add fade api&#13;&#10;&#13;&#10;* Add fade example&#13;&#10;&#13;&#10;* update ledc docs&#13;&#10;&#13;&#10;* remove unused variables&#13;&#10;&#13;&#10;* fix path to example&#13;&#10;&#13;&#10;* Adds USB to Peripheral Manager - Arduino Core 3.0.0 (#8335)&#13;&#10;&#13;&#10;* ETHERNET - Peripheral manager implementation (#8297)&#13;&#10;&#13;&#10;* Peripheral manager implemented&#13;&#10;&#13;&#10;* remove unused variable&#13;&#10;&#13;&#10;* Add all RMII pins&#13;&#10;&#13;&#10;* fix typo&#13;&#10;&#13;&#10;* Adds HardwareSerial to Peripheral Manager Arduino 3.0.0 (#8328)&#13;&#10;&#13;&#10;* Do not limit ETHERNET in periman to only ESP32. SPI is also an option&#13;&#10;&#13;&#10;* Initial support for ESP32-C6 (#8337)&#13;&#10;&#13;&#10;* Add checks for SOC defines (#8351)&#13;&#10;&#13;&#10;* Add checks for SOC defines&#13;&#10;&#13;&#10;* Add SoC checks to BLE library&#13;&#10;&#13;&#10;* fix i2c compilation error&#13;&#10;&#13;&#10;* fix wrong placement of include&#13;&#10;&#13;&#10;* add check to SPI library&#13;&#10;&#13;&#10;* add check to USB library&#13;&#10;&#13;&#10;* add checks to Wire library&#13;&#10;&#13;&#10;* Feature/esp32h2 support (#8373)&#13;&#10;&#13;&#10;* Initial support for ESP32H2&#13;&#10;&#13;&#10;* Additional changes for ESP32H2&#13;&#10;&#13;&#10;* Update libs for ESP32H2&#13;&#10;&#13;&#10;* Fix flashing on ESP32-H2&#13;&#10;&#13;&#10;* Fix GPIO Configs for ESP32-C6 and ESP32-H2&#13;&#10;&#13;&#10;* Update Timer test sketch&#13;&#10;&#13;&#10;* Fix upload flash parameters&#13;&#10;&#13;&#10;* Use ets_write_char_uart instead of ets_printf in log_printfv&#13;&#10;&#13;&#10;* Print full chip report when log level is sufficient (#8282)&#13;&#10;&#13;&#10;* ESP32-C3 does not have ets_write_char_uart&#13;&#10;&#13;&#10;* Fix BLE gap event name&#13;&#10;&#13;&#10;* HW Testing - Pytest update (#8389)&#13;&#10;&#13;&#10;* update tests requirements&#13;&#10;&#13;&#10;* remove already handled components&#13;&#10;&#13;&#10;* Update version of pytest&#13;&#10;&#13;&#10;* Add missing ESP32-H2 to hil.yml&#13;&#10;&#13;&#10;* Updated FreeRTOS names (#8418)&#13;&#10;&#13;&#10;* HW Testing -  ESP32-C6 + ESP32-H2 fixes (#8404)&#13;&#10;&#13;&#10;* add C6/H2 to tests cfg.json&#13;&#10;&#13;&#10;* remove ,&#13;&#10;&#13;&#10;* workflow runs-on runner by matrix&#13;&#10;&#13;&#10;* Add need for arduino tag to select runner&#13;&#10;&#13;&#10;* Add cryptography to requirements.txt&#13;&#10;&#13;&#10;* Removed duplicate TX1 define for H2 (#8402)&#13;&#10;&#13;&#10;* Fix broken examples&#13;&#10;&#13;&#10;* Fixes RMT filter &amp; idle timing and setup (#8359)&#13;&#10;&#13;&#10;* Fixes Filter and Idle parameter to uint32&#13;&#10;&#13;&#10;* Fixes Filter and Idle setup&#13;&#10;&#13;&#10;* Fixes it to 5.1Libs branch&#13;&#10;&#13;&#10;* fix RMT CLK source and Filter API&#13;&#10;&#13;&#10;* fixes missing ;&#13;&#10;&#13;&#10;* fixes missing ;&#13;&#10;&#13;&#10;* fixes RMT example&#13;&#10;&#13;&#10;* IDF release/v5.1 a7b62bbcaf (#8438)&#13;&#10;&#13;&#10;* Add workflow to build executables from python scripts (#8290)&#13;&#10;&#13;&#10;* Add workflow to build executables from python scripts&#13;&#10;&#13;&#10;* Push binary to tools&#13;&#10;&#13;&#10;* Enable executable signing on Windows&#13;&#10;&#13;&#10;* Update get.py&#13;&#10;&#13;&#10;* Push binary to tools&#13;&#10;&#13;&#10;* Try with multiple files&#13;&#10;&#13;&#10;* Try more actions&#13;&#10;&#13;&#10;* Try powershell&#13;&#10;&#13;&#10;* Restore tools so they do not get rebuilt&#13;&#10;&#13;&#10;* Finalize scripts&#13;&#10;&#13;&#10;* Push binary to tools&#13;&#10;&#13;&#10;* App rollback should be after PSRAM is initialized&#13;&#10;&#13;&#10;* Correcting RX1 to GPIO4 and TX1 to GPIO5 to be consistent with documentation. Previous pin use works but is inconsistent with C6 docs.&#13;&#10;&#13;&#10;* Fixes Memory Leak (#8486)&#13;&#10;&#13;&#10;* fixes preprocessor test (#8485)&#13;&#10;&#13;&#10;* fixes preprocessor test&#13;&#10;&#13;&#10;When using `#define USE_SOFT_AP` &#13;&#10;Change&#13;&#10;`&amp;&amp; not USE_SOFT_AP` ==&gt; `&amp;&amp; !defined(USE_SOFT_AP)`&#13;&#10;&#13;&#10;* Adds any BLE capable device in WiFiProv.ino&#13;&#10;&#13;&#10;Removing ESP32 restriction for BLE Provisioning.&#13;&#10;&#13;&#10;* fix flash mode read out for C6&#13;&#10;&#13;&#10;* Add option for custom partitions without restrictions&#13;&#10;&#13;&#10;* SD_MMC update (#8298)&#13;&#10;&#13;&#10;* Updated SD_MMC lib and examples&#13;&#10;&#13;&#10;* Removed getter implementation and commented usage in examples&#13;&#10;&#13;&#10;* squashed updates&#13;&#10;&#13;&#10;* IDF release/v5.1 f0437b945f (#8599)&#13;&#10;&#13;&#10;* Update package_esp32_index.template.json&#13;&#10;&#13;&#10;* Fix printf format build error in BTAdvertisedDeviceSet.cpp&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Pedro Minatel &lt;pedro.minatel@espressif.com&gt;&#13;&#10;Co-authored-by: Rodrigo Garcia &lt;rodrigo.garcia@espressif.com&gt;&#13;&#10;Co-authored-by: Ha Thach &lt;thach@tinyusb.org&gt;&#13;&#10;Co-authored-by: Martin Turski &lt;quiret@vfemail.net&gt;&#13;&#10;Co-authored-by: raviypujar &lt;raviypujar@gmail.com&gt;&#13;&#10;Co-authored-by: Jason2866 &lt;24528715+Jason2866@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: Tomáš Pilný &lt;34927466+PilnyTomas@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: Jan Procházka &lt;90197375+P-R-O-C-H-Y@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: Daniel Berlin &lt;dberlin@dberlin.org&gt;&#13;&#10;Co-authored-by: Nima Askari (نیما عسکری) &lt;nimaltd@yahoo.com&gt;&#13;&#10;Co-authored-by: rtpmsys &lt;106180646+rtpmsys@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: bytiful &lt;55647551+bytiful@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: tmfarrington &lt;tmfarrington@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: Krzysiek S &lt;chris.streh@gmail.com&gt;&#13;&#10;Co-authored-by: surt &lt;carl.olsson@gmail.com&gt;&#13;&#10;Co-authored-by: Max Scheffler &lt;max.scheffler@pm.me&gt;&#13;&#10;Co-authored-by: Clemens Kirchgatterer &lt;clemens@1541.org&gt;&#13;&#10;Co-authored-by: Peter Pan's Techland &lt;twinkle-pirate@hotmail.com&gt;&#13;&#10;Co-authored-by: Roman &lt;programmeofficemilkyway@gmail.com&gt;&#13;&#10;Co-authored-by: Eistee &lt;Eistee82@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: David McCurley &lt;44048235+mrengineer7777@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: Gaya3N25 &lt;30388176+Gaya3N25@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: renebohne &lt;rene.bohne@gmail.com&gt;&#13;&#10;Co-authored-by: Olivér Remény &lt;25034625+remenyo@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: davidk88 &lt;david.kotar@gmail.com&gt;&#13;&#10;Co-authored-by: Vojtěch Bartoška &lt;76958047+VojtechBartoska@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: James Armstrong &lt;jamesarmstrong3@me.com&gt;&#13;&#10;Co-authored-by: Valerii Koval &lt;valeros@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: Peter G. Jensen &lt;root@petergjoel.dk&gt;" />
			<int key="additions" value="14" />
			<int key="deletions" value="11" />
			<string key="diff" value='@@ -740,7 +740,7 @@ int HTTPClient::sendRequest(const char * type, Stream * stream, size_t size)&#10;         return returnError(HTTPC_ERROR_SEND_HEADER_FAILED);&#10;     }&#10; &#10;-    int buff_size = HTTP_TCP_BUFFER_SIZE;&#10;+    int buff_size = HTTP_TCP_TX_BUFFER_SIZE;&#10; &#10;     int len = size;&#10;     int bytesWritten = 0;&#10;@@ -749,8 +749,8 @@ int HTTPClient::sendRequest(const char * type, Stream * stream, size_t size)&#10;         len = -1;&#10;     }&#10; &#10;-    // if possible create smaller buffer then HTTP_TCP_BUFFER_SIZE&#10;-    if((len &gt; 0) &amp;&amp; (len &lt; HTTP_TCP_BUFFER_SIZE)) {&#10;+    // if possible create smaller buffer then HTTP_TCP_TX_BUFFER_SIZE&#10;+    if((len &gt; 0) &amp;&amp; (len &lt; buff_size)) {&#10;         buff_size = len;&#10;     }&#10; &#10;@@ -843,7 +843,7 @@ int HTTPClient::sendRequest(const char * type, Stream * stream, size_t size)&#10;         }&#10; &#10;     } else {&#10;-        log_d("too less ram! need %d", HTTP_TCP_BUFFER_SIZE);&#10;+        log_d("too less ram! need %d", buff_size);&#10;         return returnError(HTTPC_ERROR_TOO_LESS_RAM);&#10;     }&#10; &#10;@@ -933,7 +933,7 @@ int HTTPClient::writeToStream(Stream * stream)&#10;             // read size of chunk&#10;             len = (uint32_t) strtol((const char *) chunkHeader.c_str(), NULL, 16);&#10;             size += len;&#10;-            log_d(" read chunk len: %d", len);&#10;+            log_v(" read chunk len: %d", len);&#10; &#10;             // data left?&#10;             if(len &gt; 0) {&#10;@@ -1364,12 +1364,12 @@ int HTTPClient::handleHeaderResponse()&#10;  */&#10; int HTTPClient::writeToStreamDataBlock(Stream * stream, int size)&#10; {&#10;-    int buff_size = HTTP_TCP_BUFFER_SIZE;&#10;+    int buff_size = HTTP_TCP_RX_BUFFER_SIZE;&#10;     int len = size;&#10;     int bytesWritten = 0;&#10; &#10;-    // if possible create smaller buffer then HTTP_TCP_BUFFER_SIZE&#10;-    if((len &gt; 0) &amp;&amp; (len &lt; HTTP_TCP_BUFFER_SIZE)) {&#10;+    // if possible create smaller buffer then HTTP_TCP_RX_BUFFER_SIZE&#10;+    if((len &gt; 0) &amp;&amp; (len &lt; buff_size)) {&#10;         buff_size = len;&#10;     }&#10; &#10;@@ -1381,7 +1381,10 @@ int HTTPClient::writeToStreamDataBlock(Stream * stream, int size)&#10;         while(connected() &amp;&amp; (len &gt; 0 || len == -1)) {&#10; &#10;             // get available data size&#10;-            size_t sizeAvailable = _client-&gt;available();&#10;+            size_t sizeAvailable = buff_size;&#10;+            if(len &lt; 0){&#10;+                sizeAvailable = _client-&gt;available();&#10;+            }&#10; &#10;             if(sizeAvailable) {&#10; &#10;@@ -1457,7 +1460,7 @@ int HTTPClient::writeToStreamDataBlock(Stream * stream, int size)&#10; &#10;         free(buff);&#10; &#10;-        log_d("connection closed or file end (written: %d).", bytesWritten);&#10;+        log_v("connection closed or file end (written: %d).", bytesWritten);&#10; &#10;         if((size &gt; 0) &amp;&amp; (size != bytesWritten)) {&#10;             log_d("bytesWritten %d and size %d mismatch!.", bytesWritten, size);&#10;@@ -1465,7 +1468,7 @@ int HTTPClient::writeToStreamDataBlock(Stream * stream, int size)&#10;         }&#10; &#10;     } else {&#10;-        log_w("too less ram! need %d", HTTP_TCP_BUFFER_SIZE);&#10;+        log_w("too less ram! need %d", buff_size);&#10;         return HTTPC_ERROR_TOO_LESS_RAM;&#10;     }&#10; &#10;' />
			<string key="comment_change" value="True" />
		</event>
	</trace>
	<trace>
		<string key="file" value="espnow.rst" />
	</trace>
	<trace>
		<string key="file" value="Esp.cpp" />
		<event>
			<string key="timestamp" value="2023-10-05T14:54:25+03:00" />
			<string key="author" value="Me No Dev" />
			<string key="change_type" value="MODIFY" />
			<string key="commit_message" value="ESP-IDF v5.1 (#7733)&#10;&#10;* Initial changes to compile under ESP-IDF v5.1&#13;&#10;&#13;&#10;* Initial import for ESP-IDF v5.1 libs&#13;&#10;&#13;&#10;* Update toolchain&#13;&#10;&#13;&#10;* Update esp32-hal-psram.c&#13;&#10;&#13;&#10;* Add missing LDs&#13;&#10;&#13;&#10;* Update platform.txt&#13;&#10;&#13;&#10;* Stop some CI jobs, because they will always fail&#13;&#10;&#13;&#10;* Fix examples&#13;&#10;&#13;&#10;* Update app_httpd.cpp&#13;&#10;&#13;&#10;* Update ResetReason.ino&#13;&#10;&#13;&#10;* Warnings fixes&#13;&#10;&#13;&#10;* Added the example guideline and template (#7665)&#13;&#10;&#13;&#10;* Added the example guideline and template&#13;&#10;&#13;&#10;* PR review changes with some typos and grammar fixes&#13;&#10;&#13;&#10;* Changes according to the PR review&#13;&#10;&#13;&#10;* Added ESP32-S3 link to the datasheet (#7738)&#13;&#10;&#13;&#10;* Update HiFreq_ADC.ino&#13;&#10;&#13;&#10;* Replace periph_ctrl.h use because of deprecation&#13;&#10;&#13;&#10;* Replace esp_spi_flash.h use because of deprecation&#13;&#10;&#13;&#10;* Add includes to male mDNS::enableWorkstation compile&#13;&#10;&#13;&#10;* Fix ssl_client mbedtls_pk_parse_key callback&#13;&#10;&#13;&#10;* Update temperature sensor driver&#13;&#10;&#13;&#10;* Allow sketch_utils to compile with arduino-cli&#13;&#10;&#13;&#10;* Run CI with arduino-cli&#13;&#10;&#13;&#10;* Fix arduino-cli CI build on Windows&#13;&#10;&#13;&#10;* Refactor platform.txt to not use components installed through the board manager when running from git&#13;&#10;&#13;&#10;* Initial Peripheral Manager Implementation&#13;&#10;&#13;&#10;* Update SigmaDelta driver to use the new ESP-IDF driver API&#13;&#10;&#13;&#10;* Small improvements to peripheral manager and SigmaDelta&#13;&#10;&#13;&#10;* Remove deleted function from SigmaDelta header&#13;&#10;&#13;&#10;* Update DAC driver to use the new ESP-IDF driver API&#13;&#10;&#13;&#10;* Adds softAp(String) to make it compatible with ESP8266 (#7801)&#13;&#10;&#13;&#10;* Fix commentary (#7800)&#13;&#10;&#13;&#10;Minor fix based on observation done in https://github.com/espressif/arduino-esp32/issues/7795#issuecomment-1416868611&#13;&#10;&#13;&#10;* add adafruit new board feather esp32s2 reserve tft (#7794)&#13;&#10;&#13;&#10;* bugfix: add &lt;stdint.h&gt; for uint8_t to avoid compilation failure (GCC 11.2.0) (#7744)&#13;&#10;&#13;&#10;* Adding 3rd party boards for VALTRACK-V4-VTS-ESP32-C3 &amp; VALTRACK-V4-MFW-ESP32-C3 (#7735)&#13;&#10;&#13;&#10;* Added VALTRACK-V4-VTS-ESP32-C3 board definition&#13;&#10;&#13;&#10;Created pins_arduino.h &amp; made changes to boards.txt with necessary changes&#13;&#10;&#13;&#10;* Modified the URL&#13;&#10;&#13;&#10;* Renamed json&#13;&#10;&#13;&#10;* renamed all auRL&#13;&#10;&#13;&#10;* Adding VALTRACK-V4 series board definitions&#13;&#10;&#13;&#10;Added VALTRACK-V4-VTS-ESP32C3 &amp; VALTRACK-V4-MFW-ESP32-C3 board variants&#13;&#10;&#13;&#10;* Adding VALTRACK-V4 series board definitions&#13;&#10;&#13;&#10;Added VALTRACK-V4-VTS-ESP32C3 &amp; VALTRACK-V4-MFW-ESP32-C3 board variants&#13;&#10;&#13;&#10;* Reverted package_esp32_index.template.json&#13;&#10;&#13;&#10;restored package_esp32_index.template.json from edits&#13;&#10;&#13;&#10;* Reverted package_esp32_index.template.json&#13;&#10;&#13;&#10;Added new line to package_esp32_index.template.json&#13;&#10;&#13;&#10;* Update Platformio CI (#7725)&#13;&#10;&#13;&#10;* WiFiClient example fix (#7711)&#13;&#10;&#13;&#10;* Modified WiFiClient example to use thingspeak instead of non-functionig sparkfun&#13;&#10;&#13;&#10;* Moved instructions to README&#13;&#10;&#13;&#10;* Fixed spelling&#13;&#10;&#13;&#10;* Added link to S3 datasheet&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Jan Procházka &lt;90197375+P-R-O-C-H-Y@users.noreply.github.com&gt;&#13;&#10;&#13;&#10;* Mirror update from Heltec repository (#7709)&#13;&#10;&#13;&#10;Heltec updated the I2C pins in https://github.com/Heltec-Aaron-Lee/WiFi_Kit_series/commit/b10f4bf85d13fd01be80dcdb0eb59e6a8c8ba19a&#13;&#10;&#13;&#10;* Fixes BLE data printing (#7699)&#13;&#10;&#13;&#10;* Fixes BLE data printing&#13;&#10;&#13;&#10;BLE data has no '\0' terminator, therefore it can't be printed as a regular C string.&#13;&#10;This fix just prints the BLE data based on its length.&#13;&#10;&#13;&#10;* Simplify printing to a single call&#13;&#10;&#13;&#10;* split menu options + lora_32_V3 fix (#7697)&#13;&#10;&#13;&#10;* Change header gaurd name (#7696)&#13;&#10;&#13;&#10;* Fix Name (#7691)&#13;&#10;&#13;&#10;Wrong name in definitions.&#13;&#10;&#13;&#10;* Fix error in WiFiClient.cpp where the connect function fails for timeouts below 1 second (#7686)&#13;&#10;&#13;&#10;* Update WiFiClient.cpp&#13;&#10;&#13;&#10;This change will allow specifying connect timeouts below 1 second. Without this change, if connect timeouts under 1 second are given, the connect defaults to 0ms and fails. &#13;&#10;This will also allow timeouts in fractions of seconds, e.g. 1500ms. Without this change, connect timeouts are truncated to full second increments.&#13;&#10;&#13;&#10;* Make parameter timeout_ms clear&#13;&#10;&#13;&#10;* Change connection timeout_ms name for clarity&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Rodrigo Garcia &lt;rodrigo.garcia@espressif.com&gt;&#13;&#10;&#13;&#10;* fixed the function header (#7674)&#13;&#10;&#13;&#10;* fixed the function header&#13;&#10;&#13;&#10;* fixed function name and paramaters&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Jan Procházka &lt;90197375+P-R-O-C-H-Y@users.noreply.github.com&gt;&#13;&#10;&#13;&#10;* Ticker fix solving #6155 (#7664)&#13;&#10;&#13;&#10;* Wrapped Ticker functions with #pragma disabling -Wcast-function-type&#13;&#10;&#13;&#10;* Revert &quot;Wrapped Ticker functions with #pragma disabling -Wcast-function-type&quot;&#13;&#10;&#13;&#10;This reverts commit 160be7e67a10d01b6e44c4bf2521c0ccd6348976.&#13;&#10;&#13;&#10;* Fixed Ticker example&#13;&#10;&#13;&#10;* Modified Ticker example&#13;&#10;&#13;&#10;* Fixed LED_BUILTIN err for ESP32&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Jan Procházka &lt;90197375+P-R-O-C-H-Y@users.noreply.github.com&gt;&#13;&#10;&#13;&#10;* setPins fix ESP32 &quot;specified pins are not supported by this chip.&quot; (#7646)&#13;&#10;&#13;&#10;[ESP32: SDMMCFS::begin hardcodes the usage of slot 1, only check if the pins match slot 1 pins.]&#13;&#10;&#13;&#10;setPins() was testing pins D1, D2 and D3 all against D1 ... fine in 1 pin mode when all are -1 not so much if you're trying to get 4 pin mode working.&#13;&#10;I now see this function doesn't really do anything on the ESP32...accept now correctly checks that you are trying to use the slot 1 pins.&#13;&#10;&#13;&#10;Co-authored-by: Jan Procházka &lt;90197375+P-R-O-C-H-Y@users.noreply.github.com&gt;&#13;&#10;&#13;&#10;* Allow passing IP as connect method parameter in WiFiClientSecure and skip unnecessary host-ip conversions (#7643)&#13;&#10;&#13;&#10;* Add LED_BUILTIN* definitions and initialization for LEDs to stop them floating. (#7636)&#13;&#10;&#13;&#10;Co-authored-by: Rodrigo Garcia &lt;rodrigo.garcia@espressif.com&gt;&#13;&#10;&#13;&#10;* Expand path to tinuf2 image when checking existence in platformio-build.py (#7631)&#13;&#10;&#13;&#10;* Expand path to tinuf2 image when checking existence&#13;&#10;&#13;&#10;* More isFiles fixed&#13;&#10;&#13;&#10;* Remove (useless) trailing semicolon from Print.cpp (#7622)&#13;&#10;&#13;&#10;* ADD: New variant Edgebox-ESP-100 (#7771)&#13;&#10;&#13;&#10;* ADD: New variant Edgebox-ESP-100&#13;&#10;&#13;&#10;* FIX: Edgebox-ESP-100 Board.txt usb mode option change back to default value as ESP32S3&#13;&#10;&#13;&#10;* Add Crabik Slot ESP32-S3 board (#7790)&#13;&#10;&#13;&#10;* Added Crabik Slot ESP32-S3&#13;&#10;&#13;&#10;* Adding CPU frequency settings and removing excess from partition scheme settings&#13;&#10;&#13;&#10;* new variant LilyGO T-Display-S3 (#7763)&#13;&#10;&#13;&#10;* new variant LilyGO T-Display-S3&#13;&#10;&#13;&#10;https://github.com/Xinyuan-LilyGO/T-Display-S3&#13;&#10;&#13;&#10;* Add boards.txt definition&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Me No Dev &lt;me-no-dev@users.noreply.github.com&gt;&#13;&#10;&#13;&#10;* Update get.py to support Apple ARM64&#13;&#10;&#13;&#10;* Update package_esp32_index.template.json&#13;&#10;&#13;&#10;* WString Return bool (#7774)&#13;&#10;&#13;&#10;* Add Roboheart Hercules development board to the esp32-core (#7672)&#13;&#10;&#13;&#10;* added Roboheart Hercules pin definitions and board.txt entries&#13;&#10;&#13;&#10;* added package_roboheat.json for prototyping&#13;&#10;&#13;&#10;* Roboheart Hercules pins&#13;&#10;&#13;&#10;* Updated the pins&#13;&#10;&#13;&#10;* Delete package_roboheart.json&#13;&#10;&#13;&#10;* Requested changes&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: renebohne &lt;rene.bohne@gmail.com&gt;&#13;&#10;&#13;&#10;* Reword &quot;ESP-IDF as Component&quot; (#7812)&#13;&#10;&#13;&#10;I think &quot;Arduino as an ESP-IDF component&quot; or just &quot;As ESP-IDF component&quot; instead of  &quot;ESP-IDF as Component&quot; is more correct way to name the link.&#13;&#10;&#13;&#10;1. &quot;ESP-IDF as Component&quot; would imply that ESP-IDF is some sort of library for Arduino, which is (IMO) misleading, because it's true the other way around.&#13;&#10;2. It's written as &quot;Arduino as an ESP-IDF component&quot; on the webpage it points to as well.&#13;&#10;&#13;&#10;- Also I removed the capitalization from &quot;Component&quot; as I have not found a reason why is it capitalized.&#13;&#10;&#13;&#10;* add new board Adafruit Feather ESP32-S3 Reverse TFT (#7811)&#13;&#10;&#13;&#10;* Multi threading examples (tasks, queues, semaphores, mutexes) (#7660)&#13;&#10;&#13;&#10;* Moved and renamed example ESP32/FreeRTOS to MultiThreading/BasicMultiThreading&#13;&#10;&#13;&#10;* Added dummy files&#13;&#10;&#13;&#10;* Modified original example&#13;&#10;&#13;&#10;* Fixed BasicMultiThreading.ino&#13;&#10;&#13;&#10;* Added Example demonstrating use of queues&#13;&#10;&#13;&#10;* Extended info in BasicMultiThreading&#13;&#10;&#13;&#10;* Renamed Queues to singular Queue&#13;&#10;&#13;&#10;* Added Mutex example&#13;&#10;&#13;&#10;* Added Semaphore example&#13;&#10;&#13;&#10;* Moved info from example to README&#13;&#10;&#13;&#10;* Moved doc from Mutex to README&#13;&#10;&#13;&#10;* Added Queue README&#13;&#10;&#13;&#10;* Removed unecesary text&#13;&#10;&#13;&#10;* Fixed grammar&#13;&#10;&#13;&#10;* Increased stack size for Sempahore example&#13;&#10;&#13;&#10;* Added headers into .ino files&#13;&#10;&#13;&#10;* Added word Example at the end of title in README&#13;&#10;&#13;&#10;* removed unused line&#13;&#10;&#13;&#10;* Added forgotten README&#13;&#10;&#13;&#10;* Modified BasicMultiThreading example&#13;&#10;&#13;&#10;* Added missing S3 entry in README&#13;&#10;&#13;&#10;* moved location&#13;&#10;&#13;&#10;* Update ESP-IDF libs&#13;&#10;&#13;&#10;* Update CMakeLists.txt&#13;&#10;&#13;&#10;* Update esptool to v4.4&#13;&#10;&#13;&#10;* Add function timerAttachInterruptFlag (#7809)&#13;&#10;&#13;&#10;* Update esptool to v4.5&#13;&#10;&#13;&#10;* ADC refactoring (#7827)&#13;&#10;&#13;&#10;* Adc refactored + periman implementation&#13;&#10;&#13;&#10;Peripheral manager still needs to be checked if the implementation is right.&#13;&#10;&#13;&#10;* switched to working solution for milivolts read&#13;&#10;&#13;&#10;* Periman detachbus fix&#13;&#10;&#13;&#10;* coding style&#13;&#10;&#13;&#10;* fix CI warnings&#13;&#10;&#13;&#10;* fix FreeRTOS example&#13;&#10;&#13;&#10;* Update ETH.cpp&#13;&#10;&#13;&#10;* Update FunctionalInterruptStruct.ino&#13;&#10;&#13;&#10;* Update package_esp32_index.template.json&#13;&#10;&#13;&#10;* Update package_esp32_index.template.json&#13;&#10;&#13;&#10;* Fixes for the latest IDF v5.1&#13;&#10;&#13;&#10;* update esp-idf libs and toolchain&#13;&#10;&#13;&#10;* Turn OFF auto crystal frequency for ESP32 (needed by TWAI)&#13;&#10;&#13;&#10;* Update examples&#13;&#10;&#13;&#10;* Switch build to mostly use flags from files&#13;&#10;&#13;&#10;Includes can not be done this way&#13;&#10;&#13;&#10;* Reorganize flag files&#13;&#10;&#13;&#10;* Optimize chip build flags further&#13;&#10;&#13;&#10;* Revert defines from file. MBEDTLS_CONFIG_FILE does not properly expand&#13;&#10;&#13;&#10;* Add support for includes and defines from file&#13;&#10;&#13;&#10;* Replace old sdk path references in platform.txt&#13;&#10;&#13;&#10;* use gcc-ar (#8013)&#13;&#10;&#13;&#10;* Makes F_CPU generic for all SoC (#8007)&#13;&#10;&#13;&#10;Based on CONFIG_ESP_DEFAULT_CPU_FREQ_MHZ that is correctly defined in the sdkconfig file for each SoC.&#13;&#10;&#13;&#10;* TIMER refactoring (#7904)&#13;&#10;&#13;&#10;* refactor using GPtimer&#13;&#10;&#13;&#10;* Updated timer HW test&#13;&#10;&#13;&#10;* fix examples&#13;&#10;&#13;&#10;* Add v2.0.7 in issue template (#7871)&#13;&#10;&#13;&#10;* refactor using GPtimer&#13;&#10;&#13;&#10;* Updated timer HW test&#13;&#10;&#13;&#10;* fix examples&#13;&#10;&#13;&#10;* Revert &quot;Add v2.0.7 in issue template (#7871)&quot;&#13;&#10;&#13;&#10;This reverts commit fcc3b17d62ff57861f8913ca1f142fd5163b7457.&#13;&#10;&#13;&#10;* Update upload-artifact to v3 in HW CI&#13;&#10;&#13;&#10;* Revert &quot;Update upload-artifact to v3 in HW CI&quot;&#13;&#10;&#13;&#10;This reverts commit 1ba228071718ba37c4e26d98db22f77b2a7364a6.&#13;&#10;&#13;&#10;* replace resolution with frequency&#13;&#10;&#13;&#10;* remove count_down option&#13;&#10;&#13;&#10;* countup removed from examples + header&#13;&#10;&#13;&#10;* Refactored timer object&#13;&#10;&#13;&#10;* code cleanup + examples and tests fixes&#13;&#10;&#13;&#10;* TimerAlarm fix&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Vojtěch Bartoška &lt;76958047+VojtechBartoska@users.noreply.github.com&gt;&#13;&#10;&#13;&#10;* [Docs] ADC and Timer API Update (+some docs fixes) (#7906)&#13;&#10;&#13;&#10;* updated docs&#13;&#10;&#13;&#10;* remove hall sensor docs&#13;&#10;&#13;&#10;Removed Hall sensor documentation as its no longer supported in IDF-5&#13;&#10;&#13;&#10;* Fixed ESPNow examples location in docs&#13;&#10;&#13;&#10;* Last timer refactored API + gpio small fix&#13;&#10;&#13;&#10;* AlarmWrite fix&#13;&#10;&#13;&#10;* Fixes APLL/PLL with RTC Frequency (#8025)&#13;&#10;&#13;&#10;log_d() was displaying APLL for any SoC, but S3 and C3 has not such option, causing compilation errors.&#13;&#10;&#13;&#10;* Update IDF libs and fix OPI PSRAM on S3&#13;&#10;&#13;&#10;* Add setMode function HardwareSerial.c to set the esp32 uart mode for use with RS485 auto RTS (#7935)&#13;&#10;&#13;&#10;* Added setMode function to set the esp32 uart mode&#13;&#10;&#13;&#10;Used to set the esp32 uart mode for use with RS485 Half Duplex and the auto RTS pin mode. This will set/clear the RTS pin output to control the RE/DE pin on most RS485 chips.&#13;&#10;&#13;&#10;* Add Success (bool) return in some functions&#13;&#10;&#13;&#10;* Add Success (bool) return code to some functions&#13;&#10;&#13;&#10;* Add Success (bool) return to some functions&#13;&#10;&#13;&#10;* Add Success (bool) return to some functions&#13;&#10;&#13;&#10;* Fix uartSetRxTimeout return type&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Rodrigo Garcia &lt;rodrigo.garcia@espressif.com&gt;&#13;&#10;&#13;&#10;* Add support for esp-elf-gdb&#13;&#10;&#13;&#10;* WFG Crashfix (#8044)&#13;&#10;&#13;&#10;* Update component libs&#13;&#10;&#13;&#10;* IDF release/v5.1 (#8061)&#13;&#10;&#13;&#10;* IDF release/v5.1 bb9200acec&#13;&#10;&#13;&#10;* Update Esp.cpp&#13;&#10;&#13;&#10;* IDF release/v5.1 420ebd208a&#13;&#10;&#13;&#10;* Update esp32-hal-psram.c&#13;&#10;&#13;&#10;* Switch SDK to be an external package&#13;&#10;&#13;&#10;* fix path (#8096)&#13;&#10;&#13;&#10;* Makes UART work at any APB Frequency (#8097)&#13;&#10;&#13;&#10;Fixes HardwareSerial to work with IDF 5.1 on any CPU/APB Frequency (240MHz to 10MHZ), including user created low power modes.&#13;&#10;&#13;&#10;* Add required callbacks for TinyUSB DFU&#13;&#10;&#13;&#10;* Update version to 3.0.0&#13;&#10;&#13;&#10;* Add ESP.getCoreVersion() and update ESP.getChipModel()&#13;&#10;&#13;&#10;* Update timer hal for the latest 5.1&#13;&#10;&#13;&#10;* Use separate RX and TX buffer sizes in HTTP client&#13;&#10;&#13;&#10;optimizes download by allowing up to 4K packets to be received&#13;&#10;&#13;&#10;* Rename clock tree enum name in latest 5.1&#13;&#10;&#13;&#10;* ESP32-H4 support was removed in ESP-IDF v5.1&#13;&#10;&#13;&#10;* IDF release/v5.1 2004bf4e11 (#8165)&#13;&#10;&#13;&#10;* Deinit previous bus first (#8180)&#13;&#10;&#13;&#10;* TIMER - add timer_started flag, fix timerEnd() + timer HW test (#8135)&#13;&#10;&#13;&#10;* Add timer_started flag and stop before disable&#13;&#10;&#13;&#10;* Fix timer HW test&#13;&#10;&#13;&#10;* TOUCH - Peripheral manager implementation (#8129)&#13;&#10;&#13;&#10;* Touch periman implemented&#13;&#10;&#13;&#10;* Deinit previous bus first&#13;&#10;&#13;&#10;* LEDC Refactoring - Peripheral manager implemented (#8126)&#13;&#10;&#13;&#10;* LEDC periman implementation&#13;&#10;&#13;&#10;* Fix examples&#13;&#10;&#13;&#10;* Rework tone&#13;&#10;&#13;&#10;* Update ledc docs&#13;&#10;&#13;&#10;* fix missing bracket&#13;&#10;&#13;&#10;* Update analog funtions esp32-hal.h&#13;&#10;&#13;&#10;* Update CameraWebServer example&#13;&#10;&#13;&#10;* Fix HiFreq_ADC example&#13;&#10;&#13;&#10;* minor fixes - typos&#13;&#10;&#13;&#10;* Avoid calling tone/notone when tone already runs on dif. pin&#13;&#10;&#13;&#10;* Remove unused channels_resolution&#13;&#10;&#13;&#10;* GPIO - Peripheral manager implementation (#8179)&#13;&#10;&#13;&#10;* periman-implementation&#13;&#10;&#13;&#10;* fix RGB_BUILTIN and remove space&#13;&#10;&#13;&#10;* Enforces more consistency into Peripheral Manager (#8188)&#13;&#10;&#13;&#10;* Avoid log_i() message the first time a bus is assigned&#13;&#10;&#13;&#10;* Prevent operation with ESP32_BUS_TYPE_INIT&#13;&#10;&#13;&#10;* keeps coding style&#13;&#10;&#13;&#10;* do not print messages on INIT bus type&#13;&#10;&#13;&#10;* [Arduino Core 3.0.0] RMT IDF5.1 Refactoring (#7994)&#13;&#10;&#13;&#10;* RMT IDF5.1 refactoring&#13;&#10;&#13;&#10;* Fixes initial value setting&#13;&#10;&#13;&#10;* removed rmtRead() with user callback&#13;&#10;&#13;&#10;* simplify/remove Read data structure&#13;&#10;&#13;&#10;* Deep API simplification&#13;&#10;&#13;&#10;* fixes the examples&#13;&#10;&#13;&#10;* fix rmt.h&#13;&#10;&#13;&#10;* adds support to APB different frequencies&#13;&#10;&#13;&#10;* fixes CI and not defined RGB_BUILTIN&#13;&#10;&#13;&#10;* new RMT API and examples&#13;&#10;&#13;&#10;* fixing commentaties&#13;&#10;&#13;&#10;* Update esp32-hal-rgb-led.c&#13;&#10;&#13;&#10;* changes Filter API&#13;&#10;&#13;&#10;* Fixes example with Filter API&#13;&#10;&#13;&#10;* Update PlatformIO scripts for the upcoming 3.0 core (#8183)&#13;&#10;&#13;&#10;* Update PlatformIO scripts for the upcoming 3.0 core&#13;&#10;&#13;&#10;* Dynamically select proper framework-arduinoespressif32-libs package&#13;&#10;&#13;&#10;With this change the dev-platform will be dynamically configured to&#13;&#10;pull the latest .zip package with precompiled libraries from extracted from&#13;&#10;package_esp32_index.template.json&#13;&#10;&#13;&#10;* free memory on detach (#8264)&#13;&#10;&#13;&#10;* SPI - Peripheral manager implementation  (#8255)&#13;&#10;&#13;&#10;* spi periman implementation&#13;&#10;&#13;&#10;* fix header file&#13;&#10;&#13;&#10;* remove unused struct&#13;&#10;&#13;&#10;* fix missing braces&#13;&#10;&#13;&#10;* Update esp32-hal-rmt.c (#8216)&#13;&#10;&#13;&#10;Optimizing Peripheral Manager Test&#13;&#10;&#13;&#10;* I2C - Peripheral manager implementation (#8220)&#13;&#10;&#13;&#10;* i2c-master periman initial commit&#13;&#10;&#13;&#10;* i2c-master make detachbus static + comment remove&#13;&#10;&#13;&#10;* i2c-slave periman implementation&#13;&#10;&#13;&#10;* SetPinBus to INIT on i2cDeinits&#13;&#10;&#13;&#10;* Fix slave pins deinit&#13;&#10;&#13;&#10;* remove dbg logs&#13;&#10;&#13;&#10;* set ret to ESP_FAIL instead of returning&#13;&#10;&#13;&#10;* Fix warnings in hal-spi caused by pariman transition&#13;&#10;&#13;&#10;* Update esptool.py to version 4.6&#13;&#10;&#13;&#10;* Add platform support for ESP_SR&#13;&#10;&#13;&#10;* Add USB Type and valid pin check to periman&#13;&#10;&#13;&#10;* replace bus with spi-&gt;num+1 (#8279)&#13;&#10;&#13;&#10;* Remove default pins from SPI HAL&#13;&#10;&#13;&#10;* Add commented out handlers for esptool.js in TinyUSB CDC&#13;&#10;&#13;&#10;For future use&#13;&#10;&#13;&#10;* Add build defines for host os and fqbn (for debug purposes)&#13;&#10;&#13;&#10;* Provide proper memory caps total size&#13;&#10;&#13;&#10;* Update Esp.cpp&#13;&#10;&#13;&#10;* SDMMC - Peripheral manager implementation (#8289)&#13;&#10;&#13;&#10;* sdmmc periman implemented&#13;&#10;&#13;&#10;* save pins when SOC_SDMMC_USE_IOMUX&#13;&#10;&#13;&#10;* IDF release/v5.1 4bc762621d (#8292)&#13;&#10;&#13;&#10;* Adds missing pinMode (#8312)&#13;&#10;&#13;&#10;* Adds missing pinMode&#13;&#10;&#13;&#10;The example code lacks a pinMode() to initialize the GPIO 0 (button). In Arduino Core 3.0.0, it prints an error message when trying to read a not initialized GPIO.&#13;&#10;&#13;&#10;* Update KeyboardLogout.ino&#13;&#10;&#13;&#10;Adds &lt;buttonPin&gt; to keep code standard&#13;&#10;&#13;&#10;* Update KeyboardReprogram.ino&#13;&#10;&#13;&#10;Adds &lt;buttonPin&gt; to keep code standard&#13;&#10;&#13;&#10;* LEDC Fade implementation (#8338)&#13;&#10;&#13;&#10;* fade API + pointer fixes&#13;&#10;&#13;&#10;* Add fade api&#13;&#10;&#13;&#10;* Add fade example&#13;&#10;&#13;&#10;* update ledc docs&#13;&#10;&#13;&#10;* remove unused variables&#13;&#10;&#13;&#10;* fix path to example&#13;&#10;&#13;&#10;* Adds USB to Peripheral Manager - Arduino Core 3.0.0 (#8335)&#13;&#10;&#13;&#10;* ETHERNET - Peripheral manager implementation (#8297)&#13;&#10;&#13;&#10;* Peripheral manager implemented&#13;&#10;&#13;&#10;* remove unused variable&#13;&#10;&#13;&#10;* Add all RMII pins&#13;&#10;&#13;&#10;* fix typo&#13;&#10;&#13;&#10;* Adds HardwareSerial to Peripheral Manager Arduino 3.0.0 (#8328)&#13;&#10;&#13;&#10;* Do not limit ETHERNET in periman to only ESP32. SPI is also an option&#13;&#10;&#13;&#10;* Initial support for ESP32-C6 (#8337)&#13;&#10;&#13;&#10;* Add checks for SOC defines (#8351)&#13;&#10;&#13;&#10;* Add checks for SOC defines&#13;&#10;&#13;&#10;* Add SoC checks to BLE library&#13;&#10;&#13;&#10;* fix i2c compilation error&#13;&#10;&#13;&#10;* fix wrong placement of include&#13;&#10;&#13;&#10;* add check to SPI library&#13;&#10;&#13;&#10;* add check to USB library&#13;&#10;&#13;&#10;* add checks to Wire library&#13;&#10;&#13;&#10;* Feature/esp32h2 support (#8373)&#13;&#10;&#13;&#10;* Initial support for ESP32H2&#13;&#10;&#13;&#10;* Additional changes for ESP32H2&#13;&#10;&#13;&#10;* Update libs for ESP32H2&#13;&#10;&#13;&#10;* Fix flashing on ESP32-H2&#13;&#10;&#13;&#10;* Fix GPIO Configs for ESP32-C6 and ESP32-H2&#13;&#10;&#13;&#10;* Update Timer test sketch&#13;&#10;&#13;&#10;* Fix upload flash parameters&#13;&#10;&#13;&#10;* Use ets_write_char_uart instead of ets_printf in log_printfv&#13;&#10;&#13;&#10;* Print full chip report when log level is sufficient (#8282)&#13;&#10;&#13;&#10;* ESP32-C3 does not have ets_write_char_uart&#13;&#10;&#13;&#10;* Fix BLE gap event name&#13;&#10;&#13;&#10;* HW Testing - Pytest update (#8389)&#13;&#10;&#13;&#10;* update tests requirements&#13;&#10;&#13;&#10;* remove already handled components&#13;&#10;&#13;&#10;* Update version of pytest&#13;&#10;&#13;&#10;* Add missing ESP32-H2 to hil.yml&#13;&#10;&#13;&#10;* Updated FreeRTOS names (#8418)&#13;&#10;&#13;&#10;* HW Testing -  ESP32-C6 + ESP32-H2 fixes (#8404)&#13;&#10;&#13;&#10;* add C6/H2 to tests cfg.json&#13;&#10;&#13;&#10;* remove ,&#13;&#10;&#13;&#10;* workflow runs-on runner by matrix&#13;&#10;&#13;&#10;* Add need for arduino tag to select runner&#13;&#10;&#13;&#10;* Add cryptography to requirements.txt&#13;&#10;&#13;&#10;* Removed duplicate TX1 define for H2 (#8402)&#13;&#10;&#13;&#10;* Fix broken examples&#13;&#10;&#13;&#10;* Fixes RMT filter &amp; idle timing and setup (#8359)&#13;&#10;&#13;&#10;* Fixes Filter and Idle parameter to uint32&#13;&#10;&#13;&#10;* Fixes Filter and Idle setup&#13;&#10;&#13;&#10;* Fixes it to 5.1Libs branch&#13;&#10;&#13;&#10;* fix RMT CLK source and Filter API&#13;&#10;&#13;&#10;* fixes missing ;&#13;&#10;&#13;&#10;* fixes missing ;&#13;&#10;&#13;&#10;* fixes RMT example&#13;&#10;&#13;&#10;* IDF release/v5.1 a7b62bbcaf (#8438)&#13;&#10;&#13;&#10;* Add workflow to build executables from python scripts (#8290)&#13;&#10;&#13;&#10;* Add workflow to build executables from python scripts&#13;&#10;&#13;&#10;* Push binary to tools&#13;&#10;&#13;&#10;* Enable executable signing on Windows&#13;&#10;&#13;&#10;* Update get.py&#13;&#10;&#13;&#10;* Push binary to tools&#13;&#10;&#13;&#10;* Try with multiple files&#13;&#10;&#13;&#10;* Try more actions&#13;&#10;&#13;&#10;* Try powershell&#13;&#10;&#13;&#10;* Restore tools so they do not get rebuilt&#13;&#10;&#13;&#10;* Finalize scripts&#13;&#10;&#13;&#10;* Push binary to tools&#13;&#10;&#13;&#10;* App rollback should be after PSRAM is initialized&#13;&#10;&#13;&#10;* Correcting RX1 to GPIO4 and TX1 to GPIO5 to be consistent with documentation. Previous pin use works but is inconsistent with C6 docs.&#13;&#10;&#13;&#10;* Fixes Memory Leak (#8486)&#13;&#10;&#13;&#10;* fixes preprocessor test (#8485)&#13;&#10;&#13;&#10;* fixes preprocessor test&#13;&#10;&#13;&#10;When using `#define USE_SOFT_AP` &#13;&#10;Change&#13;&#10;`&amp;&amp; not USE_SOFT_AP` ==&gt; `&amp;&amp; !defined(USE_SOFT_AP)`&#13;&#10;&#13;&#10;* Adds any BLE capable device in WiFiProv.ino&#13;&#10;&#13;&#10;Removing ESP32 restriction for BLE Provisioning.&#13;&#10;&#13;&#10;* fix flash mode read out for C6&#13;&#10;&#13;&#10;* Add option for custom partitions without restrictions&#13;&#10;&#13;&#10;* SD_MMC update (#8298)&#13;&#10;&#13;&#10;* Updated SD_MMC lib and examples&#13;&#10;&#13;&#10;* Removed getter implementation and commented usage in examples&#13;&#10;&#13;&#10;* squashed updates&#13;&#10;&#13;&#10;* IDF release/v5.1 f0437b945f (#8599)&#13;&#10;&#13;&#10;* Update package_esp32_index.template.json&#13;&#10;&#13;&#10;* Fix printf format build error in BTAdvertisedDeviceSet.cpp&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Pedro Minatel &lt;pedro.minatel@espressif.com&gt;&#13;&#10;Co-authored-by: Rodrigo Garcia &lt;rodrigo.garcia@espressif.com&gt;&#13;&#10;Co-authored-by: Ha Thach &lt;thach@tinyusb.org&gt;&#13;&#10;Co-authored-by: Martin Turski &lt;quiret@vfemail.net&gt;&#13;&#10;Co-authored-by: raviypujar &lt;raviypujar@gmail.com&gt;&#13;&#10;Co-authored-by: Jason2866 &lt;24528715+Jason2866@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: Tomáš Pilný &lt;34927466+PilnyTomas@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: Jan Procházka &lt;90197375+P-R-O-C-H-Y@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: Daniel Berlin &lt;dberlin@dberlin.org&gt;&#13;&#10;Co-authored-by: Nima Askari (نیما عسکری) &lt;nimaltd@yahoo.com&gt;&#13;&#10;Co-authored-by: rtpmsys &lt;106180646+rtpmsys@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: bytiful &lt;55647551+bytiful@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: tmfarrington &lt;tmfarrington@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: Krzysiek S &lt;chris.streh@gmail.com&gt;&#13;&#10;Co-authored-by: surt &lt;carl.olsson@gmail.com&gt;&#13;&#10;Co-authored-by: Max Scheffler &lt;max.scheffler@pm.me&gt;&#13;&#10;Co-authored-by: Clemens Kirchgatterer &lt;clemens@1541.org&gt;&#13;&#10;Co-authored-by: Peter Pan's Techland &lt;twinkle-pirate@hotmail.com&gt;&#13;&#10;Co-authored-by: Roman &lt;programmeofficemilkyway@gmail.com&gt;&#13;&#10;Co-authored-by: Eistee &lt;Eistee82@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: David McCurley &lt;44048235+mrengineer7777@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: Gaya3N25 &lt;30388176+Gaya3N25@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: renebohne &lt;rene.bohne@gmail.com&gt;&#13;&#10;Co-authored-by: Olivér Remény &lt;25034625+remenyo@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: davidk88 &lt;david.kotar@gmail.com&gt;&#13;&#10;Co-authored-by: Vojtěch Bartoška &lt;76958047+VojtechBartoska@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: James Armstrong &lt;jamesarmstrong3@me.com&gt;&#13;&#10;Co-authored-by: Valerii Koval &lt;valeros@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: Peter G. Jensen &lt;root@petergjoel.dk&gt;" />
			<int key="additions" value="38" />
			<int key="deletions" value="17" />
			<string key="diff" value='@@ -20,7 +20,7 @@&#10; #include "Arduino.h"&#10; #include "Esp.h"&#10; #include "esp_sleep.h"&#10;-#include "esp_spi_flash.h"&#10;+#include "spi_flash_mmap.h"&#10; #include &lt;memory&gt;&#10; #include &lt;soc/soc.h&gt;&#10; #include &lt;esp_partition.h&gt;&#10;@@ -32,6 +32,9 @@ extern "C" {&#10; &#10; #include "soc/spi_reg.h"&#10; #include "esp_system.h"&#10;+#include "esp_chip_info.h"&#10;+#include "esp_mac.h"&#10;+#include "esp_flash.h"&#10; #ifdef ESP_IDF_VERSION_MAJOR // IDF 4+&#10; #if CONFIG_IDF_TARGET_ESP32 // ESP32/PICO-D4&#10; #include "esp32/rom/spi_flash.h"&#10;@@ -48,6 +51,12 @@ extern "C" {&#10; #elif CONFIG_IDF_TARGET_ESP32C3&#10; #include "esp32c3/rom/spi_flash.h"&#10; #define ESP_FLASH_IMAGE_BASE 0x0000     // Esp32c3 is located at 0x0000&#10;+#elif CONFIG_IDF_TARGET_ESP32C6&#10;+#include "esp32c6/rom/spi_flash.h"&#10;+#define ESP_FLASH_IMAGE_BASE 0x0000     // Esp32c6 is located at 0x0000&#10;+#elif CONFIG_IDF_TARGET_ESP32H2&#10;+#include "esp32h2/rom/spi_flash.h"&#10;+#define ESP_FLASH_IMAGE_BASE 0x0000     // Esp32h2 is located at 0x0000&#10; #else &#10; #error Target CONFIG_IDF_TARGET is not supported&#10; #endif&#10;@@ -131,9 +140,7 @@ void EspClass::restart(void)&#10; &#10; uint32_t EspClass::getHeapSize(void)&#10; {&#10;-    multi_heap_info_t info;&#10;-    heap_caps_get_info(&amp;info, MALLOC_CAP_INTERNAL);&#10;-    return info.total_free_bytes + info.total_allocated_bytes;&#10;+    return heap_caps_get_total_size(MALLOC_CAP_INTERNAL);&#10; }&#10; &#10; uint32_t EspClass::getFreeHeap(void)&#10;@@ -154,9 +161,7 @@ uint32_t EspClass::getMaxAllocHeap(void)&#10; uint32_t EspClass::getPsramSize(void)&#10; {&#10; &#9;if(psramFound()){&#10;-&#9;    multi_heap_info_t info;&#10;-&#9;    heap_caps_get_info(&amp;info, MALLOC_CAP_SPIRAM);&#10;-&#9;    return info.total_free_bytes + info.total_allocated_bytes;&#10;+&#9;    return heap_caps_get_total_size(MALLOC_CAP_SPIRAM);&#10; &#9;}&#10; &#9;return 0;&#10; }&#10;@@ -255,7 +260,7 @@ uint32_t EspClass::getFreeSketchSpace () {&#10;     return _partition-&gt;size;&#10; }&#10; &#10;-uint8_t EspClass::getChipRevision(void)&#10;+uint16_t EspClass::getChipRevision(void)&#10; {&#10;     esp_chip_info_t chip_info;&#10;     esp_chip_info(&amp;chip_info);&#10;@@ -265,7 +270,7 @@ uint8_t EspClass::getChipRevision(void)&#10; const char * EspClass::getChipModel(void)&#10; {&#10; #if CONFIG_IDF_TARGET_ESP32&#10;-    uint32_t chip_ver = REG_GET_FIELD(EFUSE_BLK0_RDATA3_REG, EFUSE_RD_CHIP_VER_PKG);&#10;+    uint32_t chip_ver = REG_GET_FIELD(EFUSE_BLK0_RDATA3_REG, EFUSE_RD_CHIP_PACKAGE);&#10;     uint32_t pkg_ver = chip_ver &amp; 0x7;&#10;     switch (pkg_ver) {&#10;         case EFUSE_RD_CHIP_VER_PKG_ESP32D0WDQ6 :&#10;@@ -303,10 +308,17 @@ const char * EspClass::getChipModel(void)&#10;     default:&#10;       return "ESP32-S2 (Unknown)";&#10;     }&#10;-#elif CONFIG_IDF_TARGET_ESP32S3&#10;-    return "ESP32-S3";&#10;-#elif CONFIG_IDF_TARGET_ESP32C3&#10;-    return "ESP32-C3";&#10;+#else&#10;+    esp_chip_info_t chip_info;&#10;+    esp_chip_info(&amp;chip_info);&#10;+    switch(chip_info.model){&#10;+        case CHIP_ESP32S3: return "ESP32-S3";&#10;+        case CHIP_ESP32C3: return "ESP32-C3";&#10;+        case CHIP_ESP32C2: return "ESP32-C2";&#10;+        case CHIP_ESP32C6: return "ESP32-C6";&#10;+        case CHIP_ESP32H2: return "ESP32-H2";&#10;+        default: return "UNKNOWN";&#10;+    }&#10; #endif&#10; }&#10; &#10;@@ -322,6 +334,11 @@ const char * EspClass::getSdkVersion(void)&#10;     return esp_get_idf_version();&#10; }&#10; &#10;+const char * EspClass::getCoreVersion(void)&#10;+{&#10;+    return ESP_ARDUINO_VERSION_STR;&#10;+}&#10;+&#10; uint32_t ESP_getFlashChipId(void)&#10; {&#10;   uint32_t id = g_rom_flashchip.device_id;&#10;@@ -338,7 +355,7 @@ uint32_t EspClass::getFlashChipSize(void)&#10; uint32_t EspClass::getFlashChipSpeed(void)&#10; {&#10;     esp_image_header_t fhdr;&#10;-    if(flashRead(ESP_FLASH_IMAGE_BASE, (uint32_t*)&amp;fhdr, sizeof(esp_image_header_t)) &amp;&amp; fhdr.magic != ESP_IMAGE_HEADER_MAGIC) {&#10;+    if(esp_flash_read(esp_flash_default_chip, (void*)&amp;fhdr, ESP_FLASH_IMAGE_BASE, sizeof(esp_image_header_t)) &amp;&amp; fhdr.magic != ESP_IMAGE_HEADER_MAGIC) {&#10;         return 0;&#10;     }&#10;     return magicFlashChipSpeed(fhdr.spi_speed);&#10;@@ -349,8 +366,12 @@ FlashMode_t EspClass::getFlashChipMode(void)&#10;    #if CONFIG_IDF_TARGET_ESP32S2&#10;    uint32_t spi_ctrl = REG_READ(PERIPHS_SPI_FLASH_CTRL);&#10;    #else&#10;+   #if CONFIG_IDF_TARGET_ESP32H2 || CONFIG_IDF_TARGET_ESP32C6&#10;+   uint32_t spi_ctrl = REG_READ(DR_REG_SPI0_BASE + 0x8);&#10;+   #else&#10;    uint32_t spi_ctrl = REG_READ(SPI_CTRL_REG(0));&#10;    #endif&#10;+   #endif&#10;    /* Not all of the following constants are already defined in older versions of spi_reg.h, so do it manually for now*/&#10;    if (spi_ctrl &amp; BIT(24)) { //SPI_FREAD_QIO&#10;        return (FM_QIO);&#10;@@ -413,18 +434,18 @@ FlashMode_t EspClass::magicFlashChipMode(uint8_t byte)&#10; &#10; bool EspClass::flashEraseSector(uint32_t sector)&#10; {&#10;-    return spi_flash_erase_sector(sector) == ESP_OK;&#10;+    return esp_flash_erase_region(esp_flash_default_chip, sector * SPI_FLASH_SEC_SIZE, SPI_FLASH_SEC_SIZE) == ESP_OK;&#10; }&#10; &#10; // Warning: These functions do not work with encrypted flash&#10; bool EspClass::flashWrite(uint32_t offset, uint32_t *data, size_t size)&#10; {&#10;-    return spi_flash_write(offset, (uint32_t*) data, size) == ESP_OK;&#10;+    return esp_flash_write(esp_flash_default_chip, (const void*) data, offset, size) == ESP_OK;&#10; }&#10; &#10; bool EspClass::flashRead(uint32_t offset, uint32_t *data, size_t size)&#10; {&#10;-    return spi_flash_read(offset, (uint32_t*) data, size) == ESP_OK;&#10;+    return esp_flash_read(esp_flash_default_chip, (void*) data, offset, size) == ESP_OK;&#10; }&#10; &#10; bool EspClass::partitionEraseRange(const esp_partition_t *partition, uint32_t offset, size_t size) &#10;' />
			<string key="comment_change" value="True" />
		</event>
	</trace>
	<trace>
		<string key="file" value="httpUpdateSecure.ino" />
	</trace>
	<trace>
		<string key="file" value="HTTPUpdate.cpp" />
	</trace>
	<trace>
		<string key="file" value="HTTPUpdate.h" />
	</trace>
	<trace>
		<string key="file" value="Print.h" />
	</trace>
	<trace>
		<string key="file" value="Uri.h" />
	</trace>
	<trace>
		<string key="file" value="AppInsights.cpp" />
	</trace>
	<trace>
		<string key="file" value="AppInsights.h" />
	</trace>
	<trace>
		<string key="file" value="WiFiSTA.cpp" />
	</trace>
	<trace>
		<string key="file" value="WiFiSTA.h" />
	</trace>
	<trace>
		<string key="file" value="ESPmDNS.cpp" />
	</trace>
	<trace>
		<string key="file" value="ESPmDNS.h" />
	</trace>
	<trace>
		<string key="file" value="WiFiProv.ino" />
	</trace>
	<trace>
		<string key="file" value="WiFiProv.cpp" />
		<event>
			<string key="timestamp" value="2023-05-31T14:37:34+03:00" />
			<string key="author" value="Tomáš Pilný" />
			<string key="change_type" value="MODIFY" />
			<string key="commit_message" value="Provisioning fix and upgrades (#8209)&#10;&#10;* Added printQR function to library&#13;&#10;&#13;&#10;* Upgraded example&#13;&#10;&#13;&#10;* Upgraded README&#13;&#10;&#13;&#10;* Safegueard for qrcode.h include&#13;&#10;&#13;&#10;* Updated Safegueard for qrcode.h include" />
			<int key="additions" value="37" />
			<int key="deletions" value="5" />
			<string key="diff" value='@@ -26,6 +26,9 @@&#10; #include &lt;esp_wifi.h&gt;&#10; #include &lt;esp_event.h&gt;&#10; #include &lt;esp32-hal.h&gt;&#10;+#if __has_include("qrcode.h")&#10;+  #include "qrcode.h"&#10;+#endif&#10; &#10; #include &lt;nvs_flash.h&gt;&#10; #if CONFIG_BLUEDROID_ENABLED&#10;@@ -66,7 +69,7 @@ static void get_device_service_name(prov_scheme_t prov_scheme, char *service_nam&#10; #endif&#10; }&#10; &#10;-void WiFiProvClass :: beginProvision(prov_scheme_t prov_scheme, scheme_handler_t scheme_handler, wifi_prov_security_t security, const char * pop, const char *service_name, const char *service_key, uint8_t * uuid)&#10;+void WiFiProvClass :: beginProvision(prov_scheme_t prov_scheme, scheme_handler_t scheme_handler, wifi_prov_security_t security, const char * pop, const char *service_name, const char *service_key, uint8_t * uuid, bool reset_provisioned)&#10; {&#10;     bool provisioned = false;&#10;     static char service_name_temp[32];&#10;@@ -107,10 +110,13 @@ void WiFiProvClass :: beginProvision(prov_scheme_t prov_scheme, scheme_handler_t&#10;     &#9;log_e("wifi_prov_mgr_init failed!");&#10;     &#9;return;&#10;     }&#10;-    if(wifi_prov_mgr_is_provisioned(&amp;provisioned) != ESP_OK){&#10;-    &#9;log_e("wifi_prov_mgr_is_provisioned failed!");&#10;-    &#9;wifi_prov_mgr_deinit();&#10;-    &#9;return;&#10;+    if(reset_provisioned){&#10;+      log_i("Resetting provisioned data.");&#10;+      wifi_prov_mgr_reset_provisioning();&#10;+    }else if(wifi_prov_mgr_is_provisioned(&amp;provisioned) != ESP_OK){&#10;+      log_e("wifi_prov_mgr_is_provisioned failed!");&#10;+      wifi_prov_mgr_deinit();&#10;+      return;&#10;     }&#10;     if(provisioned == false) {&#10; #if CONFIG_BLUEDROID_ENABLED&#10;@@ -158,4 +164,30 @@ void WiFiProvClass :: beginProvision(prov_scheme_t prov_scheme, scheme_handler_t&#10;     }&#10; }&#10; &#10;+// Copied from IDF example&#10;+void  WiFiProvClass :: printQR(const char *name, const char *pop, const char *transport){&#10;+    if (!name || !transport) {&#10;+        log_w("Cannot generate QR code payload. Data missing.");&#10;+        return;&#10;+    }&#10;+    char payload[150] = {0};&#10;+    if (pop) {&#10;+        snprintf(payload, sizeof(payload), "{\"ver\":\"%s\",\"name\":\"%s\"" \&#10;+                    ",\"pop\":\"%s\",\"transport\":\"%s\"}",&#10;+                    "v1", name, pop, transport);&#10;+    } else {&#10;+        snprintf(payload, sizeof(payload), "{\"ver\":\"%s\",\"name\":\"%s\"" \&#10;+                    ",\"transport\":\"%s\"}",&#10;+                    "v1", name, transport);&#10;+    }&#10;+#if __has_include("qrcode.h")&#10;+    log_i("Scan this QR code from the provisioning application for Provisioning.");&#10;+    esp_qrcode_config_t cfg = ESP_QRCODE_CONFIG_DEFAULT();&#10;+    esp_qrcode_generate(&amp;cfg, payload);&#10;+#else&#10;+    log_i("If QR code is not visible, copy paste the below URL in a browser.\n%s?data=%s", "https://espressif.github.io/esp-jumpstart/qrcode.html", payload);&#10;+    log_i("If you are using Arduino as IDF component, install ESP Rainmaker:\nhttps://github.com/espressif/esp-rainmaker");&#10;+#endif&#10;+}&#10;+&#10; WiFiProvClass WiFiProv;&#10;' />
			<string key="comment_change" value="True" />
		</event>
	</trace>
	<trace>
		<string key="file" value="WiFiProv.h" />
	</trace>
	<trace>
		<string key="file" value="WebServer.cpp" />
	</trace>
	<trace>
		<string key="file" value="wifi.rst" />
	</trace>
	<trace>
		<string key="file" value="WiFiAP.h" />
	</trace>
	<trace>
		<string key="file" value="sd_diskio.cpp" />
	</trace>
	<trace>
		<string key="file" value="SD.cpp" />
	</trace>
	<trace>
		<string key="file" value="partitions-16MB-tinyuf2.csv" />
	</trace>
	<trace>
		<string key="file" value="Update.h" />
	</trace>
	<trace>
		<string key="file" value="Updater.cpp" />
	</trace>
	<trace>
		<string key="file" value="faq.rst" />
	</trace>
	<trace>
		<string key="file" value="troubleshooting.rst" />
	</trace>
	<trace>
		<string key="file" value="cdc_dfu_flash.rst" />
	</trace>
	<trace>
		<string key="file" value="io_mux.rst" />
	</trace>
	<trace>
		<string key="file" value="SDMMC_Test.ino" />
	</trace>
	<trace>
		<string key="file" value="partitions-4MB-1ota.csv" />
	</trace>
	<trace>
		<string key="file" value="Sign-File.ps1" />
	</trace>
	<trace>
		<string key="file" value="espressif.ico" />
	</trace>
	<trace>
		<string key="file" value="install-platformio-esp32.sh" />
	</trace>
	<trace>
		<string key="file" value="on-push.sh" />
	</trace>
	<trace>
		<string key="file" value="on-release.sh" />
	</trace>
	<trace>
		<string key="file" value="sketch_utils.sh" />
	</trace>
	<trace>
		<string key="file" value="upload_py_tools.sh" />
	</trace>
	<trace>
		<string key="file" value="build_py_tools.yml" />
	</trace>
	<trace>
		<string key="file" value="hil.yml" />
	</trace>
	<trace>
		<string key="file" value="lib.yml" />
	</trace>
	<trace>
		<string key="file" value="push.yml" />
	</trace>
	<trace>
		<string key="file" value=".gitignore" />
	</trace>
	<trace>
		<string key="file" value="Esp.h" />
	</trace>
	<trace>
		<string key="file" value="FirmwareMSC.cpp" />
	</trace>
	<trace>
		<string key="file" value="HWCDC.h" />
	</trace>
	<trace>
		<string key="file" value="MD5Builder.cpp" />
	</trace>
	<trace>
		<string key="file" value="Tone.cpp" />
		<event>
			<string key="timestamp" value="2023-10-05T14:54:25+03:00" />
			<string key="author" value="Me No Dev" />
			<string key="change_type" value="MODIFY" />
			<string key="commit_message" value="ESP-IDF v5.1 (#7733)&#10;&#10;* Initial changes to compile under ESP-IDF v5.1&#13;&#10;&#13;&#10;* Initial import for ESP-IDF v5.1 libs&#13;&#10;&#13;&#10;* Update toolchain&#13;&#10;&#13;&#10;* Update esp32-hal-psram.c&#13;&#10;&#13;&#10;* Add missing LDs&#13;&#10;&#13;&#10;* Update platform.txt&#13;&#10;&#13;&#10;* Stop some CI jobs, because they will always fail&#13;&#10;&#13;&#10;* Fix examples&#13;&#10;&#13;&#10;* Update app_httpd.cpp&#13;&#10;&#13;&#10;* Update ResetReason.ino&#13;&#10;&#13;&#10;* Warnings fixes&#13;&#10;&#13;&#10;* Added the example guideline and template (#7665)&#13;&#10;&#13;&#10;* Added the example guideline and template&#13;&#10;&#13;&#10;* PR review changes with some typos and grammar fixes&#13;&#10;&#13;&#10;* Changes according to the PR review&#13;&#10;&#13;&#10;* Added ESP32-S3 link to the datasheet (#7738)&#13;&#10;&#13;&#10;* Update HiFreq_ADC.ino&#13;&#10;&#13;&#10;* Replace periph_ctrl.h use because of deprecation&#13;&#10;&#13;&#10;* Replace esp_spi_flash.h use because of deprecation&#13;&#10;&#13;&#10;* Add includes to male mDNS::enableWorkstation compile&#13;&#10;&#13;&#10;* Fix ssl_client mbedtls_pk_parse_key callback&#13;&#10;&#13;&#10;* Update temperature sensor driver&#13;&#10;&#13;&#10;* Allow sketch_utils to compile with arduino-cli&#13;&#10;&#13;&#10;* Run CI with arduino-cli&#13;&#10;&#13;&#10;* Fix arduino-cli CI build on Windows&#13;&#10;&#13;&#10;* Refactor platform.txt to not use components installed through the board manager when running from git&#13;&#10;&#13;&#10;* Initial Peripheral Manager Implementation&#13;&#10;&#13;&#10;* Update SigmaDelta driver to use the new ESP-IDF driver API&#13;&#10;&#13;&#10;* Small improvements to peripheral manager and SigmaDelta&#13;&#10;&#13;&#10;* Remove deleted function from SigmaDelta header&#13;&#10;&#13;&#10;* Update DAC driver to use the new ESP-IDF driver API&#13;&#10;&#13;&#10;* Adds softAp(String) to make it compatible with ESP8266 (#7801)&#13;&#10;&#13;&#10;* Fix commentary (#7800)&#13;&#10;&#13;&#10;Minor fix based on observation done in https://github.com/espressif/arduino-esp32/issues/7795#issuecomment-1416868611&#13;&#10;&#13;&#10;* add adafruit new board feather esp32s2 reserve tft (#7794)&#13;&#10;&#13;&#10;* bugfix: add &lt;stdint.h&gt; for uint8_t to avoid compilation failure (GCC 11.2.0) (#7744)&#13;&#10;&#13;&#10;* Adding 3rd party boards for VALTRACK-V4-VTS-ESP32-C3 &amp; VALTRACK-V4-MFW-ESP32-C3 (#7735)&#13;&#10;&#13;&#10;* Added VALTRACK-V4-VTS-ESP32-C3 board definition&#13;&#10;&#13;&#10;Created pins_arduino.h &amp; made changes to boards.txt with necessary changes&#13;&#10;&#13;&#10;* Modified the URL&#13;&#10;&#13;&#10;* Renamed json&#13;&#10;&#13;&#10;* renamed all auRL&#13;&#10;&#13;&#10;* Adding VALTRACK-V4 series board definitions&#13;&#10;&#13;&#10;Added VALTRACK-V4-VTS-ESP32C3 &amp; VALTRACK-V4-MFW-ESP32-C3 board variants&#13;&#10;&#13;&#10;* Adding VALTRACK-V4 series board definitions&#13;&#10;&#13;&#10;Added VALTRACK-V4-VTS-ESP32C3 &amp; VALTRACK-V4-MFW-ESP32-C3 board variants&#13;&#10;&#13;&#10;* Reverted package_esp32_index.template.json&#13;&#10;&#13;&#10;restored package_esp32_index.template.json from edits&#13;&#10;&#13;&#10;* Reverted package_esp32_index.template.json&#13;&#10;&#13;&#10;Added new line to package_esp32_index.template.json&#13;&#10;&#13;&#10;* Update Platformio CI (#7725)&#13;&#10;&#13;&#10;* WiFiClient example fix (#7711)&#13;&#10;&#13;&#10;* Modified WiFiClient example to use thingspeak instead of non-functionig sparkfun&#13;&#10;&#13;&#10;* Moved instructions to README&#13;&#10;&#13;&#10;* Fixed spelling&#13;&#10;&#13;&#10;* Added link to S3 datasheet&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Jan Procházka &lt;90197375+P-R-O-C-H-Y@users.noreply.github.com&gt;&#13;&#10;&#13;&#10;* Mirror update from Heltec repository (#7709)&#13;&#10;&#13;&#10;Heltec updated the I2C pins in https://github.com/Heltec-Aaron-Lee/WiFi_Kit_series/commit/b10f4bf85d13fd01be80dcdb0eb59e6a8c8ba19a&#13;&#10;&#13;&#10;* Fixes BLE data printing (#7699)&#13;&#10;&#13;&#10;* Fixes BLE data printing&#13;&#10;&#13;&#10;BLE data has no '\0' terminator, therefore it can't be printed as a regular C string.&#13;&#10;This fix just prints the BLE data based on its length.&#13;&#10;&#13;&#10;* Simplify printing to a single call&#13;&#10;&#13;&#10;* split menu options + lora_32_V3 fix (#7697)&#13;&#10;&#13;&#10;* Change header gaurd name (#7696)&#13;&#10;&#13;&#10;* Fix Name (#7691)&#13;&#10;&#13;&#10;Wrong name in definitions.&#13;&#10;&#13;&#10;* Fix error in WiFiClient.cpp where the connect function fails for timeouts below 1 second (#7686)&#13;&#10;&#13;&#10;* Update WiFiClient.cpp&#13;&#10;&#13;&#10;This change will allow specifying connect timeouts below 1 second. Without this change, if connect timeouts under 1 second are given, the connect defaults to 0ms and fails. &#13;&#10;This will also allow timeouts in fractions of seconds, e.g. 1500ms. Without this change, connect timeouts are truncated to full second increments.&#13;&#10;&#13;&#10;* Make parameter timeout_ms clear&#13;&#10;&#13;&#10;* Change connection timeout_ms name for clarity&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Rodrigo Garcia &lt;rodrigo.garcia@espressif.com&gt;&#13;&#10;&#13;&#10;* fixed the function header (#7674)&#13;&#10;&#13;&#10;* fixed the function header&#13;&#10;&#13;&#10;* fixed function name and paramaters&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Jan Procházka &lt;90197375+P-R-O-C-H-Y@users.noreply.github.com&gt;&#13;&#10;&#13;&#10;* Ticker fix solving #6155 (#7664)&#13;&#10;&#13;&#10;* Wrapped Ticker functions with #pragma disabling -Wcast-function-type&#13;&#10;&#13;&#10;* Revert &quot;Wrapped Ticker functions with #pragma disabling -Wcast-function-type&quot;&#13;&#10;&#13;&#10;This reverts commit 160be7e67a10d01b6e44c4bf2521c0ccd6348976.&#13;&#10;&#13;&#10;* Fixed Ticker example&#13;&#10;&#13;&#10;* Modified Ticker example&#13;&#10;&#13;&#10;* Fixed LED_BUILTIN err for ESP32&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Jan Procházka &lt;90197375+P-R-O-C-H-Y@users.noreply.github.com&gt;&#13;&#10;&#13;&#10;* setPins fix ESP32 &quot;specified pins are not supported by this chip.&quot; (#7646)&#13;&#10;&#13;&#10;[ESP32: SDMMCFS::begin hardcodes the usage of slot 1, only check if the pins match slot 1 pins.]&#13;&#10;&#13;&#10;setPins() was testing pins D1, D2 and D3 all against D1 ... fine in 1 pin mode when all are -1 not so much if you're trying to get 4 pin mode working.&#13;&#10;I now see this function doesn't really do anything on the ESP32...accept now correctly checks that you are trying to use the slot 1 pins.&#13;&#10;&#13;&#10;Co-authored-by: Jan Procházka &lt;90197375+P-R-O-C-H-Y@users.noreply.github.com&gt;&#13;&#10;&#13;&#10;* Allow passing IP as connect method parameter in WiFiClientSecure and skip unnecessary host-ip conversions (#7643)&#13;&#10;&#13;&#10;* Add LED_BUILTIN* definitions and initialization for LEDs to stop them floating. (#7636)&#13;&#10;&#13;&#10;Co-authored-by: Rodrigo Garcia &lt;rodrigo.garcia@espressif.com&gt;&#13;&#10;&#13;&#10;* Expand path to tinuf2 image when checking existence in platformio-build.py (#7631)&#13;&#10;&#13;&#10;* Expand path to tinuf2 image when checking existence&#13;&#10;&#13;&#10;* More isFiles fixed&#13;&#10;&#13;&#10;* Remove (useless) trailing semicolon from Print.cpp (#7622)&#13;&#10;&#13;&#10;* ADD: New variant Edgebox-ESP-100 (#7771)&#13;&#10;&#13;&#10;* ADD: New variant Edgebox-ESP-100&#13;&#10;&#13;&#10;* FIX: Edgebox-ESP-100 Board.txt usb mode option change back to default value as ESP32S3&#13;&#10;&#13;&#10;* Add Crabik Slot ESP32-S3 board (#7790)&#13;&#10;&#13;&#10;* Added Crabik Slot ESP32-S3&#13;&#10;&#13;&#10;* Adding CPU frequency settings and removing excess from partition scheme settings&#13;&#10;&#13;&#10;* new variant LilyGO T-Display-S3 (#7763)&#13;&#10;&#13;&#10;* new variant LilyGO T-Display-S3&#13;&#10;&#13;&#10;https://github.com/Xinyuan-LilyGO/T-Display-S3&#13;&#10;&#13;&#10;* Add boards.txt definition&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Me No Dev &lt;me-no-dev@users.noreply.github.com&gt;&#13;&#10;&#13;&#10;* Update get.py to support Apple ARM64&#13;&#10;&#13;&#10;* Update package_esp32_index.template.json&#13;&#10;&#13;&#10;* WString Return bool (#7774)&#13;&#10;&#13;&#10;* Add Roboheart Hercules development board to the esp32-core (#7672)&#13;&#10;&#13;&#10;* added Roboheart Hercules pin definitions and board.txt entries&#13;&#10;&#13;&#10;* added package_roboheat.json for prototyping&#13;&#10;&#13;&#10;* Roboheart Hercules pins&#13;&#10;&#13;&#10;* Updated the pins&#13;&#10;&#13;&#10;* Delete package_roboheart.json&#13;&#10;&#13;&#10;* Requested changes&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: renebohne &lt;rene.bohne@gmail.com&gt;&#13;&#10;&#13;&#10;* Reword &quot;ESP-IDF as Component&quot; (#7812)&#13;&#10;&#13;&#10;I think &quot;Arduino as an ESP-IDF component&quot; or just &quot;As ESP-IDF component&quot; instead of  &quot;ESP-IDF as Component&quot; is more correct way to name the link.&#13;&#10;&#13;&#10;1. &quot;ESP-IDF as Component&quot; would imply that ESP-IDF is some sort of library for Arduino, which is (IMO) misleading, because it's true the other way around.&#13;&#10;2. It's written as &quot;Arduino as an ESP-IDF component&quot; on the webpage it points to as well.&#13;&#10;&#13;&#10;- Also I removed the capitalization from &quot;Component&quot; as I have not found a reason why is it capitalized.&#13;&#10;&#13;&#10;* add new board Adafruit Feather ESP32-S3 Reverse TFT (#7811)&#13;&#10;&#13;&#10;* Multi threading examples (tasks, queues, semaphores, mutexes) (#7660)&#13;&#10;&#13;&#10;* Moved and renamed example ESP32/FreeRTOS to MultiThreading/BasicMultiThreading&#13;&#10;&#13;&#10;* Added dummy files&#13;&#10;&#13;&#10;* Modified original example&#13;&#10;&#13;&#10;* Fixed BasicMultiThreading.ino&#13;&#10;&#13;&#10;* Added Example demonstrating use of queues&#13;&#10;&#13;&#10;* Extended info in BasicMultiThreading&#13;&#10;&#13;&#10;* Renamed Queues to singular Queue&#13;&#10;&#13;&#10;* Added Mutex example&#13;&#10;&#13;&#10;* Added Semaphore example&#13;&#10;&#13;&#10;* Moved info from example to README&#13;&#10;&#13;&#10;* Moved doc from Mutex to README&#13;&#10;&#13;&#10;* Added Queue README&#13;&#10;&#13;&#10;* Removed unecesary text&#13;&#10;&#13;&#10;* Fixed grammar&#13;&#10;&#13;&#10;* Increased stack size for Sempahore example&#13;&#10;&#13;&#10;* Added headers into .ino files&#13;&#10;&#13;&#10;* Added word Example at the end of title in README&#13;&#10;&#13;&#10;* removed unused line&#13;&#10;&#13;&#10;* Added forgotten README&#13;&#10;&#13;&#10;* Modified BasicMultiThreading example&#13;&#10;&#13;&#10;* Added missing S3 entry in README&#13;&#10;&#13;&#10;* moved location&#13;&#10;&#13;&#10;* Update ESP-IDF libs&#13;&#10;&#13;&#10;* Update CMakeLists.txt&#13;&#10;&#13;&#10;* Update esptool to v4.4&#13;&#10;&#13;&#10;* Add function timerAttachInterruptFlag (#7809)&#13;&#10;&#13;&#10;* Update esptool to v4.5&#13;&#10;&#13;&#10;* ADC refactoring (#7827)&#13;&#10;&#13;&#10;* Adc refactored + periman implementation&#13;&#10;&#13;&#10;Peripheral manager still needs to be checked if the implementation is right.&#13;&#10;&#13;&#10;* switched to working solution for milivolts read&#13;&#10;&#13;&#10;* Periman detachbus fix&#13;&#10;&#13;&#10;* coding style&#13;&#10;&#13;&#10;* fix CI warnings&#13;&#10;&#13;&#10;* fix FreeRTOS example&#13;&#10;&#13;&#10;* Update ETH.cpp&#13;&#10;&#13;&#10;* Update FunctionalInterruptStruct.ino&#13;&#10;&#13;&#10;* Update package_esp32_index.template.json&#13;&#10;&#13;&#10;* Update package_esp32_index.template.json&#13;&#10;&#13;&#10;* Fixes for the latest IDF v5.1&#13;&#10;&#13;&#10;* update esp-idf libs and toolchain&#13;&#10;&#13;&#10;* Turn OFF auto crystal frequency for ESP32 (needed by TWAI)&#13;&#10;&#13;&#10;* Update examples&#13;&#10;&#13;&#10;* Switch build to mostly use flags from files&#13;&#10;&#13;&#10;Includes can not be done this way&#13;&#10;&#13;&#10;* Reorganize flag files&#13;&#10;&#13;&#10;* Optimize chip build flags further&#13;&#10;&#13;&#10;* Revert defines from file. MBEDTLS_CONFIG_FILE does not properly expand&#13;&#10;&#13;&#10;* Add support for includes and defines from file&#13;&#10;&#13;&#10;* Replace old sdk path references in platform.txt&#13;&#10;&#13;&#10;* use gcc-ar (#8013)&#13;&#10;&#13;&#10;* Makes F_CPU generic for all SoC (#8007)&#13;&#10;&#13;&#10;Based on CONFIG_ESP_DEFAULT_CPU_FREQ_MHZ that is correctly defined in the sdkconfig file for each SoC.&#13;&#10;&#13;&#10;* TIMER refactoring (#7904)&#13;&#10;&#13;&#10;* refactor using GPtimer&#13;&#10;&#13;&#10;* Updated timer HW test&#13;&#10;&#13;&#10;* fix examples&#13;&#10;&#13;&#10;* Add v2.0.7 in issue template (#7871)&#13;&#10;&#13;&#10;* refactor using GPtimer&#13;&#10;&#13;&#10;* Updated timer HW test&#13;&#10;&#13;&#10;* fix examples&#13;&#10;&#13;&#10;* Revert &quot;Add v2.0.7 in issue template (#7871)&quot;&#13;&#10;&#13;&#10;This reverts commit fcc3b17d62ff57861f8913ca1f142fd5163b7457.&#13;&#10;&#13;&#10;* Update upload-artifact to v3 in HW CI&#13;&#10;&#13;&#10;* Revert &quot;Update upload-artifact to v3 in HW CI&quot;&#13;&#10;&#13;&#10;This reverts commit 1ba228071718ba37c4e26d98db22f77b2a7364a6.&#13;&#10;&#13;&#10;* replace resolution with frequency&#13;&#10;&#13;&#10;* remove count_down option&#13;&#10;&#13;&#10;* countup removed from examples + header&#13;&#10;&#13;&#10;* Refactored timer object&#13;&#10;&#13;&#10;* code cleanup + examples and tests fixes&#13;&#10;&#13;&#10;* TimerAlarm fix&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Vojtěch Bartoška &lt;76958047+VojtechBartoska@users.noreply.github.com&gt;&#13;&#10;&#13;&#10;* [Docs] ADC and Timer API Update (+some docs fixes) (#7906)&#13;&#10;&#13;&#10;* updated docs&#13;&#10;&#13;&#10;* remove hall sensor docs&#13;&#10;&#13;&#10;Removed Hall sensor documentation as its no longer supported in IDF-5&#13;&#10;&#13;&#10;* Fixed ESPNow examples location in docs&#13;&#10;&#13;&#10;* Last timer refactored API + gpio small fix&#13;&#10;&#13;&#10;* AlarmWrite fix&#13;&#10;&#13;&#10;* Fixes APLL/PLL with RTC Frequency (#8025)&#13;&#10;&#13;&#10;log_d() was displaying APLL for any SoC, but S3 and C3 has not such option, causing compilation errors.&#13;&#10;&#13;&#10;* Update IDF libs and fix OPI PSRAM on S3&#13;&#10;&#13;&#10;* Add setMode function HardwareSerial.c to set the esp32 uart mode for use with RS485 auto RTS (#7935)&#13;&#10;&#13;&#10;* Added setMode function to set the esp32 uart mode&#13;&#10;&#13;&#10;Used to set the esp32 uart mode for use with RS485 Half Duplex and the auto RTS pin mode. This will set/clear the RTS pin output to control the RE/DE pin on most RS485 chips.&#13;&#10;&#13;&#10;* Add Success (bool) return in some functions&#13;&#10;&#13;&#10;* Add Success (bool) return code to some functions&#13;&#10;&#13;&#10;* Add Success (bool) return to some functions&#13;&#10;&#13;&#10;* Add Success (bool) return to some functions&#13;&#10;&#13;&#10;* Fix uartSetRxTimeout return type&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Rodrigo Garcia &lt;rodrigo.garcia@espressif.com&gt;&#13;&#10;&#13;&#10;* Add support for esp-elf-gdb&#13;&#10;&#13;&#10;* WFG Crashfix (#8044)&#13;&#10;&#13;&#10;* Update component libs&#13;&#10;&#13;&#10;* IDF release/v5.1 (#8061)&#13;&#10;&#13;&#10;* IDF release/v5.1 bb9200acec&#13;&#10;&#13;&#10;* Update Esp.cpp&#13;&#10;&#13;&#10;* IDF release/v5.1 420ebd208a&#13;&#10;&#13;&#10;* Update esp32-hal-psram.c&#13;&#10;&#13;&#10;* Switch SDK to be an external package&#13;&#10;&#13;&#10;* fix path (#8096)&#13;&#10;&#13;&#10;* Makes UART work at any APB Frequency (#8097)&#13;&#10;&#13;&#10;Fixes HardwareSerial to work with IDF 5.1 on any CPU/APB Frequency (240MHz to 10MHZ), including user created low power modes.&#13;&#10;&#13;&#10;* Add required callbacks for TinyUSB DFU&#13;&#10;&#13;&#10;* Update version to 3.0.0&#13;&#10;&#13;&#10;* Add ESP.getCoreVersion() and update ESP.getChipModel()&#13;&#10;&#13;&#10;* Update timer hal for the latest 5.1&#13;&#10;&#13;&#10;* Use separate RX and TX buffer sizes in HTTP client&#13;&#10;&#13;&#10;optimizes download by allowing up to 4K packets to be received&#13;&#10;&#13;&#10;* Rename clock tree enum name in latest 5.1&#13;&#10;&#13;&#10;* ESP32-H4 support was removed in ESP-IDF v5.1&#13;&#10;&#13;&#10;* IDF release/v5.1 2004bf4e11 (#8165)&#13;&#10;&#13;&#10;* Deinit previous bus first (#8180)&#13;&#10;&#13;&#10;* TIMER - add timer_started flag, fix timerEnd() + timer HW test (#8135)&#13;&#10;&#13;&#10;* Add timer_started flag and stop before disable&#13;&#10;&#13;&#10;* Fix timer HW test&#13;&#10;&#13;&#10;* TOUCH - Peripheral manager implementation (#8129)&#13;&#10;&#13;&#10;* Touch periman implemented&#13;&#10;&#13;&#10;* Deinit previous bus first&#13;&#10;&#13;&#10;* LEDC Refactoring - Peripheral manager implemented (#8126)&#13;&#10;&#13;&#10;* LEDC periman implementation&#13;&#10;&#13;&#10;* Fix examples&#13;&#10;&#13;&#10;* Rework tone&#13;&#10;&#13;&#10;* Update ledc docs&#13;&#10;&#13;&#10;* fix missing bracket&#13;&#10;&#13;&#10;* Update analog funtions esp32-hal.h&#13;&#10;&#13;&#10;* Update CameraWebServer example&#13;&#10;&#13;&#10;* Fix HiFreq_ADC example&#13;&#10;&#13;&#10;* minor fixes - typos&#13;&#10;&#13;&#10;* Avoid calling tone/notone when tone already runs on dif. pin&#13;&#10;&#13;&#10;* Remove unused channels_resolution&#13;&#10;&#13;&#10;* GPIO - Peripheral manager implementation (#8179)&#13;&#10;&#13;&#10;* periman-implementation&#13;&#10;&#13;&#10;* fix RGB_BUILTIN and remove space&#13;&#10;&#13;&#10;* Enforces more consistency into Peripheral Manager (#8188)&#13;&#10;&#13;&#10;* Avoid log_i() message the first time a bus is assigned&#13;&#10;&#13;&#10;* Prevent operation with ESP32_BUS_TYPE_INIT&#13;&#10;&#13;&#10;* keeps coding style&#13;&#10;&#13;&#10;* do not print messages on INIT bus type&#13;&#10;&#13;&#10;* [Arduino Core 3.0.0] RMT IDF5.1 Refactoring (#7994)&#13;&#10;&#13;&#10;* RMT IDF5.1 refactoring&#13;&#10;&#13;&#10;* Fixes initial value setting&#13;&#10;&#13;&#10;* removed rmtRead() with user callback&#13;&#10;&#13;&#10;* simplify/remove Read data structure&#13;&#10;&#13;&#10;* Deep API simplification&#13;&#10;&#13;&#10;* fixes the examples&#13;&#10;&#13;&#10;* fix rmt.h&#13;&#10;&#13;&#10;* adds support to APB different frequencies&#13;&#10;&#13;&#10;* fixes CI and not defined RGB_BUILTIN&#13;&#10;&#13;&#10;* new RMT API and examples&#13;&#10;&#13;&#10;* fixing commentaties&#13;&#10;&#13;&#10;* Update esp32-hal-rgb-led.c&#13;&#10;&#13;&#10;* changes Filter API&#13;&#10;&#13;&#10;* Fixes example with Filter API&#13;&#10;&#13;&#10;* Update PlatformIO scripts for the upcoming 3.0 core (#8183)&#13;&#10;&#13;&#10;* Update PlatformIO scripts for the upcoming 3.0 core&#13;&#10;&#13;&#10;* Dynamically select proper framework-arduinoespressif32-libs package&#13;&#10;&#13;&#10;With this change the dev-platform will be dynamically configured to&#13;&#10;pull the latest .zip package with precompiled libraries from extracted from&#13;&#10;package_esp32_index.template.json&#13;&#10;&#13;&#10;* free memory on detach (#8264)&#13;&#10;&#13;&#10;* SPI - Peripheral manager implementation  (#8255)&#13;&#10;&#13;&#10;* spi periman implementation&#13;&#10;&#13;&#10;* fix header file&#13;&#10;&#13;&#10;* remove unused struct&#13;&#10;&#13;&#10;* fix missing braces&#13;&#10;&#13;&#10;* Update esp32-hal-rmt.c (#8216)&#13;&#10;&#13;&#10;Optimizing Peripheral Manager Test&#13;&#10;&#13;&#10;* I2C - Peripheral manager implementation (#8220)&#13;&#10;&#13;&#10;* i2c-master periman initial commit&#13;&#10;&#13;&#10;* i2c-master make detachbus static + comment remove&#13;&#10;&#13;&#10;* i2c-slave periman implementation&#13;&#10;&#13;&#10;* SetPinBus to INIT on i2cDeinits&#13;&#10;&#13;&#10;* Fix slave pins deinit&#13;&#10;&#13;&#10;* remove dbg logs&#13;&#10;&#13;&#10;* set ret to ESP_FAIL instead of returning&#13;&#10;&#13;&#10;* Fix warnings in hal-spi caused by pariman transition&#13;&#10;&#13;&#10;* Update esptool.py to version 4.6&#13;&#10;&#13;&#10;* Add platform support for ESP_SR&#13;&#10;&#13;&#10;* Add USB Type and valid pin check to periman&#13;&#10;&#13;&#10;* replace bus with spi-&gt;num+1 (#8279)&#13;&#10;&#13;&#10;* Remove default pins from SPI HAL&#13;&#10;&#13;&#10;* Add commented out handlers for esptool.js in TinyUSB CDC&#13;&#10;&#13;&#10;For future use&#13;&#10;&#13;&#10;* Add build defines for host os and fqbn (for debug purposes)&#13;&#10;&#13;&#10;* Provide proper memory caps total size&#13;&#10;&#13;&#10;* Update Esp.cpp&#13;&#10;&#13;&#10;* SDMMC - Peripheral manager implementation (#8289)&#13;&#10;&#13;&#10;* sdmmc periman implemented&#13;&#10;&#13;&#10;* save pins when SOC_SDMMC_USE_IOMUX&#13;&#10;&#13;&#10;* IDF release/v5.1 4bc762621d (#8292)&#13;&#10;&#13;&#10;* Adds missing pinMode (#8312)&#13;&#10;&#13;&#10;* Adds missing pinMode&#13;&#10;&#13;&#10;The example code lacks a pinMode() to initialize the GPIO 0 (button). In Arduino Core 3.0.0, it prints an error message when trying to read a not initialized GPIO.&#13;&#10;&#13;&#10;* Update KeyboardLogout.ino&#13;&#10;&#13;&#10;Adds &lt;buttonPin&gt; to keep code standard&#13;&#10;&#13;&#10;* Update KeyboardReprogram.ino&#13;&#10;&#13;&#10;Adds &lt;buttonPin&gt; to keep code standard&#13;&#10;&#13;&#10;* LEDC Fade implementation (#8338)&#13;&#10;&#13;&#10;* fade API + pointer fixes&#13;&#10;&#13;&#10;* Add fade api&#13;&#10;&#13;&#10;* Add fade example&#13;&#10;&#13;&#10;* update ledc docs&#13;&#10;&#13;&#10;* remove unused variables&#13;&#10;&#13;&#10;* fix path to example&#13;&#10;&#13;&#10;* Adds USB to Peripheral Manager - Arduino Core 3.0.0 (#8335)&#13;&#10;&#13;&#10;* ETHERNET - Peripheral manager implementation (#8297)&#13;&#10;&#13;&#10;* Peripheral manager implemented&#13;&#10;&#13;&#10;* remove unused variable&#13;&#10;&#13;&#10;* Add all RMII pins&#13;&#10;&#13;&#10;* fix typo&#13;&#10;&#13;&#10;* Adds HardwareSerial to Peripheral Manager Arduino 3.0.0 (#8328)&#13;&#10;&#13;&#10;* Do not limit ETHERNET in periman to only ESP32. SPI is also an option&#13;&#10;&#13;&#10;* Initial support for ESP32-C6 (#8337)&#13;&#10;&#13;&#10;* Add checks for SOC defines (#8351)&#13;&#10;&#13;&#10;* Add checks for SOC defines&#13;&#10;&#13;&#10;* Add SoC checks to BLE library&#13;&#10;&#13;&#10;* fix i2c compilation error&#13;&#10;&#13;&#10;* fix wrong placement of include&#13;&#10;&#13;&#10;* add check to SPI library&#13;&#10;&#13;&#10;* add check to USB library&#13;&#10;&#13;&#10;* add checks to Wire library&#13;&#10;&#13;&#10;* Feature/esp32h2 support (#8373)&#13;&#10;&#13;&#10;* Initial support for ESP32H2&#13;&#10;&#13;&#10;* Additional changes for ESP32H2&#13;&#10;&#13;&#10;* Update libs for ESP32H2&#13;&#10;&#13;&#10;* Fix flashing on ESP32-H2&#13;&#10;&#13;&#10;* Fix GPIO Configs for ESP32-C6 and ESP32-H2&#13;&#10;&#13;&#10;* Update Timer test sketch&#13;&#10;&#13;&#10;* Fix upload flash parameters&#13;&#10;&#13;&#10;* Use ets_write_char_uart instead of ets_printf in log_printfv&#13;&#10;&#13;&#10;* Print full chip report when log level is sufficient (#8282)&#13;&#10;&#13;&#10;* ESP32-C3 does not have ets_write_char_uart&#13;&#10;&#13;&#10;* Fix BLE gap event name&#13;&#10;&#13;&#10;* HW Testing - Pytest update (#8389)&#13;&#10;&#13;&#10;* update tests requirements&#13;&#10;&#13;&#10;* remove already handled components&#13;&#10;&#13;&#10;* Update version of pytest&#13;&#10;&#13;&#10;* Add missing ESP32-H2 to hil.yml&#13;&#10;&#13;&#10;* Updated FreeRTOS names (#8418)&#13;&#10;&#13;&#10;* HW Testing -  ESP32-C6 + ESP32-H2 fixes (#8404)&#13;&#10;&#13;&#10;* add C6/H2 to tests cfg.json&#13;&#10;&#13;&#10;* remove ,&#13;&#10;&#13;&#10;* workflow runs-on runner by matrix&#13;&#10;&#13;&#10;* Add need for arduino tag to select runner&#13;&#10;&#13;&#10;* Add cryptography to requirements.txt&#13;&#10;&#13;&#10;* Removed duplicate TX1 define for H2 (#8402)&#13;&#10;&#13;&#10;* Fix broken examples&#13;&#10;&#13;&#10;* Fixes RMT filter &amp; idle timing and setup (#8359)&#13;&#10;&#13;&#10;* Fixes Filter and Idle parameter to uint32&#13;&#10;&#13;&#10;* Fixes Filter and Idle setup&#13;&#10;&#13;&#10;* Fixes it to 5.1Libs branch&#13;&#10;&#13;&#10;* fix RMT CLK source and Filter API&#13;&#10;&#13;&#10;* fixes missing ;&#13;&#10;&#13;&#10;* fixes missing ;&#13;&#10;&#13;&#10;* fixes RMT example&#13;&#10;&#13;&#10;* IDF release/v5.1 a7b62bbcaf (#8438)&#13;&#10;&#13;&#10;* Add workflow to build executables from python scripts (#8290)&#13;&#10;&#13;&#10;* Add workflow to build executables from python scripts&#13;&#10;&#13;&#10;* Push binary to tools&#13;&#10;&#13;&#10;* Enable executable signing on Windows&#13;&#10;&#13;&#10;* Update get.py&#13;&#10;&#13;&#10;* Push binary to tools&#13;&#10;&#13;&#10;* Try with multiple files&#13;&#10;&#13;&#10;* Try more actions&#13;&#10;&#13;&#10;* Try powershell&#13;&#10;&#13;&#10;* Restore tools so they do not get rebuilt&#13;&#10;&#13;&#10;* Finalize scripts&#13;&#10;&#13;&#10;* Push binary to tools&#13;&#10;&#13;&#10;* App rollback should be after PSRAM is initialized&#13;&#10;&#13;&#10;* Correcting RX1 to GPIO4 and TX1 to GPIO5 to be consistent with documentation. Previous pin use works but is inconsistent with C6 docs.&#13;&#10;&#13;&#10;* Fixes Memory Leak (#8486)&#13;&#10;&#13;&#10;* fixes preprocessor test (#8485)&#13;&#10;&#13;&#10;* fixes preprocessor test&#13;&#10;&#13;&#10;When using `#define USE_SOFT_AP` &#13;&#10;Change&#13;&#10;`&amp;&amp; not USE_SOFT_AP` ==&gt; `&amp;&amp; !defined(USE_SOFT_AP)`&#13;&#10;&#13;&#10;* Adds any BLE capable device in WiFiProv.ino&#13;&#10;&#13;&#10;Removing ESP32 restriction for BLE Provisioning.&#13;&#10;&#13;&#10;* fix flash mode read out for C6&#13;&#10;&#13;&#10;* Add option for custom partitions without restrictions&#13;&#10;&#13;&#10;* SD_MMC update (#8298)&#13;&#10;&#13;&#10;* Updated SD_MMC lib and examples&#13;&#10;&#13;&#10;* Removed getter implementation and commented usage in examples&#13;&#10;&#13;&#10;* squashed updates&#13;&#10;&#13;&#10;* IDF release/v5.1 f0437b945f (#8599)&#13;&#10;&#13;&#10;* Update package_esp32_index.template.json&#13;&#10;&#13;&#10;* Fix printf format build error in BTAdvertisedDeviceSet.cpp&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Pedro Minatel &lt;pedro.minatel@espressif.com&gt;&#13;&#10;Co-authored-by: Rodrigo Garcia &lt;rodrigo.garcia@espressif.com&gt;&#13;&#10;Co-authored-by: Ha Thach &lt;thach@tinyusb.org&gt;&#13;&#10;Co-authored-by: Martin Turski &lt;quiret@vfemail.net&gt;&#13;&#10;Co-authored-by: raviypujar &lt;raviypujar@gmail.com&gt;&#13;&#10;Co-authored-by: Jason2866 &lt;24528715+Jason2866@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: Tomáš Pilný &lt;34927466+PilnyTomas@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: Jan Procházka &lt;90197375+P-R-O-C-H-Y@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: Daniel Berlin &lt;dberlin@dberlin.org&gt;&#13;&#10;Co-authored-by: Nima Askari (نیما عسکری) &lt;nimaltd@yahoo.com&gt;&#13;&#10;Co-authored-by: rtpmsys &lt;106180646+rtpmsys@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: bytiful &lt;55647551+bytiful@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: tmfarrington &lt;tmfarrington@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: Krzysiek S &lt;chris.streh@gmail.com&gt;&#13;&#10;Co-authored-by: surt &lt;carl.olsson@gmail.com&gt;&#13;&#10;Co-authored-by: Max Scheffler &lt;max.scheffler@pm.me&gt;&#13;&#10;Co-authored-by: Clemens Kirchgatterer &lt;clemens@1541.org&gt;&#13;&#10;Co-authored-by: Peter Pan's Techland &lt;twinkle-pirate@hotmail.com&gt;&#13;&#10;Co-authored-by: Roman &lt;programmeofficemilkyway@gmail.com&gt;&#13;&#10;Co-authored-by: Eistee &lt;Eistee82@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: David McCurley &lt;44048235+mrengineer7777@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: Gaya3N25 &lt;30388176+Gaya3N25@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: renebohne &lt;rene.bohne@gmail.com&gt;&#13;&#10;Co-authored-by: Olivér Remény &lt;25034625+remenyo@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: davidk88 &lt;david.kotar@gmail.com&gt;&#13;&#10;Co-authored-by: Vojtěch Bartoška &lt;76958047+VojtechBartoska@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: James Armstrong &lt;jamesarmstrong3@me.com&gt;&#13;&#10;Co-authored-by: Valerii Koval &lt;valeros@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: Peter G. Jensen &lt;root@petergjoel.dk&gt;" />
			<int key="additions" value="47" />
			<int key="deletions" value="53" />
			<string key="diff" value='@@ -6,12 +6,11 @@&#10; &#10; static TaskHandle_t _tone_task = NULL;&#10; static QueueHandle_t _tone_queue = NULL;&#10;-static uint8_t _channel = 0;&#10;+static int8_t _pin = -1;&#10; &#10; typedef enum{&#10;   TONE_START,&#10;-  TONE_END,&#10;-  TONE_SET_CHANNEL&#10;+  TONE_END&#10; } tone_cmd_t;&#10; &#10; typedef struct{&#10;@@ -19,7 +18,6 @@ typedef struct{&#10;   uint8_t pin;&#10;   unsigned int frequency;&#10;   unsigned long duration;&#10;-  uint8_t channel;&#10; } tone_msg_t;&#10; &#10; static void tone_task(void*){&#10;@@ -28,28 +26,28 @@ static void tone_task(void*){&#10;     xQueueReceive(_tone_queue, &amp;tone_msg, portMAX_DELAY);&#10;     switch(tone_msg.tone_cmd){&#10;       case TONE_START:&#10;-        log_d("Task received from queue TONE_START: _pin=%d, frequency=%u Hz, duration=%lu ms", tone_msg.pin, tone_msg.frequency, tone_msg.duration);&#10;+        log_d("Task received from queue TONE_START: pin=%d, frequency=%u Hz, duration=%lu ms", tone_msg.pin, tone_msg.frequency, tone_msg.duration);&#10; &#10;-        log_d("Setup LED controll on channel %d", _channel);&#10;-        ledcAttachPin(tone_msg.pin, _channel);&#10;-        ledcWriteTone(_channel, tone_msg.frequency);&#10;+        if (_pin == -1) {&#10;+          if (ledcAttach(tone_msg.pin, tone_msg.frequency, 10) == 0) {&#10;+              log_e("Tone start failed");&#10;+              break;&#10;+          }&#10;+          _pin = tone_msg.pin;&#10;+        }&#10;+        ledcWriteTone(tone_msg.pin, tone_msg.frequency);&#10; &#10;         if(tone_msg.duration){&#10;           delay(tone_msg.duration);&#10;-          ledcDetachPin(tone_msg.pin);&#10;-          ledcWriteTone(_channel, 0);&#10;+          ledcWriteTone(tone_msg.pin, 0);&#10;         }&#10;         break;&#10; &#10;       case TONE_END:&#10;         log_d("Task received from queue TONE_END: pin=%d", tone_msg.pin);&#10;-        ledcDetachPin(tone_msg.pin);&#10;-        ledcWriteTone(_channel, 0);&#10;-        break;&#10;-&#10;-      case TONE_SET_CHANNEL:&#10;-        log_d("Task received from queue TONE_SET_CHANNEL: channel=%d", tone_msg.channel);&#10;-        _channel = tone_msg.channel;&#10;+        ledcWriteTone(tone_msg.pin, 0);&#10;+        ledcDetach(tone_msg.pin);&#10;+        _pin = -1;&#10;         break;&#10; &#10;       default: ; // do nothing&#10;@@ -87,49 +85,45 @@ static int tone_init(){&#10;   return 1; // OK&#10; }&#10; &#10;-void setToneChannel(uint8_t channel){&#10;-  log_d("channel=%d", channel);&#10;-  if(tone_init()){&#10;-    tone_msg_t tone_msg = {&#10;-      .tone_cmd = TONE_SET_CHANNEL,&#10;-      .pin = 0, // Ignored&#10;-      .frequency = 0, // Ignored&#10;-      .duration = 0, // Ignored&#10;-      .channel = channel&#10;-    };&#10;-    xQueueSend(_tone_queue, &amp;tone_msg, portMAX_DELAY);&#10;-  }&#10;-}&#10;-&#10;-void noTone(uint8_t _pin){&#10;+void noTone(uint8_t pin){&#10;   log_d("noTone was called");&#10;-  if(tone_init()){&#10;-    tone_msg_t tone_msg = {&#10;-      .tone_cmd = TONE_END,&#10;-      .pin = _pin,&#10;-      .frequency = 0, // Ignored&#10;-      .duration = 0, // Ignored&#10;-      .channel = 0 // Ignored&#10;-    };&#10;-    xQueueSend(_tone_queue, &amp;tone_msg, portMAX_DELAY);&#10;+  if(_pin == pin) {&#10;+    if(tone_init()){&#10;+      tone_msg_t tone_msg = {&#10;+        .tone_cmd = TONE_END,&#10;+        .pin = pin,&#10;+        .frequency = 0, // Ignored&#10;+        .duration = 0, // Ignored&#10;+      };&#10;+      xQueueSend(_tone_queue, &amp;tone_msg, portMAX_DELAY);&#10;+    }&#10;+  }&#10;+  else {&#10;+    log_e("Tone is not running on given pin %d", pin);&#10;   }&#10; }&#10; &#10; // parameters:&#10;-// _pin - pin number which will output the signal&#10;+// pin - pin number which will output the signal&#10; // frequency - PWM frequency in Hz&#10; // duration - time in ms - how long will the signal be outputted.&#10; //   If not provided, or 0 you must manually call noTone to end output&#10;-void tone(uint8_t _pin, unsigned int frequency, unsigned long duration){&#10;-  log_d("_pin=%d, frequency=%u Hz, duration=%lu ms", _pin, frequency, duration);&#10;-  if(tone_init()){&#10;-    tone_msg_t tone_msg = {&#10;-      .tone_cmd = TONE_START,&#10;-      .pin = _pin,&#10;-      .frequency = frequency,&#10;-      .duration = duration,&#10;-      .channel = 0 // Ignored&#10;-    };&#10;-    xQueueSend(_tone_queue, &amp;tone_msg, portMAX_DELAY);&#10;+void tone(uint8_t pin, unsigned int frequency, unsigned long duration){&#10;+  log_d("pin=%d, frequency=%u Hz, duration=%lu ms", pin, frequency, duration);&#10;+  if(_pin == -1 || _pin == pin) {&#10;+    if(tone_init()){&#10;+      tone_msg_t tone_msg = {&#10;+        .tone_cmd = TONE_START,&#10;+        .pin = pin,&#10;+        .frequency = frequency,&#10;+        .duration = duration,&#10;+      };&#10;+      xQueueSend(_tone_queue, &amp;tone_msg, portMAX_DELAY);&#10;+      return;&#10;+    }&#10;+  }&#10;+  else {&#10;+    log_e("Tone is still running on pin %d, call noTone(%d) first!", _pin, _pin);&#10;+    return;&#10;   }&#10; }&#10;' />
			<string key="comment_change" value="True" />
		</event>
	</trace>
	<trace>
		<string key="file" value="USB.h" />
	</trace>
	<trace>
		<string key="file" value="USBCDC.cpp" />
		<event>
			<string key="timestamp" value="2023-10-05T14:54:25+03:00" />
			<string key="author" value="Me No Dev" />
			<string key="change_type" value="MODIFY" />
			<string key="commit_message" value="ESP-IDF v5.1 (#7733)&#10;&#10;* Initial changes to compile under ESP-IDF v5.1&#13;&#10;&#13;&#10;* Initial import for ESP-IDF v5.1 libs&#13;&#10;&#13;&#10;* Update toolchain&#13;&#10;&#13;&#10;* Update esp32-hal-psram.c&#13;&#10;&#13;&#10;* Add missing LDs&#13;&#10;&#13;&#10;* Update platform.txt&#13;&#10;&#13;&#10;* Stop some CI jobs, because they will always fail&#13;&#10;&#13;&#10;* Fix examples&#13;&#10;&#13;&#10;* Update app_httpd.cpp&#13;&#10;&#13;&#10;* Update ResetReason.ino&#13;&#10;&#13;&#10;* Warnings fixes&#13;&#10;&#13;&#10;* Added the example guideline and template (#7665)&#13;&#10;&#13;&#10;* Added the example guideline and template&#13;&#10;&#13;&#10;* PR review changes with some typos and grammar fixes&#13;&#10;&#13;&#10;* Changes according to the PR review&#13;&#10;&#13;&#10;* Added ESP32-S3 link to the datasheet (#7738)&#13;&#10;&#13;&#10;* Update HiFreq_ADC.ino&#13;&#10;&#13;&#10;* Replace periph_ctrl.h use because of deprecation&#13;&#10;&#13;&#10;* Replace esp_spi_flash.h use because of deprecation&#13;&#10;&#13;&#10;* Add includes to male mDNS::enableWorkstation compile&#13;&#10;&#13;&#10;* Fix ssl_client mbedtls_pk_parse_key callback&#13;&#10;&#13;&#10;* Update temperature sensor driver&#13;&#10;&#13;&#10;* Allow sketch_utils to compile with arduino-cli&#13;&#10;&#13;&#10;* Run CI with arduino-cli&#13;&#10;&#13;&#10;* Fix arduino-cli CI build on Windows&#13;&#10;&#13;&#10;* Refactor platform.txt to not use components installed through the board manager when running from git&#13;&#10;&#13;&#10;* Initial Peripheral Manager Implementation&#13;&#10;&#13;&#10;* Update SigmaDelta driver to use the new ESP-IDF driver API&#13;&#10;&#13;&#10;* Small improvements to peripheral manager and SigmaDelta&#13;&#10;&#13;&#10;* Remove deleted function from SigmaDelta header&#13;&#10;&#13;&#10;* Update DAC driver to use the new ESP-IDF driver API&#13;&#10;&#13;&#10;* Adds softAp(String) to make it compatible with ESP8266 (#7801)&#13;&#10;&#13;&#10;* Fix commentary (#7800)&#13;&#10;&#13;&#10;Minor fix based on observation done in https://github.com/espressif/arduino-esp32/issues/7795#issuecomment-1416868611&#13;&#10;&#13;&#10;* add adafruit new board feather esp32s2 reserve tft (#7794)&#13;&#10;&#13;&#10;* bugfix: add &lt;stdint.h&gt; for uint8_t to avoid compilation failure (GCC 11.2.0) (#7744)&#13;&#10;&#13;&#10;* Adding 3rd party boards for VALTRACK-V4-VTS-ESP32-C3 &amp; VALTRACK-V4-MFW-ESP32-C3 (#7735)&#13;&#10;&#13;&#10;* Added VALTRACK-V4-VTS-ESP32-C3 board definition&#13;&#10;&#13;&#10;Created pins_arduino.h &amp; made changes to boards.txt with necessary changes&#13;&#10;&#13;&#10;* Modified the URL&#13;&#10;&#13;&#10;* Renamed json&#13;&#10;&#13;&#10;* renamed all auRL&#13;&#10;&#13;&#10;* Adding VALTRACK-V4 series board definitions&#13;&#10;&#13;&#10;Added VALTRACK-V4-VTS-ESP32C3 &amp; VALTRACK-V4-MFW-ESP32-C3 board variants&#13;&#10;&#13;&#10;* Adding VALTRACK-V4 series board definitions&#13;&#10;&#13;&#10;Added VALTRACK-V4-VTS-ESP32C3 &amp; VALTRACK-V4-MFW-ESP32-C3 board variants&#13;&#10;&#13;&#10;* Reverted package_esp32_index.template.json&#13;&#10;&#13;&#10;restored package_esp32_index.template.json from edits&#13;&#10;&#13;&#10;* Reverted package_esp32_index.template.json&#13;&#10;&#13;&#10;Added new line to package_esp32_index.template.json&#13;&#10;&#13;&#10;* Update Platformio CI (#7725)&#13;&#10;&#13;&#10;* WiFiClient example fix (#7711)&#13;&#10;&#13;&#10;* Modified WiFiClient example to use thingspeak instead of non-functionig sparkfun&#13;&#10;&#13;&#10;* Moved instructions to README&#13;&#10;&#13;&#10;* Fixed spelling&#13;&#10;&#13;&#10;* Added link to S3 datasheet&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Jan Procházka &lt;90197375+P-R-O-C-H-Y@users.noreply.github.com&gt;&#13;&#10;&#13;&#10;* Mirror update from Heltec repository (#7709)&#13;&#10;&#13;&#10;Heltec updated the I2C pins in https://github.com/Heltec-Aaron-Lee/WiFi_Kit_series/commit/b10f4bf85d13fd01be80dcdb0eb59e6a8c8ba19a&#13;&#10;&#13;&#10;* Fixes BLE data printing (#7699)&#13;&#10;&#13;&#10;* Fixes BLE data printing&#13;&#10;&#13;&#10;BLE data has no '\0' terminator, therefore it can't be printed as a regular C string.&#13;&#10;This fix just prints the BLE data based on its length.&#13;&#10;&#13;&#10;* Simplify printing to a single call&#13;&#10;&#13;&#10;* split menu options + lora_32_V3 fix (#7697)&#13;&#10;&#13;&#10;* Change header gaurd name (#7696)&#13;&#10;&#13;&#10;* Fix Name (#7691)&#13;&#10;&#13;&#10;Wrong name in definitions.&#13;&#10;&#13;&#10;* Fix error in WiFiClient.cpp where the connect function fails for timeouts below 1 second (#7686)&#13;&#10;&#13;&#10;* Update WiFiClient.cpp&#13;&#10;&#13;&#10;This change will allow specifying connect timeouts below 1 second. Without this change, if connect timeouts under 1 second are given, the connect defaults to 0ms and fails. &#13;&#10;This will also allow timeouts in fractions of seconds, e.g. 1500ms. Without this change, connect timeouts are truncated to full second increments.&#13;&#10;&#13;&#10;* Make parameter timeout_ms clear&#13;&#10;&#13;&#10;* Change connection timeout_ms name for clarity&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Rodrigo Garcia &lt;rodrigo.garcia@espressif.com&gt;&#13;&#10;&#13;&#10;* fixed the function header (#7674)&#13;&#10;&#13;&#10;* fixed the function header&#13;&#10;&#13;&#10;* fixed function name and paramaters&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Jan Procházka &lt;90197375+P-R-O-C-H-Y@users.noreply.github.com&gt;&#13;&#10;&#13;&#10;* Ticker fix solving #6155 (#7664)&#13;&#10;&#13;&#10;* Wrapped Ticker functions with #pragma disabling -Wcast-function-type&#13;&#10;&#13;&#10;* Revert &quot;Wrapped Ticker functions with #pragma disabling -Wcast-function-type&quot;&#13;&#10;&#13;&#10;This reverts commit 160be7e67a10d01b6e44c4bf2521c0ccd6348976.&#13;&#10;&#13;&#10;* Fixed Ticker example&#13;&#10;&#13;&#10;* Modified Ticker example&#13;&#10;&#13;&#10;* Fixed LED_BUILTIN err for ESP32&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Jan Procházka &lt;90197375+P-R-O-C-H-Y@users.noreply.github.com&gt;&#13;&#10;&#13;&#10;* setPins fix ESP32 &quot;specified pins are not supported by this chip.&quot; (#7646)&#13;&#10;&#13;&#10;[ESP32: SDMMCFS::begin hardcodes the usage of slot 1, only check if the pins match slot 1 pins.]&#13;&#10;&#13;&#10;setPins() was testing pins D1, D2 and D3 all against D1 ... fine in 1 pin mode when all are -1 not so much if you're trying to get 4 pin mode working.&#13;&#10;I now see this function doesn't really do anything on the ESP32...accept now correctly checks that you are trying to use the slot 1 pins.&#13;&#10;&#13;&#10;Co-authored-by: Jan Procházka &lt;90197375+P-R-O-C-H-Y@users.noreply.github.com&gt;&#13;&#10;&#13;&#10;* Allow passing IP as connect method parameter in WiFiClientSecure and skip unnecessary host-ip conversions (#7643)&#13;&#10;&#13;&#10;* Add LED_BUILTIN* definitions and initialization for LEDs to stop them floating. (#7636)&#13;&#10;&#13;&#10;Co-authored-by: Rodrigo Garcia &lt;rodrigo.garcia@espressif.com&gt;&#13;&#10;&#13;&#10;* Expand path to tinuf2 image when checking existence in platformio-build.py (#7631)&#13;&#10;&#13;&#10;* Expand path to tinuf2 image when checking existence&#13;&#10;&#13;&#10;* More isFiles fixed&#13;&#10;&#13;&#10;* Remove (useless) trailing semicolon from Print.cpp (#7622)&#13;&#10;&#13;&#10;* ADD: New variant Edgebox-ESP-100 (#7771)&#13;&#10;&#13;&#10;* ADD: New variant Edgebox-ESP-100&#13;&#10;&#13;&#10;* FIX: Edgebox-ESP-100 Board.txt usb mode option change back to default value as ESP32S3&#13;&#10;&#13;&#10;* Add Crabik Slot ESP32-S3 board (#7790)&#13;&#10;&#13;&#10;* Added Crabik Slot ESP32-S3&#13;&#10;&#13;&#10;* Adding CPU frequency settings and removing excess from partition scheme settings&#13;&#10;&#13;&#10;* new variant LilyGO T-Display-S3 (#7763)&#13;&#10;&#13;&#10;* new variant LilyGO T-Display-S3&#13;&#10;&#13;&#10;https://github.com/Xinyuan-LilyGO/T-Display-S3&#13;&#10;&#13;&#10;* Add boards.txt definition&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Me No Dev &lt;me-no-dev@users.noreply.github.com&gt;&#13;&#10;&#13;&#10;* Update get.py to support Apple ARM64&#13;&#10;&#13;&#10;* Update package_esp32_index.template.json&#13;&#10;&#13;&#10;* WString Return bool (#7774)&#13;&#10;&#13;&#10;* Add Roboheart Hercules development board to the esp32-core (#7672)&#13;&#10;&#13;&#10;* added Roboheart Hercules pin definitions and board.txt entries&#13;&#10;&#13;&#10;* added package_roboheat.json for prototyping&#13;&#10;&#13;&#10;* Roboheart Hercules pins&#13;&#10;&#13;&#10;* Updated the pins&#13;&#10;&#13;&#10;* Delete package_roboheart.json&#13;&#10;&#13;&#10;* Requested changes&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: renebohne &lt;rene.bohne@gmail.com&gt;&#13;&#10;&#13;&#10;* Reword &quot;ESP-IDF as Component&quot; (#7812)&#13;&#10;&#13;&#10;I think &quot;Arduino as an ESP-IDF component&quot; or just &quot;As ESP-IDF component&quot; instead of  &quot;ESP-IDF as Component&quot; is more correct way to name the link.&#13;&#10;&#13;&#10;1. &quot;ESP-IDF as Component&quot; would imply that ESP-IDF is some sort of library for Arduino, which is (IMO) misleading, because it's true the other way around.&#13;&#10;2. It's written as &quot;Arduino as an ESP-IDF component&quot; on the webpage it points to as well.&#13;&#10;&#13;&#10;- Also I removed the capitalization from &quot;Component&quot; as I have not found a reason why is it capitalized.&#13;&#10;&#13;&#10;* add new board Adafruit Feather ESP32-S3 Reverse TFT (#7811)&#13;&#10;&#13;&#10;* Multi threading examples (tasks, queues, semaphores, mutexes) (#7660)&#13;&#10;&#13;&#10;* Moved and renamed example ESP32/FreeRTOS to MultiThreading/BasicMultiThreading&#13;&#10;&#13;&#10;* Added dummy files&#13;&#10;&#13;&#10;* Modified original example&#13;&#10;&#13;&#10;* Fixed BasicMultiThreading.ino&#13;&#10;&#13;&#10;* Added Example demonstrating use of queues&#13;&#10;&#13;&#10;* Extended info in BasicMultiThreading&#13;&#10;&#13;&#10;* Renamed Queues to singular Queue&#13;&#10;&#13;&#10;* Added Mutex example&#13;&#10;&#13;&#10;* Added Semaphore example&#13;&#10;&#13;&#10;* Moved info from example to README&#13;&#10;&#13;&#10;* Moved doc from Mutex to README&#13;&#10;&#13;&#10;* Added Queue README&#13;&#10;&#13;&#10;* Removed unecesary text&#13;&#10;&#13;&#10;* Fixed grammar&#13;&#10;&#13;&#10;* Increased stack size for Sempahore example&#13;&#10;&#13;&#10;* Added headers into .ino files&#13;&#10;&#13;&#10;* Added word Example at the end of title in README&#13;&#10;&#13;&#10;* removed unused line&#13;&#10;&#13;&#10;* Added forgotten README&#13;&#10;&#13;&#10;* Modified BasicMultiThreading example&#13;&#10;&#13;&#10;* Added missing S3 entry in README&#13;&#10;&#13;&#10;* moved location&#13;&#10;&#13;&#10;* Update ESP-IDF libs&#13;&#10;&#13;&#10;* Update CMakeLists.txt&#13;&#10;&#13;&#10;* Update esptool to v4.4&#13;&#10;&#13;&#10;* Add function timerAttachInterruptFlag (#7809)&#13;&#10;&#13;&#10;* Update esptool to v4.5&#13;&#10;&#13;&#10;* ADC refactoring (#7827)&#13;&#10;&#13;&#10;* Adc refactored + periman implementation&#13;&#10;&#13;&#10;Peripheral manager still needs to be checked if the implementation is right.&#13;&#10;&#13;&#10;* switched to working solution for milivolts read&#13;&#10;&#13;&#10;* Periman detachbus fix&#13;&#10;&#13;&#10;* coding style&#13;&#10;&#13;&#10;* fix CI warnings&#13;&#10;&#13;&#10;* fix FreeRTOS example&#13;&#10;&#13;&#10;* Update ETH.cpp&#13;&#10;&#13;&#10;* Update FunctionalInterruptStruct.ino&#13;&#10;&#13;&#10;* Update package_esp32_index.template.json&#13;&#10;&#13;&#10;* Update package_esp32_index.template.json&#13;&#10;&#13;&#10;* Fixes for the latest IDF v5.1&#13;&#10;&#13;&#10;* update esp-idf libs and toolchain&#13;&#10;&#13;&#10;* Turn OFF auto crystal frequency for ESP32 (needed by TWAI)&#13;&#10;&#13;&#10;* Update examples&#13;&#10;&#13;&#10;* Switch build to mostly use flags from files&#13;&#10;&#13;&#10;Includes can not be done this way&#13;&#10;&#13;&#10;* Reorganize flag files&#13;&#10;&#13;&#10;* Optimize chip build flags further&#13;&#10;&#13;&#10;* Revert defines from file. MBEDTLS_CONFIG_FILE does not properly expand&#13;&#10;&#13;&#10;* Add support for includes and defines from file&#13;&#10;&#13;&#10;* Replace old sdk path references in platform.txt&#13;&#10;&#13;&#10;* use gcc-ar (#8013)&#13;&#10;&#13;&#10;* Makes F_CPU generic for all SoC (#8007)&#13;&#10;&#13;&#10;Based on CONFIG_ESP_DEFAULT_CPU_FREQ_MHZ that is correctly defined in the sdkconfig file for each SoC.&#13;&#10;&#13;&#10;* TIMER refactoring (#7904)&#13;&#10;&#13;&#10;* refactor using GPtimer&#13;&#10;&#13;&#10;* Updated timer HW test&#13;&#10;&#13;&#10;* fix examples&#13;&#10;&#13;&#10;* Add v2.0.7 in issue template (#7871)&#13;&#10;&#13;&#10;* refactor using GPtimer&#13;&#10;&#13;&#10;* Updated timer HW test&#13;&#10;&#13;&#10;* fix examples&#13;&#10;&#13;&#10;* Revert &quot;Add v2.0.7 in issue template (#7871)&quot;&#13;&#10;&#13;&#10;This reverts commit fcc3b17d62ff57861f8913ca1f142fd5163b7457.&#13;&#10;&#13;&#10;* Update upload-artifact to v3 in HW CI&#13;&#10;&#13;&#10;* Revert &quot;Update upload-artifact to v3 in HW CI&quot;&#13;&#10;&#13;&#10;This reverts commit 1ba228071718ba37c4e26d98db22f77b2a7364a6.&#13;&#10;&#13;&#10;* replace resolution with frequency&#13;&#10;&#13;&#10;* remove count_down option&#13;&#10;&#13;&#10;* countup removed from examples + header&#13;&#10;&#13;&#10;* Refactored timer object&#13;&#10;&#13;&#10;* code cleanup + examples and tests fixes&#13;&#10;&#13;&#10;* TimerAlarm fix&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Vojtěch Bartoška &lt;76958047+VojtechBartoska@users.noreply.github.com&gt;&#13;&#10;&#13;&#10;* [Docs] ADC and Timer API Update (+some docs fixes) (#7906)&#13;&#10;&#13;&#10;* updated docs&#13;&#10;&#13;&#10;* remove hall sensor docs&#13;&#10;&#13;&#10;Removed Hall sensor documentation as its no longer supported in IDF-5&#13;&#10;&#13;&#10;* Fixed ESPNow examples location in docs&#13;&#10;&#13;&#10;* Last timer refactored API + gpio small fix&#13;&#10;&#13;&#10;* AlarmWrite fix&#13;&#10;&#13;&#10;* Fixes APLL/PLL with RTC Frequency (#8025)&#13;&#10;&#13;&#10;log_d() was displaying APLL for any SoC, but S3 and C3 has not such option, causing compilation errors.&#13;&#10;&#13;&#10;* Update IDF libs and fix OPI PSRAM on S3&#13;&#10;&#13;&#10;* Add setMode function HardwareSerial.c to set the esp32 uart mode for use with RS485 auto RTS (#7935)&#13;&#10;&#13;&#10;* Added setMode function to set the esp32 uart mode&#13;&#10;&#13;&#10;Used to set the esp32 uart mode for use with RS485 Half Duplex and the auto RTS pin mode. This will set/clear the RTS pin output to control the RE/DE pin on most RS485 chips.&#13;&#10;&#13;&#10;* Add Success (bool) return in some functions&#13;&#10;&#13;&#10;* Add Success (bool) return code to some functions&#13;&#10;&#13;&#10;* Add Success (bool) return to some functions&#13;&#10;&#13;&#10;* Add Success (bool) return to some functions&#13;&#10;&#13;&#10;* Fix uartSetRxTimeout return type&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Rodrigo Garcia &lt;rodrigo.garcia@espressif.com&gt;&#13;&#10;&#13;&#10;* Add support for esp-elf-gdb&#13;&#10;&#13;&#10;* WFG Crashfix (#8044)&#13;&#10;&#13;&#10;* Update component libs&#13;&#10;&#13;&#10;* IDF release/v5.1 (#8061)&#13;&#10;&#13;&#10;* IDF release/v5.1 bb9200acec&#13;&#10;&#13;&#10;* Update Esp.cpp&#13;&#10;&#13;&#10;* IDF release/v5.1 420ebd208a&#13;&#10;&#13;&#10;* Update esp32-hal-psram.c&#13;&#10;&#13;&#10;* Switch SDK to be an external package&#13;&#10;&#13;&#10;* fix path (#8096)&#13;&#10;&#13;&#10;* Makes UART work at any APB Frequency (#8097)&#13;&#10;&#13;&#10;Fixes HardwareSerial to work with IDF 5.1 on any CPU/APB Frequency (240MHz to 10MHZ), including user created low power modes.&#13;&#10;&#13;&#10;* Add required callbacks for TinyUSB DFU&#13;&#10;&#13;&#10;* Update version to 3.0.0&#13;&#10;&#13;&#10;* Add ESP.getCoreVersion() and update ESP.getChipModel()&#13;&#10;&#13;&#10;* Update timer hal for the latest 5.1&#13;&#10;&#13;&#10;* Use separate RX and TX buffer sizes in HTTP client&#13;&#10;&#13;&#10;optimizes download by allowing up to 4K packets to be received&#13;&#10;&#13;&#10;* Rename clock tree enum name in latest 5.1&#13;&#10;&#13;&#10;* ESP32-H4 support was removed in ESP-IDF v5.1&#13;&#10;&#13;&#10;* IDF release/v5.1 2004bf4e11 (#8165)&#13;&#10;&#13;&#10;* Deinit previous bus first (#8180)&#13;&#10;&#13;&#10;* TIMER - add timer_started flag, fix timerEnd() + timer HW test (#8135)&#13;&#10;&#13;&#10;* Add timer_started flag and stop before disable&#13;&#10;&#13;&#10;* Fix timer HW test&#13;&#10;&#13;&#10;* TOUCH - Peripheral manager implementation (#8129)&#13;&#10;&#13;&#10;* Touch periman implemented&#13;&#10;&#13;&#10;* Deinit previous bus first&#13;&#10;&#13;&#10;* LEDC Refactoring - Peripheral manager implemented (#8126)&#13;&#10;&#13;&#10;* LEDC periman implementation&#13;&#10;&#13;&#10;* Fix examples&#13;&#10;&#13;&#10;* Rework tone&#13;&#10;&#13;&#10;* Update ledc docs&#13;&#10;&#13;&#10;* fix missing bracket&#13;&#10;&#13;&#10;* Update analog funtions esp32-hal.h&#13;&#10;&#13;&#10;* Update CameraWebServer example&#13;&#10;&#13;&#10;* Fix HiFreq_ADC example&#13;&#10;&#13;&#10;* minor fixes - typos&#13;&#10;&#13;&#10;* Avoid calling tone/notone when tone already runs on dif. pin&#13;&#10;&#13;&#10;* Remove unused channels_resolution&#13;&#10;&#13;&#10;* GPIO - Peripheral manager implementation (#8179)&#13;&#10;&#13;&#10;* periman-implementation&#13;&#10;&#13;&#10;* fix RGB_BUILTIN and remove space&#13;&#10;&#13;&#10;* Enforces more consistency into Peripheral Manager (#8188)&#13;&#10;&#13;&#10;* Avoid log_i() message the first time a bus is assigned&#13;&#10;&#13;&#10;* Prevent operation with ESP32_BUS_TYPE_INIT&#13;&#10;&#13;&#10;* keeps coding style&#13;&#10;&#13;&#10;* do not print messages on INIT bus type&#13;&#10;&#13;&#10;* [Arduino Core 3.0.0] RMT IDF5.1 Refactoring (#7994)&#13;&#10;&#13;&#10;* RMT IDF5.1 refactoring&#13;&#10;&#13;&#10;* Fixes initial value setting&#13;&#10;&#13;&#10;* removed rmtRead() with user callback&#13;&#10;&#13;&#10;* simplify/remove Read data structure&#13;&#10;&#13;&#10;* Deep API simplification&#13;&#10;&#13;&#10;* fixes the examples&#13;&#10;&#13;&#10;* fix rmt.h&#13;&#10;&#13;&#10;* adds support to APB different frequencies&#13;&#10;&#13;&#10;* fixes CI and not defined RGB_BUILTIN&#13;&#10;&#13;&#10;* new RMT API and examples&#13;&#10;&#13;&#10;* fixing commentaties&#13;&#10;&#13;&#10;* Update esp32-hal-rgb-led.c&#13;&#10;&#13;&#10;* changes Filter API&#13;&#10;&#13;&#10;* Fixes example with Filter API&#13;&#10;&#13;&#10;* Update PlatformIO scripts for the upcoming 3.0 core (#8183)&#13;&#10;&#13;&#10;* Update PlatformIO scripts for the upcoming 3.0 core&#13;&#10;&#13;&#10;* Dynamically select proper framework-arduinoespressif32-libs package&#13;&#10;&#13;&#10;With this change the dev-platform will be dynamically configured to&#13;&#10;pull the latest .zip package with precompiled libraries from extracted from&#13;&#10;package_esp32_index.template.json&#13;&#10;&#13;&#10;* free memory on detach (#8264)&#13;&#10;&#13;&#10;* SPI - Peripheral manager implementation  (#8255)&#13;&#10;&#13;&#10;* spi periman implementation&#13;&#10;&#13;&#10;* fix header file&#13;&#10;&#13;&#10;* remove unused struct&#13;&#10;&#13;&#10;* fix missing braces&#13;&#10;&#13;&#10;* Update esp32-hal-rmt.c (#8216)&#13;&#10;&#13;&#10;Optimizing Peripheral Manager Test&#13;&#10;&#13;&#10;* I2C - Peripheral manager implementation (#8220)&#13;&#10;&#13;&#10;* i2c-master periman initial commit&#13;&#10;&#13;&#10;* i2c-master make detachbus static + comment remove&#13;&#10;&#13;&#10;* i2c-slave periman implementation&#13;&#10;&#13;&#10;* SetPinBus to INIT on i2cDeinits&#13;&#10;&#13;&#10;* Fix slave pins deinit&#13;&#10;&#13;&#10;* remove dbg logs&#13;&#10;&#13;&#10;* set ret to ESP_FAIL instead of returning&#13;&#10;&#13;&#10;* Fix warnings in hal-spi caused by pariman transition&#13;&#10;&#13;&#10;* Update esptool.py to version 4.6&#13;&#10;&#13;&#10;* Add platform support for ESP_SR&#13;&#10;&#13;&#10;* Add USB Type and valid pin check to periman&#13;&#10;&#13;&#10;* replace bus with spi-&gt;num+1 (#8279)&#13;&#10;&#13;&#10;* Remove default pins from SPI HAL&#13;&#10;&#13;&#10;* Add commented out handlers for esptool.js in TinyUSB CDC&#13;&#10;&#13;&#10;For future use&#13;&#10;&#13;&#10;* Add build defines for host os and fqbn (for debug purposes)&#13;&#10;&#13;&#10;* Provide proper memory caps total size&#13;&#10;&#13;&#10;* Update Esp.cpp&#13;&#10;&#13;&#10;* SDMMC - Peripheral manager implementation (#8289)&#13;&#10;&#13;&#10;* sdmmc periman implemented&#13;&#10;&#13;&#10;* save pins when SOC_SDMMC_USE_IOMUX&#13;&#10;&#13;&#10;* IDF release/v5.1 4bc762621d (#8292)&#13;&#10;&#13;&#10;* Adds missing pinMode (#8312)&#13;&#10;&#13;&#10;* Adds missing pinMode&#13;&#10;&#13;&#10;The example code lacks a pinMode() to initialize the GPIO 0 (button). In Arduino Core 3.0.0, it prints an error message when trying to read a not initialized GPIO.&#13;&#10;&#13;&#10;* Update KeyboardLogout.ino&#13;&#10;&#13;&#10;Adds &lt;buttonPin&gt; to keep code standard&#13;&#10;&#13;&#10;* Update KeyboardReprogram.ino&#13;&#10;&#13;&#10;Adds &lt;buttonPin&gt; to keep code standard&#13;&#10;&#13;&#10;* LEDC Fade implementation (#8338)&#13;&#10;&#13;&#10;* fade API + pointer fixes&#13;&#10;&#13;&#10;* Add fade api&#13;&#10;&#13;&#10;* Add fade example&#13;&#10;&#13;&#10;* update ledc docs&#13;&#10;&#13;&#10;* remove unused variables&#13;&#10;&#13;&#10;* fix path to example&#13;&#10;&#13;&#10;* Adds USB to Peripheral Manager - Arduino Core 3.0.0 (#8335)&#13;&#10;&#13;&#10;* ETHERNET - Peripheral manager implementation (#8297)&#13;&#10;&#13;&#10;* Peripheral manager implemented&#13;&#10;&#13;&#10;* remove unused variable&#13;&#10;&#13;&#10;* Add all RMII pins&#13;&#10;&#13;&#10;* fix typo&#13;&#10;&#13;&#10;* Adds HardwareSerial to Peripheral Manager Arduino 3.0.0 (#8328)&#13;&#10;&#13;&#10;* Do not limit ETHERNET in periman to only ESP32. SPI is also an option&#13;&#10;&#13;&#10;* Initial support for ESP32-C6 (#8337)&#13;&#10;&#13;&#10;* Add checks for SOC defines (#8351)&#13;&#10;&#13;&#10;* Add checks for SOC defines&#13;&#10;&#13;&#10;* Add SoC checks to BLE library&#13;&#10;&#13;&#10;* fix i2c compilation error&#13;&#10;&#13;&#10;* fix wrong placement of include&#13;&#10;&#13;&#10;* add check to SPI library&#13;&#10;&#13;&#10;* add check to USB library&#13;&#10;&#13;&#10;* add checks to Wire library&#13;&#10;&#13;&#10;* Feature/esp32h2 support (#8373)&#13;&#10;&#13;&#10;* Initial support for ESP32H2&#13;&#10;&#13;&#10;* Additional changes for ESP32H2&#13;&#10;&#13;&#10;* Update libs for ESP32H2&#13;&#10;&#13;&#10;* Fix flashing on ESP32-H2&#13;&#10;&#13;&#10;* Fix GPIO Configs for ESP32-C6 and ESP32-H2&#13;&#10;&#13;&#10;* Update Timer test sketch&#13;&#10;&#13;&#10;* Fix upload flash parameters&#13;&#10;&#13;&#10;* Use ets_write_char_uart instead of ets_printf in log_printfv&#13;&#10;&#13;&#10;* Print full chip report when log level is sufficient (#8282)&#13;&#10;&#13;&#10;* ESP32-C3 does not have ets_write_char_uart&#13;&#10;&#13;&#10;* Fix BLE gap event name&#13;&#10;&#13;&#10;* HW Testing - Pytest update (#8389)&#13;&#10;&#13;&#10;* update tests requirements&#13;&#10;&#13;&#10;* remove already handled components&#13;&#10;&#13;&#10;* Update version of pytest&#13;&#10;&#13;&#10;* Add missing ESP32-H2 to hil.yml&#13;&#10;&#13;&#10;* Updated FreeRTOS names (#8418)&#13;&#10;&#13;&#10;* HW Testing -  ESP32-C6 + ESP32-H2 fixes (#8404)&#13;&#10;&#13;&#10;* add C6/H2 to tests cfg.json&#13;&#10;&#13;&#10;* remove ,&#13;&#10;&#13;&#10;* workflow runs-on runner by matrix&#13;&#10;&#13;&#10;* Add need for arduino tag to select runner&#13;&#10;&#13;&#10;* Add cryptography to requirements.txt&#13;&#10;&#13;&#10;* Removed duplicate TX1 define for H2 (#8402)&#13;&#10;&#13;&#10;* Fix broken examples&#13;&#10;&#13;&#10;* Fixes RMT filter &amp; idle timing and setup (#8359)&#13;&#10;&#13;&#10;* Fixes Filter and Idle parameter to uint32&#13;&#10;&#13;&#10;* Fixes Filter and Idle setup&#13;&#10;&#13;&#10;* Fixes it to 5.1Libs branch&#13;&#10;&#13;&#10;* fix RMT CLK source and Filter API&#13;&#10;&#13;&#10;* fixes missing ;&#13;&#10;&#13;&#10;* fixes missing ;&#13;&#10;&#13;&#10;* fixes RMT example&#13;&#10;&#13;&#10;* IDF release/v5.1 a7b62bbcaf (#8438)&#13;&#10;&#13;&#10;* Add workflow to build executables from python scripts (#8290)&#13;&#10;&#13;&#10;* Add workflow to build executables from python scripts&#13;&#10;&#13;&#10;* Push binary to tools&#13;&#10;&#13;&#10;* Enable executable signing on Windows&#13;&#10;&#13;&#10;* Update get.py&#13;&#10;&#13;&#10;* Push binary to tools&#13;&#10;&#13;&#10;* Try with multiple files&#13;&#10;&#13;&#10;* Try more actions&#13;&#10;&#13;&#10;* Try powershell&#13;&#10;&#13;&#10;* Restore tools so they do not get rebuilt&#13;&#10;&#13;&#10;* Finalize scripts&#13;&#10;&#13;&#10;* Push binary to tools&#13;&#10;&#13;&#10;* App rollback should be after PSRAM is initialized&#13;&#10;&#13;&#10;* Correcting RX1 to GPIO4 and TX1 to GPIO5 to be consistent with documentation. Previous pin use works but is inconsistent with C6 docs.&#13;&#10;&#13;&#10;* Fixes Memory Leak (#8486)&#13;&#10;&#13;&#10;* fixes preprocessor test (#8485)&#13;&#10;&#13;&#10;* fixes preprocessor test&#13;&#10;&#13;&#10;When using `#define USE_SOFT_AP` &#13;&#10;Change&#13;&#10;`&amp;&amp; not USE_SOFT_AP` ==&gt; `&amp;&amp; !defined(USE_SOFT_AP)`&#13;&#10;&#13;&#10;* Adds any BLE capable device in WiFiProv.ino&#13;&#10;&#13;&#10;Removing ESP32 restriction for BLE Provisioning.&#13;&#10;&#13;&#10;* fix flash mode read out for C6&#13;&#10;&#13;&#10;* Add option for custom partitions without restrictions&#13;&#10;&#13;&#10;* SD_MMC update (#8298)&#13;&#10;&#13;&#10;* Updated SD_MMC lib and examples&#13;&#10;&#13;&#10;* Removed getter implementation and commented usage in examples&#13;&#10;&#13;&#10;* squashed updates&#13;&#10;&#13;&#10;* IDF release/v5.1 f0437b945f (#8599)&#13;&#10;&#13;&#10;* Update package_esp32_index.template.json&#13;&#10;&#13;&#10;* Fix printf format build error in BTAdvertisedDeviceSet.cpp&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Pedro Minatel &lt;pedro.minatel@espressif.com&gt;&#13;&#10;Co-authored-by: Rodrigo Garcia &lt;rodrigo.garcia@espressif.com&gt;&#13;&#10;Co-authored-by: Ha Thach &lt;thach@tinyusb.org&gt;&#13;&#10;Co-authored-by: Martin Turski &lt;quiret@vfemail.net&gt;&#13;&#10;Co-authored-by: raviypujar &lt;raviypujar@gmail.com&gt;&#13;&#10;Co-authored-by: Jason2866 &lt;24528715+Jason2866@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: Tomáš Pilný &lt;34927466+PilnyTomas@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: Jan Procházka &lt;90197375+P-R-O-C-H-Y@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: Daniel Berlin &lt;dberlin@dberlin.org&gt;&#13;&#10;Co-authored-by: Nima Askari (نیما عسکری) &lt;nimaltd@yahoo.com&gt;&#13;&#10;Co-authored-by: rtpmsys &lt;106180646+rtpmsys@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: bytiful &lt;55647551+bytiful@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: tmfarrington &lt;tmfarrington@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: Krzysiek S &lt;chris.streh@gmail.com&gt;&#13;&#10;Co-authored-by: surt &lt;carl.olsson@gmail.com&gt;&#13;&#10;Co-authored-by: Max Scheffler &lt;max.scheffler@pm.me&gt;&#13;&#10;Co-authored-by: Clemens Kirchgatterer &lt;clemens@1541.org&gt;&#13;&#10;Co-authored-by: Peter Pan's Techland &lt;twinkle-pirate@hotmail.com&gt;&#13;&#10;Co-authored-by: Roman &lt;programmeofficemilkyway@gmail.com&gt;&#13;&#10;Co-authored-by: Eistee &lt;Eistee82@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: David McCurley &lt;44048235+mrengineer7777@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: Gaya3N25 &lt;30388176+Gaya3N25@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: renebohne &lt;rene.bohne@gmail.com&gt;&#13;&#10;Co-authored-by: Olivér Remény &lt;25034625+remenyo@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: davidk88 &lt;david.kotar@gmail.com&gt;&#13;&#10;Co-authored-by: Vojtěch Bartoška &lt;76958047+VojtechBartoska@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: James Armstrong &lt;jamesarmstrong3@me.com&gt;&#13;&#10;Co-authored-by: Valerii Koval &lt;valeros@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: Peter G. Jensen &lt;root@petergjoel.dk&gt;" />
			<int key="additions" value="12" />
			<int key="deletions" value="2" />
			<string key="diff" value='@@ -11,11 +11,16 @@&#10; // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&#10; // See the License for the specific language governing permissions and&#10; // limitations under the License.&#10;+&#10;+#include "USBCDC.h"&#10;+&#10;+#if SOC_USB_OTG_SUPPORTED&#10; #include "USB.h"&#10; #if CONFIG_TINYUSB_CDC_ENABLED&#10; &#10;-#include "USBCDC.h"&#10;+&#10; #include "esp32-hal-tinyusb.h"&#10;+#include "rom/ets_sys.h"&#10; &#10; ESP_EVENT_DEFINE_BASE(ARDUINO_USB_CDC_EVENTS);&#10; esp_err_t arduino_usb_event_post(esp_event_base_t event_base, int32_t event_id, void *event_data, size_t event_data_size, TickType_t ticks_to_wait);&#10;@@ -118,7 +123,7 @@ size_t USBCDC::setRxBufferSize(size_t rx_queue_len){&#10;             uxQueueSpacesAvailable(rx_queue) + uxQueueMessagesWaiting(rx_queue) : 0;&#10; &#10;     if (rx_queue_len != currentQueueSize) {&#10;-        xQueueHandle new_rx_queue = NULL;&#10;+        QueueHandle_t new_rx_queue = NULL;&#10;         if (rx_queue_len) {&#10;             new_rx_queue = xQueueCreate(rx_queue_len, sizeof(uint8_t));&#10;             if(!new_rx_queue){&#10;@@ -209,6 +214,8 @@ void USBCDC::_onLineState(bool _dtr, bool _rts){&#10;                     arduino_usb_cdc_event_data_t p;&#10;                     arduino_usb_event_post(ARDUINO_USB_CDC_EVENTS, ARDUINO_USB_CDC_DISCONNECTED_EVENT, &amp;p, sizeof(arduino_usb_cdc_event_data_t), portMAX_DELAY);&#10;                 }&#10;+            // } else if(lineState == CDC_LINE_2){//esptool.js&#10;+            //     lineState++;&#10;             } else {&#10;                 lineState = CDC_LINE_IDLE;&#10;             }&#10;@@ -221,6 +228,8 @@ void USBCDC::_onLineState(bool _dtr, bool _rts){&#10;         } else if(dtr &amp;&amp; !rts){&#10;             if(lineState == CDC_LINE_2){&#10;                 lineState++;&#10;+            // } else if(lineState == CDC_LINE_IDLE){//esptool.js&#10;+            //     lineState++;&#10;             } else {&#10;                 lineState = CDC_LINE_IDLE;&#10;             }&#10;@@ -451,3 +460,4 @@ USBCDC Serial(0);&#10; #endif&#10; &#10; #endif /* CONFIG_TINYUSB_CDC_ENABLED */&#10;+#endif /* SOC_USB_OTG_SUPPORTED */&#10;' />
			<string key="comment_change" value="True" />
		</event>
	</trace>
	<trace>
		<string key="file" value="USBCDC.h" />
	</trace>
	<trace>
		<string key="file" value="USBMSC.cpp" />
	</trace>
	<trace>
		<string key="file" value="USBMSC.h" />
	</trace>
	<trace>
		<string key="file" value="chip-debug-report.cpp" />
		<event>
			<string key="timestamp" value="2023-10-05T14:54:25+03:00" />
			<string key="author" value="Me No Dev" />
			<string key="change_type" value="ADD" />
			<string key="commit_message" value="ESP-IDF v5.1 (#7733)&#10;&#10;* Initial changes to compile under ESP-IDF v5.1&#13;&#10;&#13;&#10;* Initial import for ESP-IDF v5.1 libs&#13;&#10;&#13;&#10;* Update toolchain&#13;&#10;&#13;&#10;* Update esp32-hal-psram.c&#13;&#10;&#13;&#10;* Add missing LDs&#13;&#10;&#13;&#10;* Update platform.txt&#13;&#10;&#13;&#10;* Stop some CI jobs, because they will always fail&#13;&#10;&#13;&#10;* Fix examples&#13;&#10;&#13;&#10;* Update app_httpd.cpp&#13;&#10;&#13;&#10;* Update ResetReason.ino&#13;&#10;&#13;&#10;* Warnings fixes&#13;&#10;&#13;&#10;* Added the example guideline and template (#7665)&#13;&#10;&#13;&#10;* Added the example guideline and template&#13;&#10;&#13;&#10;* PR review changes with some typos and grammar fixes&#13;&#10;&#13;&#10;* Changes according to the PR review&#13;&#10;&#13;&#10;* Added ESP32-S3 link to the datasheet (#7738)&#13;&#10;&#13;&#10;* Update HiFreq_ADC.ino&#13;&#10;&#13;&#10;* Replace periph_ctrl.h use because of deprecation&#13;&#10;&#13;&#10;* Replace esp_spi_flash.h use because of deprecation&#13;&#10;&#13;&#10;* Add includes to male mDNS::enableWorkstation compile&#13;&#10;&#13;&#10;* Fix ssl_client mbedtls_pk_parse_key callback&#13;&#10;&#13;&#10;* Update temperature sensor driver&#13;&#10;&#13;&#10;* Allow sketch_utils to compile with arduino-cli&#13;&#10;&#13;&#10;* Run CI with arduino-cli&#13;&#10;&#13;&#10;* Fix arduino-cli CI build on Windows&#13;&#10;&#13;&#10;* Refactor platform.txt to not use components installed through the board manager when running from git&#13;&#10;&#13;&#10;* Initial Peripheral Manager Implementation&#13;&#10;&#13;&#10;* Update SigmaDelta driver to use the new ESP-IDF driver API&#13;&#10;&#13;&#10;* Small improvements to peripheral manager and SigmaDelta&#13;&#10;&#13;&#10;* Remove deleted function from SigmaDelta header&#13;&#10;&#13;&#10;* Update DAC driver to use the new ESP-IDF driver API&#13;&#10;&#13;&#10;* Adds softAp(String) to make it compatible with ESP8266 (#7801)&#13;&#10;&#13;&#10;* Fix commentary (#7800)&#13;&#10;&#13;&#10;Minor fix based on observation done in https://github.com/espressif/arduino-esp32/issues/7795#issuecomment-1416868611&#13;&#10;&#13;&#10;* add adafruit new board feather esp32s2 reserve tft (#7794)&#13;&#10;&#13;&#10;* bugfix: add &lt;stdint.h&gt; for uint8_t to avoid compilation failure (GCC 11.2.0) (#7744)&#13;&#10;&#13;&#10;* Adding 3rd party boards for VALTRACK-V4-VTS-ESP32-C3 &amp; VALTRACK-V4-MFW-ESP32-C3 (#7735)&#13;&#10;&#13;&#10;* Added VALTRACK-V4-VTS-ESP32-C3 board definition&#13;&#10;&#13;&#10;Created pins_arduino.h &amp; made changes to boards.txt with necessary changes&#13;&#10;&#13;&#10;* Modified the URL&#13;&#10;&#13;&#10;* Renamed json&#13;&#10;&#13;&#10;* renamed all auRL&#13;&#10;&#13;&#10;* Adding VALTRACK-V4 series board definitions&#13;&#10;&#13;&#10;Added VALTRACK-V4-VTS-ESP32C3 &amp; VALTRACK-V4-MFW-ESP32-C3 board variants&#13;&#10;&#13;&#10;* Adding VALTRACK-V4 series board definitions&#13;&#10;&#13;&#10;Added VALTRACK-V4-VTS-ESP32C3 &amp; VALTRACK-V4-MFW-ESP32-C3 board variants&#13;&#10;&#13;&#10;* Reverted package_esp32_index.template.json&#13;&#10;&#13;&#10;restored package_esp32_index.template.json from edits&#13;&#10;&#13;&#10;* Reverted package_esp32_index.template.json&#13;&#10;&#13;&#10;Added new line to package_esp32_index.template.json&#13;&#10;&#13;&#10;* Update Platformio CI (#7725)&#13;&#10;&#13;&#10;* WiFiClient example fix (#7711)&#13;&#10;&#13;&#10;* Modified WiFiClient example to use thingspeak instead of non-functionig sparkfun&#13;&#10;&#13;&#10;* Moved instructions to README&#13;&#10;&#13;&#10;* Fixed spelling&#13;&#10;&#13;&#10;* Added link to S3 datasheet&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Jan Procházka &lt;90197375+P-R-O-C-H-Y@users.noreply.github.com&gt;&#13;&#10;&#13;&#10;* Mirror update from Heltec repository (#7709)&#13;&#10;&#13;&#10;Heltec updated the I2C pins in https://github.com/Heltec-Aaron-Lee/WiFi_Kit_series/commit/b10f4bf85d13fd01be80dcdb0eb59e6a8c8ba19a&#13;&#10;&#13;&#10;* Fixes BLE data printing (#7699)&#13;&#10;&#13;&#10;* Fixes BLE data printing&#13;&#10;&#13;&#10;BLE data has no '\0' terminator, therefore it can't be printed as a regular C string.&#13;&#10;This fix just prints the BLE data based on its length.&#13;&#10;&#13;&#10;* Simplify printing to a single call&#13;&#10;&#13;&#10;* split menu options + lora_32_V3 fix (#7697)&#13;&#10;&#13;&#10;* Change header gaurd name (#7696)&#13;&#10;&#13;&#10;* Fix Name (#7691)&#13;&#10;&#13;&#10;Wrong name in definitions.&#13;&#10;&#13;&#10;* Fix error in WiFiClient.cpp where the connect function fails for timeouts below 1 second (#7686)&#13;&#10;&#13;&#10;* Update WiFiClient.cpp&#13;&#10;&#13;&#10;This change will allow specifying connect timeouts below 1 second. Without this change, if connect timeouts under 1 second are given, the connect defaults to 0ms and fails. &#13;&#10;This will also allow timeouts in fractions of seconds, e.g. 1500ms. Without this change, connect timeouts are truncated to full second increments.&#13;&#10;&#13;&#10;* Make parameter timeout_ms clear&#13;&#10;&#13;&#10;* Change connection timeout_ms name for clarity&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Rodrigo Garcia &lt;rodrigo.garcia@espressif.com&gt;&#13;&#10;&#13;&#10;* fixed the function header (#7674)&#13;&#10;&#13;&#10;* fixed the function header&#13;&#10;&#13;&#10;* fixed function name and paramaters&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Jan Procházka &lt;90197375+P-R-O-C-H-Y@users.noreply.github.com&gt;&#13;&#10;&#13;&#10;* Ticker fix solving #6155 (#7664)&#13;&#10;&#13;&#10;* Wrapped Ticker functions with #pragma disabling -Wcast-function-type&#13;&#10;&#13;&#10;* Revert &quot;Wrapped Ticker functions with #pragma disabling -Wcast-function-type&quot;&#13;&#10;&#13;&#10;This reverts commit 160be7e67a10d01b6e44c4bf2521c0ccd6348976.&#13;&#10;&#13;&#10;* Fixed Ticker example&#13;&#10;&#13;&#10;* Modified Ticker example&#13;&#10;&#13;&#10;* Fixed LED_BUILTIN err for ESP32&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Jan Procházka &lt;90197375+P-R-O-C-H-Y@users.noreply.github.com&gt;&#13;&#10;&#13;&#10;* setPins fix ESP32 &quot;specified pins are not supported by this chip.&quot; (#7646)&#13;&#10;&#13;&#10;[ESP32: SDMMCFS::begin hardcodes the usage of slot 1, only check if the pins match slot 1 pins.]&#13;&#10;&#13;&#10;setPins() was testing pins D1, D2 and D3 all against D1 ... fine in 1 pin mode when all are -1 not so much if you're trying to get 4 pin mode working.&#13;&#10;I now see this function doesn't really do anything on the ESP32...accept now correctly checks that you are trying to use the slot 1 pins.&#13;&#10;&#13;&#10;Co-authored-by: Jan Procházka &lt;90197375+P-R-O-C-H-Y@users.noreply.github.com&gt;&#13;&#10;&#13;&#10;* Allow passing IP as connect method parameter in WiFiClientSecure and skip unnecessary host-ip conversions (#7643)&#13;&#10;&#13;&#10;* Add LED_BUILTIN* definitions and initialization for LEDs to stop them floating. (#7636)&#13;&#10;&#13;&#10;Co-authored-by: Rodrigo Garcia &lt;rodrigo.garcia@espressif.com&gt;&#13;&#10;&#13;&#10;* Expand path to tinuf2 image when checking existence in platformio-build.py (#7631)&#13;&#10;&#13;&#10;* Expand path to tinuf2 image when checking existence&#13;&#10;&#13;&#10;* More isFiles fixed&#13;&#10;&#13;&#10;* Remove (useless) trailing semicolon from Print.cpp (#7622)&#13;&#10;&#13;&#10;* ADD: New variant Edgebox-ESP-100 (#7771)&#13;&#10;&#13;&#10;* ADD: New variant Edgebox-ESP-100&#13;&#10;&#13;&#10;* FIX: Edgebox-ESP-100 Board.txt usb mode option change back to default value as ESP32S3&#13;&#10;&#13;&#10;* Add Crabik Slot ESP32-S3 board (#7790)&#13;&#10;&#13;&#10;* Added Crabik Slot ESP32-S3&#13;&#10;&#13;&#10;* Adding CPU frequency settings and removing excess from partition scheme settings&#13;&#10;&#13;&#10;* new variant LilyGO T-Display-S3 (#7763)&#13;&#10;&#13;&#10;* new variant LilyGO T-Display-S3&#13;&#10;&#13;&#10;https://github.com/Xinyuan-LilyGO/T-Display-S3&#13;&#10;&#13;&#10;* Add boards.txt definition&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Me No Dev &lt;me-no-dev@users.noreply.github.com&gt;&#13;&#10;&#13;&#10;* Update get.py to support Apple ARM64&#13;&#10;&#13;&#10;* Update package_esp32_index.template.json&#13;&#10;&#13;&#10;* WString Return bool (#7774)&#13;&#10;&#13;&#10;* Add Roboheart Hercules development board to the esp32-core (#7672)&#13;&#10;&#13;&#10;* added Roboheart Hercules pin definitions and board.txt entries&#13;&#10;&#13;&#10;* added package_roboheat.json for prototyping&#13;&#10;&#13;&#10;* Roboheart Hercules pins&#13;&#10;&#13;&#10;* Updated the pins&#13;&#10;&#13;&#10;* Delete package_roboheart.json&#13;&#10;&#13;&#10;* Requested changes&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: renebohne &lt;rene.bohne@gmail.com&gt;&#13;&#10;&#13;&#10;* Reword &quot;ESP-IDF as Component&quot; (#7812)&#13;&#10;&#13;&#10;I think &quot;Arduino as an ESP-IDF component&quot; or just &quot;As ESP-IDF component&quot; instead of  &quot;ESP-IDF as Component&quot; is more correct way to name the link.&#13;&#10;&#13;&#10;1. &quot;ESP-IDF as Component&quot; would imply that ESP-IDF is some sort of library for Arduino, which is (IMO) misleading, because it's true the other way around.&#13;&#10;2. It's written as &quot;Arduino as an ESP-IDF component&quot; on the webpage it points to as well.&#13;&#10;&#13;&#10;- Also I removed the capitalization from &quot;Component&quot; as I have not found a reason why is it capitalized.&#13;&#10;&#13;&#10;* add new board Adafruit Feather ESP32-S3 Reverse TFT (#7811)&#13;&#10;&#13;&#10;* Multi threading examples (tasks, queues, semaphores, mutexes) (#7660)&#13;&#10;&#13;&#10;* Moved and renamed example ESP32/FreeRTOS to MultiThreading/BasicMultiThreading&#13;&#10;&#13;&#10;* Added dummy files&#13;&#10;&#13;&#10;* Modified original example&#13;&#10;&#13;&#10;* Fixed BasicMultiThreading.ino&#13;&#10;&#13;&#10;* Added Example demonstrating use of queues&#13;&#10;&#13;&#10;* Extended info in BasicMultiThreading&#13;&#10;&#13;&#10;* Renamed Queues to singular Queue&#13;&#10;&#13;&#10;* Added Mutex example&#13;&#10;&#13;&#10;* Added Semaphore example&#13;&#10;&#13;&#10;* Moved info from example to README&#13;&#10;&#13;&#10;* Moved doc from Mutex to README&#13;&#10;&#13;&#10;* Added Queue README&#13;&#10;&#13;&#10;* Removed unecesary text&#13;&#10;&#13;&#10;* Fixed grammar&#13;&#10;&#13;&#10;* Increased stack size for Sempahore example&#13;&#10;&#13;&#10;* Added headers into .ino files&#13;&#10;&#13;&#10;* Added word Example at the end of title in README&#13;&#10;&#13;&#10;* removed unused line&#13;&#10;&#13;&#10;* Added forgotten README&#13;&#10;&#13;&#10;* Modified BasicMultiThreading example&#13;&#10;&#13;&#10;* Added missing S3 entry in README&#13;&#10;&#13;&#10;* moved location&#13;&#10;&#13;&#10;* Update ESP-IDF libs&#13;&#10;&#13;&#10;* Update CMakeLists.txt&#13;&#10;&#13;&#10;* Update esptool to v4.4&#13;&#10;&#13;&#10;* Add function timerAttachInterruptFlag (#7809)&#13;&#10;&#13;&#10;* Update esptool to v4.5&#13;&#10;&#13;&#10;* ADC refactoring (#7827)&#13;&#10;&#13;&#10;* Adc refactored + periman implementation&#13;&#10;&#13;&#10;Peripheral manager still needs to be checked if the implementation is right.&#13;&#10;&#13;&#10;* switched to working solution for milivolts read&#13;&#10;&#13;&#10;* Periman detachbus fix&#13;&#10;&#13;&#10;* coding style&#13;&#10;&#13;&#10;* fix CI warnings&#13;&#10;&#13;&#10;* fix FreeRTOS example&#13;&#10;&#13;&#10;* Update ETH.cpp&#13;&#10;&#13;&#10;* Update FunctionalInterruptStruct.ino&#13;&#10;&#13;&#10;* Update package_esp32_index.template.json&#13;&#10;&#13;&#10;* Update package_esp32_index.template.json&#13;&#10;&#13;&#10;* Fixes for the latest IDF v5.1&#13;&#10;&#13;&#10;* update esp-idf libs and toolchain&#13;&#10;&#13;&#10;* Turn OFF auto crystal frequency for ESP32 (needed by TWAI)&#13;&#10;&#13;&#10;* Update examples&#13;&#10;&#13;&#10;* Switch build to mostly use flags from files&#13;&#10;&#13;&#10;Includes can not be done this way&#13;&#10;&#13;&#10;* Reorganize flag files&#13;&#10;&#13;&#10;* Optimize chip build flags further&#13;&#10;&#13;&#10;* Revert defines from file. MBEDTLS_CONFIG_FILE does not properly expand&#13;&#10;&#13;&#10;* Add support for includes and defines from file&#13;&#10;&#13;&#10;* Replace old sdk path references in platform.txt&#13;&#10;&#13;&#10;* use gcc-ar (#8013)&#13;&#10;&#13;&#10;* Makes F_CPU generic for all SoC (#8007)&#13;&#10;&#13;&#10;Based on CONFIG_ESP_DEFAULT_CPU_FREQ_MHZ that is correctly defined in the sdkconfig file for each SoC.&#13;&#10;&#13;&#10;* TIMER refactoring (#7904)&#13;&#10;&#13;&#10;* refactor using GPtimer&#13;&#10;&#13;&#10;* Updated timer HW test&#13;&#10;&#13;&#10;* fix examples&#13;&#10;&#13;&#10;* Add v2.0.7 in issue template (#7871)&#13;&#10;&#13;&#10;* refactor using GPtimer&#13;&#10;&#13;&#10;* Updated timer HW test&#13;&#10;&#13;&#10;* fix examples&#13;&#10;&#13;&#10;* Revert &quot;Add v2.0.7 in issue template (#7871)&quot;&#13;&#10;&#13;&#10;This reverts commit fcc3b17d62ff57861f8913ca1f142fd5163b7457.&#13;&#10;&#13;&#10;* Update upload-artifact to v3 in HW CI&#13;&#10;&#13;&#10;* Revert &quot;Update upload-artifact to v3 in HW CI&quot;&#13;&#10;&#13;&#10;This reverts commit 1ba228071718ba37c4e26d98db22f77b2a7364a6.&#13;&#10;&#13;&#10;* replace resolution with frequency&#13;&#10;&#13;&#10;* remove count_down option&#13;&#10;&#13;&#10;* countup removed from examples + header&#13;&#10;&#13;&#10;* Refactored timer object&#13;&#10;&#13;&#10;* code cleanup + examples and tests fixes&#13;&#10;&#13;&#10;* TimerAlarm fix&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Vojtěch Bartoška &lt;76958047+VojtechBartoska@users.noreply.github.com&gt;&#13;&#10;&#13;&#10;* [Docs] ADC and Timer API Update (+some docs fixes) (#7906)&#13;&#10;&#13;&#10;* updated docs&#13;&#10;&#13;&#10;* remove hall sensor docs&#13;&#10;&#13;&#10;Removed Hall sensor documentation as its no longer supported in IDF-5&#13;&#10;&#13;&#10;* Fixed ESPNow examples location in docs&#13;&#10;&#13;&#10;* Last timer refactored API + gpio small fix&#13;&#10;&#13;&#10;* AlarmWrite fix&#13;&#10;&#13;&#10;* Fixes APLL/PLL with RTC Frequency (#8025)&#13;&#10;&#13;&#10;log_d() was displaying APLL for any SoC, but S3 and C3 has not such option, causing compilation errors.&#13;&#10;&#13;&#10;* Update IDF libs and fix OPI PSRAM on S3&#13;&#10;&#13;&#10;* Add setMode function HardwareSerial.c to set the esp32 uart mode for use with RS485 auto RTS (#7935)&#13;&#10;&#13;&#10;* Added setMode function to set the esp32 uart mode&#13;&#10;&#13;&#10;Used to set the esp32 uart mode for use with RS485 Half Duplex and the auto RTS pin mode. This will set/clear the RTS pin output to control the RE/DE pin on most RS485 chips.&#13;&#10;&#13;&#10;* Add Success (bool) return in some functions&#13;&#10;&#13;&#10;* Add Success (bool) return code to some functions&#13;&#10;&#13;&#10;* Add Success (bool) return to some functions&#13;&#10;&#13;&#10;* Add Success (bool) return to some functions&#13;&#10;&#13;&#10;* Fix uartSetRxTimeout return type&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Rodrigo Garcia &lt;rodrigo.garcia@espressif.com&gt;&#13;&#10;&#13;&#10;* Add support for esp-elf-gdb&#13;&#10;&#13;&#10;* WFG Crashfix (#8044)&#13;&#10;&#13;&#10;* Update component libs&#13;&#10;&#13;&#10;* IDF release/v5.1 (#8061)&#13;&#10;&#13;&#10;* IDF release/v5.1 bb9200acec&#13;&#10;&#13;&#10;* Update Esp.cpp&#13;&#10;&#13;&#10;* IDF release/v5.1 420ebd208a&#13;&#10;&#13;&#10;* Update esp32-hal-psram.c&#13;&#10;&#13;&#10;* Switch SDK to be an external package&#13;&#10;&#13;&#10;* fix path (#8096)&#13;&#10;&#13;&#10;* Makes UART work at any APB Frequency (#8097)&#13;&#10;&#13;&#10;Fixes HardwareSerial to work with IDF 5.1 on any CPU/APB Frequency (240MHz to 10MHZ), including user created low power modes.&#13;&#10;&#13;&#10;* Add required callbacks for TinyUSB DFU&#13;&#10;&#13;&#10;* Update version to 3.0.0&#13;&#10;&#13;&#10;* Add ESP.getCoreVersion() and update ESP.getChipModel()&#13;&#10;&#13;&#10;* Update timer hal for the latest 5.1&#13;&#10;&#13;&#10;* Use separate RX and TX buffer sizes in HTTP client&#13;&#10;&#13;&#10;optimizes download by allowing up to 4K packets to be received&#13;&#10;&#13;&#10;* Rename clock tree enum name in latest 5.1&#13;&#10;&#13;&#10;* ESP32-H4 support was removed in ESP-IDF v5.1&#13;&#10;&#13;&#10;* IDF release/v5.1 2004bf4e11 (#8165)&#13;&#10;&#13;&#10;* Deinit previous bus first (#8180)&#13;&#10;&#13;&#10;* TIMER - add timer_started flag, fix timerEnd() + timer HW test (#8135)&#13;&#10;&#13;&#10;* Add timer_started flag and stop before disable&#13;&#10;&#13;&#10;* Fix timer HW test&#13;&#10;&#13;&#10;* TOUCH - Peripheral manager implementation (#8129)&#13;&#10;&#13;&#10;* Touch periman implemented&#13;&#10;&#13;&#10;* Deinit previous bus first&#13;&#10;&#13;&#10;* LEDC Refactoring - Peripheral manager implemented (#8126)&#13;&#10;&#13;&#10;* LEDC periman implementation&#13;&#10;&#13;&#10;* Fix examples&#13;&#10;&#13;&#10;* Rework tone&#13;&#10;&#13;&#10;* Update ledc docs&#13;&#10;&#13;&#10;* fix missing bracket&#13;&#10;&#13;&#10;* Update analog funtions esp32-hal.h&#13;&#10;&#13;&#10;* Update CameraWebServer example&#13;&#10;&#13;&#10;* Fix HiFreq_ADC example&#13;&#10;&#13;&#10;* minor fixes - typos&#13;&#10;&#13;&#10;* Avoid calling tone/notone when tone already runs on dif. pin&#13;&#10;&#13;&#10;* Remove unused channels_resolution&#13;&#10;&#13;&#10;* GPIO - Peripheral manager implementation (#8179)&#13;&#10;&#13;&#10;* periman-implementation&#13;&#10;&#13;&#10;* fix RGB_BUILTIN and remove space&#13;&#10;&#13;&#10;* Enforces more consistency into Peripheral Manager (#8188)&#13;&#10;&#13;&#10;* Avoid log_i() message the first time a bus is assigned&#13;&#10;&#13;&#10;* Prevent operation with ESP32_BUS_TYPE_INIT&#13;&#10;&#13;&#10;* keeps coding style&#13;&#10;&#13;&#10;* do not print messages on INIT bus type&#13;&#10;&#13;&#10;* [Arduino Core 3.0.0] RMT IDF5.1 Refactoring (#7994)&#13;&#10;&#13;&#10;* RMT IDF5.1 refactoring&#13;&#10;&#13;&#10;* Fixes initial value setting&#13;&#10;&#13;&#10;* removed rmtRead() with user callback&#13;&#10;&#13;&#10;* simplify/remove Read data structure&#13;&#10;&#13;&#10;* Deep API simplification&#13;&#10;&#13;&#10;* fixes the examples&#13;&#10;&#13;&#10;* fix rmt.h&#13;&#10;&#13;&#10;* adds support to APB different frequencies&#13;&#10;&#13;&#10;* fixes CI and not defined RGB_BUILTIN&#13;&#10;&#13;&#10;* new RMT API and examples&#13;&#10;&#13;&#10;* fixing commentaties&#13;&#10;&#13;&#10;* Update esp32-hal-rgb-led.c&#13;&#10;&#13;&#10;* changes Filter API&#13;&#10;&#13;&#10;* Fixes example with Filter API&#13;&#10;&#13;&#10;* Update PlatformIO scripts for the upcoming 3.0 core (#8183)&#13;&#10;&#13;&#10;* Update PlatformIO scripts for the upcoming 3.0 core&#13;&#10;&#13;&#10;* Dynamically select proper framework-arduinoespressif32-libs package&#13;&#10;&#13;&#10;With this change the dev-platform will be dynamically configured to&#13;&#10;pull the latest .zip package with precompiled libraries from extracted from&#13;&#10;package_esp32_index.template.json&#13;&#10;&#13;&#10;* free memory on detach (#8264)&#13;&#10;&#13;&#10;* SPI - Peripheral manager implementation  (#8255)&#13;&#10;&#13;&#10;* spi periman implementation&#13;&#10;&#13;&#10;* fix header file&#13;&#10;&#13;&#10;* remove unused struct&#13;&#10;&#13;&#10;* fix missing braces&#13;&#10;&#13;&#10;* Update esp32-hal-rmt.c (#8216)&#13;&#10;&#13;&#10;Optimizing Peripheral Manager Test&#13;&#10;&#13;&#10;* I2C - Peripheral manager implementation (#8220)&#13;&#10;&#13;&#10;* i2c-master periman initial commit&#13;&#10;&#13;&#10;* i2c-master make detachbus static + comment remove&#13;&#10;&#13;&#10;* i2c-slave periman implementation&#13;&#10;&#13;&#10;* SetPinBus to INIT on i2cDeinits&#13;&#10;&#13;&#10;* Fix slave pins deinit&#13;&#10;&#13;&#10;* remove dbg logs&#13;&#10;&#13;&#10;* set ret to ESP_FAIL instead of returning&#13;&#10;&#13;&#10;* Fix warnings in hal-spi caused by pariman transition&#13;&#10;&#13;&#10;* Update esptool.py to version 4.6&#13;&#10;&#13;&#10;* Add platform support for ESP_SR&#13;&#10;&#13;&#10;* Add USB Type and valid pin check to periman&#13;&#10;&#13;&#10;* replace bus with spi-&gt;num+1 (#8279)&#13;&#10;&#13;&#10;* Remove default pins from SPI HAL&#13;&#10;&#13;&#10;* Add commented out handlers for esptool.js in TinyUSB CDC&#13;&#10;&#13;&#10;For future use&#13;&#10;&#13;&#10;* Add build defines for host os and fqbn (for debug purposes)&#13;&#10;&#13;&#10;* Provide proper memory caps total size&#13;&#10;&#13;&#10;* Update Esp.cpp&#13;&#10;&#13;&#10;* SDMMC - Peripheral manager implementation (#8289)&#13;&#10;&#13;&#10;* sdmmc periman implemented&#13;&#10;&#13;&#10;* save pins when SOC_SDMMC_USE_IOMUX&#13;&#10;&#13;&#10;* IDF release/v5.1 4bc762621d (#8292)&#13;&#10;&#13;&#10;* Adds missing pinMode (#8312)&#13;&#10;&#13;&#10;* Adds missing pinMode&#13;&#10;&#13;&#10;The example code lacks a pinMode() to initialize the GPIO 0 (button). In Arduino Core 3.0.0, it prints an error message when trying to read a not initialized GPIO.&#13;&#10;&#13;&#10;* Update KeyboardLogout.ino&#13;&#10;&#13;&#10;Adds &lt;buttonPin&gt; to keep code standard&#13;&#10;&#13;&#10;* Update KeyboardReprogram.ino&#13;&#10;&#13;&#10;Adds &lt;buttonPin&gt; to keep code standard&#13;&#10;&#13;&#10;* LEDC Fade implementation (#8338)&#13;&#10;&#13;&#10;* fade API + pointer fixes&#13;&#10;&#13;&#10;* Add fade api&#13;&#10;&#13;&#10;* Add fade example&#13;&#10;&#13;&#10;* update ledc docs&#13;&#10;&#13;&#10;* remove unused variables&#13;&#10;&#13;&#10;* fix path to example&#13;&#10;&#13;&#10;* Adds USB to Peripheral Manager - Arduino Core 3.0.0 (#8335)&#13;&#10;&#13;&#10;* ETHERNET - Peripheral manager implementation (#8297)&#13;&#10;&#13;&#10;* Peripheral manager implemented&#13;&#10;&#13;&#10;* remove unused variable&#13;&#10;&#13;&#10;* Add all RMII pins&#13;&#10;&#13;&#10;* fix typo&#13;&#10;&#13;&#10;* Adds HardwareSerial to Peripheral Manager Arduino 3.0.0 (#8328)&#13;&#10;&#13;&#10;* Do not limit ETHERNET in periman to only ESP32. SPI is also an option&#13;&#10;&#13;&#10;* Initial support for ESP32-C6 (#8337)&#13;&#10;&#13;&#10;* Add checks for SOC defines (#8351)&#13;&#10;&#13;&#10;* Add checks for SOC defines&#13;&#10;&#13;&#10;* Add SoC checks to BLE library&#13;&#10;&#13;&#10;* fix i2c compilation error&#13;&#10;&#13;&#10;* fix wrong placement of include&#13;&#10;&#13;&#10;* add check to SPI library&#13;&#10;&#13;&#10;* add check to USB library&#13;&#10;&#13;&#10;* add checks to Wire library&#13;&#10;&#13;&#10;* Feature/esp32h2 support (#8373)&#13;&#10;&#13;&#10;* Initial support for ESP32H2&#13;&#10;&#13;&#10;* Additional changes for ESP32H2&#13;&#10;&#13;&#10;* Update libs for ESP32H2&#13;&#10;&#13;&#10;* Fix flashing on ESP32-H2&#13;&#10;&#13;&#10;* Fix GPIO Configs for ESP32-C6 and ESP32-H2&#13;&#10;&#13;&#10;* Update Timer test sketch&#13;&#10;&#13;&#10;* Fix upload flash parameters&#13;&#10;&#13;&#10;* Use ets_write_char_uart instead of ets_printf in log_printfv&#13;&#10;&#13;&#10;* Print full chip report when log level is sufficient (#8282)&#13;&#10;&#13;&#10;* ESP32-C3 does not have ets_write_char_uart&#13;&#10;&#13;&#10;* Fix BLE gap event name&#13;&#10;&#13;&#10;* HW Testing - Pytest update (#8389)&#13;&#10;&#13;&#10;* update tests requirements&#13;&#10;&#13;&#10;* remove already handled components&#13;&#10;&#13;&#10;* Update version of pytest&#13;&#10;&#13;&#10;* Add missing ESP32-H2 to hil.yml&#13;&#10;&#13;&#10;* Updated FreeRTOS names (#8418)&#13;&#10;&#13;&#10;* HW Testing -  ESP32-C6 + ESP32-H2 fixes (#8404)&#13;&#10;&#13;&#10;* add C6/H2 to tests cfg.json&#13;&#10;&#13;&#10;* remove ,&#13;&#10;&#13;&#10;* workflow runs-on runner by matrix&#13;&#10;&#13;&#10;* Add need for arduino tag to select runner&#13;&#10;&#13;&#10;* Add cryptography to requirements.txt&#13;&#10;&#13;&#10;* Removed duplicate TX1 define for H2 (#8402)&#13;&#10;&#13;&#10;* Fix broken examples&#13;&#10;&#13;&#10;* Fixes RMT filter &amp; idle timing and setup (#8359)&#13;&#10;&#13;&#10;* Fixes Filter and Idle parameter to uint32&#13;&#10;&#13;&#10;* Fixes Filter and Idle setup&#13;&#10;&#13;&#10;* Fixes it to 5.1Libs branch&#13;&#10;&#13;&#10;* fix RMT CLK source and Filter API&#13;&#10;&#13;&#10;* fixes missing ;&#13;&#10;&#13;&#10;* fixes missing ;&#13;&#10;&#13;&#10;* fixes RMT example&#13;&#10;&#13;&#10;* IDF release/v5.1 a7b62bbcaf (#8438)&#13;&#10;&#13;&#10;* Add workflow to build executables from python scripts (#8290)&#13;&#10;&#13;&#10;* Add workflow to build executables from python scripts&#13;&#10;&#13;&#10;* Push binary to tools&#13;&#10;&#13;&#10;* Enable executable signing on Windows&#13;&#10;&#13;&#10;* Update get.py&#13;&#10;&#13;&#10;* Push binary to tools&#13;&#10;&#13;&#10;* Try with multiple files&#13;&#10;&#13;&#10;* Try more actions&#13;&#10;&#13;&#10;* Try powershell&#13;&#10;&#13;&#10;* Restore tools so they do not get rebuilt&#13;&#10;&#13;&#10;* Finalize scripts&#13;&#10;&#13;&#10;* Push binary to tools&#13;&#10;&#13;&#10;* App rollback should be after PSRAM is initialized&#13;&#10;&#13;&#10;* Correcting RX1 to GPIO4 and TX1 to GPIO5 to be consistent with documentation. Previous pin use works but is inconsistent with C6 docs.&#13;&#10;&#13;&#10;* Fixes Memory Leak (#8486)&#13;&#10;&#13;&#10;* fixes preprocessor test (#8485)&#13;&#10;&#13;&#10;* fixes preprocessor test&#13;&#10;&#13;&#10;When using `#define USE_SOFT_AP` &#13;&#10;Change&#13;&#10;`&amp;&amp; not USE_SOFT_AP` ==&gt; `&amp;&amp; !defined(USE_SOFT_AP)`&#13;&#10;&#13;&#10;* Adds any BLE capable device in WiFiProv.ino&#13;&#10;&#13;&#10;Removing ESP32 restriction for BLE Provisioning.&#13;&#10;&#13;&#10;* fix flash mode read out for C6&#13;&#10;&#13;&#10;* Add option for custom partitions without restrictions&#13;&#10;&#13;&#10;* SD_MMC update (#8298)&#13;&#10;&#13;&#10;* Updated SD_MMC lib and examples&#13;&#10;&#13;&#10;* Removed getter implementation and commented usage in examples&#13;&#10;&#13;&#10;* squashed updates&#13;&#10;&#13;&#10;* IDF release/v5.1 f0437b945f (#8599)&#13;&#10;&#13;&#10;* Update package_esp32_index.template.json&#13;&#10;&#13;&#10;* Fix printf format build error in BTAdvertisedDeviceSet.cpp&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Pedro Minatel &lt;pedro.minatel@espressif.com&gt;&#13;&#10;Co-authored-by: Rodrigo Garcia &lt;rodrigo.garcia@espressif.com&gt;&#13;&#10;Co-authored-by: Ha Thach &lt;thach@tinyusb.org&gt;&#13;&#10;Co-authored-by: Martin Turski &lt;quiret@vfemail.net&gt;&#13;&#10;Co-authored-by: raviypujar &lt;raviypujar@gmail.com&gt;&#13;&#10;Co-authored-by: Jason2866 &lt;24528715+Jason2866@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: Tomáš Pilný &lt;34927466+PilnyTomas@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: Jan Procházka &lt;90197375+P-R-O-C-H-Y@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: Daniel Berlin &lt;dberlin@dberlin.org&gt;&#13;&#10;Co-authored-by: Nima Askari (نیما عسکری) &lt;nimaltd@yahoo.com&gt;&#13;&#10;Co-authored-by: rtpmsys &lt;106180646+rtpmsys@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: bytiful &lt;55647551+bytiful@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: tmfarrington &lt;tmfarrington@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: Krzysiek S &lt;chris.streh@gmail.com&gt;&#13;&#10;Co-authored-by: surt &lt;carl.olsson@gmail.com&gt;&#13;&#10;Co-authored-by: Max Scheffler &lt;max.scheffler@pm.me&gt;&#13;&#10;Co-authored-by: Clemens Kirchgatterer &lt;clemens@1541.org&gt;&#13;&#10;Co-authored-by: Peter Pan's Techland &lt;twinkle-pirate@hotmail.com&gt;&#13;&#10;Co-authored-by: Roman &lt;programmeofficemilkyway@gmail.com&gt;&#13;&#10;Co-authored-by: Eistee &lt;Eistee82@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: David McCurley &lt;44048235+mrengineer7777@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: Gaya3N25 &lt;30388176+Gaya3N25@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: renebohne &lt;rene.bohne@gmail.com&gt;&#13;&#10;Co-authored-by: Olivér Remény &lt;25034625+remenyo@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: davidk88 &lt;david.kotar@gmail.com&gt;&#13;&#10;Co-authored-by: Vojtěch Bartoška &lt;76958047+VojtechBartoska@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: James Armstrong &lt;jamesarmstrong3@me.com&gt;&#13;&#10;Co-authored-by: Valerii Koval &lt;valeros@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: Peter G. Jensen &lt;root@petergjoel.dk&gt;" />
			<int key="additions" value="346" />
			<int key="deletions" value="0" />
			<string key="diff" value='@@ -0,0 +1,346 @@&#10;+#include "esp_heap_caps.h"&#10;+#include "esp_chip_info.h"&#10;+#include "esp_idf_version.h"&#10;+#include "esp_arduino_version.h"&#10;+#include "esp_rom_spiflash.h"&#10;+#include "esp_flash.h"&#10;+#include "esp_partition.h"&#10;+#include "esp_app_format.h"&#10;+#include "soc/efuse_reg.h"&#10;+#include "soc/rtc.h"&#10;+#include "soc/spi_reg.h"&#10;+#if CONFIG_IDF_TARGET_ESP32S2&#10;+#include "esp32s2/rom/spi_flash.h"&#10;+#endif&#10;+#include "esp_bit_defs.h"&#10;+&#10;+#include "Arduino.h"&#10;+#include "esp32-hal-periman.h"&#10;+&#10;+#define chip_report_printf log_printf&#10;+&#10;+#define printMemCapsInfo(caps) _printMemCapsInfo(MALLOC_CAP_##caps, #caps)&#10;+#define b2kb(b) ((float)b/1024.0)&#10;+#define b2mb(b) ((float)b/(1024.0*1024.0))&#10;+static void _printMemCapsInfo(uint32_t caps, const char * caps_str){&#10;+  multi_heap_info_t info;&#10;+  size_t total = heap_caps_get_total_size(caps);&#10;+  heap_caps_get_info(&amp;info, caps);&#10;+  chip_report_printf("%s Memory Info:\n", caps_str);&#10;+  chip_report_printf("------------------------------------------\n");&#10;+  chip_report_printf("  Total Size        : %8u B (%6.1f KB)\n", total, b2kb(total));&#10;+  chip_report_printf("  Free Bytes        : %8u B (%6.1f KB)\n", info.total_free_bytes, b2kb(info.total_free_bytes));&#10;+  chip_report_printf("  Allocated Bytes   : %8u B (%6.1f KB)\n", info.total_allocated_bytes, b2kb(info.total_allocated_bytes));&#10;+  chip_report_printf("  Minimum Free Bytes: %8u B (%6.1f KB)\n", info.minimum_free_bytes, b2kb(info.minimum_free_bytes));&#10;+  chip_report_printf("  Largest Free Block: %8u B (%6.1f KB)\n", info.largest_free_block, b2kb(info.largest_free_block));&#10;+}&#10;+&#10;+static void printPkgVersion(void){&#10;+  chip_report_printf("  Package           : ");&#10;+#if CONFIG_IDF_TARGET_ESP32&#10;+  uint32_t pkg_ver = REG_GET_FIELD(EFUSE_BLK0_RDATA3_REG, EFUSE_RD_CHIP_PACKAGE);&#10;+  switch(pkg_ver){&#10;+    case EFUSE_RD_CHIP_VER_PKG_ESP32D0WDR2V3: chip_report_printf("D0WD-R2-V3"); break;&#10;+    case EFUSE_RD_CHIP_VER_PKG_ESP32D0WDQ6  : chip_report_printf("D0WD-Q6"); break;&#10;+    case EFUSE_RD_CHIP_VER_PKG_ESP32D0WDQ5  : chip_report_printf("D0WD-Q5"); break;&#10;+    case EFUSE_RD_CHIP_VER_PKG_ESP32D2WDQ5  : chip_report_printf("D2WD-Q5"); break;&#10;+    case EFUSE_RD_CHIP_VER_PKG_ESP32U4WDH   : chip_report_printf("U4WD-H"); break;&#10;+    case EFUSE_RD_CHIP_VER_PKG_ESP32PICOD4  : chip_report_printf("PICO-D4"); break;&#10;+    case EFUSE_RD_CHIP_VER_PKG_ESP32PICOV302: chip_report_printf("PICO-V3-02"); break;&#10;+  }&#10;+#elif CONFIG_IDF_TARGET_ESP32S2&#10;+  uint32_t pkg_ver = REG_GET_FIELD(EFUSE_RD_MAC_SPI_SYS_3_REG, EFUSE_PKG_VERSION);&#10;+  switch (pkg_ver) {&#10;+    case 1: chip_report_printf("FH16"); break;&#10;+    case 2: chip_report_printf("FH32"); break;&#10;+    default: chip_report_printf("%lu", pkg_ver); break;&#10;+  }&#10;+#elif CONFIG_IDF_TARGET_ESP32S3 || CONFIG_IDF_TARGET_ESP32C3 || CONFIG_IDF_TARGET_ESP32C6&#10;+  uint32_t pkg_ver = REG_GET_FIELD(EFUSE_RD_MAC_SPI_SYS_3_REG, EFUSE_PKG_VERSION);&#10;+  chip_report_printf("%lu", pkg_ver);&#10;+#elif CONFIG_IDF_TARGET_ESP32C2&#10;+  uint32_t pkg_ver = REG_GET_FIELD(EFUSE_RD_BLK2_DATA1_REG, EFUSE_PKG_VERSION);&#10;+  chip_report_printf("%lu", pkg_ver);&#10;+#elif CONFIG_IDF_TARGET_ESP32H2&#10;+  uint32_t pkg_ver = REG_GET_FIELD(EFUSE_RD_MAC_SYS_4_REG, EFUSE_PKG_VERSION);&#10;+  chip_report_printf("%lu", pkg_ver);&#10;+#else&#10;+  chip_report_printf("Unknown");&#10;+#endif&#10;+  chip_report_printf("\n");&#10;+}&#10;+&#10;+static void printChipInfo(void){&#10;+  esp_chip_info_t info;&#10;+  esp_chip_info(&amp;info);&#10;+  chip_report_printf("Chip Info:\n");&#10;+  chip_report_printf("------------------------------------------\n");&#10;+  chip_report_printf("  Model             : ");&#10;+  switch(info.model){&#10;+    case CHIP_ESP32: chip_report_printf("ESP32\n"); break;&#10;+    case CHIP_ESP32S2: chip_report_printf("ESP32-S2\n"); break;&#10;+    case CHIP_ESP32S3: chip_report_printf("ESP32-S3\n"); break;&#10;+    case CHIP_ESP32C2: chip_report_printf("ESP32-C2\n"); break;&#10;+    case CHIP_ESP32C3: chip_report_printf("ESP32-C3\n"); break;&#10;+    case CHIP_ESP32C6: chip_report_printf("ESP32-C6\n"); break;&#10;+    case CHIP_ESP32H2: chip_report_printf("ESP32-H2\n"); break;&#10;+    default: chip_report_printf("Unknown %d\n", info.model); break;&#10;+  }&#10;+  printPkgVersion();&#10;+  chip_report_printf("  Revision          : ");&#10;+  if(info.revision &gt; 0xFF){&#10;+    chip_report_printf("%d.%d\n", info.revision &gt;&gt; 8, info.revision &amp; 0xFF);&#10;+  } else {&#10;+    chip_report_printf("%d\n", info.revision);&#10;+  }&#10;+  chip_report_printf("  Cores             : %d\n", info.cores);&#10;+  rtc_cpu_freq_config_t conf;&#10;+  rtc_clk_cpu_freq_get_config(&amp;conf);&#10;+  chip_report_printf("  Frequency         : %lu MHz\n", conf.freq_mhz);&#10;+  chip_report_printf("  Embedded Flash    : %s\n", (info.features &amp; CHIP_FEATURE_EMB_FLASH)?"Yes":"No");&#10;+  chip_report_printf("  Embedded PSRAM    : %s\n", (info.features &amp; CHIP_FEATURE_EMB_PSRAM)?"Yes":"No");&#10;+  chip_report_printf("  2.4GHz WiFi       : %s\n", (info.features &amp; CHIP_FEATURE_WIFI_BGN)?"Yes":"No");&#10;+  chip_report_printf("  Classic BT        : %s\n", (info.features &amp; CHIP_FEATURE_BT)?"Yes":"No");&#10;+  chip_report_printf("  BT Low Energy     : %s\n", (info.features &amp; CHIP_FEATURE_BLE)?"Yes":"No");&#10;+  chip_report_printf("  IEEE 802.15.4     : %s\n", (info.features &amp; CHIP_FEATURE_IEEE802154)?"Yes":"No");&#10;+}&#10;+&#10;+static void printFlashInfo(void){&#10;+#if CONFIG_IDF_TARGET_ESP32 || CONFIG_IDF_TARGET_ESP32S2&#10;+  #define ESP_FLASH_IMAGE_BASE 0x1000&#10;+#else&#10;+  #define ESP_FLASH_IMAGE_BASE 0x0000&#10;+#endif&#10;+// REG_SPI_BASE is not defined for S3/C3 ??&#10;+#if CONFIG_IDF_TARGET_ESP32S3 || CONFIG_IDF_TARGET_ESP32C3&#10;+  #ifndef REG_SPI_BASE&#10;+  #define REG_SPI_BASE(i)     (DR_REG_SPI1_BASE + (((i)&gt;1) ? (((i)* 0x1000) + 0x20000) : (((~(i)) &amp; 1)* 0x1000 )))&#10;+  #endif // REG_SPI_BASE&#10;+#endif // TARGET&#10;+&#10;+  chip_report_printf("Flash Info:\n");&#10;+  chip_report_printf("------------------------------------------\n");&#10;+  uint32_t hw_size = 1 &lt;&lt; (g_rom_flashchip.device_id &amp; 0xFF);&#10;+  chip_report_printf("  Chip Size         : %8lu B (%.0f MB)\n", hw_size, b2mb(hw_size));&#10;+  chip_report_printf("  Block Size        : %8lu B (%6.1f KB)\n", g_rom_flashchip.block_size, b2kb(g_rom_flashchip.block_size));&#10;+  chip_report_printf("  Sector Size       : %8lu B (%6.1f KB)\n", g_rom_flashchip.sector_size, b2kb(g_rom_flashchip.sector_size));&#10;+  chip_report_printf("  Page Size         : %8lu B (%6.1f KB)\n", g_rom_flashchip.page_size, b2kb(g_rom_flashchip.page_size));&#10;+  esp_image_header_t fhdr;&#10;+  esp_flash_read(esp_flash_default_chip, (void*)&amp;fhdr, ESP_FLASH_IMAGE_BASE, sizeof(esp_image_header_t));&#10;+  if(fhdr.magic == ESP_IMAGE_HEADER_MAGIC) {&#10;+    uint32_t f_freq = 0;&#10;+    switch(fhdr.spi_speed) {&#10;+#if CONFIG_IDF_TARGET_ESP32H2&#10;+      case 0x0: f_freq = 32; break;&#10;+      case 0x2: f_freq = 16; break;&#10;+      case 0xf: f_freq = 64; break;&#10;+#else&#10;+      case 0x0: f_freq = 40; break;&#10;+      case 0x1: f_freq = 26; break;&#10;+      case 0x2: f_freq = 20; break;&#10;+      case 0xf: f_freq = 80; break;&#10;+#endif&#10;+      default: f_freq = fhdr.spi_speed; break;&#10;+    }&#10;+    chip_report_printf("  Bus Speed         : %lu MHz\n", f_freq);&#10;+  }&#10;+  chip_report_printf("  Bus Mode          : ");&#10;+#if CONFIG_ESPTOOLPY_OCT_FLASH&#10;+  chip_report_printf("OPI\n");&#10;+#elif CONFIG_ESPTOOLPY_FLASHMODE_QIO&#10;+  chip_report_printf("QIO\n");&#10;+#elif CONFIG_ESPTOOLPY_FLASHMODE_QOUT&#10;+  chip_report_printf("QOUT\n");&#10;+#elif CONFIG_ESPTOOLPY_FLASHMODE_DIO&#10;+  chip_report_printf("DIO\n");&#10;+#elif CONFIG_ESPTOOLPY_FLASHMODE_DOUT&#10;+  chip_report_printf("DOUT\n");&#10;+#endif &#10;+}&#10;+&#10;+static void printPartitionsInfo(void){&#10;+  chip_report_printf("Partitions Info:\n");&#10;+  chip_report_printf("------------------------------------------\n");&#10;+  esp_partition_iterator_t iterator = esp_partition_find(ESP_PARTITION_TYPE_ANY, ESP_PARTITION_SUBTYPE_ANY, NULL);&#10;+  if(iterator != NULL){&#10;+    esp_partition_iterator_t it = iterator;&#10;+    while(it != NULL){&#10;+      const esp_partition_t* partition = esp_partition_get(it);&#10;+      if(partition){&#10;+        chip_report_printf("  %17s : addr: 0x%08X, size: %7.1f KB", partition-&gt;label, partition-&gt;address, b2kb(partition-&gt;size));&#10;+        if(partition-&gt;type == ESP_PARTITION_TYPE_APP){&#10;+          chip_report_printf(", type:  APP");&#10;+          if(partition-&gt;subtype == 0){&#10;+            chip_report_printf(", subtype: FACTORY");&#10;+          } else if(partition-&gt;subtype &gt;= 0x10 &amp;&amp; partition-&gt;subtype &lt; 0x20){&#10;+            chip_report_printf(", subtype: OTA_%lu", partition-&gt;subtype - 0x10);&#10;+          } else if(partition-&gt;subtype == 0x20){&#10;+            chip_report_printf(", subtype: TEST");&#10;+          } else {&#10;+            chip_report_printf(", subtype: 0x%02X", partition-&gt;subtype);&#10;+          }&#10;+        } else {&#10;+          chip_report_printf(", type: DATA");&#10;+          chip_report_printf(", subtype: ");&#10;+          switch(partition-&gt;subtype){&#10;+            case ESP_PARTITION_SUBTYPE_DATA_OTA: chip_report_printf("OTA"); break;&#10;+            case ESP_PARTITION_SUBTYPE_DATA_PHY: chip_report_printf("PHY"); break;&#10;+            case ESP_PARTITION_SUBTYPE_DATA_NVS: chip_report_printf("NVS"); break;&#10;+            case ESP_PARTITION_SUBTYPE_DATA_COREDUMP: chip_report_printf("COREDUMP"); break;&#10;+            case ESP_PARTITION_SUBTYPE_DATA_NVS_KEYS: chip_report_printf("NVS_KEYS"); break;&#10;+            case ESP_PARTITION_SUBTYPE_DATA_EFUSE_EM: chip_report_printf("EFUSE_EM"); break;&#10;+            case ESP_PARTITION_SUBTYPE_DATA_UNDEFINED: chip_report_printf("UNDEFINED"); break;&#10;+            case ESP_PARTITION_SUBTYPE_DATA_ESPHTTPD: chip_report_printf("ESPHTTPD"); break;&#10;+            case ESP_PARTITION_SUBTYPE_DATA_FAT: chip_report_printf("FAT"); break;&#10;+            case ESP_PARTITION_SUBTYPE_DATA_SPIFFS: chip_report_printf("SPIFFS"); break;&#10;+            default: chip_report_printf("0x%02X", partition-&gt;subtype); break;&#10;+          }&#10;+        }&#10;+        chip_report_printf("\n");&#10;+      }&#10;+      it = esp_partition_next(it);&#10;+    }&#10;+    //esp_partition_iterator_release(iterator);&#10;+  }&#10;+}&#10;+&#10;+static void printSoftwareInfo(void){&#10;+  chip_report_printf("Software Info:\n");&#10;+  chip_report_printf("------------------------------------------\n");&#10;+  chip_report_printf("  Compile Date/Time : %s %s\n", __DATE__, __TIME__);&#10;+#ifdef ARDUINO_HOST_OS&#10;+  chip_report_printf("  Compile Host OS   : %s\n", ARDUINO_HOST_OS);&#10;+#endif&#10;+  chip_report_printf("  ESP-IDF Version   : %s\n", esp_get_idf_version());&#10;+  chip_report_printf("  Arduino Version   : %s\n", ESP_ARDUINO_VERSION_STR);&#10;+}&#10;+&#10;+static void printBoardInfo(void){&#10;+  chip_report_printf("Board Info:\n");&#10;+  chip_report_printf("------------------------------------------\n");&#10;+  chip_report_printf("  Arduino Board     : %s\n", ARDUINO_BOARD);&#10;+  chip_report_printf("  Arduino Variant   : %s\n", ARDUINO_VARIANT);&#10;+#ifdef ARDUINO_FQBN&#10;+  chip_report_printf("  Arduino FQBN      : %s\n", ARDUINO_FQBN);&#10;+#else&#10;+#ifdef CORE_DEBUG_LEVEL&#10;+  chip_report_printf("  Core Debug Level  : %d\n", CORE_DEBUG_LEVEL);&#10;+#endif&#10;+#ifdef ARDUINO_RUNNING_CORE&#10;+  chip_report_printf("  Arduino Runs Core : %d\n", ARDUINO_RUNNING_CORE);&#10;+  chip_report_printf("  Arduino Events on : %d\n", ARDUINO_EVENT_RUNNING_CORE);&#10;+#endif&#10;+#ifdef ARDUINO_USB_MODE&#10;+  chip_report_printf("  Arduino USB Mode  : %d\n", ARDUINO_USB_MODE);&#10;+#endif&#10;+#ifdef ARDUINO_USB_CDC_ON_BOOT&#10;+  chip_report_printf("  CDC On Boot       : %d\n", ARDUINO_USB_CDC_ON_BOOT);&#10;+#endif&#10;+#endif /* ARDUINO_FQBN */&#10;+}&#10;+&#10;+static void printPerimanInfo(void){&#10;+  chip_report_printf("GPIO Info:\n");&#10;+  chip_report_printf("------------------------------------------\n");&#10;+  for(uint8_t i = 0; i &lt; SOC_GPIO_PIN_COUNT; i++){&#10;+    if(!perimanPinIsValid(i)){&#10;+      continue;//invalid pin&#10;+    }&#10;+    peripheral_bus_type_t type = perimanGetPinBusType(i);&#10;+    if(type == ESP32_BUS_TYPE_INIT){&#10;+      continue;//unused pin&#10;+    }&#10;+    chip_report_printf("  %17u : ", i);&#10;+    switch(type){&#10;+      case ESP32_BUS_TYPE_GPIO: chip_report_printf("GPIO\n"); break;&#10;+      case ESP32_BUS_TYPE_UART: chip_report_printf("UART\n"); break;&#10;+#if SOC_SDM_SUPPORTED&#10;+      case ESP32_BUS_TYPE_SIGMADELTA: chip_report_printf("SIGMADELTA\n"); break;&#10;+#endif&#10;+#if SOC_ADC_SUPPORTED&#10;+      case ESP32_BUS_TYPE_ADC_ONESHOT: chip_report_printf("ADC_ONESHOT\n"); break;&#10;+      case ESP32_BUS_TYPE_ADC_CONT: chip_report_printf("ADC_CONT\n"); break;&#10;+#endif&#10;+#if SOC_DAC_SUPPORTED&#10;+      case ESP32_BUS_TYPE_DAC_ONESHOT: chip_report_printf("DAC_ONESHOT\n"); break;&#10;+      case ESP32_BUS_TYPE_DAC_CONT: chip_report_printf("DAC_CONT\n"); break;&#10;+      case ESP32_BUS_TYPE_DAC_COSINE: chip_report_printf("DAC_COSINE\n"); break;&#10;+#endif&#10;+#if SOC_LEDC_SUPPORTED&#10;+      case ESP32_BUS_TYPE_LEDC: chip_report_printf("LEDC\n"); break;&#10;+#endif&#10;+#if SOC_RMT_SUPPORTED&#10;+      case ESP32_BUS_TYPE_RMT_TX: chip_report_printf("RMT_TX\n"); break;&#10;+      case ESP32_BUS_TYPE_RMT_RX: chip_report_printf("RMT_RX\n"); break;&#10;+#endif&#10;+#if SOC_I2S_SUPPORTED&#10;+      case ESP32_BUS_TYPE_I2S_STD: chip_report_printf("I2S_STD\n"); break;&#10;+      case ESP32_BUS_TYPE_I2S_PDM: chip_report_printf("I2S_PDM\n"); break;&#10;+      case ESP32_BUS_TYPE_I2S_TDM: chip_report_printf("I2S_TDM\n"); break;&#10;+#endif&#10;+#if SOC_I2C_SUPPORTED&#10;+      case ESP32_BUS_TYPE_I2C_MASTER: chip_report_printf("I2C_MASTER\n"); break;&#10;+      case ESP32_BUS_TYPE_I2C_SLAVE: chip_report_printf("I2C_SLAVE\n"); break;&#10;+#endif&#10;+#if SOC_GPSPI_SUPPORTED&#10;+      case ESP32_BUS_TYPE_SPI_MASTER: chip_report_printf("SPI_MASTER\n"); break;&#10;+#endif&#10;+#if SOC_SDMMC_HOST_SUPPORTED&#10;+      case ESP32_BUS_TYPE_SDMMC: chip_report_printf("SDMMC\n"); break;&#10;+#endif&#10;+#if SOC_TOUCH_SENSOR_SUPPORTED&#10;+      case ESP32_BUS_TYPE_TOUCH: chip_report_printf("TOUCH\n"); break;&#10;+#endif&#10;+#if SOC_USB_SERIAL_JTAG_SUPPORTED || SOC_USB_OTG_SUPPORTED&#10;+      case ESP32_BUS_TYPE_USB: chip_report_printf("USB\n"); break;&#10;+#endif&#10;+      default: chip_report_printf("%d\n", type); break;&#10;+    }&#10;+  }&#10;+}&#10;+&#10;+void printBeforeSetupInfo(void){&#10;+#if ARDUINO_USB_CDC_ON_BOOT&#10;+  Serial.begin(0);&#10;+  Serial.setDebugOutput(true);&#10;+  uint8_t t = 0;&#10;+  while(!Serial &amp;&amp; (t++ &lt; 200)) delay(10); //wait up to 2 seconds for the IDE to connect&#10;+#endif&#10;+  chip_report_printf("=========== Before Setup Start ===========\n");&#10;+  printChipInfo();&#10;+  chip_report_printf("------------------------------------------\n");&#10;+  printMemCapsInfo(INTERNAL);&#10;+  chip_report_printf("------------------------------------------\n");&#10;+  if(psramFound()){&#10;+    printMemCapsInfo(SPIRAM);&#10;+    chip_report_printf("  Bus Mode          : ");&#10;+#if CONFIG_SPIRAM_MODE_OCT&#10;+    chip_report_printf("OPI\n");&#10;+#else&#10;+    chip_report_printf("QSPI\n");&#10;+#endif&#10;+    chip_report_printf("------------------------------------------\n");&#10;+  }&#10;+  printFlashInfo();&#10;+  chip_report_printf("------------------------------------------\n");&#10;+  printPartitionsInfo();&#10;+  chip_report_printf("------------------------------------------\n");&#10;+  printSoftwareInfo();&#10;+  chip_report_printf("------------------------------------------\n");&#10;+  printBoardInfo();&#10;+  chip_report_printf("============ Before Setup End ============\n");&#10;+  delay(100); //allow the print to finish&#10;+}&#10;+&#10;+void printAfterSetupInfo(void){&#10;+  chip_report_printf("=========== After Setup Start ============\n");&#10;+  printMemCapsInfo(INTERNAL);&#10;+  chip_report_printf("------------------------------------------\n");&#10;+  if(psramFound()){&#10;+    printMemCapsInfo(SPIRAM);&#10;+    chip_report_printf("------------------------------------------\n");&#10;+  }&#10;+  printPerimanInfo();&#10;+  chip_report_printf("============ After Setup End =============\n");&#10;+  delay(20); //allow the print to finish&#10;+}&#10;' />
			<string key="comment_change" value="True" />
		</event>
	</trace>
	<trace>
		<string key="file" value="chip-debug-report.h" />
	</trace>
	<trace>
		<string key="file" value="esp32-hal-adc.c" />
	</trace>
	<trace>
		<string key="file" value="esp32-hal-adc.h" />
	</trace>
	<trace>
		<string key="file" value="esp32-hal-bt.c" />
	</trace>
	<trace>
		<string key="file" value="esp32-hal-bt.h" />
	</trace>
	<trace>
		<string key="file" value="esp32-hal-cpu.c" />
	</trace>
	<trace>
		<string key="file" value="esp32-hal-dac.c" />
	</trace>
	<trace>
		<string key="file" value="esp32-hal-dac.h" />
	</trace>
	<trace>
		<string key="file" value="esp32-hal-gpio.c" />
	</trace>
	<trace>
		<string key="file" value="esp32-hal-i2c-slave.c" />
	</trace>
	<trace>
		<string key="file" value="esp32-hal-i2c-slave.h" />
	</trace>
	<trace>
		<string key="file" value="esp32-hal-i2c.c" />
	</trace>
	<trace>
		<string key="file" value="esp32-hal-i2c.h" />
	</trace>
	<trace>
		<string key="file" value="esp32-hal-ledc.c" />
	</trace>
	<trace>
		<string key="file" value="esp32-hal-ledc.h" />
	</trace>
	<trace>
		<string key="file" value="esp32-hal-log.h" />
	</trace>
	<trace>
		<string key="file" value="esp32-hal-matrix.c" />
	</trace>
	<trace>
		<string key="file" value="esp32-hal-misc.c" />
	</trace>
	<trace>
		<string key="file" value="esp32-hal-periman.c" />
	</trace>
	<trace>
		<string key="file" value="esp32-hal-periman.h" />
	</trace>
	<trace>
		<string key="file" value="esp32-hal-psram.c" />
	</trace>
	<trace>
		<string key="file" value="esp32-hal-rgb-led.c" />
	</trace>
	<trace>
		<string key="file" value="esp32-hal-rmt.h" />
	</trace>
	<trace>
		<string key="file" value="esp32-hal-sigmadelta.c" />
	</trace>
	<trace>
		<string key="file" value="esp32-hal-sigmadelta.h" />
	</trace>
	<trace>
		<string key="file" value="esp32-hal-spi.h" />
	</trace>
	<trace>
		<string key="file" value="esp32-hal-timer.h" />
	</trace>
	<trace>
		<string key="file" value="esp32-hal-tinyusb.c" />
	</trace>
	<trace>
		<string key="file" value="esp32-hal-tinyusb.h" />
	</trace>
	<trace>
		<string key="file" value="esp32-hal-touch.c" />
	</trace>
	<trace>
		<string key="file" value="esp32-hal-touch.h" />
	</trace>
	<trace>
		<string key="file" value="esp32-hal.h" />
	</trace>
	<trace>
		<string key="file" value="esp_arduino_version.h" />
	</trace>
	<trace>
		<string key="file" value="main.cpp" />
	</trace>
	<trace>
		<string key="file" value="wiring_pulse.c" />
	</trace>
	<trace>
		<string key="file" value="adc.rst" />
	</trace>
	<trace>
		<string key="file" value="hall_sensor.rst" />
	</trace>
	<trace>
		<string key="file" value="ledc.rst" />
	</trace>
	<trace>
		<string key="file" value="timer.rst" />
	</trace>
	<trace>
		<string key="file" value="idf_component.yml" />
	</trace>
	<trace>
		<string key="file" value=".skip.esp32h2" />
	</trace>
	<trace>
		<string key="file" value="ArduinoOTA.cpp" />
	</trace>
	<trace>
		<string key="file" value="AsyncUDP.cpp" />
	</trace>
	<trace>
		<string key="file" value="AsyncUDP.h" />
	</trace>
	<trace>
		<string key="file" value="BLE5_extended_scan.ino" />
	</trace>
	<trace>
		<string key="file" value="BLE5_multi_advertising.ino" />
	</trace>
	<trace>
		<string key="file" value="BLE5_periodic_advertising.ino" />
	</trace>
	<trace>
		<string key="file" value="BLE5_periodic_sync.ino" />
	</trace>
	<trace>
		<string key="file" value="BLE_EddystoneURL_Beacon.ino" />
	</trace>
	<trace>
		<string key="file" value="BLE2902.cpp" />
	</trace>
	<trace>
		<string key="file" value="BLE2902.h" />
	</trace>
	<trace>
		<string key="file" value="BLE2904.cpp" />
	</trace>
	<trace>
		<string key="file" value="BLE2904.h" />
	</trace>
	<trace>
		<string key="file" value="BLEAddress.cpp" />
	</trace>
	<trace>
		<string key="file" value="BLEAddress.h" />
	</trace>
	<trace>
		<string key="file" value="BLEAdvertisedDevice.h" />
	</trace>
	<trace>
		<string key="file" value="BLEAdvertising.cpp" />
		<event>
			<string key="timestamp" value="2023-10-05T14:54:25+03:00" />
			<string key="author" value="Me No Dev" />
			<string key="change_type" value="MODIFY" />
			<string key="commit_message" value="ESP-IDF v5.1 (#7733)&#10;&#10;* Initial changes to compile under ESP-IDF v5.1&#13;&#10;&#13;&#10;* Initial import for ESP-IDF v5.1 libs&#13;&#10;&#13;&#10;* Update toolchain&#13;&#10;&#13;&#10;* Update esp32-hal-psram.c&#13;&#10;&#13;&#10;* Add missing LDs&#13;&#10;&#13;&#10;* Update platform.txt&#13;&#10;&#13;&#10;* Stop some CI jobs, because they will always fail&#13;&#10;&#13;&#10;* Fix examples&#13;&#10;&#13;&#10;* Update app_httpd.cpp&#13;&#10;&#13;&#10;* Update ResetReason.ino&#13;&#10;&#13;&#10;* Warnings fixes&#13;&#10;&#13;&#10;* Added the example guideline and template (#7665)&#13;&#10;&#13;&#10;* Added the example guideline and template&#13;&#10;&#13;&#10;* PR review changes with some typos and grammar fixes&#13;&#10;&#13;&#10;* Changes according to the PR review&#13;&#10;&#13;&#10;* Added ESP32-S3 link to the datasheet (#7738)&#13;&#10;&#13;&#10;* Update HiFreq_ADC.ino&#13;&#10;&#13;&#10;* Replace periph_ctrl.h use because of deprecation&#13;&#10;&#13;&#10;* Replace esp_spi_flash.h use because of deprecation&#13;&#10;&#13;&#10;* Add includes to male mDNS::enableWorkstation compile&#13;&#10;&#13;&#10;* Fix ssl_client mbedtls_pk_parse_key callback&#13;&#10;&#13;&#10;* Update temperature sensor driver&#13;&#10;&#13;&#10;* Allow sketch_utils to compile with arduino-cli&#13;&#10;&#13;&#10;* Run CI with arduino-cli&#13;&#10;&#13;&#10;* Fix arduino-cli CI build on Windows&#13;&#10;&#13;&#10;* Refactor platform.txt to not use components installed through the board manager when running from git&#13;&#10;&#13;&#10;* Initial Peripheral Manager Implementation&#13;&#10;&#13;&#10;* Update SigmaDelta driver to use the new ESP-IDF driver API&#13;&#10;&#13;&#10;* Small improvements to peripheral manager and SigmaDelta&#13;&#10;&#13;&#10;* Remove deleted function from SigmaDelta header&#13;&#10;&#13;&#10;* Update DAC driver to use the new ESP-IDF driver API&#13;&#10;&#13;&#10;* Adds softAp(String) to make it compatible with ESP8266 (#7801)&#13;&#10;&#13;&#10;* Fix commentary (#7800)&#13;&#10;&#13;&#10;Minor fix based on observation done in https://github.com/espressif/arduino-esp32/issues/7795#issuecomment-1416868611&#13;&#10;&#13;&#10;* add adafruit new board feather esp32s2 reserve tft (#7794)&#13;&#10;&#13;&#10;* bugfix: add &lt;stdint.h&gt; for uint8_t to avoid compilation failure (GCC 11.2.0) (#7744)&#13;&#10;&#13;&#10;* Adding 3rd party boards for VALTRACK-V4-VTS-ESP32-C3 &amp; VALTRACK-V4-MFW-ESP32-C3 (#7735)&#13;&#10;&#13;&#10;* Added VALTRACK-V4-VTS-ESP32-C3 board definition&#13;&#10;&#13;&#10;Created pins_arduino.h &amp; made changes to boards.txt with necessary changes&#13;&#10;&#13;&#10;* Modified the URL&#13;&#10;&#13;&#10;* Renamed json&#13;&#10;&#13;&#10;* renamed all auRL&#13;&#10;&#13;&#10;* Adding VALTRACK-V4 series board definitions&#13;&#10;&#13;&#10;Added VALTRACK-V4-VTS-ESP32C3 &amp; VALTRACK-V4-MFW-ESP32-C3 board variants&#13;&#10;&#13;&#10;* Adding VALTRACK-V4 series board definitions&#13;&#10;&#13;&#10;Added VALTRACK-V4-VTS-ESP32C3 &amp; VALTRACK-V4-MFW-ESP32-C3 board variants&#13;&#10;&#13;&#10;* Reverted package_esp32_index.template.json&#13;&#10;&#13;&#10;restored package_esp32_index.template.json from edits&#13;&#10;&#13;&#10;* Reverted package_esp32_index.template.json&#13;&#10;&#13;&#10;Added new line to package_esp32_index.template.json&#13;&#10;&#13;&#10;* Update Platformio CI (#7725)&#13;&#10;&#13;&#10;* WiFiClient example fix (#7711)&#13;&#10;&#13;&#10;* Modified WiFiClient example to use thingspeak instead of non-functionig sparkfun&#13;&#10;&#13;&#10;* Moved instructions to README&#13;&#10;&#13;&#10;* Fixed spelling&#13;&#10;&#13;&#10;* Added link to S3 datasheet&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Jan Procházka &lt;90197375+P-R-O-C-H-Y@users.noreply.github.com&gt;&#13;&#10;&#13;&#10;* Mirror update from Heltec repository (#7709)&#13;&#10;&#13;&#10;Heltec updated the I2C pins in https://github.com/Heltec-Aaron-Lee/WiFi_Kit_series/commit/b10f4bf85d13fd01be80dcdb0eb59e6a8c8ba19a&#13;&#10;&#13;&#10;* Fixes BLE data printing (#7699)&#13;&#10;&#13;&#10;* Fixes BLE data printing&#13;&#10;&#13;&#10;BLE data has no '\0' terminator, therefore it can't be printed as a regular C string.&#13;&#10;This fix just prints the BLE data based on its length.&#13;&#10;&#13;&#10;* Simplify printing to a single call&#13;&#10;&#13;&#10;* split menu options + lora_32_V3 fix (#7697)&#13;&#10;&#13;&#10;* Change header gaurd name (#7696)&#13;&#10;&#13;&#10;* Fix Name (#7691)&#13;&#10;&#13;&#10;Wrong name in definitions.&#13;&#10;&#13;&#10;* Fix error in WiFiClient.cpp where the connect function fails for timeouts below 1 second (#7686)&#13;&#10;&#13;&#10;* Update WiFiClient.cpp&#13;&#10;&#13;&#10;This change will allow specifying connect timeouts below 1 second. Without this change, if connect timeouts under 1 second are given, the connect defaults to 0ms and fails. &#13;&#10;This will also allow timeouts in fractions of seconds, e.g. 1500ms. Without this change, connect timeouts are truncated to full second increments.&#13;&#10;&#13;&#10;* Make parameter timeout_ms clear&#13;&#10;&#13;&#10;* Change connection timeout_ms name for clarity&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Rodrigo Garcia &lt;rodrigo.garcia@espressif.com&gt;&#13;&#10;&#13;&#10;* fixed the function header (#7674)&#13;&#10;&#13;&#10;* fixed the function header&#13;&#10;&#13;&#10;* fixed function name and paramaters&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Jan Procházka &lt;90197375+P-R-O-C-H-Y@users.noreply.github.com&gt;&#13;&#10;&#13;&#10;* Ticker fix solving #6155 (#7664)&#13;&#10;&#13;&#10;* Wrapped Ticker functions with #pragma disabling -Wcast-function-type&#13;&#10;&#13;&#10;* Revert &quot;Wrapped Ticker functions with #pragma disabling -Wcast-function-type&quot;&#13;&#10;&#13;&#10;This reverts commit 160be7e67a10d01b6e44c4bf2521c0ccd6348976.&#13;&#10;&#13;&#10;* Fixed Ticker example&#13;&#10;&#13;&#10;* Modified Ticker example&#13;&#10;&#13;&#10;* Fixed LED_BUILTIN err for ESP32&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Jan Procházka &lt;90197375+P-R-O-C-H-Y@users.noreply.github.com&gt;&#13;&#10;&#13;&#10;* setPins fix ESP32 &quot;specified pins are not supported by this chip.&quot; (#7646)&#13;&#10;&#13;&#10;[ESP32: SDMMCFS::begin hardcodes the usage of slot 1, only check if the pins match slot 1 pins.]&#13;&#10;&#13;&#10;setPins() was testing pins D1, D2 and D3 all against D1 ... fine in 1 pin mode when all are -1 not so much if you're trying to get 4 pin mode working.&#13;&#10;I now see this function doesn't really do anything on the ESP32...accept now correctly checks that you are trying to use the slot 1 pins.&#13;&#10;&#13;&#10;Co-authored-by: Jan Procházka &lt;90197375+P-R-O-C-H-Y@users.noreply.github.com&gt;&#13;&#10;&#13;&#10;* Allow passing IP as connect method parameter in WiFiClientSecure and skip unnecessary host-ip conversions (#7643)&#13;&#10;&#13;&#10;* Add LED_BUILTIN* definitions and initialization for LEDs to stop them floating. (#7636)&#13;&#10;&#13;&#10;Co-authored-by: Rodrigo Garcia &lt;rodrigo.garcia@espressif.com&gt;&#13;&#10;&#13;&#10;* Expand path to tinuf2 image when checking existence in platformio-build.py (#7631)&#13;&#10;&#13;&#10;* Expand path to tinuf2 image when checking existence&#13;&#10;&#13;&#10;* More isFiles fixed&#13;&#10;&#13;&#10;* Remove (useless) trailing semicolon from Print.cpp (#7622)&#13;&#10;&#13;&#10;* ADD: New variant Edgebox-ESP-100 (#7771)&#13;&#10;&#13;&#10;* ADD: New variant Edgebox-ESP-100&#13;&#10;&#13;&#10;* FIX: Edgebox-ESP-100 Board.txt usb mode option change back to default value as ESP32S3&#13;&#10;&#13;&#10;* Add Crabik Slot ESP32-S3 board (#7790)&#13;&#10;&#13;&#10;* Added Crabik Slot ESP32-S3&#13;&#10;&#13;&#10;* Adding CPU frequency settings and removing excess from partition scheme settings&#13;&#10;&#13;&#10;* new variant LilyGO T-Display-S3 (#7763)&#13;&#10;&#13;&#10;* new variant LilyGO T-Display-S3&#13;&#10;&#13;&#10;https://github.com/Xinyuan-LilyGO/T-Display-S3&#13;&#10;&#13;&#10;* Add boards.txt definition&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Me No Dev &lt;me-no-dev@users.noreply.github.com&gt;&#13;&#10;&#13;&#10;* Update get.py to support Apple ARM64&#13;&#10;&#13;&#10;* Update package_esp32_index.template.json&#13;&#10;&#13;&#10;* WString Return bool (#7774)&#13;&#10;&#13;&#10;* Add Roboheart Hercules development board to the esp32-core (#7672)&#13;&#10;&#13;&#10;* added Roboheart Hercules pin definitions and board.txt entries&#13;&#10;&#13;&#10;* added package_roboheat.json for prototyping&#13;&#10;&#13;&#10;* Roboheart Hercules pins&#13;&#10;&#13;&#10;* Updated the pins&#13;&#10;&#13;&#10;* Delete package_roboheart.json&#13;&#10;&#13;&#10;* Requested changes&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: renebohne &lt;rene.bohne@gmail.com&gt;&#13;&#10;&#13;&#10;* Reword &quot;ESP-IDF as Component&quot; (#7812)&#13;&#10;&#13;&#10;I think &quot;Arduino as an ESP-IDF component&quot; or just &quot;As ESP-IDF component&quot; instead of  &quot;ESP-IDF as Component&quot; is more correct way to name the link.&#13;&#10;&#13;&#10;1. &quot;ESP-IDF as Component&quot; would imply that ESP-IDF is some sort of library for Arduino, which is (IMO) misleading, because it's true the other way around.&#13;&#10;2. It's written as &quot;Arduino as an ESP-IDF component&quot; on the webpage it points to as well.&#13;&#10;&#13;&#10;- Also I removed the capitalization from &quot;Component&quot; as I have not found a reason why is it capitalized.&#13;&#10;&#13;&#10;* add new board Adafruit Feather ESP32-S3 Reverse TFT (#7811)&#13;&#10;&#13;&#10;* Multi threading examples (tasks, queues, semaphores, mutexes) (#7660)&#13;&#10;&#13;&#10;* Moved and renamed example ESP32/FreeRTOS to MultiThreading/BasicMultiThreading&#13;&#10;&#13;&#10;* Added dummy files&#13;&#10;&#13;&#10;* Modified original example&#13;&#10;&#13;&#10;* Fixed BasicMultiThreading.ino&#13;&#10;&#13;&#10;* Added Example demonstrating use of queues&#13;&#10;&#13;&#10;* Extended info in BasicMultiThreading&#13;&#10;&#13;&#10;* Renamed Queues to singular Queue&#13;&#10;&#13;&#10;* Added Mutex example&#13;&#10;&#13;&#10;* Added Semaphore example&#13;&#10;&#13;&#10;* Moved info from example to README&#13;&#10;&#13;&#10;* Moved doc from Mutex to README&#13;&#10;&#13;&#10;* Added Queue README&#13;&#10;&#13;&#10;* Removed unecesary text&#13;&#10;&#13;&#10;* Fixed grammar&#13;&#10;&#13;&#10;* Increased stack size for Sempahore example&#13;&#10;&#13;&#10;* Added headers into .ino files&#13;&#10;&#13;&#10;* Added word Example at the end of title in README&#13;&#10;&#13;&#10;* removed unused line&#13;&#10;&#13;&#10;* Added forgotten README&#13;&#10;&#13;&#10;* Modified BasicMultiThreading example&#13;&#10;&#13;&#10;* Added missing S3 entry in README&#13;&#10;&#13;&#10;* moved location&#13;&#10;&#13;&#10;* Update ESP-IDF libs&#13;&#10;&#13;&#10;* Update CMakeLists.txt&#13;&#10;&#13;&#10;* Update esptool to v4.4&#13;&#10;&#13;&#10;* Add function timerAttachInterruptFlag (#7809)&#13;&#10;&#13;&#10;* Update esptool to v4.5&#13;&#10;&#13;&#10;* ADC refactoring (#7827)&#13;&#10;&#13;&#10;* Adc refactored + periman implementation&#13;&#10;&#13;&#10;Peripheral manager still needs to be checked if the implementation is right.&#13;&#10;&#13;&#10;* switched to working solution for milivolts read&#13;&#10;&#13;&#10;* Periman detachbus fix&#13;&#10;&#13;&#10;* coding style&#13;&#10;&#13;&#10;* fix CI warnings&#13;&#10;&#13;&#10;* fix FreeRTOS example&#13;&#10;&#13;&#10;* Update ETH.cpp&#13;&#10;&#13;&#10;* Update FunctionalInterruptStruct.ino&#13;&#10;&#13;&#10;* Update package_esp32_index.template.json&#13;&#10;&#13;&#10;* Update package_esp32_index.template.json&#13;&#10;&#13;&#10;* Fixes for the latest IDF v5.1&#13;&#10;&#13;&#10;* update esp-idf libs and toolchain&#13;&#10;&#13;&#10;* Turn OFF auto crystal frequency for ESP32 (needed by TWAI)&#13;&#10;&#13;&#10;* Update examples&#13;&#10;&#13;&#10;* Switch build to mostly use flags from files&#13;&#10;&#13;&#10;Includes can not be done this way&#13;&#10;&#13;&#10;* Reorganize flag files&#13;&#10;&#13;&#10;* Optimize chip build flags further&#13;&#10;&#13;&#10;* Revert defines from file. MBEDTLS_CONFIG_FILE does not properly expand&#13;&#10;&#13;&#10;* Add support for includes and defines from file&#13;&#10;&#13;&#10;* Replace old sdk path references in platform.txt&#13;&#10;&#13;&#10;* use gcc-ar (#8013)&#13;&#10;&#13;&#10;* Makes F_CPU generic for all SoC (#8007)&#13;&#10;&#13;&#10;Based on CONFIG_ESP_DEFAULT_CPU_FREQ_MHZ that is correctly defined in the sdkconfig file for each SoC.&#13;&#10;&#13;&#10;* TIMER refactoring (#7904)&#13;&#10;&#13;&#10;* refactor using GPtimer&#13;&#10;&#13;&#10;* Updated timer HW test&#13;&#10;&#13;&#10;* fix examples&#13;&#10;&#13;&#10;* Add v2.0.7 in issue template (#7871)&#13;&#10;&#13;&#10;* refactor using GPtimer&#13;&#10;&#13;&#10;* Updated timer HW test&#13;&#10;&#13;&#10;* fix examples&#13;&#10;&#13;&#10;* Revert &quot;Add v2.0.7 in issue template (#7871)&quot;&#13;&#10;&#13;&#10;This reverts commit fcc3b17d62ff57861f8913ca1f142fd5163b7457.&#13;&#10;&#13;&#10;* Update upload-artifact to v3 in HW CI&#13;&#10;&#13;&#10;* Revert &quot;Update upload-artifact to v3 in HW CI&quot;&#13;&#10;&#13;&#10;This reverts commit 1ba228071718ba37c4e26d98db22f77b2a7364a6.&#13;&#10;&#13;&#10;* replace resolution with frequency&#13;&#10;&#13;&#10;* remove count_down option&#13;&#10;&#13;&#10;* countup removed from examples + header&#13;&#10;&#13;&#10;* Refactored timer object&#13;&#10;&#13;&#10;* code cleanup + examples and tests fixes&#13;&#10;&#13;&#10;* TimerAlarm fix&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Vojtěch Bartoška &lt;76958047+VojtechBartoska@users.noreply.github.com&gt;&#13;&#10;&#13;&#10;* [Docs] ADC and Timer API Update (+some docs fixes) (#7906)&#13;&#10;&#13;&#10;* updated docs&#13;&#10;&#13;&#10;* remove hall sensor docs&#13;&#10;&#13;&#10;Removed Hall sensor documentation as its no longer supported in IDF-5&#13;&#10;&#13;&#10;* Fixed ESPNow examples location in docs&#13;&#10;&#13;&#10;* Last timer refactored API + gpio small fix&#13;&#10;&#13;&#10;* AlarmWrite fix&#13;&#10;&#13;&#10;* Fixes APLL/PLL with RTC Frequency (#8025)&#13;&#10;&#13;&#10;log_d() was displaying APLL for any SoC, but S3 and C3 has not such option, causing compilation errors.&#13;&#10;&#13;&#10;* Update IDF libs and fix OPI PSRAM on S3&#13;&#10;&#13;&#10;* Add setMode function HardwareSerial.c to set the esp32 uart mode for use with RS485 auto RTS (#7935)&#13;&#10;&#13;&#10;* Added setMode function to set the esp32 uart mode&#13;&#10;&#13;&#10;Used to set the esp32 uart mode for use with RS485 Half Duplex and the auto RTS pin mode. This will set/clear the RTS pin output to control the RE/DE pin on most RS485 chips.&#13;&#10;&#13;&#10;* Add Success (bool) return in some functions&#13;&#10;&#13;&#10;* Add Success (bool) return code to some functions&#13;&#10;&#13;&#10;* Add Success (bool) return to some functions&#13;&#10;&#13;&#10;* Add Success (bool) return to some functions&#13;&#10;&#13;&#10;* Fix uartSetRxTimeout return type&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Rodrigo Garcia &lt;rodrigo.garcia@espressif.com&gt;&#13;&#10;&#13;&#10;* Add support for esp-elf-gdb&#13;&#10;&#13;&#10;* WFG Crashfix (#8044)&#13;&#10;&#13;&#10;* Update component libs&#13;&#10;&#13;&#10;* IDF release/v5.1 (#8061)&#13;&#10;&#13;&#10;* IDF release/v5.1 bb9200acec&#13;&#10;&#13;&#10;* Update Esp.cpp&#13;&#10;&#13;&#10;* IDF release/v5.1 420ebd208a&#13;&#10;&#13;&#10;* Update esp32-hal-psram.c&#13;&#10;&#13;&#10;* Switch SDK to be an external package&#13;&#10;&#13;&#10;* fix path (#8096)&#13;&#10;&#13;&#10;* Makes UART work at any APB Frequency (#8097)&#13;&#10;&#13;&#10;Fixes HardwareSerial to work with IDF 5.1 on any CPU/APB Frequency (240MHz to 10MHZ), including user created low power modes.&#13;&#10;&#13;&#10;* Add required callbacks for TinyUSB DFU&#13;&#10;&#13;&#10;* Update version to 3.0.0&#13;&#10;&#13;&#10;* Add ESP.getCoreVersion() and update ESP.getChipModel()&#13;&#10;&#13;&#10;* Update timer hal for the latest 5.1&#13;&#10;&#13;&#10;* Use separate RX and TX buffer sizes in HTTP client&#13;&#10;&#13;&#10;optimizes download by allowing up to 4K packets to be received&#13;&#10;&#13;&#10;* Rename clock tree enum name in latest 5.1&#13;&#10;&#13;&#10;* ESP32-H4 support was removed in ESP-IDF v5.1&#13;&#10;&#13;&#10;* IDF release/v5.1 2004bf4e11 (#8165)&#13;&#10;&#13;&#10;* Deinit previous bus first (#8180)&#13;&#10;&#13;&#10;* TIMER - add timer_started flag, fix timerEnd() + timer HW test (#8135)&#13;&#10;&#13;&#10;* Add timer_started flag and stop before disable&#13;&#10;&#13;&#10;* Fix timer HW test&#13;&#10;&#13;&#10;* TOUCH - Peripheral manager implementation (#8129)&#13;&#10;&#13;&#10;* Touch periman implemented&#13;&#10;&#13;&#10;* Deinit previous bus first&#13;&#10;&#13;&#10;* LEDC Refactoring - Peripheral manager implemented (#8126)&#13;&#10;&#13;&#10;* LEDC periman implementation&#13;&#10;&#13;&#10;* Fix examples&#13;&#10;&#13;&#10;* Rework tone&#13;&#10;&#13;&#10;* Update ledc docs&#13;&#10;&#13;&#10;* fix missing bracket&#13;&#10;&#13;&#10;* Update analog funtions esp32-hal.h&#13;&#10;&#13;&#10;* Update CameraWebServer example&#13;&#10;&#13;&#10;* Fix HiFreq_ADC example&#13;&#10;&#13;&#10;* minor fixes - typos&#13;&#10;&#13;&#10;* Avoid calling tone/notone when tone already runs on dif. pin&#13;&#10;&#13;&#10;* Remove unused channels_resolution&#13;&#10;&#13;&#10;* GPIO - Peripheral manager implementation (#8179)&#13;&#10;&#13;&#10;* periman-implementation&#13;&#10;&#13;&#10;* fix RGB_BUILTIN and remove space&#13;&#10;&#13;&#10;* Enforces more consistency into Peripheral Manager (#8188)&#13;&#10;&#13;&#10;* Avoid log_i() message the first time a bus is assigned&#13;&#10;&#13;&#10;* Prevent operation with ESP32_BUS_TYPE_INIT&#13;&#10;&#13;&#10;* keeps coding style&#13;&#10;&#13;&#10;* do not print messages on INIT bus type&#13;&#10;&#13;&#10;* [Arduino Core 3.0.0] RMT IDF5.1 Refactoring (#7994)&#13;&#10;&#13;&#10;* RMT IDF5.1 refactoring&#13;&#10;&#13;&#10;* Fixes initial value setting&#13;&#10;&#13;&#10;* removed rmtRead() with user callback&#13;&#10;&#13;&#10;* simplify/remove Read data structure&#13;&#10;&#13;&#10;* Deep API simplification&#13;&#10;&#13;&#10;* fixes the examples&#13;&#10;&#13;&#10;* fix rmt.h&#13;&#10;&#13;&#10;* adds support to APB different frequencies&#13;&#10;&#13;&#10;* fixes CI and not defined RGB_BUILTIN&#13;&#10;&#13;&#10;* new RMT API and examples&#13;&#10;&#13;&#10;* fixing commentaties&#13;&#10;&#13;&#10;* Update esp32-hal-rgb-led.c&#13;&#10;&#13;&#10;* changes Filter API&#13;&#10;&#13;&#10;* Fixes example with Filter API&#13;&#10;&#13;&#10;* Update PlatformIO scripts for the upcoming 3.0 core (#8183)&#13;&#10;&#13;&#10;* Update PlatformIO scripts for the upcoming 3.0 core&#13;&#10;&#13;&#10;* Dynamically select proper framework-arduinoespressif32-libs package&#13;&#10;&#13;&#10;With this change the dev-platform will be dynamically configured to&#13;&#10;pull the latest .zip package with precompiled libraries from extracted from&#13;&#10;package_esp32_index.template.json&#13;&#10;&#13;&#10;* free memory on detach (#8264)&#13;&#10;&#13;&#10;* SPI - Peripheral manager implementation  (#8255)&#13;&#10;&#13;&#10;* spi periman implementation&#13;&#10;&#13;&#10;* fix header file&#13;&#10;&#13;&#10;* remove unused struct&#13;&#10;&#13;&#10;* fix missing braces&#13;&#10;&#13;&#10;* Update esp32-hal-rmt.c (#8216)&#13;&#10;&#13;&#10;Optimizing Peripheral Manager Test&#13;&#10;&#13;&#10;* I2C - Peripheral manager implementation (#8220)&#13;&#10;&#13;&#10;* i2c-master periman initial commit&#13;&#10;&#13;&#10;* i2c-master make detachbus static + comment remove&#13;&#10;&#13;&#10;* i2c-slave periman implementation&#13;&#10;&#13;&#10;* SetPinBus to INIT on i2cDeinits&#13;&#10;&#13;&#10;* Fix slave pins deinit&#13;&#10;&#13;&#10;* remove dbg logs&#13;&#10;&#13;&#10;* set ret to ESP_FAIL instead of returning&#13;&#10;&#13;&#10;* Fix warnings in hal-spi caused by pariman transition&#13;&#10;&#13;&#10;* Update esptool.py to version 4.6&#13;&#10;&#13;&#10;* Add platform support for ESP_SR&#13;&#10;&#13;&#10;* Add USB Type and valid pin check to periman&#13;&#10;&#13;&#10;* replace bus with spi-&gt;num+1 (#8279)&#13;&#10;&#13;&#10;* Remove default pins from SPI HAL&#13;&#10;&#13;&#10;* Add commented out handlers for esptool.js in TinyUSB CDC&#13;&#10;&#13;&#10;For future use&#13;&#10;&#13;&#10;* Add build defines for host os and fqbn (for debug purposes)&#13;&#10;&#13;&#10;* Provide proper memory caps total size&#13;&#10;&#13;&#10;* Update Esp.cpp&#13;&#10;&#13;&#10;* SDMMC - Peripheral manager implementation (#8289)&#13;&#10;&#13;&#10;* sdmmc periman implemented&#13;&#10;&#13;&#10;* save pins when SOC_SDMMC_USE_IOMUX&#13;&#10;&#13;&#10;* IDF release/v5.1 4bc762621d (#8292)&#13;&#10;&#13;&#10;* Adds missing pinMode (#8312)&#13;&#10;&#13;&#10;* Adds missing pinMode&#13;&#10;&#13;&#10;The example code lacks a pinMode() to initialize the GPIO 0 (button). In Arduino Core 3.0.0, it prints an error message when trying to read a not initialized GPIO.&#13;&#10;&#13;&#10;* Update KeyboardLogout.ino&#13;&#10;&#13;&#10;Adds &lt;buttonPin&gt; to keep code standard&#13;&#10;&#13;&#10;* Update KeyboardReprogram.ino&#13;&#10;&#13;&#10;Adds &lt;buttonPin&gt; to keep code standard&#13;&#10;&#13;&#10;* LEDC Fade implementation (#8338)&#13;&#10;&#13;&#10;* fade API + pointer fixes&#13;&#10;&#13;&#10;* Add fade api&#13;&#10;&#13;&#10;* Add fade example&#13;&#10;&#13;&#10;* update ledc docs&#13;&#10;&#13;&#10;* remove unused variables&#13;&#10;&#13;&#10;* fix path to example&#13;&#10;&#13;&#10;* Adds USB to Peripheral Manager - Arduino Core 3.0.0 (#8335)&#13;&#10;&#13;&#10;* ETHERNET - Peripheral manager implementation (#8297)&#13;&#10;&#13;&#10;* Peripheral manager implemented&#13;&#10;&#13;&#10;* remove unused variable&#13;&#10;&#13;&#10;* Add all RMII pins&#13;&#10;&#13;&#10;* fix typo&#13;&#10;&#13;&#10;* Adds HardwareSerial to Peripheral Manager Arduino 3.0.0 (#8328)&#13;&#10;&#13;&#10;* Do not limit ETHERNET in periman to only ESP32. SPI is also an option&#13;&#10;&#13;&#10;* Initial support for ESP32-C6 (#8337)&#13;&#10;&#13;&#10;* Add checks for SOC defines (#8351)&#13;&#10;&#13;&#10;* Add checks for SOC defines&#13;&#10;&#13;&#10;* Add SoC checks to BLE library&#13;&#10;&#13;&#10;* fix i2c compilation error&#13;&#10;&#13;&#10;* fix wrong placement of include&#13;&#10;&#13;&#10;* add check to SPI library&#13;&#10;&#13;&#10;* add check to USB library&#13;&#10;&#13;&#10;* add checks to Wire library&#13;&#10;&#13;&#10;* Feature/esp32h2 support (#8373)&#13;&#10;&#13;&#10;* Initial support for ESP32H2&#13;&#10;&#13;&#10;* Additional changes for ESP32H2&#13;&#10;&#13;&#10;* Update libs for ESP32H2&#13;&#10;&#13;&#10;* Fix flashing on ESP32-H2&#13;&#10;&#13;&#10;* Fix GPIO Configs for ESP32-C6 and ESP32-H2&#13;&#10;&#13;&#10;* Update Timer test sketch&#13;&#10;&#13;&#10;* Fix upload flash parameters&#13;&#10;&#13;&#10;* Use ets_write_char_uart instead of ets_printf in log_printfv&#13;&#10;&#13;&#10;* Print full chip report when log level is sufficient (#8282)&#13;&#10;&#13;&#10;* ESP32-C3 does not have ets_write_char_uart&#13;&#10;&#13;&#10;* Fix BLE gap event name&#13;&#10;&#13;&#10;* HW Testing - Pytest update (#8389)&#13;&#10;&#13;&#10;* update tests requirements&#13;&#10;&#13;&#10;* remove already handled components&#13;&#10;&#13;&#10;* Update version of pytest&#13;&#10;&#13;&#10;* Add missing ESP32-H2 to hil.yml&#13;&#10;&#13;&#10;* Updated FreeRTOS names (#8418)&#13;&#10;&#13;&#10;* HW Testing -  ESP32-C6 + ESP32-H2 fixes (#8404)&#13;&#10;&#13;&#10;* add C6/H2 to tests cfg.json&#13;&#10;&#13;&#10;* remove ,&#13;&#10;&#13;&#10;* workflow runs-on runner by matrix&#13;&#10;&#13;&#10;* Add need for arduino tag to select runner&#13;&#10;&#13;&#10;* Add cryptography to requirements.txt&#13;&#10;&#13;&#10;* Removed duplicate TX1 define for H2 (#8402)&#13;&#10;&#13;&#10;* Fix broken examples&#13;&#10;&#13;&#10;* Fixes RMT filter &amp; idle timing and setup (#8359)&#13;&#10;&#13;&#10;* Fixes Filter and Idle parameter to uint32&#13;&#10;&#13;&#10;* Fixes Filter and Idle setup&#13;&#10;&#13;&#10;* Fixes it to 5.1Libs branch&#13;&#10;&#13;&#10;* fix RMT CLK source and Filter API&#13;&#10;&#13;&#10;* fixes missing ;&#13;&#10;&#13;&#10;* fixes missing ;&#13;&#10;&#13;&#10;* fixes RMT example&#13;&#10;&#13;&#10;* IDF release/v5.1 a7b62bbcaf (#8438)&#13;&#10;&#13;&#10;* Add workflow to build executables from python scripts (#8290)&#13;&#10;&#13;&#10;* Add workflow to build executables from python scripts&#13;&#10;&#13;&#10;* Push binary to tools&#13;&#10;&#13;&#10;* Enable executable signing on Windows&#13;&#10;&#13;&#10;* Update get.py&#13;&#10;&#13;&#10;* Push binary to tools&#13;&#10;&#13;&#10;* Try with multiple files&#13;&#10;&#13;&#10;* Try more actions&#13;&#10;&#13;&#10;* Try powershell&#13;&#10;&#13;&#10;* Restore tools so they do not get rebuilt&#13;&#10;&#13;&#10;* Finalize scripts&#13;&#10;&#13;&#10;* Push binary to tools&#13;&#10;&#13;&#10;* App rollback should be after PSRAM is initialized&#13;&#10;&#13;&#10;* Correcting RX1 to GPIO4 and TX1 to GPIO5 to be consistent with documentation. Previous pin use works but is inconsistent with C6 docs.&#13;&#10;&#13;&#10;* Fixes Memory Leak (#8486)&#13;&#10;&#13;&#10;* fixes preprocessor test (#8485)&#13;&#10;&#13;&#10;* fixes preprocessor test&#13;&#10;&#13;&#10;When using `#define USE_SOFT_AP` &#13;&#10;Change&#13;&#10;`&amp;&amp; not USE_SOFT_AP` ==&gt; `&amp;&amp; !defined(USE_SOFT_AP)`&#13;&#10;&#13;&#10;* Adds any BLE capable device in WiFiProv.ino&#13;&#10;&#13;&#10;Removing ESP32 restriction for BLE Provisioning.&#13;&#10;&#13;&#10;* fix flash mode read out for C6&#13;&#10;&#13;&#10;* Add option for custom partitions without restrictions&#13;&#10;&#13;&#10;* SD_MMC update (#8298)&#13;&#10;&#13;&#10;* Updated SD_MMC lib and examples&#13;&#10;&#13;&#10;* Removed getter implementation and commented usage in examples&#13;&#10;&#13;&#10;* squashed updates&#13;&#10;&#13;&#10;* IDF release/v5.1 f0437b945f (#8599)&#13;&#10;&#13;&#10;* Update package_esp32_index.template.json&#13;&#10;&#13;&#10;* Fix printf format build error in BTAdvertisedDeviceSet.cpp&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Pedro Minatel &lt;pedro.minatel@espressif.com&gt;&#13;&#10;Co-authored-by: Rodrigo Garcia &lt;rodrigo.garcia@espressif.com&gt;&#13;&#10;Co-authored-by: Ha Thach &lt;thach@tinyusb.org&gt;&#13;&#10;Co-authored-by: Martin Turski &lt;quiret@vfemail.net&gt;&#13;&#10;Co-authored-by: raviypujar &lt;raviypujar@gmail.com&gt;&#13;&#10;Co-authored-by: Jason2866 &lt;24528715+Jason2866@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: Tomáš Pilný &lt;34927466+PilnyTomas@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: Jan Procházka &lt;90197375+P-R-O-C-H-Y@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: Daniel Berlin &lt;dberlin@dberlin.org&gt;&#13;&#10;Co-authored-by: Nima Askari (نیما عسکری) &lt;nimaltd@yahoo.com&gt;&#13;&#10;Co-authored-by: rtpmsys &lt;106180646+rtpmsys@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: bytiful &lt;55647551+bytiful@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: tmfarrington &lt;tmfarrington@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: Krzysiek S &lt;chris.streh@gmail.com&gt;&#13;&#10;Co-authored-by: surt &lt;carl.olsson@gmail.com&gt;&#13;&#10;Co-authored-by: Max Scheffler &lt;max.scheffler@pm.me&gt;&#13;&#10;Co-authored-by: Clemens Kirchgatterer &lt;clemens@1541.org&gt;&#13;&#10;Co-authored-by: Peter Pan's Techland &lt;twinkle-pirate@hotmail.com&gt;&#13;&#10;Co-authored-by: Roman &lt;programmeofficemilkyway@gmail.com&gt;&#13;&#10;Co-authored-by: Eistee &lt;Eistee82@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: David McCurley &lt;44048235+mrengineer7777@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: Gaya3N25 &lt;30388176+Gaya3N25@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: renebohne &lt;rene.bohne@gmail.com&gt;&#13;&#10;Co-authored-by: Olivér Remény &lt;25034625+remenyo@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: davidk88 &lt;david.kotar@gmail.com&gt;&#13;&#10;Co-authored-by: Vojtěch Bartoška &lt;76958047+VojtechBartoska@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: James Armstrong &lt;jamesarmstrong3@me.com&gt;&#13;&#10;Co-authored-by: Valerii Koval &lt;valeros@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: Peter G. Jensen &lt;root@petergjoel.dk&gt;" />
			<int key="additions" value="6" />
			<int key="deletions" value="3" />
			<string key="diff" value='@@ -16,6 +16,9 @@&#10;  * set in the data will be advertised.&#10;  *&#10;  */&#10;+#include "soc/soc_caps.h"&#10;+#if SOC_BLE_SUPPORTED&#10;+&#10; #include "sdkconfig.h"&#10; #if defined(CONFIG_BLUEDROID_ENABLED)&#10; #include "BLEAdvertising.h"&#10;@@ -528,7 +531,7 @@ void BLEAdvertising::handleGAPEvent(&#10; &#9;}&#10; }&#10; &#10;-#ifdef CONFIG_BT_BLE_50_FEATURES_SUPPORTED&#10;+#ifdef SOC_BLE_50_SUPPORTED&#10; &#10; /**&#10; * @brief           Creator&#10;@@ -763,7 +766,7 @@ void BLEMultiAdvertising::setDuration(uint8_t instance, int duration, int max_ev&#10; &#9;ext_adv[instance] = { instance, duration, max_events };&#10; }&#10; &#10;-#endif // CONFIG_BT_BLE_50_FEATURES_SUPPORTED&#10;-&#10;+#endif // SOC_BLE_50_SUPPORTED&#10; &#10; #endif /* CONFIG_BLUEDROID_ENABLED */&#10;+#endif /* SOC_BLE_SUPPORTED */&#10;' />
			<string key="comment_change" value="True" />
		</event>
	</trace>
	<trace>
		<string key="file" value="BLEAdvertising.h" />
	</trace>
	<trace>
		<string key="file" value="BLEBeacon.h" />
	</trace>
	<trace>
		<string key="file" value="BLECharacteristic.cpp" />
		<event>
			<string key="timestamp" value="2023-10-06T15:50:11+03:00" />
			<string key="author" value="Me No Dev" />
			<string key="change_type" value="MODIFY" />
			<string key="commit_message" value="BLE upgrades (#8724)&#10;&#10;* Renamed library description&#13;&#10;&#13;&#10;* Updated Eddystone URL (not complete)&#13;&#10;&#13;&#10;* Updated Eddystone URL&#13;&#10;&#13;&#10;* Updated Eddystone classes and beacon scanner&#13;&#10;&#13;&#10;* Renamed examples - removing prefix BLE_&#13;&#10;&#13;&#10;* Renamed Beacon_Scanner&#13;&#10;&#13;&#10;* Updated TLM&#13;&#10;&#13;&#10;* Changed std::string to Arduino String&#13;&#10;&#13;&#10;* More std::string -&gt; String&#13;&#10;&#13;&#10;* Changed String in forgotten file&#13;&#10;&#13;&#10;* Changed .data to .c_str&#13;&#10;&#13;&#10;* Reverting single String type change&#13;&#10;&#13;&#10;* Few more fixes related to the String transition&#13;&#10;&#13;&#10;* Fixed URL and Utils error&#13;&#10;&#13;&#10;* Added and modified compatibility safeguards for BLE5 examples&#13;&#10;&#13;&#10;* Added #include WString.h&#13;&#10;&#13;&#10;* Fixed Beacon_Scanner&#13;&#10;&#13;&#10;* Remove commented include&#13;&#10;&#13;&#10;Co-authored-by: Lucas Saavedra Vaz &lt;lucassvaz@yahoo.com.br&gt;&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Tomas Pilny &lt;tomas.pilny@espressif.com&gt;&#13;&#10;Co-authored-by: Lucas Saavedra Vaz &lt;lucassvaz@yahoo.com.br&gt;" />
			<int key="additions" value="13" />
			<int key="deletions" value="13" />
			<string key="diff" value='@@ -178,7 +178,7 @@ BLEUUID BLECharacteristic::getUUID() {&#10;  * @brief Retrieve the current value of the characteristic.&#10;  * @return A pointer to storage containing the current characteristic value.&#10;  */&#10;-std::string BLECharacteristic::getValue() {&#10;+String BLECharacteristic::getValue() {&#10; &#9;return m_value.getValue();&#10; } // getValue&#10; &#10;@@ -376,19 +376,19 @@ void BLECharacteristic::handleGATTServerEvent(&#10; &#9;&#9;&#9;&#9;&#9;esp_gatt_rsp_t rsp;&#10; &#10; &#9;&#9;&#9;&#9;&#9;if (param-&gt;read.is_long) {&#10;-&#9;&#9;&#9;&#9;&#9;&#9;std::string value = m_value.getValue();&#10;+&#9;&#9;&#9;&#9;&#9;&#9;String value = m_value.getValue();&#10; &#10; &#9;&#9;&#9;&#9;&#9;&#9;if (value.length() - m_value.getReadOffset() &lt; maxOffset) {&#10; &#9;&#9;&#9;&#9;&#9;&#9;&#9;// This is the last in the chain&#10; &#9;&#9;&#9;&#9;&#9;&#9;&#9;rsp.attr_value.len    = value.length() - m_value.getReadOffset();&#10; &#9;&#9;&#9;&#9;&#9;&#9;&#9;rsp.attr_value.offset = m_value.getReadOffset();&#10;-&#9;&#9;&#9;&#9;&#9;&#9;&#9;memcpy(rsp.attr_value.value, value.data() + rsp.attr_value.offset, rsp.attr_value.len);&#10;+&#9;&#9;&#9;&#9;&#9;&#9;&#9;memcpy(rsp.attr_value.value, value.c_str() + rsp.attr_value.offset, rsp.attr_value.len);&#10; &#9;&#9;&#9;&#9;&#9;&#9;&#9;m_value.setReadOffset(0);&#10; &#9;&#9;&#9;&#9;&#9;&#9;} else {&#10; &#9;&#9;&#9;&#9;&#9;&#9;&#9;// There will be more to come.&#10; &#9;&#9;&#9;&#9;&#9;&#9;&#9;rsp.attr_value.len    = maxOffset;&#10; &#9;&#9;&#9;&#9;&#9;&#9;&#9;rsp.attr_value.offset = m_value.getReadOffset();&#10;-&#9;&#9;&#9;&#9;&#9;&#9;&#9;memcpy(rsp.attr_value.value, value.data() + rsp.attr_value.offset, rsp.attr_value.len);&#10;+&#9;&#9;&#9;&#9;&#9;&#9;&#9;memcpy(rsp.attr_value.value, value.c_str() + rsp.attr_value.offset, rsp.attr_value.len);&#10; &#9;&#9;&#9;&#9;&#9;&#9;&#9;m_value.setReadOffset(rsp.attr_value.offset + maxOffset);&#10; &#9;&#9;&#9;&#9;&#9;&#9;}&#10; &#9;&#9;&#9;&#9;&#9;} else { // read.is_long == false&#10;@@ -397,19 +397,19 @@ void BLECharacteristic::handleGATTServerEvent(&#10; &#9;&#9;&#9;&#9;&#9;&#9;// Invoke the read callback.&#10; &#9;&#9;&#9;&#9;&#9;&#9;m_pCallbacks-&gt;onRead(this, param);&#10; &#10;-&#9;&#9;&#9;&#9;&#9;&#9;std::string value = m_value.getValue();&#10;+&#9;&#9;&#9;&#9;&#9;&#9;String value = m_value.getValue();&#10; &#10; &#9;&#9;&#9;&#9;&#9;&#9;if (value.length() + 1 &gt; maxOffset) {&#10; &#9;&#9;&#9;&#9;&#9;&#9;&#9;// Too big for a single shot entry.&#10; &#9;&#9;&#9;&#9;&#9;&#9;&#9;m_value.setReadOffset(maxOffset);&#10; &#9;&#9;&#9;&#9;&#9;&#9;&#9;rsp.attr_value.len    = maxOffset;&#10; &#9;&#9;&#9;&#9;&#9;&#9;&#9;rsp.attr_value.offset = 0;&#10;-&#9;&#9;&#9;&#9;&#9;&#9;&#9;memcpy(rsp.attr_value.value, value.data(), rsp.attr_value.len);&#10;+&#9;&#9;&#9;&#9;&#9;&#9;&#9;memcpy(rsp.attr_value.value, value.c_str(), rsp.attr_value.len);&#10; &#9;&#9;&#9;&#9;&#9;&#9;} else {&#10; &#9;&#9;&#9;&#9;&#9;&#9;&#9;// Will fit in a single packet with no callbacks required.&#10; &#9;&#9;&#9;&#9;&#9;&#9;&#9;rsp.attr_value.len    = value.length();&#10; &#9;&#9;&#9;&#9;&#9;&#9;&#9;rsp.attr_value.offset = 0;&#10;-&#9;&#9;&#9;&#9;&#9;&#9;&#9;memcpy(rsp.attr_value.value, value.data(), rsp.attr_value.len);&#10;+&#9;&#9;&#9;&#9;&#9;&#9;&#9;memcpy(rsp.attr_value.value, value.c_str(), rsp.attr_value.len);&#10; &#9;&#9;&#9;&#9;&#9;&#9;}&#10; &#9;&#9;&#9;&#9;&#9;}&#10; &#9;&#9;&#9;&#9;&#9;rsp.attr_value.handle   = param-&gt;read.handle;&#10;@@ -497,7 +497,7 @@ void BLECharacteristic::notify(bool is_notification) {&#10; &#10; &#9;m_pCallbacks-&gt;onNotify(this);   // Invoke the notify callback.&#10; &#10;-&#9;GeneralUtils::hexDump((uint8_t*)m_value.getValue().data(), m_value.getValue().length());&#10;+&#9;GeneralUtils::hexDump((uint8_t*)m_value.getValue().c_str(), m_value.getValue().length());&#10; &#10; &#9;if (getService()-&gt;getServer()-&gt;getConnectedCount() == 0) {&#10; &#9;&#9;log_v("&lt;&lt; notify: No connected clients.");&#10;@@ -535,7 +535,7 @@ void BLECharacteristic::notify(bool is_notification) {&#10; &#9;&#9;esp_err_t errRc = ::esp_ble_gatts_send_indicate(&#10; &#9;&#9;&#9;&#9;getService()-&gt;getServer()-&gt;getGattsIf(),&#10; &#9;&#9;&#9;&#9;myPair.first,&#10;-&#9;&#9;&#9;&#9;getHandle(), length, (uint8_t*)m_value.getValue().data(), !is_notification); // The need_confirm = false makes this a notify.&#10;+&#9;&#9;&#9;&#9;getHandle(), length, (uint8_t*)m_value.getValue().c_str(), !is_notification); // The need_confirm = false makes this a notify.&#10; &#9;&#9;if (errRc != ESP_OK) {&#10; &#9;&#9;&#9;log_e("&lt;&lt; esp_ble_gatts_send_ %s: rc=%d %s",is_notification?"notify":"indicate", errRc, GeneralUtils::errorToString(errRc));&#10; &#9;&#9;&#9;m_semaphoreConfEvt.give();&#10;@@ -679,8 +679,8 @@ void BLECharacteristic::setValue(uint8_t* data, size_t length) {&#10;  * @param [in] Set the value of the characteristic.&#10;  * @return N/A.&#10;  */&#10;-void BLECharacteristic::setValue(std::string value) {&#10;-&#9;setValue((uint8_t*)(value.data()), value.length());&#10;+void BLECharacteristic::setValue(String value) {&#10;+&#9;setValue((uint8_t*)(value.c_str()), value.length());&#10; } // setValue&#10; &#10; void BLECharacteristic::setValue(uint16_t&amp; data16) {&#10;@@ -751,8 +751,8 @@ void BLECharacteristic::setWriteProperty(bool value) {&#10;  * @brief Return a string representation of the characteristic.&#10;  * @return A string representation of the characteristic.&#10;  */&#10;-std::string BLECharacteristic::toString() {&#10;-&#9;std::string res = "UUID: " + m_bleUUID.toString() + ", handle : 0x";&#10;+String BLECharacteristic::toString() {&#10;+&#9;String res = "UUID: " + m_bleUUID.toString() + ", handle : 0x";&#10; &#9;char hex[5];&#10; &#9;snprintf(hex, sizeof(hex), "%04x", m_handle);&#10; &#9;res += hex;&#10;' />
			<string key="comment_change" value="True" />
		</event>
	</trace>
	<trace>
		<string key="file" value="BLECharacteristic.h" />
	</trace>
	<trace>
		<string key="file" value="BLECharacteristicMap.cpp" />
		<event>
			<string key="timestamp" value="2023-10-06T15:50:11+03:00" />
			<string key="author" value="Me No Dev" />
			<string key="change_type" value="MODIFY" />
			<string key="commit_message" value="BLE upgrades (#8724)&#10;&#10;* Renamed library description&#13;&#10;&#13;&#10;* Updated Eddystone URL (not complete)&#13;&#10;&#13;&#10;* Updated Eddystone URL&#13;&#10;&#13;&#10;* Updated Eddystone classes and beacon scanner&#13;&#10;&#13;&#10;* Renamed examples - removing prefix BLE_&#13;&#10;&#13;&#10;* Renamed Beacon_Scanner&#13;&#10;&#13;&#10;* Updated TLM&#13;&#10;&#13;&#10;* Changed std::string to Arduino String&#13;&#10;&#13;&#10;* More std::string -&gt; String&#13;&#10;&#13;&#10;* Changed String in forgotten file&#13;&#10;&#13;&#10;* Changed .data to .c_str&#13;&#10;&#13;&#10;* Reverting single String type change&#13;&#10;&#13;&#10;* Few more fixes related to the String transition&#13;&#10;&#13;&#10;* Fixed URL and Utils error&#13;&#10;&#13;&#10;* Added and modified compatibility safeguards for BLE5 examples&#13;&#10;&#13;&#10;* Added #include WString.h&#13;&#10;&#13;&#10;* Fixed Beacon_Scanner&#13;&#10;&#13;&#10;* Remove commented include&#13;&#10;&#13;&#10;Co-authored-by: Lucas Saavedra Vaz &lt;lucassvaz@yahoo.com.br&gt;&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Tomas Pilny &lt;tomas.pilny@espressif.com&gt;&#13;&#10;Co-authored-by: Lucas Saavedra Vaz &lt;lucassvaz@yahoo.com.br&gt;" />
			<int key="additions" value="36" />
			<int key="deletions" value="36" />
			<string key="diff" value='@@ -23,7 +23,7 @@&#10;  * @return The characteristic.&#10;  */&#10; BLECharacteristic* BLECharacteristicMap::getByHandle(uint16_t handle) {&#10;-&#9;return m_handleMap.at(handle);&#10;+  return m_handleMap.at(handle);&#10; } // getByHandle&#10; &#10; &#10;@@ -43,13 +43,13 @@ BLECharacteristic* BLECharacteristicMap::getByUUID(const char* uuid) {&#10;  * @return The characteristic.&#10;  */&#10; BLECharacteristic* BLECharacteristicMap::getByUUID(BLEUUID uuid) {&#10;-&#9;for (auto &amp;myPair : m_uuidMap) {&#10;-&#9;&#9;if (myPair.first-&gt;getUUID().equals(uuid)) {&#10;-&#9;&#9;&#9;return myPair.first;&#10;-&#9;&#9;}&#10;-&#9;}&#10;-&#9;//return m_uuidMap.at(uuid.toString());&#10;-&#9;return nullptr;&#10;+  for (auto &amp;myPair : m_uuidMap) {&#10;+    if (myPair.first-&gt;getUUID().equals(uuid)) {&#10;+      return myPair.first;&#10;+    }&#10;+  }&#10;+  //return m_uuidMap.at(uuid.toString());&#10;+  return nullptr;&#10; } // getByUUID&#10; &#10; &#10;@@ -58,11 +58,11 @@ BLECharacteristic* BLECharacteristicMap::getByUUID(BLEUUID uuid) {&#10;  * @return The first characteristic in the map.&#10;  */&#10; BLECharacteristic* BLECharacteristicMap::getFirst() {&#10;-&#9;m_iterator = m_uuidMap.begin();&#10;-&#9;if (m_iterator == m_uuidMap.end()) return nullptr;&#10;-&#9;BLECharacteristic* pRet = m_iterator-&gt;first;&#10;-&#9;m_iterator++;&#10;-&#9;return pRet;&#10;+  m_iterator = m_uuidMap.begin();&#10;+  if (m_iterator == m_uuidMap.end()) return nullptr;&#10;+  BLECharacteristic* pRet = m_iterator-&gt;first;&#10;+  m_iterator++;&#10;+  return pRet;&#10; } // getFirst&#10; &#10; &#10;@@ -71,10 +71,10 @@ BLECharacteristic* BLECharacteristicMap::getFirst() {&#10;  * @return The next characteristic in the map.&#10;  */&#10; BLECharacteristic* BLECharacteristicMap::getNext() {&#10;-&#9;if (m_iterator == m_uuidMap.end()) return nullptr;&#10;-&#9;BLECharacteristic* pRet = m_iterator-&gt;first;&#10;-&#9;m_iterator++;&#10;-&#9;return pRet;&#10;+  if (m_iterator == m_uuidMap.end()) return nullptr;&#10;+  BLECharacteristic* pRet = m_iterator-&gt;first;&#10;+  m_iterator++;&#10;+  return pRet;&#10; } // getNext&#10; &#10; &#10;@@ -85,10 +85,10 @@ BLECharacteristic* BLECharacteristicMap::getNext() {&#10;  * @param [in] param&#10;  */&#10; void BLECharacteristicMap::handleGATTServerEvent(esp_gatts_cb_event_t event, esp_gatt_if_t gatts_if, esp_ble_gatts_cb_param_t* param) {&#10;-&#9;// Invoke the handler for every Service we have.&#10;-&#9;for (auto&amp; myPair : m_uuidMap) {&#10;-&#9;&#9;myPair.first-&gt;handleGATTServerEvent(event, gatts_if, param);&#10;-&#9;}&#10;+  // Invoke the handler for every Service we have.&#10;+  for (auto&amp; myPair : m_uuidMap) {&#10;+    myPair.first-&gt;handleGATTServerEvent(event, gatts_if, param);&#10;+  }&#10; } // handleGATTServerEvent&#10; &#10; &#10;@@ -99,7 +99,7 @@ void BLECharacteristicMap::handleGATTServerEvent(esp_gatts_cb_event_t event, esp&#10;  * @return N/A.&#10;  */&#10; void BLECharacteristicMap::setByHandle(uint16_t handle, BLECharacteristic* characteristic) {&#10;-&#9;m_handleMap.insert(std::pair&lt;uint16_t, BLECharacteristic*&gt;(handle, characteristic));&#10;+  m_handleMap.insert(std::pair&lt;uint16_t, BLECharacteristic*&gt;(handle, characteristic));&#10; } // setByHandle&#10; &#10; &#10;@@ -110,7 +110,7 @@ void BLECharacteristicMap::setByHandle(uint16_t handle, BLECharacteristic* chara&#10;  * @return N/A.&#10;  */&#10; void BLECharacteristicMap::setByUUID(BLECharacteristic* pCharacteristic, BLEUUID uuid) {&#10;-&#9;m_uuidMap.insert(std::pair&lt;BLECharacteristic*, std::string&gt;(pCharacteristic, uuid.toString()));&#10;+  m_uuidMap.insert(std::pair&lt;BLECharacteristic*, String&gt;(pCharacteristic, uuid.toString()));&#10; } // setByUUID&#10; &#10; &#10;@@ -118,19 +118,19 @@ void BLECharacteristicMap::setByUUID(BLECharacteristic* pCharacteristic, BLEUUID&#10;  * @brief Return a string representation of the characteristic map.&#10;  * @return A string representation of the characteristic map.&#10;  */&#10;-std::string BLECharacteristicMap::toString() {&#10;-&#9;std::string res;&#10;-&#9;int count = 0;&#10;-&#9;char hex[5];&#10;-&#9;for (auto &amp;myPair: m_uuidMap) {&#10;-&#9;&#9;if (count &gt; 0) {res += "\n";}&#10;-&#9;&#9;snprintf(hex, sizeof(hex), "%04x", myPair.first-&gt;getHandle());&#10;-&#9;&#9;count++;&#10;-&#9;&#9;res += "handle: 0x";&#10;-&#9;&#9;res += hex;&#10;-&#9;&#9;res += ", uuid: " + myPair.first-&gt;getUUID().toString();&#10;-&#9;}&#10;-&#9;return res;&#10;+String BLECharacteristicMap::toString() {&#10;+  String res;&#10;+  int count = 0;&#10;+  char hex[5];&#10;+  for (auto &amp;myPair: m_uuidMap) {&#10;+    if (count &gt; 0) {res += "\n";}&#10;+    snprintf(hex, sizeof(hex), "%04x", myPair.first-&gt;getHandle());&#10;+    count++;&#10;+    res += "handle: 0x";&#10;+    res += hex;&#10;+    res += ", uuid: " + myPair.first-&gt;getUUID().toString();&#10;+  }&#10;+  return res;&#10; } // toString&#10; &#10; &#10;' />
			<string key="comment_change" value="True" />
		</event>
	</trace>
	<trace>
		<string key="file" value="BLEClient.cpp" />
		<event>
			<string key="timestamp" value="2023-10-05T14:54:25+03:00" />
			<string key="author" value="Me No Dev" />
			<string key="change_type" value="MODIFY" />
			<string key="commit_message" value="ESP-IDF v5.1 (#7733)&#10;&#10;* Initial changes to compile under ESP-IDF v5.1&#13;&#10;&#13;&#10;* Initial import for ESP-IDF v5.1 libs&#13;&#10;&#13;&#10;* Update toolchain&#13;&#10;&#13;&#10;* Update esp32-hal-psram.c&#13;&#10;&#13;&#10;* Add missing LDs&#13;&#10;&#13;&#10;* Update platform.txt&#13;&#10;&#13;&#10;* Stop some CI jobs, because they will always fail&#13;&#10;&#13;&#10;* Fix examples&#13;&#10;&#13;&#10;* Update app_httpd.cpp&#13;&#10;&#13;&#10;* Update ResetReason.ino&#13;&#10;&#13;&#10;* Warnings fixes&#13;&#10;&#13;&#10;* Added the example guideline and template (#7665)&#13;&#10;&#13;&#10;* Added the example guideline and template&#13;&#10;&#13;&#10;* PR review changes with some typos and grammar fixes&#13;&#10;&#13;&#10;* Changes according to the PR review&#13;&#10;&#13;&#10;* Added ESP32-S3 link to the datasheet (#7738)&#13;&#10;&#13;&#10;* Update HiFreq_ADC.ino&#13;&#10;&#13;&#10;* Replace periph_ctrl.h use because of deprecation&#13;&#10;&#13;&#10;* Replace esp_spi_flash.h use because of deprecation&#13;&#10;&#13;&#10;* Add includes to male mDNS::enableWorkstation compile&#13;&#10;&#13;&#10;* Fix ssl_client mbedtls_pk_parse_key callback&#13;&#10;&#13;&#10;* Update temperature sensor driver&#13;&#10;&#13;&#10;* Allow sketch_utils to compile with arduino-cli&#13;&#10;&#13;&#10;* Run CI with arduino-cli&#13;&#10;&#13;&#10;* Fix arduino-cli CI build on Windows&#13;&#10;&#13;&#10;* Refactor platform.txt to not use components installed through the board manager when running from git&#13;&#10;&#13;&#10;* Initial Peripheral Manager Implementation&#13;&#10;&#13;&#10;* Update SigmaDelta driver to use the new ESP-IDF driver API&#13;&#10;&#13;&#10;* Small improvements to peripheral manager and SigmaDelta&#13;&#10;&#13;&#10;* Remove deleted function from SigmaDelta header&#13;&#10;&#13;&#10;* Update DAC driver to use the new ESP-IDF driver API&#13;&#10;&#13;&#10;* Adds softAp(String) to make it compatible with ESP8266 (#7801)&#13;&#10;&#13;&#10;* Fix commentary (#7800)&#13;&#10;&#13;&#10;Minor fix based on observation done in https://github.com/espressif/arduino-esp32/issues/7795#issuecomment-1416868611&#13;&#10;&#13;&#10;* add adafruit new board feather esp32s2 reserve tft (#7794)&#13;&#10;&#13;&#10;* bugfix: add &lt;stdint.h&gt; for uint8_t to avoid compilation failure (GCC 11.2.0) (#7744)&#13;&#10;&#13;&#10;* Adding 3rd party boards for VALTRACK-V4-VTS-ESP32-C3 &amp; VALTRACK-V4-MFW-ESP32-C3 (#7735)&#13;&#10;&#13;&#10;* Added VALTRACK-V4-VTS-ESP32-C3 board definition&#13;&#10;&#13;&#10;Created pins_arduino.h &amp; made changes to boards.txt with necessary changes&#13;&#10;&#13;&#10;* Modified the URL&#13;&#10;&#13;&#10;* Renamed json&#13;&#10;&#13;&#10;* renamed all auRL&#13;&#10;&#13;&#10;* Adding VALTRACK-V4 series board definitions&#13;&#10;&#13;&#10;Added VALTRACK-V4-VTS-ESP32C3 &amp; VALTRACK-V4-MFW-ESP32-C3 board variants&#13;&#10;&#13;&#10;* Adding VALTRACK-V4 series board definitions&#13;&#10;&#13;&#10;Added VALTRACK-V4-VTS-ESP32C3 &amp; VALTRACK-V4-MFW-ESP32-C3 board variants&#13;&#10;&#13;&#10;* Reverted package_esp32_index.template.json&#13;&#10;&#13;&#10;restored package_esp32_index.template.json from edits&#13;&#10;&#13;&#10;* Reverted package_esp32_index.template.json&#13;&#10;&#13;&#10;Added new line to package_esp32_index.template.json&#13;&#10;&#13;&#10;* Update Platformio CI (#7725)&#13;&#10;&#13;&#10;* WiFiClient example fix (#7711)&#13;&#10;&#13;&#10;* Modified WiFiClient example to use thingspeak instead of non-functionig sparkfun&#13;&#10;&#13;&#10;* Moved instructions to README&#13;&#10;&#13;&#10;* Fixed spelling&#13;&#10;&#13;&#10;* Added link to S3 datasheet&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Jan Procházka &lt;90197375+P-R-O-C-H-Y@users.noreply.github.com&gt;&#13;&#10;&#13;&#10;* Mirror update from Heltec repository (#7709)&#13;&#10;&#13;&#10;Heltec updated the I2C pins in https://github.com/Heltec-Aaron-Lee/WiFi_Kit_series/commit/b10f4bf85d13fd01be80dcdb0eb59e6a8c8ba19a&#13;&#10;&#13;&#10;* Fixes BLE data printing (#7699)&#13;&#10;&#13;&#10;* Fixes BLE data printing&#13;&#10;&#13;&#10;BLE data has no '\0' terminator, therefore it can't be printed as a regular C string.&#13;&#10;This fix just prints the BLE data based on its length.&#13;&#10;&#13;&#10;* Simplify printing to a single call&#13;&#10;&#13;&#10;* split menu options + lora_32_V3 fix (#7697)&#13;&#10;&#13;&#10;* Change header gaurd name (#7696)&#13;&#10;&#13;&#10;* Fix Name (#7691)&#13;&#10;&#13;&#10;Wrong name in definitions.&#13;&#10;&#13;&#10;* Fix error in WiFiClient.cpp where the connect function fails for timeouts below 1 second (#7686)&#13;&#10;&#13;&#10;* Update WiFiClient.cpp&#13;&#10;&#13;&#10;This change will allow specifying connect timeouts below 1 second. Without this change, if connect timeouts under 1 second are given, the connect defaults to 0ms and fails. &#13;&#10;This will also allow timeouts in fractions of seconds, e.g. 1500ms. Without this change, connect timeouts are truncated to full second increments.&#13;&#10;&#13;&#10;* Make parameter timeout_ms clear&#13;&#10;&#13;&#10;* Change connection timeout_ms name for clarity&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Rodrigo Garcia &lt;rodrigo.garcia@espressif.com&gt;&#13;&#10;&#13;&#10;* fixed the function header (#7674)&#13;&#10;&#13;&#10;* fixed the function header&#13;&#10;&#13;&#10;* fixed function name and paramaters&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Jan Procházka &lt;90197375+P-R-O-C-H-Y@users.noreply.github.com&gt;&#13;&#10;&#13;&#10;* Ticker fix solving #6155 (#7664)&#13;&#10;&#13;&#10;* Wrapped Ticker functions with #pragma disabling -Wcast-function-type&#13;&#10;&#13;&#10;* Revert &quot;Wrapped Ticker functions with #pragma disabling -Wcast-function-type&quot;&#13;&#10;&#13;&#10;This reverts commit 160be7e67a10d01b6e44c4bf2521c0ccd6348976.&#13;&#10;&#13;&#10;* Fixed Ticker example&#13;&#10;&#13;&#10;* Modified Ticker example&#13;&#10;&#13;&#10;* Fixed LED_BUILTIN err for ESP32&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Jan Procházka &lt;90197375+P-R-O-C-H-Y@users.noreply.github.com&gt;&#13;&#10;&#13;&#10;* setPins fix ESP32 &quot;specified pins are not supported by this chip.&quot; (#7646)&#13;&#10;&#13;&#10;[ESP32: SDMMCFS::begin hardcodes the usage of slot 1, only check if the pins match slot 1 pins.]&#13;&#10;&#13;&#10;setPins() was testing pins D1, D2 and D3 all against D1 ... fine in 1 pin mode when all are -1 not so much if you're trying to get 4 pin mode working.&#13;&#10;I now see this function doesn't really do anything on the ESP32...accept now correctly checks that you are trying to use the slot 1 pins.&#13;&#10;&#13;&#10;Co-authored-by: Jan Procházka &lt;90197375+P-R-O-C-H-Y@users.noreply.github.com&gt;&#13;&#10;&#13;&#10;* Allow passing IP as connect method parameter in WiFiClientSecure and skip unnecessary host-ip conversions (#7643)&#13;&#10;&#13;&#10;* Add LED_BUILTIN* definitions and initialization for LEDs to stop them floating. (#7636)&#13;&#10;&#13;&#10;Co-authored-by: Rodrigo Garcia &lt;rodrigo.garcia@espressif.com&gt;&#13;&#10;&#13;&#10;* Expand path to tinuf2 image when checking existence in platformio-build.py (#7631)&#13;&#10;&#13;&#10;* Expand path to tinuf2 image when checking existence&#13;&#10;&#13;&#10;* More isFiles fixed&#13;&#10;&#13;&#10;* Remove (useless) trailing semicolon from Print.cpp (#7622)&#13;&#10;&#13;&#10;* ADD: New variant Edgebox-ESP-100 (#7771)&#13;&#10;&#13;&#10;* ADD: New variant Edgebox-ESP-100&#13;&#10;&#13;&#10;* FIX: Edgebox-ESP-100 Board.txt usb mode option change back to default value as ESP32S3&#13;&#10;&#13;&#10;* Add Crabik Slot ESP32-S3 board (#7790)&#13;&#10;&#13;&#10;* Added Crabik Slot ESP32-S3&#13;&#10;&#13;&#10;* Adding CPU frequency settings and removing excess from partition scheme settings&#13;&#10;&#13;&#10;* new variant LilyGO T-Display-S3 (#7763)&#13;&#10;&#13;&#10;* new variant LilyGO T-Display-S3&#13;&#10;&#13;&#10;https://github.com/Xinyuan-LilyGO/T-Display-S3&#13;&#10;&#13;&#10;* Add boards.txt definition&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Me No Dev &lt;me-no-dev@users.noreply.github.com&gt;&#13;&#10;&#13;&#10;* Update get.py to support Apple ARM64&#13;&#10;&#13;&#10;* Update package_esp32_index.template.json&#13;&#10;&#13;&#10;* WString Return bool (#7774)&#13;&#10;&#13;&#10;* Add Roboheart Hercules development board to the esp32-core (#7672)&#13;&#10;&#13;&#10;* added Roboheart Hercules pin definitions and board.txt entries&#13;&#10;&#13;&#10;* added package_roboheat.json for prototyping&#13;&#10;&#13;&#10;* Roboheart Hercules pins&#13;&#10;&#13;&#10;* Updated the pins&#13;&#10;&#13;&#10;* Delete package_roboheart.json&#13;&#10;&#13;&#10;* Requested changes&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: renebohne &lt;rene.bohne@gmail.com&gt;&#13;&#10;&#13;&#10;* Reword &quot;ESP-IDF as Component&quot; (#7812)&#13;&#10;&#13;&#10;I think &quot;Arduino as an ESP-IDF component&quot; or just &quot;As ESP-IDF component&quot; instead of  &quot;ESP-IDF as Component&quot; is more correct way to name the link.&#13;&#10;&#13;&#10;1. &quot;ESP-IDF as Component&quot; would imply that ESP-IDF is some sort of library for Arduino, which is (IMO) misleading, because it's true the other way around.&#13;&#10;2. It's written as &quot;Arduino as an ESP-IDF component&quot; on the webpage it points to as well.&#13;&#10;&#13;&#10;- Also I removed the capitalization from &quot;Component&quot; as I have not found a reason why is it capitalized.&#13;&#10;&#13;&#10;* add new board Adafruit Feather ESP32-S3 Reverse TFT (#7811)&#13;&#10;&#13;&#10;* Multi threading examples (tasks, queues, semaphores, mutexes) (#7660)&#13;&#10;&#13;&#10;* Moved and renamed example ESP32/FreeRTOS to MultiThreading/BasicMultiThreading&#13;&#10;&#13;&#10;* Added dummy files&#13;&#10;&#13;&#10;* Modified original example&#13;&#10;&#13;&#10;* Fixed BasicMultiThreading.ino&#13;&#10;&#13;&#10;* Added Example demonstrating use of queues&#13;&#10;&#13;&#10;* Extended info in BasicMultiThreading&#13;&#10;&#13;&#10;* Renamed Queues to singular Queue&#13;&#10;&#13;&#10;* Added Mutex example&#13;&#10;&#13;&#10;* Added Semaphore example&#13;&#10;&#13;&#10;* Moved info from example to README&#13;&#10;&#13;&#10;* Moved doc from Mutex to README&#13;&#10;&#13;&#10;* Added Queue README&#13;&#10;&#13;&#10;* Removed unecesary text&#13;&#10;&#13;&#10;* Fixed grammar&#13;&#10;&#13;&#10;* Increased stack size for Sempahore example&#13;&#10;&#13;&#10;* Added headers into .ino files&#13;&#10;&#13;&#10;* Added word Example at the end of title in README&#13;&#10;&#13;&#10;* removed unused line&#13;&#10;&#13;&#10;* Added forgotten README&#13;&#10;&#13;&#10;* Modified BasicMultiThreading example&#13;&#10;&#13;&#10;* Added missing S3 entry in README&#13;&#10;&#13;&#10;* moved location&#13;&#10;&#13;&#10;* Update ESP-IDF libs&#13;&#10;&#13;&#10;* Update CMakeLists.txt&#13;&#10;&#13;&#10;* Update esptool to v4.4&#13;&#10;&#13;&#10;* Add function timerAttachInterruptFlag (#7809)&#13;&#10;&#13;&#10;* Update esptool to v4.5&#13;&#10;&#13;&#10;* ADC refactoring (#7827)&#13;&#10;&#13;&#10;* Adc refactored + periman implementation&#13;&#10;&#13;&#10;Peripheral manager still needs to be checked if the implementation is right.&#13;&#10;&#13;&#10;* switched to working solution for milivolts read&#13;&#10;&#13;&#10;* Periman detachbus fix&#13;&#10;&#13;&#10;* coding style&#13;&#10;&#13;&#10;* fix CI warnings&#13;&#10;&#13;&#10;* fix FreeRTOS example&#13;&#10;&#13;&#10;* Update ETH.cpp&#13;&#10;&#13;&#10;* Update FunctionalInterruptStruct.ino&#13;&#10;&#13;&#10;* Update package_esp32_index.template.json&#13;&#10;&#13;&#10;* Update package_esp32_index.template.json&#13;&#10;&#13;&#10;* Fixes for the latest IDF v5.1&#13;&#10;&#13;&#10;* update esp-idf libs and toolchain&#13;&#10;&#13;&#10;* Turn OFF auto crystal frequency for ESP32 (needed by TWAI)&#13;&#10;&#13;&#10;* Update examples&#13;&#10;&#13;&#10;* Switch build to mostly use flags from files&#13;&#10;&#13;&#10;Includes can not be done this way&#13;&#10;&#13;&#10;* Reorganize flag files&#13;&#10;&#13;&#10;* Optimize chip build flags further&#13;&#10;&#13;&#10;* Revert defines from file. MBEDTLS_CONFIG_FILE does not properly expand&#13;&#10;&#13;&#10;* Add support for includes and defines from file&#13;&#10;&#13;&#10;* Replace old sdk path references in platform.txt&#13;&#10;&#13;&#10;* use gcc-ar (#8013)&#13;&#10;&#13;&#10;* Makes F_CPU generic for all SoC (#8007)&#13;&#10;&#13;&#10;Based on CONFIG_ESP_DEFAULT_CPU_FREQ_MHZ that is correctly defined in the sdkconfig file for each SoC.&#13;&#10;&#13;&#10;* TIMER refactoring (#7904)&#13;&#10;&#13;&#10;* refactor using GPtimer&#13;&#10;&#13;&#10;* Updated timer HW test&#13;&#10;&#13;&#10;* fix examples&#13;&#10;&#13;&#10;* Add v2.0.7 in issue template (#7871)&#13;&#10;&#13;&#10;* refactor using GPtimer&#13;&#10;&#13;&#10;* Updated timer HW test&#13;&#10;&#13;&#10;* fix examples&#13;&#10;&#13;&#10;* Revert &quot;Add v2.0.7 in issue template (#7871)&quot;&#13;&#10;&#13;&#10;This reverts commit fcc3b17d62ff57861f8913ca1f142fd5163b7457.&#13;&#10;&#13;&#10;* Update upload-artifact to v3 in HW CI&#13;&#10;&#13;&#10;* Revert &quot;Update upload-artifact to v3 in HW CI&quot;&#13;&#10;&#13;&#10;This reverts commit 1ba228071718ba37c4e26d98db22f77b2a7364a6.&#13;&#10;&#13;&#10;* replace resolution with frequency&#13;&#10;&#13;&#10;* remove count_down option&#13;&#10;&#13;&#10;* countup removed from examples + header&#13;&#10;&#13;&#10;* Refactored timer object&#13;&#10;&#13;&#10;* code cleanup + examples and tests fixes&#13;&#10;&#13;&#10;* TimerAlarm fix&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Vojtěch Bartoška &lt;76958047+VojtechBartoska@users.noreply.github.com&gt;&#13;&#10;&#13;&#10;* [Docs] ADC and Timer API Update (+some docs fixes) (#7906)&#13;&#10;&#13;&#10;* updated docs&#13;&#10;&#13;&#10;* remove hall sensor docs&#13;&#10;&#13;&#10;Removed Hall sensor documentation as its no longer supported in IDF-5&#13;&#10;&#13;&#10;* Fixed ESPNow examples location in docs&#13;&#10;&#13;&#10;* Last timer refactored API + gpio small fix&#13;&#10;&#13;&#10;* AlarmWrite fix&#13;&#10;&#13;&#10;* Fixes APLL/PLL with RTC Frequency (#8025)&#13;&#10;&#13;&#10;log_d() was displaying APLL for any SoC, but S3 and C3 has not such option, causing compilation errors.&#13;&#10;&#13;&#10;* Update IDF libs and fix OPI PSRAM on S3&#13;&#10;&#13;&#10;* Add setMode function HardwareSerial.c to set the esp32 uart mode for use with RS485 auto RTS (#7935)&#13;&#10;&#13;&#10;* Added setMode function to set the esp32 uart mode&#13;&#10;&#13;&#10;Used to set the esp32 uart mode for use with RS485 Half Duplex and the auto RTS pin mode. This will set/clear the RTS pin output to control the RE/DE pin on most RS485 chips.&#13;&#10;&#13;&#10;* Add Success (bool) return in some functions&#13;&#10;&#13;&#10;* Add Success (bool) return code to some functions&#13;&#10;&#13;&#10;* Add Success (bool) return to some functions&#13;&#10;&#13;&#10;* Add Success (bool) return to some functions&#13;&#10;&#13;&#10;* Fix uartSetRxTimeout return type&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Rodrigo Garcia &lt;rodrigo.garcia@espressif.com&gt;&#13;&#10;&#13;&#10;* Add support for esp-elf-gdb&#13;&#10;&#13;&#10;* WFG Crashfix (#8044)&#13;&#10;&#13;&#10;* Update component libs&#13;&#10;&#13;&#10;* IDF release/v5.1 (#8061)&#13;&#10;&#13;&#10;* IDF release/v5.1 bb9200acec&#13;&#10;&#13;&#10;* Update Esp.cpp&#13;&#10;&#13;&#10;* IDF release/v5.1 420ebd208a&#13;&#10;&#13;&#10;* Update esp32-hal-psram.c&#13;&#10;&#13;&#10;* Switch SDK to be an external package&#13;&#10;&#13;&#10;* fix path (#8096)&#13;&#10;&#13;&#10;* Makes UART work at any APB Frequency (#8097)&#13;&#10;&#13;&#10;Fixes HardwareSerial to work with IDF 5.1 on any CPU/APB Frequency (240MHz to 10MHZ), including user created low power modes.&#13;&#10;&#13;&#10;* Add required callbacks for TinyUSB DFU&#13;&#10;&#13;&#10;* Update version to 3.0.0&#13;&#10;&#13;&#10;* Add ESP.getCoreVersion() and update ESP.getChipModel()&#13;&#10;&#13;&#10;* Update timer hal for the latest 5.1&#13;&#10;&#13;&#10;* Use separate RX and TX buffer sizes in HTTP client&#13;&#10;&#13;&#10;optimizes download by allowing up to 4K packets to be received&#13;&#10;&#13;&#10;* Rename clock tree enum name in latest 5.1&#13;&#10;&#13;&#10;* ESP32-H4 support was removed in ESP-IDF v5.1&#13;&#10;&#13;&#10;* IDF release/v5.1 2004bf4e11 (#8165)&#13;&#10;&#13;&#10;* Deinit previous bus first (#8180)&#13;&#10;&#13;&#10;* TIMER - add timer_started flag, fix timerEnd() + timer HW test (#8135)&#13;&#10;&#13;&#10;* Add timer_started flag and stop before disable&#13;&#10;&#13;&#10;* Fix timer HW test&#13;&#10;&#13;&#10;* TOUCH - Peripheral manager implementation (#8129)&#13;&#10;&#13;&#10;* Touch periman implemented&#13;&#10;&#13;&#10;* Deinit previous bus first&#13;&#10;&#13;&#10;* LEDC Refactoring - Peripheral manager implemented (#8126)&#13;&#10;&#13;&#10;* LEDC periman implementation&#13;&#10;&#13;&#10;* Fix examples&#13;&#10;&#13;&#10;* Rework tone&#13;&#10;&#13;&#10;* Update ledc docs&#13;&#10;&#13;&#10;* fix missing bracket&#13;&#10;&#13;&#10;* Update analog funtions esp32-hal.h&#13;&#10;&#13;&#10;* Update CameraWebServer example&#13;&#10;&#13;&#10;* Fix HiFreq_ADC example&#13;&#10;&#13;&#10;* minor fixes - typos&#13;&#10;&#13;&#10;* Avoid calling tone/notone when tone already runs on dif. pin&#13;&#10;&#13;&#10;* Remove unused channels_resolution&#13;&#10;&#13;&#10;* GPIO - Peripheral manager implementation (#8179)&#13;&#10;&#13;&#10;* periman-implementation&#13;&#10;&#13;&#10;* fix RGB_BUILTIN and remove space&#13;&#10;&#13;&#10;* Enforces more consistency into Peripheral Manager (#8188)&#13;&#10;&#13;&#10;* Avoid log_i() message the first time a bus is assigned&#13;&#10;&#13;&#10;* Prevent operation with ESP32_BUS_TYPE_INIT&#13;&#10;&#13;&#10;* keeps coding style&#13;&#10;&#13;&#10;* do not print messages on INIT bus type&#13;&#10;&#13;&#10;* [Arduino Core 3.0.0] RMT IDF5.1 Refactoring (#7994)&#13;&#10;&#13;&#10;* RMT IDF5.1 refactoring&#13;&#10;&#13;&#10;* Fixes initial value setting&#13;&#10;&#13;&#10;* removed rmtRead() with user callback&#13;&#10;&#13;&#10;* simplify/remove Read data structure&#13;&#10;&#13;&#10;* Deep API simplification&#13;&#10;&#13;&#10;* fixes the examples&#13;&#10;&#13;&#10;* fix rmt.h&#13;&#10;&#13;&#10;* adds support to APB different frequencies&#13;&#10;&#13;&#10;* fixes CI and not defined RGB_BUILTIN&#13;&#10;&#13;&#10;* new RMT API and examples&#13;&#10;&#13;&#10;* fixing commentaties&#13;&#10;&#13;&#10;* Update esp32-hal-rgb-led.c&#13;&#10;&#13;&#10;* changes Filter API&#13;&#10;&#13;&#10;* Fixes example with Filter API&#13;&#10;&#13;&#10;* Update PlatformIO scripts for the upcoming 3.0 core (#8183)&#13;&#10;&#13;&#10;* Update PlatformIO scripts for the upcoming 3.0 core&#13;&#10;&#13;&#10;* Dynamically select proper framework-arduinoespressif32-libs package&#13;&#10;&#13;&#10;With this change the dev-platform will be dynamically configured to&#13;&#10;pull the latest .zip package with precompiled libraries from extracted from&#13;&#10;package_esp32_index.template.json&#13;&#10;&#13;&#10;* free memory on detach (#8264)&#13;&#10;&#13;&#10;* SPI - Peripheral manager implementation  (#8255)&#13;&#10;&#13;&#10;* spi periman implementation&#13;&#10;&#13;&#10;* fix header file&#13;&#10;&#13;&#10;* remove unused struct&#13;&#10;&#13;&#10;* fix missing braces&#13;&#10;&#13;&#10;* Update esp32-hal-rmt.c (#8216)&#13;&#10;&#13;&#10;Optimizing Peripheral Manager Test&#13;&#10;&#13;&#10;* I2C - Peripheral manager implementation (#8220)&#13;&#10;&#13;&#10;* i2c-master periman initial commit&#13;&#10;&#13;&#10;* i2c-master make detachbus static + comment remove&#13;&#10;&#13;&#10;* i2c-slave periman implementation&#13;&#10;&#13;&#10;* SetPinBus to INIT on i2cDeinits&#13;&#10;&#13;&#10;* Fix slave pins deinit&#13;&#10;&#13;&#10;* remove dbg logs&#13;&#10;&#13;&#10;* set ret to ESP_FAIL instead of returning&#13;&#10;&#13;&#10;* Fix warnings in hal-spi caused by pariman transition&#13;&#10;&#13;&#10;* Update esptool.py to version 4.6&#13;&#10;&#13;&#10;* Add platform support for ESP_SR&#13;&#10;&#13;&#10;* Add USB Type and valid pin check to periman&#13;&#10;&#13;&#10;* replace bus with spi-&gt;num+1 (#8279)&#13;&#10;&#13;&#10;* Remove default pins from SPI HAL&#13;&#10;&#13;&#10;* Add commented out handlers for esptool.js in TinyUSB CDC&#13;&#10;&#13;&#10;For future use&#13;&#10;&#13;&#10;* Add build defines for host os and fqbn (for debug purposes)&#13;&#10;&#13;&#10;* Provide proper memory caps total size&#13;&#10;&#13;&#10;* Update Esp.cpp&#13;&#10;&#13;&#10;* SDMMC - Peripheral manager implementation (#8289)&#13;&#10;&#13;&#10;* sdmmc periman implemented&#13;&#10;&#13;&#10;* save pins when SOC_SDMMC_USE_IOMUX&#13;&#10;&#13;&#10;* IDF release/v5.1 4bc762621d (#8292)&#13;&#10;&#13;&#10;* Adds missing pinMode (#8312)&#13;&#10;&#13;&#10;* Adds missing pinMode&#13;&#10;&#13;&#10;The example code lacks a pinMode() to initialize the GPIO 0 (button). In Arduino Core 3.0.0, it prints an error message when trying to read a not initialized GPIO.&#13;&#10;&#13;&#10;* Update KeyboardLogout.ino&#13;&#10;&#13;&#10;Adds &lt;buttonPin&gt; to keep code standard&#13;&#10;&#13;&#10;* Update KeyboardReprogram.ino&#13;&#10;&#13;&#10;Adds &lt;buttonPin&gt; to keep code standard&#13;&#10;&#13;&#10;* LEDC Fade implementation (#8338)&#13;&#10;&#13;&#10;* fade API + pointer fixes&#13;&#10;&#13;&#10;* Add fade api&#13;&#10;&#13;&#10;* Add fade example&#13;&#10;&#13;&#10;* update ledc docs&#13;&#10;&#13;&#10;* remove unused variables&#13;&#10;&#13;&#10;* fix path to example&#13;&#10;&#13;&#10;* Adds USB to Peripheral Manager - Arduino Core 3.0.0 (#8335)&#13;&#10;&#13;&#10;* ETHERNET - Peripheral manager implementation (#8297)&#13;&#10;&#13;&#10;* Peripheral manager implemented&#13;&#10;&#13;&#10;* remove unused variable&#13;&#10;&#13;&#10;* Add all RMII pins&#13;&#10;&#13;&#10;* fix typo&#13;&#10;&#13;&#10;* Adds HardwareSerial to Peripheral Manager Arduino 3.0.0 (#8328)&#13;&#10;&#13;&#10;* Do not limit ETHERNET in periman to only ESP32. SPI is also an option&#13;&#10;&#13;&#10;* Initial support for ESP32-C6 (#8337)&#13;&#10;&#13;&#10;* Add checks for SOC defines (#8351)&#13;&#10;&#13;&#10;* Add checks for SOC defines&#13;&#10;&#13;&#10;* Add SoC checks to BLE library&#13;&#10;&#13;&#10;* fix i2c compilation error&#13;&#10;&#13;&#10;* fix wrong placement of include&#13;&#10;&#13;&#10;* add check to SPI library&#13;&#10;&#13;&#10;* add check to USB library&#13;&#10;&#13;&#10;* add checks to Wire library&#13;&#10;&#13;&#10;* Feature/esp32h2 support (#8373)&#13;&#10;&#13;&#10;* Initial support for ESP32H2&#13;&#10;&#13;&#10;* Additional changes for ESP32H2&#13;&#10;&#13;&#10;* Update libs for ESP32H2&#13;&#10;&#13;&#10;* Fix flashing on ESP32-H2&#13;&#10;&#13;&#10;* Fix GPIO Configs for ESP32-C6 and ESP32-H2&#13;&#10;&#13;&#10;* Update Timer test sketch&#13;&#10;&#13;&#10;* Fix upload flash parameters&#13;&#10;&#13;&#10;* Use ets_write_char_uart instead of ets_printf in log_printfv&#13;&#10;&#13;&#10;* Print full chip report when log level is sufficient (#8282)&#13;&#10;&#13;&#10;* ESP32-C3 does not have ets_write_char_uart&#13;&#10;&#13;&#10;* Fix BLE gap event name&#13;&#10;&#13;&#10;* HW Testing - Pytest update (#8389)&#13;&#10;&#13;&#10;* update tests requirements&#13;&#10;&#13;&#10;* remove already handled components&#13;&#10;&#13;&#10;* Update version of pytest&#13;&#10;&#13;&#10;* Add missing ESP32-H2 to hil.yml&#13;&#10;&#13;&#10;* Updated FreeRTOS names (#8418)&#13;&#10;&#13;&#10;* HW Testing -  ESP32-C6 + ESP32-H2 fixes (#8404)&#13;&#10;&#13;&#10;* add C6/H2 to tests cfg.json&#13;&#10;&#13;&#10;* remove ,&#13;&#10;&#13;&#10;* workflow runs-on runner by matrix&#13;&#10;&#13;&#10;* Add need for arduino tag to select runner&#13;&#10;&#13;&#10;* Add cryptography to requirements.txt&#13;&#10;&#13;&#10;* Removed duplicate TX1 define for H2 (#8402)&#13;&#10;&#13;&#10;* Fix broken examples&#13;&#10;&#13;&#10;* Fixes RMT filter &amp; idle timing and setup (#8359)&#13;&#10;&#13;&#10;* Fixes Filter and Idle parameter to uint32&#13;&#10;&#13;&#10;* Fixes Filter and Idle setup&#13;&#10;&#13;&#10;* Fixes it to 5.1Libs branch&#13;&#10;&#13;&#10;* fix RMT CLK source and Filter API&#13;&#10;&#13;&#10;* fixes missing ;&#13;&#10;&#13;&#10;* fixes missing ;&#13;&#10;&#13;&#10;* fixes RMT example&#13;&#10;&#13;&#10;* IDF release/v5.1 a7b62bbcaf (#8438)&#13;&#10;&#13;&#10;* Add workflow to build executables from python scripts (#8290)&#13;&#10;&#13;&#10;* Add workflow to build executables from python scripts&#13;&#10;&#13;&#10;* Push binary to tools&#13;&#10;&#13;&#10;* Enable executable signing on Windows&#13;&#10;&#13;&#10;* Update get.py&#13;&#10;&#13;&#10;* Push binary to tools&#13;&#10;&#13;&#10;* Try with multiple files&#13;&#10;&#13;&#10;* Try more actions&#13;&#10;&#13;&#10;* Try powershell&#13;&#10;&#13;&#10;* Restore tools so they do not get rebuilt&#13;&#10;&#13;&#10;* Finalize scripts&#13;&#10;&#13;&#10;* Push binary to tools&#13;&#10;&#13;&#10;* App rollback should be after PSRAM is initialized&#13;&#10;&#13;&#10;* Correcting RX1 to GPIO4 and TX1 to GPIO5 to be consistent with documentation. Previous pin use works but is inconsistent with C6 docs.&#13;&#10;&#13;&#10;* Fixes Memory Leak (#8486)&#13;&#10;&#13;&#10;* fixes preprocessor test (#8485)&#13;&#10;&#13;&#10;* fixes preprocessor test&#13;&#10;&#13;&#10;When using `#define USE_SOFT_AP` &#13;&#10;Change&#13;&#10;`&amp;&amp; not USE_SOFT_AP` ==&gt; `&amp;&amp; !defined(USE_SOFT_AP)`&#13;&#10;&#13;&#10;* Adds any BLE capable device in WiFiProv.ino&#13;&#10;&#13;&#10;Removing ESP32 restriction for BLE Provisioning.&#13;&#10;&#13;&#10;* fix flash mode read out for C6&#13;&#10;&#13;&#10;* Add option for custom partitions without restrictions&#13;&#10;&#13;&#10;* SD_MMC update (#8298)&#13;&#10;&#13;&#10;* Updated SD_MMC lib and examples&#13;&#10;&#13;&#10;* Removed getter implementation and commented usage in examples&#13;&#10;&#13;&#10;* squashed updates&#13;&#10;&#13;&#10;* IDF release/v5.1 f0437b945f (#8599)&#13;&#10;&#13;&#10;* Update package_esp32_index.template.json&#13;&#10;&#13;&#10;* Fix printf format build error in BTAdvertisedDeviceSet.cpp&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Pedro Minatel &lt;pedro.minatel@espressif.com&gt;&#13;&#10;Co-authored-by: Rodrigo Garcia &lt;rodrigo.garcia@espressif.com&gt;&#13;&#10;Co-authored-by: Ha Thach &lt;thach@tinyusb.org&gt;&#13;&#10;Co-authored-by: Martin Turski &lt;quiret@vfemail.net&gt;&#13;&#10;Co-authored-by: raviypujar &lt;raviypujar@gmail.com&gt;&#13;&#10;Co-authored-by: Jason2866 &lt;24528715+Jason2866@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: Tomáš Pilný &lt;34927466+PilnyTomas@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: Jan Procházka &lt;90197375+P-R-O-C-H-Y@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: Daniel Berlin &lt;dberlin@dberlin.org&gt;&#13;&#10;Co-authored-by: Nima Askari (نیما عسکری) &lt;nimaltd@yahoo.com&gt;&#13;&#10;Co-authored-by: rtpmsys &lt;106180646+rtpmsys@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: bytiful &lt;55647551+bytiful@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: tmfarrington &lt;tmfarrington@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: Krzysiek S &lt;chris.streh@gmail.com&gt;&#13;&#10;Co-authored-by: surt &lt;carl.olsson@gmail.com&gt;&#13;&#10;Co-authored-by: Max Scheffler &lt;max.scheffler@pm.me&gt;&#13;&#10;Co-authored-by: Clemens Kirchgatterer &lt;clemens@1541.org&gt;&#13;&#10;Co-authored-by: Peter Pan's Techland &lt;twinkle-pirate@hotmail.com&gt;&#13;&#10;Co-authored-by: Roman &lt;programmeofficemilkyway@gmail.com&gt;&#13;&#10;Co-authored-by: Eistee &lt;Eistee82@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: David McCurley &lt;44048235+mrengineer7777@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: Gaya3N25 &lt;30388176+Gaya3N25@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: renebohne &lt;rene.bohne@gmail.com&gt;&#13;&#10;Co-authored-by: Olivér Remény &lt;25034625+remenyo@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: davidk88 &lt;david.kotar@gmail.com&gt;&#13;&#10;Co-authored-by: Vojtěch Bartoška &lt;76958047+VojtechBartoska@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: James Armstrong &lt;jamesarmstrong3@me.com&gt;&#13;&#10;Co-authored-by: Valerii Koval &lt;valeros@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: Peter G. Jensen &lt;root@petergjoel.dk&gt;" />
			<int key="additions" value="5" />
			<int key="deletions" value="2" />
			<string key="diff" value='@@ -4,6 +4,9 @@&#10;  *  Created on: Mar 22, 2017&#10;  *      Author: kolban&#10;  */&#10;+#include "soc/soc_caps.h"&#10;+#if SOC_BLE_SUPPORTED&#10;+&#10; #include "sdkconfig.h"&#10; #if defined(CONFIG_BLUEDROID_ENABLED)&#10; #include &lt;esp_bt.h&gt;&#10;@@ -593,5 +596,5 @@ std::string BLEClient::toString() {&#10; &#9;return res;&#10; } // toString&#10; &#10;-&#10;-#endif // CONFIG_BLUEDROID_ENABLED&#10;+#endif /* CONFIG_BLUEDROID_ENABLED */&#10;+#endif /* SOC_BLE_SUPPORTED */&#10;' />
			<string key="comment_change" value="False" />
		</event>
		<event>
			<string key="timestamp" value="2023-10-06T15:50:11+03:00" />
			<string key="author" value="Me No Dev" />
			<string key="change_type" value="MODIFY" />
			<string key="commit_message" value="BLE upgrades (#8724)&#10;&#10;* Renamed library description&#13;&#10;&#13;&#10;* Updated Eddystone URL (not complete)&#13;&#10;&#13;&#10;* Updated Eddystone URL&#13;&#10;&#13;&#10;* Updated Eddystone classes and beacon scanner&#13;&#10;&#13;&#10;* Renamed examples - removing prefix BLE_&#13;&#10;&#13;&#10;* Renamed Beacon_Scanner&#13;&#10;&#13;&#10;* Updated TLM&#13;&#10;&#13;&#10;* Changed std::string to Arduino String&#13;&#10;&#13;&#10;* More std::string -&gt; String&#13;&#10;&#13;&#10;* Changed String in forgotten file&#13;&#10;&#13;&#10;* Changed .data to .c_str&#13;&#10;&#13;&#10;* Reverting single String type change&#13;&#10;&#13;&#10;* Few more fixes related to the String transition&#13;&#10;&#13;&#10;* Fixed URL and Utils error&#13;&#10;&#13;&#10;* Added and modified compatibility safeguards for BLE5 examples&#13;&#10;&#13;&#10;* Added #include WString.h&#13;&#10;&#13;&#10;* Fixed Beacon_Scanner&#13;&#10;&#13;&#10;* Remove commented include&#13;&#10;&#13;&#10;Co-authored-by: Lucas Saavedra Vaz &lt;lucassvaz@yahoo.com.br&gt;&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Tomas Pilny &lt;tomas.pilny@espressif.com&gt;&#13;&#10;Co-authored-by: Lucas Saavedra Vaz &lt;lucassvaz@yahoo.com.br&gt;" />
			<int key="additions" value="364" />
			<int key="deletions" value="364" />
			<string key="diff" value="@@ -46,11 +46,11 @@&#10;  */&#10; &#10; BLEClient::BLEClient() {&#10;-&#9;m_pClientCallbacks = nullptr;&#10;-&#9;m_conn_id          = ESP_GATT_IF_NONE;&#10;-&#9;m_gattc_if         = ESP_GATT_IF_NONE;&#10;-&#9;m_haveServices     = false;&#10;-&#9;m_isConnected      = false;  // Initially, we are flagged as not connected.&#10;+  m_pClientCallbacks = nullptr;&#10;+  m_conn_id          = ESP_GATT_IF_NONE;&#10;+  m_gattc_if         = ESP_GATT_IF_NONE;&#10;+  m_haveServices     = false;&#10;+  m_isConnected      = false;  // Initially, we are flagged as not connected.&#10; } // BLEClient&#10; &#10; &#10;@@ -58,13 +58,13 @@ BLEClient::BLEClient() {&#10;  * @brief Destructor.&#10;  */&#10; BLEClient::~BLEClient() {&#10;-&#9;// We may have allocated service references associated with this client.  Before we are finished&#10;-&#9;// with the client, we must release resources.&#10;-&#9;for (auto &amp;myPair : m_servicesMap) {&#10;-&#9;   delete myPair.second;&#10;-&#9;}&#10;-&#9;m_servicesMap.clear();&#10;-&#9;m_servicesMapByInstID.clear();&#10;+  // We may have allocated service references associated with this client.  Before we are finished&#10;+  // with the client, we must release resources.&#10;+  for (auto &amp;myPair : m_servicesMap) {&#10;+     delete myPair.second;&#10;+  }&#10;+  m_servicesMap.clear();&#10;+  m_servicesMapByInstID.clear();&#10; } // ~BLEClient&#10; &#10; &#10;@@ -73,23 +73,23 @@ BLEClient::~BLEClient() {&#10;  *&#10;  */&#10; void BLEClient::clearServices() {&#10;-&#9;log_v(&quot;&gt;&gt; clearServices&quot;);&#10;-&#9;// Delete all the services.&#10;-&#9;for (auto &amp;myPair : m_servicesMap) {&#10;-&#9;   delete myPair.second;&#10;-&#9;}&#10;-&#9;m_servicesMap.clear();&#10;-&#9;m_haveServices = false;&#10;-&#9;log_v(&quot;&lt;&lt; clearServices&quot;);&#10;+  log_v(&quot;&gt;&gt; clearServices&quot;);&#10;+  // Delete all the services.&#10;+  for (auto &amp;myPair : m_servicesMap) {&#10;+     delete myPair.second;&#10;+  }&#10;+  m_servicesMap.clear();&#10;+  m_haveServices = false;&#10;+  log_v(&quot;&lt;&lt; clearServices&quot;);&#10; } // clearServices&#10; &#10; /**&#10;  * Add overloaded function to ease connect to peer device with not public address&#10;  */&#10; bool BLEClient::connect(BLEAdvertisedDevice* device) {&#10;-&#9;BLEAddress address =  device-&gt;getAddress();&#10;-&#9;esp_ble_addr_type_t type = device-&gt;getAddressType();&#10;-&#9;return connect(address, type);&#10;+  BLEAddress address =  device-&gt;getAddress();&#10;+  esp_ble_addr_type_t type = device-&gt;getAddressType();&#10;+  return connect(address, type);&#10; }&#10; &#10; /**&#10;@@ -98,59 +98,59 @@ bool BLEClient::connect(BLEAdvertisedDevice* device) {&#10;  * @return True on success.&#10;  */&#10; bool BLEClient::connect(BLEAddress address, esp_ble_addr_type_t type) {&#10;-&#9;log_v(&quot;&gt;&gt; connect(%s)&quot;, address.toString().c_str());&#10;+  log_v(&quot;&gt;&gt; connect(%s)&quot;, address.toString().c_str());&#10; &#10; // We need the connection handle that we get from registering the application.  We register the app&#10; // and then block on its completion.  When the event has arrived, we will have the handle.&#10;-&#9;m_appId = BLEDevice::m_appId++;&#10;-&#9;BLEDevice::addPeerDevice(this, true, m_appId);&#10;-&#9;m_semaphoreRegEvt.take(&quot;connect&quot;);&#10;-&#10;-&#9;// clearServices(); // we dont need to delete services since every client is unique?&#10;-&#9;esp_err_t errRc = ::esp_ble_gattc_app_register(m_appId);&#10;-&#9;if (errRc != ESP_OK) {&#10;-&#9;&#9;log_e(&quot;esp_ble_gattc_app_register: rc=%d %s&quot;, errRc, GeneralUtils::errorToString(errRc));&#10;-&#9;&#9;BLEDevice::removePeerDevice(m_appId, true);&#10;-&#9;&#9;return false;&#10;-&#9;}&#10;-&#10;-&#9;uint32_t rc = m_semaphoreRegEvt.wait(&quot;connect&quot;);&#10;-&#10;-&#9;if (rc != ESP_GATT_OK) {&#10;-&#9;&#9;// fixes ESP_GATT_NO_RESOURCES error mostly&#10;-&#9;&#9;log_e(&quot;esp_ble_gattc_app_register_error: rc=%d&quot;, rc);&#10;-&#9;&#9;BLEDevice::removePeerDevice(m_appId, true);&#10;-&#9;&#9;// not sure if this is needed here&#10;-&#9;&#9;// esp_ble_gattc_app_unregister(m_gattc_if);&#10;-&#9;&#9;// m_gattc_if = ESP_GATT_IF_NONE;&#10;-&#9;&#9;return false;&#10;-&#9;}&#10;-&#10;-&#9;m_peerAddress = address;&#10;-&#10;-&#9;// Perform the open connection request against the target BLE Server.&#10;-&#9;m_semaphoreOpenEvt.take(&quot;connect&quot;);&#10;-&#9;errRc = ::esp_ble_gattc_open(&#10;-&#9;&#9;m_gattc_if,&#10;-&#9;&#9;*getPeerAddress().getNative(), // address&#10;-&#9;&#9;type,          // Note: This was added on 2018-04-03 when the latest ESP-IDF was detected to have changed the signature.&#10;-&#9;&#9;1                              // direct connection &lt;-- maybe needs to be changed in case of direct indirect connection???&#10;-&#9;);&#10;-&#9;if (errRc != ESP_OK) {&#10;-&#9;&#9;log_e(&quot;esp_ble_gattc_open: rc=%d %s&quot;, errRc, GeneralUtils::errorToString(errRc));&#10;-&#9;&#9;BLEDevice::removePeerDevice(m_appId, true);&#10;-&#9;&#9;return false;&#10;-&#9;}&#10;-&#10;-&#9;rc = m_semaphoreOpenEvt.wait(&quot;connect&quot;);   // Wait for the connection to complete.&#10;-&#9;// check the status of the connection and cleanup in case of failure&#10;-&#9;if (rc != ESP_GATT_OK) {&#10;-&#9;&#9;BLEDevice::removePeerDevice(m_appId, true);&#10;-&#9;&#9;esp_ble_gattc_app_unregister(m_gattc_if);&#10;-&#9;&#9;m_gattc_if = ESP_GATT_IF_NONE;&#10;-&#9;}&#10;-&#9;log_v(&quot;&lt;&lt; connect(), rc=%d&quot;, rc==ESP_GATT_OK);&#10;-&#9;return rc == ESP_GATT_OK;&#10;+  m_appId = BLEDevice::m_appId++;&#10;+  BLEDevice::addPeerDevice(this, true, m_appId);&#10;+  m_semaphoreRegEvt.take(&quot;connect&quot;);&#10;+&#10;+  // clearServices(); // we dont need to delete services since every client is unique?&#10;+  esp_err_t errRc = ::esp_ble_gattc_app_register(m_appId);&#10;+  if (errRc != ESP_OK) {&#10;+    log_e(&quot;esp_ble_gattc_app_register: rc=%d %s&quot;, errRc, GeneralUtils::errorToString(errRc));&#10;+    BLEDevice::removePeerDevice(m_appId, true);&#10;+    return false;&#10;+  }&#10;+&#10;+  uint32_t rc = m_semaphoreRegEvt.wait(&quot;connect&quot;);&#10;+&#10;+  if (rc != ESP_GATT_OK) {&#10;+    // fixes ESP_GATT_NO_RESOURCES error mostly&#10;+    log_e(&quot;esp_ble_gattc_app_register_error: rc=%d&quot;, rc);&#10;+    BLEDevice::removePeerDevice(m_appId, true);&#10;+    // not sure if this is needed here&#10;+    // esp_ble_gattc_app_unregister(m_gattc_if);&#10;+    // m_gattc_if = ESP_GATT_IF_NONE;&#10;+    return false;&#10;+  }&#10;+&#10;+  m_peerAddress = address;&#10;+&#10;+  // Perform the open connection request against the target BLE Server.&#10;+  m_semaphoreOpenEvt.take(&quot;connect&quot;);&#10;+  errRc = ::esp_ble_gattc_open(&#10;+    m_gattc_if,&#10;+    *getPeerAddress().getNative(), // address&#10;+    type,          // Note: This was added on 2018-04-03 when the latest ESP-IDF was detected to have changed the signature.&#10;+    1                              // direct connection &lt;-- maybe needs to be changed in case of direct indirect connection???&#10;+  );&#10;+  if (errRc != ESP_OK) {&#10;+    log_e(&quot;esp_ble_gattc_open: rc=%d %s&quot;, errRc, GeneralUtils::errorToString(errRc));&#10;+    BLEDevice::removePeerDevice(m_appId, true);&#10;+    return false;&#10;+  }&#10;+&#10;+  rc = m_semaphoreOpenEvt.wait(&quot;connect&quot;);   // Wait for the connection to complete.&#10;+  // check the status of the connection and cleanup in case of failure&#10;+  if (rc != ESP_GATT_OK) {&#10;+    BLEDevice::removePeerDevice(m_appId, true);&#10;+    esp_ble_gattc_app_unregister(m_gattc_if);&#10;+    m_gattc_if = ESP_GATT_IF_NONE;&#10;+  }&#10;+  log_v(&quot;&lt;&lt; connect(), rc=%d&quot;, rc==ESP_GATT_OK);&#10;+  return rc == ESP_GATT_OK;&#10; } // connect&#10; &#10; &#10;@@ -159,13 +159,13 @@ bool BLEClient::connect(BLEAddress address, esp_ble_addr_type_t type) {&#10;  * @return N/A.&#10;  */&#10; void BLEClient::disconnect() {&#10;-&#9;log_v(&quot;&gt;&gt; disconnect()&quot;);&#10;-&#9;esp_err_t errRc = ::esp_ble_gattc_close(getGattcIf(), getConnId());&#10;-&#9;if (errRc != ESP_OK) {&#10;-&#9;&#9;log_e(&quot;esp_ble_gattc_close: rc=%d %s&quot;, errRc, GeneralUtils::errorToString(errRc));&#10;-&#9;&#9;return;&#10;-&#9;}&#10;-&#9;log_v(&quot;&lt;&lt; disconnect()&quot;);&#10;+  log_v(&quot;&gt;&gt; disconnect()&quot;);&#10;+  esp_err_t errRc = ::esp_ble_gattc_close(getGattcIf(), getConnId());&#10;+  if (errRc != ESP_OK) {&#10;+    log_e(&quot;esp_ble_gattc_close: rc=%d %s&quot;, errRc, GeneralUtils::errorToString(errRc));&#10;+    return;&#10;+  }&#10;+  log_v(&quot;&lt;&lt; disconnect()&quot;);&#10; } // disconnect&#10; &#10; &#10;@@ -173,190 +173,190 @@ void BLEClient::disconnect() {&#10;  * @brief Handle GATT Client events&#10;  */&#10; void BLEClient::gattClientEventHandler(&#10;-&#9;esp_gattc_cb_event_t      event,&#10;-&#9;esp_gatt_if_t             gattc_if,&#10;-&#9;esp_ble_gattc_cb_param_t* evtParam) {&#10;-&#10;-&#9;log_d(&quot;gattClientEventHandler [esp_gatt_if: %d] ... %s&quot;,&#10;-&#9;&#9;gattc_if, BLEUtils::gattClientEventTypeToString(event).c_str());&#10;-&#10;-&#9;// it is possible to receive events from other connections while waiting for registration&#10;-&#9;if (m_gattc_if == ESP_GATT_IF_NONE &amp;&amp; event != ESP_GATTC_REG_EVT) {&#10;-&#9;&#9;return;&#10;-&#9;}&#10;-&#10;-&#9;// Execute handler code based on the type of event received.&#10;-&#9;switch(event) {&#10;-&#10;-&#9;&#9;case ESP_GATTC_SRVC_CHG_EVT:&#10;-&#9;&#9;&#9;log_i(&quot;SERVICE CHANGED&quot;);&#10;-&#9;&#9;&#9;break;&#10;-&#10;-&#9;&#9;case ESP_GATTC_CLOSE_EVT: {&#10;-&#9;&#9;&#9;&#9;// esp_ble_gattc_app_unregister(m_appId);&#10;-&#9;&#9;&#9;&#9;// BLEDevice::removePeerDevice(m_gattc_if, true);&#10;-&#9;&#9;&#9;break;&#10;-&#9;&#9;}&#10;-&#10;-&#9;&#9;//&#10;-&#9;&#9;// ESP_GATTC_DISCONNECT_EVT&#10;-&#9;&#9;//&#10;-&#9;&#9;// disconnect:&#10;-&#9;&#9;// - esp_gatt_status_t status&#10;-&#9;&#9;// - uint16_t          conn_id&#10;-&#9;&#9;// - esp_bd_addr_t     remote_bda&#10;-&#9;&#9;case ESP_GATTC_DISCONNECT_EVT: {&#10;-&#9;&#9;&#9;&#9;if (evtParam-&gt;disconnect.conn_id != getConnId()) break;&#10;-&#9;&#9;&#9;&#9;// If we receive a disconnect event, set the class flag that indicates that we are&#10;-&#9;&#9;&#9;&#9;// no longer connected.&#10;-&#9;&#9;&#9;&#9;bool m_wasConnected = m_isConnected;&#10;-&#9;&#9;&#9;&#9;m_isConnected = false;&#10;-&#9;&#9;&#9;&#9;esp_ble_gattc_app_unregister(m_gattc_if);&#10;-&#9;&#9;&#9;&#9;m_gattc_if = ESP_GATT_IF_NONE;&#10;-&#9;&#9;&#9;&#9;m_semaphoreOpenEvt.give(ESP_GATT_IF_NONE);&#10;-&#9;&#9;&#9;&#9;m_semaphoreRssiCmplEvt.give();&#10;-&#9;&#9;&#9;&#9;m_semaphoreSearchCmplEvt.give(1);&#10;-&#9;&#9;&#9;&#9;BLEDevice::removePeerDevice(m_appId, true);&#10;-&#9;&#9;&#9;&#9;if (m_wasConnected &amp;&amp; m_pClientCallbacks != nullptr) {&#10;-&#9;&#9;&#9;&#9;&#9;m_pClientCallbacks-&gt;onDisconnect(this);&#10;-&#9;&#9;&#9;&#9;}&#10;-&#9;&#9;&#9;&#9;break;&#10;-&#9;&#9;} // ESP_GATTC_DISCONNECT_EVT&#10;-&#10;-&#9;&#9;//&#10;-&#9;&#9;// ESP_GATTC_OPEN_EVT&#10;-&#9;&#9;//&#10;-&#9;&#9;// open:&#10;-&#9;&#9;// - esp_gatt_status_t status&#10;-&#9;&#9;// - uint16_t          conn_id&#10;-&#9;&#9;// - esp_bd_addr_t     remote_bda&#10;-&#9;&#9;//&#10;-&#9;&#9;case ESP_GATTC_OPEN_EVT: {&#10;-&#9;&#9;&#9;m_conn_id = evtParam-&gt;open.conn_id;&#10;-&#9;&#9;&#9;if (evtParam-&gt;open.status == ESP_GATT_OK) {&#10;-&#9;&#9;&#9;&#9;m_isConnected = true;   // Flag us as connected.&#10;-&#9;&#9;&#9;&#9;if (m_pClientCallbacks != nullptr) {&#10;-&#9;&#9;&#9;&#9;&#9;m_pClientCallbacks-&gt;onConnect(this);&#10;-&#9;&#9;&#9;&#9;}&#10;-&#9;&#9;&#9;} else {&#10;-&#9;&#9;&#9;&#9;log_e(&quot;Failed to connect, status=%s&quot;, GeneralUtils::errorToString(evtParam-&gt;open.status));&#10;-&#9;&#9;&#9;}&#10;-&#9;&#9;&#9;m_semaphoreOpenEvt.give(evtParam-&gt;open.status);&#10;-&#9;&#9;&#9;break;&#10;-&#9;&#9;} // ESP_GATTC_OPEN_EVT&#10;-&#10;-&#10;-&#9;&#9;//&#10;-&#9;&#9;// ESP_GATTC_REG_EVT&#10;-&#9;&#9;//&#10;-&#9;&#9;// reg:&#10;-&#9;&#9;// esp_gatt_status_t status&#10;-&#9;&#9;// uint16_t          app_id&#10;-&#9;&#9;//&#10;-&#9;&#9;case ESP_GATTC_REG_EVT: {&#10;-&#9;&#9;&#9;m_gattc_if = gattc_if;&#10;-&#9;&#9;&#9;// pass on the registration status result, in case of failure&#10;-&#9;&#9;&#9;m_semaphoreRegEvt.give(evtParam-&gt;reg.status);&#10;-&#9;&#9;&#9;break;&#10;-&#9;&#9;} // ESP_GATTC_REG_EVT&#10;-&#10;-&#9;&#9;case ESP_GATTC_CFG_MTU_EVT:&#10;-&#9;&#9;&#9;if (evtParam-&gt;cfg_mtu.conn_id != getConnId()) break;&#10;-&#9;&#9;&#9;if(evtParam-&gt;cfg_mtu.status != ESP_GATT_OK) {&#10;-&#9;&#9;&#9;&#9;log_e(&quot;Config mtu failed&quot;);&#10;-&#9;&#9;&#9;}&#10;-&#9;&#9;&#9;m_mtu = evtParam-&gt;cfg_mtu.mtu;&#10;-&#9;&#9;&#9;break;&#10;-&#10;-&#9;&#9;case ESP_GATTC_CONNECT_EVT: {&#10;-&#9;&#9;&#9;if (evtParam-&gt;connect.conn_id != getConnId()) break;&#10;-&#9;&#9;&#9;BLEDevice::updatePeerDevice(this, true, m_appId);&#10;-&#9;&#9;&#9;esp_err_t errRc = esp_ble_gattc_send_mtu_req(gattc_if, evtParam-&gt;connect.conn_id);&#10;-&#9;&#9;&#9;if (errRc != ESP_OK) {&#10;-&#9;&#9;&#9;&#9;log_e(&quot;esp_ble_gattc_send_mtu_req: rc=%d %s&quot;, errRc, GeneralUtils::errorToString(errRc));&#10;-&#9;&#9;&#9;}&#10;+  esp_gattc_cb_event_t      event,&#10;+  esp_gatt_if_t             gattc_if,&#10;+  esp_ble_gattc_cb_param_t* evtParam) {&#10;+&#10;+  log_d(&quot;gattClientEventHandler [esp_gatt_if: %d] ... %s&quot;,&#10;+    gattc_if, BLEUtils::gattClientEventTypeToString(event).c_str());&#10;+&#10;+  // it is possible to receive events from other connections while waiting for registration&#10;+  if (m_gattc_if == ESP_GATT_IF_NONE &amp;&amp; event != ESP_GATTC_REG_EVT) {&#10;+    return;&#10;+  }&#10;+&#10;+  // Execute handler code based on the type of event received.&#10;+  switch(event) {&#10;+&#10;+    case ESP_GATTC_SRVC_CHG_EVT:&#10;+      log_i(&quot;SERVICE CHANGED&quot;);&#10;+      break;&#10;+&#10;+    case ESP_GATTC_CLOSE_EVT: {&#10;+        // esp_ble_gattc_app_unregister(m_appId);&#10;+        // BLEDevice::removePeerDevice(m_gattc_if, true);&#10;+      break;&#10;+    }&#10;+&#10;+    //&#10;+    // ESP_GATTC_DISCONNECT_EVT&#10;+    //&#10;+    // disconnect:&#10;+    // - esp_gatt_status_t status&#10;+    // - uint16_t          conn_id&#10;+    // - esp_bd_addr_t     remote_bda&#10;+    case ESP_GATTC_DISCONNECT_EVT: {&#10;+        if (evtParam-&gt;disconnect.conn_id != getConnId()) break;&#10;+        // If we receive a disconnect event, set the class flag that indicates that we are&#10;+        // no longer connected.&#10;+        bool m_wasConnected = m_isConnected;&#10;+        m_isConnected = false;&#10;+        esp_ble_gattc_app_unregister(m_gattc_if);&#10;+        m_gattc_if = ESP_GATT_IF_NONE;&#10;+        m_semaphoreOpenEvt.give(ESP_GATT_IF_NONE);&#10;+        m_semaphoreRssiCmplEvt.give();&#10;+        m_semaphoreSearchCmplEvt.give(1);&#10;+        BLEDevice::removePeerDevice(m_appId, true);&#10;+        if (m_wasConnected &amp;&amp; m_pClientCallbacks != nullptr) {&#10;+          m_pClientCallbacks-&gt;onDisconnect(this);&#10;+        }&#10;+        break;&#10;+    } // ESP_GATTC_DISCONNECT_EVT&#10;+&#10;+    //&#10;+    // ESP_GATTC_OPEN_EVT&#10;+    //&#10;+    // open:&#10;+    // - esp_gatt_status_t status&#10;+    // - uint16_t          conn_id&#10;+    // - esp_bd_addr_t     remote_bda&#10;+    //&#10;+    case ESP_GATTC_OPEN_EVT: {&#10;+      m_conn_id = evtParam-&gt;open.conn_id;&#10;+      if (evtParam-&gt;open.status == ESP_GATT_OK) {&#10;+        m_isConnected = true;   // Flag us as connected.&#10;+        if (m_pClientCallbacks != nullptr) {&#10;+          m_pClientCallbacks-&gt;onConnect(this);&#10;+        }&#10;+      } else {&#10;+        log_e(&quot;Failed to connect, status=%s&quot;, GeneralUtils::errorToString(evtParam-&gt;open.status));&#10;+      }&#10;+      m_semaphoreOpenEvt.give(evtParam-&gt;open.status);&#10;+      break;&#10;+    } // ESP_GATTC_OPEN_EVT&#10;+&#10;+&#10;+    //&#10;+    // ESP_GATTC_REG_EVT&#10;+    //&#10;+    // reg:&#10;+    // esp_gatt_status_t status&#10;+    // uint16_t          app_id&#10;+    //&#10;+    case ESP_GATTC_REG_EVT: {&#10;+      m_gattc_if = gattc_if;&#10;+      // pass on the registration status result, in case of failure&#10;+      m_semaphoreRegEvt.give(evtParam-&gt;reg.status);&#10;+      break;&#10;+    } // ESP_GATTC_REG_EVT&#10;+&#10;+    case ESP_GATTC_CFG_MTU_EVT:&#10;+      if (evtParam-&gt;cfg_mtu.conn_id != getConnId()) break;&#10;+      if(evtParam-&gt;cfg_mtu.status != ESP_GATT_OK) {&#10;+        log_e(&quot;Config mtu failed&quot;);&#10;+      }&#10;+      m_mtu = evtParam-&gt;cfg_mtu.mtu;&#10;+      break;&#10;+&#10;+    case ESP_GATTC_CONNECT_EVT: {&#10;+      if (evtParam-&gt;connect.conn_id != getConnId()) break;&#10;+      BLEDevice::updatePeerDevice(this, true, m_appId);&#10;+      esp_err_t errRc = esp_ble_gattc_send_mtu_req(gattc_if, evtParam-&gt;connect.conn_id);&#10;+      if (errRc != ESP_OK) {&#10;+        log_e(&quot;esp_ble_gattc_send_mtu_req: rc=%d %s&quot;, errRc, GeneralUtils::errorToString(errRc));&#10;+      }&#10; #ifdef CONFIG_BLE_SMP_ENABLE   // Check that BLE SMP (security) is configured in make menuconfig&#10;-&#9;&#9;&#9;if(BLEDevice::m_securityLevel){&#10;-&#9;&#9;&#9;&#9;esp_ble_set_encryption(evtParam-&gt;connect.remote_bda, BLEDevice::m_securityLevel);&#10;-&#9;&#9;&#9;}&#10;-#endif&#9;// CONFIG_BLE_SMP_ENABLE&#10;-&#9;&#9;&#9;break;&#10;-&#9;&#9;} // ESP_GATTC_CONNECT_EVT&#10;-&#10;-&#9;&#9;//&#10;-&#9;&#9;// ESP_GATTC_SEARCH_CMPL_EVT&#10;-&#9;&#9;//&#10;-&#9;&#9;// search_cmpl:&#10;-&#9;&#9;// - esp_gatt_status_t status&#10;-&#9;&#9;// - uint16_t          conn_id&#10;-&#9;&#9;//&#10;-&#9;&#9;case ESP_GATTC_SEARCH_CMPL_EVT: {&#10;-&#9;&#9;&#9;if (evtParam-&gt;search_cmpl.conn_id != getConnId()) break;&#10;-&#9;&#9;&#9;esp_ble_gattc_cb_param_t* p_data = (esp_ble_gattc_cb_param_t*)evtParam;&#10;-&#9;&#9;&#9;if (p_data-&gt;search_cmpl.status != ESP_GATT_OK){&#10;-&#9;&#9;&#9;&#9;log_e(&quot;search service failed, error status = %x&quot;, p_data-&gt;search_cmpl.status);&#10;-&#9;&#9;&#9;&#9;break;&#10;-&#9;&#9;&#9;}&#10;+      if(BLEDevice::m_securityLevel){&#10;+        esp_ble_set_encryption(evtParam-&gt;connect.remote_bda, BLEDevice::m_securityLevel);&#10;+      }&#10;+#endif  // CONFIG_BLE_SMP_ENABLE&#10;+      break;&#10;+    } // ESP_GATTC_CONNECT_EVT&#10;+&#10;+    //&#10;+    // ESP_GATTC_SEARCH_CMPL_EVT&#10;+    //&#10;+    // search_cmpl:&#10;+    // - esp_gatt_status_t status&#10;+    // - uint16_t          conn_id&#10;+    //&#10;+    case ESP_GATTC_SEARCH_CMPL_EVT: {&#10;+      if (evtParam-&gt;search_cmpl.conn_id != getConnId()) break;&#10;+      esp_ble_gattc_cb_param_t* p_data = (esp_ble_gattc_cb_param_t*)evtParam;&#10;+      if (p_data-&gt;search_cmpl.status != ESP_GATT_OK){&#10;+        log_e(&quot;search service failed, error status = %x&quot;, p_data-&gt;search_cmpl.status);&#10;+        break;&#10;+      }&#10; #ifndef ARDUINO_ARCH_ESP32&#10;-// commented out just for now to keep backward compatibility&#9;&#9;&#9;&#10;-&#9;&#9;&#9;// if(p_data-&gt;search_cmpl.searched_service_source == ESP_GATT_SERVICE_FROM_REMOTE_DEVICE) {&#10;-&#9;&#9;&#9;// &#9;log_i(&quot;Get service information from remote device&quot;);&#10;-&#9;&#9;&#9;// } else if (p_data-&gt;search_cmpl.searched_service_source == ESP_GATT_SERVICE_FROM_NVS_FLASH) {&#10;-&#9;&#9;&#9;// &#9;log_i(&quot;Get service information from flash&quot;);&#10;-&#9;&#9;&#9;// } else {&#10;-&#9;&#9;&#9;// &#9;log_i(&quot;unknown service source&quot;);&#10;-&#9;&#9;&#9;// }&#10;+// commented out just for now to keep backward compatibility&#10;+      // if(p_data-&gt;search_cmpl.searched_service_source == ESP_GATT_SERVICE_FROM_REMOTE_DEVICE) {&#10;+      //   log_i(&quot;Get service information from remote device&quot;);&#10;+      // } else if (p_data-&gt;search_cmpl.searched_service_source == ESP_GATT_SERVICE_FROM_NVS_FLASH) {&#10;+      //   log_i(&quot;Get service information from flash&quot;);&#10;+      // } else {&#10;+      //   log_i(&quot;unknown service source&quot;);&#10;+      // }&#10; #endif&#10;-&#9;&#9;&#9;m_semaphoreSearchCmplEvt.give(0);&#10;-&#9;&#9;&#9;break;&#10;-&#9;&#9;} // ESP_GATTC_SEARCH_CMPL_EVT&#10;-&#10;-&#10;-&#9;&#9;//&#10;-&#9;&#9;// ESP_GATTC_SEARCH_RES_EVT&#10;-&#9;&#9;//&#10;-&#9;&#9;// search_res:&#10;-&#9;&#9;// - uint16_t      conn_id&#10;-&#9;&#9;// - uint16_t      start_handle&#10;-&#9;&#9;// - uint16_t      end_handle&#10;-&#9;&#9;// - esp_gatt_id_t srvc_id&#10;-&#9;&#9;//&#10;-&#9;&#9;case ESP_GATTC_SEARCH_RES_EVT: {&#10;-&#9;&#9;&#9;if (evtParam-&gt;search_res.conn_id != getConnId()) break;&#10;-&#9;&#9;&#9;BLEUUID uuid = BLEUUID(evtParam-&gt;search_res.srvc_id);&#10;-&#9;&#9;&#9;BLERemoteService* pRemoteService = new BLERemoteService(&#10;-&#9;&#9;&#9;&#9;evtParam-&gt;search_res.srvc_id,&#10;-&#9;&#9;&#9;&#9;this,&#10;-&#9;&#9;&#9;&#9;evtParam-&gt;search_res.start_handle,&#10;-&#9;&#9;&#9;&#9;evtParam-&gt;search_res.end_handle&#10;-&#9;&#9;&#9;);&#10;-&#9;&#9;&#9;m_servicesMap.insert(std::pair&lt;std::string, BLERemoteService*&gt;(uuid.toString(), pRemoteService));&#10;-&#9;&#9;&#9;m_servicesMapByInstID.insert(std::pair&lt;BLERemoteService *, uint16_t&gt;(pRemoteService, evtParam-&gt;search_res.srvc_id.inst_id));&#10;-&#9;&#9;&#9;break;&#10;-&#9;&#9;} // ESP_GATTC_SEARCH_RES_EVT&#10;-&#10;-&#10;-&#9;&#9;default: {&#10;-&#9;&#9;&#9;break;&#10;-&#9;&#9;}&#10;-&#9;} // Switch&#10;-&#10;-&#9;// Pass the request on to all services.&#10;-&#9;for (auto &amp;myPair : m_servicesMap) {&#10;-&#9;   myPair.second-&gt;gattClientEventHandler(event, gattc_if, evtParam);&#10;-&#9;}&#10;+      m_semaphoreSearchCmplEvt.give(0);&#10;+      break;&#10;+    } // ESP_GATTC_SEARCH_CMPL_EVT&#10;+&#10;+&#10;+    //&#10;+    // ESP_GATTC_SEARCH_RES_EVT&#10;+    //&#10;+    // search_res:&#10;+    // - uint16_t      conn_id&#10;+    // - uint16_t      start_handle&#10;+    // - uint16_t      end_handle&#10;+    // - esp_gatt_id_t srvc_id&#10;+    //&#10;+    case ESP_GATTC_SEARCH_RES_EVT: {&#10;+      if (evtParam-&gt;search_res.conn_id != getConnId()) break;&#10;+      BLEUUID uuid = BLEUUID(evtParam-&gt;search_res.srvc_id);&#10;+      BLERemoteService* pRemoteService = new BLERemoteService(&#10;+        evtParam-&gt;search_res.srvc_id,&#10;+        this,&#10;+        evtParam-&gt;search_res.start_handle,&#10;+        evtParam-&gt;search_res.end_handle&#10;+      );&#10;+      m_servicesMap.insert(std::pair&lt;String, BLERemoteService*&gt;(uuid.toString(), pRemoteService));&#10;+      m_servicesMapByInstID.insert(std::pair&lt;BLERemoteService *, uint16_t&gt;(pRemoteService, evtParam-&gt;search_res.srvc_id.inst_id));&#10;+      break;&#10;+    } // ESP_GATTC_SEARCH_RES_EVT&#10;+&#10;+&#10;+    default: {&#10;+      break;&#10;+    }&#10;+  } // Switch&#10;+&#10;+  // Pass the request on to all services.&#10;+  for (auto &amp;myPair : m_servicesMap) {&#10;+     myPair.second-&gt;gattClientEventHandler(event, gattc_if, evtParam);&#10;+  }&#10; &#10; } // gattClientEventHandler&#10; &#10; &#10; uint16_t BLEClient::getConnId() {&#10;-&#9;return m_conn_id;&#10;+  return m_conn_id;&#10; } // getConnId&#10; &#10; &#10; &#10; esp_gatt_if_t BLEClient::getGattcIf() {&#10;-&#9;return m_gattc_if;&#10;+  return m_gattc_if;&#10; } // getGattcIf&#10; &#10; &#10;@@ -366,7 +366,7 @@ esp_gatt_if_t BLEClient::getGattcIf() {&#10;  * Returns the Bluetooth device address of the %BLE peer to which this client is connected.&#10;  */&#10; BLEAddress BLEClient::getPeerAddress() {&#10;-&#9;return m_peerAddress;&#10;+  return m_peerAddress;&#10; } // getAddress&#10; &#10; &#10;@@ -375,23 +375,23 @@ BLEAddress BLEClient::getPeerAddress() {&#10;  * @return The RSSI value.&#10;  */&#10; int BLEClient::getRssi() {&#10;-&#9;log_v(&quot;&gt;&gt; getRssi()&quot;);&#10;-&#9;if (!isConnected()) {&#10;-&#9;&#9;log_v(&quot;&lt;&lt; getRssi(): Not connected&quot;);&#10;-&#9;&#9;return 0;&#10;-&#9;}&#10;-&#9;// We make the API call to read the RSSI value which is an asynchronous operation.  We expect to receive&#10;-&#9;// an ESP_GAP_BLE_READ_RSSI_COMPLETE_EVT to indicate completion.&#10;-&#9;//&#10;-&#9;m_semaphoreRssiCmplEvt.take(&quot;getRssi&quot;);&#10;-&#9;esp_err_t rc = ::esp_ble_gap_read_rssi(*getPeerAddress().getNative());&#10;-&#9;if (rc != ESP_OK) {&#10;-&#9;&#9;log_e(&quot;&lt;&lt; getRssi: esp_ble_gap_read_rssi: rc=%d %s&quot;, rc, GeneralUtils::errorToString(rc));&#10;-&#9;&#9;return 0;&#10;-&#9;}&#10;-&#9;int rssiValue = m_semaphoreRssiCmplEvt.wait(&quot;getRssi&quot;);&#10;-&#9;log_v(&quot;&lt;&lt; getRssi(): %d&quot;, rssiValue);&#10;-&#9;return rssiValue;&#10;+  log_v(&quot;&gt;&gt; getRssi()&quot;);&#10;+  if (!isConnected()) {&#10;+    log_v(&quot;&lt;&lt; getRssi(): Not connected&quot;);&#10;+    return 0;&#10;+  }&#10;+  // We make the API call to read the RSSI value which is an asynchronous operation.  We expect to receive&#10;+  // an ESP_GAP_BLE_READ_RSSI_COMPLETE_EVT to indicate completion.&#10;+  //&#10;+  m_semaphoreRssiCmplEvt.take(&quot;getRssi&quot;);&#10;+  esp_err_t rc = ::esp_ble_gap_read_rssi(*getPeerAddress().getNative());&#10;+  if (rc != ESP_OK) {&#10;+    log_e(&quot;&lt;&lt; getRssi: esp_ble_gap_read_rssi: rc=%d %s&quot;, rc, GeneralUtils::errorToString(rc));&#10;+    return 0;&#10;+  }&#10;+  int rssiValue = m_semaphoreRssiCmplEvt.wait(&quot;getRssi&quot;);&#10;+  log_v(&quot;&lt;&lt; getRssi(): %d&quot;, rssiValue);&#10;+  return rssiValue;&#10; } // getRssi&#10; &#10; &#10;@@ -412,25 +412,25 @@ BLERemoteService* BLEClient::getService(const char* uuid) {&#10;  * @throws BLEUuidNotFound&#10;  */&#10; BLERemoteService* BLEClient::getService(BLEUUID uuid) {&#10;-&#9;log_v(&quot;&gt;&gt; getService: uuid: %s&quot;, uuid.toString().c_str());&#10;+  log_v(&quot;&gt;&gt; getService: uuid: %s&quot;, uuid.toString().c_str());&#10; // Design&#10; // ------&#10; // We wish to retrieve the service given its UUID.  It is possible that we have not yet asked the&#10; // device what services it has in which case we have nothing to match against.  If we have not&#10; // asked the device about its services, then we do that now.  Once we get the results we can then&#10; // examine the services map to see if it has the service we are looking for.&#10;-&#9;if (!m_haveServices) {&#10;-&#9;&#9;getServices();&#10;-&#9;}&#10;-&#9;std::string uuidStr = uuid.toString();&#10;-&#9;for (auto &amp;myPair : m_servicesMap) {&#10;-&#9;&#9;if (myPair.first == uuidStr) {&#10;-&#9;&#9;&#9;log_v(&quot;&lt;&lt; getService: found the service with uuid: %s&quot;, uuid.toString().c_str());&#10;-&#9;&#9;&#9;return myPair.second;&#10;-&#9;&#9;}&#10;-&#9;} // End of each of the services.&#10;-&#9;log_v(&quot;&lt;&lt; getService: not found&quot;);&#10;-&#9;return nullptr;&#10;+  if (!m_haveServices) {&#10;+    getServices();&#10;+  }&#10;+  String uuidStr = uuid.toString();&#10;+  for (auto &amp;myPair : m_servicesMap) {&#10;+    if (myPair.first == uuidStr) {&#10;+      log_v(&quot;&lt;&lt; getService: found the service with uuid: %s&quot;, uuid.toString().c_str());&#10;+      return myPair.second;&#10;+    }&#10;+  } // End of each of the services.&#10;+  log_v(&quot;&lt;&lt; getService: not found&quot;);&#10;+  return nullptr;&#10; } // getService&#10; &#10; &#10;@@ -440,7 +440,7 @@ BLERemoteService* BLEClient::getService(BLEUUID uuid) {&#10;  * services and wait until we have received them all.&#10;  * @return N/A&#10;  */&#10;-std::map&lt;std::string, BLERemoteService*&gt;* BLEClient::getServices() {&#10;+std::map&lt;String, BLERemoteService*&gt;* BLEClient::getServices() {&#10; /*&#10;  * Design&#10;  * ------&#10;@@ -448,25 +448,25 @@ std::map&lt;std::string, BLERemoteService*&gt;* BLEClient::getServices() {&#10;  * peer BLE partner to be returned as events.  Each event will be an an instance of ESP_GATTC_SEARCH_RES_EVT&#10;  * and will culminate with an ESP_GATTC_SEARCH_CMPL_EVT when all have been received.&#10;  */&#10;-&#9;log_v(&quot;&gt;&gt; getServices&quot;);&#10;+  log_v(&quot;&gt;&gt; getServices&quot;);&#10; // TODO implement retrieving services from cache&#10;-&#9;clearServices(); // Clear any services that may exist.&#10;-&#10;-&#9;esp_err_t errRc = esp_ble_gattc_search_service(&#10;-&#9;&#9;getGattcIf(),&#10;-&#9;&#9;getConnId(),&#10;-&#9;&#9;NULL            // Filter UUID&#10;-&#9;);&#10;-&#10;-&#9;m_semaphoreSearchCmplEvt.take(&quot;getServices&quot;);&#10;-&#9;if (errRc != ESP_OK) {&#10;-&#9;&#9;log_e(&quot;esp_ble_gattc_search_service: rc=%d %s&quot;, errRc, GeneralUtils::errorToString(errRc));&#10;-&#9;&#9;return &amp;m_servicesMap;&#10;-&#9;}&#10;-&#9;// If sucessfull, remember that we now have services.&#10;-&#9;m_haveServices = (m_semaphoreSearchCmplEvt.wait(&quot;getServices&quot;) == 0);&#10;-&#9;log_v(&quot;&lt;&lt; getServices&quot;);&#10;-&#9;return &amp;m_servicesMap;&#10;+  clearServices(); // Clear any services that may exist.&#10;+&#10;+  esp_err_t errRc = esp_ble_gattc_search_service(&#10;+    getGattcIf(),&#10;+    getConnId(),&#10;+    NULL            // Filter UUID&#10;+  );&#10;+&#10;+  m_semaphoreSearchCmplEvt.take(&quot;getServices&quot;);&#10;+  if (errRc != ESP_OK) {&#10;+    log_e(&quot;esp_ble_gattc_search_service: rc=%d %s&quot;, errRc, GeneralUtils::errorToString(errRc));&#10;+    return &amp;m_servicesMap;&#10;+  }&#10;+  // If sucessfull, remember that we now have services.&#10;+  m_haveServices = (m_semaphoreSearchCmplEvt.wait(&quot;getServices&quot;) == 0);&#10;+  log_v(&quot;&lt;&lt; getServices&quot;);&#10;+  return &amp;m_servicesMap;&#10; } // getServices&#10; &#10; &#10;@@ -476,11 +476,11 @@ std::map&lt;std::string, BLERemoteService*&gt;* BLEClient::getServices() {&#10;  * @param [in] characteristicUUID The characteristic whose value we wish to read.&#10;  * @throws BLEUuidNotFound&#10;  */&#10;-std::string BLEClient::getValue(BLEUUID serviceUUID, BLEUUID characteristicUUID) {&#10;-&#9;log_v(&quot;&gt;&gt; getValue: serviceUUID: %s, characteristicUUID: %s&quot;, serviceUUID.toString().c_str(), characteristicUUID.toString().c_str());&#10;-&#9;std::string ret = getService(serviceUUID)-&gt;getCharacteristic(characteristicUUID)-&gt;readValue();&#10;-&#9;log_v(&quot;&lt;&lt;getValue&quot;);&#10;-&#9;return ret;&#10;+String BLEClient::getValue(BLEUUID serviceUUID, BLEUUID characteristicUUID) {&#10;+  log_v(&quot;&gt;&gt; getValue: serviceUUID: %s, characteristicUUID: %s&quot;, serviceUUID.toString().c_str(), characteristicUUID.toString().c_str());&#10;+  String ret = getService(serviceUUID)-&gt;getCharacteristic(characteristicUUID)-&gt;readValue();&#10;+  log_v(&quot;&lt;&lt;getValue&quot;);&#10;+  return ret;&#10; } // getValue&#10; &#10; &#10;@@ -491,26 +491,26 @@ std::string BLEClient::getValue(BLEUUID serviceUUID, BLEUUID characteristicUUID)&#10;  * @param [in] param&#10;  */&#10; void BLEClient::handleGAPEvent(&#10;-&#9;&#9;esp_gap_ble_cb_event_t  event,&#10;-&#9;&#9;esp_ble_gap_cb_param_t* param) {&#10;-&#9;log_d(&quot;BLEClient ... handling GAP event!&quot;);&#10;-&#9;switch (event) {&#10;-&#9;&#9;//&#10;-&#9;&#9;// ESP_GAP_BLE_READ_RSSI_COMPLETE_EVT&#10;-&#9;&#9;//&#10;-&#9;&#9;// read_rssi_cmpl&#10;-&#9;&#9;// - esp_bt_status_t status&#10;-&#9;&#9;// - int8_t rssi&#10;-&#9;&#9;// - esp_bd_addr_t remote_addr&#10;-&#9;&#9;//&#10;-&#9;&#9;case ESP_GAP_BLE_READ_RSSI_COMPLETE_EVT: {&#10;-&#9;&#9;&#9;m_semaphoreRssiCmplEvt.give((uint32_t) param-&gt;read_rssi_cmpl.rssi);&#10;-&#9;&#9;&#9;break;&#10;-&#9;&#9;} // ESP_GAP_BLE_READ_RSSI_COMPLETE_EVT&#10;-&#10;-&#9;&#9;default:&#10;-&#9;&#9;&#9;break;&#10;-&#9;}&#10;+    esp_gap_ble_cb_event_t  event,&#10;+    esp_ble_gap_cb_param_t* param) {&#10;+  log_d(&quot;BLEClient ... handling GAP event!&quot;);&#10;+  switch (event) {&#10;+    //&#10;+    // ESP_GAP_BLE_READ_RSSI_COMPLETE_EVT&#10;+    //&#10;+    // read_rssi_cmpl&#10;+    // - esp_bt_status_t status&#10;+    // - int8_t rssi&#10;+    // - esp_bd_addr_t remote_addr&#10;+    //&#10;+    case ESP_GAP_BLE_READ_RSSI_COMPLETE_EVT: {&#10;+      m_semaphoreRssiCmplEvt.give((uint32_t) param-&gt;read_rssi_cmpl.rssi);&#10;+      break;&#10;+    } // ESP_GAP_BLE_READ_RSSI_COMPLETE_EVT&#10;+&#10;+    default:&#10;+      break;&#10;+  }&#10; } // handleGAPEvent&#10; &#10; &#10;@@ -519,7 +519,7 @@ void BLEClient::handleGAPEvent(&#10;  * @return True if we are connected and false if we are not connected.&#10;  */&#10; bool BLEClient::isConnected() {&#10;-&#9;return m_isConnected;&#10;+  return m_isConnected;&#10; } // isConnected&#10; &#10; &#10;@@ -529,7 +529,7 @@ bool BLEClient::isConnected() {&#10;  * @brief Set the callbacks that will be invoked.&#10;  */&#10; void BLEClient::setClientCallbacks(BLEClientCallbacks* pClientCallbacks) {&#10;-&#9;m_pClientCallbacks = pClientCallbacks;&#10;+  m_pClientCallbacks = pClientCallbacks;&#10; } // setClientCallbacks&#10; &#10; &#10;@@ -539,44 +539,44 @@ void BLEClient::setClientCallbacks(BLEClientCallbacks* pClientCallbacks) {&#10;  * @param [in] characteristicUUID The characteristic whose value we wish to write.&#10;  * @throws BLEUuidNotFound&#10;  */&#10;-void BLEClient::setValue(BLEUUID serviceUUID, BLEUUID characteristicUUID, std::string value) {&#10;-&#9;log_v(&quot;&gt;&gt; setValue: serviceUUID: %s, characteristicUUID: %s&quot;, serviceUUID.toString().c_str(), characteristicUUID.toString().c_str());&#10;-&#9;getService(serviceUUID)-&gt;getCharacteristic(characteristicUUID)-&gt;writeValue(value);&#10;-&#9;log_v(&quot;&lt;&lt; setValue&quot;);&#10;+void BLEClient::setValue(BLEUUID serviceUUID, BLEUUID characteristicUUID, String value) {&#10;+  log_v(&quot;&gt;&gt; setValue: serviceUUID: %s, characteristicUUID: %s&quot;, serviceUUID.toString().c_str(), characteristicUUID.toString().c_str());&#10;+  getService(serviceUUID)-&gt;getCharacteristic(characteristicUUID)-&gt;writeValue(value);&#10;+  log_v(&quot;&lt;&lt; setValue&quot;);&#10; } // setValue&#10; &#10; uint16_t BLEClient::getMTU() {&#10;-&#9;return m_mtu;&#10;+  return m_mtu;&#10; }&#10; &#10; &#10; /**&#10;-&#9;@brief Set the local and remote MTU size.&#10;- &#9;&#9;&#9;&#9;Should be called once after client connects if MTU size needs to be changed.&#10;-&#9;@return bool indicating if MTU was successfully set locally and on remote.&#10;+  @brief Set the local and remote MTU size.&#10;+         Should be called once after client connects if MTU size needs to be changed.&#10;+  @return bool indicating if MTU was successfully set locally and on remote.&#10; */&#10; bool BLEClient::setMTU(uint16_t mtu)&#10; {&#10;-&#9;esp_err_t err = esp_ble_gatt_set_local_mtu(mtu);  //First must set local MTU value.&#10;-&#9;if (err == ESP_OK) &#10;-&#9;{&#10;-&#9;&#9;err = esp_ble_gattc_send_mtu_req(m_gattc_if,m_conn_id);  //Once local is set successfully set remote size&#10;-&#9;&#9;if (err!=ESP_OK)&#10;-&#9;&#9;{&#10;-&#9;&#9;&#9;log_e(&quot;Error setting send MTU request MTU: %d err=%d&quot;, mtu,err);&#10;-&#9;&#9;&#9;return false;&#10;-&#9;&#9;}&#10;-&#9;}&#10;-&#9;else &#10;-&#9;{&#10;-&#9;&#9;log_e(&quot;can't set local mtu value: %d&quot;, mtu);&#10;-&#9;&#9;return false;&#10;-&#9;}&#10;-&#9;log_v(&quot;&lt;&lt; setLocalMTU&quot;);&#10;-&#10;-&#9;m_mtu = mtu; //successfully changed&#10;-&#10;-&#9;return true;&#10;+  esp_err_t err = esp_ble_gatt_set_local_mtu(mtu);  //First must set local MTU value.&#10;+  if (err == ESP_OK)&#10;+  {&#10;+    err = esp_ble_gattc_send_mtu_req(m_gattc_if,m_conn_id);  //Once local is set successfully set remote size&#10;+    if (err!=ESP_OK)&#10;+    {&#10;+      log_e(&quot;Error setting send MTU request MTU: %d err=%d&quot;, mtu,err);&#10;+      return false;&#10;+    }&#10;+  }&#10;+  else&#10;+  {&#10;+    log_e(&quot;can't set local mtu value: %d&quot;, mtu);&#10;+    return false;&#10;+  }&#10;+  log_v(&quot;&lt;&lt; setLocalMTU&quot;);&#10;+&#10;+  m_mtu = mtu; //successfully changed&#10;+&#10;+  return true;&#10; }&#10; &#10; &#10;@@ -586,14 +586,14 @@ bool BLEClient::setMTU(uint16_t mtu)&#10;  * @brief Return a string representation of this client.&#10;  * @return A string representation of this client.&#10;  */&#10;-std::string BLEClient::toString() {&#10;-&#9;std::string res = &quot;peer address: &quot; + m_peerAddress.toString();&#10;-&#9;res += &quot;\nServices:\n&quot;;&#10;-&#9;for (auto &amp;myPair : m_servicesMap) {&#10;-&#9;&#9;res += myPair.second-&gt;toString() + &quot;\n&quot;;&#10;-&#9;  // myPair.second is the value&#10;-&#9;}&#10;-&#9;return res;&#10;+String BLEClient::toString() {&#10;+  String res = &quot;peer address: &quot; + m_peerAddress.toString();&#10;+  res += &quot;\nServices:\n&quot;;&#10;+  for (auto &amp;myPair : m_servicesMap) {&#10;+    res += myPair.second-&gt;toString() + &quot;\n&quot;;&#10;+    // myPair.second is the value&#10;+  }&#10;+  return res;&#10; } // toString&#10; &#10; #endif /* CONFIG_BLUEDROID_ENABLED */&#10;" />
			<string key="comment_change" value="True" />
		</event>
	</trace>
	<trace>
		<string key="file" value="BLEClient.h" />
	</trace>
	<trace>
		<string key="file" value="BLEDescriptor.cpp" />
		<event>
			<string key="timestamp" value="2023-10-06T15:50:11+03:00" />
			<string key="author" value="Me No Dev" />
			<string key="change_type" value="MODIFY" />
			<string key="commit_message" value="BLE upgrades (#8724)&#10;&#10;* Renamed library description&#13;&#10;&#13;&#10;* Updated Eddystone URL (not complete)&#13;&#10;&#13;&#10;* Updated Eddystone URL&#13;&#10;&#13;&#10;* Updated Eddystone classes and beacon scanner&#13;&#10;&#13;&#10;* Renamed examples - removing prefix BLE_&#13;&#10;&#13;&#10;* Renamed Beacon_Scanner&#13;&#10;&#13;&#10;* Updated TLM&#13;&#10;&#13;&#10;* Changed std::string to Arduino String&#13;&#10;&#13;&#10;* More std::string -&gt; String&#13;&#10;&#13;&#10;* Changed String in forgotten file&#13;&#10;&#13;&#10;* Changed .data to .c_str&#13;&#10;&#13;&#10;* Reverting single String type change&#13;&#10;&#13;&#10;* Few more fixes related to the String transition&#13;&#10;&#13;&#10;* Fixed URL and Utils error&#13;&#10;&#13;&#10;* Added and modified compatibility safeguards for BLE5 examples&#13;&#10;&#13;&#10;* Added #include WString.h&#13;&#10;&#13;&#10;* Fixed Beacon_Scanner&#13;&#10;&#13;&#10;* Remove commented include&#13;&#10;&#13;&#10;Co-authored-by: Lucas Saavedra Vaz &lt;lucassvaz@yahoo.com.br&gt;&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Tomas Pilny &lt;tomas.pilny@espressif.com&gt;&#13;&#10;Co-authored-by: Lucas Saavedra Vaz &lt;lucassvaz@yahoo.com.br&gt;" />
			<int key="additions" value="138" />
			<int key="deletions" value="138" />
			<string key="diff" value='@@ -27,20 +27,20 @@&#10;  * @brief BLEDescriptor constructor.&#10;  */&#10; BLEDescriptor::BLEDescriptor(const char* uuid, uint16_t len) : BLEDescriptor(BLEUUID(uuid), len) {&#10;-}&#9;&#10;+}&#10; &#10; /**&#10;  * @brief BLEDescriptor constructor.&#10;  */&#10; BLEDescriptor::BLEDescriptor(BLEUUID uuid, uint16_t max_len) {&#10;-&#9;m_bleUUID            = uuid;&#10;-&#9;m_value.attr_len     = 0;                                         // Initial length is 0.&#10;-&#9;m_value.attr_max_len = max_len;                     &#9;&#9;&#9;  // Maximum length of the data.&#10;-&#9;m_handle             = NULL_HANDLE;                               // Handle is initially unknown.&#10;-&#9;m_pCharacteristic    = nullptr;                                   // No initial characteristic.&#10;-&#9;m_pCallback          = nullptr;                                   // No initial callback.&#10;-&#10;-&#9;m_value.attr_value   = (uint8_t*) malloc(max_len);  // Allocate storage for the value.&#10;+  m_bleUUID            = uuid;&#10;+  m_value.attr_len     = 0;                                         // Initial length is 0.&#10;+  m_value.attr_max_len = max_len;                                   // Maximum length of the data.&#10;+  m_handle             = NULL_HANDLE;                               // Handle is initially unknown.&#10;+  m_pCharacteristic    = nullptr;                                   // No initial characteristic.&#10;+  m_pCallback          = nullptr;                                   // No initial callback.&#10;+&#10;+  m_value.attr_value   = (uint8_t*) malloc(max_len);  // Allocate storage for the value.&#10; } // BLEDescriptor&#10; &#10; &#10;@@ -48,7 +48,7 @@ BLEDescriptor::BLEDescriptor(BLEUUID uuid, uint16_t max_len) {&#10;  * @brief BLEDescriptor destructor.&#10;  */&#10; BLEDescriptor::~BLEDescriptor() {&#10;-&#9;free(m_value.attr_value);   // Release the storage we created in the constructor.&#10;+  free(m_value.attr_value);   // Release the storage we created in the constructor.&#10; } // ~BLEDescriptor&#10; &#10; &#10;@@ -57,31 +57,31 @@ BLEDescriptor::~BLEDescriptor() {&#10;  * @param [in] pCharacteristic The characteristic to which to register this descriptor.&#10;  */&#10; void BLEDescriptor::executeCreate(BLECharacteristic* pCharacteristic) {&#10;-&#9;log_v("&gt;&gt; executeCreate(): %s", toString().c_str());&#10;-&#10;-&#9;if (m_handle != NULL_HANDLE) {&#10;-&#9;&#9;log_e("Descriptor already has a handle.");&#10;-&#9;&#9;return;&#10;-&#9;}&#10;-&#10;-&#9;m_pCharacteristic = pCharacteristic; // Save the characteristic associated with this service.&#10;-&#10;-&#9;esp_attr_control_t control;&#10;-&#9;control.auto_rsp = ESP_GATT_AUTO_RSP;&#10;-&#9;m_semaphoreCreateEvt.take("executeCreate");&#10;-&#9;esp_err_t errRc = ::esp_ble_gatts_add_char_descr(&#10;-&#9;&#9;&#9;pCharacteristic-&gt;getService()-&gt;getHandle(),&#10;-&#9;&#9;&#9;getUUID().getNative(),&#10;-&#9;&#9;&#9;(esp_gatt_perm_t)m_permissions,&#10;-&#9;&#9;&#9;&amp;m_value,&#10;-&#9;&#9;&#9;&amp;control);&#10;-&#9;if (errRc != ESP_OK) {&#10;-&#9;&#9;log_e("&lt;&lt; esp_ble_gatts_add_char_descr: rc=%d %s", errRc, GeneralUtils::errorToString(errRc));&#10;-&#9;&#9;return;&#10;-&#9;}&#10;-&#10;-&#9;m_semaphoreCreateEvt.wait("executeCreate");&#10;-&#9;log_v("&lt;&lt; executeCreate");&#10;+  log_v("&gt;&gt; executeCreate(): %s", toString().c_str());&#10;+&#10;+  if (m_handle != NULL_HANDLE) {&#10;+    log_e("Descriptor already has a handle.");&#10;+    return;&#10;+  }&#10;+&#10;+  m_pCharacteristic = pCharacteristic; // Save the characteristic associated with this service.&#10;+&#10;+  esp_attr_control_t control;&#10;+  control.auto_rsp = ESP_GATT_AUTO_RSP;&#10;+  m_semaphoreCreateEvt.take("executeCreate");&#10;+  esp_err_t errRc = ::esp_ble_gatts_add_char_descr(&#10;+      pCharacteristic-&gt;getService()-&gt;getHandle(),&#10;+      getUUID().getNative(),&#10;+      (esp_gatt_perm_t)m_permissions,&#10;+      &amp;m_value,&#10;+      &amp;control);&#10;+  if (errRc != ESP_OK) {&#10;+    log_e("&lt;&lt; esp_ble_gatts_add_char_descr: rc=%d %s", errRc, GeneralUtils::errorToString(errRc));&#10;+    return;&#10;+  }&#10;+&#10;+  m_semaphoreCreateEvt.wait("executeCreate");&#10;+  log_v("&lt;&lt; executeCreate");&#10; } // executeCreate&#10; &#10; &#10;@@ -90,7 +90,7 @@ void BLEDescriptor::executeCreate(BLECharacteristic* pCharacteristic) {&#10;  * @return The handle for this descriptor.&#10;  */&#10; uint16_t BLEDescriptor::getHandle() {&#10;-&#9;return m_handle;&#10;+  return m_handle;&#10; } // getHandle&#10; &#10; &#10;@@ -99,7 +99,7 @@ uint16_t BLEDescriptor::getHandle() {&#10;  * @return The length (in bytes) of the value of this descriptor.&#10;  */&#10; size_t BLEDescriptor::getLength() {&#10;-&#9;return m_value.attr_len;&#10;+  return m_value.attr_len;&#10; } // getLength&#10; &#10; &#10;@@ -107,7 +107,7 @@ size_t BLEDescriptor::getLength() {&#10;  * @brief Get the UUID of the descriptor.&#10;  */&#10; BLEUUID BLEDescriptor::getUUID() {&#10;-&#9;return m_bleUUID;&#10;+  return m_bleUUID;&#10; } // getUUID&#10; &#10; &#10;@@ -117,7 +117,7 @@ BLEUUID BLEDescriptor::getUUID() {&#10;  * @return A pointer to the value of this descriptor.&#10;  */&#10; uint8_t* BLEDescriptor::getValue() {&#10;-&#9;return m_value.attr_value;&#10;+  return m_value.attr_value;&#10; } // getValue&#10; &#10; &#10;@@ -128,77 +128,77 @@ uint8_t* BLEDescriptor::getValue() {&#10;  * @param [in] param&#10;  */&#10; void BLEDescriptor::handleGATTServerEvent(&#10;-&#9;&#9;esp_gatts_cb_event_t      event,&#10;-&#9;&#9;esp_gatt_if_t             gatts_if,&#10;-&#9;&#9;esp_ble_gatts_cb_param_t* param) {&#10;-&#9;switch (event) {&#10;-&#9;&#9;// ESP_GATTS_ADD_CHAR_DESCR_EVT&#10;-&#9;&#9;//&#10;-&#9;&#9;// add_char_descr:&#10;-&#9;&#9;// - esp_gatt_status_t status&#10;-&#9;&#9;// - uint16_t          attr_handle&#10;-&#9;&#9;// - uint16_t          service_handle&#10;-&#9;&#9;// - esp_bt_uuid_t     char_uuid&#10;-&#9;&#9;case ESP_GATTS_ADD_CHAR_DESCR_EVT: {&#10;-&#9;&#9;&#9;if (m_pCharacteristic != nullptr &amp;&amp;&#10;-&#9;&#9;&#9;&#9;&#9;m_bleUUID.equals(BLEUUID(param-&gt;add_char_descr.descr_uuid)) &amp;&amp;&#10;-&#9;&#9;&#9;&#9;&#9;m_pCharacteristic-&gt;getService()-&gt;getHandle() == param-&gt;add_char_descr.service_handle &amp;&amp;&#10;-&#9;&#9;&#9;&#9;&#9;m_pCharacteristic == m_pCharacteristic-&gt;getService()-&gt;getLastCreatedCharacteristic()) {&#10;-&#9;&#9;&#9;&#9;setHandle(param-&gt;add_char_descr.attr_handle);&#10;-&#9;&#9;&#9;&#9;m_semaphoreCreateEvt.give();&#10;-&#9;&#9;&#9;}&#10;-&#9;&#9;&#9;break;&#10;-&#9;&#9;} // ESP_GATTS_ADD_CHAR_DESCR_EVT&#10;-&#10;-&#9;&#9;// ESP_GATTS_WRITE_EVT - A request to write the value of a descriptor has arrived.&#10;-&#9;&#9;//&#10;-&#9;&#9;// write:&#10;-&#9;&#9;// - uint16_t conn_id&#10;-&#9;&#9;// - uint16_t trans_id&#10;-&#9;&#9;// - esp_bd_addr_t bda&#10;-&#9;&#9;// - uint16_t handle&#10;-&#9;&#9;// - uint16_t offset&#10;-&#9;&#9;// - bool need_rsp&#10;-&#9;&#9;// - bool is_prep&#10;-&#9;&#9;// - uint16_t len&#10;-&#9;&#9;// - uint8_t *value&#10;-&#9;&#9;case ESP_GATTS_WRITE_EVT: {&#10;-&#9;&#9;&#9;if (param-&gt;write.handle == m_handle) {&#10;-&#9;&#9;&#9;&#9;setValue(param-&gt;write.value, param-&gt;write.len);   // Set the value of the descriptor.&#10;-&#10;-&#9;&#9;&#9;&#9;if (m_pCallback != nullptr) {   // We have completed the write, if there is a user supplied callback handler, invoke it now.&#10;-&#9;&#9;&#9;&#9;&#9;m_pCallback-&gt;onWrite(this);   // Invoke the onWrite callback handler.&#10;-&#9;&#9;&#9;&#9;}&#10;-&#9;&#9;&#9;}  // End of ... this is our handle.&#10;-&#10;-&#9;&#9;&#9;break;&#10;-&#9;&#9;} // ESP_GATTS_WRITE_EVT&#10;-&#10;-&#9;&#9;// ESP_GATTS_READ_EVT - A request to read the value of a descriptor has arrived.&#10;-&#9;&#9;//&#10;-&#9;&#9;// read:&#10;-&#9;&#9;// - uint16_t conn_id&#10;-&#9;&#9;// - uint32_t trans_id&#10;-&#9;&#9;// - esp_bd_addr_t bda&#10;-&#9;&#9;// - uint16_t handle&#10;-&#9;&#9;// - uint16_t offset&#10;-&#9;&#9;// - bool is_long&#10;-&#9;&#9;// - bool need_rsp&#10;-&#9;&#9;//&#10;-&#9;&#9;case ESP_GATTS_READ_EVT: {&#10;-&#9;&#9;&#9;if (param-&gt;read.handle == m_handle) {  // If this event is for this descriptor ... process it&#10;-&#10;-&#9;&#9;&#9;&#9;if (m_pCallback != nullptr) {   // If we have a user supplied callback, invoke it now.&#10;-&#9;&#9;&#9;&#9;&#9;m_pCallback-&gt;onRead(this);    // Invoke the onRead callback method in the callback handler.&#10;-&#9;&#9;&#9;&#9;}&#10;-&#10;-&#9;&#9;&#9;} // End of this is our handle&#10;-&#9;&#9;&#9;break;&#10;-&#9;&#9;} // ESP_GATTS_READ_EVT&#10;-&#10;-&#9;&#9;default:&#10;-&#9;&#9;&#9;break;&#10;-&#9;} // switch event&#10;+    esp_gatts_cb_event_t      event,&#10;+    esp_gatt_if_t             gatts_if,&#10;+    esp_ble_gatts_cb_param_t* param) {&#10;+  switch (event) {&#10;+    // ESP_GATTS_ADD_CHAR_DESCR_EVT&#10;+    //&#10;+    // add_char_descr:&#10;+    // - esp_gatt_status_t status&#10;+    // - uint16_t          attr_handle&#10;+    // - uint16_t          service_handle&#10;+    // - esp_bt_uuid_t     char_uuid&#10;+    case ESP_GATTS_ADD_CHAR_DESCR_EVT: {&#10;+      if (m_pCharacteristic != nullptr &amp;&amp;&#10;+          m_bleUUID.equals(BLEUUID(param-&gt;add_char_descr.descr_uuid)) &amp;&amp;&#10;+          m_pCharacteristic-&gt;getService()-&gt;getHandle() == param-&gt;add_char_descr.service_handle &amp;&amp;&#10;+          m_pCharacteristic == m_pCharacteristic-&gt;getService()-&gt;getLastCreatedCharacteristic()) {&#10;+        setHandle(param-&gt;add_char_descr.attr_handle);&#10;+        m_semaphoreCreateEvt.give();&#10;+      }&#10;+      break;&#10;+    } // ESP_GATTS_ADD_CHAR_DESCR_EVT&#10;+&#10;+    // ESP_GATTS_WRITE_EVT - A request to write the value of a descriptor has arrived.&#10;+    //&#10;+    // write:&#10;+    // - uint16_t conn_id&#10;+    // - uint16_t trans_id&#10;+    // - esp_bd_addr_t bda&#10;+    // - uint16_t handle&#10;+    // - uint16_t offset&#10;+    // - bool need_rsp&#10;+    // - bool is_prep&#10;+    // - uint16_t len&#10;+    // - uint8_t *value&#10;+    case ESP_GATTS_WRITE_EVT: {&#10;+      if (param-&gt;write.handle == m_handle) {&#10;+        setValue(param-&gt;write.value, param-&gt;write.len);   // Set the value of the descriptor.&#10;+&#10;+        if (m_pCallback != nullptr) {   // We have completed the write, if there is a user supplied callback handler, invoke it now.&#10;+          m_pCallback-&gt;onWrite(this);   // Invoke the onWrite callback handler.&#10;+        }&#10;+      }  // End of ... this is our handle.&#10;+&#10;+      break;&#10;+    } // ESP_GATTS_WRITE_EVT&#10;+&#10;+    // ESP_GATTS_READ_EVT - A request to read the value of a descriptor has arrived.&#10;+    //&#10;+    // read:&#10;+    // - uint16_t conn_id&#10;+    // - uint32_t trans_id&#10;+    // - esp_bd_addr_t bda&#10;+    // - uint16_t handle&#10;+    // - uint16_t offset&#10;+    // - bool is_long&#10;+    // - bool need_rsp&#10;+    //&#10;+    case ESP_GATTS_READ_EVT: {&#10;+      if (param-&gt;read.handle == m_handle) {  // If this event is for this descriptor ... process it&#10;+&#10;+        if (m_pCallback != nullptr) {   // If we have a user supplied callback, invoke it now.&#10;+          m_pCallback-&gt;onRead(this);    // Invoke the onRead callback method in the callback handler.&#10;+        }&#10;+&#10;+      } // End of this is our handle&#10;+      break;&#10;+    } // ESP_GATTS_READ_EVT&#10;+&#10;+    default:&#10;+      break;&#10;+  } // switch event&#10; } // handleGATTServerEvent&#10; &#10; &#10;@@ -207,9 +207,9 @@ void BLEDescriptor::handleGATTServerEvent(&#10;  * @param [in] pCallbacks An instance of a callback structure used to define any callbacks for the descriptor.&#10;  */&#10; void BLEDescriptor::setCallbacks(BLEDescriptorCallbacks* pCallback) {&#10;-&#9;log_v("&gt;&gt; setCallbacks: 0x%x", (uint32_t) pCallback);&#10;-&#9;m_pCallback = pCallback;&#10;-&#9;log_v("&lt;&lt; setCallbacks");&#10;+  log_v("&gt;&gt; setCallbacks: 0x%x", (uint32_t) pCallback);&#10;+  m_pCallback = pCallback;&#10;+  log_v("&lt;&lt; setCallbacks");&#10; } // setCallbacks&#10; &#10; &#10;@@ -220,9 +220,9 @@ void BLEDescriptor::setCallbacks(BLEDescriptorCallbacks* pCallback) {&#10;  * @return N/A.&#10;  */&#10; void BLEDescriptor::setHandle(uint16_t handle) {&#10;-&#9;log_v("&gt;&gt; setHandle(0x%.2x): Setting descriptor handle to be 0x%.2x", handle, handle);&#10;-&#9;m_handle = handle;&#10;-&#9;log_v("&lt;&lt; setHandle()");&#10;+  log_v("&gt;&gt; setHandle(0x%.2x): Setting descriptor handle to be 0x%.2x", handle, handle);&#10;+  m_handle = handle;&#10;+  log_v("&lt;&lt; setHandle()");&#10; } // setHandle&#10; &#10; &#10;@@ -232,16 +232,16 @@ void BLEDescriptor::setHandle(uint16_t handle) {&#10;  * @param [in] length The length of the data in bytes.&#10;  */&#10; void BLEDescriptor::setValue(uint8_t* data, size_t length) {&#10;-&#9;if (length &gt; ESP_GATT_MAX_ATTR_LEN) {&#10;-&#9;&#9;log_e("Size %d too large, must be no bigger than %d", length, ESP_GATT_MAX_ATTR_LEN);&#10;-&#9;&#9;return;&#10;-&#9;}&#10;-&#9;m_value.attr_len = length;&#10;-&#9;memcpy(m_value.attr_value, data, length);&#10;-&#9;if (m_handle != NULL_HANDLE) {&#10;-&#9;&#9;esp_ble_gatts_set_attr_value(m_handle, length, (const uint8_t *)data);&#10;-&#9;&#9;log_d("Set the value in the GATTS database using handle 0x%x", m_handle);&#10;-&#9;}&#10;+  if (length &gt; ESP_GATT_MAX_ATTR_LEN) {&#10;+    log_e("Size %d too large, must be no bigger than %d", length, ESP_GATT_MAX_ATTR_LEN);&#10;+    return;&#10;+  }&#10;+  m_value.attr_len = length;&#10;+  memcpy(m_value.attr_value, data, length);&#10;+  if (m_handle != NULL_HANDLE) {&#10;+    esp_ble_gatts_set_attr_value(m_handle, length, (const uint8_t *)data);&#10;+    log_d("Set the value in the GATTS database using handle 0x%x", m_handle);&#10;+  }&#10; } // setValue&#10; &#10; &#10;@@ -249,23 +249,23 @@ void BLEDescriptor::setValue(uint8_t* data, size_t length) {&#10;  * @brief Set the value of the descriptor.&#10;  * @param [in] value The value of the descriptor in string form.&#10;  */&#10;-void BLEDescriptor::setValue(std::string value) {&#10;-&#9;setValue((uint8_t*) value.data(), value.length());&#10;+void BLEDescriptor::setValue(String value) {&#10;+  setValue((uint8_t*) value.c_str(), value.length());&#10; } // setValue&#10; &#10; void BLEDescriptor::setAccessPermissions(esp_gatt_perm_t perm) {&#10;-&#9;m_permissions = perm;&#10;+  m_permissions = perm;&#10; }&#10; &#10; /**&#10;  * @brief Return a string representation of the descriptor.&#10;  * @return A string representation of the descriptor.&#10;  */&#10;-std::string BLEDescriptor::toString() {&#10;-&#9;char hex[5];&#10;-&#9;snprintf(hex, sizeof(hex), "%04x", m_handle);&#10;-&#9;std::string res = "UUID: " + m_bleUUID.toString() + ", handle: 0x" + hex;&#10;-&#9;return res;&#10;+String BLEDescriptor::toString() {&#10;+  char hex[5];&#10;+  snprintf(hex, sizeof(hex), "%04x", m_handle);&#10;+  String res = "UUID: " + m_bleUUID.toString() + ", handle: 0x" + hex;&#10;+  return res;&#10; } // toString&#10; &#10; &#10;@@ -276,8 +276,8 @@ BLEDescriptorCallbacks::~BLEDescriptorCallbacks() {}&#10;  * @param [in] pDescriptor The descriptor that is the source of the event.&#10;  */&#10; void BLEDescriptorCallbacks::onRead(BLEDescriptor* pDescriptor) {&#10;-&#9;log_d("BLEDescriptorCallbacks", "&gt;&gt; onRead: default");&#10;-&#9;log_d("BLEDescriptorCallbacks", "&lt;&lt; onRead");&#10;+  log_d("BLEDescriptorCallbacks", "&gt;&gt; onRead: default");&#10;+  log_d("BLEDescriptorCallbacks", "&lt;&lt; onRead");&#10; } // onRead&#10; &#10; &#10;@@ -286,8 +286,8 @@ void BLEDescriptorCallbacks::onRead(BLEDescriptor* pDescriptor) {&#10;  * @param [in] pDescriptor The descriptor that is the source of the event.&#10;  */&#10; void BLEDescriptorCallbacks::onWrite(BLEDescriptor* pDescriptor) {&#10;-&#9;log_d("BLEDescriptorCallbacks", "&gt;&gt; onWrite: default");&#10;-&#9;log_d("BLEDescriptorCallbacks", "&lt;&lt; onWrite");&#10;+  log_d("BLEDescriptorCallbacks", "&gt;&gt; onWrite: default");&#10;+  log_d("BLEDescriptorCallbacks", "&lt;&lt; onWrite");&#10; } // onWrite&#10; &#10; &#10;' />
			<string key="comment_change" value="True" />
		</event>
	</trace>
	<trace>
		<string key="file" value="BLEDescriptor.h" />
	</trace>
	<trace>
		<string key="file" value="BLEDescriptorMap.cpp" />
	</trace>
	<trace>
		<string key="file" value="BLEEddystoneURL.cpp" />
		<event>
			<string key="timestamp" value="2023-10-06T15:50:11+03:00" />
			<string key="author" value="Me No Dev" />
			<string key="change_type" value="MODIFY" />
			<string key="commit_message" value="BLE upgrades (#8724)&#10;&#10;* Renamed library description&#13;&#10;&#13;&#10;* Updated Eddystone URL (not complete)&#13;&#10;&#13;&#10;* Updated Eddystone URL&#13;&#10;&#13;&#10;* Updated Eddystone classes and beacon scanner&#13;&#10;&#13;&#10;* Renamed examples - removing prefix BLE_&#13;&#10;&#13;&#10;* Renamed Beacon_Scanner&#13;&#10;&#13;&#10;* Updated TLM&#13;&#10;&#13;&#10;* Changed std::string to Arduino String&#13;&#10;&#13;&#10;* More std::string -&gt; String&#13;&#10;&#13;&#10;* Changed String in forgotten file&#13;&#10;&#13;&#10;* Changed .data to .c_str&#13;&#10;&#13;&#10;* Reverting single String type change&#13;&#10;&#13;&#10;* Few more fixes related to the String transition&#13;&#10;&#13;&#10;* Fixed URL and Utils error&#13;&#10;&#13;&#10;* Added and modified compatibility safeguards for BLE5 examples&#13;&#10;&#13;&#10;* Added #include WString.h&#13;&#10;&#13;&#10;* Fixed Beacon_Scanner&#13;&#10;&#13;&#10;* Remove commented include&#13;&#10;&#13;&#10;Co-authored-by: Lucas Saavedra Vaz &lt;lucassvaz@yahoo.com.br&gt;&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Tomas Pilny &lt;tomas.pilny@espressif.com&gt;&#13;&#10;Co-authored-by: Lucas Saavedra Vaz &lt;lucassvaz@yahoo.com.br&gt;" />
			<int key="additions" value="238" />
			<int key="deletions" value="100" />
			<string key="diff" value='@@ -3,6 +3,8 @@&#10;  *&#10;  *  Created on: Mar 12, 2018&#10;  *      Author: pcbreflux&#10;+ *  Upgraded on: Feb 20, 2023&#10;+ *      By: Tomas Pilny&#10;  */&#10; #include "soc/soc_caps.h"&#10; #if SOC_BLE_SUPPORTED&#10;@@ -13,140 +15,276 @@&#10; #include "esp32-hal-log.h"&#10; #include "BLEEddystoneURL.h"&#10; &#10;-static const char LOG_TAG[] = "BLEEddystoneURL";&#10;+String EDDYSTONE_URL_PREFIX[] = {&#10;+  "http://www.",  // 0x00&#10;+  "https://www.", // 0x01&#10;+  "http://",      // 0x02&#10;+  "https://",     // 0x03&#10;+  ""              // Any other code number results in empty string&#10;+};&#10;+&#10;+String EDDYSTONE_URL_SUFFIX[] = {&#10;+  ".com/",  // 0x00&#10;+  ".org/",  // 0x01&#10;+  ".edu/",  // 0x02&#10;+  ".net/",  // 0x03&#10;+  ".info/", // 0x04&#10;+  ".biz/",  // 0x05&#10;+  ".gov/",  // 0x06&#10;+  ".com",   // 0x07&#10;+  ".org",   // 0x08&#10;+  ".edu",   // 0x09&#10;+  ".net",   // 0x0A&#10;+  ".info",  // 0x0B&#10;+  ".biz",   // 0x0C&#10;+  ".gov",   // 0x0D&#10;+  ""        // Any other code number results in empty string&#10;+};&#10; &#10; BLEEddystoneURL::BLEEddystoneURL() {&#10;-&#9;beaconUUID = 0xFEAA;&#10;-&#9;lengthURL = 0;&#10;-&#9;m_eddystoneData.frameType = EDDYSTONE_URL_FRAME_TYPE;&#10;-&#9;m_eddystoneData.advertisedTxPower = 0;&#10;-&#9;memset(m_eddystoneData.url, 0, sizeof(m_eddystoneData.url));&#10;+  lengthURL = 0;&#10;+  m_eddystoneData.advertisedTxPower = 0;&#10;+  memset(m_eddystoneData.url, 0, sizeof(m_eddystoneData.url));&#10;+  _initHeadder();&#10; } // BLEEddystoneURL&#10; &#10;-std::string BLEEddystoneURL::getData() {&#10;-&#9;return std::string((char*) &amp;m_eddystoneData, sizeof(m_eddystoneData));&#10;+BLEEddystoneURL::BLEEddystoneURL(BLEAdvertisedDevice *advertisedDevice){&#10;+  const char *payload = (char*)advertisedDevice-&gt;getPayload();&#10;+  memset(m_eddystoneData.url, 0, sizeof(m_eddystoneData.url));&#10;+  lengthURL = 0;&#10;+  m_eddystoneData.advertisedTxPower = 0;&#10;+  for(int i = 0; i &lt; advertisedDevice-&gt;getPayloadLength(); ++i){&#10;+    if(payload[i] == 0x16 &amp;&amp; advertisedDevice-&gt;getPayloadLength() &gt;= i+2+sizeof(m_eddystoneData) &amp;&amp; payload[i+1] == 0xAA &amp;&amp; payload[i+2] == 0xFE &amp;&amp; payload[i+3] == 0x10){&#10;+      lengthURL = payload[i-1] - 5; // Subtracting 5 Bytes containing header and other data which are not actual URL data&#10;+      m_eddystoneData.advertisedTxPower = payload[i+1];&#10;+      if(lengthURL &lt;= 18){&#10;+        setData(String(payload+i+4, lengthURL+1));&#10;+      }else{&#10;+        log_e("Too long URL %d", lengthURL);&#10;+      }&#10;+    }&#10;+  }&#10;+  _initHeadder();&#10;+}&#10;+&#10;+String BLEEddystoneURL::getData() {&#10;+  return String((char*) &amp;m_eddystoneData, sizeof(m_eddystoneData));&#10; } // getData&#10; &#10;+String BLEEddystoneURL::getFrame() {&#10;+  BLEHeadder[7] = lengthURL + 5; // Fill in real: Type + 2B UUID + Frame Type + Tx power + URL (note: the Byte holding the length does not count itself)&#10;+  String frame(BLEHeadder, sizeof(BLEHeadder));&#10;+  frame += String((char*) &amp;m_eddystoneData, lengthURL+1); // + 1 for TX power&#10;+&#10;+  return frame;&#10;+} // getFrame&#10;+&#10; BLEUUID BLEEddystoneURL::getUUID() {&#10;-&#9;return BLEUUID(beaconUUID);&#10;+  uint16_t uuid = (((uint16_t)BLEHeadder[10]) &lt;&lt; 8) | BLEHeadder[9];&#10;+  return BLEUUID(uuid);&#10; } // getUUID&#10; &#10; int8_t BLEEddystoneURL::getPower() {&#10;-&#9;return m_eddystoneData.advertisedTxPower;&#10;+  return m_eddystoneData.advertisedTxPower;&#10; } // getPower&#10; &#10;-std::string BLEEddystoneURL::getURL() {&#10;-&#9;return std::string((char*) &amp;m_eddystoneData.url, sizeof(m_eddystoneData.url));&#10;+String BLEEddystoneURL::getURL() {&#10;+  return String((char*) &amp;m_eddystoneData.url, lengthURL);&#10; } // getURL&#10; &#10;-std::string BLEEddystoneURL::getDecodedURL() {&#10;-&#9;std::string decodedURL = "";&#10;-&#10;-&#9;switch (m_eddystoneData.url[0]) {&#10;-&#9;&#9;case 0x00:&#10;-&#9;&#9;&#9;decodedURL += "http://www.";&#10;-&#9;&#9;&#9;break;&#10;-&#9;&#9;case 0x01:&#10;-&#9;&#9;&#9;decodedURL += "https://www.";&#10;-&#9;&#9;&#9;break;&#10;-&#9;&#9;case 0x02:&#10;-&#9;&#9;&#9;decodedURL += "http://";&#10;-&#9;&#9;&#9;break;&#10;-&#9;&#9;case 0x03:&#10;-&#9;&#9;&#9;decodedURL += "https://";&#10;-&#9;&#9;&#9;break;&#10;-&#9;&#9;default:&#10;-&#9;&#9;&#9;decodedURL += m_eddystoneData.url[0];&#10;-&#9;}&#10;-&#10;-&#9;for (int i = 1; i &lt; lengthURL; i++) {&#10;-&#9;&#9;if (m_eddystoneData.url[i] &gt; 33 &amp;&amp; m_eddystoneData.url[i] &lt; 127) {&#10;-&#9;&#9;&#9;decodedURL += m_eddystoneData.url[i];&#10;-&#9;&#9;} else {&#10;-&#9;&#9;&#9;switch (m_eddystoneData.url[i]) {&#10;-&#9;&#9;&#9;&#9;case 0x00:&#10;-&#9;&#9;&#9;&#9;&#9;decodedURL += ".com/";&#10;-&#9;&#9;&#9;&#9;&#9;break;&#10;-&#9;&#9;&#9;&#9;case 0x01:&#10;-&#9;&#9;&#9;&#9;&#9;decodedURL += ".org/";&#10;-&#9;&#9;&#9;&#9;&#9;break;&#10;-&#9;&#9;&#9;&#9;case 0x02:&#10;-&#9;&#9;&#9;&#9;&#9;decodedURL += ".edu/";&#10;-&#9;&#9;&#9;&#9;&#9;break;&#10;-&#9;&#9;&#9;&#9;case 0x03:&#10;-&#9;&#9;&#9;&#9;&#9;decodedURL += ".net/";&#10;-&#9;&#9;&#9;&#9;&#9;break;&#10;-&#9;&#9;&#9;&#9;case 0x04:&#10;-&#9;&#9;&#9;&#9;&#9;decodedURL += ".info/";&#10;-&#9;&#9;&#9;&#9;&#9;break;&#10;-&#9;&#9;&#9;&#9;case 0x05:&#10;-&#9;&#9;&#9;&#9;&#9;decodedURL += ".biz/";&#10;-&#9;&#9;&#9;&#9;&#9;break;&#10;-&#9;&#9;&#9;&#9;case 0x06:&#10;-&#9;&#9;&#9;&#9;&#9;decodedURL += ".gov/";&#10;-&#9;&#9;&#9;&#9;&#9;break;&#10;-&#9;&#9;&#9;&#9;case 0x07:&#10;-&#9;&#9;&#9;&#9;&#9;decodedURL += ".com";&#10;-&#9;&#9;&#9;&#9;&#9;break;&#10;-&#9;&#9;&#9;&#9;case 0x08:&#10;-&#9;&#9;&#9;&#9;&#9;decodedURL += ".org";&#10;-&#9;&#9;&#9;&#9;&#9;break;&#10;-&#9;&#9;&#9;&#9;case 0x09:&#10;-&#9;&#9;&#9;&#9;&#9;decodedURL += ".edu";&#10;-&#9;&#9;&#9;&#9;&#9;break;&#10;-&#9;&#9;&#9;&#9;case 0x0A:&#10;-&#9;&#9;&#9;&#9;&#9;decodedURL += ".net";&#10;-&#9;&#9;&#9;&#9;&#9;break;&#10;-&#9;&#9;&#9;&#9;case 0x0B:&#10;-&#9;&#9;&#9;&#9;&#9;decodedURL += ".info";&#10;-&#9;&#9;&#9;&#9;&#9;break;&#10;-&#9;&#9;&#9;&#9;case 0x0C:&#10;-&#9;&#9;&#9;&#9;&#9;decodedURL += ".biz";&#10;-&#9;&#9;&#9;&#9;&#9;break;&#10;-&#9;&#9;&#9;&#9;case 0x0D:&#10;-&#9;&#9;&#9;&#9;&#9;decodedURL += ".gov";&#10;-&#9;&#9;&#9;&#9;&#9;break;&#10;-&#9;&#9;&#9;&#9;default:&#10;-&#9;&#9;&#9;&#9;&#9;break;&#10;-&#9;&#9;&#9;}&#10;-&#9;&#9;}&#10;-&#9;}&#10;-&#9;return decodedURL;&#10;-} // getDecodedURL&#10;+String BLEEddystoneURL::getPrefix(){&#10;+  if(m_eddystoneData.url[0] &lt;= 0x03){&#10;+    return EDDYSTONE_URL_PREFIX[m_eddystoneData.url[0]];&#10;+  }else{&#10;+    return "";&#10;+  }&#10;+}&#10; &#10;+String BLEEddystoneURL::getSuffix(){&#10;+  if(m_eddystoneData.url[lengthURL-1] &lt;= 0x0D){&#10;+    return EDDYSTONE_URL_SUFFIX[m_eddystoneData.url[lengthURL-1]];&#10;+  }else{&#10;+    return "";&#10;+  }&#10;+}&#10; &#10;+String BLEEddystoneURL::getDecodedURL() {&#10;+  std::string decodedURL = "";&#10;+  decodedURL += getPrefix().c_str();&#10;+  if(decodedURL.length() == 0){ // No prefix extracted - interpret byte [0] as character&#10;+    decodedURL += (char)m_eddystoneData.url[0];&#10;+  }&#10;+  for(int i = 1; i &lt; lengthURL; i++) {&#10;+    if (m_eddystoneData.url[i] &gt;= 33 &amp;&amp; m_eddystoneData.url[i] &lt; 127) {&#10;+      decodedURL += (char)m_eddystoneData.url[i];&#10;+    }else{&#10;+      if(i != lengthURL-1 || m_eddystoneData.url[i] &gt; 0x0D){ // Ignore last Byte and values used for suffix&#10;+        log_e("Unexpected unprintable char in URL 0x%02X: m_eddystoneData.url[%d]", m_eddystoneData.url[i], i);&#10;+      }&#10;+    }&#10;+  }&#10;+  decodedURL += getSuffix().c_str();&#10;+  return String(decodedURL.c_str());&#10;+} // getDecodedURL&#10; &#10; /**&#10;  * Set the raw data for the beacon record.&#10;+ * Example:&#10;+ * uint8_t *payload = advertisedDevice.getPayload();&#10;+ * eddystoneTLM.setData(String((char*)payload+11, advertisedDevice.getPayloadLength() - 11));&#10;+ * Note: the offset 11 works for current implementation of example BLE_EddystoneTLM Beacon.ino, however&#10;+ *   the position is not static and it is programmers responsibility to align the data.&#10;+ * Data frame:&#10;+ * | Field  || Len | Type | UUID        | EddyStone URL |&#10;+ * | Offset || 0   | 1    | 2           | 4             |&#10;+ * | Len    || 1 B | 1 B  | 2 B         | up to 20 B    |&#10;+ * | Data   || ??  | ??   | 0xAA | 0xFE | ???           |&#10;+ *&#10;+ * EddyStone TLM frame:&#10;+ * | Field  || Type  | TX Power | URL prefix | URL    |&#10;+ * | Offset || 0     | 1        | 2          | 3      |&#10;+ * | Len    || 1 B   | 1 B      | 1 B        | 0-17 B |&#10;+ * | Data   || 0x10  | ??       | ??         | ??     |&#10;  */&#10;-void BLEEddystoneURL::setData(std::string data) {&#10;-&#9;if (data.length() &gt; sizeof(m_eddystoneData)) {&#10;-&#9;&#9;log_e("Unable to set the data ... length passed in was %d and max expected %d", data.length(), sizeof(m_eddystoneData));&#10;-&#9;&#9;return;&#10;-&#9;}&#10;-&#9;memset(&amp;m_eddystoneData, 0, sizeof(m_eddystoneData));&#10;-&#9;memcpy(&amp;m_eddystoneData, data.data(), data.length());&#10;-&#9;lengthURL = data.length() - (sizeof(m_eddystoneData) - sizeof(m_eddystoneData.url));&#10;+void BLEEddystoneURL::setData(String data) {&#10;+  if (data.length() &gt; sizeof(m_eddystoneData)) {&#10;+    log_e("Unable to set the data ... length passed in was %d and max expected %d", data.length(), sizeof(m_eddystoneData));&#10;+    return;&#10;+  }&#10;+  memset(&amp;m_eddystoneData, 0, sizeof(m_eddystoneData));&#10;+  memcpy(&amp;m_eddystoneData, data.c_str(), data.length());&#10;+  lengthURL = data.length() - (sizeof(m_eddystoneData) - sizeof(m_eddystoneData.url));&#10; } // setData&#10; &#10; void BLEEddystoneURL::setUUID(BLEUUID l_uuid) {&#10;-&#9;beaconUUID = l_uuid.getNative()-&gt;uuid.uuid16;&#10;+  uint16_t beaconUUID = l_uuid.getNative()-&gt;uuid.uuid16;&#10;+  BLEHeadder[10] = beaconUUID &gt;&gt; 8;&#10;+  BLEHeadder[9] = beaconUUID &amp; 0x00FF;&#10; } // setUUID&#10; &#10;+&#10;+void BLEEddystoneURL::setPower(esp_power_level_t advertisedTxPower) {&#10;+  int tx_power;&#10;+  switch(advertisedTxPower){&#10;+    case ESP_PWR_LVL_N12: // 12dbm&#10;+      tx_power = -12;&#10;+      break;&#10;+    case ESP_PWR_LVL_N9: // -9dbm&#10;+      tx_power =   -9;&#10;+      break;&#10;+    case ESP_PWR_LVL_N6: // -6dbm&#10;+      tx_power =   -6;&#10;+      break;&#10;+    case ESP_PWR_LVL_N3: // -3dbm&#10;+      tx_power =   -3;&#10;+      break;&#10;+    case ESP_PWR_LVL_N0: //  0dbm&#10;+      tx_power =    0;&#10;+      break;&#10;+    case ESP_PWR_LVL_P3: // +3dbm&#10;+      tx_power =   +3;&#10;+      break;&#10;+    case ESP_PWR_LVL_P6: // +6dbm&#10;+      tx_power =   +6;&#10;+      break;&#10;+    case ESP_PWR_LVL_P9: // +9dbm&#10;+      tx_power =   +9;&#10;+      break;&#10;+    default:  tx_power = 0;&#10;+  }&#10;+  m_eddystoneData.advertisedTxPower = int8_t((tx_power - -100) / 2);&#10;+} // setPower&#10;+&#10;+&#10; void BLEEddystoneURL::setPower(int8_t advertisedTxPower) {&#10;-&#9;m_eddystoneData.advertisedTxPower = advertisedTxPower;&#10;+  m_eddystoneData.advertisedTxPower = advertisedTxPower;&#10; } // setPower&#10; &#10;-void BLEEddystoneURL::setURL(std::string url) {&#10;+// Set URL bytes including prefix and optional suffix&#10;+// | Field   | Prefix  | URL + optional Suffix |&#10;+// | Offset  | 0       | 1                     |&#10;+// | Length  | 1 B     | 0 - 17 B              |&#10;+// | Example | 0x02    | 0x676F6F676C65 0x07   |&#10;+// | Decoded | http:// |   g o o g l e  .com   |&#10;+void BLEEddystoneURL::setURL(String url) {&#10;   if (url.length() &gt; sizeof(m_eddystoneData.url)) {&#10;-&#9;log_e("Unable to set the url ... length passed in was %d and max expected %d", url.length(), sizeof(m_eddystoneData.url));&#10;-&#9;return;&#10;+  log_e("Unable to set the url ... length passed in was %d and max expected %d", url.length(), sizeof(m_eddystoneData.url));&#10;+  return;&#10;   }&#10;   memset(m_eddystoneData.url, 0, sizeof(m_eddystoneData.url));&#10;-  memcpy(m_eddystoneData.url, url.data(), url.length());&#10;+  memcpy(m_eddystoneData.url, url.c_str(), url.length());&#10;   lengthURL = url.length();&#10; } // setURL&#10; &#10;+int BLEEddystoneURL::setSmartURL(String url) {&#10;+  if(url.length() == 0){&#10;+    log_e("URL String has 0 length");&#10;+    return 0; // ERROR&#10;+  }&#10;+  for(auto character : url){&#10;+    if(!isPrintable(character)){&#10;+      log_e("URL contains unprintable character(s)");&#10;+      return 0; // ERROR&#10;+    }&#10;+  }&#10;+  bool hasPrefix = false;&#10;+  bool hasSuffix = false;&#10;+  m_eddystoneData.url[0] = 0x00; // Init with default prefix "http://www."&#10;+  uint8_t suffix = 0x0E; // Init with empty string&#10;+  log_d("Encode url \"%s\" with length %d", url.c_str(), url.length());&#10;+  for(uint8_t i = 0; i &lt; 4; ++i){&#10;+    if(url.substring(0, EDDYSTONE_URL_PREFIX[i].length()) == EDDYSTONE_URL_PREFIX[i]){&#10;+      m_eddystoneData.url[0] = i;&#10;+      hasPrefix = true;&#10;+      break;&#10;+    }&#10;+  }&#10;+&#10;+  if(hasPrefix == false){&#10;+    log_w("Prefix not found - using default prefix \"http://www.\" = 0x00\n\tNote: URL must contain one of the prefixes: \"http://www.\", \"https://www.\", \"http://\", \"https://\"");&#10;+  }&#10;+&#10;+  for(uint8_t i = 0; i &lt; 0x0E; ++i){&#10;+    std::string std_url(url.c_str());&#10;+    std::string std_suffix(EDDYSTONE_URL_SUFFIX[i].c_str());&#10;+    size_t found_pos = std_url.find(std_suffix);&#10;+    if(found_pos != std::string::npos){&#10;+      hasSuffix = true;&#10;+      suffix = i;&#10;+      break;&#10;+    }&#10;+  }&#10;+&#10;+  size_t baseUrlLen = url.length() - (hasPrefix ? EDDYSTONE_URL_PREFIX[m_eddystoneData.url[0]].length() : 0) - EDDYSTONE_URL_SUFFIX[suffix].length();&#10;+  lengthURL = baseUrlLen + 1 + (hasSuffix ? 1 : 0);&#10;+  if(lengthURL &gt; 18){&#10;+    log_e("Encoded URL is too long %d B - max 18 B", lengthURL);&#10;+    return 0; // ERROR&#10;+  }&#10;+  String baseUrl = url.substring((hasPrefix ? EDDYSTONE_URL_PREFIX[m_eddystoneData.url[0]].length() : 0), baseUrlLen+(hasPrefix ? EDDYSTONE_URL_PREFIX[m_eddystoneData.url[0]].length() : 0));&#10;+  memcpy((void*)(m_eddystoneData.url+1), (void*)baseUrl.c_str(), baseUrl.length()); // substr for Arduino String&#10;+&#10;+  if(hasSuffix){&#10;+    m_eddystoneData.url[1+baseUrlLen] = suffix;&#10;+  }&#10;+&#10;+  return 1; // OK&#10;+} // setSmartURL&#10;+&#10;+void BLEEddystoneURL::_initHeadder(){&#10;+  BLEHeadder[0]  = 0x02; // Len&#10;+  BLEHeadder[1]  = 0x01; // Type Flags&#10;+  BLEHeadder[2]  = 0x06; // GENERAL_DISC_MODE 0x02 | BR_EDR_NOT_SUPPORTED 0x04&#10;+  BLEHeadder[3]  = 0x03; // Len&#10;+  BLEHeadder[4]  = 0x03; // Type 16-Bit UUID&#10;+  BLEHeadder[5]  = 0xAA; // Eddystone UUID 2 -&gt; 0xFEAA LSB&#10;+  BLEHeadder[6]  = 0xFE; // Eddystone UUID 1 MSB&#10;+  BLEHeadder[7]  = 0x00; // Length of Beacon Data shall be calculated later&#10;+  BLEHeadder[8]  = 0x16; // Type Service Data&#10;+  BLEHeadder[9]  = 0xAA; // Eddystone UUID 2 -&gt; 0xFEAA LSB&#10;+  BLEHeadder[10] = 0xFE; // Eddystone UUID 1 MSB&#10;+  BLEHeadder[11] = 0x10; // Eddystone Frame Type - URL&#10;+}&#10; &#10; #endif&#10; #endif /* SOC_BLE_SUPPORTED */&#10;' />
			<string key="comment_change" value="True" />
		</event>
	</trace>
	<trace>
		<string key="file" value="BLEExceptions.h" />
	</trace>
	<trace>
		<string key="file" value="BLEHIDDevice.cpp" />
		<event>
			<string key="timestamp" value="2023-10-05T14:54:25+03:00" />
			<string key="author" value="Me No Dev" />
			<string key="change_type" value="MODIFY" />
			<string key="commit_message" value="ESP-IDF v5.1 (#7733)&#10;&#10;* Initial changes to compile under ESP-IDF v5.1&#13;&#10;&#13;&#10;* Initial import for ESP-IDF v5.1 libs&#13;&#10;&#13;&#10;* Update toolchain&#13;&#10;&#13;&#10;* Update esp32-hal-psram.c&#13;&#10;&#13;&#10;* Add missing LDs&#13;&#10;&#13;&#10;* Update platform.txt&#13;&#10;&#13;&#10;* Stop some CI jobs, because they will always fail&#13;&#10;&#13;&#10;* Fix examples&#13;&#10;&#13;&#10;* Update app_httpd.cpp&#13;&#10;&#13;&#10;* Update ResetReason.ino&#13;&#10;&#13;&#10;* Warnings fixes&#13;&#10;&#13;&#10;* Added the example guideline and template (#7665)&#13;&#10;&#13;&#10;* Added the example guideline and template&#13;&#10;&#13;&#10;* PR review changes with some typos and grammar fixes&#13;&#10;&#13;&#10;* Changes according to the PR review&#13;&#10;&#13;&#10;* Added ESP32-S3 link to the datasheet (#7738)&#13;&#10;&#13;&#10;* Update HiFreq_ADC.ino&#13;&#10;&#13;&#10;* Replace periph_ctrl.h use because of deprecation&#13;&#10;&#13;&#10;* Replace esp_spi_flash.h use because of deprecation&#13;&#10;&#13;&#10;* Add includes to male mDNS::enableWorkstation compile&#13;&#10;&#13;&#10;* Fix ssl_client mbedtls_pk_parse_key callback&#13;&#10;&#13;&#10;* Update temperature sensor driver&#13;&#10;&#13;&#10;* Allow sketch_utils to compile with arduino-cli&#13;&#10;&#13;&#10;* Run CI with arduino-cli&#13;&#10;&#13;&#10;* Fix arduino-cli CI build on Windows&#13;&#10;&#13;&#10;* Refactor platform.txt to not use components installed through the board manager when running from git&#13;&#10;&#13;&#10;* Initial Peripheral Manager Implementation&#13;&#10;&#13;&#10;* Update SigmaDelta driver to use the new ESP-IDF driver API&#13;&#10;&#13;&#10;* Small improvements to peripheral manager and SigmaDelta&#13;&#10;&#13;&#10;* Remove deleted function from SigmaDelta header&#13;&#10;&#13;&#10;* Update DAC driver to use the new ESP-IDF driver API&#13;&#10;&#13;&#10;* Adds softAp(String) to make it compatible with ESP8266 (#7801)&#13;&#10;&#13;&#10;* Fix commentary (#7800)&#13;&#10;&#13;&#10;Minor fix based on observation done in https://github.com/espressif/arduino-esp32/issues/7795#issuecomment-1416868611&#13;&#10;&#13;&#10;* add adafruit new board feather esp32s2 reserve tft (#7794)&#13;&#10;&#13;&#10;* bugfix: add &lt;stdint.h&gt; for uint8_t to avoid compilation failure (GCC 11.2.0) (#7744)&#13;&#10;&#13;&#10;* Adding 3rd party boards for VALTRACK-V4-VTS-ESP32-C3 &amp; VALTRACK-V4-MFW-ESP32-C3 (#7735)&#13;&#10;&#13;&#10;* Added VALTRACK-V4-VTS-ESP32-C3 board definition&#13;&#10;&#13;&#10;Created pins_arduino.h &amp; made changes to boards.txt with necessary changes&#13;&#10;&#13;&#10;* Modified the URL&#13;&#10;&#13;&#10;* Renamed json&#13;&#10;&#13;&#10;* renamed all auRL&#13;&#10;&#13;&#10;* Adding VALTRACK-V4 series board definitions&#13;&#10;&#13;&#10;Added VALTRACK-V4-VTS-ESP32C3 &amp; VALTRACK-V4-MFW-ESP32-C3 board variants&#13;&#10;&#13;&#10;* Adding VALTRACK-V4 series board definitions&#13;&#10;&#13;&#10;Added VALTRACK-V4-VTS-ESP32C3 &amp; VALTRACK-V4-MFW-ESP32-C3 board variants&#13;&#10;&#13;&#10;* Reverted package_esp32_index.template.json&#13;&#10;&#13;&#10;restored package_esp32_index.template.json from edits&#13;&#10;&#13;&#10;* Reverted package_esp32_index.template.json&#13;&#10;&#13;&#10;Added new line to package_esp32_index.template.json&#13;&#10;&#13;&#10;* Update Platformio CI (#7725)&#13;&#10;&#13;&#10;* WiFiClient example fix (#7711)&#13;&#10;&#13;&#10;* Modified WiFiClient example to use thingspeak instead of non-functionig sparkfun&#13;&#10;&#13;&#10;* Moved instructions to README&#13;&#10;&#13;&#10;* Fixed spelling&#13;&#10;&#13;&#10;* Added link to S3 datasheet&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Jan Procházka &lt;90197375+P-R-O-C-H-Y@users.noreply.github.com&gt;&#13;&#10;&#13;&#10;* Mirror update from Heltec repository (#7709)&#13;&#10;&#13;&#10;Heltec updated the I2C pins in https://github.com/Heltec-Aaron-Lee/WiFi_Kit_series/commit/b10f4bf85d13fd01be80dcdb0eb59e6a8c8ba19a&#13;&#10;&#13;&#10;* Fixes BLE data printing (#7699)&#13;&#10;&#13;&#10;* Fixes BLE data printing&#13;&#10;&#13;&#10;BLE data has no '\0' terminator, therefore it can't be printed as a regular C string.&#13;&#10;This fix just prints the BLE data based on its length.&#13;&#10;&#13;&#10;* Simplify printing to a single call&#13;&#10;&#13;&#10;* split menu options + lora_32_V3 fix (#7697)&#13;&#10;&#13;&#10;* Change header gaurd name (#7696)&#13;&#10;&#13;&#10;* Fix Name (#7691)&#13;&#10;&#13;&#10;Wrong name in definitions.&#13;&#10;&#13;&#10;* Fix error in WiFiClient.cpp where the connect function fails for timeouts below 1 second (#7686)&#13;&#10;&#13;&#10;* Update WiFiClient.cpp&#13;&#10;&#13;&#10;This change will allow specifying connect timeouts below 1 second. Without this change, if connect timeouts under 1 second are given, the connect defaults to 0ms and fails. &#13;&#10;This will also allow timeouts in fractions of seconds, e.g. 1500ms. Without this change, connect timeouts are truncated to full second increments.&#13;&#10;&#13;&#10;* Make parameter timeout_ms clear&#13;&#10;&#13;&#10;* Change connection timeout_ms name for clarity&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Rodrigo Garcia &lt;rodrigo.garcia@espressif.com&gt;&#13;&#10;&#13;&#10;* fixed the function header (#7674)&#13;&#10;&#13;&#10;* fixed the function header&#13;&#10;&#13;&#10;* fixed function name and paramaters&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Jan Procházka &lt;90197375+P-R-O-C-H-Y@users.noreply.github.com&gt;&#13;&#10;&#13;&#10;* Ticker fix solving #6155 (#7664)&#13;&#10;&#13;&#10;* Wrapped Ticker functions with #pragma disabling -Wcast-function-type&#13;&#10;&#13;&#10;* Revert &quot;Wrapped Ticker functions with #pragma disabling -Wcast-function-type&quot;&#13;&#10;&#13;&#10;This reverts commit 160be7e67a10d01b6e44c4bf2521c0ccd6348976.&#13;&#10;&#13;&#10;* Fixed Ticker example&#13;&#10;&#13;&#10;* Modified Ticker example&#13;&#10;&#13;&#10;* Fixed LED_BUILTIN err for ESP32&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Jan Procházka &lt;90197375+P-R-O-C-H-Y@users.noreply.github.com&gt;&#13;&#10;&#13;&#10;* setPins fix ESP32 &quot;specified pins are not supported by this chip.&quot; (#7646)&#13;&#10;&#13;&#10;[ESP32: SDMMCFS::begin hardcodes the usage of slot 1, only check if the pins match slot 1 pins.]&#13;&#10;&#13;&#10;setPins() was testing pins D1, D2 and D3 all against D1 ... fine in 1 pin mode when all are -1 not so much if you're trying to get 4 pin mode working.&#13;&#10;I now see this function doesn't really do anything on the ESP32...accept now correctly checks that you are trying to use the slot 1 pins.&#13;&#10;&#13;&#10;Co-authored-by: Jan Procházka &lt;90197375+P-R-O-C-H-Y@users.noreply.github.com&gt;&#13;&#10;&#13;&#10;* Allow passing IP as connect method parameter in WiFiClientSecure and skip unnecessary host-ip conversions (#7643)&#13;&#10;&#13;&#10;* Add LED_BUILTIN* definitions and initialization for LEDs to stop them floating. (#7636)&#13;&#10;&#13;&#10;Co-authored-by: Rodrigo Garcia &lt;rodrigo.garcia@espressif.com&gt;&#13;&#10;&#13;&#10;* Expand path to tinuf2 image when checking existence in platformio-build.py (#7631)&#13;&#10;&#13;&#10;* Expand path to tinuf2 image when checking existence&#13;&#10;&#13;&#10;* More isFiles fixed&#13;&#10;&#13;&#10;* Remove (useless) trailing semicolon from Print.cpp (#7622)&#13;&#10;&#13;&#10;* ADD: New variant Edgebox-ESP-100 (#7771)&#13;&#10;&#13;&#10;* ADD: New variant Edgebox-ESP-100&#13;&#10;&#13;&#10;* FIX: Edgebox-ESP-100 Board.txt usb mode option change back to default value as ESP32S3&#13;&#10;&#13;&#10;* Add Crabik Slot ESP32-S3 board (#7790)&#13;&#10;&#13;&#10;* Added Crabik Slot ESP32-S3&#13;&#10;&#13;&#10;* Adding CPU frequency settings and removing excess from partition scheme settings&#13;&#10;&#13;&#10;* new variant LilyGO T-Display-S3 (#7763)&#13;&#10;&#13;&#10;* new variant LilyGO T-Display-S3&#13;&#10;&#13;&#10;https://github.com/Xinyuan-LilyGO/T-Display-S3&#13;&#10;&#13;&#10;* Add boards.txt definition&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Me No Dev &lt;me-no-dev@users.noreply.github.com&gt;&#13;&#10;&#13;&#10;* Update get.py to support Apple ARM64&#13;&#10;&#13;&#10;* Update package_esp32_index.template.json&#13;&#10;&#13;&#10;* WString Return bool (#7774)&#13;&#10;&#13;&#10;* Add Roboheart Hercules development board to the esp32-core (#7672)&#13;&#10;&#13;&#10;* added Roboheart Hercules pin definitions and board.txt entries&#13;&#10;&#13;&#10;* added package_roboheat.json for prototyping&#13;&#10;&#13;&#10;* Roboheart Hercules pins&#13;&#10;&#13;&#10;* Updated the pins&#13;&#10;&#13;&#10;* Delete package_roboheart.json&#13;&#10;&#13;&#10;* Requested changes&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: renebohne &lt;rene.bohne@gmail.com&gt;&#13;&#10;&#13;&#10;* Reword &quot;ESP-IDF as Component&quot; (#7812)&#13;&#10;&#13;&#10;I think &quot;Arduino as an ESP-IDF component&quot; or just &quot;As ESP-IDF component&quot; instead of  &quot;ESP-IDF as Component&quot; is more correct way to name the link.&#13;&#10;&#13;&#10;1. &quot;ESP-IDF as Component&quot; would imply that ESP-IDF is some sort of library for Arduino, which is (IMO) misleading, because it's true the other way around.&#13;&#10;2. It's written as &quot;Arduino as an ESP-IDF component&quot; on the webpage it points to as well.&#13;&#10;&#13;&#10;- Also I removed the capitalization from &quot;Component&quot; as I have not found a reason why is it capitalized.&#13;&#10;&#13;&#10;* add new board Adafruit Feather ESP32-S3 Reverse TFT (#7811)&#13;&#10;&#13;&#10;* Multi threading examples (tasks, queues, semaphores, mutexes) (#7660)&#13;&#10;&#13;&#10;* Moved and renamed example ESP32/FreeRTOS to MultiThreading/BasicMultiThreading&#13;&#10;&#13;&#10;* Added dummy files&#13;&#10;&#13;&#10;* Modified original example&#13;&#10;&#13;&#10;* Fixed BasicMultiThreading.ino&#13;&#10;&#13;&#10;* Added Example demonstrating use of queues&#13;&#10;&#13;&#10;* Extended info in BasicMultiThreading&#13;&#10;&#13;&#10;* Renamed Queues to singular Queue&#13;&#10;&#13;&#10;* Added Mutex example&#13;&#10;&#13;&#10;* Added Semaphore example&#13;&#10;&#13;&#10;* Moved info from example to README&#13;&#10;&#13;&#10;* Moved doc from Mutex to README&#13;&#10;&#13;&#10;* Added Queue README&#13;&#10;&#13;&#10;* Removed unecesary text&#13;&#10;&#13;&#10;* Fixed grammar&#13;&#10;&#13;&#10;* Increased stack size for Sempahore example&#13;&#10;&#13;&#10;* Added headers into .ino files&#13;&#10;&#13;&#10;* Added word Example at the end of title in README&#13;&#10;&#13;&#10;* removed unused line&#13;&#10;&#13;&#10;* Added forgotten README&#13;&#10;&#13;&#10;* Modified BasicMultiThreading example&#13;&#10;&#13;&#10;* Added missing S3 entry in README&#13;&#10;&#13;&#10;* moved location&#13;&#10;&#13;&#10;* Update ESP-IDF libs&#13;&#10;&#13;&#10;* Update CMakeLists.txt&#13;&#10;&#13;&#10;* Update esptool to v4.4&#13;&#10;&#13;&#10;* Add function timerAttachInterruptFlag (#7809)&#13;&#10;&#13;&#10;* Update esptool to v4.5&#13;&#10;&#13;&#10;* ADC refactoring (#7827)&#13;&#10;&#13;&#10;* Adc refactored + periman implementation&#13;&#10;&#13;&#10;Peripheral manager still needs to be checked if the implementation is right.&#13;&#10;&#13;&#10;* switched to working solution for milivolts read&#13;&#10;&#13;&#10;* Periman detachbus fix&#13;&#10;&#13;&#10;* coding style&#13;&#10;&#13;&#10;* fix CI warnings&#13;&#10;&#13;&#10;* fix FreeRTOS example&#13;&#10;&#13;&#10;* Update ETH.cpp&#13;&#10;&#13;&#10;* Update FunctionalInterruptStruct.ino&#13;&#10;&#13;&#10;* Update package_esp32_index.template.json&#13;&#10;&#13;&#10;* Update package_esp32_index.template.json&#13;&#10;&#13;&#10;* Fixes for the latest IDF v5.1&#13;&#10;&#13;&#10;* update esp-idf libs and toolchain&#13;&#10;&#13;&#10;* Turn OFF auto crystal frequency for ESP32 (needed by TWAI)&#13;&#10;&#13;&#10;* Update examples&#13;&#10;&#13;&#10;* Switch build to mostly use flags from files&#13;&#10;&#13;&#10;Includes can not be done this way&#13;&#10;&#13;&#10;* Reorganize flag files&#13;&#10;&#13;&#10;* Optimize chip build flags further&#13;&#10;&#13;&#10;* Revert defines from file. MBEDTLS_CONFIG_FILE does not properly expand&#13;&#10;&#13;&#10;* Add support for includes and defines from file&#13;&#10;&#13;&#10;* Replace old sdk path references in platform.txt&#13;&#10;&#13;&#10;* use gcc-ar (#8013)&#13;&#10;&#13;&#10;* Makes F_CPU generic for all SoC (#8007)&#13;&#10;&#13;&#10;Based on CONFIG_ESP_DEFAULT_CPU_FREQ_MHZ that is correctly defined in the sdkconfig file for each SoC.&#13;&#10;&#13;&#10;* TIMER refactoring (#7904)&#13;&#10;&#13;&#10;* refactor using GPtimer&#13;&#10;&#13;&#10;* Updated timer HW test&#13;&#10;&#13;&#10;* fix examples&#13;&#10;&#13;&#10;* Add v2.0.7 in issue template (#7871)&#13;&#10;&#13;&#10;* refactor using GPtimer&#13;&#10;&#13;&#10;* Updated timer HW test&#13;&#10;&#13;&#10;* fix examples&#13;&#10;&#13;&#10;* Revert &quot;Add v2.0.7 in issue template (#7871)&quot;&#13;&#10;&#13;&#10;This reverts commit fcc3b17d62ff57861f8913ca1f142fd5163b7457.&#13;&#10;&#13;&#10;* Update upload-artifact to v3 in HW CI&#13;&#10;&#13;&#10;* Revert &quot;Update upload-artifact to v3 in HW CI&quot;&#13;&#10;&#13;&#10;This reverts commit 1ba228071718ba37c4e26d98db22f77b2a7364a6.&#13;&#10;&#13;&#10;* replace resolution with frequency&#13;&#10;&#13;&#10;* remove count_down option&#13;&#10;&#13;&#10;* countup removed from examples + header&#13;&#10;&#13;&#10;* Refactored timer object&#13;&#10;&#13;&#10;* code cleanup + examples and tests fixes&#13;&#10;&#13;&#10;* TimerAlarm fix&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Vojtěch Bartoška &lt;76958047+VojtechBartoska@users.noreply.github.com&gt;&#13;&#10;&#13;&#10;* [Docs] ADC and Timer API Update (+some docs fixes) (#7906)&#13;&#10;&#13;&#10;* updated docs&#13;&#10;&#13;&#10;* remove hall sensor docs&#13;&#10;&#13;&#10;Removed Hall sensor documentation as its no longer supported in IDF-5&#13;&#10;&#13;&#10;* Fixed ESPNow examples location in docs&#13;&#10;&#13;&#10;* Last timer refactored API + gpio small fix&#13;&#10;&#13;&#10;* AlarmWrite fix&#13;&#10;&#13;&#10;* Fixes APLL/PLL with RTC Frequency (#8025)&#13;&#10;&#13;&#10;log_d() was displaying APLL for any SoC, but S3 and C3 has not such option, causing compilation errors.&#13;&#10;&#13;&#10;* Update IDF libs and fix OPI PSRAM on S3&#13;&#10;&#13;&#10;* Add setMode function HardwareSerial.c to set the esp32 uart mode for use with RS485 auto RTS (#7935)&#13;&#10;&#13;&#10;* Added setMode function to set the esp32 uart mode&#13;&#10;&#13;&#10;Used to set the esp32 uart mode for use with RS485 Half Duplex and the auto RTS pin mode. This will set/clear the RTS pin output to control the RE/DE pin on most RS485 chips.&#13;&#10;&#13;&#10;* Add Success (bool) return in some functions&#13;&#10;&#13;&#10;* Add Success (bool) return code to some functions&#13;&#10;&#13;&#10;* Add Success (bool) return to some functions&#13;&#10;&#13;&#10;* Add Success (bool) return to some functions&#13;&#10;&#13;&#10;* Fix uartSetRxTimeout return type&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Rodrigo Garcia &lt;rodrigo.garcia@espressif.com&gt;&#13;&#10;&#13;&#10;* Add support for esp-elf-gdb&#13;&#10;&#13;&#10;* WFG Crashfix (#8044)&#13;&#10;&#13;&#10;* Update component libs&#13;&#10;&#13;&#10;* IDF release/v5.1 (#8061)&#13;&#10;&#13;&#10;* IDF release/v5.1 bb9200acec&#13;&#10;&#13;&#10;* Update Esp.cpp&#13;&#10;&#13;&#10;* IDF release/v5.1 420ebd208a&#13;&#10;&#13;&#10;* Update esp32-hal-psram.c&#13;&#10;&#13;&#10;* Switch SDK to be an external package&#13;&#10;&#13;&#10;* fix path (#8096)&#13;&#10;&#13;&#10;* Makes UART work at any APB Frequency (#8097)&#13;&#10;&#13;&#10;Fixes HardwareSerial to work with IDF 5.1 on any CPU/APB Frequency (240MHz to 10MHZ), including user created low power modes.&#13;&#10;&#13;&#10;* Add required callbacks for TinyUSB DFU&#13;&#10;&#13;&#10;* Update version to 3.0.0&#13;&#10;&#13;&#10;* Add ESP.getCoreVersion() and update ESP.getChipModel()&#13;&#10;&#13;&#10;* Update timer hal for the latest 5.1&#13;&#10;&#13;&#10;* Use separate RX and TX buffer sizes in HTTP client&#13;&#10;&#13;&#10;optimizes download by allowing up to 4K packets to be received&#13;&#10;&#13;&#10;* Rename clock tree enum name in latest 5.1&#13;&#10;&#13;&#10;* ESP32-H4 support was removed in ESP-IDF v5.1&#13;&#10;&#13;&#10;* IDF release/v5.1 2004bf4e11 (#8165)&#13;&#10;&#13;&#10;* Deinit previous bus first (#8180)&#13;&#10;&#13;&#10;* TIMER - add timer_started flag, fix timerEnd() + timer HW test (#8135)&#13;&#10;&#13;&#10;* Add timer_started flag and stop before disable&#13;&#10;&#13;&#10;* Fix timer HW test&#13;&#10;&#13;&#10;* TOUCH - Peripheral manager implementation (#8129)&#13;&#10;&#13;&#10;* Touch periman implemented&#13;&#10;&#13;&#10;* Deinit previous bus first&#13;&#10;&#13;&#10;* LEDC Refactoring - Peripheral manager implemented (#8126)&#13;&#10;&#13;&#10;* LEDC periman implementation&#13;&#10;&#13;&#10;* Fix examples&#13;&#10;&#13;&#10;* Rework tone&#13;&#10;&#13;&#10;* Update ledc docs&#13;&#10;&#13;&#10;* fix missing bracket&#13;&#10;&#13;&#10;* Update analog funtions esp32-hal.h&#13;&#10;&#13;&#10;* Update CameraWebServer example&#13;&#10;&#13;&#10;* Fix HiFreq_ADC example&#13;&#10;&#13;&#10;* minor fixes - typos&#13;&#10;&#13;&#10;* Avoid calling tone/notone when tone already runs on dif. pin&#13;&#10;&#13;&#10;* Remove unused channels_resolution&#13;&#10;&#13;&#10;* GPIO - Peripheral manager implementation (#8179)&#13;&#10;&#13;&#10;* periman-implementation&#13;&#10;&#13;&#10;* fix RGB_BUILTIN and remove space&#13;&#10;&#13;&#10;* Enforces more consistency into Peripheral Manager (#8188)&#13;&#10;&#13;&#10;* Avoid log_i() message the first time a bus is assigned&#13;&#10;&#13;&#10;* Prevent operation with ESP32_BUS_TYPE_INIT&#13;&#10;&#13;&#10;* keeps coding style&#13;&#10;&#13;&#10;* do not print messages on INIT bus type&#13;&#10;&#13;&#10;* [Arduino Core 3.0.0] RMT IDF5.1 Refactoring (#7994)&#13;&#10;&#13;&#10;* RMT IDF5.1 refactoring&#13;&#10;&#13;&#10;* Fixes initial value setting&#13;&#10;&#13;&#10;* removed rmtRead() with user callback&#13;&#10;&#13;&#10;* simplify/remove Read data structure&#13;&#10;&#13;&#10;* Deep API simplification&#13;&#10;&#13;&#10;* fixes the examples&#13;&#10;&#13;&#10;* fix rmt.h&#13;&#10;&#13;&#10;* adds support to APB different frequencies&#13;&#10;&#13;&#10;* fixes CI and not defined RGB_BUILTIN&#13;&#10;&#13;&#10;* new RMT API and examples&#13;&#10;&#13;&#10;* fixing commentaties&#13;&#10;&#13;&#10;* Update esp32-hal-rgb-led.c&#13;&#10;&#13;&#10;* changes Filter API&#13;&#10;&#13;&#10;* Fixes example with Filter API&#13;&#10;&#13;&#10;* Update PlatformIO scripts for the upcoming 3.0 core (#8183)&#13;&#10;&#13;&#10;* Update PlatformIO scripts for the upcoming 3.0 core&#13;&#10;&#13;&#10;* Dynamically select proper framework-arduinoespressif32-libs package&#13;&#10;&#13;&#10;With this change the dev-platform will be dynamically configured to&#13;&#10;pull the latest .zip package with precompiled libraries from extracted from&#13;&#10;package_esp32_index.template.json&#13;&#10;&#13;&#10;* free memory on detach (#8264)&#13;&#10;&#13;&#10;* SPI - Peripheral manager implementation  (#8255)&#13;&#10;&#13;&#10;* spi periman implementation&#13;&#10;&#13;&#10;* fix header file&#13;&#10;&#13;&#10;* remove unused struct&#13;&#10;&#13;&#10;* fix missing braces&#13;&#10;&#13;&#10;* Update esp32-hal-rmt.c (#8216)&#13;&#10;&#13;&#10;Optimizing Peripheral Manager Test&#13;&#10;&#13;&#10;* I2C - Peripheral manager implementation (#8220)&#13;&#10;&#13;&#10;* i2c-master periman initial commit&#13;&#10;&#13;&#10;* i2c-master make detachbus static + comment remove&#13;&#10;&#13;&#10;* i2c-slave periman implementation&#13;&#10;&#13;&#10;* SetPinBus to INIT on i2cDeinits&#13;&#10;&#13;&#10;* Fix slave pins deinit&#13;&#10;&#13;&#10;* remove dbg logs&#13;&#10;&#13;&#10;* set ret to ESP_FAIL instead of returning&#13;&#10;&#13;&#10;* Fix warnings in hal-spi caused by pariman transition&#13;&#10;&#13;&#10;* Update esptool.py to version 4.6&#13;&#10;&#13;&#10;* Add platform support for ESP_SR&#13;&#10;&#13;&#10;* Add USB Type and valid pin check to periman&#13;&#10;&#13;&#10;* replace bus with spi-&gt;num+1 (#8279)&#13;&#10;&#13;&#10;* Remove default pins from SPI HAL&#13;&#10;&#13;&#10;* Add commented out handlers for esptool.js in TinyUSB CDC&#13;&#10;&#13;&#10;For future use&#13;&#10;&#13;&#10;* Add build defines for host os and fqbn (for debug purposes)&#13;&#10;&#13;&#10;* Provide proper memory caps total size&#13;&#10;&#13;&#10;* Update Esp.cpp&#13;&#10;&#13;&#10;* SDMMC - Peripheral manager implementation (#8289)&#13;&#10;&#13;&#10;* sdmmc periman implemented&#13;&#10;&#13;&#10;* save pins when SOC_SDMMC_USE_IOMUX&#13;&#10;&#13;&#10;* IDF release/v5.1 4bc762621d (#8292)&#13;&#10;&#13;&#10;* Adds missing pinMode (#8312)&#13;&#10;&#13;&#10;* Adds missing pinMode&#13;&#10;&#13;&#10;The example code lacks a pinMode() to initialize the GPIO 0 (button). In Arduino Core 3.0.0, it prints an error message when trying to read a not initialized GPIO.&#13;&#10;&#13;&#10;* Update KeyboardLogout.ino&#13;&#10;&#13;&#10;Adds &lt;buttonPin&gt; to keep code standard&#13;&#10;&#13;&#10;* Update KeyboardReprogram.ino&#13;&#10;&#13;&#10;Adds &lt;buttonPin&gt; to keep code standard&#13;&#10;&#13;&#10;* LEDC Fade implementation (#8338)&#13;&#10;&#13;&#10;* fade API + pointer fixes&#13;&#10;&#13;&#10;* Add fade api&#13;&#10;&#13;&#10;* Add fade example&#13;&#10;&#13;&#10;* update ledc docs&#13;&#10;&#13;&#10;* remove unused variables&#13;&#10;&#13;&#10;* fix path to example&#13;&#10;&#13;&#10;* Adds USB to Peripheral Manager - Arduino Core 3.0.0 (#8335)&#13;&#10;&#13;&#10;* ETHERNET - Peripheral manager implementation (#8297)&#13;&#10;&#13;&#10;* Peripheral manager implemented&#13;&#10;&#13;&#10;* remove unused variable&#13;&#10;&#13;&#10;* Add all RMII pins&#13;&#10;&#13;&#10;* fix typo&#13;&#10;&#13;&#10;* Adds HardwareSerial to Peripheral Manager Arduino 3.0.0 (#8328)&#13;&#10;&#13;&#10;* Do not limit ETHERNET in periman to only ESP32. SPI is also an option&#13;&#10;&#13;&#10;* Initial support for ESP32-C6 (#8337)&#13;&#10;&#13;&#10;* Add checks for SOC defines (#8351)&#13;&#10;&#13;&#10;* Add checks for SOC defines&#13;&#10;&#13;&#10;* Add SoC checks to BLE library&#13;&#10;&#13;&#10;* fix i2c compilation error&#13;&#10;&#13;&#10;* fix wrong placement of include&#13;&#10;&#13;&#10;* add check to SPI library&#13;&#10;&#13;&#10;* add check to USB library&#13;&#10;&#13;&#10;* add checks to Wire library&#13;&#10;&#13;&#10;* Feature/esp32h2 support (#8373)&#13;&#10;&#13;&#10;* Initial support for ESP32H2&#13;&#10;&#13;&#10;* Additional changes for ESP32H2&#13;&#10;&#13;&#10;* Update libs for ESP32H2&#13;&#10;&#13;&#10;* Fix flashing on ESP32-H2&#13;&#10;&#13;&#10;* Fix GPIO Configs for ESP32-C6 and ESP32-H2&#13;&#10;&#13;&#10;* Update Timer test sketch&#13;&#10;&#13;&#10;* Fix upload flash parameters&#13;&#10;&#13;&#10;* Use ets_write_char_uart instead of ets_printf in log_printfv&#13;&#10;&#13;&#10;* Print full chip report when log level is sufficient (#8282)&#13;&#10;&#13;&#10;* ESP32-C3 does not have ets_write_char_uart&#13;&#10;&#13;&#10;* Fix BLE gap event name&#13;&#10;&#13;&#10;* HW Testing - Pytest update (#8389)&#13;&#10;&#13;&#10;* update tests requirements&#13;&#10;&#13;&#10;* remove already handled components&#13;&#10;&#13;&#10;* Update version of pytest&#13;&#10;&#13;&#10;* Add missing ESP32-H2 to hil.yml&#13;&#10;&#13;&#10;* Updated FreeRTOS names (#8418)&#13;&#10;&#13;&#10;* HW Testing -  ESP32-C6 + ESP32-H2 fixes (#8404)&#13;&#10;&#13;&#10;* add C6/H2 to tests cfg.json&#13;&#10;&#13;&#10;* remove ,&#13;&#10;&#13;&#10;* workflow runs-on runner by matrix&#13;&#10;&#13;&#10;* Add need for arduino tag to select runner&#13;&#10;&#13;&#10;* Add cryptography to requirements.txt&#13;&#10;&#13;&#10;* Removed duplicate TX1 define for H2 (#8402)&#13;&#10;&#13;&#10;* Fix broken examples&#13;&#10;&#13;&#10;* Fixes RMT filter &amp; idle timing and setup (#8359)&#13;&#10;&#13;&#10;* Fixes Filter and Idle parameter to uint32&#13;&#10;&#13;&#10;* Fixes Filter and Idle setup&#13;&#10;&#13;&#10;* Fixes it to 5.1Libs branch&#13;&#10;&#13;&#10;* fix RMT CLK source and Filter API&#13;&#10;&#13;&#10;* fixes missing ;&#13;&#10;&#13;&#10;* fixes missing ;&#13;&#10;&#13;&#10;* fixes RMT example&#13;&#10;&#13;&#10;* IDF release/v5.1 a7b62bbcaf (#8438)&#13;&#10;&#13;&#10;* Add workflow to build executables from python scripts (#8290)&#13;&#10;&#13;&#10;* Add workflow to build executables from python scripts&#13;&#10;&#13;&#10;* Push binary to tools&#13;&#10;&#13;&#10;* Enable executable signing on Windows&#13;&#10;&#13;&#10;* Update get.py&#13;&#10;&#13;&#10;* Push binary to tools&#13;&#10;&#13;&#10;* Try with multiple files&#13;&#10;&#13;&#10;* Try more actions&#13;&#10;&#13;&#10;* Try powershell&#13;&#10;&#13;&#10;* Restore tools so they do not get rebuilt&#13;&#10;&#13;&#10;* Finalize scripts&#13;&#10;&#13;&#10;* Push binary to tools&#13;&#10;&#13;&#10;* App rollback should be after PSRAM is initialized&#13;&#10;&#13;&#10;* Correcting RX1 to GPIO4 and TX1 to GPIO5 to be consistent with documentation. Previous pin use works but is inconsistent with C6 docs.&#13;&#10;&#13;&#10;* Fixes Memory Leak (#8486)&#13;&#10;&#13;&#10;* fixes preprocessor test (#8485)&#13;&#10;&#13;&#10;* fixes preprocessor test&#13;&#10;&#13;&#10;When using `#define USE_SOFT_AP` &#13;&#10;Change&#13;&#10;`&amp;&amp; not USE_SOFT_AP` ==&gt; `&amp;&amp; !defined(USE_SOFT_AP)`&#13;&#10;&#13;&#10;* Adds any BLE capable device in WiFiProv.ino&#13;&#10;&#13;&#10;Removing ESP32 restriction for BLE Provisioning.&#13;&#10;&#13;&#10;* fix flash mode read out for C6&#13;&#10;&#13;&#10;* Add option for custom partitions without restrictions&#13;&#10;&#13;&#10;* SD_MMC update (#8298)&#13;&#10;&#13;&#10;* Updated SD_MMC lib and examples&#13;&#10;&#13;&#10;* Removed getter implementation and commented usage in examples&#13;&#10;&#13;&#10;* squashed updates&#13;&#10;&#13;&#10;* IDF release/v5.1 f0437b945f (#8599)&#13;&#10;&#13;&#10;* Update package_esp32_index.template.json&#13;&#10;&#13;&#10;* Fix printf format build error in BTAdvertisedDeviceSet.cpp&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Pedro Minatel &lt;pedro.minatel@espressif.com&gt;&#13;&#10;Co-authored-by: Rodrigo Garcia &lt;rodrigo.garcia@espressif.com&gt;&#13;&#10;Co-authored-by: Ha Thach &lt;thach@tinyusb.org&gt;&#13;&#10;Co-authored-by: Martin Turski &lt;quiret@vfemail.net&gt;&#13;&#10;Co-authored-by: raviypujar &lt;raviypujar@gmail.com&gt;&#13;&#10;Co-authored-by: Jason2866 &lt;24528715+Jason2866@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: Tomáš Pilný &lt;34927466+PilnyTomas@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: Jan Procházka &lt;90197375+P-R-O-C-H-Y@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: Daniel Berlin &lt;dberlin@dberlin.org&gt;&#13;&#10;Co-authored-by: Nima Askari (نیما عسکری) &lt;nimaltd@yahoo.com&gt;&#13;&#10;Co-authored-by: rtpmsys &lt;106180646+rtpmsys@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: bytiful &lt;55647551+bytiful@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: tmfarrington &lt;tmfarrington@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: Krzysiek S &lt;chris.streh@gmail.com&gt;&#13;&#10;Co-authored-by: surt &lt;carl.olsson@gmail.com&gt;&#13;&#10;Co-authored-by: Max Scheffler &lt;max.scheffler@pm.me&gt;&#13;&#10;Co-authored-by: Clemens Kirchgatterer &lt;clemens@1541.org&gt;&#13;&#10;Co-authored-by: Peter Pan's Techland &lt;twinkle-pirate@hotmail.com&gt;&#13;&#10;Co-authored-by: Roman &lt;programmeofficemilkyway@gmail.com&gt;&#13;&#10;Co-authored-by: Eistee &lt;Eistee82@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: David McCurley &lt;44048235+mrengineer7777@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: Gaya3N25 &lt;30388176+Gaya3N25@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: renebohne &lt;rene.bohne@gmail.com&gt;&#13;&#10;Co-authored-by: Olivér Remény &lt;25034625+remenyo@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: davidk88 &lt;david.kotar@gmail.com&gt;&#13;&#10;Co-authored-by: Vojtěch Bartoška &lt;76958047+VojtechBartoska@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: James Armstrong &lt;jamesarmstrong3@me.com&gt;&#13;&#10;Co-authored-by: Valerii Koval &lt;valeros@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: Peter G. Jensen &lt;root@petergjoel.dk&gt;" />
			<int key="additions" value="5" />
			<int key="deletions" value="2" />
			<string key="diff" value='@@ -4,6 +4,9 @@&#10;  *  Created on: Jan 03, 2018&#10;  *      Author: chegewara&#10;  */&#10;+#include "soc/soc_caps.h"&#10;+#if SOC_BLE_SUPPORTED&#10;+&#10; #include "sdkconfig.h"&#10; #if defined(CONFIG_BLUEDROID_ENABLED)&#10; &#10;@@ -243,5 +246,5 @@ BLEService* BLEHIDDevice::batteryService() {&#10; &#9;return m_batteryService;&#10; }&#10; &#10;-#endif // CONFIG_BLUEDROID_ENABLED&#10;-&#10;+#endif /* CONFIG_BLUEDROID_ENABLED */&#10;+#endif /* SOC_BLE_SUPPORTED */&#10;' />
			<string key="comment_change" value="False" />
		</event>
	</trace>
	<trace>
		<string key="file" value="BLEHIDDevice.h" />
	</trace>
	<trace>
		<string key="file" value="BLERemoteCharacteristic.h" />
	</trace>
	<trace>
		<string key="file" value="BLERemoteDescriptor.cpp" />
		<event>
			<string key="timestamp" value="2023-10-06T15:50:11+03:00" />
			<string key="author" value="Me No Dev" />
			<string key="change_type" value="MODIFY" />
			<string key="commit_message" value="BLE upgrades (#8724)&#10;&#10;* Renamed library description&#13;&#10;&#13;&#10;* Updated Eddystone URL (not complete)&#13;&#10;&#13;&#10;* Updated Eddystone URL&#13;&#10;&#13;&#10;* Updated Eddystone classes and beacon scanner&#13;&#10;&#13;&#10;* Renamed examples - removing prefix BLE_&#13;&#10;&#13;&#10;* Renamed Beacon_Scanner&#13;&#10;&#13;&#10;* Updated TLM&#13;&#10;&#13;&#10;* Changed std::string to Arduino String&#13;&#10;&#13;&#10;* More std::string -&gt; String&#13;&#10;&#13;&#10;* Changed String in forgotten file&#13;&#10;&#13;&#10;* Changed .data to .c_str&#13;&#10;&#13;&#10;* Reverting single String type change&#13;&#10;&#13;&#10;* Few more fixes related to the String transition&#13;&#10;&#13;&#10;* Fixed URL and Utils error&#13;&#10;&#13;&#10;* Added and modified compatibility safeguards for BLE5 examples&#13;&#10;&#13;&#10;* Added #include WString.h&#13;&#10;&#13;&#10;* Fixed Beacon_Scanner&#13;&#10;&#13;&#10;* Remove commented include&#13;&#10;&#13;&#10;Co-authored-by: Lucas Saavedra Vaz &lt;lucassvaz@yahoo.com.br&gt;&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Tomas Pilny &lt;tomas.pilny@espressif.com&gt;&#13;&#10;Co-authored-by: Lucas Saavedra Vaz &lt;lucassvaz@yahoo.com.br&gt;" />
			<int key="additions" value="113" />
			<int key="deletions" value="113" />
			<string key="diff" value='@@ -15,13 +15,13 @@&#10; #include "esp32-hal-log.h"&#10; &#10; BLERemoteDescriptor::BLERemoteDescriptor(&#10;-&#9;uint16_t                 handle,&#10;-&#9;BLEUUID                  uuid,&#10;-&#9;BLERemoteCharacteristic* pRemoteCharacteristic) {&#10;+  uint16_t                 handle,&#10;+  BLEUUID                  uuid,&#10;+  BLERemoteCharacteristic* pRemoteCharacteristic) {&#10; &#10;-&#9;m_handle                = handle;&#10;-&#9;m_uuid                  = uuid;&#10;-&#9;m_pRemoteCharacteristic = pRemoteCharacteristic;&#10;+  m_handle                = handle;&#10;+  m_uuid                  = uuid;&#10;+  m_pRemoteCharacteristic = pRemoteCharacteristic;&#10;     m_auth                  = ESP_GATT_AUTH_REQ_NONE;&#10; }&#10; &#10;@@ -31,7 +31,7 @@ BLERemoteDescriptor::BLERemoteDescriptor(&#10;  * @return The handle associated with this remote descriptor.&#10;  */&#10; uint16_t BLERemoteDescriptor::getHandle() {&#10;-&#9;return m_handle;&#10;+  return m_handle;&#10; } // getHandle&#10; &#10; &#10;@@ -40,7 +40,7 @@ uint16_t BLERemoteDescriptor::getHandle() {&#10;  * @return The characteristic that owns this descriptor.&#10;  */&#10; BLERemoteCharacteristic* BLERemoteDescriptor::getRemoteCharacteristic() {&#10;-&#9;return m_pRemoteCharacteristic;&#10;+  return m_pRemoteCharacteristic;&#10; } // getRemoteCharacteristic&#10; &#10; &#10;@@ -49,100 +49,100 @@ BLERemoteCharacteristic* BLERemoteDescriptor::getRemoteCharacteristic() {&#10;  * @return The UUID associated this remote descriptor.&#10;  */&#10; BLEUUID BLERemoteDescriptor::getUUID() {&#10;-&#9;return m_uuid;&#10;+  return m_uuid;&#10; } // getUUID&#10; &#10; void BLERemoteDescriptor::gattClientEventHandler(esp_gattc_cb_event_t event, esp_gatt_if_t gattc_if, esp_ble_gattc_cb_param_t* evtParam) {&#10;-&#9;switch(event) {&#10;-&#9;&#9;// ESP_GATTC_READ_DESCR_EVT&#10;-&#9;&#9;// This event indicates that the server has responded to the read request.&#10;-&#9;&#9;//&#10;-&#9;&#9;// read:&#10;-&#9;&#9;// - esp_gatt_status_t  status&#10;-&#9;&#9;// - uint16_t           conn_id&#10;-&#9;&#9;// - uint16_t           handle&#10;-&#9;&#9;// - uint8_t*           value&#10;-&#9;&#9;// - uint16_t           value_len&#10;-&#9;&#9;case ESP_GATTC_READ_DESCR_EVT:&#10;-&#9;&#9;&#9;// If this event is not for us, then nothing further to do.&#10;-&#9;&#9;&#9;if (evtParam-&gt;read.handle != getHandle()) break;&#10;-&#9;&#9;&#9;// At this point, we have determined that the event is for us, so now we save the value&#10;-&#9;&#9;&#9;if (evtParam-&gt;read.status == ESP_GATT_OK) {&#10;-&#9;&#9;&#9;&#9;// it will read the cached value of the descriptor&#10;-&#9;&#9;&#9;&#9;m_value = std::string((char*) evtParam-&gt;read.value, evtParam-&gt;read.value_len);&#10;-&#9;&#9;&#9;} else {&#10;-&#9;&#9;&#9;&#9;m_value = "";&#10;-&#9;&#9;&#9;}&#10;-&#9;&#9;&#9;// Unlock the semaphore to ensure that the requestor of the data can continue.&#10;-&#9;&#9;&#9;m_semaphoreReadDescrEvt.give();&#10;-&#9;&#9;&#9;break;&#10;-&#10;-&#9;&#9;case ESP_GATTC_WRITE_DESCR_EVT:&#10;-&#9;&#9;&#9;if (evtParam-&gt;write.handle != getHandle())&#10;-&#9;&#9;&#9;&#9;break;&#10;-&#9;&#9;&#9;m_semaphoreWriteDescrEvt.give();&#10;-&#9;&#9;&#9;break;&#10;-&#9;&#9;default:&#10;-&#9;&#9;&#9;break;&#10;-&#9;}&#10;+  switch(event) {&#10;+    // ESP_GATTC_READ_DESCR_EVT&#10;+    // This event indicates that the server has responded to the read request.&#10;+    //&#10;+    // read:&#10;+    // - esp_gatt_status_t  status&#10;+    // - uint16_t           conn_id&#10;+    // - uint16_t           handle&#10;+    // - uint8_t*           value&#10;+    // - uint16_t           value_len&#10;+    case ESP_GATTC_READ_DESCR_EVT:&#10;+      // If this event is not for us, then nothing further to do.&#10;+      if (evtParam-&gt;read.handle != getHandle()) break;&#10;+      // At this point, we have determined that the event is for us, so now we save the value&#10;+      if (evtParam-&gt;read.status == ESP_GATT_OK) {&#10;+        // it will read the cached value of the descriptor&#10;+        m_value = String((char*) evtParam-&gt;read.value, evtParam-&gt;read.value_len);&#10;+      } else {&#10;+        m_value = "";&#10;+      }&#10;+      // Unlock the semaphore to ensure that the requestor of the data can continue.&#10;+      m_semaphoreReadDescrEvt.give();&#10;+      break;&#10;+&#10;+    case ESP_GATTC_WRITE_DESCR_EVT:&#10;+      if (evtParam-&gt;write.handle != getHandle())&#10;+        break;&#10;+      m_semaphoreWriteDescrEvt.give();&#10;+      break;&#10;+    default:&#10;+      break;&#10;+  }&#10; }&#10; &#10;-std::string BLERemoteDescriptor::readValue() {&#10;-&#9;log_v("&gt;&gt; readValue: %s", toString().c_str());&#10;+String BLERemoteDescriptor::readValue() {&#10;+  log_v("&gt;&gt; readValue: %s", toString().c_str());&#10; &#10;-&#9;// Check to see that we are connected.&#10;-&#9;if (!getRemoteCharacteristic()-&gt;getRemoteService()-&gt;getClient()-&gt;isConnected()) {&#10;-&#9;&#9;log_e("Disconnected");&#10;-&#9;&#9;return std::string();&#10;-&#9;}&#10;+  // Check to see that we are connected.&#10;+  if (!getRemoteCharacteristic()-&gt;getRemoteService()-&gt;getClient()-&gt;isConnected()) {&#10;+    log_e("Disconnected");&#10;+    return String();&#10;+  }&#10; &#10;-&#9;m_semaphoreReadDescrEvt.take("readValue");&#10;+  m_semaphoreReadDescrEvt.take("readValue");&#10; &#10;-&#9;// Ask the BLE subsystem to retrieve the value for the remote hosted characteristic.&#10;-&#9;esp_err_t errRc = ::esp_ble_gattc_read_char_descr(&#10;-&#9;&#9;m_pRemoteCharacteristic-&gt;getRemoteService()-&gt;getClient()-&gt;getGattcIf(),&#10;-&#9;&#9;m_pRemoteCharacteristic-&gt;getRemoteService()-&gt;getClient()-&gt;getConnId(),    // The connection ID to the BLE server&#10;-&#9;&#9;getHandle(),                                   // The handle of this characteristic&#10;-&#9;&#9;m_auth);                       // Security&#10;+  // Ask the BLE subsystem to retrieve the value for the remote hosted characteristic.&#10;+  esp_err_t errRc = ::esp_ble_gattc_read_char_descr(&#10;+    m_pRemoteCharacteristic-&gt;getRemoteService()-&gt;getClient()-&gt;getGattcIf(),&#10;+    m_pRemoteCharacteristic-&gt;getRemoteService()-&gt;getClient()-&gt;getConnId(),    // The connection ID to the BLE server&#10;+    getHandle(),                                   // The handle of this characteristic&#10;+    m_auth);                       // Security&#10; &#10;-&#9;if (errRc != ESP_OK) {&#10;-&#9;&#9;log_e("esp_ble_gattc_read_char: rc=%d %s", errRc, GeneralUtils::errorToString(errRc));&#10;-&#9;&#9;return "";&#10;-&#9;}&#10;+  if (errRc != ESP_OK) {&#10;+    log_e("esp_ble_gattc_read_char: rc=%d %s", errRc, GeneralUtils::errorToString(errRc));&#10;+    return "";&#10;+  }&#10; &#10;-&#9;// Block waiting for the event that indicates that the read has completed.  When it has, the std::string found&#10;-&#9;// in m_value will contain our data.&#10;-&#9;m_semaphoreReadDescrEvt.wait("readValue");&#10;+  // Block waiting for the event that indicates that the read has completed.  When it has, the String found&#10;+  // in m_value will contain our data.&#10;+  m_semaphoreReadDescrEvt.wait("readValue");&#10; &#10;-&#9;log_v("&lt;&lt; readValue(): length: %d", m_value.length());&#10;-&#9;return m_value;&#10;+  log_v("&lt;&lt; readValue(): length: %d", m_value.length());&#10;+  return m_value;&#10; } // readValue&#10; &#10; &#10; uint8_t BLERemoteDescriptor::readUInt8() {&#10;-&#9;std::string value = readValue();&#10;-&#9;if (value.length() &gt;= 1) {&#10;-&#9;&#9;return (uint8_t) value[0];&#10;-&#9;}&#10;-&#9;return 0;&#10;+  String value = readValue();&#10;+  if (value.length() &gt;= 1) {&#10;+    return (uint8_t) value[0];&#10;+  }&#10;+  return 0;&#10; } // readUInt8&#10; &#10; &#10; uint16_t BLERemoteDescriptor::readUInt16() {&#10;-&#9;std::string value = readValue();&#10;-&#9;if (value.length() &gt;= 2) {&#10;-&#9;&#9;return *(uint16_t*) value.data();&#10;-&#9;}&#10;-&#9;return 0;&#10;+  String value = readValue();&#10;+  if (value.length() &gt;= 2) {&#10;+    return *(uint16_t*) value.c_str();&#10;+  }&#10;+  return 0;&#10; } // readUInt16&#10; &#10; &#10; uint32_t BLERemoteDescriptor::readUInt32() {&#10;-&#9;std::string value = readValue();&#10;-&#9;if (value.length() &gt;= 4) {&#10;-&#9;&#9;return *(uint32_t*) value.data();&#10;-&#9;}&#10;-&#9;return 0;&#10;+  String value = readValue();&#10;+  if (value.length() &gt;= 4) {&#10;+    return *(uint32_t*) value.c_str();&#10;+  }&#10;+  return 0;&#10; } // readUInt32&#10; &#10; &#10;@@ -150,13 +150,13 @@ uint32_t BLERemoteDescriptor::readUInt32() {&#10;  * @brief Return a string representation of this BLE Remote Descriptor.&#10;  * @retun A string representation of this BLE Remote Descriptor.&#10;  */&#10;-std::string BLERemoteDescriptor::toString() {&#10;-&#9;char val[6];&#10;-&#9;snprintf(val, sizeof(val), "%d", getHandle());&#10;-&#9;std::string res = "handle: ";&#10;-&#9;res += val;&#10;-&#9;res += ", uuid: " + getUUID().toString();&#10;-&#9;return res;&#10;+String BLERemoteDescriptor::toString() {&#10;+  char val[6];&#10;+  snprintf(val, sizeof(val), "%d", getHandle());&#10;+  String res = "handle: ";&#10;+  res += val;&#10;+  res += ", uuid: " + getUUID().toString();&#10;+  return res;&#10; } // toString&#10; &#10; &#10;@@ -167,30 +167,30 @@ std::string BLERemoteDescriptor::toString() {&#10;  * @param [in] response True if we expect a response.&#10;  */&#10; void BLERemoteDescriptor::writeValue(uint8_t* data, size_t length, bool response) {&#10;-&#9;log_v("&gt;&gt; writeValue: %s", toString().c_str());&#10;-&#9;// Check to see that we are connected.&#10;-&#9;if (!getRemoteCharacteristic()-&gt;getRemoteService()-&gt;getClient()-&gt;isConnected()) {&#10;-&#9;&#9;log_e("Disconnected");&#10;-&#9;&#9;return;&#10;-&#9;}&#10;-&#10;-&#9;m_semaphoreWriteDescrEvt.take("writeValue");&#10;-&#10;-&#9;esp_err_t errRc = ::esp_ble_gattc_write_char_descr(&#10;-&#9;&#9;m_pRemoteCharacteristic-&gt;getRemoteService()-&gt;getClient()-&gt;getGattcIf(),&#10;-&#9;&#9;m_pRemoteCharacteristic-&gt;getRemoteService()-&gt;getClient()-&gt;getConnId(),&#10;-&#9;&#9;getHandle(),&#10;-&#9;&#9;length,                           // Data length&#10;-&#9;&#9;data,                             // Data&#10;-&#9;&#9;response ? ESP_GATT_WRITE_TYPE_RSP : ESP_GATT_WRITE_TYPE_NO_RSP,&#10;-&#9;&#9;m_auth&#10;-&#9;);&#10;-&#9;if (errRc != ESP_OK) {&#10;-&#9;&#9;log_e("esp_ble_gattc_write_char_descr: %d", errRc);&#10;-&#9;}&#10;-&#10;-&#9;m_semaphoreWriteDescrEvt.wait("writeValue");&#10;-&#9;log_v("&lt;&lt; writeValue");&#10;+  log_v("&gt;&gt; writeValue: %s", toString().c_str());&#10;+  // Check to see that we are connected.&#10;+  if (!getRemoteCharacteristic()-&gt;getRemoteService()-&gt;getClient()-&gt;isConnected()) {&#10;+    log_e("Disconnected");&#10;+    return;&#10;+  }&#10;+&#10;+  m_semaphoreWriteDescrEvt.take("writeValue");&#10;+&#10;+  esp_err_t errRc = ::esp_ble_gattc_write_char_descr(&#10;+    m_pRemoteCharacteristic-&gt;getRemoteService()-&gt;getClient()-&gt;getGattcIf(),&#10;+    m_pRemoteCharacteristic-&gt;getRemoteService()-&gt;getClient()-&gt;getConnId(),&#10;+    getHandle(),&#10;+    length,                           // Data length&#10;+    data,                             // Data&#10;+    response ? ESP_GATT_WRITE_TYPE_RSP : ESP_GATT_WRITE_TYPE_NO_RSP,&#10;+    m_auth&#10;+  );&#10;+  if (errRc != ESP_OK) {&#10;+    log_e("esp_ble_gattc_write_char_descr: %d", errRc);&#10;+  }&#10;+&#10;+  m_semaphoreWriteDescrEvt.wait("writeValue");&#10;+  log_v("&lt;&lt; writeValue");&#10; } // writeValue&#10; &#10; &#10;@@ -199,8 +199,8 @@ void BLERemoteDescriptor::writeValue(uint8_t* data, size_t length, bool response&#10;  * @param [in] newValue The data to send to the remote descriptor.&#10;  * @param [in] response True if we expect a response.&#10;  */&#10;-void BLERemoteDescriptor::writeValue(std::string newValue, bool response) {&#10;-&#9;writeValue((uint8_t*) newValue.data(), newValue.length(), response);&#10;+void BLERemoteDescriptor::writeValue(String newValue, bool response) {&#10;+  writeValue((uint8_t*) newValue.c_str(), newValue.length(), response);&#10; } // writeValue&#10; &#10; &#10;@@ -210,7 +210,7 @@ void BLERemoteDescriptor::writeValue(std::string newValue, bool response) {&#10;  * @param [in] True if we expect a response.&#10;  */&#10; void BLERemoteDescriptor::writeValue(uint8_t newValue, bool response) {&#10;-&#9;writeValue(&amp;newValue, 1, response);&#10;+  writeValue(&amp;newValue, 1, response);&#10; } // writeValue&#10; &#10; /**&#10;' />
			<string key="comment_change" value="True" />
		</event>
	</trace>
	<trace>
		<string key="file" value="BLERemoteDescriptor.h" />
	</trace>
	<trace>
		<string key="file" value="BLERemoteService.cpp" />
		<event>
			<string key="timestamp" value="2023-10-06T15:50:11+03:00" />
			<string key="author" value="Me No Dev" />
			<string key="change_type" value="MODIFY" />
			<string key="commit_message" value="BLE upgrades (#8724)&#10;&#10;* Renamed library description&#13;&#10;&#13;&#10;* Updated Eddystone URL (not complete)&#13;&#10;&#13;&#10;* Updated Eddystone URL&#13;&#10;&#13;&#10;* Updated Eddystone classes and beacon scanner&#13;&#10;&#13;&#10;* Renamed examples - removing prefix BLE_&#13;&#10;&#13;&#10;* Renamed Beacon_Scanner&#13;&#10;&#13;&#10;* Updated TLM&#13;&#10;&#13;&#10;* Changed std::string to Arduino String&#13;&#10;&#13;&#10;* More std::string -&gt; String&#13;&#10;&#13;&#10;* Changed String in forgotten file&#13;&#10;&#13;&#10;* Changed .data to .c_str&#13;&#10;&#13;&#10;* Reverting single String type change&#13;&#10;&#13;&#10;* Few more fixes related to the String transition&#13;&#10;&#13;&#10;* Fixed URL and Utils error&#13;&#10;&#13;&#10;* Added and modified compatibility safeguards for BLE5 examples&#13;&#10;&#13;&#10;* Added #include WString.h&#13;&#10;&#13;&#10;* Fixed Beacon_Scanner&#13;&#10;&#13;&#10;* Remove commented include&#13;&#10;&#13;&#10;Co-authored-by: Lucas Saavedra Vaz &lt;lucassvaz@yahoo.com.br&gt;&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Tomas Pilny &lt;tomas.pilny@espressif.com&gt;&#13;&#10;Co-authored-by: Lucas Saavedra Vaz &lt;lucassvaz@yahoo.com.br&gt;" />
			<int key="additions" value="210" />
			<int key="deletions" value="210" />
			<string key="diff" value='@@ -20,37 +20,37 @@&#10; #pragma GCC diagnostic warning "-Wunused-but-set-parameter"&#10; &#10; BLERemoteService::BLERemoteService(&#10;-&#9;&#9;esp_gatt_id_t srvcId,&#10;-&#9;&#9;BLEClient*    pClient,&#10;-&#9;&#9;uint16_t      startHandle,&#10;-&#9;&#9;uint16_t      endHandle&#10;-&#9;) {&#10;-&#10;-&#9;log_v("&gt;&gt; BLERemoteService()");&#10;-&#9;m_srvcId  = srvcId;&#10;-&#9;m_pClient = pClient;&#10;-&#9;m_uuid    = BLEUUID(m_srvcId);&#10;-&#9;m_haveCharacteristics = false;&#10;-&#9;m_startHandle = startHandle;&#10;-&#9;m_endHandle = endHandle;&#10;-&#10;-&#9;log_v("&lt;&lt; BLERemoteService()");&#10;+    esp_gatt_id_t srvcId,&#10;+    BLEClient*    pClient,&#10;+    uint16_t      startHandle,&#10;+    uint16_t      endHandle&#10;+  ) {&#10;+&#10;+  log_v("&gt;&gt; BLERemoteService()");&#10;+  m_srvcId  = srvcId;&#10;+  m_pClient = pClient;&#10;+  m_uuid    = BLEUUID(m_srvcId);&#10;+  m_haveCharacteristics = false;&#10;+  m_startHandle = startHandle;&#10;+  m_endHandle = endHandle;&#10;+&#10;+  log_v("&lt;&lt; BLERemoteService()");&#10; }&#10; &#10; &#10; BLERemoteService::~BLERemoteService() {&#10;-&#9;removeCharacteristics();&#10;+  removeCharacteristics();&#10; }&#10; &#10; /*&#10; static bool compareSrvcId(esp_gatt_srvc_id_t id1, esp_gatt_srvc_id_t id2) {&#10;-&#9;if (id1.id.inst_id != id2.id.inst_id) {&#10;-&#9;&#9;return false;&#10;-&#9;}&#10;-&#9;if (!BLEUUID(id1.id.uuid).equals(BLEUUID(id2.id.uuid))) {&#10;-&#9;&#9;return false;&#10;-&#9;}&#10;-&#9;return true;&#10;+  if (id1.id.inst_id != id2.id.inst_id) {&#10;+    return false;&#10;+  }&#10;+  if (!BLEUUID(id1.id.uuid).equals(BLEUUID(id2.id.uuid))) {&#10;+    return false;&#10;+  }&#10;+  return true;&#10; } // compareSrvcId&#10; */&#10; &#10;@@ -58,64 +58,64 @@ static bool compareSrvcId(esp_gatt_srvc_id_t id1, esp_gatt_srvc_id_t id2) {&#10;  * @brief Handle GATT Client events&#10;  */&#10; void BLERemoteService::gattClientEventHandler(&#10;-&#9;esp_gattc_cb_event_t      event,&#10;-&#9;esp_gatt_if_t             gattc_if,&#10;-&#9;esp_ble_gattc_cb_param_t* evtParam) {&#10;-&#9;switch (event) {&#10;-&#9;&#9;//&#10;-&#9;&#9;// ESP_GATTC_GET_CHAR_EVT&#10;-&#9;&#9;//&#10;-&#9;&#9;// get_char:&#10;-&#9;&#9;// - esp_gatt_status_t    status&#10;-&#9;&#9;// - uin1t6_t             conn_id&#10;-&#9;&#9;// - esp_gatt_srvc_id_t   srvc_id&#10;-&#9;&#9;// - esp_gatt_id_t        char_id&#10;-&#9;&#9;// - esp_gatt_char_prop_t char_prop&#10;-&#9;&#9;//&#10;-&#9;/*&#10;-&#9;&#9;case ESP_GATTC_GET_CHAR_EVT: {&#10;-&#9;&#9;&#9;// Is this event for this service?  If yes, then the local srvc_id and the event srvc_id will be&#10;-&#9;&#9;&#9;// the same.&#10;-&#9;&#9;&#9;if (compareSrvcId(m_srvcId, evtParam-&gt;get_char.srvc_id) == false) {&#10;-&#9;&#9;&#9;&#9;break;&#10;-&#9;&#9;&#9;}&#10;-&#10;-&#9;&#9;&#9;// If the status is NOT OK then we have a problem and continue.&#10;-&#9;&#9;&#9;if (evtParam-&gt;get_char.status != ESP_GATT_OK) {&#10;-&#9;&#9;&#9;&#9;m_semaphoreGetCharEvt.give();&#10;-&#9;&#9;&#9;&#9;break;&#10;-&#9;&#9;&#9;}&#10;-&#10;-&#9;&#9;&#9;// This is an indication that we now have the characteristic details for a characteristic owned&#10;-&#9;&#9;&#9;// by this service so remember it.&#10;-&#9;&#9;&#9;m_characteristicMap.insert(std::pair&lt;std::string, BLERemoteCharacteristic*&gt;(&#10;-&#9;&#9;&#9;&#9;&#9;BLEUUID(evtParam-&gt;get_char.char_id.uuid).toString(),&#10;-&#9;&#9;&#9;&#9;&#9;new BLERemoteCharacteristic(evtParam-&gt;get_char.char_id, evtParam-&gt;get_char.char_prop, this)&#9;));&#10;-&#10;-&#10;-&#9;&#9;&#9;// Now that we have received a characteristic, lets ask for the next one.&#10;-&#9;&#9;&#9;esp_err_t errRc = ::esp_ble_gattc_get_characteristic(&#10;-&#9;&#9;&#9;&#9;&#9;m_pClient-&gt;getGattcIf(),&#10;-&#9;&#9;&#9;&#9;&#9;m_pClient-&gt;getConnId(),&#10;-&#9;&#9;&#9;&#9;&#9;&amp;m_srvcId,&#10;-&#9;&#9;&#9;&#9;&#9;&amp;evtParam-&gt;get_char.char_id);&#10;-&#9;&#9;&#9;if (errRc != ESP_OK) {&#10;-&#9;&#9;&#9;&#9;log_e("esp_ble_gattc_get_characteristic: rc=%d %s", errRc, GeneralUtils::errorToString(errRc));&#10;-&#9;&#9;&#9;&#9;break;&#10;-&#9;&#9;&#9;}&#10;-&#10;-&#9;&#9;&#9;//m_semaphoreGetCharEvt.give();&#10;-&#9;&#9;&#9;break;&#10;-&#9;&#9;} // ESP_GATTC_GET_CHAR_EVT&#10;+  esp_gattc_cb_event_t      event,&#10;+  esp_gatt_if_t             gattc_if,&#10;+  esp_ble_gattc_cb_param_t* evtParam) {&#10;+  switch (event) {&#10;+    //&#10;+    // ESP_GATTC_GET_CHAR_EVT&#10;+    //&#10;+    // get_char:&#10;+    // - esp_gatt_status_t    status&#10;+    // - uin1t6_t             conn_id&#10;+    // - esp_gatt_srvc_id_t   srvc_id&#10;+    // - esp_gatt_id_t        char_id&#10;+    // - esp_gatt_char_prop_t char_prop&#10;+    //&#10;+  /*&#10;+    case ESP_GATTC_GET_CHAR_EVT: {&#10;+      // Is this event for this service?  If yes, then the local srvc_id and the event srvc_id will be&#10;+      // the same.&#10;+      if (compareSrvcId(m_srvcId, evtParam-&gt;get_char.srvc_id) == false) {&#10;+        break;&#10;+      }&#10;+&#10;+      // If the status is NOT OK then we have a problem and continue.&#10;+      if (evtParam-&gt;get_char.status != ESP_GATT_OK) {&#10;+        m_semaphoreGetCharEvt.give();&#10;+        break;&#10;+      }&#10;+&#10;+      // This is an indication that we now have the characteristic details for a characteristic owned&#10;+      // by this service so remember it.&#10;+      m_characteristicMap.insert(std::pair&lt;String, BLERemoteCharacteristic*&gt;(&#10;+          BLEUUID(evtParam-&gt;get_char.char_id.uuid).toString(),&#10;+          new BLERemoteCharacteristic(evtParam-&gt;get_char.char_id, evtParam-&gt;get_char.char_prop, this)  ));&#10;+&#10;+&#10;+      // Now that we have received a characteristic, lets ask for the next one.&#10;+      esp_err_t errRc = ::esp_ble_gattc_get_characteristic(&#10;+          m_pClient-&gt;getGattcIf(),&#10;+          m_pClient-&gt;getConnId(),&#10;+          &amp;m_srvcId,&#10;+          &amp;evtParam-&gt;get_char.char_id);&#10;+      if (errRc != ESP_OK) {&#10;+        log_e("esp_ble_gattc_get_characteristic: rc=%d %s", errRc, GeneralUtils::errorToString(errRc));&#10;+        break;&#10;+      }&#10;+&#10;+      //m_semaphoreGetCharEvt.give();&#10;+      break;&#10;+    } // ESP_GATTC_GET_CHAR_EVT&#10; */&#10;-&#9;&#9;default:&#10;-&#9;&#9;&#9;break;&#10;-&#9;} // switch&#10;-&#10;-&#9;// Send the event to each of the characteristics owned by this service.&#10;-&#9;for (auto &amp;myPair : m_characteristicMapByHandle) {&#10;-&#9;   myPair.second-&gt;gattClientEventHandler(event, gattc_if, evtParam);&#10;-&#9;}&#10;+    default:&#10;+      break;&#10;+  } // switch&#10;+&#10;+  // Send the event to each of the characteristics owned by this service.&#10;+  for (auto &amp;myPair : m_characteristicMapByHandle) {&#10;+     myPair.second-&gt;gattClientEventHandler(event, gattc_if, evtParam);&#10;+  }&#10; } // gattClientEventHandler&#10; &#10; &#10;@@ -128,7 +128,7 @@ void BLERemoteService::gattClientEventHandler(&#10; BLERemoteCharacteristic* BLERemoteService::getCharacteristic(const char* uuid) {&#10;     return getCharacteristic(BLEUUID(uuid));&#10; } // getCharacteristic&#10;-&#9;&#10;+&#10; /**&#10;  * @brief Get the characteristic object for the UUID.&#10;  * @param [in] uuid Characteristic uuid.&#10;@@ -142,17 +142,17 @@ BLERemoteCharacteristic* BLERemoteService::getCharacteristic(BLEUUID uuid) {&#10; // device what characteristics it has in which case we have nothing to match against.  If we have not&#10; // asked the device about its characteristics, then we do that now.  Once we get the results we can then&#10; // examine the characteristics map to see if it has the characteristic we are looking for.&#10;-&#9;if (!m_haveCharacteristics) {&#10;-&#9;&#9;retrieveCharacteristics();&#10;-&#9;}&#10;-&#9;std::string v = uuid.toString();&#10;-&#9;for (auto &amp;myPair : m_characteristicMap) {&#10;-&#9;&#9;if (myPair.first == v) {&#10;-&#9;&#9;&#9;return myPair.second;&#10;-&#9;&#9;}&#10;-&#9;}&#10;-&#9;// throw new BLEUuidNotFoundException();  // &lt;-- we dont want exception here, which will cause app crash, we want to search if any characteristic can be found one after another&#10;-&#9;return nullptr;&#10;+  if (!m_haveCharacteristics) {&#10;+    retrieveCharacteristics();&#10;+  }&#10;+  String v = uuid.toString();&#10;+  for (auto &amp;myPair : m_characteristicMap) {&#10;+    if (myPair.first == v) {&#10;+      return myPair.second;&#10;+    }&#10;+  }&#10;+  // throw new BLEUuidNotFoundException();  // &lt;-- we dont want exception here, which will cause app crash, we want to search if any characteristic can be found one after another&#10;+  return nullptr;&#10; } // getCharacteristic&#10; &#10; &#10;@@ -162,54 +162,54 @@ BLERemoteCharacteristic* BLERemoteService::getCharacteristic(BLEUUID uuid) {&#10;  * @return N/A&#10;  */&#10; void BLERemoteService::retrieveCharacteristics() {&#10;-&#9;log_v("&gt;&gt; getCharacteristics() for service: %s", getUUID().toString().c_str());&#10;-&#10;-&#9;removeCharacteristics(); // Forget any previous characteristics.&#10;-&#10;-&#9;uint16_t offset = 0;&#10;-&#9;esp_gattc_char_elem_t result;&#10;-&#9;while (true) {&#10;-&#9;&#9;uint16_t count = 1; // only room for 1 result allocated, so go one by one&#10;-&#9;&#9;esp_gatt_status_t status = ::esp_ble_gattc_get_all_char(&#10;-&#9;&#9;&#9;getClient()-&gt;getGattcIf(),&#10;-&#9;&#9;&#9;getClient()-&gt;getConnId(),&#10;-&#9;&#9;&#9;m_startHandle,&#10;-&#9;&#9;&#9;m_endHandle,&#10;-&#9;&#9;&#9;&amp;result,&#10;-&#9;&#9;&#9;&amp;count,&#10;-&#9;&#9;&#9;offset&#10;-&#9;&#9;);&#10;-&#10;-&#9;&#9;if (status == ESP_GATT_INVALID_OFFSET) {   // We have reached the end of the entries.&#10;-&#9;&#9;&#9;break;&#10;-&#9;&#9;}&#10;-&#10;-&#9;&#9;if (status != ESP_GATT_OK) {   // If we got an error, end.&#10;-&#9;&#9;&#9;log_e("esp_ble_gattc_get_all_char: %s", BLEUtils::gattStatusToString(status).c_str());&#10;-&#9;&#9;&#9;break;&#10;-&#9;&#9;}&#10;-&#10;-&#9;&#9;if (count == 0) {   // If we failed to get any new records, end.&#10;-&#9;&#9;&#9;break;&#10;-&#9;&#9;}&#10;-&#10;-&#9;&#9;log_d("Found a characteristic: Handle: %d, UUID: %s", result.char_handle, BLEUUID(result.uuid).toString().c_str());&#10;-&#10;-&#9;&#9;// We now have a new characteristic ... let us add that to our set of known characteristics&#10;-&#9;&#9;BLERemoteCharacteristic *pNewRemoteCharacteristic = new BLERemoteCharacteristic(&#10;-&#9;&#9;&#9;result.char_handle,&#10;-&#9;&#9;&#9;BLEUUID(result.uuid),&#10;-&#9;&#9;&#9;result.properties,&#10;-&#9;&#9;&#9;this&#10;-&#9;&#9;);&#10;-&#10;-&#9;&#9;m_characteristicMap.insert(std::pair&lt;std::string, BLERemoteCharacteristic*&gt;(pNewRemoteCharacteristic-&gt;getUUID().toString(), pNewRemoteCharacteristic));&#10;-&#9;&#9;m_characteristicMapByHandle.insert(std::pair&lt;uint16_t, BLERemoteCharacteristic*&gt;(result.char_handle, pNewRemoteCharacteristic));&#10;-&#9;&#9;offset++;   // Increment our count of number of descriptors found.&#10;-&#9;} // Loop forever (until we break inside the loop).&#10;-&#10;-&#9;m_haveCharacteristics = true; // Remember that we have received the characteristics.&#10;-&#9;log_v("&lt;&lt; getCharacteristics()");&#10;+  log_v("&gt;&gt; getCharacteristics() for service: %s", getUUID().toString().c_str());&#10;+&#10;+  removeCharacteristics(); // Forget any previous characteristics.&#10;+&#10;+  uint16_t offset = 0;&#10;+  esp_gattc_char_elem_t result;&#10;+  while (true) {&#10;+    uint16_t count = 1; // only room for 1 result allocated, so go one by one&#10;+    esp_gatt_status_t status = ::esp_ble_gattc_get_all_char(&#10;+      getClient()-&gt;getGattcIf(),&#10;+      getClient()-&gt;getConnId(),&#10;+      m_startHandle,&#10;+      m_endHandle,&#10;+      &amp;result,&#10;+      &amp;count,&#10;+      offset&#10;+    );&#10;+&#10;+    if (status == ESP_GATT_INVALID_OFFSET) {   // We have reached the end of the entries.&#10;+      break;&#10;+    }&#10;+&#10;+    if (status != ESP_GATT_OK) {   // If we got an error, end.&#10;+      log_e("esp_ble_gattc_get_all_char: %s", BLEUtils::gattStatusToString(status).c_str());&#10;+      break;&#10;+    }&#10;+&#10;+    if (count == 0) {   // If we failed to get any new records, end.&#10;+      break;&#10;+    }&#10;+&#10;+    log_d("Found a characteristic: Handle: %d, UUID: %s", result.char_handle, BLEUUID(result.uuid).toString().c_str());&#10;+&#10;+    // We now have a new characteristic ... let us add that to our set of known characteristics&#10;+    BLERemoteCharacteristic *pNewRemoteCharacteristic = new BLERemoteCharacteristic(&#10;+      result.char_handle,&#10;+      BLEUUID(result.uuid),&#10;+      result.properties,&#10;+      this&#10;+    );&#10;+&#10;+    m_characteristicMap.insert(std::pair&lt;String, BLERemoteCharacteristic*&gt;(pNewRemoteCharacteristic-&gt;getUUID().toString(), pNewRemoteCharacteristic));&#10;+    m_characteristicMapByHandle.insert(std::pair&lt;uint16_t, BLERemoteCharacteristic*&gt;(result.char_handle, pNewRemoteCharacteristic));&#10;+    offset++;   // Increment our count of number of descriptors found.&#10;+  } // Loop forever (until we break inside the loop).&#10;+&#10;+  m_haveCharacteristics = true; // Remember that we have received the characteristics.&#10;+  log_v("&lt;&lt; getCharacteristics()");&#10; } // getCharacteristics&#10; &#10; &#10;@@ -217,16 +217,16 @@ void BLERemoteService::retrieveCharacteristics() {&#10;  * @brief Retrieve a map of all the characteristics of this service.&#10;  * @return A map of all the characteristics of this service.&#10;  */&#10;-std::map&lt;std::string, BLERemoteCharacteristic*&gt;* BLERemoteService::getCharacteristics() {&#10;-&#9;log_v("&gt;&gt; getCharacteristics() for service: %s", getUUID().toString().c_str());&#10;-&#9;// If is possible that we have not read the characteristics associated with the service so do that&#10;-&#9;// now.  The request to retrieve the characteristics by calling "retrieveCharacteristics" is a blocking&#10;-&#9;// call and does not return until all the characteristics are available.&#10;-&#9;if (!m_haveCharacteristics) {&#10;-&#9;&#9;retrieveCharacteristics();&#10;-&#9;}&#10;-&#9;log_v("&lt;&lt; getCharacteristics() for service: %s", getUUID().toString().c_str());&#10;-&#9;return &amp;m_characteristicMap;&#10;+std::map&lt;String, BLERemoteCharacteristic*&gt;* BLERemoteService::getCharacteristics() {&#10;+  log_v("&gt;&gt; getCharacteristics() for service: %s", getUUID().toString().c_str());&#10;+  // If is possible that we have not read the characteristics associated with the service so do that&#10;+  // now.  The request to retrieve the characteristics by calling "retrieveCharacteristics" is a blocking&#10;+  // call and does not return until all the characteristics are available.&#10;+  if (!m_haveCharacteristics) {&#10;+    retrieveCharacteristics();&#10;+  }&#10;+  log_v("&lt;&lt; getCharacteristics() for service: %s", getUUID().toString().c_str());&#10;+  return &amp;m_characteristicMap;&#10; } // getCharacteristics&#10; &#10; /**&#10;@@ -234,29 +234,29 @@ std::map&lt;std::string, BLERemoteCharacteristic*&gt;* BLERemoteService::getCharacteri&#10;  * @return A map of all the characteristics of this service.&#10;  */&#10; std::map&lt;uint16_t, BLERemoteCharacteristic*&gt;* BLERemoteService::getCharacteristicsByHandle() {&#10;-&#9;// If is possible that we have not read the characteristics associated with the service so do that&#10;-&#9;// now.  The request to retrieve the characteristics by calling "retrieveCharacteristics" is a blocking&#10;-&#9;// call and does not return until all the characteristics are available.&#10;-&#9;if (!m_haveCharacteristics) {&#10;-&#9;&#9;retrieveCharacteristics();&#10;-&#9;}&#10;-&#9;return &amp;m_characteristicMapByHandle;&#10;+  // If is possible that we have not read the characteristics associated with the service so do that&#10;+  // now.  The request to retrieve the characteristics by calling "retrieveCharacteristics" is a blocking&#10;+  // call and does not return until all the characteristics are available.&#10;+  if (!m_haveCharacteristics) {&#10;+    retrieveCharacteristics();&#10;+  }&#10;+  return &amp;m_characteristicMapByHandle;&#10; } // getCharacteristicsByHandle&#10; &#10; /**&#10;  * @brief This function is designed to get characteristics map when we have multiple characteristics with the same UUID&#10;  */&#10; void BLERemoteService::getCharacteristics(std::map&lt;uint16_t, BLERemoteCharacteristic*&gt;** pCharacteristicMap) {&#10;-&#9;log_v("&gt;&gt; getCharacteristics() for service: %s", getUUID().toString().c_str());&#10;-&#9;(void)pCharacteristicMap;&#10;-&#9;// If is possible that we have not read the characteristics associated with the service so do that&#10;-&#9;// now.  The request to retrieve the characteristics by calling "retrieveCharacteristics" is a blocking&#10;-&#9;// call and does not return until all the characteristics are available.&#10;-&#9;if (!m_haveCharacteristics) {&#10;-&#9;&#9;retrieveCharacteristics();&#10;-&#9;}&#10;-&#9;log_v("&lt;&lt; getCharacteristics() for service: %s", getUUID().toString().c_str());&#10;-&#9;*pCharacteristicMap = &amp;m_characteristicMapByHandle;&#10;+  log_v("&gt;&gt; getCharacteristics() for service: %s", getUUID().toString().c_str());&#10;+  (void)pCharacteristicMap;&#10;+  // If is possible that we have not read the characteristics associated with the service so do that&#10;+  // now.  The request to retrieve the characteristics by calling "retrieveCharacteristics" is a blocking&#10;+  // call and does not return until all the characteristics are available.&#10;+  if (!m_haveCharacteristics) {&#10;+    retrieveCharacteristics();&#10;+  }&#10;+  log_v("&lt;&lt; getCharacteristics() for service: %s", getUUID().toString().c_str());&#10;+  *pCharacteristicMap = &amp;m_characteristicMapByHandle;&#10; }  // Get the characteristics map.&#10; &#10; /**&#10;@@ -264,44 +264,44 @@ void BLERemoteService::getCharacteristics(std::map&lt;uint16_t, BLERemoteCharacteri&#10;  * @return A reference to the client associated with this service.&#10;  */&#10; BLEClient* BLERemoteService::getClient() {&#10;-&#9;return m_pClient;&#10;+  return m_pClient;&#10; } // getClient&#10; &#10; &#10; uint16_t BLERemoteService::getEndHandle() {&#10;-&#9;return m_endHandle;&#10;+  return m_endHandle;&#10; } // getEndHandle&#10; &#10; &#10; esp_gatt_id_t* BLERemoteService::getSrvcId() {&#10;-&#9;return &amp;m_srvcId;&#10;+  return &amp;m_srvcId;&#10; } // getSrvcId&#10; &#10; &#10; uint16_t BLERemoteService::getStartHandle() {&#10;-&#9;return m_startHandle;&#10;+  return m_startHandle;&#10; } // getStartHandle&#10; &#10; &#10; uint16_t BLERemoteService::getHandle() {&#10;-&#9;log_v("&gt;&gt; getHandle: service: %s", getUUID().toString().c_str());&#10;-&#9;log_v("&lt;&lt; getHandle: %d 0x%.2x", getStartHandle(), getStartHandle());&#10;-&#9;return getStartHandle();&#10;+  log_v("&gt;&gt; getHandle: service: %s", getUUID().toString().c_str());&#10;+  log_v("&lt;&lt; getHandle: %d 0x%.2x", getStartHandle(), getStartHandle());&#10;+  return getStartHandle();&#10; } // getHandle&#10; &#10; &#10; BLEUUID BLERemoteService::getUUID() {&#10;-&#9;return m_uuid;&#10;+  return m_uuid;&#10; }&#10; &#10; /**&#10;  * @brief Read the value of a characteristic associated with this service.&#10;  */&#10;-std::string BLERemoteService::getValue(BLEUUID characteristicUuid) {&#10;-&#9;log_v("&gt;&gt; readValue: uuid: %s", characteristicUuid.toString().c_str());&#10;-&#9;std::string ret =  getCharacteristic(characteristicUuid)-&gt;readValue();&#10;-&#9;log_v("&lt;&lt; readValue");&#10;-&#9;return ret;&#10;+String BLERemoteService::getValue(BLEUUID characteristicUuid) {&#10;+  log_v("&gt;&gt; readValue: uuid: %s", characteristicUuid.toString().c_str());&#10;+  String ret =  getCharacteristic(characteristicUuid)-&gt;readValue();&#10;+  log_v("&lt;&lt; readValue");&#10;+  return ret;&#10; } // readValue&#10; &#10; &#10;@@ -314,12 +314,12 @@ std::string BLERemoteService::getValue(BLEUUID characteristicUuid) {&#10;  * @return N/A.&#10;  */&#10; void BLERemoteService::removeCharacteristics() {&#10;-&#9;m_characteristicMap.clear();   // Clear the map&#10;-&#9;for (auto &amp;myPair : m_characteristicMapByHandle) {&#10;-&#9;   delete myPair.second;&#10;-&#9;   // delete the characteristics only once&#10;-&#9;}&#10;-&#9;m_characteristicMapByHandle.clear();   // Clear the map&#10;+  m_characteristicMap.clear();   // Clear the map&#10;+  for (auto &amp;myPair : m_characteristicMapByHandle) {&#10;+     delete myPair.second;&#10;+     // delete the characteristics only once&#10;+  }&#10;+  m_characteristicMapByHandle.clear();   // Clear the map&#10; } // removeCharacteristics&#10; &#10; &#10;@@ -329,10 +329,10 @@ void BLERemoteService::removeCharacteristics() {&#10;  * @param [in] value The value to set.&#10;  * @throws BLEUuidNotFound&#10;  */&#10;-void BLERemoteService::setValue(BLEUUID characteristicUuid, std::string value) {&#10;-&#9;log_v("&gt;&gt; setValue: uuid: %s", characteristicUuid.toString().c_str());&#10;-&#9;getCharacteristic(characteristicUuid)-&gt;writeValue(value);&#10;-&#9;log_v("&lt;&lt; setValue");&#10;+void BLERemoteService::setValue(BLEUUID characteristicUuid, String value) {&#10;+  log_v("&gt;&gt; setValue: uuid: %s", characteristicUuid.toString().c_str());&#10;+  getCharacteristic(characteristicUuid)-&gt;writeValue(value);&#10;+  log_v("&lt;&lt; setValue");&#10; } // setValue&#10; &#10; &#10;@@ -340,26 +340,26 @@ void BLERemoteService::setValue(BLEUUID characteristicUuid, std::string value) {&#10;  * @brief Create a string representation of this remote service.&#10;  * @return A string representation of this remote service.&#10;  */&#10;-std::string BLERemoteService::toString() {&#10;-&#9;std::string res = "Service: uuid: " + m_uuid.toString();&#10;-&#9;char val[6];&#10;-&#9;res += ", start_handle: ";&#10;-&#9;snprintf(val, sizeof(val), "%d", m_startHandle);&#10;-&#9;res += val;&#10;-&#9;snprintf(val, sizeof(val), "%04x", m_startHandle);&#10;-&#9;res += " 0x";&#10;-&#9;res += val;&#10;-&#9;res += ", end_handle: ";&#10;-&#9;snprintf(val, sizeof(val), "%d", m_endHandle);&#10;-&#9;res += val;&#10;-&#9;snprintf(val, sizeof(val), "%04x", m_endHandle);&#10;-&#9;res += " 0x";&#10;-&#9;res += val;&#10;-&#9;for (auto &amp;myPair : m_characteristicMap) {&#10;-&#9;&#9;res += "\n" + myPair.second-&gt;toString();&#10;-&#9;   // myPair.second is the value&#10;-&#9;}&#10;-&#9;return res;&#10;+String BLERemoteService::toString() {&#10;+  String res = "Service: uuid: " + m_uuid.toString();&#10;+  char val[6];&#10;+  res += ", start_handle: ";&#10;+  snprintf(val, sizeof(val), "%d", m_startHandle);&#10;+  res += val;&#10;+  snprintf(val, sizeof(val), "%04x", m_startHandle);&#10;+  res += " 0x";&#10;+  res += val;&#10;+  res += ", end_handle: ";&#10;+  snprintf(val, sizeof(val), "%d", m_endHandle);&#10;+  res += val;&#10;+  snprintf(val, sizeof(val), "%04x", m_endHandle);&#10;+  res += " 0x";&#10;+  res += val;&#10;+  for (auto &amp;myPair : m_characteristicMap) {&#10;+    res += "\n" + myPair.second-&gt;toString();&#10;+     // myPair.second is the value&#10;+  }&#10;+  return res;&#10; } // toString&#10; &#10; &#10;' />
			<string key="comment_change" value="True" />
		</event>
	</trace>
	<trace>
		<string key="file" value="BLERemoteService.h" />
	</trace>
	<trace>
		<string key="file" value="BLEScan.cpp" />
		<event>
			<string key="timestamp" value="2023-10-05T14:54:25+03:00" />
			<string key="author" value="Me No Dev" />
			<string key="change_type" value="MODIFY" />
			<string key="commit_message" value="ESP-IDF v5.1 (#7733)&#10;&#10;* Initial changes to compile under ESP-IDF v5.1&#13;&#10;&#13;&#10;* Initial import for ESP-IDF v5.1 libs&#13;&#10;&#13;&#10;* Update toolchain&#13;&#10;&#13;&#10;* Update esp32-hal-psram.c&#13;&#10;&#13;&#10;* Add missing LDs&#13;&#10;&#13;&#10;* Update platform.txt&#13;&#10;&#13;&#10;* Stop some CI jobs, because they will always fail&#13;&#10;&#13;&#10;* Fix examples&#13;&#10;&#13;&#10;* Update app_httpd.cpp&#13;&#10;&#13;&#10;* Update ResetReason.ino&#13;&#10;&#13;&#10;* Warnings fixes&#13;&#10;&#13;&#10;* Added the example guideline and template (#7665)&#13;&#10;&#13;&#10;* Added the example guideline and template&#13;&#10;&#13;&#10;* PR review changes with some typos and grammar fixes&#13;&#10;&#13;&#10;* Changes according to the PR review&#13;&#10;&#13;&#10;* Added ESP32-S3 link to the datasheet (#7738)&#13;&#10;&#13;&#10;* Update HiFreq_ADC.ino&#13;&#10;&#13;&#10;* Replace periph_ctrl.h use because of deprecation&#13;&#10;&#13;&#10;* Replace esp_spi_flash.h use because of deprecation&#13;&#10;&#13;&#10;* Add includes to male mDNS::enableWorkstation compile&#13;&#10;&#13;&#10;* Fix ssl_client mbedtls_pk_parse_key callback&#13;&#10;&#13;&#10;* Update temperature sensor driver&#13;&#10;&#13;&#10;* Allow sketch_utils to compile with arduino-cli&#13;&#10;&#13;&#10;* Run CI with arduino-cli&#13;&#10;&#13;&#10;* Fix arduino-cli CI build on Windows&#13;&#10;&#13;&#10;* Refactor platform.txt to not use components installed through the board manager when running from git&#13;&#10;&#13;&#10;* Initial Peripheral Manager Implementation&#13;&#10;&#13;&#10;* Update SigmaDelta driver to use the new ESP-IDF driver API&#13;&#10;&#13;&#10;* Small improvements to peripheral manager and SigmaDelta&#13;&#10;&#13;&#10;* Remove deleted function from SigmaDelta header&#13;&#10;&#13;&#10;* Update DAC driver to use the new ESP-IDF driver API&#13;&#10;&#13;&#10;* Adds softAp(String) to make it compatible with ESP8266 (#7801)&#13;&#10;&#13;&#10;* Fix commentary (#7800)&#13;&#10;&#13;&#10;Minor fix based on observation done in https://github.com/espressif/arduino-esp32/issues/7795#issuecomment-1416868611&#13;&#10;&#13;&#10;* add adafruit new board feather esp32s2 reserve tft (#7794)&#13;&#10;&#13;&#10;* bugfix: add &lt;stdint.h&gt; for uint8_t to avoid compilation failure (GCC 11.2.0) (#7744)&#13;&#10;&#13;&#10;* Adding 3rd party boards for VALTRACK-V4-VTS-ESP32-C3 &amp; VALTRACK-V4-MFW-ESP32-C3 (#7735)&#13;&#10;&#13;&#10;* Added VALTRACK-V4-VTS-ESP32-C3 board definition&#13;&#10;&#13;&#10;Created pins_arduino.h &amp; made changes to boards.txt with necessary changes&#13;&#10;&#13;&#10;* Modified the URL&#13;&#10;&#13;&#10;* Renamed json&#13;&#10;&#13;&#10;* renamed all auRL&#13;&#10;&#13;&#10;* Adding VALTRACK-V4 series board definitions&#13;&#10;&#13;&#10;Added VALTRACK-V4-VTS-ESP32C3 &amp; VALTRACK-V4-MFW-ESP32-C3 board variants&#13;&#10;&#13;&#10;* Adding VALTRACK-V4 series board definitions&#13;&#10;&#13;&#10;Added VALTRACK-V4-VTS-ESP32C3 &amp; VALTRACK-V4-MFW-ESP32-C3 board variants&#13;&#10;&#13;&#10;* Reverted package_esp32_index.template.json&#13;&#10;&#13;&#10;restored package_esp32_index.template.json from edits&#13;&#10;&#13;&#10;* Reverted package_esp32_index.template.json&#13;&#10;&#13;&#10;Added new line to package_esp32_index.template.json&#13;&#10;&#13;&#10;* Update Platformio CI (#7725)&#13;&#10;&#13;&#10;* WiFiClient example fix (#7711)&#13;&#10;&#13;&#10;* Modified WiFiClient example to use thingspeak instead of non-functionig sparkfun&#13;&#10;&#13;&#10;* Moved instructions to README&#13;&#10;&#13;&#10;* Fixed spelling&#13;&#10;&#13;&#10;* Added link to S3 datasheet&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Jan Procházka &lt;90197375+P-R-O-C-H-Y@users.noreply.github.com&gt;&#13;&#10;&#13;&#10;* Mirror update from Heltec repository (#7709)&#13;&#10;&#13;&#10;Heltec updated the I2C pins in https://github.com/Heltec-Aaron-Lee/WiFi_Kit_series/commit/b10f4bf85d13fd01be80dcdb0eb59e6a8c8ba19a&#13;&#10;&#13;&#10;* Fixes BLE data printing (#7699)&#13;&#10;&#13;&#10;* Fixes BLE data printing&#13;&#10;&#13;&#10;BLE data has no '\0' terminator, therefore it can't be printed as a regular C string.&#13;&#10;This fix just prints the BLE data based on its length.&#13;&#10;&#13;&#10;* Simplify printing to a single call&#13;&#10;&#13;&#10;* split menu options + lora_32_V3 fix (#7697)&#13;&#10;&#13;&#10;* Change header gaurd name (#7696)&#13;&#10;&#13;&#10;* Fix Name (#7691)&#13;&#10;&#13;&#10;Wrong name in definitions.&#13;&#10;&#13;&#10;* Fix error in WiFiClient.cpp where the connect function fails for timeouts below 1 second (#7686)&#13;&#10;&#13;&#10;* Update WiFiClient.cpp&#13;&#10;&#13;&#10;This change will allow specifying connect timeouts below 1 second. Without this change, if connect timeouts under 1 second are given, the connect defaults to 0ms and fails. &#13;&#10;This will also allow timeouts in fractions of seconds, e.g. 1500ms. Without this change, connect timeouts are truncated to full second increments.&#13;&#10;&#13;&#10;* Make parameter timeout_ms clear&#13;&#10;&#13;&#10;* Change connection timeout_ms name for clarity&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Rodrigo Garcia &lt;rodrigo.garcia@espressif.com&gt;&#13;&#10;&#13;&#10;* fixed the function header (#7674)&#13;&#10;&#13;&#10;* fixed the function header&#13;&#10;&#13;&#10;* fixed function name and paramaters&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Jan Procházka &lt;90197375+P-R-O-C-H-Y@users.noreply.github.com&gt;&#13;&#10;&#13;&#10;* Ticker fix solving #6155 (#7664)&#13;&#10;&#13;&#10;* Wrapped Ticker functions with #pragma disabling -Wcast-function-type&#13;&#10;&#13;&#10;* Revert &quot;Wrapped Ticker functions with #pragma disabling -Wcast-function-type&quot;&#13;&#10;&#13;&#10;This reverts commit 160be7e67a10d01b6e44c4bf2521c0ccd6348976.&#13;&#10;&#13;&#10;* Fixed Ticker example&#13;&#10;&#13;&#10;* Modified Ticker example&#13;&#10;&#13;&#10;* Fixed LED_BUILTIN err for ESP32&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Jan Procházka &lt;90197375+P-R-O-C-H-Y@users.noreply.github.com&gt;&#13;&#10;&#13;&#10;* setPins fix ESP32 &quot;specified pins are not supported by this chip.&quot; (#7646)&#13;&#10;&#13;&#10;[ESP32: SDMMCFS::begin hardcodes the usage of slot 1, only check if the pins match slot 1 pins.]&#13;&#10;&#13;&#10;setPins() was testing pins D1, D2 and D3 all against D1 ... fine in 1 pin mode when all are -1 not so much if you're trying to get 4 pin mode working.&#13;&#10;I now see this function doesn't really do anything on the ESP32...accept now correctly checks that you are trying to use the slot 1 pins.&#13;&#10;&#13;&#10;Co-authored-by: Jan Procházka &lt;90197375+P-R-O-C-H-Y@users.noreply.github.com&gt;&#13;&#10;&#13;&#10;* Allow passing IP as connect method parameter in WiFiClientSecure and skip unnecessary host-ip conversions (#7643)&#13;&#10;&#13;&#10;* Add LED_BUILTIN* definitions and initialization for LEDs to stop them floating. (#7636)&#13;&#10;&#13;&#10;Co-authored-by: Rodrigo Garcia &lt;rodrigo.garcia@espressif.com&gt;&#13;&#10;&#13;&#10;* Expand path to tinuf2 image when checking existence in platformio-build.py (#7631)&#13;&#10;&#13;&#10;* Expand path to tinuf2 image when checking existence&#13;&#10;&#13;&#10;* More isFiles fixed&#13;&#10;&#13;&#10;* Remove (useless) trailing semicolon from Print.cpp (#7622)&#13;&#10;&#13;&#10;* ADD: New variant Edgebox-ESP-100 (#7771)&#13;&#10;&#13;&#10;* ADD: New variant Edgebox-ESP-100&#13;&#10;&#13;&#10;* FIX: Edgebox-ESP-100 Board.txt usb mode option change back to default value as ESP32S3&#13;&#10;&#13;&#10;* Add Crabik Slot ESP32-S3 board (#7790)&#13;&#10;&#13;&#10;* Added Crabik Slot ESP32-S3&#13;&#10;&#13;&#10;* Adding CPU frequency settings and removing excess from partition scheme settings&#13;&#10;&#13;&#10;* new variant LilyGO T-Display-S3 (#7763)&#13;&#10;&#13;&#10;* new variant LilyGO T-Display-S3&#13;&#10;&#13;&#10;https://github.com/Xinyuan-LilyGO/T-Display-S3&#13;&#10;&#13;&#10;* Add boards.txt definition&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Me No Dev &lt;me-no-dev@users.noreply.github.com&gt;&#13;&#10;&#13;&#10;* Update get.py to support Apple ARM64&#13;&#10;&#13;&#10;* Update package_esp32_index.template.json&#13;&#10;&#13;&#10;* WString Return bool (#7774)&#13;&#10;&#13;&#10;* Add Roboheart Hercules development board to the esp32-core (#7672)&#13;&#10;&#13;&#10;* added Roboheart Hercules pin definitions and board.txt entries&#13;&#10;&#13;&#10;* added package_roboheat.json for prototyping&#13;&#10;&#13;&#10;* Roboheart Hercules pins&#13;&#10;&#13;&#10;* Updated the pins&#13;&#10;&#13;&#10;* Delete package_roboheart.json&#13;&#10;&#13;&#10;* Requested changes&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: renebohne &lt;rene.bohne@gmail.com&gt;&#13;&#10;&#13;&#10;* Reword &quot;ESP-IDF as Component&quot; (#7812)&#13;&#10;&#13;&#10;I think &quot;Arduino as an ESP-IDF component&quot; or just &quot;As ESP-IDF component&quot; instead of  &quot;ESP-IDF as Component&quot; is more correct way to name the link.&#13;&#10;&#13;&#10;1. &quot;ESP-IDF as Component&quot; would imply that ESP-IDF is some sort of library for Arduino, which is (IMO) misleading, because it's true the other way around.&#13;&#10;2. It's written as &quot;Arduino as an ESP-IDF component&quot; on the webpage it points to as well.&#13;&#10;&#13;&#10;- Also I removed the capitalization from &quot;Component&quot; as I have not found a reason why is it capitalized.&#13;&#10;&#13;&#10;* add new board Adafruit Feather ESP32-S3 Reverse TFT (#7811)&#13;&#10;&#13;&#10;* Multi threading examples (tasks, queues, semaphores, mutexes) (#7660)&#13;&#10;&#13;&#10;* Moved and renamed example ESP32/FreeRTOS to MultiThreading/BasicMultiThreading&#13;&#10;&#13;&#10;* Added dummy files&#13;&#10;&#13;&#10;* Modified original example&#13;&#10;&#13;&#10;* Fixed BasicMultiThreading.ino&#13;&#10;&#13;&#10;* Added Example demonstrating use of queues&#13;&#10;&#13;&#10;* Extended info in BasicMultiThreading&#13;&#10;&#13;&#10;* Renamed Queues to singular Queue&#13;&#10;&#13;&#10;* Added Mutex example&#13;&#10;&#13;&#10;* Added Semaphore example&#13;&#10;&#13;&#10;* Moved info from example to README&#13;&#10;&#13;&#10;* Moved doc from Mutex to README&#13;&#10;&#13;&#10;* Added Queue README&#13;&#10;&#13;&#10;* Removed unecesary text&#13;&#10;&#13;&#10;* Fixed grammar&#13;&#10;&#13;&#10;* Increased stack size for Sempahore example&#13;&#10;&#13;&#10;* Added headers into .ino files&#13;&#10;&#13;&#10;* Added word Example at the end of title in README&#13;&#10;&#13;&#10;* removed unused line&#13;&#10;&#13;&#10;* Added forgotten README&#13;&#10;&#13;&#10;* Modified BasicMultiThreading example&#13;&#10;&#13;&#10;* Added missing S3 entry in README&#13;&#10;&#13;&#10;* moved location&#13;&#10;&#13;&#10;* Update ESP-IDF libs&#13;&#10;&#13;&#10;* Update CMakeLists.txt&#13;&#10;&#13;&#10;* Update esptool to v4.4&#13;&#10;&#13;&#10;* Add function timerAttachInterruptFlag (#7809)&#13;&#10;&#13;&#10;* Update esptool to v4.5&#13;&#10;&#13;&#10;* ADC refactoring (#7827)&#13;&#10;&#13;&#10;* Adc refactored + periman implementation&#13;&#10;&#13;&#10;Peripheral manager still needs to be checked if the implementation is right.&#13;&#10;&#13;&#10;* switched to working solution for milivolts read&#13;&#10;&#13;&#10;* Periman detachbus fix&#13;&#10;&#13;&#10;* coding style&#13;&#10;&#13;&#10;* fix CI warnings&#13;&#10;&#13;&#10;* fix FreeRTOS example&#13;&#10;&#13;&#10;* Update ETH.cpp&#13;&#10;&#13;&#10;* Update FunctionalInterruptStruct.ino&#13;&#10;&#13;&#10;* Update package_esp32_index.template.json&#13;&#10;&#13;&#10;* Update package_esp32_index.template.json&#13;&#10;&#13;&#10;* Fixes for the latest IDF v5.1&#13;&#10;&#13;&#10;* update esp-idf libs and toolchain&#13;&#10;&#13;&#10;* Turn OFF auto crystal frequency for ESP32 (needed by TWAI)&#13;&#10;&#13;&#10;* Update examples&#13;&#10;&#13;&#10;* Switch build to mostly use flags from files&#13;&#10;&#13;&#10;Includes can not be done this way&#13;&#10;&#13;&#10;* Reorganize flag files&#13;&#10;&#13;&#10;* Optimize chip build flags further&#13;&#10;&#13;&#10;* Revert defines from file. MBEDTLS_CONFIG_FILE does not properly expand&#13;&#10;&#13;&#10;* Add support for includes and defines from file&#13;&#10;&#13;&#10;* Replace old sdk path references in platform.txt&#13;&#10;&#13;&#10;* use gcc-ar (#8013)&#13;&#10;&#13;&#10;* Makes F_CPU generic for all SoC (#8007)&#13;&#10;&#13;&#10;Based on CONFIG_ESP_DEFAULT_CPU_FREQ_MHZ that is correctly defined in the sdkconfig file for each SoC.&#13;&#10;&#13;&#10;* TIMER refactoring (#7904)&#13;&#10;&#13;&#10;* refactor using GPtimer&#13;&#10;&#13;&#10;* Updated timer HW test&#13;&#10;&#13;&#10;* fix examples&#13;&#10;&#13;&#10;* Add v2.0.7 in issue template (#7871)&#13;&#10;&#13;&#10;* refactor using GPtimer&#13;&#10;&#13;&#10;* Updated timer HW test&#13;&#10;&#13;&#10;* fix examples&#13;&#10;&#13;&#10;* Revert &quot;Add v2.0.7 in issue template (#7871)&quot;&#13;&#10;&#13;&#10;This reverts commit fcc3b17d62ff57861f8913ca1f142fd5163b7457.&#13;&#10;&#13;&#10;* Update upload-artifact to v3 in HW CI&#13;&#10;&#13;&#10;* Revert &quot;Update upload-artifact to v3 in HW CI&quot;&#13;&#10;&#13;&#10;This reverts commit 1ba228071718ba37c4e26d98db22f77b2a7364a6.&#13;&#10;&#13;&#10;* replace resolution with frequency&#13;&#10;&#13;&#10;* remove count_down option&#13;&#10;&#13;&#10;* countup removed from examples + header&#13;&#10;&#13;&#10;* Refactored timer object&#13;&#10;&#13;&#10;* code cleanup + examples and tests fixes&#13;&#10;&#13;&#10;* TimerAlarm fix&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Vojtěch Bartoška &lt;76958047+VojtechBartoska@users.noreply.github.com&gt;&#13;&#10;&#13;&#10;* [Docs] ADC and Timer API Update (+some docs fixes) (#7906)&#13;&#10;&#13;&#10;* updated docs&#13;&#10;&#13;&#10;* remove hall sensor docs&#13;&#10;&#13;&#10;Removed Hall sensor documentation as its no longer supported in IDF-5&#13;&#10;&#13;&#10;* Fixed ESPNow examples location in docs&#13;&#10;&#13;&#10;* Last timer refactored API + gpio small fix&#13;&#10;&#13;&#10;* AlarmWrite fix&#13;&#10;&#13;&#10;* Fixes APLL/PLL with RTC Frequency (#8025)&#13;&#10;&#13;&#10;log_d() was displaying APLL for any SoC, but S3 and C3 has not such option, causing compilation errors.&#13;&#10;&#13;&#10;* Update IDF libs and fix OPI PSRAM on S3&#13;&#10;&#13;&#10;* Add setMode function HardwareSerial.c to set the esp32 uart mode for use with RS485 auto RTS (#7935)&#13;&#10;&#13;&#10;* Added setMode function to set the esp32 uart mode&#13;&#10;&#13;&#10;Used to set the esp32 uart mode for use with RS485 Half Duplex and the auto RTS pin mode. This will set/clear the RTS pin output to control the RE/DE pin on most RS485 chips.&#13;&#10;&#13;&#10;* Add Success (bool) return in some functions&#13;&#10;&#13;&#10;* Add Success (bool) return code to some functions&#13;&#10;&#13;&#10;* Add Success (bool) return to some functions&#13;&#10;&#13;&#10;* Add Success (bool) return to some functions&#13;&#10;&#13;&#10;* Fix uartSetRxTimeout return type&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Rodrigo Garcia &lt;rodrigo.garcia@espressif.com&gt;&#13;&#10;&#13;&#10;* Add support for esp-elf-gdb&#13;&#10;&#13;&#10;* WFG Crashfix (#8044)&#13;&#10;&#13;&#10;* Update component libs&#13;&#10;&#13;&#10;* IDF release/v5.1 (#8061)&#13;&#10;&#13;&#10;* IDF release/v5.1 bb9200acec&#13;&#10;&#13;&#10;* Update Esp.cpp&#13;&#10;&#13;&#10;* IDF release/v5.1 420ebd208a&#13;&#10;&#13;&#10;* Update esp32-hal-psram.c&#13;&#10;&#13;&#10;* Switch SDK to be an external package&#13;&#10;&#13;&#10;* fix path (#8096)&#13;&#10;&#13;&#10;* Makes UART work at any APB Frequency (#8097)&#13;&#10;&#13;&#10;Fixes HardwareSerial to work with IDF 5.1 on any CPU/APB Frequency (240MHz to 10MHZ), including user created low power modes.&#13;&#10;&#13;&#10;* Add required callbacks for TinyUSB DFU&#13;&#10;&#13;&#10;* Update version to 3.0.0&#13;&#10;&#13;&#10;* Add ESP.getCoreVersion() and update ESP.getChipModel()&#13;&#10;&#13;&#10;* Update timer hal for the latest 5.1&#13;&#10;&#13;&#10;* Use separate RX and TX buffer sizes in HTTP client&#13;&#10;&#13;&#10;optimizes download by allowing up to 4K packets to be received&#13;&#10;&#13;&#10;* Rename clock tree enum name in latest 5.1&#13;&#10;&#13;&#10;* ESP32-H4 support was removed in ESP-IDF v5.1&#13;&#10;&#13;&#10;* IDF release/v5.1 2004bf4e11 (#8165)&#13;&#10;&#13;&#10;* Deinit previous bus first (#8180)&#13;&#10;&#13;&#10;* TIMER - add timer_started flag, fix timerEnd() + timer HW test (#8135)&#13;&#10;&#13;&#10;* Add timer_started flag and stop before disable&#13;&#10;&#13;&#10;* Fix timer HW test&#13;&#10;&#13;&#10;* TOUCH - Peripheral manager implementation (#8129)&#13;&#10;&#13;&#10;* Touch periman implemented&#13;&#10;&#13;&#10;* Deinit previous bus first&#13;&#10;&#13;&#10;* LEDC Refactoring - Peripheral manager implemented (#8126)&#13;&#10;&#13;&#10;* LEDC periman implementation&#13;&#10;&#13;&#10;* Fix examples&#13;&#10;&#13;&#10;* Rework tone&#13;&#10;&#13;&#10;* Update ledc docs&#13;&#10;&#13;&#10;* fix missing bracket&#13;&#10;&#13;&#10;* Update analog funtions esp32-hal.h&#13;&#10;&#13;&#10;* Update CameraWebServer example&#13;&#10;&#13;&#10;* Fix HiFreq_ADC example&#13;&#10;&#13;&#10;* minor fixes - typos&#13;&#10;&#13;&#10;* Avoid calling tone/notone when tone already runs on dif. pin&#13;&#10;&#13;&#10;* Remove unused channels_resolution&#13;&#10;&#13;&#10;* GPIO - Peripheral manager implementation (#8179)&#13;&#10;&#13;&#10;* periman-implementation&#13;&#10;&#13;&#10;* fix RGB_BUILTIN and remove space&#13;&#10;&#13;&#10;* Enforces more consistency into Peripheral Manager (#8188)&#13;&#10;&#13;&#10;* Avoid log_i() message the first time a bus is assigned&#13;&#10;&#13;&#10;* Prevent operation with ESP32_BUS_TYPE_INIT&#13;&#10;&#13;&#10;* keeps coding style&#13;&#10;&#13;&#10;* do not print messages on INIT bus type&#13;&#10;&#13;&#10;* [Arduino Core 3.0.0] RMT IDF5.1 Refactoring (#7994)&#13;&#10;&#13;&#10;* RMT IDF5.1 refactoring&#13;&#10;&#13;&#10;* Fixes initial value setting&#13;&#10;&#13;&#10;* removed rmtRead() with user callback&#13;&#10;&#13;&#10;* simplify/remove Read data structure&#13;&#10;&#13;&#10;* Deep API simplification&#13;&#10;&#13;&#10;* fixes the examples&#13;&#10;&#13;&#10;* fix rmt.h&#13;&#10;&#13;&#10;* adds support to APB different frequencies&#13;&#10;&#13;&#10;* fixes CI and not defined RGB_BUILTIN&#13;&#10;&#13;&#10;* new RMT API and examples&#13;&#10;&#13;&#10;* fixing commentaties&#13;&#10;&#13;&#10;* Update esp32-hal-rgb-led.c&#13;&#10;&#13;&#10;* changes Filter API&#13;&#10;&#13;&#10;* Fixes example with Filter API&#13;&#10;&#13;&#10;* Update PlatformIO scripts for the upcoming 3.0 core (#8183)&#13;&#10;&#13;&#10;* Update PlatformIO scripts for the upcoming 3.0 core&#13;&#10;&#13;&#10;* Dynamically select proper framework-arduinoespressif32-libs package&#13;&#10;&#13;&#10;With this change the dev-platform will be dynamically configured to&#13;&#10;pull the latest .zip package with precompiled libraries from extracted from&#13;&#10;package_esp32_index.template.json&#13;&#10;&#13;&#10;* free memory on detach (#8264)&#13;&#10;&#13;&#10;* SPI - Peripheral manager implementation  (#8255)&#13;&#10;&#13;&#10;* spi periman implementation&#13;&#10;&#13;&#10;* fix header file&#13;&#10;&#13;&#10;* remove unused struct&#13;&#10;&#13;&#10;* fix missing braces&#13;&#10;&#13;&#10;* Update esp32-hal-rmt.c (#8216)&#13;&#10;&#13;&#10;Optimizing Peripheral Manager Test&#13;&#10;&#13;&#10;* I2C - Peripheral manager implementation (#8220)&#13;&#10;&#13;&#10;* i2c-master periman initial commit&#13;&#10;&#13;&#10;* i2c-master make detachbus static + comment remove&#13;&#10;&#13;&#10;* i2c-slave periman implementation&#13;&#10;&#13;&#10;* SetPinBus to INIT on i2cDeinits&#13;&#10;&#13;&#10;* Fix slave pins deinit&#13;&#10;&#13;&#10;* remove dbg logs&#13;&#10;&#13;&#10;* set ret to ESP_FAIL instead of returning&#13;&#10;&#13;&#10;* Fix warnings in hal-spi caused by pariman transition&#13;&#10;&#13;&#10;* Update esptool.py to version 4.6&#13;&#10;&#13;&#10;* Add platform support for ESP_SR&#13;&#10;&#13;&#10;* Add USB Type and valid pin check to periman&#13;&#10;&#13;&#10;* replace bus with spi-&gt;num+1 (#8279)&#13;&#10;&#13;&#10;* Remove default pins from SPI HAL&#13;&#10;&#13;&#10;* Add commented out handlers for esptool.js in TinyUSB CDC&#13;&#10;&#13;&#10;For future use&#13;&#10;&#13;&#10;* Add build defines for host os and fqbn (for debug purposes)&#13;&#10;&#13;&#10;* Provide proper memory caps total size&#13;&#10;&#13;&#10;* Update Esp.cpp&#13;&#10;&#13;&#10;* SDMMC - Peripheral manager implementation (#8289)&#13;&#10;&#13;&#10;* sdmmc periman implemented&#13;&#10;&#13;&#10;* save pins when SOC_SDMMC_USE_IOMUX&#13;&#10;&#13;&#10;* IDF release/v5.1 4bc762621d (#8292)&#13;&#10;&#13;&#10;* Adds missing pinMode (#8312)&#13;&#10;&#13;&#10;* Adds missing pinMode&#13;&#10;&#13;&#10;The example code lacks a pinMode() to initialize the GPIO 0 (button). In Arduino Core 3.0.0, it prints an error message when trying to read a not initialized GPIO.&#13;&#10;&#13;&#10;* Update KeyboardLogout.ino&#13;&#10;&#13;&#10;Adds &lt;buttonPin&gt; to keep code standard&#13;&#10;&#13;&#10;* Update KeyboardReprogram.ino&#13;&#10;&#13;&#10;Adds &lt;buttonPin&gt; to keep code standard&#13;&#10;&#13;&#10;* LEDC Fade implementation (#8338)&#13;&#10;&#13;&#10;* fade API + pointer fixes&#13;&#10;&#13;&#10;* Add fade api&#13;&#10;&#13;&#10;* Add fade example&#13;&#10;&#13;&#10;* update ledc docs&#13;&#10;&#13;&#10;* remove unused variables&#13;&#10;&#13;&#10;* fix path to example&#13;&#10;&#13;&#10;* Adds USB to Peripheral Manager - Arduino Core 3.0.0 (#8335)&#13;&#10;&#13;&#10;* ETHERNET - Peripheral manager implementation (#8297)&#13;&#10;&#13;&#10;* Peripheral manager implemented&#13;&#10;&#13;&#10;* remove unused variable&#13;&#10;&#13;&#10;* Add all RMII pins&#13;&#10;&#13;&#10;* fix typo&#13;&#10;&#13;&#10;* Adds HardwareSerial to Peripheral Manager Arduino 3.0.0 (#8328)&#13;&#10;&#13;&#10;* Do not limit ETHERNET in periman to only ESP32. SPI is also an option&#13;&#10;&#13;&#10;* Initial support for ESP32-C6 (#8337)&#13;&#10;&#13;&#10;* Add checks for SOC defines (#8351)&#13;&#10;&#13;&#10;* Add checks for SOC defines&#13;&#10;&#13;&#10;* Add SoC checks to BLE library&#13;&#10;&#13;&#10;* fix i2c compilation error&#13;&#10;&#13;&#10;* fix wrong placement of include&#13;&#10;&#13;&#10;* add check to SPI library&#13;&#10;&#13;&#10;* add check to USB library&#13;&#10;&#13;&#10;* add checks to Wire library&#13;&#10;&#13;&#10;* Feature/esp32h2 support (#8373)&#13;&#10;&#13;&#10;* Initial support for ESP32H2&#13;&#10;&#13;&#10;* Additional changes for ESP32H2&#13;&#10;&#13;&#10;* Update libs for ESP32H2&#13;&#10;&#13;&#10;* Fix flashing on ESP32-H2&#13;&#10;&#13;&#10;* Fix GPIO Configs for ESP32-C6 and ESP32-H2&#13;&#10;&#13;&#10;* Update Timer test sketch&#13;&#10;&#13;&#10;* Fix upload flash parameters&#13;&#10;&#13;&#10;* Use ets_write_char_uart instead of ets_printf in log_printfv&#13;&#10;&#13;&#10;* Print full chip report when log level is sufficient (#8282)&#13;&#10;&#13;&#10;* ESP32-C3 does not have ets_write_char_uart&#13;&#10;&#13;&#10;* Fix BLE gap event name&#13;&#10;&#13;&#10;* HW Testing - Pytest update (#8389)&#13;&#10;&#13;&#10;* update tests requirements&#13;&#10;&#13;&#10;* remove already handled components&#13;&#10;&#13;&#10;* Update version of pytest&#13;&#10;&#13;&#10;* Add missing ESP32-H2 to hil.yml&#13;&#10;&#13;&#10;* Updated FreeRTOS names (#8418)&#13;&#10;&#13;&#10;* HW Testing -  ESP32-C6 + ESP32-H2 fixes (#8404)&#13;&#10;&#13;&#10;* add C6/H2 to tests cfg.json&#13;&#10;&#13;&#10;* remove ,&#13;&#10;&#13;&#10;* workflow runs-on runner by matrix&#13;&#10;&#13;&#10;* Add need for arduino tag to select runner&#13;&#10;&#13;&#10;* Add cryptography to requirements.txt&#13;&#10;&#13;&#10;* Removed duplicate TX1 define for H2 (#8402)&#13;&#10;&#13;&#10;* Fix broken examples&#13;&#10;&#13;&#10;* Fixes RMT filter &amp; idle timing and setup (#8359)&#13;&#10;&#13;&#10;* Fixes Filter and Idle parameter to uint32&#13;&#10;&#13;&#10;* Fixes Filter and Idle setup&#13;&#10;&#13;&#10;* Fixes it to 5.1Libs branch&#13;&#10;&#13;&#10;* fix RMT CLK source and Filter API&#13;&#10;&#13;&#10;* fixes missing ;&#13;&#10;&#13;&#10;* fixes missing ;&#13;&#10;&#13;&#10;* fixes RMT example&#13;&#10;&#13;&#10;* IDF release/v5.1 a7b62bbcaf (#8438)&#13;&#10;&#13;&#10;* Add workflow to build executables from python scripts (#8290)&#13;&#10;&#13;&#10;* Add workflow to build executables from python scripts&#13;&#10;&#13;&#10;* Push binary to tools&#13;&#10;&#13;&#10;* Enable executable signing on Windows&#13;&#10;&#13;&#10;* Update get.py&#13;&#10;&#13;&#10;* Push binary to tools&#13;&#10;&#13;&#10;* Try with multiple files&#13;&#10;&#13;&#10;* Try more actions&#13;&#10;&#13;&#10;* Try powershell&#13;&#10;&#13;&#10;* Restore tools so they do not get rebuilt&#13;&#10;&#13;&#10;* Finalize scripts&#13;&#10;&#13;&#10;* Push binary to tools&#13;&#10;&#13;&#10;* App rollback should be after PSRAM is initialized&#13;&#10;&#13;&#10;* Correcting RX1 to GPIO4 and TX1 to GPIO5 to be consistent with documentation. Previous pin use works but is inconsistent with C6 docs.&#13;&#10;&#13;&#10;* Fixes Memory Leak (#8486)&#13;&#10;&#13;&#10;* fixes preprocessor test (#8485)&#13;&#10;&#13;&#10;* fixes preprocessor test&#13;&#10;&#13;&#10;When using `#define USE_SOFT_AP` &#13;&#10;Change&#13;&#10;`&amp;&amp; not USE_SOFT_AP` ==&gt; `&amp;&amp; !defined(USE_SOFT_AP)`&#13;&#10;&#13;&#10;* Adds any BLE capable device in WiFiProv.ino&#13;&#10;&#13;&#10;Removing ESP32 restriction for BLE Provisioning.&#13;&#10;&#13;&#10;* fix flash mode read out for C6&#13;&#10;&#13;&#10;* Add option for custom partitions without restrictions&#13;&#10;&#13;&#10;* SD_MMC update (#8298)&#13;&#10;&#13;&#10;* Updated SD_MMC lib and examples&#13;&#10;&#13;&#10;* Removed getter implementation and commented usage in examples&#13;&#10;&#13;&#10;* squashed updates&#13;&#10;&#13;&#10;* IDF release/v5.1 f0437b945f (#8599)&#13;&#10;&#13;&#10;* Update package_esp32_index.template.json&#13;&#10;&#13;&#10;* Fix printf format build error in BTAdvertisedDeviceSet.cpp&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Pedro Minatel &lt;pedro.minatel@espressif.com&gt;&#13;&#10;Co-authored-by: Rodrigo Garcia &lt;rodrigo.garcia@espressif.com&gt;&#13;&#10;Co-authored-by: Ha Thach &lt;thach@tinyusb.org&gt;&#13;&#10;Co-authored-by: Martin Turski &lt;quiret@vfemail.net&gt;&#13;&#10;Co-authored-by: raviypujar &lt;raviypujar@gmail.com&gt;&#13;&#10;Co-authored-by: Jason2866 &lt;24528715+Jason2866@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: Tomáš Pilný &lt;34927466+PilnyTomas@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: Jan Procházka &lt;90197375+P-R-O-C-H-Y@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: Daniel Berlin &lt;dberlin@dberlin.org&gt;&#13;&#10;Co-authored-by: Nima Askari (نیما عسکری) &lt;nimaltd@yahoo.com&gt;&#13;&#10;Co-authored-by: rtpmsys &lt;106180646+rtpmsys@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: bytiful &lt;55647551+bytiful@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: tmfarrington &lt;tmfarrington@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: Krzysiek S &lt;chris.streh@gmail.com&gt;&#13;&#10;Co-authored-by: surt &lt;carl.olsson@gmail.com&gt;&#13;&#10;Co-authored-by: Max Scheffler &lt;max.scheffler@pm.me&gt;&#13;&#10;Co-authored-by: Clemens Kirchgatterer &lt;clemens@1541.org&gt;&#13;&#10;Co-authored-by: Peter Pan's Techland &lt;twinkle-pirate@hotmail.com&gt;&#13;&#10;Co-authored-by: Roman &lt;programmeofficemilkyway@gmail.com&gt;&#13;&#10;Co-authored-by: Eistee &lt;Eistee82@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: David McCurley &lt;44048235+mrengineer7777@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: Gaya3N25 &lt;30388176+Gaya3N25@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: renebohne &lt;rene.bohne@gmail.com&gt;&#13;&#10;Co-authored-by: Olivér Remény &lt;25034625+remenyo@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: davidk88 &lt;david.kotar@gmail.com&gt;&#13;&#10;Co-authored-by: Vojtěch Bartoška &lt;76958047+VojtechBartoska@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: James Armstrong &lt;jamesarmstrong3@me.com&gt;&#13;&#10;Co-authored-by: Valerii Koval &lt;valeros@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: Peter G. Jensen &lt;root@petergjoel.dk&gt;" />
			<int key="additions" value="8" />
			<int key="deletions" value="5" />
			<string key="diff" value='@@ -7,10 +7,12 @@&#10;  * &#9;Update: April, 2021&#10;  * &#9;&#9;add BLE5 support&#10;  */&#10;+#include "soc/soc_caps.h"&#10;+#if SOC_BLE_SUPPORTED&#10;+&#10; #include "sdkconfig.h"&#10; #if defined(CONFIG_BLUEDROID_ENABLED)&#10; &#10;-&#10; #include &lt;esp_err.h&gt;&#10; &#10; #include &lt;map&gt;&#10;@@ -146,7 +148,7 @@ void BLEScan::handleGAPEvent(&#10; &#10; &#9;&#9;&#9;break;&#10; &#9;&#9;} // ESP_GAP_BLE_SCAN_RESULT_EVT&#10;-#ifdef CONFIG_BT_BLE_50_FEATURES_SUPPORTED&#10;+#ifdef SOC_BLE_50_SUPPORTED&#10; &#9;&#9;case ESP_GAP_BLE_EXT_ADV_REPORT_EVT: {&#10; &#9;&#9;&#9;if (param-&gt;ext_adv_report.params.event_type &amp; ESP_BLE_GAP_SET_EXT_ADV_PROP_LEGACY) {&#10; &#9;&#9;&#9;&#9;log_v("legacy adv, adv type 0x%x data len %d", param-&gt;ext_adv_report.params.event_type, param-&gt;ext_adv_report.params.adv_data_len);&#10;@@ -237,7 +239,7 @@ void BLEScan::handleGAPEvent(&#10; &#9;&#9;&#9;}&#10; &#9;&#9;&#9;break;&#10; &#10;-#endif // CONFIG_BT_BLE_50_FEATURES_SUPPORTED&#10;+#endif // SOC_BLE_50_SUPPORTED&#10; &#10; &#9;&#9;default: {&#10; &#9;&#9;&#9;break;&#10;@@ -273,7 +275,7 @@ void BLEScan::setAdvertisedDeviceCallbacks(BLEAdvertisedDeviceCallbacks* pAdvert&#10; &#9;m_shouldParse = shouldParse;&#10; } // setAdvertisedDeviceCallbacks&#10; &#10;-#ifdef CONFIG_BT_BLE_50_FEATURES_SUPPORTED&#10;+#ifdef SOC_BLE_50_SUPPORTED&#10; &#10; void BLEScan::setExtendedScanCallback(BLEExtAdvertisingCallbacks* cb)&#10; {&#10;@@ -355,7 +357,7 @@ void BLEScan::setPeriodicScanCallback(BLEPeriodicScanCallbacks* cb)&#10; &#9;m_pPeriodicScanCb = cb;&#10; }&#10; &#10;-#endif // CONFIG_BT_BLE_50_FEATURES_SUPPORTED&#10;+#endif // SOC_BLE_50_SUPPORTED&#10; /**&#10;  * @brief Set the interval to scan.&#10;  * @param [in] The interval in msecs.&#10;@@ -510,3 +512,4 @@ void BLEScan::clearResults() {&#10; }&#10; &#10; #endif /* CONFIG_BLUEDROID_ENABLED */&#10;+#endif /* SOC_BLE_SUPPORTED */&#10;' />
			<string key="comment_change" value="True" />
		</event>
	</trace>
	<trace>
		<string key="file" value="BLEScan.h" />
	</trace>
	<trace>
		<string key="file" value="BLESecurity.cpp" />
		<event>
			<string key="timestamp" value="2023-10-05T14:54:25+03:00" />
			<string key="author" value="Me No Dev" />
			<string key="change_type" value="MODIFY" />
			<string key="commit_message" value="ESP-IDF v5.1 (#7733)&#10;&#10;* Initial changes to compile under ESP-IDF v5.1&#13;&#10;&#13;&#10;* Initial import for ESP-IDF v5.1 libs&#13;&#10;&#13;&#10;* Update toolchain&#13;&#10;&#13;&#10;* Update esp32-hal-psram.c&#13;&#10;&#13;&#10;* Add missing LDs&#13;&#10;&#13;&#10;* Update platform.txt&#13;&#10;&#13;&#10;* Stop some CI jobs, because they will always fail&#13;&#10;&#13;&#10;* Fix examples&#13;&#10;&#13;&#10;* Update app_httpd.cpp&#13;&#10;&#13;&#10;* Update ResetReason.ino&#13;&#10;&#13;&#10;* Warnings fixes&#13;&#10;&#13;&#10;* Added the example guideline and template (#7665)&#13;&#10;&#13;&#10;* Added the example guideline and template&#13;&#10;&#13;&#10;* PR review changes with some typos and grammar fixes&#13;&#10;&#13;&#10;* Changes according to the PR review&#13;&#10;&#13;&#10;* Added ESP32-S3 link to the datasheet (#7738)&#13;&#10;&#13;&#10;* Update HiFreq_ADC.ino&#13;&#10;&#13;&#10;* Replace periph_ctrl.h use because of deprecation&#13;&#10;&#13;&#10;* Replace esp_spi_flash.h use because of deprecation&#13;&#10;&#13;&#10;* Add includes to male mDNS::enableWorkstation compile&#13;&#10;&#13;&#10;* Fix ssl_client mbedtls_pk_parse_key callback&#13;&#10;&#13;&#10;* Update temperature sensor driver&#13;&#10;&#13;&#10;* Allow sketch_utils to compile with arduino-cli&#13;&#10;&#13;&#10;* Run CI with arduino-cli&#13;&#10;&#13;&#10;* Fix arduino-cli CI build on Windows&#13;&#10;&#13;&#10;* Refactor platform.txt to not use components installed through the board manager when running from git&#13;&#10;&#13;&#10;* Initial Peripheral Manager Implementation&#13;&#10;&#13;&#10;* Update SigmaDelta driver to use the new ESP-IDF driver API&#13;&#10;&#13;&#10;* Small improvements to peripheral manager and SigmaDelta&#13;&#10;&#13;&#10;* Remove deleted function from SigmaDelta header&#13;&#10;&#13;&#10;* Update DAC driver to use the new ESP-IDF driver API&#13;&#10;&#13;&#10;* Adds softAp(String) to make it compatible with ESP8266 (#7801)&#13;&#10;&#13;&#10;* Fix commentary (#7800)&#13;&#10;&#13;&#10;Minor fix based on observation done in https://github.com/espressif/arduino-esp32/issues/7795#issuecomment-1416868611&#13;&#10;&#13;&#10;* add adafruit new board feather esp32s2 reserve tft (#7794)&#13;&#10;&#13;&#10;* bugfix: add &lt;stdint.h&gt; for uint8_t to avoid compilation failure (GCC 11.2.0) (#7744)&#13;&#10;&#13;&#10;* Adding 3rd party boards for VALTRACK-V4-VTS-ESP32-C3 &amp; VALTRACK-V4-MFW-ESP32-C3 (#7735)&#13;&#10;&#13;&#10;* Added VALTRACK-V4-VTS-ESP32-C3 board definition&#13;&#10;&#13;&#10;Created pins_arduino.h &amp; made changes to boards.txt with necessary changes&#13;&#10;&#13;&#10;* Modified the URL&#13;&#10;&#13;&#10;* Renamed json&#13;&#10;&#13;&#10;* renamed all auRL&#13;&#10;&#13;&#10;* Adding VALTRACK-V4 series board definitions&#13;&#10;&#13;&#10;Added VALTRACK-V4-VTS-ESP32C3 &amp; VALTRACK-V4-MFW-ESP32-C3 board variants&#13;&#10;&#13;&#10;* Adding VALTRACK-V4 series board definitions&#13;&#10;&#13;&#10;Added VALTRACK-V4-VTS-ESP32C3 &amp; VALTRACK-V4-MFW-ESP32-C3 board variants&#13;&#10;&#13;&#10;* Reverted package_esp32_index.template.json&#13;&#10;&#13;&#10;restored package_esp32_index.template.json from edits&#13;&#10;&#13;&#10;* Reverted package_esp32_index.template.json&#13;&#10;&#13;&#10;Added new line to package_esp32_index.template.json&#13;&#10;&#13;&#10;* Update Platformio CI (#7725)&#13;&#10;&#13;&#10;* WiFiClient example fix (#7711)&#13;&#10;&#13;&#10;* Modified WiFiClient example to use thingspeak instead of non-functionig sparkfun&#13;&#10;&#13;&#10;* Moved instructions to README&#13;&#10;&#13;&#10;* Fixed spelling&#13;&#10;&#13;&#10;* Added link to S3 datasheet&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Jan Procházka &lt;90197375+P-R-O-C-H-Y@users.noreply.github.com&gt;&#13;&#10;&#13;&#10;* Mirror update from Heltec repository (#7709)&#13;&#10;&#13;&#10;Heltec updated the I2C pins in https://github.com/Heltec-Aaron-Lee/WiFi_Kit_series/commit/b10f4bf85d13fd01be80dcdb0eb59e6a8c8ba19a&#13;&#10;&#13;&#10;* Fixes BLE data printing (#7699)&#13;&#10;&#13;&#10;* Fixes BLE data printing&#13;&#10;&#13;&#10;BLE data has no '\0' terminator, therefore it can't be printed as a regular C string.&#13;&#10;This fix just prints the BLE data based on its length.&#13;&#10;&#13;&#10;* Simplify printing to a single call&#13;&#10;&#13;&#10;* split menu options + lora_32_V3 fix (#7697)&#13;&#10;&#13;&#10;* Change header gaurd name (#7696)&#13;&#10;&#13;&#10;* Fix Name (#7691)&#13;&#10;&#13;&#10;Wrong name in definitions.&#13;&#10;&#13;&#10;* Fix error in WiFiClient.cpp where the connect function fails for timeouts below 1 second (#7686)&#13;&#10;&#13;&#10;* Update WiFiClient.cpp&#13;&#10;&#13;&#10;This change will allow specifying connect timeouts below 1 second. Without this change, if connect timeouts under 1 second are given, the connect defaults to 0ms and fails. &#13;&#10;This will also allow timeouts in fractions of seconds, e.g. 1500ms. Without this change, connect timeouts are truncated to full second increments.&#13;&#10;&#13;&#10;* Make parameter timeout_ms clear&#13;&#10;&#13;&#10;* Change connection timeout_ms name for clarity&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Rodrigo Garcia &lt;rodrigo.garcia@espressif.com&gt;&#13;&#10;&#13;&#10;* fixed the function header (#7674)&#13;&#10;&#13;&#10;* fixed the function header&#13;&#10;&#13;&#10;* fixed function name and paramaters&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Jan Procházka &lt;90197375+P-R-O-C-H-Y@users.noreply.github.com&gt;&#13;&#10;&#13;&#10;* Ticker fix solving #6155 (#7664)&#13;&#10;&#13;&#10;* Wrapped Ticker functions with #pragma disabling -Wcast-function-type&#13;&#10;&#13;&#10;* Revert &quot;Wrapped Ticker functions with #pragma disabling -Wcast-function-type&quot;&#13;&#10;&#13;&#10;This reverts commit 160be7e67a10d01b6e44c4bf2521c0ccd6348976.&#13;&#10;&#13;&#10;* Fixed Ticker example&#13;&#10;&#13;&#10;* Modified Ticker example&#13;&#10;&#13;&#10;* Fixed LED_BUILTIN err for ESP32&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Jan Procházka &lt;90197375+P-R-O-C-H-Y@users.noreply.github.com&gt;&#13;&#10;&#13;&#10;* setPins fix ESP32 &quot;specified pins are not supported by this chip.&quot; (#7646)&#13;&#10;&#13;&#10;[ESP32: SDMMCFS::begin hardcodes the usage of slot 1, only check if the pins match slot 1 pins.]&#13;&#10;&#13;&#10;setPins() was testing pins D1, D2 and D3 all against D1 ... fine in 1 pin mode when all are -1 not so much if you're trying to get 4 pin mode working.&#13;&#10;I now see this function doesn't really do anything on the ESP32...accept now correctly checks that you are trying to use the slot 1 pins.&#13;&#10;&#13;&#10;Co-authored-by: Jan Procházka &lt;90197375+P-R-O-C-H-Y@users.noreply.github.com&gt;&#13;&#10;&#13;&#10;* Allow passing IP as connect method parameter in WiFiClientSecure and skip unnecessary host-ip conversions (#7643)&#13;&#10;&#13;&#10;* Add LED_BUILTIN* definitions and initialization for LEDs to stop them floating. (#7636)&#13;&#10;&#13;&#10;Co-authored-by: Rodrigo Garcia &lt;rodrigo.garcia@espressif.com&gt;&#13;&#10;&#13;&#10;* Expand path to tinuf2 image when checking existence in platformio-build.py (#7631)&#13;&#10;&#13;&#10;* Expand path to tinuf2 image when checking existence&#13;&#10;&#13;&#10;* More isFiles fixed&#13;&#10;&#13;&#10;* Remove (useless) trailing semicolon from Print.cpp (#7622)&#13;&#10;&#13;&#10;* ADD: New variant Edgebox-ESP-100 (#7771)&#13;&#10;&#13;&#10;* ADD: New variant Edgebox-ESP-100&#13;&#10;&#13;&#10;* FIX: Edgebox-ESP-100 Board.txt usb mode option change back to default value as ESP32S3&#13;&#10;&#13;&#10;* Add Crabik Slot ESP32-S3 board (#7790)&#13;&#10;&#13;&#10;* Added Crabik Slot ESP32-S3&#13;&#10;&#13;&#10;* Adding CPU frequency settings and removing excess from partition scheme settings&#13;&#10;&#13;&#10;* new variant LilyGO T-Display-S3 (#7763)&#13;&#10;&#13;&#10;* new variant LilyGO T-Display-S3&#13;&#10;&#13;&#10;https://github.com/Xinyuan-LilyGO/T-Display-S3&#13;&#10;&#13;&#10;* Add boards.txt definition&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Me No Dev &lt;me-no-dev@users.noreply.github.com&gt;&#13;&#10;&#13;&#10;* Update get.py to support Apple ARM64&#13;&#10;&#13;&#10;* Update package_esp32_index.template.json&#13;&#10;&#13;&#10;* WString Return bool (#7774)&#13;&#10;&#13;&#10;* Add Roboheart Hercules development board to the esp32-core (#7672)&#13;&#10;&#13;&#10;* added Roboheart Hercules pin definitions and board.txt entries&#13;&#10;&#13;&#10;* added package_roboheat.json for prototyping&#13;&#10;&#13;&#10;* Roboheart Hercules pins&#13;&#10;&#13;&#10;* Updated the pins&#13;&#10;&#13;&#10;* Delete package_roboheart.json&#13;&#10;&#13;&#10;* Requested changes&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: renebohne &lt;rene.bohne@gmail.com&gt;&#13;&#10;&#13;&#10;* Reword &quot;ESP-IDF as Component&quot; (#7812)&#13;&#10;&#13;&#10;I think &quot;Arduino as an ESP-IDF component&quot; or just &quot;As ESP-IDF component&quot; instead of  &quot;ESP-IDF as Component&quot; is more correct way to name the link.&#13;&#10;&#13;&#10;1. &quot;ESP-IDF as Component&quot; would imply that ESP-IDF is some sort of library for Arduino, which is (IMO) misleading, because it's true the other way around.&#13;&#10;2. It's written as &quot;Arduino as an ESP-IDF component&quot; on the webpage it points to as well.&#13;&#10;&#13;&#10;- Also I removed the capitalization from &quot;Component&quot; as I have not found a reason why is it capitalized.&#13;&#10;&#13;&#10;* add new board Adafruit Feather ESP32-S3 Reverse TFT (#7811)&#13;&#10;&#13;&#10;* Multi threading examples (tasks, queues, semaphores, mutexes) (#7660)&#13;&#10;&#13;&#10;* Moved and renamed example ESP32/FreeRTOS to MultiThreading/BasicMultiThreading&#13;&#10;&#13;&#10;* Added dummy files&#13;&#10;&#13;&#10;* Modified original example&#13;&#10;&#13;&#10;* Fixed BasicMultiThreading.ino&#13;&#10;&#13;&#10;* Added Example demonstrating use of queues&#13;&#10;&#13;&#10;* Extended info in BasicMultiThreading&#13;&#10;&#13;&#10;* Renamed Queues to singular Queue&#13;&#10;&#13;&#10;* Added Mutex example&#13;&#10;&#13;&#10;* Added Semaphore example&#13;&#10;&#13;&#10;* Moved info from example to README&#13;&#10;&#13;&#10;* Moved doc from Mutex to README&#13;&#10;&#13;&#10;* Added Queue README&#13;&#10;&#13;&#10;* Removed unecesary text&#13;&#10;&#13;&#10;* Fixed grammar&#13;&#10;&#13;&#10;* Increased stack size for Sempahore example&#13;&#10;&#13;&#10;* Added headers into .ino files&#13;&#10;&#13;&#10;* Added word Example at the end of title in README&#13;&#10;&#13;&#10;* removed unused line&#13;&#10;&#13;&#10;* Added forgotten README&#13;&#10;&#13;&#10;* Modified BasicMultiThreading example&#13;&#10;&#13;&#10;* Added missing S3 entry in README&#13;&#10;&#13;&#10;* moved location&#13;&#10;&#13;&#10;* Update ESP-IDF libs&#13;&#10;&#13;&#10;* Update CMakeLists.txt&#13;&#10;&#13;&#10;* Update esptool to v4.4&#13;&#10;&#13;&#10;* Add function timerAttachInterruptFlag (#7809)&#13;&#10;&#13;&#10;* Update esptool to v4.5&#13;&#10;&#13;&#10;* ADC refactoring (#7827)&#13;&#10;&#13;&#10;* Adc refactored + periman implementation&#13;&#10;&#13;&#10;Peripheral manager still needs to be checked if the implementation is right.&#13;&#10;&#13;&#10;* switched to working solution for milivolts read&#13;&#10;&#13;&#10;* Periman detachbus fix&#13;&#10;&#13;&#10;* coding style&#13;&#10;&#13;&#10;* fix CI warnings&#13;&#10;&#13;&#10;* fix FreeRTOS example&#13;&#10;&#13;&#10;* Update ETH.cpp&#13;&#10;&#13;&#10;* Update FunctionalInterruptStruct.ino&#13;&#10;&#13;&#10;* Update package_esp32_index.template.json&#13;&#10;&#13;&#10;* Update package_esp32_index.template.json&#13;&#10;&#13;&#10;* Fixes for the latest IDF v5.1&#13;&#10;&#13;&#10;* update esp-idf libs and toolchain&#13;&#10;&#13;&#10;* Turn OFF auto crystal frequency for ESP32 (needed by TWAI)&#13;&#10;&#13;&#10;* Update examples&#13;&#10;&#13;&#10;* Switch build to mostly use flags from files&#13;&#10;&#13;&#10;Includes can not be done this way&#13;&#10;&#13;&#10;* Reorganize flag files&#13;&#10;&#13;&#10;* Optimize chip build flags further&#13;&#10;&#13;&#10;* Revert defines from file. MBEDTLS_CONFIG_FILE does not properly expand&#13;&#10;&#13;&#10;* Add support for includes and defines from file&#13;&#10;&#13;&#10;* Replace old sdk path references in platform.txt&#13;&#10;&#13;&#10;* use gcc-ar (#8013)&#13;&#10;&#13;&#10;* Makes F_CPU generic for all SoC (#8007)&#13;&#10;&#13;&#10;Based on CONFIG_ESP_DEFAULT_CPU_FREQ_MHZ that is correctly defined in the sdkconfig file for each SoC.&#13;&#10;&#13;&#10;* TIMER refactoring (#7904)&#13;&#10;&#13;&#10;* refactor using GPtimer&#13;&#10;&#13;&#10;* Updated timer HW test&#13;&#10;&#13;&#10;* fix examples&#13;&#10;&#13;&#10;* Add v2.0.7 in issue template (#7871)&#13;&#10;&#13;&#10;* refactor using GPtimer&#13;&#10;&#13;&#10;* Updated timer HW test&#13;&#10;&#13;&#10;* fix examples&#13;&#10;&#13;&#10;* Revert &quot;Add v2.0.7 in issue template (#7871)&quot;&#13;&#10;&#13;&#10;This reverts commit fcc3b17d62ff57861f8913ca1f142fd5163b7457.&#13;&#10;&#13;&#10;* Update upload-artifact to v3 in HW CI&#13;&#10;&#13;&#10;* Revert &quot;Update upload-artifact to v3 in HW CI&quot;&#13;&#10;&#13;&#10;This reverts commit 1ba228071718ba37c4e26d98db22f77b2a7364a6.&#13;&#10;&#13;&#10;* replace resolution with frequency&#13;&#10;&#13;&#10;* remove count_down option&#13;&#10;&#13;&#10;* countup removed from examples + header&#13;&#10;&#13;&#10;* Refactored timer object&#13;&#10;&#13;&#10;* code cleanup + examples and tests fixes&#13;&#10;&#13;&#10;* TimerAlarm fix&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Vojtěch Bartoška &lt;76958047+VojtechBartoska@users.noreply.github.com&gt;&#13;&#10;&#13;&#10;* [Docs] ADC and Timer API Update (+some docs fixes) (#7906)&#13;&#10;&#13;&#10;* updated docs&#13;&#10;&#13;&#10;* remove hall sensor docs&#13;&#10;&#13;&#10;Removed Hall sensor documentation as its no longer supported in IDF-5&#13;&#10;&#13;&#10;* Fixed ESPNow examples location in docs&#13;&#10;&#13;&#10;* Last timer refactored API + gpio small fix&#13;&#10;&#13;&#10;* AlarmWrite fix&#13;&#10;&#13;&#10;* Fixes APLL/PLL with RTC Frequency (#8025)&#13;&#10;&#13;&#10;log_d() was displaying APLL for any SoC, but S3 and C3 has not such option, causing compilation errors.&#13;&#10;&#13;&#10;* Update IDF libs and fix OPI PSRAM on S3&#13;&#10;&#13;&#10;* Add setMode function HardwareSerial.c to set the esp32 uart mode for use with RS485 auto RTS (#7935)&#13;&#10;&#13;&#10;* Added setMode function to set the esp32 uart mode&#13;&#10;&#13;&#10;Used to set the esp32 uart mode for use with RS485 Half Duplex and the auto RTS pin mode. This will set/clear the RTS pin output to control the RE/DE pin on most RS485 chips.&#13;&#10;&#13;&#10;* Add Success (bool) return in some functions&#13;&#10;&#13;&#10;* Add Success (bool) return code to some functions&#13;&#10;&#13;&#10;* Add Success (bool) return to some functions&#13;&#10;&#13;&#10;* Add Success (bool) return to some functions&#13;&#10;&#13;&#10;* Fix uartSetRxTimeout return type&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Rodrigo Garcia &lt;rodrigo.garcia@espressif.com&gt;&#13;&#10;&#13;&#10;* Add support for esp-elf-gdb&#13;&#10;&#13;&#10;* WFG Crashfix (#8044)&#13;&#10;&#13;&#10;* Update component libs&#13;&#10;&#13;&#10;* IDF release/v5.1 (#8061)&#13;&#10;&#13;&#10;* IDF release/v5.1 bb9200acec&#13;&#10;&#13;&#10;* Update Esp.cpp&#13;&#10;&#13;&#10;* IDF release/v5.1 420ebd208a&#13;&#10;&#13;&#10;* Update esp32-hal-psram.c&#13;&#10;&#13;&#10;* Switch SDK to be an external package&#13;&#10;&#13;&#10;* fix path (#8096)&#13;&#10;&#13;&#10;* Makes UART work at any APB Frequency (#8097)&#13;&#10;&#13;&#10;Fixes HardwareSerial to work with IDF 5.1 on any CPU/APB Frequency (240MHz to 10MHZ), including user created low power modes.&#13;&#10;&#13;&#10;* Add required callbacks for TinyUSB DFU&#13;&#10;&#13;&#10;* Update version to 3.0.0&#13;&#10;&#13;&#10;* Add ESP.getCoreVersion() and update ESP.getChipModel()&#13;&#10;&#13;&#10;* Update timer hal for the latest 5.1&#13;&#10;&#13;&#10;* Use separate RX and TX buffer sizes in HTTP client&#13;&#10;&#13;&#10;optimizes download by allowing up to 4K packets to be received&#13;&#10;&#13;&#10;* Rename clock tree enum name in latest 5.1&#13;&#10;&#13;&#10;* ESP32-H4 support was removed in ESP-IDF v5.1&#13;&#10;&#13;&#10;* IDF release/v5.1 2004bf4e11 (#8165)&#13;&#10;&#13;&#10;* Deinit previous bus first (#8180)&#13;&#10;&#13;&#10;* TIMER - add timer_started flag, fix timerEnd() + timer HW test (#8135)&#13;&#10;&#13;&#10;* Add timer_started flag and stop before disable&#13;&#10;&#13;&#10;* Fix timer HW test&#13;&#10;&#13;&#10;* TOUCH - Peripheral manager implementation (#8129)&#13;&#10;&#13;&#10;* Touch periman implemented&#13;&#10;&#13;&#10;* Deinit previous bus first&#13;&#10;&#13;&#10;* LEDC Refactoring - Peripheral manager implemented (#8126)&#13;&#10;&#13;&#10;* LEDC periman implementation&#13;&#10;&#13;&#10;* Fix examples&#13;&#10;&#13;&#10;* Rework tone&#13;&#10;&#13;&#10;* Update ledc docs&#13;&#10;&#13;&#10;* fix missing bracket&#13;&#10;&#13;&#10;* Update analog funtions esp32-hal.h&#13;&#10;&#13;&#10;* Update CameraWebServer example&#13;&#10;&#13;&#10;* Fix HiFreq_ADC example&#13;&#10;&#13;&#10;* minor fixes - typos&#13;&#10;&#13;&#10;* Avoid calling tone/notone when tone already runs on dif. pin&#13;&#10;&#13;&#10;* Remove unused channels_resolution&#13;&#10;&#13;&#10;* GPIO - Peripheral manager implementation (#8179)&#13;&#10;&#13;&#10;* periman-implementation&#13;&#10;&#13;&#10;* fix RGB_BUILTIN and remove space&#13;&#10;&#13;&#10;* Enforces more consistency into Peripheral Manager (#8188)&#13;&#10;&#13;&#10;* Avoid log_i() message the first time a bus is assigned&#13;&#10;&#13;&#10;* Prevent operation with ESP32_BUS_TYPE_INIT&#13;&#10;&#13;&#10;* keeps coding style&#13;&#10;&#13;&#10;* do not print messages on INIT bus type&#13;&#10;&#13;&#10;* [Arduino Core 3.0.0] RMT IDF5.1 Refactoring (#7994)&#13;&#10;&#13;&#10;* RMT IDF5.1 refactoring&#13;&#10;&#13;&#10;* Fixes initial value setting&#13;&#10;&#13;&#10;* removed rmtRead() with user callback&#13;&#10;&#13;&#10;* simplify/remove Read data structure&#13;&#10;&#13;&#10;* Deep API simplification&#13;&#10;&#13;&#10;* fixes the examples&#13;&#10;&#13;&#10;* fix rmt.h&#13;&#10;&#13;&#10;* adds support to APB different frequencies&#13;&#10;&#13;&#10;* fixes CI and not defined RGB_BUILTIN&#13;&#10;&#13;&#10;* new RMT API and examples&#13;&#10;&#13;&#10;* fixing commentaties&#13;&#10;&#13;&#10;* Update esp32-hal-rgb-led.c&#13;&#10;&#13;&#10;* changes Filter API&#13;&#10;&#13;&#10;* Fixes example with Filter API&#13;&#10;&#13;&#10;* Update PlatformIO scripts for the upcoming 3.0 core (#8183)&#13;&#10;&#13;&#10;* Update PlatformIO scripts for the upcoming 3.0 core&#13;&#10;&#13;&#10;* Dynamically select proper framework-arduinoespressif32-libs package&#13;&#10;&#13;&#10;With this change the dev-platform will be dynamically configured to&#13;&#10;pull the latest .zip package with precompiled libraries from extracted from&#13;&#10;package_esp32_index.template.json&#13;&#10;&#13;&#10;* free memory on detach (#8264)&#13;&#10;&#13;&#10;* SPI - Peripheral manager implementation  (#8255)&#13;&#10;&#13;&#10;* spi periman implementation&#13;&#10;&#13;&#10;* fix header file&#13;&#10;&#13;&#10;* remove unused struct&#13;&#10;&#13;&#10;* fix missing braces&#13;&#10;&#13;&#10;* Update esp32-hal-rmt.c (#8216)&#13;&#10;&#13;&#10;Optimizing Peripheral Manager Test&#13;&#10;&#13;&#10;* I2C - Peripheral manager implementation (#8220)&#13;&#10;&#13;&#10;* i2c-master periman initial commit&#13;&#10;&#13;&#10;* i2c-master make detachbus static + comment remove&#13;&#10;&#13;&#10;* i2c-slave periman implementation&#13;&#10;&#13;&#10;* SetPinBus to INIT on i2cDeinits&#13;&#10;&#13;&#10;* Fix slave pins deinit&#13;&#10;&#13;&#10;* remove dbg logs&#13;&#10;&#13;&#10;* set ret to ESP_FAIL instead of returning&#13;&#10;&#13;&#10;* Fix warnings in hal-spi caused by pariman transition&#13;&#10;&#13;&#10;* Update esptool.py to version 4.6&#13;&#10;&#13;&#10;* Add platform support for ESP_SR&#13;&#10;&#13;&#10;* Add USB Type and valid pin check to periman&#13;&#10;&#13;&#10;* replace bus with spi-&gt;num+1 (#8279)&#13;&#10;&#13;&#10;* Remove default pins from SPI HAL&#13;&#10;&#13;&#10;* Add commented out handlers for esptool.js in TinyUSB CDC&#13;&#10;&#13;&#10;For future use&#13;&#10;&#13;&#10;* Add build defines for host os and fqbn (for debug purposes)&#13;&#10;&#13;&#10;* Provide proper memory caps total size&#13;&#10;&#13;&#10;* Update Esp.cpp&#13;&#10;&#13;&#10;* SDMMC - Peripheral manager implementation (#8289)&#13;&#10;&#13;&#10;* sdmmc periman implemented&#13;&#10;&#13;&#10;* save pins when SOC_SDMMC_USE_IOMUX&#13;&#10;&#13;&#10;* IDF release/v5.1 4bc762621d (#8292)&#13;&#10;&#13;&#10;* Adds missing pinMode (#8312)&#13;&#10;&#13;&#10;* Adds missing pinMode&#13;&#10;&#13;&#10;The example code lacks a pinMode() to initialize the GPIO 0 (button). In Arduino Core 3.0.0, it prints an error message when trying to read a not initialized GPIO.&#13;&#10;&#13;&#10;* Update KeyboardLogout.ino&#13;&#10;&#13;&#10;Adds &lt;buttonPin&gt; to keep code standard&#13;&#10;&#13;&#10;* Update KeyboardReprogram.ino&#13;&#10;&#13;&#10;Adds &lt;buttonPin&gt; to keep code standard&#13;&#10;&#13;&#10;* LEDC Fade implementation (#8338)&#13;&#10;&#13;&#10;* fade API + pointer fixes&#13;&#10;&#13;&#10;* Add fade api&#13;&#10;&#13;&#10;* Add fade example&#13;&#10;&#13;&#10;* update ledc docs&#13;&#10;&#13;&#10;* remove unused variables&#13;&#10;&#13;&#10;* fix path to example&#13;&#10;&#13;&#10;* Adds USB to Peripheral Manager - Arduino Core 3.0.0 (#8335)&#13;&#10;&#13;&#10;* ETHERNET - Peripheral manager implementation (#8297)&#13;&#10;&#13;&#10;* Peripheral manager implemented&#13;&#10;&#13;&#10;* remove unused variable&#13;&#10;&#13;&#10;* Add all RMII pins&#13;&#10;&#13;&#10;* fix typo&#13;&#10;&#13;&#10;* Adds HardwareSerial to Peripheral Manager Arduino 3.0.0 (#8328)&#13;&#10;&#13;&#10;* Do not limit ETHERNET in periman to only ESP32. SPI is also an option&#13;&#10;&#13;&#10;* Initial support for ESP32-C6 (#8337)&#13;&#10;&#13;&#10;* Add checks for SOC defines (#8351)&#13;&#10;&#13;&#10;* Add checks for SOC defines&#13;&#10;&#13;&#10;* Add SoC checks to BLE library&#13;&#10;&#13;&#10;* fix i2c compilation error&#13;&#10;&#13;&#10;* fix wrong placement of include&#13;&#10;&#13;&#10;* add check to SPI library&#13;&#10;&#13;&#10;* add check to USB library&#13;&#10;&#13;&#10;* add checks to Wire library&#13;&#10;&#13;&#10;* Feature/esp32h2 support (#8373)&#13;&#10;&#13;&#10;* Initial support for ESP32H2&#13;&#10;&#13;&#10;* Additional changes for ESP32H2&#13;&#10;&#13;&#10;* Update libs for ESP32H2&#13;&#10;&#13;&#10;* Fix flashing on ESP32-H2&#13;&#10;&#13;&#10;* Fix GPIO Configs for ESP32-C6 and ESP32-H2&#13;&#10;&#13;&#10;* Update Timer test sketch&#13;&#10;&#13;&#10;* Fix upload flash parameters&#13;&#10;&#13;&#10;* Use ets_write_char_uart instead of ets_printf in log_printfv&#13;&#10;&#13;&#10;* Print full chip report when log level is sufficient (#8282)&#13;&#10;&#13;&#10;* ESP32-C3 does not have ets_write_char_uart&#13;&#10;&#13;&#10;* Fix BLE gap event name&#13;&#10;&#13;&#10;* HW Testing - Pytest update (#8389)&#13;&#10;&#13;&#10;* update tests requirements&#13;&#10;&#13;&#10;* remove already handled components&#13;&#10;&#13;&#10;* Update version of pytest&#13;&#10;&#13;&#10;* Add missing ESP32-H2 to hil.yml&#13;&#10;&#13;&#10;* Updated FreeRTOS names (#8418)&#13;&#10;&#13;&#10;* HW Testing -  ESP32-C6 + ESP32-H2 fixes (#8404)&#13;&#10;&#13;&#10;* add C6/H2 to tests cfg.json&#13;&#10;&#13;&#10;* remove ,&#13;&#10;&#13;&#10;* workflow runs-on runner by matrix&#13;&#10;&#13;&#10;* Add need for arduino tag to select runner&#13;&#10;&#13;&#10;* Add cryptography to requirements.txt&#13;&#10;&#13;&#10;* Removed duplicate TX1 define for H2 (#8402)&#13;&#10;&#13;&#10;* Fix broken examples&#13;&#10;&#13;&#10;* Fixes RMT filter &amp; idle timing and setup (#8359)&#13;&#10;&#13;&#10;* Fixes Filter and Idle parameter to uint32&#13;&#10;&#13;&#10;* Fixes Filter and Idle setup&#13;&#10;&#13;&#10;* Fixes it to 5.1Libs branch&#13;&#10;&#13;&#10;* fix RMT CLK source and Filter API&#13;&#10;&#13;&#10;* fixes missing ;&#13;&#10;&#13;&#10;* fixes missing ;&#13;&#10;&#13;&#10;* fixes RMT example&#13;&#10;&#13;&#10;* IDF release/v5.1 a7b62bbcaf (#8438)&#13;&#10;&#13;&#10;* Add workflow to build executables from python scripts (#8290)&#13;&#10;&#13;&#10;* Add workflow to build executables from python scripts&#13;&#10;&#13;&#10;* Push binary to tools&#13;&#10;&#13;&#10;* Enable executable signing on Windows&#13;&#10;&#13;&#10;* Update get.py&#13;&#10;&#13;&#10;* Push binary to tools&#13;&#10;&#13;&#10;* Try with multiple files&#13;&#10;&#13;&#10;* Try more actions&#13;&#10;&#13;&#10;* Try powershell&#13;&#10;&#13;&#10;* Restore tools so they do not get rebuilt&#13;&#10;&#13;&#10;* Finalize scripts&#13;&#10;&#13;&#10;* Push binary to tools&#13;&#10;&#13;&#10;* App rollback should be after PSRAM is initialized&#13;&#10;&#13;&#10;* Correcting RX1 to GPIO4 and TX1 to GPIO5 to be consistent with documentation. Previous pin use works but is inconsistent with C6 docs.&#13;&#10;&#13;&#10;* Fixes Memory Leak (#8486)&#13;&#10;&#13;&#10;* fixes preprocessor test (#8485)&#13;&#10;&#13;&#10;* fixes preprocessor test&#13;&#10;&#13;&#10;When using `#define USE_SOFT_AP` &#13;&#10;Change&#13;&#10;`&amp;&amp; not USE_SOFT_AP` ==&gt; `&amp;&amp; !defined(USE_SOFT_AP)`&#13;&#10;&#13;&#10;* Adds any BLE capable device in WiFiProv.ino&#13;&#10;&#13;&#10;Removing ESP32 restriction for BLE Provisioning.&#13;&#10;&#13;&#10;* fix flash mode read out for C6&#13;&#10;&#13;&#10;* Add option for custom partitions without restrictions&#13;&#10;&#13;&#10;* SD_MMC update (#8298)&#13;&#10;&#13;&#10;* Updated SD_MMC lib and examples&#13;&#10;&#13;&#10;* Removed getter implementation and commented usage in examples&#13;&#10;&#13;&#10;* squashed updates&#13;&#10;&#13;&#10;* IDF release/v5.1 f0437b945f (#8599)&#13;&#10;&#13;&#10;* Update package_esp32_index.template.json&#13;&#10;&#13;&#10;* Fix printf format build error in BTAdvertisedDeviceSet.cpp&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Pedro Minatel &lt;pedro.minatel@espressif.com&gt;&#13;&#10;Co-authored-by: Rodrigo Garcia &lt;rodrigo.garcia@espressif.com&gt;&#13;&#10;Co-authored-by: Ha Thach &lt;thach@tinyusb.org&gt;&#13;&#10;Co-authored-by: Martin Turski &lt;quiret@vfemail.net&gt;&#13;&#10;Co-authored-by: raviypujar &lt;raviypujar@gmail.com&gt;&#13;&#10;Co-authored-by: Jason2866 &lt;24528715+Jason2866@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: Tomáš Pilný &lt;34927466+PilnyTomas@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: Jan Procházka &lt;90197375+P-R-O-C-H-Y@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: Daniel Berlin &lt;dberlin@dberlin.org&gt;&#13;&#10;Co-authored-by: Nima Askari (نیما عسکری) &lt;nimaltd@yahoo.com&gt;&#13;&#10;Co-authored-by: rtpmsys &lt;106180646+rtpmsys@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: bytiful &lt;55647551+bytiful@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: tmfarrington &lt;tmfarrington@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: Krzysiek S &lt;chris.streh@gmail.com&gt;&#13;&#10;Co-authored-by: surt &lt;carl.olsson@gmail.com&gt;&#13;&#10;Co-authored-by: Max Scheffler &lt;max.scheffler@pm.me&gt;&#13;&#10;Co-authored-by: Clemens Kirchgatterer &lt;clemens@1541.org&gt;&#13;&#10;Co-authored-by: Peter Pan's Techland &lt;twinkle-pirate@hotmail.com&gt;&#13;&#10;Co-authored-by: Roman &lt;programmeofficemilkyway@gmail.com&gt;&#13;&#10;Co-authored-by: Eistee &lt;Eistee82@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: David McCurley &lt;44048235+mrengineer7777@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: Gaya3N25 &lt;30388176+Gaya3N25@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: renebohne &lt;rene.bohne@gmail.com&gt;&#13;&#10;Co-authored-by: Olivér Remény &lt;25034625+remenyo@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: davidk88 &lt;david.kotar@gmail.com&gt;&#13;&#10;Co-authored-by: Vojtěch Bartoška &lt;76958047+VojtechBartoska@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: James Armstrong &lt;jamesarmstrong3@me.com&gt;&#13;&#10;Co-authored-by: Valerii Koval &lt;valeros@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: Peter G. Jensen &lt;root@petergjoel.dk&gt;" />
			<int key="additions" value="6" />
			<int key="deletions" value="1" />
			<string key="diff" value='@@ -5,6 +5,9 @@&#10;  *      Author: chegewara&#10;  */&#10; &#10;+#include "soc/soc_caps.h"&#10;+#if SOC_BLE_SUPPORTED&#10;+&#10; #include "BLESecurity.h"&#10; #include "sdkconfig.h"&#10; #if defined(CONFIG_BLUEDROID_ENABLED)&#10;@@ -112,4 +115,6 @@ char* BLESecurity::esp_key_type_to_str(esp_ble_key_type_t key_type) {&#10; &#9;}&#10; &#9;return key_str;&#10; } // esp_key_type_to_str&#10;-#endif // CONFIG_BLUEDROID_ENABLED&#10;+&#10;+#endif /* CONFIG_BLUEDROID_ENABLED */&#10;+#endif /* SOC_BLE_SUPPORTED */&#10;' />
			<string key="comment_change" value="False" />
		</event>
	</trace>
	<trace>
		<string key="file" value="BLESecurity.h" />
	</trace>
	<trace>
		<string key="file" value="BLEService.cpp" />
		<event>
			<string key="timestamp" value="2023-10-05T14:54:25+03:00" />
			<string key="author" value="Me No Dev" />
			<string key="change_type" value="MODIFY" />
			<string key="commit_message" value="ESP-IDF v5.1 (#7733)&#10;&#10;* Initial changes to compile under ESP-IDF v5.1&#13;&#10;&#13;&#10;* Initial import for ESP-IDF v5.1 libs&#13;&#10;&#13;&#10;* Update toolchain&#13;&#10;&#13;&#10;* Update esp32-hal-psram.c&#13;&#10;&#13;&#10;* Add missing LDs&#13;&#10;&#13;&#10;* Update platform.txt&#13;&#10;&#13;&#10;* Stop some CI jobs, because they will always fail&#13;&#10;&#13;&#10;* Fix examples&#13;&#10;&#13;&#10;* Update app_httpd.cpp&#13;&#10;&#13;&#10;* Update ResetReason.ino&#13;&#10;&#13;&#10;* Warnings fixes&#13;&#10;&#13;&#10;* Added the example guideline and template (#7665)&#13;&#10;&#13;&#10;* Added the example guideline and template&#13;&#10;&#13;&#10;* PR review changes with some typos and grammar fixes&#13;&#10;&#13;&#10;* Changes according to the PR review&#13;&#10;&#13;&#10;* Added ESP32-S3 link to the datasheet (#7738)&#13;&#10;&#13;&#10;* Update HiFreq_ADC.ino&#13;&#10;&#13;&#10;* Replace periph_ctrl.h use because of deprecation&#13;&#10;&#13;&#10;* Replace esp_spi_flash.h use because of deprecation&#13;&#10;&#13;&#10;* Add includes to male mDNS::enableWorkstation compile&#13;&#10;&#13;&#10;* Fix ssl_client mbedtls_pk_parse_key callback&#13;&#10;&#13;&#10;* Update temperature sensor driver&#13;&#10;&#13;&#10;* Allow sketch_utils to compile with arduino-cli&#13;&#10;&#13;&#10;* Run CI with arduino-cli&#13;&#10;&#13;&#10;* Fix arduino-cli CI build on Windows&#13;&#10;&#13;&#10;* Refactor platform.txt to not use components installed through the board manager when running from git&#13;&#10;&#13;&#10;* Initial Peripheral Manager Implementation&#13;&#10;&#13;&#10;* Update SigmaDelta driver to use the new ESP-IDF driver API&#13;&#10;&#13;&#10;* Small improvements to peripheral manager and SigmaDelta&#13;&#10;&#13;&#10;* Remove deleted function from SigmaDelta header&#13;&#10;&#13;&#10;* Update DAC driver to use the new ESP-IDF driver API&#13;&#10;&#13;&#10;* Adds softAp(String) to make it compatible with ESP8266 (#7801)&#13;&#10;&#13;&#10;* Fix commentary (#7800)&#13;&#10;&#13;&#10;Minor fix based on observation done in https://github.com/espressif/arduino-esp32/issues/7795#issuecomment-1416868611&#13;&#10;&#13;&#10;* add adafruit new board feather esp32s2 reserve tft (#7794)&#13;&#10;&#13;&#10;* bugfix: add &lt;stdint.h&gt; for uint8_t to avoid compilation failure (GCC 11.2.0) (#7744)&#13;&#10;&#13;&#10;* Adding 3rd party boards for VALTRACK-V4-VTS-ESP32-C3 &amp; VALTRACK-V4-MFW-ESP32-C3 (#7735)&#13;&#10;&#13;&#10;* Added VALTRACK-V4-VTS-ESP32-C3 board definition&#13;&#10;&#13;&#10;Created pins_arduino.h &amp; made changes to boards.txt with necessary changes&#13;&#10;&#13;&#10;* Modified the URL&#13;&#10;&#13;&#10;* Renamed json&#13;&#10;&#13;&#10;* renamed all auRL&#13;&#10;&#13;&#10;* Adding VALTRACK-V4 series board definitions&#13;&#10;&#13;&#10;Added VALTRACK-V4-VTS-ESP32C3 &amp; VALTRACK-V4-MFW-ESP32-C3 board variants&#13;&#10;&#13;&#10;* Adding VALTRACK-V4 series board definitions&#13;&#10;&#13;&#10;Added VALTRACK-V4-VTS-ESP32C3 &amp; VALTRACK-V4-MFW-ESP32-C3 board variants&#13;&#10;&#13;&#10;* Reverted package_esp32_index.template.json&#13;&#10;&#13;&#10;restored package_esp32_index.template.json from edits&#13;&#10;&#13;&#10;* Reverted package_esp32_index.template.json&#13;&#10;&#13;&#10;Added new line to package_esp32_index.template.json&#13;&#10;&#13;&#10;* Update Platformio CI (#7725)&#13;&#10;&#13;&#10;* WiFiClient example fix (#7711)&#13;&#10;&#13;&#10;* Modified WiFiClient example to use thingspeak instead of non-functionig sparkfun&#13;&#10;&#13;&#10;* Moved instructions to README&#13;&#10;&#13;&#10;* Fixed spelling&#13;&#10;&#13;&#10;* Added link to S3 datasheet&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Jan Procházka &lt;90197375+P-R-O-C-H-Y@users.noreply.github.com&gt;&#13;&#10;&#13;&#10;* Mirror update from Heltec repository (#7709)&#13;&#10;&#13;&#10;Heltec updated the I2C pins in https://github.com/Heltec-Aaron-Lee/WiFi_Kit_series/commit/b10f4bf85d13fd01be80dcdb0eb59e6a8c8ba19a&#13;&#10;&#13;&#10;* Fixes BLE data printing (#7699)&#13;&#10;&#13;&#10;* Fixes BLE data printing&#13;&#10;&#13;&#10;BLE data has no '\0' terminator, therefore it can't be printed as a regular C string.&#13;&#10;This fix just prints the BLE data based on its length.&#13;&#10;&#13;&#10;* Simplify printing to a single call&#13;&#10;&#13;&#10;* split menu options + lora_32_V3 fix (#7697)&#13;&#10;&#13;&#10;* Change header gaurd name (#7696)&#13;&#10;&#13;&#10;* Fix Name (#7691)&#13;&#10;&#13;&#10;Wrong name in definitions.&#13;&#10;&#13;&#10;* Fix error in WiFiClient.cpp where the connect function fails for timeouts below 1 second (#7686)&#13;&#10;&#13;&#10;* Update WiFiClient.cpp&#13;&#10;&#13;&#10;This change will allow specifying connect timeouts below 1 second. Without this change, if connect timeouts under 1 second are given, the connect defaults to 0ms and fails. &#13;&#10;This will also allow timeouts in fractions of seconds, e.g. 1500ms. Without this change, connect timeouts are truncated to full second increments.&#13;&#10;&#13;&#10;* Make parameter timeout_ms clear&#13;&#10;&#13;&#10;* Change connection timeout_ms name for clarity&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Rodrigo Garcia &lt;rodrigo.garcia@espressif.com&gt;&#13;&#10;&#13;&#10;* fixed the function header (#7674)&#13;&#10;&#13;&#10;* fixed the function header&#13;&#10;&#13;&#10;* fixed function name and paramaters&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Jan Procházka &lt;90197375+P-R-O-C-H-Y@users.noreply.github.com&gt;&#13;&#10;&#13;&#10;* Ticker fix solving #6155 (#7664)&#13;&#10;&#13;&#10;* Wrapped Ticker functions with #pragma disabling -Wcast-function-type&#13;&#10;&#13;&#10;* Revert &quot;Wrapped Ticker functions with #pragma disabling -Wcast-function-type&quot;&#13;&#10;&#13;&#10;This reverts commit 160be7e67a10d01b6e44c4bf2521c0ccd6348976.&#13;&#10;&#13;&#10;* Fixed Ticker example&#13;&#10;&#13;&#10;* Modified Ticker example&#13;&#10;&#13;&#10;* Fixed LED_BUILTIN err for ESP32&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Jan Procházka &lt;90197375+P-R-O-C-H-Y@users.noreply.github.com&gt;&#13;&#10;&#13;&#10;* setPins fix ESP32 &quot;specified pins are not supported by this chip.&quot; (#7646)&#13;&#10;&#13;&#10;[ESP32: SDMMCFS::begin hardcodes the usage of slot 1, only check if the pins match slot 1 pins.]&#13;&#10;&#13;&#10;setPins() was testing pins D1, D2 and D3 all against D1 ... fine in 1 pin mode when all are -1 not so much if you're trying to get 4 pin mode working.&#13;&#10;I now see this function doesn't really do anything on the ESP32...accept now correctly checks that you are trying to use the slot 1 pins.&#13;&#10;&#13;&#10;Co-authored-by: Jan Procházka &lt;90197375+P-R-O-C-H-Y@users.noreply.github.com&gt;&#13;&#10;&#13;&#10;* Allow passing IP as connect method parameter in WiFiClientSecure and skip unnecessary host-ip conversions (#7643)&#13;&#10;&#13;&#10;* Add LED_BUILTIN* definitions and initialization for LEDs to stop them floating. (#7636)&#13;&#10;&#13;&#10;Co-authored-by: Rodrigo Garcia &lt;rodrigo.garcia@espressif.com&gt;&#13;&#10;&#13;&#10;* Expand path to tinuf2 image when checking existence in platformio-build.py (#7631)&#13;&#10;&#13;&#10;* Expand path to tinuf2 image when checking existence&#13;&#10;&#13;&#10;* More isFiles fixed&#13;&#10;&#13;&#10;* Remove (useless) trailing semicolon from Print.cpp (#7622)&#13;&#10;&#13;&#10;* ADD: New variant Edgebox-ESP-100 (#7771)&#13;&#10;&#13;&#10;* ADD: New variant Edgebox-ESP-100&#13;&#10;&#13;&#10;* FIX: Edgebox-ESP-100 Board.txt usb mode option change back to default value as ESP32S3&#13;&#10;&#13;&#10;* Add Crabik Slot ESP32-S3 board (#7790)&#13;&#10;&#13;&#10;* Added Crabik Slot ESP32-S3&#13;&#10;&#13;&#10;* Adding CPU frequency settings and removing excess from partition scheme settings&#13;&#10;&#13;&#10;* new variant LilyGO T-Display-S3 (#7763)&#13;&#10;&#13;&#10;* new variant LilyGO T-Display-S3&#13;&#10;&#13;&#10;https://github.com/Xinyuan-LilyGO/T-Display-S3&#13;&#10;&#13;&#10;* Add boards.txt definition&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Me No Dev &lt;me-no-dev@users.noreply.github.com&gt;&#13;&#10;&#13;&#10;* Update get.py to support Apple ARM64&#13;&#10;&#13;&#10;* Update package_esp32_index.template.json&#13;&#10;&#13;&#10;* WString Return bool (#7774)&#13;&#10;&#13;&#10;* Add Roboheart Hercules development board to the esp32-core (#7672)&#13;&#10;&#13;&#10;* added Roboheart Hercules pin definitions and board.txt entries&#13;&#10;&#13;&#10;* added package_roboheat.json for prototyping&#13;&#10;&#13;&#10;* Roboheart Hercules pins&#13;&#10;&#13;&#10;* Updated the pins&#13;&#10;&#13;&#10;* Delete package_roboheart.json&#13;&#10;&#13;&#10;* Requested changes&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: renebohne &lt;rene.bohne@gmail.com&gt;&#13;&#10;&#13;&#10;* Reword &quot;ESP-IDF as Component&quot; (#7812)&#13;&#10;&#13;&#10;I think &quot;Arduino as an ESP-IDF component&quot; or just &quot;As ESP-IDF component&quot; instead of  &quot;ESP-IDF as Component&quot; is more correct way to name the link.&#13;&#10;&#13;&#10;1. &quot;ESP-IDF as Component&quot; would imply that ESP-IDF is some sort of library for Arduino, which is (IMO) misleading, because it's true the other way around.&#13;&#10;2. It's written as &quot;Arduino as an ESP-IDF component&quot; on the webpage it points to as well.&#13;&#10;&#13;&#10;- Also I removed the capitalization from &quot;Component&quot; as I have not found a reason why is it capitalized.&#13;&#10;&#13;&#10;* add new board Adafruit Feather ESP32-S3 Reverse TFT (#7811)&#13;&#10;&#13;&#10;* Multi threading examples (tasks, queues, semaphores, mutexes) (#7660)&#13;&#10;&#13;&#10;* Moved and renamed example ESP32/FreeRTOS to MultiThreading/BasicMultiThreading&#13;&#10;&#13;&#10;* Added dummy files&#13;&#10;&#13;&#10;* Modified original example&#13;&#10;&#13;&#10;* Fixed BasicMultiThreading.ino&#13;&#10;&#13;&#10;* Added Example demonstrating use of queues&#13;&#10;&#13;&#10;* Extended info in BasicMultiThreading&#13;&#10;&#13;&#10;* Renamed Queues to singular Queue&#13;&#10;&#13;&#10;* Added Mutex example&#13;&#10;&#13;&#10;* Added Semaphore example&#13;&#10;&#13;&#10;* Moved info from example to README&#13;&#10;&#13;&#10;* Moved doc from Mutex to README&#13;&#10;&#13;&#10;* Added Queue README&#13;&#10;&#13;&#10;* Removed unecesary text&#13;&#10;&#13;&#10;* Fixed grammar&#13;&#10;&#13;&#10;* Increased stack size for Sempahore example&#13;&#10;&#13;&#10;* Added headers into .ino files&#13;&#10;&#13;&#10;* Added word Example at the end of title in README&#13;&#10;&#13;&#10;* removed unused line&#13;&#10;&#13;&#10;* Added forgotten README&#13;&#10;&#13;&#10;* Modified BasicMultiThreading example&#13;&#10;&#13;&#10;* Added missing S3 entry in README&#13;&#10;&#13;&#10;* moved location&#13;&#10;&#13;&#10;* Update ESP-IDF libs&#13;&#10;&#13;&#10;* Update CMakeLists.txt&#13;&#10;&#13;&#10;* Update esptool to v4.4&#13;&#10;&#13;&#10;* Add function timerAttachInterruptFlag (#7809)&#13;&#10;&#13;&#10;* Update esptool to v4.5&#13;&#10;&#13;&#10;* ADC refactoring (#7827)&#13;&#10;&#13;&#10;* Adc refactored + periman implementation&#13;&#10;&#13;&#10;Peripheral manager still needs to be checked if the implementation is right.&#13;&#10;&#13;&#10;* switched to working solution for milivolts read&#13;&#10;&#13;&#10;* Periman detachbus fix&#13;&#10;&#13;&#10;* coding style&#13;&#10;&#13;&#10;* fix CI warnings&#13;&#10;&#13;&#10;* fix FreeRTOS example&#13;&#10;&#13;&#10;* Update ETH.cpp&#13;&#10;&#13;&#10;* Update FunctionalInterruptStruct.ino&#13;&#10;&#13;&#10;* Update package_esp32_index.template.json&#13;&#10;&#13;&#10;* Update package_esp32_index.template.json&#13;&#10;&#13;&#10;* Fixes for the latest IDF v5.1&#13;&#10;&#13;&#10;* update esp-idf libs and toolchain&#13;&#10;&#13;&#10;* Turn OFF auto crystal frequency for ESP32 (needed by TWAI)&#13;&#10;&#13;&#10;* Update examples&#13;&#10;&#13;&#10;* Switch build to mostly use flags from files&#13;&#10;&#13;&#10;Includes can not be done this way&#13;&#10;&#13;&#10;* Reorganize flag files&#13;&#10;&#13;&#10;* Optimize chip build flags further&#13;&#10;&#13;&#10;* Revert defines from file. MBEDTLS_CONFIG_FILE does not properly expand&#13;&#10;&#13;&#10;* Add support for includes and defines from file&#13;&#10;&#13;&#10;* Replace old sdk path references in platform.txt&#13;&#10;&#13;&#10;* use gcc-ar (#8013)&#13;&#10;&#13;&#10;* Makes F_CPU generic for all SoC (#8007)&#13;&#10;&#13;&#10;Based on CONFIG_ESP_DEFAULT_CPU_FREQ_MHZ that is correctly defined in the sdkconfig file for each SoC.&#13;&#10;&#13;&#10;* TIMER refactoring (#7904)&#13;&#10;&#13;&#10;* refactor using GPtimer&#13;&#10;&#13;&#10;* Updated timer HW test&#13;&#10;&#13;&#10;* fix examples&#13;&#10;&#13;&#10;* Add v2.0.7 in issue template (#7871)&#13;&#10;&#13;&#10;* refactor using GPtimer&#13;&#10;&#13;&#10;* Updated timer HW test&#13;&#10;&#13;&#10;* fix examples&#13;&#10;&#13;&#10;* Revert &quot;Add v2.0.7 in issue template (#7871)&quot;&#13;&#10;&#13;&#10;This reverts commit fcc3b17d62ff57861f8913ca1f142fd5163b7457.&#13;&#10;&#13;&#10;* Update upload-artifact to v3 in HW CI&#13;&#10;&#13;&#10;* Revert &quot;Update upload-artifact to v3 in HW CI&quot;&#13;&#10;&#13;&#10;This reverts commit 1ba228071718ba37c4e26d98db22f77b2a7364a6.&#13;&#10;&#13;&#10;* replace resolution with frequency&#13;&#10;&#13;&#10;* remove count_down option&#13;&#10;&#13;&#10;* countup removed from examples + header&#13;&#10;&#13;&#10;* Refactored timer object&#13;&#10;&#13;&#10;* code cleanup + examples and tests fixes&#13;&#10;&#13;&#10;* TimerAlarm fix&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Vojtěch Bartoška &lt;76958047+VojtechBartoska@users.noreply.github.com&gt;&#13;&#10;&#13;&#10;* [Docs] ADC and Timer API Update (+some docs fixes) (#7906)&#13;&#10;&#13;&#10;* updated docs&#13;&#10;&#13;&#10;* remove hall sensor docs&#13;&#10;&#13;&#10;Removed Hall sensor documentation as its no longer supported in IDF-5&#13;&#10;&#13;&#10;* Fixed ESPNow examples location in docs&#13;&#10;&#13;&#10;* Last timer refactored API + gpio small fix&#13;&#10;&#13;&#10;* AlarmWrite fix&#13;&#10;&#13;&#10;* Fixes APLL/PLL with RTC Frequency (#8025)&#13;&#10;&#13;&#10;log_d() was displaying APLL for any SoC, but S3 and C3 has not such option, causing compilation errors.&#13;&#10;&#13;&#10;* Update IDF libs and fix OPI PSRAM on S3&#13;&#10;&#13;&#10;* Add setMode function HardwareSerial.c to set the esp32 uart mode for use with RS485 auto RTS (#7935)&#13;&#10;&#13;&#10;* Added setMode function to set the esp32 uart mode&#13;&#10;&#13;&#10;Used to set the esp32 uart mode for use with RS485 Half Duplex and the auto RTS pin mode. This will set/clear the RTS pin output to control the RE/DE pin on most RS485 chips.&#13;&#10;&#13;&#10;* Add Success (bool) return in some functions&#13;&#10;&#13;&#10;* Add Success (bool) return code to some functions&#13;&#10;&#13;&#10;* Add Success (bool) return to some functions&#13;&#10;&#13;&#10;* Add Success (bool) return to some functions&#13;&#10;&#13;&#10;* Fix uartSetRxTimeout return type&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Rodrigo Garcia &lt;rodrigo.garcia@espressif.com&gt;&#13;&#10;&#13;&#10;* Add support for esp-elf-gdb&#13;&#10;&#13;&#10;* WFG Crashfix (#8044)&#13;&#10;&#13;&#10;* Update component libs&#13;&#10;&#13;&#10;* IDF release/v5.1 (#8061)&#13;&#10;&#13;&#10;* IDF release/v5.1 bb9200acec&#13;&#10;&#13;&#10;* Update Esp.cpp&#13;&#10;&#13;&#10;* IDF release/v5.1 420ebd208a&#13;&#10;&#13;&#10;* Update esp32-hal-psram.c&#13;&#10;&#13;&#10;* Switch SDK to be an external package&#13;&#10;&#13;&#10;* fix path (#8096)&#13;&#10;&#13;&#10;* Makes UART work at any APB Frequency (#8097)&#13;&#10;&#13;&#10;Fixes HardwareSerial to work with IDF 5.1 on any CPU/APB Frequency (240MHz to 10MHZ), including user created low power modes.&#13;&#10;&#13;&#10;* Add required callbacks for TinyUSB DFU&#13;&#10;&#13;&#10;* Update version to 3.0.0&#13;&#10;&#13;&#10;* Add ESP.getCoreVersion() and update ESP.getChipModel()&#13;&#10;&#13;&#10;* Update timer hal for the latest 5.1&#13;&#10;&#13;&#10;* Use separate RX and TX buffer sizes in HTTP client&#13;&#10;&#13;&#10;optimizes download by allowing up to 4K packets to be received&#13;&#10;&#13;&#10;* Rename clock tree enum name in latest 5.1&#13;&#10;&#13;&#10;* ESP32-H4 support was removed in ESP-IDF v5.1&#13;&#10;&#13;&#10;* IDF release/v5.1 2004bf4e11 (#8165)&#13;&#10;&#13;&#10;* Deinit previous bus first (#8180)&#13;&#10;&#13;&#10;* TIMER - add timer_started flag, fix timerEnd() + timer HW test (#8135)&#13;&#10;&#13;&#10;* Add timer_started flag and stop before disable&#13;&#10;&#13;&#10;* Fix timer HW test&#13;&#10;&#13;&#10;* TOUCH - Peripheral manager implementation (#8129)&#13;&#10;&#13;&#10;* Touch periman implemented&#13;&#10;&#13;&#10;* Deinit previous bus first&#13;&#10;&#13;&#10;* LEDC Refactoring - Peripheral manager implemented (#8126)&#13;&#10;&#13;&#10;* LEDC periman implementation&#13;&#10;&#13;&#10;* Fix examples&#13;&#10;&#13;&#10;* Rework tone&#13;&#10;&#13;&#10;* Update ledc docs&#13;&#10;&#13;&#10;* fix missing bracket&#13;&#10;&#13;&#10;* Update analog funtions esp32-hal.h&#13;&#10;&#13;&#10;* Update CameraWebServer example&#13;&#10;&#13;&#10;* Fix HiFreq_ADC example&#13;&#10;&#13;&#10;* minor fixes - typos&#13;&#10;&#13;&#10;* Avoid calling tone/notone when tone already runs on dif. pin&#13;&#10;&#13;&#10;* Remove unused channels_resolution&#13;&#10;&#13;&#10;* GPIO - Peripheral manager implementation (#8179)&#13;&#10;&#13;&#10;* periman-implementation&#13;&#10;&#13;&#10;* fix RGB_BUILTIN and remove space&#13;&#10;&#13;&#10;* Enforces more consistency into Peripheral Manager (#8188)&#13;&#10;&#13;&#10;* Avoid log_i() message the first time a bus is assigned&#13;&#10;&#13;&#10;* Prevent operation with ESP32_BUS_TYPE_INIT&#13;&#10;&#13;&#10;* keeps coding style&#13;&#10;&#13;&#10;* do not print messages on INIT bus type&#13;&#10;&#13;&#10;* [Arduino Core 3.0.0] RMT IDF5.1 Refactoring (#7994)&#13;&#10;&#13;&#10;* RMT IDF5.1 refactoring&#13;&#10;&#13;&#10;* Fixes initial value setting&#13;&#10;&#13;&#10;* removed rmtRead() with user callback&#13;&#10;&#13;&#10;* simplify/remove Read data structure&#13;&#10;&#13;&#10;* Deep API simplification&#13;&#10;&#13;&#10;* fixes the examples&#13;&#10;&#13;&#10;* fix rmt.h&#13;&#10;&#13;&#10;* adds support to APB different frequencies&#13;&#10;&#13;&#10;* fixes CI and not defined RGB_BUILTIN&#13;&#10;&#13;&#10;* new RMT API and examples&#13;&#10;&#13;&#10;* fixing commentaties&#13;&#10;&#13;&#10;* Update esp32-hal-rgb-led.c&#13;&#10;&#13;&#10;* changes Filter API&#13;&#10;&#13;&#10;* Fixes example with Filter API&#13;&#10;&#13;&#10;* Update PlatformIO scripts for the upcoming 3.0 core (#8183)&#13;&#10;&#13;&#10;* Update PlatformIO scripts for the upcoming 3.0 core&#13;&#10;&#13;&#10;* Dynamically select proper framework-arduinoespressif32-libs package&#13;&#10;&#13;&#10;With this change the dev-platform will be dynamically configured to&#13;&#10;pull the latest .zip package with precompiled libraries from extracted from&#13;&#10;package_esp32_index.template.json&#13;&#10;&#13;&#10;* free memory on detach (#8264)&#13;&#10;&#13;&#10;* SPI - Peripheral manager implementation  (#8255)&#13;&#10;&#13;&#10;* spi periman implementation&#13;&#10;&#13;&#10;* fix header file&#13;&#10;&#13;&#10;* remove unused struct&#13;&#10;&#13;&#10;* fix missing braces&#13;&#10;&#13;&#10;* Update esp32-hal-rmt.c (#8216)&#13;&#10;&#13;&#10;Optimizing Peripheral Manager Test&#13;&#10;&#13;&#10;* I2C - Peripheral manager implementation (#8220)&#13;&#10;&#13;&#10;* i2c-master periman initial commit&#13;&#10;&#13;&#10;* i2c-master make detachbus static + comment remove&#13;&#10;&#13;&#10;* i2c-slave periman implementation&#13;&#10;&#13;&#10;* SetPinBus to INIT on i2cDeinits&#13;&#10;&#13;&#10;* Fix slave pins deinit&#13;&#10;&#13;&#10;* remove dbg logs&#13;&#10;&#13;&#10;* set ret to ESP_FAIL instead of returning&#13;&#10;&#13;&#10;* Fix warnings in hal-spi caused by pariman transition&#13;&#10;&#13;&#10;* Update esptool.py to version 4.6&#13;&#10;&#13;&#10;* Add platform support for ESP_SR&#13;&#10;&#13;&#10;* Add USB Type and valid pin check to periman&#13;&#10;&#13;&#10;* replace bus with spi-&gt;num+1 (#8279)&#13;&#10;&#13;&#10;* Remove default pins from SPI HAL&#13;&#10;&#13;&#10;* Add commented out handlers for esptool.js in TinyUSB CDC&#13;&#10;&#13;&#10;For future use&#13;&#10;&#13;&#10;* Add build defines for host os and fqbn (for debug purposes)&#13;&#10;&#13;&#10;* Provide proper memory caps total size&#13;&#10;&#13;&#10;* Update Esp.cpp&#13;&#10;&#13;&#10;* SDMMC - Peripheral manager implementation (#8289)&#13;&#10;&#13;&#10;* sdmmc periman implemented&#13;&#10;&#13;&#10;* save pins when SOC_SDMMC_USE_IOMUX&#13;&#10;&#13;&#10;* IDF release/v5.1 4bc762621d (#8292)&#13;&#10;&#13;&#10;* Adds missing pinMode (#8312)&#13;&#10;&#13;&#10;* Adds missing pinMode&#13;&#10;&#13;&#10;The example code lacks a pinMode() to initialize the GPIO 0 (button). In Arduino Core 3.0.0, it prints an error message when trying to read a not initialized GPIO.&#13;&#10;&#13;&#10;* Update KeyboardLogout.ino&#13;&#10;&#13;&#10;Adds &lt;buttonPin&gt; to keep code standard&#13;&#10;&#13;&#10;* Update KeyboardReprogram.ino&#13;&#10;&#13;&#10;Adds &lt;buttonPin&gt; to keep code standard&#13;&#10;&#13;&#10;* LEDC Fade implementation (#8338)&#13;&#10;&#13;&#10;* fade API + pointer fixes&#13;&#10;&#13;&#10;* Add fade api&#13;&#10;&#13;&#10;* Add fade example&#13;&#10;&#13;&#10;* update ledc docs&#13;&#10;&#13;&#10;* remove unused variables&#13;&#10;&#13;&#10;* fix path to example&#13;&#10;&#13;&#10;* Adds USB to Peripheral Manager - Arduino Core 3.0.0 (#8335)&#13;&#10;&#13;&#10;* ETHERNET - Peripheral manager implementation (#8297)&#13;&#10;&#13;&#10;* Peripheral manager implemented&#13;&#10;&#13;&#10;* remove unused variable&#13;&#10;&#13;&#10;* Add all RMII pins&#13;&#10;&#13;&#10;* fix typo&#13;&#10;&#13;&#10;* Adds HardwareSerial to Peripheral Manager Arduino 3.0.0 (#8328)&#13;&#10;&#13;&#10;* Do not limit ETHERNET in periman to only ESP32. SPI is also an option&#13;&#10;&#13;&#10;* Initial support for ESP32-C6 (#8337)&#13;&#10;&#13;&#10;* Add checks for SOC defines (#8351)&#13;&#10;&#13;&#10;* Add checks for SOC defines&#13;&#10;&#13;&#10;* Add SoC checks to BLE library&#13;&#10;&#13;&#10;* fix i2c compilation error&#13;&#10;&#13;&#10;* fix wrong placement of include&#13;&#10;&#13;&#10;* add check to SPI library&#13;&#10;&#13;&#10;* add check to USB library&#13;&#10;&#13;&#10;* add checks to Wire library&#13;&#10;&#13;&#10;* Feature/esp32h2 support (#8373)&#13;&#10;&#13;&#10;* Initial support for ESP32H2&#13;&#10;&#13;&#10;* Additional changes for ESP32H2&#13;&#10;&#13;&#10;* Update libs for ESP32H2&#13;&#10;&#13;&#10;* Fix flashing on ESP32-H2&#13;&#10;&#13;&#10;* Fix GPIO Configs for ESP32-C6 and ESP32-H2&#13;&#10;&#13;&#10;* Update Timer test sketch&#13;&#10;&#13;&#10;* Fix upload flash parameters&#13;&#10;&#13;&#10;* Use ets_write_char_uart instead of ets_printf in log_printfv&#13;&#10;&#13;&#10;* Print full chip report when log level is sufficient (#8282)&#13;&#10;&#13;&#10;* ESP32-C3 does not have ets_write_char_uart&#13;&#10;&#13;&#10;* Fix BLE gap event name&#13;&#10;&#13;&#10;* HW Testing - Pytest update (#8389)&#13;&#10;&#13;&#10;* update tests requirements&#13;&#10;&#13;&#10;* remove already handled components&#13;&#10;&#13;&#10;* Update version of pytest&#13;&#10;&#13;&#10;* Add missing ESP32-H2 to hil.yml&#13;&#10;&#13;&#10;* Updated FreeRTOS names (#8418)&#13;&#10;&#13;&#10;* HW Testing -  ESP32-C6 + ESP32-H2 fixes (#8404)&#13;&#10;&#13;&#10;* add C6/H2 to tests cfg.json&#13;&#10;&#13;&#10;* remove ,&#13;&#10;&#13;&#10;* workflow runs-on runner by matrix&#13;&#10;&#13;&#10;* Add need for arduino tag to select runner&#13;&#10;&#13;&#10;* Add cryptography to requirements.txt&#13;&#10;&#13;&#10;* Removed duplicate TX1 define for H2 (#8402)&#13;&#10;&#13;&#10;* Fix broken examples&#13;&#10;&#13;&#10;* Fixes RMT filter &amp; idle timing and setup (#8359)&#13;&#10;&#13;&#10;* Fixes Filter and Idle parameter to uint32&#13;&#10;&#13;&#10;* Fixes Filter and Idle setup&#13;&#10;&#13;&#10;* Fixes it to 5.1Libs branch&#13;&#10;&#13;&#10;* fix RMT CLK source and Filter API&#13;&#10;&#13;&#10;* fixes missing ;&#13;&#10;&#13;&#10;* fixes missing ;&#13;&#10;&#13;&#10;* fixes RMT example&#13;&#10;&#13;&#10;* IDF release/v5.1 a7b62bbcaf (#8438)&#13;&#10;&#13;&#10;* Add workflow to build executables from python scripts (#8290)&#13;&#10;&#13;&#10;* Add workflow to build executables from python scripts&#13;&#10;&#13;&#10;* Push binary to tools&#13;&#10;&#13;&#10;* Enable executable signing on Windows&#13;&#10;&#13;&#10;* Update get.py&#13;&#10;&#13;&#10;* Push binary to tools&#13;&#10;&#13;&#10;* Try with multiple files&#13;&#10;&#13;&#10;* Try more actions&#13;&#10;&#13;&#10;* Try powershell&#13;&#10;&#13;&#10;* Restore tools so they do not get rebuilt&#13;&#10;&#13;&#10;* Finalize scripts&#13;&#10;&#13;&#10;* Push binary to tools&#13;&#10;&#13;&#10;* App rollback should be after PSRAM is initialized&#13;&#10;&#13;&#10;* Correcting RX1 to GPIO4 and TX1 to GPIO5 to be consistent with documentation. Previous pin use works but is inconsistent with C6 docs.&#13;&#10;&#13;&#10;* Fixes Memory Leak (#8486)&#13;&#10;&#13;&#10;* fixes preprocessor test (#8485)&#13;&#10;&#13;&#10;* fixes preprocessor test&#13;&#10;&#13;&#10;When using `#define USE_SOFT_AP` &#13;&#10;Change&#13;&#10;`&amp;&amp; not USE_SOFT_AP` ==&gt; `&amp;&amp; !defined(USE_SOFT_AP)`&#13;&#10;&#13;&#10;* Adds any BLE capable device in WiFiProv.ino&#13;&#10;&#13;&#10;Removing ESP32 restriction for BLE Provisioning.&#13;&#10;&#13;&#10;* fix flash mode read out for C6&#13;&#10;&#13;&#10;* Add option for custom partitions without restrictions&#13;&#10;&#13;&#10;* SD_MMC update (#8298)&#13;&#10;&#13;&#10;* Updated SD_MMC lib and examples&#13;&#10;&#13;&#10;* Removed getter implementation and commented usage in examples&#13;&#10;&#13;&#10;* squashed updates&#13;&#10;&#13;&#10;* IDF release/v5.1 f0437b945f (#8599)&#13;&#10;&#13;&#10;* Update package_esp32_index.template.json&#13;&#10;&#13;&#10;* Fix printf format build error in BTAdvertisedDeviceSet.cpp&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Pedro Minatel &lt;pedro.minatel@espressif.com&gt;&#13;&#10;Co-authored-by: Rodrigo Garcia &lt;rodrigo.garcia@espressif.com&gt;&#13;&#10;Co-authored-by: Ha Thach &lt;thach@tinyusb.org&gt;&#13;&#10;Co-authored-by: Martin Turski &lt;quiret@vfemail.net&gt;&#13;&#10;Co-authored-by: raviypujar &lt;raviypujar@gmail.com&gt;&#13;&#10;Co-authored-by: Jason2866 &lt;24528715+Jason2866@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: Tomáš Pilný &lt;34927466+PilnyTomas@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: Jan Procházka &lt;90197375+P-R-O-C-H-Y@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: Daniel Berlin &lt;dberlin@dberlin.org&gt;&#13;&#10;Co-authored-by: Nima Askari (نیما عسکری) &lt;nimaltd@yahoo.com&gt;&#13;&#10;Co-authored-by: rtpmsys &lt;106180646+rtpmsys@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: bytiful &lt;55647551+bytiful@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: tmfarrington &lt;tmfarrington@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: Krzysiek S &lt;chris.streh@gmail.com&gt;&#13;&#10;Co-authored-by: surt &lt;carl.olsson@gmail.com&gt;&#13;&#10;Co-authored-by: Max Scheffler &lt;max.scheffler@pm.me&gt;&#13;&#10;Co-authored-by: Clemens Kirchgatterer &lt;clemens@1541.org&gt;&#13;&#10;Co-authored-by: Peter Pan's Techland &lt;twinkle-pirate@hotmail.com&gt;&#13;&#10;Co-authored-by: Roman &lt;programmeofficemilkyway@gmail.com&gt;&#13;&#10;Co-authored-by: Eistee &lt;Eistee82@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: David McCurley &lt;44048235+mrengineer7777@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: Gaya3N25 &lt;30388176+Gaya3N25@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: renebohne &lt;rene.bohne@gmail.com&gt;&#13;&#10;Co-authored-by: Olivér Remény &lt;25034625+remenyo@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: davidk88 &lt;david.kotar@gmail.com&gt;&#13;&#10;Co-authored-by: Vojtěch Bartoška &lt;76958047+VojtechBartoska@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: James Armstrong &lt;jamesarmstrong3@me.com&gt;&#13;&#10;Co-authored-by: Valerii Koval &lt;valeros@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: Peter G. Jensen &lt;root@petergjoel.dk&gt;" />
			<int key="additions" value="5" />
			<int key="deletions" value="1" />
			<string key="diff" value='@@ -7,6 +7,9 @@&#10; &#10; // A service is identified by a UUID.  A service is also the container for one or more characteristics.&#10; &#10;+#include "soc/soc_caps.h"&#10;+#if SOC_BLE_SUPPORTED&#10;+&#10; #include "sdkconfig.h"&#10; #if defined(CONFIG_BLUEDROID_ENABLED)&#10; #include &lt;esp_err.h&gt;&#10;@@ -410,4 +413,5 @@ BLEServer* BLEService::getServer() {&#10; &#9;return m_pServer;&#10; } // getServer&#10; &#10;-#endif // CONFIG_BLUEDROID_ENABLED&#10;+#endif /* CONFIG_BLUEDROID_ENABLED */&#10;+#endif /* SOC_BLE_SUPPORTED */&#10;' />
			<string key="comment_change" value="False" />
		</event>
	</trace>
	<trace>
		<string key="file" value="BLEService.h" />
	</trace>
	<trace>
		<string key="file" value="BLEServiceMap.cpp" />
	</trace>
	<trace>
		<string key="file" value="BLEUUID.cpp" />
		<event>
			<string key="timestamp" value="2023-10-06T15:50:11+03:00" />
			<string key="author" value="Me No Dev" />
			<string key="change_type" value="MODIFY" />
			<string key="commit_message" value="BLE upgrades (#8724)&#10;&#10;* Renamed library description&#13;&#10;&#13;&#10;* Updated Eddystone URL (not complete)&#13;&#10;&#13;&#10;* Updated Eddystone URL&#13;&#10;&#13;&#10;* Updated Eddystone classes and beacon scanner&#13;&#10;&#13;&#10;* Renamed examples - removing prefix BLE_&#13;&#10;&#13;&#10;* Renamed Beacon_Scanner&#13;&#10;&#13;&#10;* Updated TLM&#13;&#10;&#13;&#10;* Changed std::string to Arduino String&#13;&#10;&#13;&#10;* More std::string -&gt; String&#13;&#10;&#13;&#10;* Changed String in forgotten file&#13;&#10;&#13;&#10;* Changed .data to .c_str&#13;&#10;&#13;&#10;* Reverting single String type change&#13;&#10;&#13;&#10;* Few more fixes related to the String transition&#13;&#10;&#13;&#10;* Fixed URL and Utils error&#13;&#10;&#13;&#10;* Added and modified compatibility safeguards for BLE5 examples&#13;&#10;&#13;&#10;* Added #include WString.h&#13;&#10;&#13;&#10;* Fixed Beacon_Scanner&#13;&#10;&#13;&#10;* Remove commented include&#13;&#10;&#13;&#10;Co-authored-by: Lucas Saavedra Vaz &lt;lucassvaz@yahoo.com.br&gt;&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Tomas Pilny &lt;tomas.pilny@espressif.com&gt;&#13;&#10;Co-authored-by: Lucas Saavedra Vaz &lt;lucassvaz@yahoo.com.br&gt;" />
			<int key="additions" value="18" />
			<int key="deletions" value="11" />
			<string key="diff" value='@@ -66,7 +66,8 @@ static void memrcpy(uint8_t* target, uint8_t* source, uint32_t size) {&#10;  *&#10;  * @param [in] value The string to build a UUID from.&#10;  */&#10;-BLEUUID::BLEUUID(std::string value) {&#10;+BLEUUID::BLEUUID(String value) {&#10;+&#9;//Serial.printf("BLEUUID constructor from String=\"%s\"\n", value.c_str());&#10; &#9;m_valueSet = true;&#10; &#9;if (value.length() == 4) {&#10; &#9;&#9;m_uuid.len         = ESP_UUID_LEN_16;&#10;@@ -94,11 +95,12 @@ BLEUUID::BLEUUID(std::string value) {&#10; &#9;&#9;&#9;i+=2;&#10; &#9;&#9;}&#9;&#9;&#10; &#9;}&#10;-&#9;else if (value.length() == 16) {  // how we can have 16 byte length string reprezenting 128 bit uuid??? needs to be investigated (lack of time)&#10;+&#9;else if (value.length() == 16) {  // How we can have 16 byte length string representing 128 bit uuid??? needs to be investigated (lack of time) - maybe raw data encoded as String (128b==16B)?&#10; &#9;&#9;m_uuid.len = ESP_UUID_LEN_128;&#10;-&#9;&#9;memrcpy(m_uuid.uuid.uuid128, (uint8_t*)value.data(), 16);&#10;+&#9;&#9;memrcpy(m_uuid.uuid.uuid128, (uint8_t*)value.c_str(), 16);&#10; &#9;}&#10; &#9;else if (value.length() == 36) {&#10;+&#9;&#9;//log_d("36 characters:");&#10; &#9;&#9;// If the length of the string is 36 bytes then we will assume it is a long hex string in&#10; &#9;&#9;// UUID format.&#10; &#9;&#9;m_uuid.len = ESP_UUID_LEN_128;&#10;@@ -119,8 +121,13 @@ BLEUUID::BLEUUID(std::string value) {&#10; &#9;&#9;log_e("ERROR: UUID value not 2, 4, 16 or 36 bytes");&#10; &#9;&#9;m_valueSet = false;&#10; &#9;}&#10;-} //BLEUUID(std::string)&#10;+} //BLEUUID(String)&#10; &#10;+/*&#10;+BLEUUID::BLEUUID(String value) {&#10;+&#9;this.BLEUUID(String(value.c_str(), value.length()));&#10;+} //BLEUUID(String)&#10;+*/&#10; &#10; /**&#10;  * @brief Create a UUID from 16 bytes of memory.&#10;@@ -248,7 +255,7 @@ bool BLEUUID::equals(BLEUUID uuid) {&#10;  * NNNNNNNN&#10;  * &lt;UUID&gt;&#10;  */&#10;-BLEUUID BLEUUID::fromString(std::string _uuid) {&#10;+BLEUUID BLEUUID::fromString(String _uuid) {&#10; &#9;uint8_t start = 0;&#10; &#9;if (strstr(_uuid.c_str(), "0x") != nullptr) { // If the string starts with 0x, skip those characters.&#10; &#9;&#9;start = 2;&#10;@@ -256,10 +263,10 @@ BLEUUID BLEUUID::fromString(std::string _uuid) {&#10; &#9;uint8_t len = _uuid.length() - start; // Calculate the length of the string we are going to use.&#10; &#10; &#9;if(len == 4) {&#10;-&#9;&#9;uint16_t x = strtoul(_uuid.substr(start, len).c_str(), NULL, 16);&#10;+&#9;&#9;uint16_t x = strtoul(_uuid.substring(start, start+len).c_str(), NULL, 16);&#10; &#9;&#9;return BLEUUID(x);&#10; &#9;} else if (len == 8) {&#10;-&#9;&#9;uint32_t x = strtoul(_uuid.substr(start, len).c_str(), NULL, 16);&#10;+&#9;&#9;uint32_t x = strtoul(_uuid.substring(start, start+len).c_str(), NULL, 16);&#10; &#9;&#9;return BLEUUID(x);&#10; &#9;} else if (len == 36) {&#10; &#9;&#9;return BLEUUID(_uuid);&#10;@@ -350,20 +357,20 @@ BLEUUID BLEUUID::to128() {&#10;  *&#10;  * @return A string representation of the UUID.&#10;  */&#10;-std::string BLEUUID::toString() {&#10;+String BLEUUID::toString() {&#10; &#9;if (!m_valueSet) return "&lt;NULL&gt;";   // If we have no value, nothing to format.&#10; &#9;// If the UUIDs are 16 or 32 bit, pad correctly.&#10; &#10; &#9;if (m_uuid.len == ESP_UUID_LEN_16) {  // If the UUID is 16bit, pad correctly.&#10; &#9;&#9;char hex[9];&#10; &#9;&#9;snprintf(hex, sizeof(hex), "%08x", m_uuid.uuid.uuid16);&#10;-&#9;&#9;return std::string(hex) + "-0000-1000-8000-00805f9b34fb";&#10;+&#9;&#9;return String(hex) + "-0000-1000-8000-00805f9b34fb";&#10; &#9;} // End 16bit UUID&#10; &#10; &#9;if (m_uuid.len == ESP_UUID_LEN_32) {  // If the UUID is 32bit, pad correctly.&#10; &#9;&#9;char hex[9];&#10; &#9;&#9;snprintf(hex, sizeof(hex), "%08lx", m_uuid.uuid.uuid32);&#10;-&#9;&#9;return std::string(hex) + "-0000-1000-8000-00805f9b34fb";&#10;+&#9;&#9;return String(hex) + "-0000-1000-8000-00805f9b34fb";&#10; &#9;} // End 32bit UUID&#10; &#10; &#9;// The UUID is not 16bit or 32bit which means that it is 128bit.&#10;@@ -381,7 +388,7 @@ std::string BLEUUID::toString() {&#10; &#9;&#9;&#9;m_uuid.uuid.uuid128[5], m_uuid.uuid.uuid128[4],&#10; &#9;&#9;&#9;m_uuid.uuid.uuid128[3], m_uuid.uuid.uuid128[2],&#10; &#9;&#9;&#9;m_uuid.uuid.uuid128[1], m_uuid.uuid.uuid128[0]);&#10;-&#9;std::string res(hex);&#10;+&#9;String res(hex);&#10; &#9;free(hex);&#10; &#9;return res;&#10; } // toString&#10;' />
			<string key="comment_change" value="True" />
		</event>
	</trace>
	<trace>
		<string key="file" value="BLEUUID.h" />
	</trace>
	<trace>
		<string key="file" value="BLEUtils.cpp" />
		<event>
			<string key="timestamp" value="2023-10-05T14:54:25+03:00" />
			<string key="author" value="Me No Dev" />
			<string key="change_type" value="MODIFY" />
			<string key="commit_message" value="ESP-IDF v5.1 (#7733)&#10;&#10;* Initial changes to compile under ESP-IDF v5.1&#13;&#10;&#13;&#10;* Initial import for ESP-IDF v5.1 libs&#13;&#10;&#13;&#10;* Update toolchain&#13;&#10;&#13;&#10;* Update esp32-hal-psram.c&#13;&#10;&#13;&#10;* Add missing LDs&#13;&#10;&#13;&#10;* Update platform.txt&#13;&#10;&#13;&#10;* Stop some CI jobs, because they will always fail&#13;&#10;&#13;&#10;* Fix examples&#13;&#10;&#13;&#10;* Update app_httpd.cpp&#13;&#10;&#13;&#10;* Update ResetReason.ino&#13;&#10;&#13;&#10;* Warnings fixes&#13;&#10;&#13;&#10;* Added the example guideline and template (#7665)&#13;&#10;&#13;&#10;* Added the example guideline and template&#13;&#10;&#13;&#10;* PR review changes with some typos and grammar fixes&#13;&#10;&#13;&#10;* Changes according to the PR review&#13;&#10;&#13;&#10;* Added ESP32-S3 link to the datasheet (#7738)&#13;&#10;&#13;&#10;* Update HiFreq_ADC.ino&#13;&#10;&#13;&#10;* Replace periph_ctrl.h use because of deprecation&#13;&#10;&#13;&#10;* Replace esp_spi_flash.h use because of deprecation&#13;&#10;&#13;&#10;* Add includes to male mDNS::enableWorkstation compile&#13;&#10;&#13;&#10;* Fix ssl_client mbedtls_pk_parse_key callback&#13;&#10;&#13;&#10;* Update temperature sensor driver&#13;&#10;&#13;&#10;* Allow sketch_utils to compile with arduino-cli&#13;&#10;&#13;&#10;* Run CI with arduino-cli&#13;&#10;&#13;&#10;* Fix arduino-cli CI build on Windows&#13;&#10;&#13;&#10;* Refactor platform.txt to not use components installed through the board manager when running from git&#13;&#10;&#13;&#10;* Initial Peripheral Manager Implementation&#13;&#10;&#13;&#10;* Update SigmaDelta driver to use the new ESP-IDF driver API&#13;&#10;&#13;&#10;* Small improvements to peripheral manager and SigmaDelta&#13;&#10;&#13;&#10;* Remove deleted function from SigmaDelta header&#13;&#10;&#13;&#10;* Update DAC driver to use the new ESP-IDF driver API&#13;&#10;&#13;&#10;* Adds softAp(String) to make it compatible with ESP8266 (#7801)&#13;&#10;&#13;&#10;* Fix commentary (#7800)&#13;&#10;&#13;&#10;Minor fix based on observation done in https://github.com/espressif/arduino-esp32/issues/7795#issuecomment-1416868611&#13;&#10;&#13;&#10;* add adafruit new board feather esp32s2 reserve tft (#7794)&#13;&#10;&#13;&#10;* bugfix: add &lt;stdint.h&gt; for uint8_t to avoid compilation failure (GCC 11.2.0) (#7744)&#13;&#10;&#13;&#10;* Adding 3rd party boards for VALTRACK-V4-VTS-ESP32-C3 &amp; VALTRACK-V4-MFW-ESP32-C3 (#7735)&#13;&#10;&#13;&#10;* Added VALTRACK-V4-VTS-ESP32-C3 board definition&#13;&#10;&#13;&#10;Created pins_arduino.h &amp; made changes to boards.txt with necessary changes&#13;&#10;&#13;&#10;* Modified the URL&#13;&#10;&#13;&#10;* Renamed json&#13;&#10;&#13;&#10;* renamed all auRL&#13;&#10;&#13;&#10;* Adding VALTRACK-V4 series board definitions&#13;&#10;&#13;&#10;Added VALTRACK-V4-VTS-ESP32C3 &amp; VALTRACK-V4-MFW-ESP32-C3 board variants&#13;&#10;&#13;&#10;* Adding VALTRACK-V4 series board definitions&#13;&#10;&#13;&#10;Added VALTRACK-V4-VTS-ESP32C3 &amp; VALTRACK-V4-MFW-ESP32-C3 board variants&#13;&#10;&#13;&#10;* Reverted package_esp32_index.template.json&#13;&#10;&#13;&#10;restored package_esp32_index.template.json from edits&#13;&#10;&#13;&#10;* Reverted package_esp32_index.template.json&#13;&#10;&#13;&#10;Added new line to package_esp32_index.template.json&#13;&#10;&#13;&#10;* Update Platformio CI (#7725)&#13;&#10;&#13;&#10;* WiFiClient example fix (#7711)&#13;&#10;&#13;&#10;* Modified WiFiClient example to use thingspeak instead of non-functionig sparkfun&#13;&#10;&#13;&#10;* Moved instructions to README&#13;&#10;&#13;&#10;* Fixed spelling&#13;&#10;&#13;&#10;* Added link to S3 datasheet&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Jan Procházka &lt;90197375+P-R-O-C-H-Y@users.noreply.github.com&gt;&#13;&#10;&#13;&#10;* Mirror update from Heltec repository (#7709)&#13;&#10;&#13;&#10;Heltec updated the I2C pins in https://github.com/Heltec-Aaron-Lee/WiFi_Kit_series/commit/b10f4bf85d13fd01be80dcdb0eb59e6a8c8ba19a&#13;&#10;&#13;&#10;* Fixes BLE data printing (#7699)&#13;&#10;&#13;&#10;* Fixes BLE data printing&#13;&#10;&#13;&#10;BLE data has no '\0' terminator, therefore it can't be printed as a regular C string.&#13;&#10;This fix just prints the BLE data based on its length.&#13;&#10;&#13;&#10;* Simplify printing to a single call&#13;&#10;&#13;&#10;* split menu options + lora_32_V3 fix (#7697)&#13;&#10;&#13;&#10;* Change header gaurd name (#7696)&#13;&#10;&#13;&#10;* Fix Name (#7691)&#13;&#10;&#13;&#10;Wrong name in definitions.&#13;&#10;&#13;&#10;* Fix error in WiFiClient.cpp where the connect function fails for timeouts below 1 second (#7686)&#13;&#10;&#13;&#10;* Update WiFiClient.cpp&#13;&#10;&#13;&#10;This change will allow specifying connect timeouts below 1 second. Without this change, if connect timeouts under 1 second are given, the connect defaults to 0ms and fails. &#13;&#10;This will also allow timeouts in fractions of seconds, e.g. 1500ms. Without this change, connect timeouts are truncated to full second increments.&#13;&#10;&#13;&#10;* Make parameter timeout_ms clear&#13;&#10;&#13;&#10;* Change connection timeout_ms name for clarity&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Rodrigo Garcia &lt;rodrigo.garcia@espressif.com&gt;&#13;&#10;&#13;&#10;* fixed the function header (#7674)&#13;&#10;&#13;&#10;* fixed the function header&#13;&#10;&#13;&#10;* fixed function name and paramaters&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Jan Procházka &lt;90197375+P-R-O-C-H-Y@users.noreply.github.com&gt;&#13;&#10;&#13;&#10;* Ticker fix solving #6155 (#7664)&#13;&#10;&#13;&#10;* Wrapped Ticker functions with #pragma disabling -Wcast-function-type&#13;&#10;&#13;&#10;* Revert &quot;Wrapped Ticker functions with #pragma disabling -Wcast-function-type&quot;&#13;&#10;&#13;&#10;This reverts commit 160be7e67a10d01b6e44c4bf2521c0ccd6348976.&#13;&#10;&#13;&#10;* Fixed Ticker example&#13;&#10;&#13;&#10;* Modified Ticker example&#13;&#10;&#13;&#10;* Fixed LED_BUILTIN err for ESP32&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Jan Procházka &lt;90197375+P-R-O-C-H-Y@users.noreply.github.com&gt;&#13;&#10;&#13;&#10;* setPins fix ESP32 &quot;specified pins are not supported by this chip.&quot; (#7646)&#13;&#10;&#13;&#10;[ESP32: SDMMCFS::begin hardcodes the usage of slot 1, only check if the pins match slot 1 pins.]&#13;&#10;&#13;&#10;setPins() was testing pins D1, D2 and D3 all against D1 ... fine in 1 pin mode when all are -1 not so much if you're trying to get 4 pin mode working.&#13;&#10;I now see this function doesn't really do anything on the ESP32...accept now correctly checks that you are trying to use the slot 1 pins.&#13;&#10;&#13;&#10;Co-authored-by: Jan Procházka &lt;90197375+P-R-O-C-H-Y@users.noreply.github.com&gt;&#13;&#10;&#13;&#10;* Allow passing IP as connect method parameter in WiFiClientSecure and skip unnecessary host-ip conversions (#7643)&#13;&#10;&#13;&#10;* Add LED_BUILTIN* definitions and initialization for LEDs to stop them floating. (#7636)&#13;&#10;&#13;&#10;Co-authored-by: Rodrigo Garcia &lt;rodrigo.garcia@espressif.com&gt;&#13;&#10;&#13;&#10;* Expand path to tinuf2 image when checking existence in platformio-build.py (#7631)&#13;&#10;&#13;&#10;* Expand path to tinuf2 image when checking existence&#13;&#10;&#13;&#10;* More isFiles fixed&#13;&#10;&#13;&#10;* Remove (useless) trailing semicolon from Print.cpp (#7622)&#13;&#10;&#13;&#10;* ADD: New variant Edgebox-ESP-100 (#7771)&#13;&#10;&#13;&#10;* ADD: New variant Edgebox-ESP-100&#13;&#10;&#13;&#10;* FIX: Edgebox-ESP-100 Board.txt usb mode option change back to default value as ESP32S3&#13;&#10;&#13;&#10;* Add Crabik Slot ESP32-S3 board (#7790)&#13;&#10;&#13;&#10;* Added Crabik Slot ESP32-S3&#13;&#10;&#13;&#10;* Adding CPU frequency settings and removing excess from partition scheme settings&#13;&#10;&#13;&#10;* new variant LilyGO T-Display-S3 (#7763)&#13;&#10;&#13;&#10;* new variant LilyGO T-Display-S3&#13;&#10;&#13;&#10;https://github.com/Xinyuan-LilyGO/T-Display-S3&#13;&#10;&#13;&#10;* Add boards.txt definition&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Me No Dev &lt;me-no-dev@users.noreply.github.com&gt;&#13;&#10;&#13;&#10;* Update get.py to support Apple ARM64&#13;&#10;&#13;&#10;* Update package_esp32_index.template.json&#13;&#10;&#13;&#10;* WString Return bool (#7774)&#13;&#10;&#13;&#10;* Add Roboheart Hercules development board to the esp32-core (#7672)&#13;&#10;&#13;&#10;* added Roboheart Hercules pin definitions and board.txt entries&#13;&#10;&#13;&#10;* added package_roboheat.json for prototyping&#13;&#10;&#13;&#10;* Roboheart Hercules pins&#13;&#10;&#13;&#10;* Updated the pins&#13;&#10;&#13;&#10;* Delete package_roboheart.json&#13;&#10;&#13;&#10;* Requested changes&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: renebohne &lt;rene.bohne@gmail.com&gt;&#13;&#10;&#13;&#10;* Reword &quot;ESP-IDF as Component&quot; (#7812)&#13;&#10;&#13;&#10;I think &quot;Arduino as an ESP-IDF component&quot; or just &quot;As ESP-IDF component&quot; instead of  &quot;ESP-IDF as Component&quot; is more correct way to name the link.&#13;&#10;&#13;&#10;1. &quot;ESP-IDF as Component&quot; would imply that ESP-IDF is some sort of library for Arduino, which is (IMO) misleading, because it's true the other way around.&#13;&#10;2. It's written as &quot;Arduino as an ESP-IDF component&quot; on the webpage it points to as well.&#13;&#10;&#13;&#10;- Also I removed the capitalization from &quot;Component&quot; as I have not found a reason why is it capitalized.&#13;&#10;&#13;&#10;* add new board Adafruit Feather ESP32-S3 Reverse TFT (#7811)&#13;&#10;&#13;&#10;* Multi threading examples (tasks, queues, semaphores, mutexes) (#7660)&#13;&#10;&#13;&#10;* Moved and renamed example ESP32/FreeRTOS to MultiThreading/BasicMultiThreading&#13;&#10;&#13;&#10;* Added dummy files&#13;&#10;&#13;&#10;* Modified original example&#13;&#10;&#13;&#10;* Fixed BasicMultiThreading.ino&#13;&#10;&#13;&#10;* Added Example demonstrating use of queues&#13;&#10;&#13;&#10;* Extended info in BasicMultiThreading&#13;&#10;&#13;&#10;* Renamed Queues to singular Queue&#13;&#10;&#13;&#10;* Added Mutex example&#13;&#10;&#13;&#10;* Added Semaphore example&#13;&#10;&#13;&#10;* Moved info from example to README&#13;&#10;&#13;&#10;* Moved doc from Mutex to README&#13;&#10;&#13;&#10;* Added Queue README&#13;&#10;&#13;&#10;* Removed unecesary text&#13;&#10;&#13;&#10;* Fixed grammar&#13;&#10;&#13;&#10;* Increased stack size for Sempahore example&#13;&#10;&#13;&#10;* Added headers into .ino files&#13;&#10;&#13;&#10;* Added word Example at the end of title in README&#13;&#10;&#13;&#10;* removed unused line&#13;&#10;&#13;&#10;* Added forgotten README&#13;&#10;&#13;&#10;* Modified BasicMultiThreading example&#13;&#10;&#13;&#10;* Added missing S3 entry in README&#13;&#10;&#13;&#10;* moved location&#13;&#10;&#13;&#10;* Update ESP-IDF libs&#13;&#10;&#13;&#10;* Update CMakeLists.txt&#13;&#10;&#13;&#10;* Update esptool to v4.4&#13;&#10;&#13;&#10;* Add function timerAttachInterruptFlag (#7809)&#13;&#10;&#13;&#10;* Update esptool to v4.5&#13;&#10;&#13;&#10;* ADC refactoring (#7827)&#13;&#10;&#13;&#10;* Adc refactored + periman implementation&#13;&#10;&#13;&#10;Peripheral manager still needs to be checked if the implementation is right.&#13;&#10;&#13;&#10;* switched to working solution for milivolts read&#13;&#10;&#13;&#10;* Periman detachbus fix&#13;&#10;&#13;&#10;* coding style&#13;&#10;&#13;&#10;* fix CI warnings&#13;&#10;&#13;&#10;* fix FreeRTOS example&#13;&#10;&#13;&#10;* Update ETH.cpp&#13;&#10;&#13;&#10;* Update FunctionalInterruptStruct.ino&#13;&#10;&#13;&#10;* Update package_esp32_index.template.json&#13;&#10;&#13;&#10;* Update package_esp32_index.template.json&#13;&#10;&#13;&#10;* Fixes for the latest IDF v5.1&#13;&#10;&#13;&#10;* update esp-idf libs and toolchain&#13;&#10;&#13;&#10;* Turn OFF auto crystal frequency for ESP32 (needed by TWAI)&#13;&#10;&#13;&#10;* Update examples&#13;&#10;&#13;&#10;* Switch build to mostly use flags from files&#13;&#10;&#13;&#10;Includes can not be done this way&#13;&#10;&#13;&#10;* Reorganize flag files&#13;&#10;&#13;&#10;* Optimize chip build flags further&#13;&#10;&#13;&#10;* Revert defines from file. MBEDTLS_CONFIG_FILE does not properly expand&#13;&#10;&#13;&#10;* Add support for includes and defines from file&#13;&#10;&#13;&#10;* Replace old sdk path references in platform.txt&#13;&#10;&#13;&#10;* use gcc-ar (#8013)&#13;&#10;&#13;&#10;* Makes F_CPU generic for all SoC (#8007)&#13;&#10;&#13;&#10;Based on CONFIG_ESP_DEFAULT_CPU_FREQ_MHZ that is correctly defined in the sdkconfig file for each SoC.&#13;&#10;&#13;&#10;* TIMER refactoring (#7904)&#13;&#10;&#13;&#10;* refactor using GPtimer&#13;&#10;&#13;&#10;* Updated timer HW test&#13;&#10;&#13;&#10;* fix examples&#13;&#10;&#13;&#10;* Add v2.0.7 in issue template (#7871)&#13;&#10;&#13;&#10;* refactor using GPtimer&#13;&#10;&#13;&#10;* Updated timer HW test&#13;&#10;&#13;&#10;* fix examples&#13;&#10;&#13;&#10;* Revert &quot;Add v2.0.7 in issue template (#7871)&quot;&#13;&#10;&#13;&#10;This reverts commit fcc3b17d62ff57861f8913ca1f142fd5163b7457.&#13;&#10;&#13;&#10;* Update upload-artifact to v3 in HW CI&#13;&#10;&#13;&#10;* Revert &quot;Update upload-artifact to v3 in HW CI&quot;&#13;&#10;&#13;&#10;This reverts commit 1ba228071718ba37c4e26d98db22f77b2a7364a6.&#13;&#10;&#13;&#10;* replace resolution with frequency&#13;&#10;&#13;&#10;* remove count_down option&#13;&#10;&#13;&#10;* countup removed from examples + header&#13;&#10;&#13;&#10;* Refactored timer object&#13;&#10;&#13;&#10;* code cleanup + examples and tests fixes&#13;&#10;&#13;&#10;* TimerAlarm fix&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Vojtěch Bartoška &lt;76958047+VojtechBartoska@users.noreply.github.com&gt;&#13;&#10;&#13;&#10;* [Docs] ADC and Timer API Update (+some docs fixes) (#7906)&#13;&#10;&#13;&#10;* updated docs&#13;&#10;&#13;&#10;* remove hall sensor docs&#13;&#10;&#13;&#10;Removed Hall sensor documentation as its no longer supported in IDF-5&#13;&#10;&#13;&#10;* Fixed ESPNow examples location in docs&#13;&#10;&#13;&#10;* Last timer refactored API + gpio small fix&#13;&#10;&#13;&#10;* AlarmWrite fix&#13;&#10;&#13;&#10;* Fixes APLL/PLL with RTC Frequency (#8025)&#13;&#10;&#13;&#10;log_d() was displaying APLL for any SoC, but S3 and C3 has not such option, causing compilation errors.&#13;&#10;&#13;&#10;* Update IDF libs and fix OPI PSRAM on S3&#13;&#10;&#13;&#10;* Add setMode function HardwareSerial.c to set the esp32 uart mode for use with RS485 auto RTS (#7935)&#13;&#10;&#13;&#10;* Added setMode function to set the esp32 uart mode&#13;&#10;&#13;&#10;Used to set the esp32 uart mode for use with RS485 Half Duplex and the auto RTS pin mode. This will set/clear the RTS pin output to control the RE/DE pin on most RS485 chips.&#13;&#10;&#13;&#10;* Add Success (bool) return in some functions&#13;&#10;&#13;&#10;* Add Success (bool) return code to some functions&#13;&#10;&#13;&#10;* Add Success (bool) return to some functions&#13;&#10;&#13;&#10;* Add Success (bool) return to some functions&#13;&#10;&#13;&#10;* Fix uartSetRxTimeout return type&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Rodrigo Garcia &lt;rodrigo.garcia@espressif.com&gt;&#13;&#10;&#13;&#10;* Add support for esp-elf-gdb&#13;&#10;&#13;&#10;* WFG Crashfix (#8044)&#13;&#10;&#13;&#10;* Update component libs&#13;&#10;&#13;&#10;* IDF release/v5.1 (#8061)&#13;&#10;&#13;&#10;* IDF release/v5.1 bb9200acec&#13;&#10;&#13;&#10;* Update Esp.cpp&#13;&#10;&#13;&#10;* IDF release/v5.1 420ebd208a&#13;&#10;&#13;&#10;* Update esp32-hal-psram.c&#13;&#10;&#13;&#10;* Switch SDK to be an external package&#13;&#10;&#13;&#10;* fix path (#8096)&#13;&#10;&#13;&#10;* Makes UART work at any APB Frequency (#8097)&#13;&#10;&#13;&#10;Fixes HardwareSerial to work with IDF 5.1 on any CPU/APB Frequency (240MHz to 10MHZ), including user created low power modes.&#13;&#10;&#13;&#10;* Add required callbacks for TinyUSB DFU&#13;&#10;&#13;&#10;* Update version to 3.0.0&#13;&#10;&#13;&#10;* Add ESP.getCoreVersion() and update ESP.getChipModel()&#13;&#10;&#13;&#10;* Update timer hal for the latest 5.1&#13;&#10;&#13;&#10;* Use separate RX and TX buffer sizes in HTTP client&#13;&#10;&#13;&#10;optimizes download by allowing up to 4K packets to be received&#13;&#10;&#13;&#10;* Rename clock tree enum name in latest 5.1&#13;&#10;&#13;&#10;* ESP32-H4 support was removed in ESP-IDF v5.1&#13;&#10;&#13;&#10;* IDF release/v5.1 2004bf4e11 (#8165)&#13;&#10;&#13;&#10;* Deinit previous bus first (#8180)&#13;&#10;&#13;&#10;* TIMER - add timer_started flag, fix timerEnd() + timer HW test (#8135)&#13;&#10;&#13;&#10;* Add timer_started flag and stop before disable&#13;&#10;&#13;&#10;* Fix timer HW test&#13;&#10;&#13;&#10;* TOUCH - Peripheral manager implementation (#8129)&#13;&#10;&#13;&#10;* Touch periman implemented&#13;&#10;&#13;&#10;* Deinit previous bus first&#13;&#10;&#13;&#10;* LEDC Refactoring - Peripheral manager implemented (#8126)&#13;&#10;&#13;&#10;* LEDC periman implementation&#13;&#10;&#13;&#10;* Fix examples&#13;&#10;&#13;&#10;* Rework tone&#13;&#10;&#13;&#10;* Update ledc docs&#13;&#10;&#13;&#10;* fix missing bracket&#13;&#10;&#13;&#10;* Update analog funtions esp32-hal.h&#13;&#10;&#13;&#10;* Update CameraWebServer example&#13;&#10;&#13;&#10;* Fix HiFreq_ADC example&#13;&#10;&#13;&#10;* minor fixes - typos&#13;&#10;&#13;&#10;* Avoid calling tone/notone when tone already runs on dif. pin&#13;&#10;&#13;&#10;* Remove unused channels_resolution&#13;&#10;&#13;&#10;* GPIO - Peripheral manager implementation (#8179)&#13;&#10;&#13;&#10;* periman-implementation&#13;&#10;&#13;&#10;* fix RGB_BUILTIN and remove space&#13;&#10;&#13;&#10;* Enforces more consistency into Peripheral Manager (#8188)&#13;&#10;&#13;&#10;* Avoid log_i() message the first time a bus is assigned&#13;&#10;&#13;&#10;* Prevent operation with ESP32_BUS_TYPE_INIT&#13;&#10;&#13;&#10;* keeps coding style&#13;&#10;&#13;&#10;* do not print messages on INIT bus type&#13;&#10;&#13;&#10;* [Arduino Core 3.0.0] RMT IDF5.1 Refactoring (#7994)&#13;&#10;&#13;&#10;* RMT IDF5.1 refactoring&#13;&#10;&#13;&#10;* Fixes initial value setting&#13;&#10;&#13;&#10;* removed rmtRead() with user callback&#13;&#10;&#13;&#10;* simplify/remove Read data structure&#13;&#10;&#13;&#10;* Deep API simplification&#13;&#10;&#13;&#10;* fixes the examples&#13;&#10;&#13;&#10;* fix rmt.h&#13;&#10;&#13;&#10;* adds support to APB different frequencies&#13;&#10;&#13;&#10;* fixes CI and not defined RGB_BUILTIN&#13;&#10;&#13;&#10;* new RMT API and examples&#13;&#10;&#13;&#10;* fixing commentaties&#13;&#10;&#13;&#10;* Update esp32-hal-rgb-led.c&#13;&#10;&#13;&#10;* changes Filter API&#13;&#10;&#13;&#10;* Fixes example with Filter API&#13;&#10;&#13;&#10;* Update PlatformIO scripts for the upcoming 3.0 core (#8183)&#13;&#10;&#13;&#10;* Update PlatformIO scripts for the upcoming 3.0 core&#13;&#10;&#13;&#10;* Dynamically select proper framework-arduinoespressif32-libs package&#13;&#10;&#13;&#10;With this change the dev-platform will be dynamically configured to&#13;&#10;pull the latest .zip package with precompiled libraries from extracted from&#13;&#10;package_esp32_index.template.json&#13;&#10;&#13;&#10;* free memory on detach (#8264)&#13;&#10;&#13;&#10;* SPI - Peripheral manager implementation  (#8255)&#13;&#10;&#13;&#10;* spi periman implementation&#13;&#10;&#13;&#10;* fix header file&#13;&#10;&#13;&#10;* remove unused struct&#13;&#10;&#13;&#10;* fix missing braces&#13;&#10;&#13;&#10;* Update esp32-hal-rmt.c (#8216)&#13;&#10;&#13;&#10;Optimizing Peripheral Manager Test&#13;&#10;&#13;&#10;* I2C - Peripheral manager implementation (#8220)&#13;&#10;&#13;&#10;* i2c-master periman initial commit&#13;&#10;&#13;&#10;* i2c-master make detachbus static + comment remove&#13;&#10;&#13;&#10;* i2c-slave periman implementation&#13;&#10;&#13;&#10;* SetPinBus to INIT on i2cDeinits&#13;&#10;&#13;&#10;* Fix slave pins deinit&#13;&#10;&#13;&#10;* remove dbg logs&#13;&#10;&#13;&#10;* set ret to ESP_FAIL instead of returning&#13;&#10;&#13;&#10;* Fix warnings in hal-spi caused by pariman transition&#13;&#10;&#13;&#10;* Update esptool.py to version 4.6&#13;&#10;&#13;&#10;* Add platform support for ESP_SR&#13;&#10;&#13;&#10;* Add USB Type and valid pin check to periman&#13;&#10;&#13;&#10;* replace bus with spi-&gt;num+1 (#8279)&#13;&#10;&#13;&#10;* Remove default pins from SPI HAL&#13;&#10;&#13;&#10;* Add commented out handlers for esptool.js in TinyUSB CDC&#13;&#10;&#13;&#10;For future use&#13;&#10;&#13;&#10;* Add build defines for host os and fqbn (for debug purposes)&#13;&#10;&#13;&#10;* Provide proper memory caps total size&#13;&#10;&#13;&#10;* Update Esp.cpp&#13;&#10;&#13;&#10;* SDMMC - Peripheral manager implementation (#8289)&#13;&#10;&#13;&#10;* sdmmc periman implemented&#13;&#10;&#13;&#10;* save pins when SOC_SDMMC_USE_IOMUX&#13;&#10;&#13;&#10;* IDF release/v5.1 4bc762621d (#8292)&#13;&#10;&#13;&#10;* Adds missing pinMode (#8312)&#13;&#10;&#13;&#10;* Adds missing pinMode&#13;&#10;&#13;&#10;The example code lacks a pinMode() to initialize the GPIO 0 (button). In Arduino Core 3.0.0, it prints an error message when trying to read a not initialized GPIO.&#13;&#10;&#13;&#10;* Update KeyboardLogout.ino&#13;&#10;&#13;&#10;Adds &lt;buttonPin&gt; to keep code standard&#13;&#10;&#13;&#10;* Update KeyboardReprogram.ino&#13;&#10;&#13;&#10;Adds &lt;buttonPin&gt; to keep code standard&#13;&#10;&#13;&#10;* LEDC Fade implementation (#8338)&#13;&#10;&#13;&#10;* fade API + pointer fixes&#13;&#10;&#13;&#10;* Add fade api&#13;&#10;&#13;&#10;* Add fade example&#13;&#10;&#13;&#10;* update ledc docs&#13;&#10;&#13;&#10;* remove unused variables&#13;&#10;&#13;&#10;* fix path to example&#13;&#10;&#13;&#10;* Adds USB to Peripheral Manager - Arduino Core 3.0.0 (#8335)&#13;&#10;&#13;&#10;* ETHERNET - Peripheral manager implementation (#8297)&#13;&#10;&#13;&#10;* Peripheral manager implemented&#13;&#10;&#13;&#10;* remove unused variable&#13;&#10;&#13;&#10;* Add all RMII pins&#13;&#10;&#13;&#10;* fix typo&#13;&#10;&#13;&#10;* Adds HardwareSerial to Peripheral Manager Arduino 3.0.0 (#8328)&#13;&#10;&#13;&#10;* Do not limit ETHERNET in periman to only ESP32. SPI is also an option&#13;&#10;&#13;&#10;* Initial support for ESP32-C6 (#8337)&#13;&#10;&#13;&#10;* Add checks for SOC defines (#8351)&#13;&#10;&#13;&#10;* Add checks for SOC defines&#13;&#10;&#13;&#10;* Add SoC checks to BLE library&#13;&#10;&#13;&#10;* fix i2c compilation error&#13;&#10;&#13;&#10;* fix wrong placement of include&#13;&#10;&#13;&#10;* add check to SPI library&#13;&#10;&#13;&#10;* add check to USB library&#13;&#10;&#13;&#10;* add checks to Wire library&#13;&#10;&#13;&#10;* Feature/esp32h2 support (#8373)&#13;&#10;&#13;&#10;* Initial support for ESP32H2&#13;&#10;&#13;&#10;* Additional changes for ESP32H2&#13;&#10;&#13;&#10;* Update libs for ESP32H2&#13;&#10;&#13;&#10;* Fix flashing on ESP32-H2&#13;&#10;&#13;&#10;* Fix GPIO Configs for ESP32-C6 and ESP32-H2&#13;&#10;&#13;&#10;* Update Timer test sketch&#13;&#10;&#13;&#10;* Fix upload flash parameters&#13;&#10;&#13;&#10;* Use ets_write_char_uart instead of ets_printf in log_printfv&#13;&#10;&#13;&#10;* Print full chip report when log level is sufficient (#8282)&#13;&#10;&#13;&#10;* ESP32-C3 does not have ets_write_char_uart&#13;&#10;&#13;&#10;* Fix BLE gap event name&#13;&#10;&#13;&#10;* HW Testing - Pytest update (#8389)&#13;&#10;&#13;&#10;* update tests requirements&#13;&#10;&#13;&#10;* remove already handled components&#13;&#10;&#13;&#10;* Update version of pytest&#13;&#10;&#13;&#10;* Add missing ESP32-H2 to hil.yml&#13;&#10;&#13;&#10;* Updated FreeRTOS names (#8418)&#13;&#10;&#13;&#10;* HW Testing -  ESP32-C6 + ESP32-H2 fixes (#8404)&#13;&#10;&#13;&#10;* add C6/H2 to tests cfg.json&#13;&#10;&#13;&#10;* remove ,&#13;&#10;&#13;&#10;* workflow runs-on runner by matrix&#13;&#10;&#13;&#10;* Add need for arduino tag to select runner&#13;&#10;&#13;&#10;* Add cryptography to requirements.txt&#13;&#10;&#13;&#10;* Removed duplicate TX1 define for H2 (#8402)&#13;&#10;&#13;&#10;* Fix broken examples&#13;&#10;&#13;&#10;* Fixes RMT filter &amp; idle timing and setup (#8359)&#13;&#10;&#13;&#10;* Fixes Filter and Idle parameter to uint32&#13;&#10;&#13;&#10;* Fixes Filter and Idle setup&#13;&#10;&#13;&#10;* Fixes it to 5.1Libs branch&#13;&#10;&#13;&#10;* fix RMT CLK source and Filter API&#13;&#10;&#13;&#10;* fixes missing ;&#13;&#10;&#13;&#10;* fixes missing ;&#13;&#10;&#13;&#10;* fixes RMT example&#13;&#10;&#13;&#10;* IDF release/v5.1 a7b62bbcaf (#8438)&#13;&#10;&#13;&#10;* Add workflow to build executables from python scripts (#8290)&#13;&#10;&#13;&#10;* Add workflow to build executables from python scripts&#13;&#10;&#13;&#10;* Push binary to tools&#13;&#10;&#13;&#10;* Enable executable signing on Windows&#13;&#10;&#13;&#10;* Update get.py&#13;&#10;&#13;&#10;* Push binary to tools&#13;&#10;&#13;&#10;* Try with multiple files&#13;&#10;&#13;&#10;* Try more actions&#13;&#10;&#13;&#10;* Try powershell&#13;&#10;&#13;&#10;* Restore tools so they do not get rebuilt&#13;&#10;&#13;&#10;* Finalize scripts&#13;&#10;&#13;&#10;* Push binary to tools&#13;&#10;&#13;&#10;* App rollback should be after PSRAM is initialized&#13;&#10;&#13;&#10;* Correcting RX1 to GPIO4 and TX1 to GPIO5 to be consistent with documentation. Previous pin use works but is inconsistent with C6 docs.&#13;&#10;&#13;&#10;* Fixes Memory Leak (#8486)&#13;&#10;&#13;&#10;* fixes preprocessor test (#8485)&#13;&#10;&#13;&#10;* fixes preprocessor test&#13;&#10;&#13;&#10;When using `#define USE_SOFT_AP` &#13;&#10;Change&#13;&#10;`&amp;&amp; not USE_SOFT_AP` ==&gt; `&amp;&amp; !defined(USE_SOFT_AP)`&#13;&#10;&#13;&#10;* Adds any BLE capable device in WiFiProv.ino&#13;&#10;&#13;&#10;Removing ESP32 restriction for BLE Provisioning.&#13;&#10;&#13;&#10;* fix flash mode read out for C6&#13;&#10;&#13;&#10;* Add option for custom partitions without restrictions&#13;&#10;&#13;&#10;* SD_MMC update (#8298)&#13;&#10;&#13;&#10;* Updated SD_MMC lib and examples&#13;&#10;&#13;&#10;* Removed getter implementation and commented usage in examples&#13;&#10;&#13;&#10;* squashed updates&#13;&#10;&#13;&#10;* IDF release/v5.1 f0437b945f (#8599)&#13;&#10;&#13;&#10;* Update package_esp32_index.template.json&#13;&#10;&#13;&#10;* Fix printf format build error in BTAdvertisedDeviceSet.cpp&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Pedro Minatel &lt;pedro.minatel@espressif.com&gt;&#13;&#10;Co-authored-by: Rodrigo Garcia &lt;rodrigo.garcia@espressif.com&gt;&#13;&#10;Co-authored-by: Ha Thach &lt;thach@tinyusb.org&gt;&#13;&#10;Co-authored-by: Martin Turski &lt;quiret@vfemail.net&gt;&#13;&#10;Co-authored-by: raviypujar &lt;raviypujar@gmail.com&gt;&#13;&#10;Co-authored-by: Jason2866 &lt;24528715+Jason2866@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: Tomáš Pilný &lt;34927466+PilnyTomas@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: Jan Procházka &lt;90197375+P-R-O-C-H-Y@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: Daniel Berlin &lt;dberlin@dberlin.org&gt;&#13;&#10;Co-authored-by: Nima Askari (نیما عسکری) &lt;nimaltd@yahoo.com&gt;&#13;&#10;Co-authored-by: rtpmsys &lt;106180646+rtpmsys@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: bytiful &lt;55647551+bytiful@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: tmfarrington &lt;tmfarrington@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: Krzysiek S &lt;chris.streh@gmail.com&gt;&#13;&#10;Co-authored-by: surt &lt;carl.olsson@gmail.com&gt;&#13;&#10;Co-authored-by: Max Scheffler &lt;max.scheffler@pm.me&gt;&#13;&#10;Co-authored-by: Clemens Kirchgatterer &lt;clemens@1541.org&gt;&#13;&#10;Co-authored-by: Peter Pan's Techland &lt;twinkle-pirate@hotmail.com&gt;&#13;&#10;Co-authored-by: Roman &lt;programmeofficemilkyway@gmail.com&gt;&#13;&#10;Co-authored-by: Eistee &lt;Eistee82@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: David McCurley &lt;44048235+mrengineer7777@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: Gaya3N25 &lt;30388176+Gaya3N25@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: renebohne &lt;rene.bohne@gmail.com&gt;&#13;&#10;Co-authored-by: Olivér Remény &lt;25034625+remenyo@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: davidk88 &lt;david.kotar@gmail.com&gt;&#13;&#10;Co-authored-by: Vojtěch Bartoška &lt;76958047+VojtechBartoska@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: James Armstrong &lt;jamesarmstrong3@me.com&gt;&#13;&#10;Co-authored-by: Valerii Koval &lt;valeros@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: Peter G. Jensen &lt;root@petergjoel.dk&gt;" />
			<int key="additions" value="7" />
			<int key="deletions" value="3" />
			<string key="diff" value='@@ -4,6 +4,9 @@&#10;  *  Created on: Mar 25, 2017&#10;  *      Author: kolban&#10;  */&#10;+#include "soc/soc_caps.h"&#10;+#if SOC_BLE_SUPPORTED&#10;+&#10; #include "sdkconfig.h"&#10; #if defined(CONFIG_BLUEDROID_ENABLED)&#10; #include "BLEAddress.h"&#10;@@ -1964,8 +1967,8 @@ std::string BLEUtils::gattStatusToString(esp_gatt_status_t status) {&#10; &#9;&#9;&#9;return "ESP_GATT_INVALID_CFG";&#10; &#9;&#9;case ESP_GATT_SERVICE_STARTED:&#10; &#9;&#9;&#9;return "ESP_GATT_SERVICE_STARTED";&#10;-&#9;&#9;case ESP_GATT_ENCRYPED_NO_MITM:&#10;-&#9;&#9;&#9;return "ESP_GATT_ENCRYPED_NO_MITM";&#10;+&#9;&#9;case ESP_GATT_ENCRYPTED_NO_MITM:&#10;+&#9;&#9;&#9;return "ESP_GATT_ENCRYPTED_NO_MITM";&#10; &#9;&#9;case ESP_GATT_NOT_ENCRYPTED:&#10; &#9;&#9;&#9;return "ESP_GATT_NOT_ENCRYPTED";&#10; &#9;&#9;case ESP_GATT_CONGESTED:&#10;@@ -2037,4 +2040,5 @@ const char* BLEUtils::searchEventTypeToString(esp_gap_search_evt_t searchEvt) {&#10; &#9;}&#10; } // searchEventTypeToString&#10; &#10;-#endif // CONFIG_BLUEDROID_ENABLED&#10;+#endif /* CONFIG_BLUEDROID_ENABLED */&#10;+#endif /* SOC_BLE_SUPPORTED */&#10;' />
			<string key="comment_change" value="False" />
		</event>
	</trace>
	<trace>
		<string key="file" value="BLEUtils.h" />
	</trace>
	<trace>
		<string key="file" value="BLEValue.cpp" />
		<event>
			<string key="timestamp" value="2023-10-05T14:54:25+03:00" />
			<string key="author" value="Me No Dev" />
			<string key="change_type" value="MODIFY" />
			<string key="commit_message" value="ESP-IDF v5.1 (#7733)&#10;&#10;* Initial changes to compile under ESP-IDF v5.1&#13;&#10;&#13;&#10;* Initial import for ESP-IDF v5.1 libs&#13;&#10;&#13;&#10;* Update toolchain&#13;&#10;&#13;&#10;* Update esp32-hal-psram.c&#13;&#10;&#13;&#10;* Add missing LDs&#13;&#10;&#13;&#10;* Update platform.txt&#13;&#10;&#13;&#10;* Stop some CI jobs, because they will always fail&#13;&#10;&#13;&#10;* Fix examples&#13;&#10;&#13;&#10;* Update app_httpd.cpp&#13;&#10;&#13;&#10;* Update ResetReason.ino&#13;&#10;&#13;&#10;* Warnings fixes&#13;&#10;&#13;&#10;* Added the example guideline and template (#7665)&#13;&#10;&#13;&#10;* Added the example guideline and template&#13;&#10;&#13;&#10;* PR review changes with some typos and grammar fixes&#13;&#10;&#13;&#10;* Changes according to the PR review&#13;&#10;&#13;&#10;* Added ESP32-S3 link to the datasheet (#7738)&#13;&#10;&#13;&#10;* Update HiFreq_ADC.ino&#13;&#10;&#13;&#10;* Replace periph_ctrl.h use because of deprecation&#13;&#10;&#13;&#10;* Replace esp_spi_flash.h use because of deprecation&#13;&#10;&#13;&#10;* Add includes to male mDNS::enableWorkstation compile&#13;&#10;&#13;&#10;* Fix ssl_client mbedtls_pk_parse_key callback&#13;&#10;&#13;&#10;* Update temperature sensor driver&#13;&#10;&#13;&#10;* Allow sketch_utils to compile with arduino-cli&#13;&#10;&#13;&#10;* Run CI with arduino-cli&#13;&#10;&#13;&#10;* Fix arduino-cli CI build on Windows&#13;&#10;&#13;&#10;* Refactor platform.txt to not use components installed through the board manager when running from git&#13;&#10;&#13;&#10;* Initial Peripheral Manager Implementation&#13;&#10;&#13;&#10;* Update SigmaDelta driver to use the new ESP-IDF driver API&#13;&#10;&#13;&#10;* Small improvements to peripheral manager and SigmaDelta&#13;&#10;&#13;&#10;* Remove deleted function from SigmaDelta header&#13;&#10;&#13;&#10;* Update DAC driver to use the new ESP-IDF driver API&#13;&#10;&#13;&#10;* Adds softAp(String) to make it compatible with ESP8266 (#7801)&#13;&#10;&#13;&#10;* Fix commentary (#7800)&#13;&#10;&#13;&#10;Minor fix based on observation done in https://github.com/espressif/arduino-esp32/issues/7795#issuecomment-1416868611&#13;&#10;&#13;&#10;* add adafruit new board feather esp32s2 reserve tft (#7794)&#13;&#10;&#13;&#10;* bugfix: add &lt;stdint.h&gt; for uint8_t to avoid compilation failure (GCC 11.2.0) (#7744)&#13;&#10;&#13;&#10;* Adding 3rd party boards for VALTRACK-V4-VTS-ESP32-C3 &amp; VALTRACK-V4-MFW-ESP32-C3 (#7735)&#13;&#10;&#13;&#10;* Added VALTRACK-V4-VTS-ESP32-C3 board definition&#13;&#10;&#13;&#10;Created pins_arduino.h &amp; made changes to boards.txt with necessary changes&#13;&#10;&#13;&#10;* Modified the URL&#13;&#10;&#13;&#10;* Renamed json&#13;&#10;&#13;&#10;* renamed all auRL&#13;&#10;&#13;&#10;* Adding VALTRACK-V4 series board definitions&#13;&#10;&#13;&#10;Added VALTRACK-V4-VTS-ESP32C3 &amp; VALTRACK-V4-MFW-ESP32-C3 board variants&#13;&#10;&#13;&#10;* Adding VALTRACK-V4 series board definitions&#13;&#10;&#13;&#10;Added VALTRACK-V4-VTS-ESP32C3 &amp; VALTRACK-V4-MFW-ESP32-C3 board variants&#13;&#10;&#13;&#10;* Reverted package_esp32_index.template.json&#13;&#10;&#13;&#10;restored package_esp32_index.template.json from edits&#13;&#10;&#13;&#10;* Reverted package_esp32_index.template.json&#13;&#10;&#13;&#10;Added new line to package_esp32_index.template.json&#13;&#10;&#13;&#10;* Update Platformio CI (#7725)&#13;&#10;&#13;&#10;* WiFiClient example fix (#7711)&#13;&#10;&#13;&#10;* Modified WiFiClient example to use thingspeak instead of non-functionig sparkfun&#13;&#10;&#13;&#10;* Moved instructions to README&#13;&#10;&#13;&#10;* Fixed spelling&#13;&#10;&#13;&#10;* Added link to S3 datasheet&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Jan Procházka &lt;90197375+P-R-O-C-H-Y@users.noreply.github.com&gt;&#13;&#10;&#13;&#10;* Mirror update from Heltec repository (#7709)&#13;&#10;&#13;&#10;Heltec updated the I2C pins in https://github.com/Heltec-Aaron-Lee/WiFi_Kit_series/commit/b10f4bf85d13fd01be80dcdb0eb59e6a8c8ba19a&#13;&#10;&#13;&#10;* Fixes BLE data printing (#7699)&#13;&#10;&#13;&#10;* Fixes BLE data printing&#13;&#10;&#13;&#10;BLE data has no '\0' terminator, therefore it can't be printed as a regular C string.&#13;&#10;This fix just prints the BLE data based on its length.&#13;&#10;&#13;&#10;* Simplify printing to a single call&#13;&#10;&#13;&#10;* split menu options + lora_32_V3 fix (#7697)&#13;&#10;&#13;&#10;* Change header gaurd name (#7696)&#13;&#10;&#13;&#10;* Fix Name (#7691)&#13;&#10;&#13;&#10;Wrong name in definitions.&#13;&#10;&#13;&#10;* Fix error in WiFiClient.cpp where the connect function fails for timeouts below 1 second (#7686)&#13;&#10;&#13;&#10;* Update WiFiClient.cpp&#13;&#10;&#13;&#10;This change will allow specifying connect timeouts below 1 second. Without this change, if connect timeouts under 1 second are given, the connect defaults to 0ms and fails. &#13;&#10;This will also allow timeouts in fractions of seconds, e.g. 1500ms. Without this change, connect timeouts are truncated to full second increments.&#13;&#10;&#13;&#10;* Make parameter timeout_ms clear&#13;&#10;&#13;&#10;* Change connection timeout_ms name for clarity&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Rodrigo Garcia &lt;rodrigo.garcia@espressif.com&gt;&#13;&#10;&#13;&#10;* fixed the function header (#7674)&#13;&#10;&#13;&#10;* fixed the function header&#13;&#10;&#13;&#10;* fixed function name and paramaters&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Jan Procházka &lt;90197375+P-R-O-C-H-Y@users.noreply.github.com&gt;&#13;&#10;&#13;&#10;* Ticker fix solving #6155 (#7664)&#13;&#10;&#13;&#10;* Wrapped Ticker functions with #pragma disabling -Wcast-function-type&#13;&#10;&#13;&#10;* Revert &quot;Wrapped Ticker functions with #pragma disabling -Wcast-function-type&quot;&#13;&#10;&#13;&#10;This reverts commit 160be7e67a10d01b6e44c4bf2521c0ccd6348976.&#13;&#10;&#13;&#10;* Fixed Ticker example&#13;&#10;&#13;&#10;* Modified Ticker example&#13;&#10;&#13;&#10;* Fixed LED_BUILTIN err for ESP32&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Jan Procházka &lt;90197375+P-R-O-C-H-Y@users.noreply.github.com&gt;&#13;&#10;&#13;&#10;* setPins fix ESP32 &quot;specified pins are not supported by this chip.&quot; (#7646)&#13;&#10;&#13;&#10;[ESP32: SDMMCFS::begin hardcodes the usage of slot 1, only check if the pins match slot 1 pins.]&#13;&#10;&#13;&#10;setPins() was testing pins D1, D2 and D3 all against D1 ... fine in 1 pin mode when all are -1 not so much if you're trying to get 4 pin mode working.&#13;&#10;I now see this function doesn't really do anything on the ESP32...accept now correctly checks that you are trying to use the slot 1 pins.&#13;&#10;&#13;&#10;Co-authored-by: Jan Procházka &lt;90197375+P-R-O-C-H-Y@users.noreply.github.com&gt;&#13;&#10;&#13;&#10;* Allow passing IP as connect method parameter in WiFiClientSecure and skip unnecessary host-ip conversions (#7643)&#13;&#10;&#13;&#10;* Add LED_BUILTIN* definitions and initialization for LEDs to stop them floating. (#7636)&#13;&#10;&#13;&#10;Co-authored-by: Rodrigo Garcia &lt;rodrigo.garcia@espressif.com&gt;&#13;&#10;&#13;&#10;* Expand path to tinuf2 image when checking existence in platformio-build.py (#7631)&#13;&#10;&#13;&#10;* Expand path to tinuf2 image when checking existence&#13;&#10;&#13;&#10;* More isFiles fixed&#13;&#10;&#13;&#10;* Remove (useless) trailing semicolon from Print.cpp (#7622)&#13;&#10;&#13;&#10;* ADD: New variant Edgebox-ESP-100 (#7771)&#13;&#10;&#13;&#10;* ADD: New variant Edgebox-ESP-100&#13;&#10;&#13;&#10;* FIX: Edgebox-ESP-100 Board.txt usb mode option change back to default value as ESP32S3&#13;&#10;&#13;&#10;* Add Crabik Slot ESP32-S3 board (#7790)&#13;&#10;&#13;&#10;* Added Crabik Slot ESP32-S3&#13;&#10;&#13;&#10;* Adding CPU frequency settings and removing excess from partition scheme settings&#13;&#10;&#13;&#10;* new variant LilyGO T-Display-S3 (#7763)&#13;&#10;&#13;&#10;* new variant LilyGO T-Display-S3&#13;&#10;&#13;&#10;https://github.com/Xinyuan-LilyGO/T-Display-S3&#13;&#10;&#13;&#10;* Add boards.txt definition&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Me No Dev &lt;me-no-dev@users.noreply.github.com&gt;&#13;&#10;&#13;&#10;* Update get.py to support Apple ARM64&#13;&#10;&#13;&#10;* Update package_esp32_index.template.json&#13;&#10;&#13;&#10;* WString Return bool (#7774)&#13;&#10;&#13;&#10;* Add Roboheart Hercules development board to the esp32-core (#7672)&#13;&#10;&#13;&#10;* added Roboheart Hercules pin definitions and board.txt entries&#13;&#10;&#13;&#10;* added package_roboheat.json for prototyping&#13;&#10;&#13;&#10;* Roboheart Hercules pins&#13;&#10;&#13;&#10;* Updated the pins&#13;&#10;&#13;&#10;* Delete package_roboheart.json&#13;&#10;&#13;&#10;* Requested changes&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: renebohne &lt;rene.bohne@gmail.com&gt;&#13;&#10;&#13;&#10;* Reword &quot;ESP-IDF as Component&quot; (#7812)&#13;&#10;&#13;&#10;I think &quot;Arduino as an ESP-IDF component&quot; or just &quot;As ESP-IDF component&quot; instead of  &quot;ESP-IDF as Component&quot; is more correct way to name the link.&#13;&#10;&#13;&#10;1. &quot;ESP-IDF as Component&quot; would imply that ESP-IDF is some sort of library for Arduino, which is (IMO) misleading, because it's true the other way around.&#13;&#10;2. It's written as &quot;Arduino as an ESP-IDF component&quot; on the webpage it points to as well.&#13;&#10;&#13;&#10;- Also I removed the capitalization from &quot;Component&quot; as I have not found a reason why is it capitalized.&#13;&#10;&#13;&#10;* add new board Adafruit Feather ESP32-S3 Reverse TFT (#7811)&#13;&#10;&#13;&#10;* Multi threading examples (tasks, queues, semaphores, mutexes) (#7660)&#13;&#10;&#13;&#10;* Moved and renamed example ESP32/FreeRTOS to MultiThreading/BasicMultiThreading&#13;&#10;&#13;&#10;* Added dummy files&#13;&#10;&#13;&#10;* Modified original example&#13;&#10;&#13;&#10;* Fixed BasicMultiThreading.ino&#13;&#10;&#13;&#10;* Added Example demonstrating use of queues&#13;&#10;&#13;&#10;* Extended info in BasicMultiThreading&#13;&#10;&#13;&#10;* Renamed Queues to singular Queue&#13;&#10;&#13;&#10;* Added Mutex example&#13;&#10;&#13;&#10;* Added Semaphore example&#13;&#10;&#13;&#10;* Moved info from example to README&#13;&#10;&#13;&#10;* Moved doc from Mutex to README&#13;&#10;&#13;&#10;* Added Queue README&#13;&#10;&#13;&#10;* Removed unecesary text&#13;&#10;&#13;&#10;* Fixed grammar&#13;&#10;&#13;&#10;* Increased stack size for Sempahore example&#13;&#10;&#13;&#10;* Added headers into .ino files&#13;&#10;&#13;&#10;* Added word Example at the end of title in README&#13;&#10;&#13;&#10;* removed unused line&#13;&#10;&#13;&#10;* Added forgotten README&#13;&#10;&#13;&#10;* Modified BasicMultiThreading example&#13;&#10;&#13;&#10;* Added missing S3 entry in README&#13;&#10;&#13;&#10;* moved location&#13;&#10;&#13;&#10;* Update ESP-IDF libs&#13;&#10;&#13;&#10;* Update CMakeLists.txt&#13;&#10;&#13;&#10;* Update esptool to v4.4&#13;&#10;&#13;&#10;* Add function timerAttachInterruptFlag (#7809)&#13;&#10;&#13;&#10;* Update esptool to v4.5&#13;&#10;&#13;&#10;* ADC refactoring (#7827)&#13;&#10;&#13;&#10;* Adc refactored + periman implementation&#13;&#10;&#13;&#10;Peripheral manager still needs to be checked if the implementation is right.&#13;&#10;&#13;&#10;* switched to working solution for milivolts read&#13;&#10;&#13;&#10;* Periman detachbus fix&#13;&#10;&#13;&#10;* coding style&#13;&#10;&#13;&#10;* fix CI warnings&#13;&#10;&#13;&#10;* fix FreeRTOS example&#13;&#10;&#13;&#10;* Update ETH.cpp&#13;&#10;&#13;&#10;* Update FunctionalInterruptStruct.ino&#13;&#10;&#13;&#10;* Update package_esp32_index.template.json&#13;&#10;&#13;&#10;* Update package_esp32_index.template.json&#13;&#10;&#13;&#10;* Fixes for the latest IDF v5.1&#13;&#10;&#13;&#10;* update esp-idf libs and toolchain&#13;&#10;&#13;&#10;* Turn OFF auto crystal frequency for ESP32 (needed by TWAI)&#13;&#10;&#13;&#10;* Update examples&#13;&#10;&#13;&#10;* Switch build to mostly use flags from files&#13;&#10;&#13;&#10;Includes can not be done this way&#13;&#10;&#13;&#10;* Reorganize flag files&#13;&#10;&#13;&#10;* Optimize chip build flags further&#13;&#10;&#13;&#10;* Revert defines from file. MBEDTLS_CONFIG_FILE does not properly expand&#13;&#10;&#13;&#10;* Add support for includes and defines from file&#13;&#10;&#13;&#10;* Replace old sdk path references in platform.txt&#13;&#10;&#13;&#10;* use gcc-ar (#8013)&#13;&#10;&#13;&#10;* Makes F_CPU generic for all SoC (#8007)&#13;&#10;&#13;&#10;Based on CONFIG_ESP_DEFAULT_CPU_FREQ_MHZ that is correctly defined in the sdkconfig file for each SoC.&#13;&#10;&#13;&#10;* TIMER refactoring (#7904)&#13;&#10;&#13;&#10;* refactor using GPtimer&#13;&#10;&#13;&#10;* Updated timer HW test&#13;&#10;&#13;&#10;* fix examples&#13;&#10;&#13;&#10;* Add v2.0.7 in issue template (#7871)&#13;&#10;&#13;&#10;* refactor using GPtimer&#13;&#10;&#13;&#10;* Updated timer HW test&#13;&#10;&#13;&#10;* fix examples&#13;&#10;&#13;&#10;* Revert &quot;Add v2.0.7 in issue template (#7871)&quot;&#13;&#10;&#13;&#10;This reverts commit fcc3b17d62ff57861f8913ca1f142fd5163b7457.&#13;&#10;&#13;&#10;* Update upload-artifact to v3 in HW CI&#13;&#10;&#13;&#10;* Revert &quot;Update upload-artifact to v3 in HW CI&quot;&#13;&#10;&#13;&#10;This reverts commit 1ba228071718ba37c4e26d98db22f77b2a7364a6.&#13;&#10;&#13;&#10;* replace resolution with frequency&#13;&#10;&#13;&#10;* remove count_down option&#13;&#10;&#13;&#10;* countup removed from examples + header&#13;&#10;&#13;&#10;* Refactored timer object&#13;&#10;&#13;&#10;* code cleanup + examples and tests fixes&#13;&#10;&#13;&#10;* TimerAlarm fix&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Vojtěch Bartoška &lt;76958047+VojtechBartoska@users.noreply.github.com&gt;&#13;&#10;&#13;&#10;* [Docs] ADC and Timer API Update (+some docs fixes) (#7906)&#13;&#10;&#13;&#10;* updated docs&#13;&#10;&#13;&#10;* remove hall sensor docs&#13;&#10;&#13;&#10;Removed Hall sensor documentation as its no longer supported in IDF-5&#13;&#10;&#13;&#10;* Fixed ESPNow examples location in docs&#13;&#10;&#13;&#10;* Last timer refactored API + gpio small fix&#13;&#10;&#13;&#10;* AlarmWrite fix&#13;&#10;&#13;&#10;* Fixes APLL/PLL with RTC Frequency (#8025)&#13;&#10;&#13;&#10;log_d() was displaying APLL for any SoC, but S3 and C3 has not such option, causing compilation errors.&#13;&#10;&#13;&#10;* Update IDF libs and fix OPI PSRAM on S3&#13;&#10;&#13;&#10;* Add setMode function HardwareSerial.c to set the esp32 uart mode for use with RS485 auto RTS (#7935)&#13;&#10;&#13;&#10;* Added setMode function to set the esp32 uart mode&#13;&#10;&#13;&#10;Used to set the esp32 uart mode for use with RS485 Half Duplex and the auto RTS pin mode. This will set/clear the RTS pin output to control the RE/DE pin on most RS485 chips.&#13;&#10;&#13;&#10;* Add Success (bool) return in some functions&#13;&#10;&#13;&#10;* Add Success (bool) return code to some functions&#13;&#10;&#13;&#10;* Add Success (bool) return to some functions&#13;&#10;&#13;&#10;* Add Success (bool) return to some functions&#13;&#10;&#13;&#10;* Fix uartSetRxTimeout return type&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Rodrigo Garcia &lt;rodrigo.garcia@espressif.com&gt;&#13;&#10;&#13;&#10;* Add support for esp-elf-gdb&#13;&#10;&#13;&#10;* WFG Crashfix (#8044)&#13;&#10;&#13;&#10;* Update component libs&#13;&#10;&#13;&#10;* IDF release/v5.1 (#8061)&#13;&#10;&#13;&#10;* IDF release/v5.1 bb9200acec&#13;&#10;&#13;&#10;* Update Esp.cpp&#13;&#10;&#13;&#10;* IDF release/v5.1 420ebd208a&#13;&#10;&#13;&#10;* Update esp32-hal-psram.c&#13;&#10;&#13;&#10;* Switch SDK to be an external package&#13;&#10;&#13;&#10;* fix path (#8096)&#13;&#10;&#13;&#10;* Makes UART work at any APB Frequency (#8097)&#13;&#10;&#13;&#10;Fixes HardwareSerial to work with IDF 5.1 on any CPU/APB Frequency (240MHz to 10MHZ), including user created low power modes.&#13;&#10;&#13;&#10;* Add required callbacks for TinyUSB DFU&#13;&#10;&#13;&#10;* Update version to 3.0.0&#13;&#10;&#13;&#10;* Add ESP.getCoreVersion() and update ESP.getChipModel()&#13;&#10;&#13;&#10;* Update timer hal for the latest 5.1&#13;&#10;&#13;&#10;* Use separate RX and TX buffer sizes in HTTP client&#13;&#10;&#13;&#10;optimizes download by allowing up to 4K packets to be received&#13;&#10;&#13;&#10;* Rename clock tree enum name in latest 5.1&#13;&#10;&#13;&#10;* ESP32-H4 support was removed in ESP-IDF v5.1&#13;&#10;&#13;&#10;* IDF release/v5.1 2004bf4e11 (#8165)&#13;&#10;&#13;&#10;* Deinit previous bus first (#8180)&#13;&#10;&#13;&#10;* TIMER - add timer_started flag, fix timerEnd() + timer HW test (#8135)&#13;&#10;&#13;&#10;* Add timer_started flag and stop before disable&#13;&#10;&#13;&#10;* Fix timer HW test&#13;&#10;&#13;&#10;* TOUCH - Peripheral manager implementation (#8129)&#13;&#10;&#13;&#10;* Touch periman implemented&#13;&#10;&#13;&#10;* Deinit previous bus first&#13;&#10;&#13;&#10;* LEDC Refactoring - Peripheral manager implemented (#8126)&#13;&#10;&#13;&#10;* LEDC periman implementation&#13;&#10;&#13;&#10;* Fix examples&#13;&#10;&#13;&#10;* Rework tone&#13;&#10;&#13;&#10;* Update ledc docs&#13;&#10;&#13;&#10;* fix missing bracket&#13;&#10;&#13;&#10;* Update analog funtions esp32-hal.h&#13;&#10;&#13;&#10;* Update CameraWebServer example&#13;&#10;&#13;&#10;* Fix HiFreq_ADC example&#13;&#10;&#13;&#10;* minor fixes - typos&#13;&#10;&#13;&#10;* Avoid calling tone/notone when tone already runs on dif. pin&#13;&#10;&#13;&#10;* Remove unused channels_resolution&#13;&#10;&#13;&#10;* GPIO - Peripheral manager implementation (#8179)&#13;&#10;&#13;&#10;* periman-implementation&#13;&#10;&#13;&#10;* fix RGB_BUILTIN and remove space&#13;&#10;&#13;&#10;* Enforces more consistency into Peripheral Manager (#8188)&#13;&#10;&#13;&#10;* Avoid log_i() message the first time a bus is assigned&#13;&#10;&#13;&#10;* Prevent operation with ESP32_BUS_TYPE_INIT&#13;&#10;&#13;&#10;* keeps coding style&#13;&#10;&#13;&#10;* do not print messages on INIT bus type&#13;&#10;&#13;&#10;* [Arduino Core 3.0.0] RMT IDF5.1 Refactoring (#7994)&#13;&#10;&#13;&#10;* RMT IDF5.1 refactoring&#13;&#10;&#13;&#10;* Fixes initial value setting&#13;&#10;&#13;&#10;* removed rmtRead() with user callback&#13;&#10;&#13;&#10;* simplify/remove Read data structure&#13;&#10;&#13;&#10;* Deep API simplification&#13;&#10;&#13;&#10;* fixes the examples&#13;&#10;&#13;&#10;* fix rmt.h&#13;&#10;&#13;&#10;* adds support to APB different frequencies&#13;&#10;&#13;&#10;* fixes CI and not defined RGB_BUILTIN&#13;&#10;&#13;&#10;* new RMT API and examples&#13;&#10;&#13;&#10;* fixing commentaties&#13;&#10;&#13;&#10;* Update esp32-hal-rgb-led.c&#13;&#10;&#13;&#10;* changes Filter API&#13;&#10;&#13;&#10;* Fixes example with Filter API&#13;&#10;&#13;&#10;* Update PlatformIO scripts for the upcoming 3.0 core (#8183)&#13;&#10;&#13;&#10;* Update PlatformIO scripts for the upcoming 3.0 core&#13;&#10;&#13;&#10;* Dynamically select proper framework-arduinoespressif32-libs package&#13;&#10;&#13;&#10;With this change the dev-platform will be dynamically configured to&#13;&#10;pull the latest .zip package with precompiled libraries from extracted from&#13;&#10;package_esp32_index.template.json&#13;&#10;&#13;&#10;* free memory on detach (#8264)&#13;&#10;&#13;&#10;* SPI - Peripheral manager implementation  (#8255)&#13;&#10;&#13;&#10;* spi periman implementation&#13;&#10;&#13;&#10;* fix header file&#13;&#10;&#13;&#10;* remove unused struct&#13;&#10;&#13;&#10;* fix missing braces&#13;&#10;&#13;&#10;* Update esp32-hal-rmt.c (#8216)&#13;&#10;&#13;&#10;Optimizing Peripheral Manager Test&#13;&#10;&#13;&#10;* I2C - Peripheral manager implementation (#8220)&#13;&#10;&#13;&#10;* i2c-master periman initial commit&#13;&#10;&#13;&#10;* i2c-master make detachbus static + comment remove&#13;&#10;&#13;&#10;* i2c-slave periman implementation&#13;&#10;&#13;&#10;* SetPinBus to INIT on i2cDeinits&#13;&#10;&#13;&#10;* Fix slave pins deinit&#13;&#10;&#13;&#10;* remove dbg logs&#13;&#10;&#13;&#10;* set ret to ESP_FAIL instead of returning&#13;&#10;&#13;&#10;* Fix warnings in hal-spi caused by pariman transition&#13;&#10;&#13;&#10;* Update esptool.py to version 4.6&#13;&#10;&#13;&#10;* Add platform support for ESP_SR&#13;&#10;&#13;&#10;* Add USB Type and valid pin check to periman&#13;&#10;&#13;&#10;* replace bus with spi-&gt;num+1 (#8279)&#13;&#10;&#13;&#10;* Remove default pins from SPI HAL&#13;&#10;&#13;&#10;* Add commented out handlers for esptool.js in TinyUSB CDC&#13;&#10;&#13;&#10;For future use&#13;&#10;&#13;&#10;* Add build defines for host os and fqbn (for debug purposes)&#13;&#10;&#13;&#10;* Provide proper memory caps total size&#13;&#10;&#13;&#10;* Update Esp.cpp&#13;&#10;&#13;&#10;* SDMMC - Peripheral manager implementation (#8289)&#13;&#10;&#13;&#10;* sdmmc periman implemented&#13;&#10;&#13;&#10;* save pins when SOC_SDMMC_USE_IOMUX&#13;&#10;&#13;&#10;* IDF release/v5.1 4bc762621d (#8292)&#13;&#10;&#13;&#10;* Adds missing pinMode (#8312)&#13;&#10;&#13;&#10;* Adds missing pinMode&#13;&#10;&#13;&#10;The example code lacks a pinMode() to initialize the GPIO 0 (button). In Arduino Core 3.0.0, it prints an error message when trying to read a not initialized GPIO.&#13;&#10;&#13;&#10;* Update KeyboardLogout.ino&#13;&#10;&#13;&#10;Adds &lt;buttonPin&gt; to keep code standard&#13;&#10;&#13;&#10;* Update KeyboardReprogram.ino&#13;&#10;&#13;&#10;Adds &lt;buttonPin&gt; to keep code standard&#13;&#10;&#13;&#10;* LEDC Fade implementation (#8338)&#13;&#10;&#13;&#10;* fade API + pointer fixes&#13;&#10;&#13;&#10;* Add fade api&#13;&#10;&#13;&#10;* Add fade example&#13;&#10;&#13;&#10;* update ledc docs&#13;&#10;&#13;&#10;* remove unused variables&#13;&#10;&#13;&#10;* fix path to example&#13;&#10;&#13;&#10;* Adds USB to Peripheral Manager - Arduino Core 3.0.0 (#8335)&#13;&#10;&#13;&#10;* ETHERNET - Peripheral manager implementation (#8297)&#13;&#10;&#13;&#10;* Peripheral manager implemented&#13;&#10;&#13;&#10;* remove unused variable&#13;&#10;&#13;&#10;* Add all RMII pins&#13;&#10;&#13;&#10;* fix typo&#13;&#10;&#13;&#10;* Adds HardwareSerial to Peripheral Manager Arduino 3.0.0 (#8328)&#13;&#10;&#13;&#10;* Do not limit ETHERNET in periman to only ESP32. SPI is also an option&#13;&#10;&#13;&#10;* Initial support for ESP32-C6 (#8337)&#13;&#10;&#13;&#10;* Add checks for SOC defines (#8351)&#13;&#10;&#13;&#10;* Add checks for SOC defines&#13;&#10;&#13;&#10;* Add SoC checks to BLE library&#13;&#10;&#13;&#10;* fix i2c compilation error&#13;&#10;&#13;&#10;* fix wrong placement of include&#13;&#10;&#13;&#10;* add check to SPI library&#13;&#10;&#13;&#10;* add check to USB library&#13;&#10;&#13;&#10;* add checks to Wire library&#13;&#10;&#13;&#10;* Feature/esp32h2 support (#8373)&#13;&#10;&#13;&#10;* Initial support for ESP32H2&#13;&#10;&#13;&#10;* Additional changes for ESP32H2&#13;&#10;&#13;&#10;* Update libs for ESP32H2&#13;&#10;&#13;&#10;* Fix flashing on ESP32-H2&#13;&#10;&#13;&#10;* Fix GPIO Configs for ESP32-C6 and ESP32-H2&#13;&#10;&#13;&#10;* Update Timer test sketch&#13;&#10;&#13;&#10;* Fix upload flash parameters&#13;&#10;&#13;&#10;* Use ets_write_char_uart instead of ets_printf in log_printfv&#13;&#10;&#13;&#10;* Print full chip report when log level is sufficient (#8282)&#13;&#10;&#13;&#10;* ESP32-C3 does not have ets_write_char_uart&#13;&#10;&#13;&#10;* Fix BLE gap event name&#13;&#10;&#13;&#10;* HW Testing - Pytest update (#8389)&#13;&#10;&#13;&#10;* update tests requirements&#13;&#10;&#13;&#10;* remove already handled components&#13;&#10;&#13;&#10;* Update version of pytest&#13;&#10;&#13;&#10;* Add missing ESP32-H2 to hil.yml&#13;&#10;&#13;&#10;* Updated FreeRTOS names (#8418)&#13;&#10;&#13;&#10;* HW Testing -  ESP32-C6 + ESP32-H2 fixes (#8404)&#13;&#10;&#13;&#10;* add C6/H2 to tests cfg.json&#13;&#10;&#13;&#10;* remove ,&#13;&#10;&#13;&#10;* workflow runs-on runner by matrix&#13;&#10;&#13;&#10;* Add need for arduino tag to select runner&#13;&#10;&#13;&#10;* Add cryptography to requirements.txt&#13;&#10;&#13;&#10;* Removed duplicate TX1 define for H2 (#8402)&#13;&#10;&#13;&#10;* Fix broken examples&#13;&#10;&#13;&#10;* Fixes RMT filter &amp; idle timing and setup (#8359)&#13;&#10;&#13;&#10;* Fixes Filter and Idle parameter to uint32&#13;&#10;&#13;&#10;* Fixes Filter and Idle setup&#13;&#10;&#13;&#10;* Fixes it to 5.1Libs branch&#13;&#10;&#13;&#10;* fix RMT CLK source and Filter API&#13;&#10;&#13;&#10;* fixes missing ;&#13;&#10;&#13;&#10;* fixes missing ;&#13;&#10;&#13;&#10;* fixes RMT example&#13;&#10;&#13;&#10;* IDF release/v5.1 a7b62bbcaf (#8438)&#13;&#10;&#13;&#10;* Add workflow to build executables from python scripts (#8290)&#13;&#10;&#13;&#10;* Add workflow to build executables from python scripts&#13;&#10;&#13;&#10;* Push binary to tools&#13;&#10;&#13;&#10;* Enable executable signing on Windows&#13;&#10;&#13;&#10;* Update get.py&#13;&#10;&#13;&#10;* Push binary to tools&#13;&#10;&#13;&#10;* Try with multiple files&#13;&#10;&#13;&#10;* Try more actions&#13;&#10;&#13;&#10;* Try powershell&#13;&#10;&#13;&#10;* Restore tools so they do not get rebuilt&#13;&#10;&#13;&#10;* Finalize scripts&#13;&#10;&#13;&#10;* Push binary to tools&#13;&#10;&#13;&#10;* App rollback should be after PSRAM is initialized&#13;&#10;&#13;&#10;* Correcting RX1 to GPIO4 and TX1 to GPIO5 to be consistent with documentation. Previous pin use works but is inconsistent with C6 docs.&#13;&#10;&#13;&#10;* Fixes Memory Leak (#8486)&#13;&#10;&#13;&#10;* fixes preprocessor test (#8485)&#13;&#10;&#13;&#10;* fixes preprocessor test&#13;&#10;&#13;&#10;When using `#define USE_SOFT_AP` &#13;&#10;Change&#13;&#10;`&amp;&amp; not USE_SOFT_AP` ==&gt; `&amp;&amp; !defined(USE_SOFT_AP)`&#13;&#10;&#13;&#10;* Adds any BLE capable device in WiFiProv.ino&#13;&#10;&#13;&#10;Removing ESP32 restriction for BLE Provisioning.&#13;&#10;&#13;&#10;* fix flash mode read out for C6&#13;&#10;&#13;&#10;* Add option for custom partitions without restrictions&#13;&#10;&#13;&#10;* SD_MMC update (#8298)&#13;&#10;&#13;&#10;* Updated SD_MMC lib and examples&#13;&#10;&#13;&#10;* Removed getter implementation and commented usage in examples&#13;&#10;&#13;&#10;* squashed updates&#13;&#10;&#13;&#10;* IDF release/v5.1 f0437b945f (#8599)&#13;&#10;&#13;&#10;* Update package_esp32_index.template.json&#13;&#10;&#13;&#10;* Fix printf format build error in BTAdvertisedDeviceSet.cpp&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Pedro Minatel &lt;pedro.minatel@espressif.com&gt;&#13;&#10;Co-authored-by: Rodrigo Garcia &lt;rodrigo.garcia@espressif.com&gt;&#13;&#10;Co-authored-by: Ha Thach &lt;thach@tinyusb.org&gt;&#13;&#10;Co-authored-by: Martin Turski &lt;quiret@vfemail.net&gt;&#13;&#10;Co-authored-by: raviypujar &lt;raviypujar@gmail.com&gt;&#13;&#10;Co-authored-by: Jason2866 &lt;24528715+Jason2866@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: Tomáš Pilný &lt;34927466+PilnyTomas@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: Jan Procházka &lt;90197375+P-R-O-C-H-Y@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: Daniel Berlin &lt;dberlin@dberlin.org&gt;&#13;&#10;Co-authored-by: Nima Askari (نیما عسکری) &lt;nimaltd@yahoo.com&gt;&#13;&#10;Co-authored-by: rtpmsys &lt;106180646+rtpmsys@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: bytiful &lt;55647551+bytiful@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: tmfarrington &lt;tmfarrington@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: Krzysiek S &lt;chris.streh@gmail.com&gt;&#13;&#10;Co-authored-by: surt &lt;carl.olsson@gmail.com&gt;&#13;&#10;Co-authored-by: Max Scheffler &lt;max.scheffler@pm.me&gt;&#13;&#10;Co-authored-by: Clemens Kirchgatterer &lt;clemens@1541.org&gt;&#13;&#10;Co-authored-by: Peter Pan's Techland &lt;twinkle-pirate@hotmail.com&gt;&#13;&#10;Co-authored-by: Roman &lt;programmeofficemilkyway@gmail.com&gt;&#13;&#10;Co-authored-by: Eistee &lt;Eistee82@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: David McCurley &lt;44048235+mrengineer7777@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: Gaya3N25 &lt;30388176+Gaya3N25@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: renebohne &lt;rene.bohne@gmail.com&gt;&#13;&#10;Co-authored-by: Olivér Remény &lt;25034625+remenyo@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: davidk88 &lt;david.kotar@gmail.com&gt;&#13;&#10;Co-authored-by: Vojtěch Bartoška &lt;76958047+VojtechBartoska@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: James Armstrong &lt;jamesarmstrong3@me.com&gt;&#13;&#10;Co-authored-by: Valerii Koval &lt;valeros@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: Peter G. Jensen &lt;root@petergjoel.dk&gt;" />
			<int key="additions" value="5" />
			<int key="deletions" value="1" />
			<string key="diff" value='@@ -4,6 +4,9 @@&#10;  *  Created on: Jul 17, 2017&#10;  *      Author: kolban&#10;  */&#10;+#include "soc/soc_caps.h"&#10;+#if SOC_BLE_SUPPORTED&#10;+&#10; #include "sdkconfig.h"&#10; #if defined(CONFIG_BLUEDROID_ENABLED)&#10; #include "BLEValue.h"&#10;@@ -127,4 +130,5 @@ void BLEValue::setValue(uint8_t* pData, size_t length) {&#10; } // setValue&#10; &#10; &#10;-#endif // CONFIG_BLUEDROID_ENABLED&#10;+#endif /* CONFIG_BLUEDROID_ENABLED */&#10;+#endif /* SOC_BLE_SUPPORTED */&#10;' />
			<string key="comment_change" value="False" />
		</event>
	</trace>
	<trace>
		<string key="file" value="BLEValue.h" />
	</trace>
	<trace>
		<string key="file" value="FreeRTOS.cpp" />
	</trace>
	<trace>
		<string key="file" value="GeneralUtils.cpp" />
		<event>
			<string key="timestamp" value="2023-10-06T15:50:11+03:00" />
			<string key="author" value="Me No Dev" />
			<string key="change_type" value="MODIFY" />
			<string key="commit_message" value="BLE upgrades (#8724)&#10;&#10;* Renamed library description&#13;&#10;&#13;&#10;* Updated Eddystone URL (not complete)&#13;&#10;&#13;&#10;* Updated Eddystone URL&#13;&#10;&#13;&#10;* Updated Eddystone classes and beacon scanner&#13;&#10;&#13;&#10;* Renamed examples - removing prefix BLE_&#13;&#10;&#13;&#10;* Renamed Beacon_Scanner&#13;&#10;&#13;&#10;* Updated TLM&#13;&#10;&#13;&#10;* Changed std::string to Arduino String&#13;&#10;&#13;&#10;* More std::string -&gt; String&#13;&#10;&#13;&#10;* Changed String in forgotten file&#13;&#10;&#13;&#10;* Changed .data to .c_str&#13;&#10;&#13;&#10;* Reverting single String type change&#13;&#10;&#13;&#10;* Few more fixes related to the String transition&#13;&#10;&#13;&#10;* Fixed URL and Utils error&#13;&#10;&#13;&#10;* Added and modified compatibility safeguards for BLE5 examples&#13;&#10;&#13;&#10;* Added #include WString.h&#13;&#10;&#13;&#10;* Fixed Beacon_Scanner&#13;&#10;&#13;&#10;* Remove commented include&#13;&#10;&#13;&#10;Co-authored-by: Lucas Saavedra Vaz &lt;lucassvaz@yahoo.com.br&gt;&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Tomas Pilny &lt;tomas.pilny@espressif.com&gt;&#13;&#10;Co-authored-by: Lucas Saavedra Vaz &lt;lucassvaz@yahoo.com.br&gt;" />
			<int key="additions" value="51" />
			<int key="deletions" value="44" />
			<string key="diff" value="@@ -30,7 +30,7 @@ static int base64EncodedLength(size_t length) {&#10; } // base64EncodedLength&#10; &#10; &#10;-static int base64EncodedLength(const std::string&amp; in) {&#10;+static int base64EncodedLength(const String&amp; in) {&#10; &#9;return base64EncodedLength(in.length());&#10; } // base64EncodedLength&#10; &#10;@@ -55,16 +55,17 @@ static void a4_to_a3(unsigned char* a3, unsigned char* a4) {&#10;  * @param [in] in&#10;  * @param [out] out&#10;  */&#10;-bool GeneralUtils::base64Encode(const std::string&amp; in, std::string* out) {&#10;+bool GeneralUtils::base64Encode(const String&amp; in, String* out) {&#10;+&#9;std::string std_in(in.c_str());&#10;+&#9;std::string std_out(out-&gt;c_str());&#10; &#9;int i = 0, j = 0;&#10; &#9;size_t enc_len = 0;&#10; &#9;unsigned char a3[3];&#10; &#9;unsigned char a4[4];&#10;+&#9;std_out.resize(base64EncodedLength(in));&#10; &#10;-&#9;out-&gt;resize(base64EncodedLength(in));&#10;-&#10;-&#9;int input_len = in.size();&#10;-&#9;std::string::const_iterator input = in.begin();&#10;+&#9;int input_len = std_in.length();&#10;+&#9;std::string::const_iterator input = std_in.begin();&#10; &#10; &#9;while (input_len--) {&#10; &#9;&#9;a3[i++] = *(input++);&#10;@@ -72,7 +73,7 @@ bool GeneralUtils::base64Encode(const std::string&amp; in, std::string* out) {&#10; &#9;&#9;&#9;a3_to_a4(a4, a3);&#10; &#10; &#9;&#9;&#9;for (i = 0; i &lt; 4; i++) {&#10;-&#9;&#9;&#9;&#9;(*out)[enc_len++] = kBase64Alphabet[a4[i]];&#10;+&#9;&#9;&#9;&#9;(std_out)[enc_len++] = kBase64Alphabet[a4[i]];&#10; &#9;&#9;&#9;}&#10; &#10; &#9;&#9;&#9;i = 0;&#10;@@ -87,15 +88,16 @@ bool GeneralUtils::base64Encode(const std::string&amp; in, std::string* out) {&#10; &#9;&#9;a3_to_a4(a4, a3);&#10; &#10; &#9;&#9;for (j = 0; j &lt; i + 1; j++) {&#10;-&#9;&#9;&#9;(*out)[enc_len++] = kBase64Alphabet[a4[j]];&#10;+&#9;&#9;&#9;(std_out)[enc_len++] = kBase64Alphabet[a4[j]];&#10; &#9;&#9;}&#10; &#10; &#9;&#9;while ((i++ &lt; 3)) {&#10;-&#9;&#9;&#9;(*out)[enc_len++] = '=';&#10;+&#9;&#9;&#9;(std_out)[enc_len++] = '=';&#10; &#9;&#9;}&#10; &#9;}&#10;+&#9;*out = String(std_out.c_str());&#10; &#10;-&#9;return (enc_len == out-&gt;size());&#10;+&#9;return (enc_len == out-&gt;length());&#10; } // base64Encode&#10; &#10; &#10;@@ -121,27 +123,28 @@ void GeneralUtils::dumpInfo() {&#10;  * @param [in] c The character to look form.&#10;  * @return True if the string ends with the given character.&#10;  */&#10;-bool GeneralUtils::endsWith(std::string str, char c) {&#10;-&#9;if (str.empty()) {&#10;+bool GeneralUtils::endsWith(String str, char c) {&#10;+&#9;if (str.length() == 0) {&#10; &#9;&#9;return false;&#10; &#9;}&#10;-&#9;if (str.at(str.length() - 1) == c) {&#10;+&#9;if (str.charAt(str.length() - 1) == c) {&#10; &#9;&#9;return true;&#10; &#9;}&#10; &#9;return false;&#10; } // endsWidth&#10; &#10;-&#10;-static int DecodedLength(const std::string&amp; in) {&#10;+/*&#10;+static int DecodedLength(const String&amp; in) {&#10; &#9;int numEq = 0;&#10;-&#9;int n = (int) in.size();&#10;+&#9;int n = (int) in.length();&#10; &#10;-&#9;for (std::string::const_reverse_iterator it = in.rbegin(); *it == '='; ++it) {&#10;+&#9;//for (String::const_reverse_iterator it = in.rbegin(); *it == '='; ++it) {&#10;+&#9;for (int it = in.length()-1; in.charAt(it) == '='; --it) {&#10; &#9;&#9;++numEq;&#10; &#9;}&#10; &#9;return ((6 * n) / 8) - numEq;&#10; } // DecodedLength&#10;-&#10;+*/&#10; &#10; static unsigned char b64_lookup(unsigned char c) {&#10; &#9;if(c &gt;='A' &amp;&amp; c &lt;='Z') return c - 'A';&#10;@@ -158,23 +161,24 @@ static unsigned char b64_lookup(unsigned char c) {&#10;  * @param [in] in The string to be decoded.&#10;  * @param [out] out The resulting data.&#10;  */&#10;-bool GeneralUtils::base64Decode(const std::string&amp; in, std::string* out) {&#10;+bool GeneralUtils::base64Decode(const String&amp; in, String* out) {&#10; &#9;int i = 0, j = 0;&#10; &#9;size_t dec_len = 0;&#10; &#9;unsigned char a3[3];&#10; &#9;unsigned char a4[4];&#10; &#10;-&#9;int input_len = in.size();&#10;-&#9;std::string::const_iterator input = in.begin();&#10;+&#9;int input_len = in.length();&#10;+&#9;int input_iterator = 0;&#10; &#10;-&#9;out-&gt;resize(DecodedLength(in));&#10;+&#9;//out-&gt;resize(DecodedLength(in));&#10; &#10; &#9;while (input_len--) {&#10;-&#9;&#9;if (*input == '=') {&#10;+&#9;&#9;//if (*input == '=') {&#10;+&#9;&#9;if (in[input_iterator] == '=') {&#10; &#9;&#9;&#9;break;&#10; &#9;&#9;}&#10; &#10;-&#9;&#9;a4[i++] = *(input++);&#10;+&#9;&#9;a4[i++] = in[input_iterator++];&#10; &#9;&#9;if (i == 4) {&#10; &#9;&#9;&#9;for (i = 0; i &lt;4; i++) {&#10; &#9;&#9;&#9;&#9;a4[i] = b64_lookup(a4[i]);&#10;@@ -183,7 +187,8 @@ bool GeneralUtils::base64Decode(const std::string&amp; in, std::string* out) {&#10; &#9;&#9;&#9;a4_to_a3(a3,a4);&#10; &#10; &#9;&#9;&#9;for (i = 0; i &lt; 3; i++) {&#10;-&#9;&#9;&#9;&#9;(*out)[dec_len++] = a3[i];&#10;+&#9;&#9;&#9;&#9;out-&gt;concat(a3[i]);&#10;+&#9;&#9;&#9;&#9;dec_len++;&#10; &#9;&#9;&#9;}&#10; &#10; &#9;&#9;&#9;i = 0;&#10;@@ -206,14 +211,14 @@ bool GeneralUtils::base64Decode(const std::string&amp; in, std::string* out) {&#10; &#9;&#9;}&#10; &#9;}&#10; &#10;-&#9;return (dec_len == out-&gt;size());&#10;+&#9;return (dec_len == out-&gt;length());&#10;  } // base64Decode&#10; &#10; /*&#10; void GeneralUtils::hexDump(uint8_t* pData, uint32_t length) {&#10; &#9;uint32_t index=0;&#10;-&#9;std::stringstream ascii;&#10;-&#9;std::stringstream hex;&#10;+&#9;Stringstream ascii;&#10;+&#9;Stringstream hex;&#10; &#9;char asciiBuf[80];&#10; &#9;char hexBuf[80];&#10; &#9;hex.str(&quot;&quot;);&#10;@@ -251,8 +256,8 @@ void GeneralUtils::hexDump(uint8_t* pData, uint32_t length) {&#10; /*&#10; void GeneralUtils::hexDump(uint8_t* pData, uint32_t length) {&#10; &#9;uint32_t index=0;&#10;-&#9;static std::stringstream ascii;&#10;-&#9;static std::stringstream hex;&#10;+&#9;static Stringstream ascii;&#10;+&#9;static Stringstream hex;&#10; &#9;hex.str(&quot;&quot;);&#10; &#9;ascii.str(&quot;&quot;);&#10; &#9;while(index &lt; length) {&#10;@@ -331,11 +336,11 @@ void GeneralUtils::hexDump(const uint8_t* pData, uint32_t length) {&#10;  * @param ip The 4 byte IP address.&#10;  * @return A string representation of the IP address.&#10;  */&#10;-std::string GeneralUtils::ipToString(uint8_t *ip) {&#10;+String GeneralUtils::ipToString(uint8_t *ip) {&#10; &#9;auto size = 16;&#10; &#9;char *val = (char*)malloc(size);&#10; &#9;snprintf(val, size, &quot;%d.%d.%d.%d&quot;, ip[0], ip[1], ip[2], ip[3]);&#10;-&#9;std::string res(val);&#10;+&#9;String res(val);&#10; &#9;free(val);&#10; &#9;return res;&#10; } // ipToString&#10;@@ -347,17 +352,18 @@ std::string GeneralUtils::ipToString(uint8_t *ip) {&#10;  * @param [in] delimiter The delimiter characters.&#10;  * @return A vector of strings that are the split of the input.&#10;  */&#10;-std::vector&lt;std::string&gt; GeneralUtils::split(std::string source, char delimiter) {&#10;+std::vector&lt;String&gt; GeneralUtils::split(String source, char delimiter) {&#10; &#9;// See also: https://stackoverflow.com/questions/5167625/splitting-a-c-stdstring-using-tokens-e-g&#10;-&#9;std::vector&lt;std::string&gt; strings;&#10;+&#9;std::vector&lt;String&gt; strings;&#10; &#9;std::size_t current, previous = 0;&#10;-&#9;current = source.find(delimiter);&#10;+&#9;std::string std_source(source.c_str());&#10;+&#9;current = std_source.find(delimiter);&#10; &#9;while (current != std::string::npos) {&#10;-&#9;&#9;strings.push_back(trim(source.substr(previous, current - previous)));&#10;+&#9;&#9;strings.push_back(trim(source.substring(previous, current)));&#10; &#9;&#9;previous = current + 1;&#10;-&#9;&#9;current = source.find(delimiter, previous);&#10;+&#9;&#9;current = std_source.find(delimiter, previous);&#10; &#9;}&#10;-&#9;strings.push_back(trim(source.substr(previous, current - previous)));&#10;+&#9;strings.push_back(trim(source.substring(previous, current)));&#10; &#9;return strings;&#10; } // split&#10; &#10;@@ -523,9 +529,9 @@ const char* GeneralUtils::wifiErrorToString(uint8_t errCode) {&#10;  * @param [in] value The string to convert to lower case.&#10;  * @return A lower case representation of the string.&#10;  */&#10;-std::string GeneralUtils::toLower(std::string&amp; value) {&#10;+String GeneralUtils::toLower(String&amp; value) {&#10; &#9;// Question: Could this be improved with a signature of:&#10;-&#9;// std::string&amp; GeneralUtils::toLower(std::string&amp; value)&#10;+&#9;// String&amp; GeneralUtils::toLower(String&amp; value)&#10; &#9;std::transform(value.begin(), value.end(), value.begin(), ::tolower);&#10; &#9;return value;&#10; } // toLower&#10;@@ -534,9 +540,10 @@ std::string GeneralUtils::toLower(std::string&amp; value) {&#10; /**&#10;  * @brief Remove white space from a string.&#10;  */&#10;-std::string GeneralUtils::trim(const std::string&amp; str) {&#10;-&#9;size_t first = str.find_first_not_of(' ');&#10;+String GeneralUtils::trim(const String&amp; str) {&#10;+&#9;std::string std_str(str.c_str());&#10;+&#9;size_t first = std_str.find_first_not_of(' ');&#10; &#9;if (std::string::npos == first) return str;&#10;-&#9;size_t last = str.find_last_not_of(' ');&#10;-&#9;return str.substr(first, (last - first + 1));&#10;+&#9;size_t last = std_str.find_last_not_of(' ');&#10;+&#9;return str.substring(first, (last + 1));&#10; } // trim&#10;" />
			<string key="comment_change" value="True" />
		</event>
	</trace>
	<trace>
		<string key="file" value=".skip.esp32c6" />
	</trace>
	<trace>
		<string key="file" value="BTAdvertisedDevice.h" />
	</trace>
	<trace>
		<string key="file" value="eeprom_extra.ino" />
	</trace>
	<trace>
		<string key="file" value="LEDCFade.ino" />
	</trace>
	<trace>
		<string key="file" value="LEDCSoftwareFade.ino" />
	</trace>
	<trace>
		<string key="file" value="SigmaDelta.ino" />
	</trace>
	<trace>
		<string key="file" value="ledcFrequency.ino" />
	</trace>
	<trace>
		<string key="file" value="ledcWrite_RGB.ino" />
	</trace>
	<trace>
		<string key="file" value="SmoothBlink_ULP_Code.ino" />
	</trace>
	<trace>
		<string key="file" value="ESPNow_Basic_Slave.ino" />
	</trace>
	<trace>
		<string key="file" value="ESPNow_MultiSlave_Slave.ino" />
	</trace>
	<trace>
		<string key="file" value="BasicMultiThreading.ino" />
	</trace>
	<trace>
		<string key="file" value="FunctionalInterrupt.ino" />
	</trace>
	<trace>
		<string key="file" value="FunctionalInterruptStruct.ino" />
	</trace>
	<trace>
		<string key="file" value="GPIOInterrupt.ino" />
	</trace>
	<trace>
		<string key="file" value="HallSensor.ino" />
	</trace>
	<trace>
		<string key="file" value="HiFreq_ADC.ino" />
	</trace>
	<trace>
		<string key="file" value="RMTCallback.ino" />
	</trace>
	<trace>
		<string key="file" value="RMTLoopback.ino" />
	</trace>
	<trace>
		<string key="file" value="RMTReadXJT.ino" />
	</trace>
	<trace>
		<string key="file" value="RMTWriteNeoPixel.ino" />
	</trace>
	<trace>
		<string key="file" value="RMT_CPUFreq_Test.ino" />
	</trace>
	<trace>
		<string key="file" value="RMT_LED_Blink.ino" />
	</trace>
	<trace>
		<string key="file" value="ResetReason.ino" />
	</trace>
	<trace>
		<string key="file" value="TWAIreceive.ino" />
	</trace>
	<trace>
		<string key="file" value="TWAItransmit.ino" />
	</trace>
	<trace>
		<string key="file" value="SimpleTime.ino" />
	</trace>
	<trace>
		<string key="file" value="RepeatTimer.ino" />
	</trace>
	<trace>
		<string key="file" value="WatchdogTimer.ino" />
	</trace>
	<trace>
		<string key="file" value="TouchRead.ino" />
	</trace>
	<trace>
		<string key="file" value="FFat_Test.ino" />
	</trace>
	<trace>
		<string key="file" value="FFat.cpp" />
	</trace>
	<trace>
		<string key="file" value="HTTPClient.h" />
	</trace>
	<trace>
		<string key="file" value="SimpleTone.ino" />
	</trace>
	<trace>
		<string key="file" value="I2S.cpp" />
		<event>
			<string key="timestamp" value="2023-10-05T14:54:25+03:00" />
			<string key="author" value="Me No Dev" />
			<string key="change_type" value="MODIFY" />
			<string key="commit_message" value="ESP-IDF v5.1 (#7733)&#10;&#10;* Initial changes to compile under ESP-IDF v5.1&#13;&#10;&#13;&#10;* Initial import for ESP-IDF v5.1 libs&#13;&#10;&#13;&#10;* Update toolchain&#13;&#10;&#13;&#10;* Update esp32-hal-psram.c&#13;&#10;&#13;&#10;* Add missing LDs&#13;&#10;&#13;&#10;* Update platform.txt&#13;&#10;&#13;&#10;* Stop some CI jobs, because they will always fail&#13;&#10;&#13;&#10;* Fix examples&#13;&#10;&#13;&#10;* Update app_httpd.cpp&#13;&#10;&#13;&#10;* Update ResetReason.ino&#13;&#10;&#13;&#10;* Warnings fixes&#13;&#10;&#13;&#10;* Added the example guideline and template (#7665)&#13;&#10;&#13;&#10;* Added the example guideline and template&#13;&#10;&#13;&#10;* PR review changes with some typos and grammar fixes&#13;&#10;&#13;&#10;* Changes according to the PR review&#13;&#10;&#13;&#10;* Added ESP32-S3 link to the datasheet (#7738)&#13;&#10;&#13;&#10;* Update HiFreq_ADC.ino&#13;&#10;&#13;&#10;* Replace periph_ctrl.h use because of deprecation&#13;&#10;&#13;&#10;* Replace esp_spi_flash.h use because of deprecation&#13;&#10;&#13;&#10;* Add includes to male mDNS::enableWorkstation compile&#13;&#10;&#13;&#10;* Fix ssl_client mbedtls_pk_parse_key callback&#13;&#10;&#13;&#10;* Update temperature sensor driver&#13;&#10;&#13;&#10;* Allow sketch_utils to compile with arduino-cli&#13;&#10;&#13;&#10;* Run CI with arduino-cli&#13;&#10;&#13;&#10;* Fix arduino-cli CI build on Windows&#13;&#10;&#13;&#10;* Refactor platform.txt to not use components installed through the board manager when running from git&#13;&#10;&#13;&#10;* Initial Peripheral Manager Implementation&#13;&#10;&#13;&#10;* Update SigmaDelta driver to use the new ESP-IDF driver API&#13;&#10;&#13;&#10;* Small improvements to peripheral manager and SigmaDelta&#13;&#10;&#13;&#10;* Remove deleted function from SigmaDelta header&#13;&#10;&#13;&#10;* Update DAC driver to use the new ESP-IDF driver API&#13;&#10;&#13;&#10;* Adds softAp(String) to make it compatible with ESP8266 (#7801)&#13;&#10;&#13;&#10;* Fix commentary (#7800)&#13;&#10;&#13;&#10;Minor fix based on observation done in https://github.com/espressif/arduino-esp32/issues/7795#issuecomment-1416868611&#13;&#10;&#13;&#10;* add adafruit new board feather esp32s2 reserve tft (#7794)&#13;&#10;&#13;&#10;* bugfix: add &lt;stdint.h&gt; for uint8_t to avoid compilation failure (GCC 11.2.0) (#7744)&#13;&#10;&#13;&#10;* Adding 3rd party boards for VALTRACK-V4-VTS-ESP32-C3 &amp; VALTRACK-V4-MFW-ESP32-C3 (#7735)&#13;&#10;&#13;&#10;* Added VALTRACK-V4-VTS-ESP32-C3 board definition&#13;&#10;&#13;&#10;Created pins_arduino.h &amp; made changes to boards.txt with necessary changes&#13;&#10;&#13;&#10;* Modified the URL&#13;&#10;&#13;&#10;* Renamed json&#13;&#10;&#13;&#10;* renamed all auRL&#13;&#10;&#13;&#10;* Adding VALTRACK-V4 series board definitions&#13;&#10;&#13;&#10;Added VALTRACK-V4-VTS-ESP32C3 &amp; VALTRACK-V4-MFW-ESP32-C3 board variants&#13;&#10;&#13;&#10;* Adding VALTRACK-V4 series board definitions&#13;&#10;&#13;&#10;Added VALTRACK-V4-VTS-ESP32C3 &amp; VALTRACK-V4-MFW-ESP32-C3 board variants&#13;&#10;&#13;&#10;* Reverted package_esp32_index.template.json&#13;&#10;&#13;&#10;restored package_esp32_index.template.json from edits&#13;&#10;&#13;&#10;* Reverted package_esp32_index.template.json&#13;&#10;&#13;&#10;Added new line to package_esp32_index.template.json&#13;&#10;&#13;&#10;* Update Platformio CI (#7725)&#13;&#10;&#13;&#10;* WiFiClient example fix (#7711)&#13;&#10;&#13;&#10;* Modified WiFiClient example to use thingspeak instead of non-functionig sparkfun&#13;&#10;&#13;&#10;* Moved instructions to README&#13;&#10;&#13;&#10;* Fixed spelling&#13;&#10;&#13;&#10;* Added link to S3 datasheet&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Jan Procházka &lt;90197375+P-R-O-C-H-Y@users.noreply.github.com&gt;&#13;&#10;&#13;&#10;* Mirror update from Heltec repository (#7709)&#13;&#10;&#13;&#10;Heltec updated the I2C pins in https://github.com/Heltec-Aaron-Lee/WiFi_Kit_series/commit/b10f4bf85d13fd01be80dcdb0eb59e6a8c8ba19a&#13;&#10;&#13;&#10;* Fixes BLE data printing (#7699)&#13;&#10;&#13;&#10;* Fixes BLE data printing&#13;&#10;&#13;&#10;BLE data has no '\0' terminator, therefore it can't be printed as a regular C string.&#13;&#10;This fix just prints the BLE data based on its length.&#13;&#10;&#13;&#10;* Simplify printing to a single call&#13;&#10;&#13;&#10;* split menu options + lora_32_V3 fix (#7697)&#13;&#10;&#13;&#10;* Change header gaurd name (#7696)&#13;&#10;&#13;&#10;* Fix Name (#7691)&#13;&#10;&#13;&#10;Wrong name in definitions.&#13;&#10;&#13;&#10;* Fix error in WiFiClient.cpp where the connect function fails for timeouts below 1 second (#7686)&#13;&#10;&#13;&#10;* Update WiFiClient.cpp&#13;&#10;&#13;&#10;This change will allow specifying connect timeouts below 1 second. Without this change, if connect timeouts under 1 second are given, the connect defaults to 0ms and fails. &#13;&#10;This will also allow timeouts in fractions of seconds, e.g. 1500ms. Without this change, connect timeouts are truncated to full second increments.&#13;&#10;&#13;&#10;* Make parameter timeout_ms clear&#13;&#10;&#13;&#10;* Change connection timeout_ms name for clarity&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Rodrigo Garcia &lt;rodrigo.garcia@espressif.com&gt;&#13;&#10;&#13;&#10;* fixed the function header (#7674)&#13;&#10;&#13;&#10;* fixed the function header&#13;&#10;&#13;&#10;* fixed function name and paramaters&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Jan Procházka &lt;90197375+P-R-O-C-H-Y@users.noreply.github.com&gt;&#13;&#10;&#13;&#10;* Ticker fix solving #6155 (#7664)&#13;&#10;&#13;&#10;* Wrapped Ticker functions with #pragma disabling -Wcast-function-type&#13;&#10;&#13;&#10;* Revert &quot;Wrapped Ticker functions with #pragma disabling -Wcast-function-type&quot;&#13;&#10;&#13;&#10;This reverts commit 160be7e67a10d01b6e44c4bf2521c0ccd6348976.&#13;&#10;&#13;&#10;* Fixed Ticker example&#13;&#10;&#13;&#10;* Modified Ticker example&#13;&#10;&#13;&#10;* Fixed LED_BUILTIN err for ESP32&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Jan Procházka &lt;90197375+P-R-O-C-H-Y@users.noreply.github.com&gt;&#13;&#10;&#13;&#10;* setPins fix ESP32 &quot;specified pins are not supported by this chip.&quot; (#7646)&#13;&#10;&#13;&#10;[ESP32: SDMMCFS::begin hardcodes the usage of slot 1, only check if the pins match slot 1 pins.]&#13;&#10;&#13;&#10;setPins() was testing pins D1, D2 and D3 all against D1 ... fine in 1 pin mode when all are -1 not so much if you're trying to get 4 pin mode working.&#13;&#10;I now see this function doesn't really do anything on the ESP32...accept now correctly checks that you are trying to use the slot 1 pins.&#13;&#10;&#13;&#10;Co-authored-by: Jan Procházka &lt;90197375+P-R-O-C-H-Y@users.noreply.github.com&gt;&#13;&#10;&#13;&#10;* Allow passing IP as connect method parameter in WiFiClientSecure and skip unnecessary host-ip conversions (#7643)&#13;&#10;&#13;&#10;* Add LED_BUILTIN* definitions and initialization for LEDs to stop them floating. (#7636)&#13;&#10;&#13;&#10;Co-authored-by: Rodrigo Garcia &lt;rodrigo.garcia@espressif.com&gt;&#13;&#10;&#13;&#10;* Expand path to tinuf2 image when checking existence in platformio-build.py (#7631)&#13;&#10;&#13;&#10;* Expand path to tinuf2 image when checking existence&#13;&#10;&#13;&#10;* More isFiles fixed&#13;&#10;&#13;&#10;* Remove (useless) trailing semicolon from Print.cpp (#7622)&#13;&#10;&#13;&#10;* ADD: New variant Edgebox-ESP-100 (#7771)&#13;&#10;&#13;&#10;* ADD: New variant Edgebox-ESP-100&#13;&#10;&#13;&#10;* FIX: Edgebox-ESP-100 Board.txt usb mode option change back to default value as ESP32S3&#13;&#10;&#13;&#10;* Add Crabik Slot ESP32-S3 board (#7790)&#13;&#10;&#13;&#10;* Added Crabik Slot ESP32-S3&#13;&#10;&#13;&#10;* Adding CPU frequency settings and removing excess from partition scheme settings&#13;&#10;&#13;&#10;* new variant LilyGO T-Display-S3 (#7763)&#13;&#10;&#13;&#10;* new variant LilyGO T-Display-S3&#13;&#10;&#13;&#10;https://github.com/Xinyuan-LilyGO/T-Display-S3&#13;&#10;&#13;&#10;* Add boards.txt definition&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Me No Dev &lt;me-no-dev@users.noreply.github.com&gt;&#13;&#10;&#13;&#10;* Update get.py to support Apple ARM64&#13;&#10;&#13;&#10;* Update package_esp32_index.template.json&#13;&#10;&#13;&#10;* WString Return bool (#7774)&#13;&#10;&#13;&#10;* Add Roboheart Hercules development board to the esp32-core (#7672)&#13;&#10;&#13;&#10;* added Roboheart Hercules pin definitions and board.txt entries&#13;&#10;&#13;&#10;* added package_roboheat.json for prototyping&#13;&#10;&#13;&#10;* Roboheart Hercules pins&#13;&#10;&#13;&#10;* Updated the pins&#13;&#10;&#13;&#10;* Delete package_roboheart.json&#13;&#10;&#13;&#10;* Requested changes&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: renebohne &lt;rene.bohne@gmail.com&gt;&#13;&#10;&#13;&#10;* Reword &quot;ESP-IDF as Component&quot; (#7812)&#13;&#10;&#13;&#10;I think &quot;Arduino as an ESP-IDF component&quot; or just &quot;As ESP-IDF component&quot; instead of  &quot;ESP-IDF as Component&quot; is more correct way to name the link.&#13;&#10;&#13;&#10;1. &quot;ESP-IDF as Component&quot; would imply that ESP-IDF is some sort of library for Arduino, which is (IMO) misleading, because it's true the other way around.&#13;&#10;2. It's written as &quot;Arduino as an ESP-IDF component&quot; on the webpage it points to as well.&#13;&#10;&#13;&#10;- Also I removed the capitalization from &quot;Component&quot; as I have not found a reason why is it capitalized.&#13;&#10;&#13;&#10;* add new board Adafruit Feather ESP32-S3 Reverse TFT (#7811)&#13;&#10;&#13;&#10;* Multi threading examples (tasks, queues, semaphores, mutexes) (#7660)&#13;&#10;&#13;&#10;* Moved and renamed example ESP32/FreeRTOS to MultiThreading/BasicMultiThreading&#13;&#10;&#13;&#10;* Added dummy files&#13;&#10;&#13;&#10;* Modified original example&#13;&#10;&#13;&#10;* Fixed BasicMultiThreading.ino&#13;&#10;&#13;&#10;* Added Example demonstrating use of queues&#13;&#10;&#13;&#10;* Extended info in BasicMultiThreading&#13;&#10;&#13;&#10;* Renamed Queues to singular Queue&#13;&#10;&#13;&#10;* Added Mutex example&#13;&#10;&#13;&#10;* Added Semaphore example&#13;&#10;&#13;&#10;* Moved info from example to README&#13;&#10;&#13;&#10;* Moved doc from Mutex to README&#13;&#10;&#13;&#10;* Added Queue README&#13;&#10;&#13;&#10;* Removed unecesary text&#13;&#10;&#13;&#10;* Fixed grammar&#13;&#10;&#13;&#10;* Increased stack size for Sempahore example&#13;&#10;&#13;&#10;* Added headers into .ino files&#13;&#10;&#13;&#10;* Added word Example at the end of title in README&#13;&#10;&#13;&#10;* removed unused line&#13;&#10;&#13;&#10;* Added forgotten README&#13;&#10;&#13;&#10;* Modified BasicMultiThreading example&#13;&#10;&#13;&#10;* Added missing S3 entry in README&#13;&#10;&#13;&#10;* moved location&#13;&#10;&#13;&#10;* Update ESP-IDF libs&#13;&#10;&#13;&#10;* Update CMakeLists.txt&#13;&#10;&#13;&#10;* Update esptool to v4.4&#13;&#10;&#13;&#10;* Add function timerAttachInterruptFlag (#7809)&#13;&#10;&#13;&#10;* Update esptool to v4.5&#13;&#10;&#13;&#10;* ADC refactoring (#7827)&#13;&#10;&#13;&#10;* Adc refactored + periman implementation&#13;&#10;&#13;&#10;Peripheral manager still needs to be checked if the implementation is right.&#13;&#10;&#13;&#10;* switched to working solution for milivolts read&#13;&#10;&#13;&#10;* Periman detachbus fix&#13;&#10;&#13;&#10;* coding style&#13;&#10;&#13;&#10;* fix CI warnings&#13;&#10;&#13;&#10;* fix FreeRTOS example&#13;&#10;&#13;&#10;* Update ETH.cpp&#13;&#10;&#13;&#10;* Update FunctionalInterruptStruct.ino&#13;&#10;&#13;&#10;* Update package_esp32_index.template.json&#13;&#10;&#13;&#10;* Update package_esp32_index.template.json&#13;&#10;&#13;&#10;* Fixes for the latest IDF v5.1&#13;&#10;&#13;&#10;* update esp-idf libs and toolchain&#13;&#10;&#13;&#10;* Turn OFF auto crystal frequency for ESP32 (needed by TWAI)&#13;&#10;&#13;&#10;* Update examples&#13;&#10;&#13;&#10;* Switch build to mostly use flags from files&#13;&#10;&#13;&#10;Includes can not be done this way&#13;&#10;&#13;&#10;* Reorganize flag files&#13;&#10;&#13;&#10;* Optimize chip build flags further&#13;&#10;&#13;&#10;* Revert defines from file. MBEDTLS_CONFIG_FILE does not properly expand&#13;&#10;&#13;&#10;* Add support for includes and defines from file&#13;&#10;&#13;&#10;* Replace old sdk path references in platform.txt&#13;&#10;&#13;&#10;* use gcc-ar (#8013)&#13;&#10;&#13;&#10;* Makes F_CPU generic for all SoC (#8007)&#13;&#10;&#13;&#10;Based on CONFIG_ESP_DEFAULT_CPU_FREQ_MHZ that is correctly defined in the sdkconfig file for each SoC.&#13;&#10;&#13;&#10;* TIMER refactoring (#7904)&#13;&#10;&#13;&#10;* refactor using GPtimer&#13;&#10;&#13;&#10;* Updated timer HW test&#13;&#10;&#13;&#10;* fix examples&#13;&#10;&#13;&#10;* Add v2.0.7 in issue template (#7871)&#13;&#10;&#13;&#10;* refactor using GPtimer&#13;&#10;&#13;&#10;* Updated timer HW test&#13;&#10;&#13;&#10;* fix examples&#13;&#10;&#13;&#10;* Revert &quot;Add v2.0.7 in issue template (#7871)&quot;&#13;&#10;&#13;&#10;This reverts commit fcc3b17d62ff57861f8913ca1f142fd5163b7457.&#13;&#10;&#13;&#10;* Update upload-artifact to v3 in HW CI&#13;&#10;&#13;&#10;* Revert &quot;Update upload-artifact to v3 in HW CI&quot;&#13;&#10;&#13;&#10;This reverts commit 1ba228071718ba37c4e26d98db22f77b2a7364a6.&#13;&#10;&#13;&#10;* replace resolution with frequency&#13;&#10;&#13;&#10;* remove count_down option&#13;&#10;&#13;&#10;* countup removed from examples + header&#13;&#10;&#13;&#10;* Refactored timer object&#13;&#10;&#13;&#10;* code cleanup + examples and tests fixes&#13;&#10;&#13;&#10;* TimerAlarm fix&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Vojtěch Bartoška &lt;76958047+VojtechBartoska@users.noreply.github.com&gt;&#13;&#10;&#13;&#10;* [Docs] ADC and Timer API Update (+some docs fixes) (#7906)&#13;&#10;&#13;&#10;* updated docs&#13;&#10;&#13;&#10;* remove hall sensor docs&#13;&#10;&#13;&#10;Removed Hall sensor documentation as its no longer supported in IDF-5&#13;&#10;&#13;&#10;* Fixed ESPNow examples location in docs&#13;&#10;&#13;&#10;* Last timer refactored API + gpio small fix&#13;&#10;&#13;&#10;* AlarmWrite fix&#13;&#10;&#13;&#10;* Fixes APLL/PLL with RTC Frequency (#8025)&#13;&#10;&#13;&#10;log_d() was displaying APLL for any SoC, but S3 and C3 has not such option, causing compilation errors.&#13;&#10;&#13;&#10;* Update IDF libs and fix OPI PSRAM on S3&#13;&#10;&#13;&#10;* Add setMode function HardwareSerial.c to set the esp32 uart mode for use with RS485 auto RTS (#7935)&#13;&#10;&#13;&#10;* Added setMode function to set the esp32 uart mode&#13;&#10;&#13;&#10;Used to set the esp32 uart mode for use with RS485 Half Duplex and the auto RTS pin mode. This will set/clear the RTS pin output to control the RE/DE pin on most RS485 chips.&#13;&#10;&#13;&#10;* Add Success (bool) return in some functions&#13;&#10;&#13;&#10;* Add Success (bool) return code to some functions&#13;&#10;&#13;&#10;* Add Success (bool) return to some functions&#13;&#10;&#13;&#10;* Add Success (bool) return to some functions&#13;&#10;&#13;&#10;* Fix uartSetRxTimeout return type&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Rodrigo Garcia &lt;rodrigo.garcia@espressif.com&gt;&#13;&#10;&#13;&#10;* Add support for esp-elf-gdb&#13;&#10;&#13;&#10;* WFG Crashfix (#8044)&#13;&#10;&#13;&#10;* Update component libs&#13;&#10;&#13;&#10;* IDF release/v5.1 (#8061)&#13;&#10;&#13;&#10;* IDF release/v5.1 bb9200acec&#13;&#10;&#13;&#10;* Update Esp.cpp&#13;&#10;&#13;&#10;* IDF release/v5.1 420ebd208a&#13;&#10;&#13;&#10;* Update esp32-hal-psram.c&#13;&#10;&#13;&#10;* Switch SDK to be an external package&#13;&#10;&#13;&#10;* fix path (#8096)&#13;&#10;&#13;&#10;* Makes UART work at any APB Frequency (#8097)&#13;&#10;&#13;&#10;Fixes HardwareSerial to work with IDF 5.1 on any CPU/APB Frequency (240MHz to 10MHZ), including user created low power modes.&#13;&#10;&#13;&#10;* Add required callbacks for TinyUSB DFU&#13;&#10;&#13;&#10;* Update version to 3.0.0&#13;&#10;&#13;&#10;* Add ESP.getCoreVersion() and update ESP.getChipModel()&#13;&#10;&#13;&#10;* Update timer hal for the latest 5.1&#13;&#10;&#13;&#10;* Use separate RX and TX buffer sizes in HTTP client&#13;&#10;&#13;&#10;optimizes download by allowing up to 4K packets to be received&#13;&#10;&#13;&#10;* Rename clock tree enum name in latest 5.1&#13;&#10;&#13;&#10;* ESP32-H4 support was removed in ESP-IDF v5.1&#13;&#10;&#13;&#10;* IDF release/v5.1 2004bf4e11 (#8165)&#13;&#10;&#13;&#10;* Deinit previous bus first (#8180)&#13;&#10;&#13;&#10;* TIMER - add timer_started flag, fix timerEnd() + timer HW test (#8135)&#13;&#10;&#13;&#10;* Add timer_started flag and stop before disable&#13;&#10;&#13;&#10;* Fix timer HW test&#13;&#10;&#13;&#10;* TOUCH - Peripheral manager implementation (#8129)&#13;&#10;&#13;&#10;* Touch periman implemented&#13;&#10;&#13;&#10;* Deinit previous bus first&#13;&#10;&#13;&#10;* LEDC Refactoring - Peripheral manager implemented (#8126)&#13;&#10;&#13;&#10;* LEDC periman implementation&#13;&#10;&#13;&#10;* Fix examples&#13;&#10;&#13;&#10;* Rework tone&#13;&#10;&#13;&#10;* Update ledc docs&#13;&#10;&#13;&#10;* fix missing bracket&#13;&#10;&#13;&#10;* Update analog funtions esp32-hal.h&#13;&#10;&#13;&#10;* Update CameraWebServer example&#13;&#10;&#13;&#10;* Fix HiFreq_ADC example&#13;&#10;&#13;&#10;* minor fixes - typos&#13;&#10;&#13;&#10;* Avoid calling tone/notone when tone already runs on dif. pin&#13;&#10;&#13;&#10;* Remove unused channels_resolution&#13;&#10;&#13;&#10;* GPIO - Peripheral manager implementation (#8179)&#13;&#10;&#13;&#10;* periman-implementation&#13;&#10;&#13;&#10;* fix RGB_BUILTIN and remove space&#13;&#10;&#13;&#10;* Enforces more consistency into Peripheral Manager (#8188)&#13;&#10;&#13;&#10;* Avoid log_i() message the first time a bus is assigned&#13;&#10;&#13;&#10;* Prevent operation with ESP32_BUS_TYPE_INIT&#13;&#10;&#13;&#10;* keeps coding style&#13;&#10;&#13;&#10;* do not print messages on INIT bus type&#13;&#10;&#13;&#10;* [Arduino Core 3.0.0] RMT IDF5.1 Refactoring (#7994)&#13;&#10;&#13;&#10;* RMT IDF5.1 refactoring&#13;&#10;&#13;&#10;* Fixes initial value setting&#13;&#10;&#13;&#10;* removed rmtRead() with user callback&#13;&#10;&#13;&#10;* simplify/remove Read data structure&#13;&#10;&#13;&#10;* Deep API simplification&#13;&#10;&#13;&#10;* fixes the examples&#13;&#10;&#13;&#10;* fix rmt.h&#13;&#10;&#13;&#10;* adds support to APB different frequencies&#13;&#10;&#13;&#10;* fixes CI and not defined RGB_BUILTIN&#13;&#10;&#13;&#10;* new RMT API and examples&#13;&#10;&#13;&#10;* fixing commentaties&#13;&#10;&#13;&#10;* Update esp32-hal-rgb-led.c&#13;&#10;&#13;&#10;* changes Filter API&#13;&#10;&#13;&#10;* Fixes example with Filter API&#13;&#10;&#13;&#10;* Update PlatformIO scripts for the upcoming 3.0 core (#8183)&#13;&#10;&#13;&#10;* Update PlatformIO scripts for the upcoming 3.0 core&#13;&#10;&#13;&#10;* Dynamically select proper framework-arduinoespressif32-libs package&#13;&#10;&#13;&#10;With this change the dev-platform will be dynamically configured to&#13;&#10;pull the latest .zip package with precompiled libraries from extracted from&#13;&#10;package_esp32_index.template.json&#13;&#10;&#13;&#10;* free memory on detach (#8264)&#13;&#10;&#13;&#10;* SPI - Peripheral manager implementation  (#8255)&#13;&#10;&#13;&#10;* spi periman implementation&#13;&#10;&#13;&#10;* fix header file&#13;&#10;&#13;&#10;* remove unused struct&#13;&#10;&#13;&#10;* fix missing braces&#13;&#10;&#13;&#10;* Update esp32-hal-rmt.c (#8216)&#13;&#10;&#13;&#10;Optimizing Peripheral Manager Test&#13;&#10;&#13;&#10;* I2C - Peripheral manager implementation (#8220)&#13;&#10;&#13;&#10;* i2c-master periman initial commit&#13;&#10;&#13;&#10;* i2c-master make detachbus static + comment remove&#13;&#10;&#13;&#10;* i2c-slave periman implementation&#13;&#10;&#13;&#10;* SetPinBus to INIT on i2cDeinits&#13;&#10;&#13;&#10;* Fix slave pins deinit&#13;&#10;&#13;&#10;* remove dbg logs&#13;&#10;&#13;&#10;* set ret to ESP_FAIL instead of returning&#13;&#10;&#13;&#10;* Fix warnings in hal-spi caused by pariman transition&#13;&#10;&#13;&#10;* Update esptool.py to version 4.6&#13;&#10;&#13;&#10;* Add platform support for ESP_SR&#13;&#10;&#13;&#10;* Add USB Type and valid pin check to periman&#13;&#10;&#13;&#10;* replace bus with spi-&gt;num+1 (#8279)&#13;&#10;&#13;&#10;* Remove default pins from SPI HAL&#13;&#10;&#13;&#10;* Add commented out handlers for esptool.js in TinyUSB CDC&#13;&#10;&#13;&#10;For future use&#13;&#10;&#13;&#10;* Add build defines for host os and fqbn (for debug purposes)&#13;&#10;&#13;&#10;* Provide proper memory caps total size&#13;&#10;&#13;&#10;* Update Esp.cpp&#13;&#10;&#13;&#10;* SDMMC - Peripheral manager implementation (#8289)&#13;&#10;&#13;&#10;* sdmmc periman implemented&#13;&#10;&#13;&#10;* save pins when SOC_SDMMC_USE_IOMUX&#13;&#10;&#13;&#10;* IDF release/v5.1 4bc762621d (#8292)&#13;&#10;&#13;&#10;* Adds missing pinMode (#8312)&#13;&#10;&#13;&#10;* Adds missing pinMode&#13;&#10;&#13;&#10;The example code lacks a pinMode() to initialize the GPIO 0 (button). In Arduino Core 3.0.0, it prints an error message when trying to read a not initialized GPIO.&#13;&#10;&#13;&#10;* Update KeyboardLogout.ino&#13;&#10;&#13;&#10;Adds &lt;buttonPin&gt; to keep code standard&#13;&#10;&#13;&#10;* Update KeyboardReprogram.ino&#13;&#10;&#13;&#10;Adds &lt;buttonPin&gt; to keep code standard&#13;&#10;&#13;&#10;* LEDC Fade implementation (#8338)&#13;&#10;&#13;&#10;* fade API + pointer fixes&#13;&#10;&#13;&#10;* Add fade api&#13;&#10;&#13;&#10;* Add fade example&#13;&#10;&#13;&#10;* update ledc docs&#13;&#10;&#13;&#10;* remove unused variables&#13;&#10;&#13;&#10;* fix path to example&#13;&#10;&#13;&#10;* Adds USB to Peripheral Manager - Arduino Core 3.0.0 (#8335)&#13;&#10;&#13;&#10;* ETHERNET - Peripheral manager implementation (#8297)&#13;&#10;&#13;&#10;* Peripheral manager implemented&#13;&#10;&#13;&#10;* remove unused variable&#13;&#10;&#13;&#10;* Add all RMII pins&#13;&#10;&#13;&#10;* fix typo&#13;&#10;&#13;&#10;* Adds HardwareSerial to Peripheral Manager Arduino 3.0.0 (#8328)&#13;&#10;&#13;&#10;* Do not limit ETHERNET in periman to only ESP32. SPI is also an option&#13;&#10;&#13;&#10;* Initial support for ESP32-C6 (#8337)&#13;&#10;&#13;&#10;* Add checks for SOC defines (#8351)&#13;&#10;&#13;&#10;* Add checks for SOC defines&#13;&#10;&#13;&#10;* Add SoC checks to BLE library&#13;&#10;&#13;&#10;* fix i2c compilation error&#13;&#10;&#13;&#10;* fix wrong placement of include&#13;&#10;&#13;&#10;* add check to SPI library&#13;&#10;&#13;&#10;* add check to USB library&#13;&#10;&#13;&#10;* add checks to Wire library&#13;&#10;&#13;&#10;* Feature/esp32h2 support (#8373)&#13;&#10;&#13;&#10;* Initial support for ESP32H2&#13;&#10;&#13;&#10;* Additional changes for ESP32H2&#13;&#10;&#13;&#10;* Update libs for ESP32H2&#13;&#10;&#13;&#10;* Fix flashing on ESP32-H2&#13;&#10;&#13;&#10;* Fix GPIO Configs for ESP32-C6 and ESP32-H2&#13;&#10;&#13;&#10;* Update Timer test sketch&#13;&#10;&#13;&#10;* Fix upload flash parameters&#13;&#10;&#13;&#10;* Use ets_write_char_uart instead of ets_printf in log_printfv&#13;&#10;&#13;&#10;* Print full chip report when log level is sufficient (#8282)&#13;&#10;&#13;&#10;* ESP32-C3 does not have ets_write_char_uart&#13;&#10;&#13;&#10;* Fix BLE gap event name&#13;&#10;&#13;&#10;* HW Testing - Pytest update (#8389)&#13;&#10;&#13;&#10;* update tests requirements&#13;&#10;&#13;&#10;* remove already handled components&#13;&#10;&#13;&#10;* Update version of pytest&#13;&#10;&#13;&#10;* Add missing ESP32-H2 to hil.yml&#13;&#10;&#13;&#10;* Updated FreeRTOS names (#8418)&#13;&#10;&#13;&#10;* HW Testing -  ESP32-C6 + ESP32-H2 fixes (#8404)&#13;&#10;&#13;&#10;* add C6/H2 to tests cfg.json&#13;&#10;&#13;&#10;* remove ,&#13;&#10;&#13;&#10;* workflow runs-on runner by matrix&#13;&#10;&#13;&#10;* Add need for arduino tag to select runner&#13;&#10;&#13;&#10;* Add cryptography to requirements.txt&#13;&#10;&#13;&#10;* Removed duplicate TX1 define for H2 (#8402)&#13;&#10;&#13;&#10;* Fix broken examples&#13;&#10;&#13;&#10;* Fixes RMT filter &amp; idle timing and setup (#8359)&#13;&#10;&#13;&#10;* Fixes Filter and Idle parameter to uint32&#13;&#10;&#13;&#10;* Fixes Filter and Idle setup&#13;&#10;&#13;&#10;* Fixes it to 5.1Libs branch&#13;&#10;&#13;&#10;* fix RMT CLK source and Filter API&#13;&#10;&#13;&#10;* fixes missing ;&#13;&#10;&#13;&#10;* fixes missing ;&#13;&#10;&#13;&#10;* fixes RMT example&#13;&#10;&#13;&#10;* IDF release/v5.1 a7b62bbcaf (#8438)&#13;&#10;&#13;&#10;* Add workflow to build executables from python scripts (#8290)&#13;&#10;&#13;&#10;* Add workflow to build executables from python scripts&#13;&#10;&#13;&#10;* Push binary to tools&#13;&#10;&#13;&#10;* Enable executable signing on Windows&#13;&#10;&#13;&#10;* Update get.py&#13;&#10;&#13;&#10;* Push binary to tools&#13;&#10;&#13;&#10;* Try with multiple files&#13;&#10;&#13;&#10;* Try more actions&#13;&#10;&#13;&#10;* Try powershell&#13;&#10;&#13;&#10;* Restore tools so they do not get rebuilt&#13;&#10;&#13;&#10;* Finalize scripts&#13;&#10;&#13;&#10;* Push binary to tools&#13;&#10;&#13;&#10;* App rollback should be after PSRAM is initialized&#13;&#10;&#13;&#10;* Correcting RX1 to GPIO4 and TX1 to GPIO5 to be consistent with documentation. Previous pin use works but is inconsistent with C6 docs.&#13;&#10;&#13;&#10;* Fixes Memory Leak (#8486)&#13;&#10;&#13;&#10;* fixes preprocessor test (#8485)&#13;&#10;&#13;&#10;* fixes preprocessor test&#13;&#10;&#13;&#10;When using `#define USE_SOFT_AP` &#13;&#10;Change&#13;&#10;`&amp;&amp; not USE_SOFT_AP` ==&gt; `&amp;&amp; !defined(USE_SOFT_AP)`&#13;&#10;&#13;&#10;* Adds any BLE capable device in WiFiProv.ino&#13;&#10;&#13;&#10;Removing ESP32 restriction for BLE Provisioning.&#13;&#10;&#13;&#10;* fix flash mode read out for C6&#13;&#10;&#13;&#10;* Add option for custom partitions without restrictions&#13;&#10;&#13;&#10;* SD_MMC update (#8298)&#13;&#10;&#13;&#10;* Updated SD_MMC lib and examples&#13;&#10;&#13;&#10;* Removed getter implementation and commented usage in examples&#13;&#10;&#13;&#10;* squashed updates&#13;&#10;&#13;&#10;* IDF release/v5.1 f0437b945f (#8599)&#13;&#10;&#13;&#10;* Update package_esp32_index.template.json&#13;&#10;&#13;&#10;* Fix printf format build error in BTAdvertisedDeviceSet.cpp&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Pedro Minatel &lt;pedro.minatel@espressif.com&gt;&#13;&#10;Co-authored-by: Rodrigo Garcia &lt;rodrigo.garcia@espressif.com&gt;&#13;&#10;Co-authored-by: Ha Thach &lt;thach@tinyusb.org&gt;&#13;&#10;Co-authored-by: Martin Turski &lt;quiret@vfemail.net&gt;&#13;&#10;Co-authored-by: raviypujar &lt;raviypujar@gmail.com&gt;&#13;&#10;Co-authored-by: Jason2866 &lt;24528715+Jason2866@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: Tomáš Pilný &lt;34927466+PilnyTomas@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: Jan Procházka &lt;90197375+P-R-O-C-H-Y@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: Daniel Berlin &lt;dberlin@dberlin.org&gt;&#13;&#10;Co-authored-by: Nima Askari (نیما عسکری) &lt;nimaltd@yahoo.com&gt;&#13;&#10;Co-authored-by: rtpmsys &lt;106180646+rtpmsys@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: bytiful &lt;55647551+bytiful@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: tmfarrington &lt;tmfarrington@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: Krzysiek S &lt;chris.streh@gmail.com&gt;&#13;&#10;Co-authored-by: surt &lt;carl.olsson@gmail.com&gt;&#13;&#10;Co-authored-by: Max Scheffler &lt;max.scheffler@pm.me&gt;&#13;&#10;Co-authored-by: Clemens Kirchgatterer &lt;clemens@1541.org&gt;&#13;&#10;Co-authored-by: Peter Pan's Techland &lt;twinkle-pirate@hotmail.com&gt;&#13;&#10;Co-authored-by: Roman &lt;programmeofficemilkyway@gmail.com&gt;&#13;&#10;Co-authored-by: Eistee &lt;Eistee82@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: David McCurley &lt;44048235+mrengineer7777@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: Gaya3N25 &lt;30388176+Gaya3N25@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: renebohne &lt;rene.bohne@gmail.com&gt;&#13;&#10;Co-authored-by: Olivér Remény &lt;25034625+remenyo@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: davidk88 &lt;david.kotar@gmail.com&gt;&#13;&#10;Co-authored-by: Vojtěch Bartoška &lt;76958047+VojtechBartoska@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: James Armstrong &lt;jamesarmstrong3@me.com&gt;&#13;&#10;Co-authored-by: Valerii Koval &lt;valeros@users.noreply.github.com&gt;&#13;&#10;Co-authored-by: Peter G. Jensen &lt;root@petergjoel.dk&gt;" />
			<int key="additions" value="15" />
			<int key="deletions" value="1" />
			<string key="diff" value="@@ -144,7 +144,20 @@ int I2SClass::_installDriver(){&#10;     .intr_alloc_flags = ESP_INTR_FLAG_LEVEL2,&#10;     .dma_buf_count = _I2S_DMA_BUFFER_COUNT,&#10;     .dma_buf_len = _i2s_dma_buffer_size,&#10;-    .use_apll = false&#10;+    .use_apll = false,&#10;+    #warning The following values are new and need to be checked&#10;+    .tx_desc_auto_clear = true,&#10;+    .fixed_mclk = 0,&#10;+    .mclk_multiple = esp_i2s::I2S_MCLK_MULTIPLE_128,&#10;+    .bits_per_chan = esp_i2s::I2S_BITS_PER_CHAN_DEFAULT&#10;+#if SOC_I2S_SUPPORTS_TDM&#10;+    ,.chan_mask = esp_i2s::I2S_CHANNEL_STEREO,&#10;+    .total_chan = 2,&#10;+    .left_align = false,&#10;+    .big_edin = false,&#10;+    .bit_order_msb = false,&#10;+    .skip_msk = false&#10;+#endif // SOC_I2S_SUPPORTS_TDM&#10;   };&#10; &#10;   if(_driveClock == false){&#10;@@ -317,6 +330,7 @@ int I2SClass::begin(int mode, int sampleRate, int bitsPerSample, bool driveClock&#10; int I2SClass::_applyPinSetting(){&#10;   if(_driverInstalled){&#10;     esp_i2s::i2s_pin_config_t pin_config = {&#10;+      .mck_io_num = I2S_PIN_NO_CHANGE,&#10;       .bck_io_num = _sckPin,&#10;       .ws_io_num = _fsPin,&#10;       .data_out_num = I2S_PIN_NO_CHANGE,&#10;" />
			<string key="comment_change" value="True" />
		</event>
	</trace>
	<trace>
		<string key="file" value="LITTLEFS_test.ino" />
	</trace>
	<trace>
		<string key="file" value="SD_Test.ino" />
	</trace>
	<trace>
		<string key="file" value="SD_time.ino" />
	</trace>
	<trace>
		<string key="file" value="SDMMC_time.ino" />
	</trace>
	<trace>
		<string key="file" value="SD_MMC.h" />
	</trace>
	<trace>
		<string key="file" value="SPI.cpp" />
	</trace>
	<trace>
		<string key="file" value="SPI.h" />
	</trace>
	<trace>
		<string key="file" value="SPIFFS_Test.ino" />
	</trace>
	<trace>
		<string key="file" value="CompositeDevice.ino" />
	</trace>
	<trace>
		<string key="file" value="CustomHIDDevice.ino" />
	</trace>
	<trace>
		<string key="file" value="KeyboardLogout.ino" />
	</trace>
	<trace>
		<string key="file" value="KeyboardReprogram.ino" />
	</trace>
	<trace>
		<string key="file" value="USBMSC.ino" />
	</trace>
	<trace>
		<string key="file" value="USBSerial.ino" />
	</trace>
	<trace>
		<string key="file" value="USBVendor.ino" />
	</trace>
	<trace>
		<string key="file" value="USBHID.cpp" />
	</trace>
	<trace>
		<string key="file" value="USBHID.h" />
	</trace>
	<trace>
		<string key="file" value="USBHIDConsumerControl.cpp" />
	</trace>
	<trace>
		<string key="file" value="USBHIDConsumerControl.h" />
	</trace>
	<trace>
		<string key="file" value="USBHIDGamepad.cpp" />
	</trace>
	<trace>
		<string key="file" value="USBHIDGamepad.h" />
	</trace>
	<trace>
		<string key="file" value="USBHIDKeyboard.cpp" />
	</trace>
	<trace>
		<string key="file" value="USBHIDKeyboard.h" />
	</trace>
	<trace>
		<string key="file" value="USBHIDMouse.cpp" />
	</trace>
	<trace>
		<string key="file" value="USBHIDMouse.h" />
	</trace>
	<trace>
		<string key="file" value="USBHIDSystemControl.cpp" />
	</trace>
	<trace>
		<string key="file" value="USBHIDSystemControl.h" />
	</trace>
	<trace>
		<string key="file" value="USBHIDVendor.cpp" />
	</trace>
	<trace>
		<string key="file" value="USBHIDVendor.h" />
	</trace>
	<trace>
		<string key="file" value="USBVendor.cpp" />
	</trace>
	<trace>
		<string key="file" value="USBVendor.h" />
	</trace>
	<trace>
		<string key="file" value="StartCounter.ino.bin" />
	</trace>
	<trace>
		<string key="file" value="HTTPS_OTA_Update.ino" />
	</trace>
	<trace>
		<string key="file" value="HttpsOTAUpdate.cpp" />
	</trace>
	<trace>
		<string key="file" value="SDWebServer.ino" />
	</trace>
	<trace>
		<string key="file" value="WebServer.h" />
	</trace>
	<trace>
		<string key="file" value="FTM_Initiator.ino" />
	</trace>
	<trace>
		<string key="file" value="WiFiScan.ino" />
	</trace>
	<trace>
		<string key="file" value="WireMaster.ino" />
	</trace>
	<trace>
		<string key="file" value="WireSlave.ino" />
	</trace>
	<trace>
		<string key="file" value="Wire.cpp" />
	</trace>
	<trace>
		<string key="file" value="Wire.h" />
	</trace>
	<trace>
		<string key="file" value="package.json" />
	</trace>
	<trace>
		<string key="file" value="package_esp32_index.template.json" />
	</trace>
	<trace>
		<string key="file" value="cfg.json" />
	</trace>
	<trace>
		<string key="file" value="requirements.txt" />
	</trace>
	<trace>
		<string key="file" value="timer.ino" />
	</trace>
	<trace>
		<string key="file" value="espota.exe" />
	</trace>
	<trace>
		<string key="file" value="gen_esp32part.py" />
	</trace>
	<trace>
		<string key="file" value="get.exe" />
	</trace>
	<trace>
		<string key="file" value="get.py" />
	</trace>
	<trace>
		<string key="file" value="esp_sr_16.csv" />
	</trace>
	<trace>
		<string key="file" value="platformio-build-esp32.py" />
	</trace>
	<trace>
		<string key="file" value="platformio-build-esp32c3.py" />
	</trace>
	<trace>
		<string key="file" value="platformio-build-esp32s2.py" />
	</trace>
	<trace>
		<string key="file" value="platformio-build-esp32s3.py" />
	</trace>
	<trace>
		<string key="file" value="bootloader_dio_40m.elf" />
	</trace>
	<trace>
		<string key="file" value="bootloader_dio_80m.elf" />
	</trace>
	<trace>
		<string key="file" value="bootloader_dout_40m.elf" />
	</trace>
	<trace>
		<string key="file" value="bootloader_dout_80m.elf" />
	</trace>
	<trace>
		<string key="file" value="bootloader_qio_40m.elf" />
	</trace>
	<trace>
		<string key="file" value="bootloader_qio_80m.elf" />
	</trace>
	<trace>
		<string key="file" value="bootloader_qout_40m.elf" />
	</trace>
	<trace>
		<string key="file" value="bootloader_qout_80m.elf" />
	</trace>
	<trace>
		<string key="file" value="sdkconfig.h" />
	</trace>
	<trace>
		<string key="file" value="libspi_flash.a" />
	</trace>
	<trace>
		<string key="file" value="esp_app_trace.h" />
	</trace>
	<trace>
		<string key="file" value="esp_app_trace_util.h" />
	</trace>
	<trace>
		<string key="file" value="esp_sysview_trace.h" />
	</trace>
	<trace>
		<string key="file" value="esp_ota_ops.h" />
	</trace>
	<trace>
		<string key="file" value="asio.hpp" />
	</trace>
	<trace>
		<string key="file" value="associated_allocator.hpp" />
	</trace>
	<trace>
		<string key="file" value="associated_executor.hpp" />
	</trace>
	<trace>
		<string key="file" value="async_result.hpp" />
	</trace>
	<trace>
		<string key="file" value="awaitable.hpp" />
	</trace>
	<trace>
		<string key="file" value="basic_datagram_socket.hpp" />
	</trace>
	<trace>
		<string key="file" value="basic_deadline_timer.hpp" />
	</trace>
	<trace>
		<string key="file" value="basic_io_object.hpp" />
	</trace>
	<trace>
		<string key="file" value="basic_raw_socket.hpp" />
	</trace>
	<trace>
		<string key="file" value="basic_seq_packet_socket.hpp" />
	</trace>
	<trace>
		<string key="file" value="basic_serial_port.hpp" />
	</trace>
	<trace>
		<string key="file" value="basic_signal_set.hpp" />
	</trace>
	<trace>
		<string key="file" value="basic_socket.hpp" />
	</trace>
	<trace>
		<string key="file" value="basic_socket_acceptor.hpp" />
	</trace>
	<trace>
		<string key="file" value="basic_socket_iostream.hpp" />
	</trace>
	<trace>
		<string key="file" value="basic_socket_streambuf.hpp" />
	</trace>
	<trace>
		<string key="file" value="basic_stream_socket.hpp" />
	</trace>
	<trace>
		<string key="file" value="basic_streambuf.hpp" />
	</trace>
	<trace>
		<string key="file" value="basic_streambuf_fwd.hpp" />
	</trace>
	<trace>
		<string key="file" value="basic_waitable_timer.hpp" />
	</trace>
	<trace>
		<string key="file" value="bind_executor.hpp" />
	</trace>
	<trace>
		<string key="file" value="buffer.hpp" />
	</trace>
	<trace>
		<string key="file" value="buffered_read_stream.hpp" />
	</trace>
	<trace>
		<string key="file" value="buffered_read_stream_fwd.hpp" />
	</trace>
	<trace>
		<string key="file" value="buffered_stream.hpp" />
	</trace>
	<trace>
		<string key="file" value="buffered_stream_fwd.hpp" />
	</trace>
	<trace>
		<string key="file" value="buffered_write_stream.hpp" />
	</trace>
	<trace>
		<string key="file" value="buffered_write_stream_fwd.hpp" />
	</trace>
	<trace>
		<string key="file" value="buffers_iterator.hpp" />
	</trace>
	<trace>
		<string key="file" value="co_spawn.hpp" />
	</trace>
	<trace>
		<string key="file" value="completion_condition.hpp" />
	</trace>
	<trace>
		<string key="file" value="compose.hpp" />
	</trace>
	<trace>
		<string key="file" value="connect.hpp" />
	</trace>
	<trace>
		<string key="file" value="coroutine.hpp" />
	</trace>
	<trace>
		<string key="file" value="deadline_timer.hpp" />
	</trace>
	<trace>
		<string key="file" value="defer.hpp" />
	</trace>
	<trace>
		<string key="file" value="detached.hpp" />
	</trace>
	<trace>
		<string key="file" value="array.hpp" />
	</trace>
	<trace>
		<string key="file" value="array_fwd.hpp" />
	</trace>
	<trace>
		<string key="file" value="assert.hpp" />
	</trace>
	<trace>
		<string key="file" value="atomic_count.hpp" />
	</trace>
	<trace>
		<string key="file" value="base_from_completion_cond.hpp" />
	</trace>
	<trace>
		<string key="file" value="bind_handler.hpp" />
	</trace>
	<trace>
		<string key="file" value="buffer_resize_guard.hpp" />
	</trace>
	<trace>
		<string key="file" value="buffer_sequence_adapter.hpp" />
	</trace>
	<trace>
		<string key="file" value="buffered_stream_storage.hpp" />
	</trace>
	<trace>
		<string key="file" value="call_stack.hpp" />
	</trace>
	<trace>
		<string key="file" value="chrono.hpp" />
	</trace>
	<trace>
		<string key="file" value="chrono_time_traits.hpp" />
	</trace>
	<trace>
		<string key="file" value="completion_handler.hpp" />
	</trace>
	<trace>
		<string key="file" value="concurrency_hint.hpp" />
	</trace>
	<trace>
		<string key="file" value="conditionally_enabled_event.hpp" />
	</trace>
	<trace>
		<string key="file" value="conditionally_enabled_mutex.hpp" />
	</trace>
	<trace>
		<string key="file" value="config.hpp" />
	</trace>
	<trace>
		<string key="file" value="consuming_buffers.hpp" />
	</trace>
	<trace>
		<string key="file" value="cstddef.hpp" />
	</trace>
	<trace>
		<string key="file" value="cstdint.hpp" />
	</trace>
	<trace>
		<string key="file" value="date_time_fwd.hpp" />
	</trace>
	<trace>
		<string key="file" value="deadline_timer_service.hpp" />
	</trace>
	<trace>
		<string key="file" value="dependent_type.hpp" />
	</trace>
	<trace>
		<string key="file" value="descriptor_ops.hpp" />
	</trace>
	<trace>
		<string key="file" value="descriptor_read_op.hpp" />
	</trace>
	<trace>
		<string key="file" value="descriptor_write_op.hpp" />
	</trace>
	<trace>
		<string key="file" value="dev_poll_reactor.hpp" />
	</trace>
	<trace>
		<string key="file" value="epoll_reactor.hpp" />
	</trace>
	<trace>
		<string key="file" value="event.hpp" />
	</trace>
	<trace>
		<string key="file" value="eventfd_select_interrupter.hpp" />
	</trace>
	<trace>
		<string key="file" value="executor_function.hpp" />
	</trace>
	<trace>
		<string key="file" value="executor_op.hpp" />
	</trace>
	<trace>
		<string key="file" value="fd_set_adapter.hpp" />
	</trace>
	<trace>
		<string key="file" value="fenced_block.hpp" />
	</trace>
	<trace>
		<string key="file" value="functional.hpp" />
	</trace>
	<trace>
		<string key="file" value="future.hpp" />
	</trace>
	<trace>
		<string key="file" value="gcc_arm_fenced_block.hpp" />
	</trace>
	<trace>
		<string key="file" value="gcc_hppa_fenced_block.hpp" />
	</trace>
	<trace>
		<string key="file" value="gcc_sync_fenced_block.hpp" />
	</trace>
	<trace>
		<string key="file" value="gcc_x86_fenced_block.hpp" />
	</trace>
	<trace>
		<string key="file" value="global.hpp" />
	</trace>
	<trace>
		<string key="file" value="handler_alloc_helpers.hpp" />
	</trace>
	<trace>
		<string key="file" value="handler_cont_helpers.hpp" />
	</trace>
	<trace>
		<string key="file" value="handler_invoke_helpers.hpp" />
	</trace>
	<trace>
		<string key="file" value="handler_tracking.hpp" />
	</trace>
	<trace>
		<string key="file" value="handler_type_requirements.hpp" />
	</trace>
	<trace>
		<string key="file" value="handler_work.hpp" />
	</trace>
	<trace>
		<string key="file" value="hash_map.hpp" />
	</trace>
	<trace>
		<string key="file" value="kqueue_reactor.hpp" />
	</trace>
	<trace>
		<string key="file" value="select_reactor.hpp" />
	</trace>
	<trace>
		<string key="file" value="service_registry.hpp" />
	</trace>
	<trace>
		<string key="file" value="strand_executor_service.hpp" />
	</trace>
	<trace>
		<string key="file" value="strand_service.hpp" />
	</trace>
	<trace>
		<string key="file" value="win_iocp_io_context.hpp" />
	</trace>
	<trace>
		<string key="file" value="winrt_timer_scheduler.hpp" />
	</trace>
	<trace>
		<string key="file" value="io_control.hpp" />
	</trace>
	<trace>
		<string key="file" value="io_object_executor.hpp" />
	</trace>
	<trace>
		<string key="file" value="io_object_impl.hpp" />
	</trace>
	<trace>
		<string key="file" value="is_buffer_sequence.hpp" />
	</trace>
	<trace>
		<string key="file" value="is_executor.hpp" />
	</trace>
	<trace>
		<string key="file" value="keyword_tss_ptr.hpp" />
	</trace>
	<trace>
		<string key="file" value="limits.hpp" />
	</trace>
	<trace>
		<string key="file" value="local_free_on_block_exit.hpp" />
	</trace>
	<trace>
		<string key="file" value="macos_fenced_block.hpp" />
	</trace>
	<trace>
		<string key="file" value="memory.hpp" />
	</trace>
	<trace>
		<string key="file" value="mutex.hpp" />
	</trace>
	<trace>
		<string key="file" value="non_const_lvalue.hpp" />
	</trace>
	<trace>
		<string key="file" value="noncopyable.hpp" />
	</trace>
	<trace>
		<string key="file" value="null_event.hpp" />
	</trace>
	<trace>
		<string key="file" value="null_fenced_block.hpp" />
	</trace>
	<trace>
		<string key="file" value="null_global.hpp" />
	</trace>
	<trace>
		<string key="file" value="null_mutex.hpp" />
	</trace>
	<trace>
		<string key="file" value="null_reactor.hpp" />
	</trace>
	<trace>
		<string key="file" value="null_signal_blocker.hpp" />
	</trace>
	<trace>
		<string key="file" value="null_socket_service.hpp" />
	</trace>
	<trace>
		<string key="file" value="null_static_mutex.hpp" />
	</trace>
	<trace>
		<string key="file" value="null_thread.hpp" />
	</trace>
	<trace>
		<string key="file" value="null_tss_ptr.hpp" />
	</trace>
	<trace>
		<string key="file" value="object_pool.hpp" />
	</trace>
	<trace>
		<string key="file" value="old_win_sdk_compat.hpp" />
	</trace>
	<trace>
		<string key="file" value="op_queue.hpp" />
	</trace>
	<trace>
		<string key="file" value="operation.hpp" />
	</trace>
	<trace>
		<string key="file" value="pipe_select_interrupter.hpp" />
	</trace>
	<trace>
		<string key="file" value="pop_options.hpp" />
	</trace>
	<trace>
		<string key="file" value="posix_event.hpp" />
	</trace>
	<trace>
		<string key="file" value="posix_fd_set_adapter.hpp" />
	</trace>
	<trace>
		<string key="file" value="posix_global.hpp" />
	</trace>
	<trace>
		<string key="file" value="posix_mutex.hpp" />
	</trace>
	<trace>
		<string key="file" value="posix_signal_blocker.hpp" />
	</trace>
	<trace>
		<string key="file" value="posix_static_mutex.hpp" />
	</trace>
	<trace>
		<string key="file" value="posix_thread.hpp" />
	</trace>
	<trace>
		<string key="file" value="posix_tss_ptr.hpp" />
	</trace>
	<trace>
		<string key="file" value="push_options.hpp" />
	</trace>
	<trace>
		<string key="file" value="reactive_descriptor_service.hpp" />
	</trace>
	<trace>
		<string key="file" value="reactive_null_buffers_op.hpp" />
	</trace>
	<trace>
		<string key="file" value="reactive_serial_port_service.hpp" />
	</trace>
	<trace>
		<string key="file" value="reactive_socket_accept_op.hpp" />
	</trace>
	<trace>
		<string key="file" value="reactive_socket_connect_op.hpp" />
	</trace>
	<trace>
		<string key="file" value="reactive_socket_recv_op.hpp" />
	</trace>
	<trace>
		<string key="file" value="reactive_socket_recvfrom_op.hpp" />
	</trace>
	<trace>
		<string key="file" value="reactive_socket_recvmsg_op.hpp" />
	</trace>
	<trace>
		<string key="file" value="reactive_socket_send_op.hpp" />
	</trace>
	<trace>
		<string key="file" value="reactive_socket_sendto_op.hpp" />
	</trace>
	<trace>
		<string key="file" value="reactive_socket_service.hpp" />
	</trace>
	<trace>
		<string key="file" value="reactive_socket_service_base.hpp" />
	</trace>
	<trace>
		<string key="file" value="reactive_wait_op.hpp" />
	</trace>
	<trace>
		<string key="file" value="reactor.hpp" />
	</trace>
	<trace>
		<string key="file" value="reactor_fwd.hpp" />
	</trace>
	<trace>
		<string key="file" value="reactor_op.hpp" />
	</trace>
	<trace>
		<string key="file" value="reactor_op_queue.hpp" />
	</trace>
	<trace>
		<string key="file" value="recycling_allocator.hpp" />
	</trace>
	<trace>
		<string key="file" value="regex_fwd.hpp" />
	</trace>
	<trace>
		<string key="file" value="resolve_endpoint_op.hpp" />
	</trace>
	<trace>
		<string key="file" value="resolve_op.hpp" />
	</trace>
	<trace>
		<string key="file" value="resolve_query_op.hpp" />
	</trace>
	<trace>
		<string key="file" value="resolver_service.hpp" />
	</trace>
	<trace>
		<string key="file" value="resolver_service_base.hpp" />
	</trace>
	<trace>
		<string key="file" value="scheduler.hpp" />
	</trace>
	<trace>
		<string key="file" value="scheduler_operation.hpp" />
	</trace>
	<trace>
		<string key="file" value="scheduler_thread_info.hpp" />
	</trace>
	<trace>
		<string key="file" value="scoped_lock.hpp" />
	</trace>
	<trace>
		<string key="file" value="scoped_ptr.hpp" />
	</trace>
	<trace>
		<string key="file" value="select_interrupter.hpp" />
	</trace>
	<trace>
		<string key="file" value="signal_blocker.hpp" />
	</trace>
	<trace>
		<string key="file" value="signal_handler.hpp" />
	</trace>
	<trace>
		<string key="file" value="signal_init.hpp" />
	</trace>
	<trace>
		<string key="file" value="signal_op.hpp" />
	</trace>
	<trace>
		<string key="file" value="signal_set_service.hpp" />
	</trace>
	<trace>
		<string key="file" value="socket_holder.hpp" />
	</trace>
	<trace>
		<string key="file" value="socket_ops.hpp" />
	</trace>
	<trace>
		<string key="file" value="socket_option.hpp" />
	</trace>
	<trace>
		<string key="file" value="socket_select_interrupter.hpp" />
	</trace>
	<trace>
		<string key="file" value="socket_types.hpp" />
	</trace>
	<trace>
		<string key="file" value="solaris_fenced_block.hpp" />
	</trace>
	<trace>
		<string key="file" value="static_mutex.hpp" />
	</trace>
	<trace>
		<string key="file" value="std_event.hpp" />
	</trace>
	<trace>
		<string key="file" value="std_fenced_block.hpp" />
	</trace>
	<trace>
		<string key="file" value="std_global.hpp" />
	</trace>
	<trace>
		<string key="file" value="std_mutex.hpp" />
	</trace>
	<trace>
		<string key="file" value="std_static_mutex.hpp" />
	</trace>
	<trace>
		<string key="file" value="std_thread.hpp" />
	</trace>
	<trace>
		<string key="file" value="string_view.hpp" />
	</trace>
	<trace>
		<string key="file" value="thread.hpp" />
	</trace>
	<trace>
		<string key="file" value="thread_context.hpp" />
	</trace>
	<trace>
		<string key="file" value="thread_group.hpp" />
	</trace>
	<trace>
		<string key="file" value="thread_info_base.hpp" />
	</trace>
	<trace>
		<string key="file" value="throw_error.hpp" />
	</trace>
	<trace>
		<string key="file" value="throw_exception.hpp" />
	</trace>
	<trace>
		<string key="file" value="timer_queue.hpp" />
	</trace>
	<trace>
		<string key="file" value="timer_queue_base.hpp" />
	</trace>
	<trace>
		<string key="file" value="timer_queue_ptime.hpp" />
	</trace>
	<trace>
		<string key="file" value="timer_queue_set.hpp" />
	</trace>
	<trace>
		<string key="file" value="timer_scheduler.hpp" />
	</trace>
	<trace>
		<string key="file" value="timer_scheduler_fwd.hpp" />
	</trace>
	<trace>
		<string key="file" value="tss_ptr.hpp" />
	</trace>
	<trace>
		<string key="file" value="type_traits.hpp" />
	</trace>
	<trace>
		<string key="file" value="variadic_templates.hpp" />
	</trace>
	<trace>
		<string key="file" value="wait_handler.hpp" />
	</trace>
	<trace>
		<string key="file" value="wait_op.hpp" />
	</trace>
	<trace>
		<string key="file" value="win_event.hpp" />
	</trace>
	<trace>
		<string key="file" value="win_fd_set_adapter.hpp" />
	</trace>
	<trace>
		<string key="file" value="win_fenced_block.hpp" />
	</trace>
	<trace>
		<string key="file" value="win_global.hpp" />
	</trace>
	<trace>
		<string key="file" value="win_iocp_handle_read_op.hpp" />
	</trace>
	<trace>
		<string key="file" value="win_iocp_handle_service.hpp" />
	</trace>
	<trace>
		<string key="file" value="win_iocp_handle_write_op.hpp" />
	</trace>
	<trace>
		<string key="file" value="win_iocp_null_buffers_op.hpp" />
	</trace>
	<trace>
		<string key="file" value="win_iocp_operation.hpp" />
	</trace>
	<trace>
		<string key="file" value="win_iocp_overlapped_op.hpp" />
	</trace>
	<trace>
		<string key="file" value="win_iocp_overlapped_ptr.hpp" />
	</trace>
	<trace>
		<string key="file" value="win_iocp_serial_port_service.hpp" />
	</trace>
	<trace>
		<string key="file" value="win_iocp_socket_accept_op.hpp" />
	</trace>
	<trace>
		<string key="file" value="win_iocp_socket_connect_op.hpp" />
	</trace>
	<trace>
		<string key="file" value="win_iocp_socket_recv_op.hpp" />
	</trace>
	<trace>
		<string key="file" value="win_iocp_socket_recvfrom_op.hpp" />
	</trace>
	<trace>
		<string key="file" value="win_iocp_socket_recvmsg_op.hpp" />
	</trace>
	<trace>
		<string key="file" value="win_iocp_socket_send_op.hpp" />
	</trace>
	<trace>
		<string key="file" value="win_iocp_socket_service.hpp" />
	</trace>
	<trace>
		<string key="file" value="win_iocp_socket_service_base.hpp" />
	</trace>
	<trace>
		<string key="file" value="win_iocp_thread_info.hpp" />
	</trace>
	<trace>
		<string key="file" value="win_iocp_wait_op.hpp" />
	</trace>
	<trace>
		<string key="file" value="win_mutex.hpp" />
	</trace>
	<trace>
		<string key="file" value="win_object_handle_service.hpp" />
	</trace>
	<trace>
		<string key="file" value="win_static_mutex.hpp" />
	</trace>
	<trace>
		<string key="file" value="win_thread.hpp" />
	</trace>
	<trace>
		<string key="file" value="win_tss_ptr.hpp" />
	</trace>
	<trace>
		<string key="file" value="winapp_thread.hpp" />
	</trace>
	<trace>
		<string key="file" value="wince_thread.hpp" />
	</trace>
	<trace>
		<string key="file" value="winrt_async_manager.hpp" />
	</trace>
	<trace>
		<string key="file" value="winrt_async_op.hpp" />
	</trace>
	<trace>
		<string key="file" value="winrt_resolve_op.hpp" />
	</trace>
	<trace>
		<string key="file" value="winrt_resolver_service.hpp" />
	</trace>
	<trace>
		<string key="file" value="winrt_socket_connect_op.hpp" />
	</trace>
	<trace>
		<string key="file" value="winrt_socket_recv_op.hpp" />
	</trace>
	<trace>
		<string key="file" value="winrt_socket_send_op.hpp" />
	</trace>
	<trace>
		<string key="file" value="winrt_ssocket_service.hpp" />
	</trace>
	<trace>
		<string key="file" value="winrt_ssocket_service_base.hpp" />
	</trace>
	<trace>
		<string key="file" value="winrt_utils.hpp" />
	</trace>
	<trace>
		<string key="file" value="winsock_init.hpp" />
	</trace>
	<trace>
		<string key="file" value="work_dispatcher.hpp" />
	</trace>
	<trace>
		<string key="file" value="wrapped_handler.hpp" />
	</trace>
	<trace>
		<string key="file" value="dispatch.hpp" />
	</trace>
	<trace>
		<string key="file" value="error.hpp" />
	</trace>
	<trace>
		<string key="file" value="error_code.hpp" />
	</trace>
	<trace>
		<string key="file" value="execution_context.hpp" />
	</trace>
	<trace>
		<string key="file" value="executor.hpp" />
	</trace>
	<trace>
		<string key="file" value="executor_work_guard.hpp" />
	</trace>
	<trace>
		<string key="file" value="basic_endpoint.hpp" />
	</trace>
	<trace>
		<string key="file" value="datagram_protocol.hpp" />
	</trace>
	<trace>
		<string key="file" value="endpoint.hpp" />
	</trace>
	<trace>
		<string key="file" value="raw_protocol.hpp" />
	</trace>
	<trace>
		<string key="file" value="seq_packet_protocol.hpp" />
	</trace>
	<trace>
		<string key="file" value="stream_protocol.hpp" />
	</trace>
	<trace>
		<string key="file" value="handler_alloc_hook.hpp" />
	</trace>
	<trace>
		<string key="file" value="handler_continuation_hook.hpp" />
	</trace>
	<trace>
		<string key="file" value="handler_invoke_hook.hpp" />
	</trace>
	<trace>
		<string key="file" value="high_resolution_timer.hpp" />
	</trace>
	<trace>
		<string key="file" value="io_context.hpp" />
	</trace>
	<trace>
		<string key="file" value="post.hpp" />
	</trace>
	<trace>
		<string key="file" value="read.hpp" />
	</trace>
	<trace>
		<string key="file" value="read_at.hpp" />
	</trace>
	<trace>
		<string key="file" value="read_until.hpp" />
	</trace>
	<trace>
		<string key="file" value="redirect_error.hpp" />
	</trace>
	<trace>
		<string key="file" value="serial_port_base.hpp" />
	</trace>
	<trace>
		<string key="file" value="spawn.hpp" />
	</trace>
	<trace>
		<string key="file" value="src.hpp" />
	</trace>
	<trace>
		<string key="file" value="system_context.hpp" />
	</trace>
	<trace>
		<string key="file" value="system_executor.hpp" />
	</trace>
	<trace>
		<string key="file" value="thread_pool.hpp" />
	</trace>
	<trace>
		<string key="file" value="use_awaitable.hpp" />
	</trace>
	<trace>
		<string key="file" value="use_future.hpp" />
	</trace>
	<trace>
		<string key="file" value="write.hpp" />
	</trace>
	<trace>
		<string key="file" value="write_at.hpp" />
	</trace>
	<trace>
		<string key="file" value="io_context_strand.hpp" />
	</trace>
	<trace>
		<string key="file" value="io_service.hpp" />
	</trace>
	<trace>
		<string key="file" value="io_service_strand.hpp" />
	</trace>
	<trace>
		<string key="file" value="address.hpp" />
	</trace>
	<trace>
		<string key="file" value="address_v4.hpp" />
	</trace>
	<trace>
		<string key="file" value="address_v4_iterator.hpp" />
	</trace>
	<trace>
		<string key="file" value="address_v4_range.hpp" />
	</trace>
	<trace>
		<string key="file" value="address_v6.hpp" />
	</trace>
	<trace>
		<string key="file" value="address_v6_iterator.hpp" />
	</trace>
	<trace>
		<string key="file" value="address_v6_range.hpp" />
	</trace>
	<trace>
		<string key="file" value="bad_address_cast.hpp" />
	</trace>
	<trace>
		<string key="file" value="basic_resolver.hpp" />
	</trace>
	<trace>
		<string key="file" value="basic_resolver_entry.hpp" />
	</trace>
	<trace>
		<string key="file" value="basic_resolver_iterator.hpp" />
	</trace>
	<trace>
		<string key="file" value="basic_resolver_query.hpp" />
	</trace>
	<trace>
		<string key="file" value="basic_resolver_results.hpp" />
	</trace>
	<trace>
		<string key="file" value="host_name.hpp" />
	</trace>
	<trace>
		<string key="file" value="icmp.hpp" />
	</trace>
	<trace>
		<string key="file" value="network_v4.hpp" />
	</trace>
	<trace>
		<string key="file" value="network_v6.hpp" />
	</trace>
	<trace>
		<string key="file" value="multicast.hpp" />
	</trace>
	<trace>
		<string key="file" value="resolver_base.hpp" />
	</trace>
	<trace>
		<string key="file" value="resolver_query_base.hpp" />
	</trace>
	<trace>
		<string key="file" value="tcp.hpp" />
	</trace>
	<trace>
		<string key="file" value="udp.hpp" />
	</trace>
	<trace>
		<string key="file" value="unicast.hpp" />
	</trace>
	<trace>
		<string key="file" value="v6_only.hpp" />
	</trace>
	<trace>
		<string key="file" value="is_read_buffered.hpp" />
	</trace>
	<trace>
		<string key="file" value="is_write_buffered.hpp" />
	</trace>
	<trace>
		<string key="file" value="connect_pair.hpp" />
	</trace>
	<trace>
		<string key="file" value="packaged_task.hpp" />
	</trace>
	<trace>
		<string key="file" value="placeholders.hpp" />
	</trace>
	<trace>
		<string key="file" value="basic_descriptor.hpp" />
	</trace>
	<trace>
		<string key="file" value="basic_stream_descriptor.hpp" />
	</trace>
	<trace>
		<string key="file" value="descriptor.hpp" />
	</trace>
	<trace>
		<string key="file" value="descriptor_base.hpp" />
	</trace>
	<trace>
		<string key="file" value="stream_descriptor.hpp" />
	</trace>
	<trace>
		<string key="file" value="serial_port.hpp" />
	</trace>
	<trace>
		<string key="file" value="signal_set.hpp" />
	</trace>
	<trace>
		<string key="file" value="socket_base.hpp" />
	</trace>
	<trace>
		<string key="file" value="ssl.hpp" />
	</trace>
	<trace>
		<string key="file" value="context.hpp" />
	</trace>
	<trace>
		<string key="file" value="context_base.hpp" />
	</trace>
	<trace>
		<string key="file" value="buffered_handshake_op.hpp" />
	</trace>
	<trace>
		<string key="file" value="engine.hpp" />
	</trace>
	<trace>
		<string key="file" value="handshake_op.hpp" />
	</trace>
	<trace>
		<string key="file" value="io.hpp" />
	</trace>
	<trace>
		<string key="file" value="openssl_init.hpp" />
	</trace>
	<trace>
		<string key="file" value="openssl_types.hpp" />
	</trace>
	<trace>
		<string key="file" value="password_callback.hpp" />
	</trace>
	<trace>
		<string key="file" value="read_op.hpp" />
	</trace>
	<trace>
		<string key="file" value="shutdown_op.hpp" />
	</trace>
	<trace>
		<string key="file" value="stream_core.hpp" />
	</trace>
	<trace>
		<string key="file" value="verify_callback.hpp" />
	</trace>
	<trace>
		<string key="file" value="write_op.hpp" />
	</trace>
	<trace>
		<string key="file" value="rfc2818_verification.hpp" />
	</trace>
	<trace>
		<string key="file" value="stream.hpp" />
	</trace>
	<trace>
		<string key="file" value="stream_base.hpp" />
	</trace>
	<trace>
		<string key="file" value="verify_context.hpp" />
	</trace>
	<trace>
		<string key="file" value="verify_mode.hpp" />
	</trace>
	<trace>
		<string key="file" value="steady_timer.hpp" />
	</trace>
	<trace>
		<string key="file" value="strand.hpp" />
	</trace>
	<trace>
		<string key="file" value="streambuf.hpp" />
	</trace>
	<trace>
		<string key="file" value="system_error.hpp" />
	</trace>
	<trace>
		<string key="file" value="system_timer.hpp" />
	</trace>
	<trace>
		<string key="file" value="this_coro.hpp" />
	</trace>
	<trace>
		<string key="file" value="time_traits.hpp" />
	</trace>
	<trace>
		<string key="file" value="internet.hpp" />
	</trace>
	<trace>
		<string key="file" value="net.hpp" />
	</trace>
	<trace>
		<string key="file" value="netfwd.hpp" />
	</trace>
	<trace>
		<string key="file" value="socket.hpp" />
	</trace>
	<trace>
		<string key="file" value="timer.hpp" />
	</trace>
	<trace>
		<string key="file" value="unyield.hpp" />
	</trace>
	<trace>
		<string key="file" value="uses_executor.hpp" />
	</trace>
	<trace>
		<string key="file" value="version.hpp" />
	</trace>
	<trace>
		<string key="file" value="wait_traits.hpp" />
	</trace>
	<trace>
		<string key="file" value="basic_object_handle.hpp" />
	</trace>
	<trace>
		<string key="file" value="basic_overlapped_handle.hpp" />
	</trace>
	<trace>
		<string key="file" value="basic_random_access_handle.hpp" />
	</trace>
	<trace>
		<string key="file" value="basic_stream_handle.hpp" />
	</trace>
	<trace>
		<string key="file" value="object_handle.hpp" />
	</trace>
	<trace>
		<string key="file" value="overlapped_handle.hpp" />
	</trace>
	<trace>
		<string key="file" value="overlapped_ptr.hpp" />
	</trace>
	<trace>
		<string key="file" value="random_access_handle.hpp" />
	</trace>
	<trace>
		<string key="file" value="stream_handle.hpp" />
	</trace>
	<trace>
		<string key="file" value="yield.hpp" />
	</trace>
	<trace>
		<string key="file" value="esp_asio_config.h" />
	</trace>
	<trace>
		<string key="file" value="esp_exception.h" />
	</trace>
	<trace>
		<string key="file" value="conf.h" />
	</trace>
	<trace>
		<string key="file" value="dh.h" />
	</trace>
	<trace>
		<string key="file" value="esp_asio_openssl_stubs.h" />
	</trace>
	<trace>
		<string key="file" value="rsa.h" />
	</trace>
	<trace>
		<string key="file" value="x509v3.h" />
	</trace>
	<trace>
		<string key="file" value="bootloader_clock.h" />
	</trace>
	<trace>
		<string key="file" value="bootloader_common.h" />
	</trace>
	<trace>
		<string key="file" value="bootloader_flash.h" />
	</trace>
	<trace>
		<string key="file" value="bootloader_flash_config.h" />
	</trace>
	<trace>
		<string key="file" value="bootloader_flash_override.h" />
	</trace>
	<trace>
		<string key="file" value="bootloader_mem.h" />
	</trace>
	<trace>
		<string key="file" value="bootloader_random.h" />
	</trace>
	<trace>
		<string key="file" value="bootloader_util.h" />
	</trace>
	<trace>
		<string key="file" value="esp_app_format.h" />
	</trace>
	<trace>
		<string key="file" value="esp_flash_data_types.h" />
	</trace>
	<trace>
		<string key="file" value="esp_flash_encrypt.h" />
	</trace>
	<trace>
		<string key="file" value="esp_flash_partitions.h" />
	</trace>
	<trace>
		<string key="file" value="esp_image_format.h" />
	</trace>
	<trace>
		<string key="file" value="esp_secure_boot.h" />
	</trace>
	<trace>
		<string key="file" value="esp_blufi_api.h" />
	</trace>
	<trace>
		<string key="file" value="blufi_int.h" />
	</trace>
	<trace>
		<string key="file" value="esp_blufi.h" />
	</trace>
	<trace>
		<string key="file" value="btc_blufi_prf.h" />
	</trace>
	<trace>
		<string key="file" value="alarm.h" />
	</trace>
	<trace>
		<string key="file" value="allocator.h" />
	</trace>
	<trace>
		<string key="file" value="buffer.h" />
	</trace>
	<trace>
		<string key="file" value="config.h" />
	</trace>
	<trace>
		<string key="file" value="fixed_pkt_queue.h" />
	</trace>
	<trace>
		<string key="file" value="fixed_queue.h" />
	</trace>
	<trace>
		<string key="file" value="future.h" />
	</trace>
	<trace>
		<string key="file" value="hash_functions.h" />
	</trace>
	<trace>
		<string key="file" value="hash_map.h" />
	</trace>
	<trace>
		<string key="file" value="list.h" />
	</trace>
	<trace>
		<string key="file" value="mutex.h" />
	</trace>
	<trace>
		<string key="file" value="osi.h" />
	</trace>
	<trace>
		<string key="file" value="pkt_queue.h" />
	</trace>
	<trace>
		<string key="file" value="semaphore.h" />
	</trace>
	<trace>
		<string key="file" value="thread.h" />
	</trace>
	<trace>
		<string key="file" value="esp_ble_mesh_ble_api.h" />
	</trace>
	<trace>
		<string key="file" value="esp_ble_mesh_common_api.h" />
	</trace>
	<trace>
		<string key="file" value="esp_ble_mesh_local_data_operation_api.h" />
	</trace>
	<trace>
		<string key="file" value="esp_ble_mesh_low_power_api.h" />
	</trace>
	<trace>
		<string key="file" value="esp_ble_mesh_networking_api.h" />
	</trace>
	<trace>
		<string key="file" value="esp_ble_mesh_provisioning_api.h" />
	</trace>
	<trace>
		<string key="file" value="esp_ble_mesh_proxy_api.h" />
	</trace>
	<trace>
		<string key="file" value="esp_ble_mesh_defs.h" />
	</trace>
	<trace>
		<string key="file" value="esp_ble_mesh_config_model_api.h" />
	</trace>
	<trace>
		<string key="file" value="esp_ble_mesh_generic_model_api.h" />
	</trace>
	<trace>
		<string key="file" value="esp_ble_mesh_health_model_api.h" />
	</trace>
	<trace>
		<string key="file" value="esp_ble_mesh_lighting_model_api.h" />
	</trace>
	<trace>
		<string key="file" value="esp_ble_mesh_sensor_model_api.h" />
	</trace>
	<trace>
		<string key="file" value="esp_ble_mesh_time_scene_model_api.h" />
	</trace>
	<trace>
		<string key="file" value="btc_ble_mesh_ble.h" />
	</trace>
	<trace>
		<string key="file" value="btc_ble_mesh_config_model.h" />
	</trace>
	<trace>
		<string key="file" value="btc_ble_mesh_generic_model.h" />
	</trace>
	<trace>
		<string key="file" value="btc_ble_mesh_health_model.h" />
	</trace>
	<trace>
		<string key="file" value="btc_ble_mesh_lighting_model.h" />
	</trace>
	<trace>
		<string key="file" value="btc_ble_mesh_prov.h" />
	</trace>
	<trace>
		<string key="file" value="btc_ble_mesh_sensor_model.h" />
	</trace>
	<trace>
		<string key="file" value="btc_ble_mesh_time_scene_model.h" />
	</trace>
	<trace>
		<string key="file" value="mesh_atomic.h" />
	</trace>
	<trace>
		<string key="file" value="mesh_buf.h" />
	</trace>
	<trace>
		<string key="file" value="mesh_byteorder.h" />
	</trace>
	<trace>
		<string key="file" value="mesh_common.h" />
	</trace>
	<trace>
		<string key="file" value="mesh_compiler.h" />
	</trace>
	<trace>
		<string key="file" value="mesh_config.h" />
	</trace>
	<trace>
		<string key="file" value="mesh_dlist.h" />
	</trace>
	<trace>
		<string key="file" value="mesh_ffs.h" />
	</trace>
	<trace>
		<string key="file" value="mesh_kernel.h" />
	</trace>
	<trace>
		<string key="file" value="mesh_mutex.h" />
	</trace>
	<trace>
		<string key="file" value="mesh_slist.h" />
	</trace>
	<trace>
		<string key="file" value="mesh_timer.h" />
	</trace>
	<trace>
		<string key="file" value="mesh_trace.h" />
	</trace>
	<trace>
		<string key="file" value="mesh_types.h" />
	</trace>
	<trace>
		<string key="file" value="mesh_util.h" />
	</trace>
	<trace>
		<string key="file" value="aes.h" />
	</trace>
	<trace>
		<string key="file" value="cbc_mode.h" />
	</trace>
	<trace>
		<string key="file" value="ccm_mode.h" />
	</trace>
	<trace>
		<string key="file" value="cmac_mode.h" />
	</trace>
	<trace>
		<string key="file" value="constants.h" />
	</trace>
	<trace>
		<string key="file" value="ctr_mode.h" />
	</trace>
	<trace>
		<string key="file" value="ctr_prng.h" />
	</trace>
	<trace>
		<string key="file" value="ecc.h" />
	</trace>
	<trace>
		<string key="file" value="ecc_dh.h" />
	</trace>
	<trace>
		<string key="file" value="ecc_dsa.h" />
	</trace>
	<trace>
		<string key="file" value="ecc_platform_specific.h" />
	</trace>
	<trace>
		<string key="file" value="hmac.h" />
	</trace>
	<trace>
		<string key="file" value="hmac_prng.h" />
	</trace>
	<trace>
		<string key="file" value="sha256.h" />
	</trace>
	<trace>
		<string key="file" value="utils.h" />
	</trace>
	<trace>
		<string key="file" value="access.h" />
	</trace>
	<trace>
		<string key="file" value="adv.h" />
	</trace>
	<trace>
		<string key="file" value="beacon.h" />
	</trace>
	<trace>
		<string key="file" value="crypto.h" />
	</trace>
	<trace>
		<string key="file" value="fast_prov.h" />
	</trace>
	<trace>
		<string key="file" value="foundation.h" />
	</trace>
	<trace>
		<string key="file" value="friend.h" />
	</trace>
	<trace>
		<string key="file" value="cfg_cli.h" />
	</trace>
	<trace>
		<string key="file" value="cfg_srv.h" />
	</trace>
	<trace>
		<string key="file" value="health_cli.h" />
	</trace>
	<trace>
		<string key="file" value="health_srv.h" />
	</trace>
	<trace>
		<string key="file" value="mesh_access.h" />
	</trace>
	<trace>
		<string key="file" value="mesh_bearer_adapt.h" />
	</trace>
	<trace>
		<string key="file" value="mesh_hci.h" />
	</trace>
	<trace>
		<string key="file" value="mesh_main.h" />
	</trace>
	<trace>
		<string key="file" value="mesh_proxy.h" />
	</trace>
	<trace>
		<string key="file" value="mesh_uuid.h" />
	</trace>
	<trace>
		<string key="file" value="local_operation.h" />
	</trace>
	<trace>
		<string key="file" value="lpn.h" />
	</trace>
	<trace>
		<string key="file" value="mesh.h" />
	</trace>
	<trace>
		<string key="file" value="net.h" />
	</trace>
	<trace>
		<string key="file" value="prov.h" />
	</trace>
	<trace>
		<string key="file" value="provisioner_main.h" />
	</trace>
	<trace>
		<string key="file" value="provisioner_prov.h" />
	</trace>
	<trace>
		<string key="file" value="proxy_client.h" />
	</trace>
	<trace>
		<string key="file" value="proxy_server.h" />
	</trace>
	<trace>
		<string key="file" value="scan.h" />
	</trace>
	<trace>
		<string key="file" value="settings.h" />
	</trace>
	<trace>
		<string key="file" value="settings_uid.h" />
	</trace>
	<trace>
		<string key="file" value="settings_nvs.h" />
	</trace>
	<trace>
		<string key="file" value="test.h" />
	</trace>
	<trace>
		<string key="file" value="transport.h" />
	</trace>
	<trace>
		<string key="file" value="client_common.h" />
	</trace>
	<trace>
		<string key="file" value="generic_client.h" />
	</trace>
	<trace>
		<string key="file" value="lighting_client.h" />
	</trace>
	<trace>
		<string key="file" value="sensor_client.h" />
	</trace>
	<trace>
		<string key="file" value="time_scene_client.h" />
	</trace>
	<trace>
		<string key="file" value="device_property.h" />
	</trace>
	<trace>
		<string key="file" value="model_opcode.h" />
	</trace>
	<trace>
		<string key="file" value="generic_server.h" />
	</trace>
	<trace>
		<string key="file" value="lighting_server.h" />
	</trace>
	<trace>
		<string key="file" value="sensor_server.h" />
	</trace>
	<trace>
		<string key="file" value="server_common.h" />
	</trace>
	<trace>
		<string key="file" value="state_binding.h" />
	</trace>
	<trace>
		<string key="file" value="state_transition.h" />
	</trace>
	<trace>
		<string key="file" value="time_scene_server.h" />
	</trace>
	<trace>
		<string key="file" value="esp_a2dp_api.h" />
	</trace>
	<trace>
		<string key="file" value="esp_avrc_api.h" />
	</trace>
	<trace>
		<string key="file" value="esp_bt_defs.h" />
	</trace>
	<trace>
		<string key="file" value="esp_bt_device.h" />
	</trace>
	<trace>
		<string key="file" value="esp_bt_main.h" />
	</trace>
	<trace>
		<string key="file" value="esp_gap_ble_api.h" />
	</trace>
	<trace>
		<string key="file" value="esp_gap_bt_api.h" />
	</trace>
	<trace>
		<string key="file" value="esp_gatt_common_api.h" />
	</trace>
	<trace>
		<string key="file" value="esp_gatt_defs.h" />
	</trace>
	<trace>
		<string key="file" value="esp_gattc_api.h" />
	</trace>
	<trace>
		<string key="file" value="esp_gatts_api.h" />
	</trace>
	<trace>
		<string key="file" value="esp_hf_ag_api.h" />
	</trace>
	<trace>
		<string key="file" value="esp_hf_client_api.h" />
	</trace>
	<trace>
		<string key="file" value="esp_hf_defs.h" />
	</trace>
	<trace>
		<string key="file" value="esp_hidd_api.h" />
	</trace>
	<trace>
		<string key="file" value="esp_hidh_api.h" />
	</trace>
	<trace>
		<string key="file" value="esp_spp_api.h" />
	</trace>
	<trace>
		<string key="file" value="esp_bt.h" />
	</trace>
	<trace>
		<string key="file" value="cbor.h" />
	</trace>
	<trace>
		<string key="file" value="cmock.h" />
	</trace>
	<trace>
		<string key="file" value="cmock_internals.h" />
	</trace>
	<trace>
		<string key="file" value="address.h" />
	</trace>
	<trace>
		<string key="file" value="async.h" />
	</trace>
	<trace>
		<string key="file" value="block.h" />
	</trace>
	<trace>
		<string key="file" value="coap_asn1_internal.h" />
	</trace>
	<trace>
		<string key="file" value="coap_async_internal.h" />
	</trace>
	<trace>
		<string key="file" value="coap_block_internal.h" />
	</trace>
	<trace>
		<string key="file" value="coap_cache.h" />
	</trace>
	<trace>
		<string key="file" value="coap_cache_internal.h" />
	</trace>
	<trace>
		<string key="file" value="coap_debug.h" />
	</trace>
	<trace>
		<string key="file" value="coap_dtls.h" />
	</trace>
	<trace>
		<string key="file" value="coap_dtls_internal.h" />
	</trace>
	<trace>
		<string key="file" value="coap_event.h" />
	</trace>
	<trace>
		<string key="file" value="coap_forward_decls.h" />
	</trace>
	<trace>
		<string key="file" value="coap_hashkey.h" />
	</trace>
	<trace>
		<string key="file" value="coap_internal.h" />
	</trace>
	<trace>
		<string key="file" value="coap_io.h" />
	</trace>
	<trace>
		<string key="file" value="coap_io_internal.h" />
	</trace>
	<trace>
		<string key="file" value="coap_mutex.h" />
	</trace>
	<trace>
		<string key="file" value="coap_net_internal.h" />
	</trace>
	<trace>
		<string key="file" value="coap_pdu_internal.h" />
	</trace>
	<trace>
		<string key="file" value="coap_prng.h" />
	</trace>
	<trace>
		<string key="file" value="coap_resource_internal.h" />
	</trace>
	<trace>
		<string key="file" value="coap_riot.h" />
	</trace>
	<trace>
		<string key="file" value="coap_session.h" />
	</trace>
	<trace>
		<string key="file" value="coap_session_internal.h" />
	</trace>
	<trace>
		<string key="file" value="coap_subscribe_internal.h" />
	</trace>
	<trace>
		<string key="file" value="coap_tcp_internal.h" />
	</trace>
	<trace>
		<string key="file" value="coap_time.h" />
	</trace>
	<trace>
		<string key="file" value="encode.h" />
	</trace>
	<trace>
		<string key="file" value="libcoap.h" />
	</trace>
	<trace>
		<string key="file" value="lwippools.h" />
	</trace>
	<trace>
		<string key="file" value="mem.h" />
	</trace>
	<trace>
		<string key="file" value="option.h" />
	</trace>
	<trace>
		<string key="file" value="pdu.h" />
	</trace>
	<trace>
		<string key="file" value="resource.h" />
	</trace>
	<trace>
		<string key="file" value="str.h" />
	</trace>
	<trace>
		<string key="file" value="subscribe.h" />
	</trace>
	<trace>
		<string key="file" value="uri.h" />
	</trace>
	<trace>
		<string key="file" value="uthash.h" />
	</trace>
	<trace>
		<string key="file" value="utlist.h" />
	</trace>
	<trace>
		<string key="file" value="coap.h" />
	</trace>
	<trace>
		<string key="file" value="coap_config.h" />
	</trace>
	<trace>
		<string key="file" value="coap_config_posix.h" />
	</trace>
	<trace>
		<string key="file" value="argtable3.h" />
	</trace>
	<trace>
		<string key="file" value="esp_console.h" />
	</trace>
	<trace>
		<string key="file" value="linenoise.h" />
	</trace>
	<trace>
		<string key="file" value="dac.h" />
	</trace>
	<trace>
		<string key="file" value="touch_sensor.h" />
	</trace>
	<trace>
		<string key="file" value="adc.h" />
	</trace>
	<trace>
		<string key="file" value="adc2_wifi_private.h" />
	</trace>
	<trace>
		<string key="file" value="adc_common.h" />
	</trace>
	<trace>
		<string key="file" value="adc_deprecated.h" />
	</trace>
	<trace>
		<string key="file" value="adc_types_deprecated.h" />
	</trace>
	<trace>
		<string key="file" value="can.h" />
	</trace>
	<trace>
		<string key="file" value="dac_common.h" />
	</trace>
	<trace>
		<string key="file" value="dedic_gpio.h" />
	</trace>
	<trace>
		<string key="file" value="gpio.h" />
	</trace>
	<trace>
		<string key="file" value="i2c.h" />
	</trace>
	<trace>
		<string key="file" value="i2s.h" />
	</trace>
	<trace>
		<string key="file" value="ledc.h" />
	</trace>
	<trace>
		<string key="file" value="mcpwm.h" />
	</trace>
	<trace>
		<string key="file" value="pcnt.h" />
	</trace>
	<trace>
		<string key="file" value="periph_ctrl.h" />
	</trace>
	<trace>
		<string key="file" value="rmt.h" />
	</trace>
	<trace>
		<string key="file" value="rtc_cntl.h" />
	</trace>
	<trace>
		<string key="file" value="rtc_io.h" />
	</trace>
	<trace>
		<string key="file" value="sdio_slave.h" />
	</trace>
	<trace>
		<string key="file" value="sdmmc_defs.h" />
	</trace>
	<trace>
		<string key="file" value="sdmmc_host.h" />
	</trace>
	<trace>
		<string key="file" value="sdmmc_types.h" />
	</trace>
	<trace>
		<string key="file" value="sdspi_host.h" />
	</trace>
	<trace>
		<string key="file" value="sigmadelta.h" />
	</trace>
	<trace>
		<string key="file" value="spi_common.h" />
	</trace>
	<trace>
		<string key="file" value="spi_common_internal.h" />
	</trace>
	<trace>
		<string key="file" value="spi_master.h" />
	</trace>
	<trace>
		<string key="file" value="spi_slave.h" />
	</trace>
	<trace>
		<string key="file" value="spi_slave_hd.h" />
	</trace>
	<trace>
		<string key="file" value="timer.h" />
	</trace>
	<trace>
		<string key="file" value="touch_pad.h" />
	</trace>
	<trace>
		<string key="file" value="touch_sensor_common.h" />
	</trace>
	<trace>
		<string key="file" value="twai.h" />
	</trace>
	<trace>
		<string key="file" value="uart.h" />
	</trace>
	<trace>
		<string key="file" value="uart_select.h" />
	</trace>
	<trace>
		<string key="file" value="usb_serial_jtag.h" />
	</trace>
	<trace>
		<string key="file" value="adc_cali.h" />
	</trace>
	<trace>
		<string key="file" value="gdma.h" />
	</trace>
	<trace>
		<string key="file" value="i2s_platform.h" />
	</trace>
	<trace>
		<string key="file" value="esp_efuse.h" />
	</trace>
	<trace>
		<string key="file" value="esp_efuse_table.h" />
	</trace>
	<trace>
		<string key="file" value="dl_detect_define.hpp" />
	</trace>
	<trace>
		<string key="file" value="dl_define.hpp" />
	</trace>
	<trace>
		<string key="file" value="dl_image.hpp" />
	</trace>
	<trace>
		<string key="file" value="dl_layer_add2d.hpp" />
	</trace>
	<trace>
		<string key="file" value="dl_layer_avg_pool2d.hpp" />
	</trace>
	<trace>
		<string key="file" value="dl_layer_base.hpp" />
	</trace>
	<trace>
		<string key="file" value="dl_layer_concat.hpp" />
	</trace>
	<trace>
		<string key="file" value="dl_layer_concat2d.hpp" />
	</trace>
	<trace>
		<string key="file" value="dl_layer_conv2d.hpp" />
	</trace>
	<trace>
		<string key="file" value="dl_layer_depthwise_conv2d.hpp" />
	</trace>
	<trace>
		<string key="file" value="dl_layer_expand_dims.hpp" />
	</trace>
	<trace>
		<string key="file" value="dl_layer_flatten.hpp" />
	</trace>
	<trace>
		<string key="file" value="dl_layer_fullyconnected.hpp" />
	</trace>
	<trace>
		<string key="file" value="dl_layer_global_avg_pool2d.hpp" />
	</trace>
	<trace>
		<string key="file" value="dl_layer_global_max_pool2d.hpp" />
	</trace>
	<trace>
		<string key="file" value="dl_layer_leakyrelu.hpp" />
	</trace>
	<trace>
		<string key="file" value="dl_layer_max2d.hpp" />
	</trace>
	<trace>
		<string key="file" value="dl_layer_max_pool2d.hpp" />
	</trace>
	<trace>
		<string key="file" value="dl_layer_min2d.hpp" />
	</trace>
	<trace>
		<string key="file" value="dl_layer_model.hpp" />
	</trace>
	<trace>
		<string key="file" value="dl_layer_mul2d.hpp" />
	</trace>
	<trace>
		<string key="file" value="dl_layer_pad.hpp" />
	</trace>
	<trace>
		<string key="file" value="dl_layer_prelu.hpp" />
	</trace>
	<trace>
		<string key="file" value="dl_layer_relu.hpp" />
	</trace>
	<trace>
		<string key="file" value="dl_layer_reshape.hpp" />
	</trace>
	<trace>
		<string key="file" value="dl_layer_sigmoid.hpp" />
	</trace>
	<trace>
		<string key="file" value="dl_layer_softmax.hpp" />
	</trace>
	<trace>
		<string key="file" value="dl_layer_squeeze.hpp" />
	</trace>
	<trace>
		<string key="file" value="dl_layer_sub2d.hpp" />
	</trace>
	<trace>
		<string key="file" value="dl_layer_tanh.hpp" />
	</trace>
	<trace>
		<string key="file" value="dl_layer_transpose.hpp" />
	</trace>
	<trace>
		<string key="file" value="dl_math.hpp" />
	</trace>
	<trace>
		<string key="file" value="dl_math_matrix.hpp" />
	</trace>
	<trace>
		<string key="file" value="cat_face_detect_mn03.hpp" />
	</trace>
	<trace>
		<string key="file" value="color_detector.hpp" />
	</trace>
	<trace>
		<string key="file" value="face_recognition_112_v1_s16.hpp" />
	</trace>
	<trace>
		<string key="file" value="face_recognition_112_v1_s8.hpp" />
	</trace>
	<trace>
		<string key="file" value="face_recognition_tool.hpp" />
	</trace>
	<trace>
		<string key="file" value="face_recognizer.hpp" />
	</trace>
	<trace>
		<string key="file" value="human_face_detect_mnp01.hpp" />
	</trace>
	<trace>
		<string key="file" value="human_face_detect_msr01.hpp" />
	</trace>
	<trace>
		<string key="file" value="dl_nn.hpp" />
	</trace>
	<trace>
		<string key="file" value="dl_nn_add2d.hpp" />
	</trace>
	<trace>
		<string key="file" value="dl_nn_avg_pool2d.hpp" />
	</trace>
	<trace>
		<string key="file" value="dl_nn_concat.hpp" />
	</trace>
	<trace>
		<string key="file" value="dl_nn_concat2d.hpp" />
	</trace>
	<trace>
		<string key="file" value="dl_nn_conv2d.hpp" />
	</trace>
	<trace>
		<string key="file" value="dl_nn_depthwise_conv2d.hpp" />
	</trace>
	<trace>
		<string key="file" value="dl_nn_fully_connected.hpp" />
	</trace>
	<trace>
		<string key="file" value="dl_nn_global_avg_pool2d.hpp" />
	</trace>
	<trace>
		<string key="file" value="dl_nn_global_max_pool2d.hpp" />
	</trace>
	<trace>
		<string key="file" value="dl_nn_leakyrelu.hpp" />
	</trace>
	<trace>
		<string key="file" value="dl_nn_max2d.hpp" />
	</trace>
	<trace>
		<string key="file" value="dl_nn_max_pool2d.hpp" />
	</trace>
	<trace>
		<string key="file" value="dl_nn_min2d.hpp" />
	</trace>
	<trace>
		<string key="file" value="dl_nn_mul2d.hpp" />
	</trace>
	<trace>
		<string key="file" value="dl_nn_pad.hpp" />
	</trace>
	<trace>
		<string key="file" value="dl_nn_prelu.hpp" />
	</trace>
	<trace>
		<string key="file" value="dl_nn_relu.hpp" />
	</trace>
	<trace>
		<string key="file" value="dl_nn_sub2d.hpp" />
	</trace>
	<trace>
		<string key="file" value="dl_tool.hpp" />
	</trace>
	<trace>
		<string key="file" value="dl_tool_cache.hpp" />
	</trace>
	<trace>
		<string key="file" value="dl_constant.hpp" />
	</trace>
	<trace>
		<string key="file" value="dl_variable.hpp" />
	</trace>
	<trace>
		<string key="file" value="dsp_common.h" />
	</trace>
	<trace>
		<string key="file" value="dsp_err.h" />
	</trace>
	<trace>
		<string key="file" value="dsp_err_codes.h" />
	</trace>
	<trace>
		<string key="file" value="dsp_platform.h" />
	</trace>
	<trace>
		<string key="file" value="dsp_tests.h" />
	</trace>
	<trace>
		<string key="file" value="dsp_types.h" />
	</trace>
	<trace>
		<string key="file" value="esp_dsp.h" />
	</trace>
	<trace>
		<string key="file" value="dsps_ccorr.h" />
	</trace>
	<trace>
		<string key="file" value="dsps_conv.h" />
	</trace>
	<trace>
		<string key="file" value="dsps_conv_platform.h" />
	</trace>
	<trace>
		<string key="file" value="dsps_corr.h" />
	</trace>
	<trace>
		<string key="file" value="dsps_dct.h" />
	</trace>
	<trace>
		<string key="file" value="dspi_dotprod.h" />
	</trace>
	<trace>
		<string key="file" value="dspi_dotprod_platform.h" />
	</trace>
	<trace>
		<string key="file" value="dsps_dotprod.h" />
	</trace>
	<trace>
		<string key="file" value="dsps_dotprod_platform.h" />
	</trace>
	<trace>
		<string key="file" value="dsps_fft2r.h" />
	</trace>
	<trace>
		<string key="file" value="dsps_fft2r_platform.h" />
	</trace>
	<trace>
		<string key="file" value="dsps_fft4r.h" />
	</trace>
	<trace>
		<string key="file" value="dsps_fft4r_platform.h" />
	</trace>
	<trace>
		<string key="file" value="dsps_fft_tables.h" />
	</trace>
	<trace>
		<string key="file" value="dsps_fir.h" />
	</trace>
	<trace>
		<string key="file" value="dsps_fir_platform.h" />
	</trace>
	<trace>
		<string key="file" value="dsps_biquad.h" />
	</trace>
	<trace>
		<string key="file" value="dsps_biquad_gen.h" />
	</trace>
	<trace>
		<string key="file" value="dsps_biquad_platform.h" />
	</trace>
	<trace>
		<string key="file" value="ekf.h" />
	</trace>
	<trace>
		<string key="file" value="ekf_imu13states.h" />
	</trace>
	<trace>
		<string key="file" value="dsps_add.h" />
	</trace>
	<trace>
		<string key="file" value="dsps_add_platform.h" />
	</trace>
	<trace>
		<string key="file" value="dsps_addc.h" />
	</trace>
	<trace>
		<string key="file" value="dsps_addc_platform.h" />
	</trace>
	<trace>
		<string key="file" value="dsps_math.h" />
	</trace>
	<trace>
		<string key="file" value="dsps_mul.h" />
	</trace>
	<trace>
		<string key="file" value="dsps_mul_platform.h" />
	</trace>
	<trace>
		<string key="file" value="dsps_mulc.h" />
	</trace>
	<trace>
		<string key="file" value="dsps_mulc_platform.h" />
	</trace>
	<trace>
		<string key="file" value="dsps_sqrt.h" />
	</trace>
	<trace>
		<string key="file" value="dsps_sub.h" />
	</trace>
	<trace>
		<string key="file" value="dsps_sub_platform.h" />
	</trace>
	<trace>
		<string key="file" value="dspm_mult.h" />
	</trace>
	<trace>
		<string key="file" value="dspm_mult_platform.h" />
	</trace>
	<trace>
		<string key="file" value="mat.h" />
	</trace>
	<trace>
		<string key="file" value="dsps_d_gen.h" />
	</trace>
	<trace>
		<string key="file" value="dsps_h_gen.h" />
	</trace>
	<trace>
		<string key="file" value="dsps_sfdr.h" />
	</trace>
	<trace>
		<string key="file" value="dsps_snr.h" />
	</trace>
	<trace>
		<string key="file" value="dsps_tone_gen.h" />
	</trace>
	<trace>
		<string key="file" value="dsps_view.h" />
	</trace>
	<trace>
		<string key="file" value="dsps_wind_blackman.h" />
	</trace>
	<trace>
		<string key="file" value="dsps_wind_blackman_harris.h" />
	</trace>
	<trace>
		<string key="file" value="dsps_wind_blackman_nuttall.h" />
	</trace>
	<trace>
		<string key="file" value="dsps_wind_flat_top.h" />
	</trace>
	<trace>
		<string key="file" value="dsps_wind_hann.h" />
	</trace>
	<trace>
		<string key="file" value="dsps_wind.h" />
	</trace>
	<trace>
		<string key="file" value="dsps_wind_nuttall.h" />
	</trace>
	<trace>
		<string key="file" value="esp_tts.h" />
	</trace>
	<trace>
		<string key="file" value="esp_tts_parser.h" />
	</trace>
	<trace>
		<string key="file" value="esp_tts_player.h" />
	</trace>
	<trace>
		<string key="file" value="esp_tts_stretcher.h" />
	</trace>
	<trace>
		<string key="file" value="esp_tts_voice.h" />
	</trace>
	<trace>
		<string key="file" value="esp_tts_voice_template.h" />
	</trace>
	<trace>
		<string key="file" value="esp_tts_voice_xiaole.h" />
	</trace>
	<trace>
		<string key="file" value="customized_word_wn5.h" />
	</trace>
	<trace>
		<string key="file" value="dl_lib.h" />
	</trace>
	<trace>
		<string key="file" value="dl_lib_coefgetter_if.h" />
	</trace>
	<trace>
		<string key="file" value="dl_lib_conv_queue.h" />
	</trace>
	<trace>
		<string key="file" value="dl_lib_convq8_queue.h" />
	</trace>
	<trace>
		<string key="file" value="dl_lib_convq_queue.h" />
	</trace>
	<trace>
		<string key="file" value="dl_lib_matrix.h" />
	</trace>
	<trace>
		<string key="file" value="dl_lib_matrixq.h" />
	</trace>
	<trace>
		<string key="file" value="dl_lib_matrixq8.h" />
	</trace>
	<trace>
		<string key="file" value="esp_aec.h" />
	</trace>
	<trace>
		<string key="file" value="esp_afe_config.h" />
	</trace>
	<trace>
		<string key="file" value="esp_afe_sr_iface.h" />
	</trace>
	<trace>
		<string key="file" value="esp_afe_sr_models.h" />
	</trace>
	<trace>
		<string key="file" value="esp_agc.h" />
	</trace>
	<trace>
		<string key="file" value="esp_mase.h" />
	</trace>
	<trace>
		<string key="file" value="esp_mn_iface.h" />
	</trace>
	<trace>
		<string key="file" value="esp_mn_models.h" />
	</trace>
	<trace>
		<string key="file" value="esp_ns.h" />
	</trace>
	<trace>
		<string key="file" value="esp_vad.h" />
	</trace>
	<trace>
		<string key="file" value="esp_wn_iface.h" />
	</trace>
	<trace>
		<string key="file" value="esp_wn_models.h" />
	</trace>
	<trace>
		<string key="file" value="hilexin_wn5.h" />
	</trace>
	<trace>
		<string key="file" value="hilexin_wn5X2.h" />
	</trace>
	<trace>
		<string key="file" value="hilexin_wn5X3.h" />
	</trace>
	<trace>
		<string key="file" value="multinet2_ch.h" />
	</trace>
	<trace>
		<string key="file" value="nihaoxiaoxin_wn5X3.h" />
	</trace>
	<trace>
		<string key="file" value="nihaoxiaozhi_wn5.h" />
	</trace>
	<trace>
		<string key="file" value="nihaoxiaozhi_wn5X2.h" />
	</trace>
	<trace>
		<string key="file" value="nihaoxiaozhi_wn5X3.h" />
	</trace>
	<trace>
		<string key="file" value="esp_mn_speech_commands.h" />
	</trace>
	<trace>
		<string key="file" value="esp_process_sdkconfig.h" />
	</trace>
	<trace>
		<string key="file" value="model_path.h" />
	</trace>
	<trace>
		<string key="file" value="esp_tls_crypto.h" />
	</trace>
	<trace>
		<string key="file" value="esp_tls.h" />
	</trace>
	<trace>
		<string key="file" value="esp_tls_errors.h" />
	</trace>
	<trace>
		<string key="file" value="esp_tls_error_capture_internal.h" />
	</trace>
	<trace>
		<string key="file" value="esp_tls_mbedtls.h" />
	</trace>
	<trace>
		<string key="file" value="esp_tls_wolfssl.h" />
	</trace>
	<trace>
		<string key="file" value="esp_jpg_decode.h" />
	</trace>
	<trace>
		<string key="file" value="img_converters.h" />
	</trace>
	<trace>
		<string key="file" value="esp_camera.h" />
	</trace>
	<trace>
		<string key="file" value="sensor.h" />
	</trace>
	<trace>
		<string key="file" value="bigint.h" />
	</trace>
	<trace>
		<string key="file" value="cache.h" />
	</trace>
	<trace>
		<string key="file" value="crc.h" />
	</trace>
	<trace>
		<string key="file" value="efuse.h" />
	</trace>
	<trace>
		<string key="file" value="ets_sys.h" />
	</trace>
	<trace>
		<string key="file" value="libc_stubs.h" />
	</trace>
	<trace>
		<string key="file" value="lldesc.h" />
	</trace>
	<trace>
		<string key="file" value="md5_hash.h" />
	</trace>
	<trace>
		<string key="file" value="miniz.h" />
	</trace>
	<trace>
		<string key="file" value="queue.h" />
	</trace>
	<trace>
		<string key="file" value="rtc.h" />
	</trace>
	<trace>
		<string key="file" value="secure_boot.h" />
	</trace>
	<trace>
		<string key="file" value="sha.h" />
	</trace>
	<trace>
		<string key="file" value="spi_flash.h" />
	</trace>
	<trace>
		<string key="file" value="tbconsole.h" />
	</trace>
	<trace>
		<string key="file" value="tjpgd.h" />
	</trace>
	<trace>
		<string key="file" value="esp_adc_cal.h" />
	</trace>
	<trace>
		<string key="file" value="esp_assert.h" />
	</trace>
	<trace>
		<string key="file" value="esp_attr.h" />
	</trace>
	<trace>
		<string key="file" value="esp_bit_defs.h" />
	</trace>
	<trace>
		<string key="file" value="esp_check.h" />
	</trace>
	<trace>
		<string key="file" value="esp_compiler.h" />
	</trace>
	<trace>
		<string key="file" value="esp_err.h" />
	</trace>
	<trace>
		<string key="file" value="esp_idf_version.h" />
	</trace>
	<trace>
		<string key="file" value="esp_types.h" />
	</trace>
	<trace>
		<string key="file" value="esp_diagnostics_metrics.h" />
	</trace>
	<trace>
		<string key="file" value="esp_diagnostics_network_variables.h" />
	</trace>
	<trace>
		<string key="file" value="esp_diagnostics_system_metrics.h" />
	</trace>
	<trace>
		<string key="file" value="esp_diagnostics_variables.h" />
	</trace>
	<trace>
		<string key="file" value="esp_eth.h" />
	</trace>
	<trace>
		<string key="file" value="esp_eth_com.h" />
	</trace>
	<trace>
		<string key="file" value="esp_eth_mac.h" />
	</trace>
	<trace>
		<string key="file" value="esp_eth_netif_glue.h" />
	</trace>
	<trace>
		<string key="file" value="esp_eth_phy.h" />
	</trace>
	<trace>
		<string key="file" value="eth_phy_regs_struct.h" />
	</trace>
	<trace>
		<string key="file" value="esp_event.h" />
	</trace>
	<trace>
		<string key="file" value="esp_event_base.h" />
	</trace>
	<trace>
		<string key="file" value="esp_event_legacy.h" />
	</trace>
	<trace>
		<string key="file" value="esp_event_loop.h" />
	</trace>
	<trace>
		<string key="file" value="gdbstub_target_config.h" />
	</trace>
	<trace>
		<string key="file" value="esp_gdbstub.h" />
	</trace>
	<trace>
		<string key="file" value="esp_gdbstub_arch.h" />
	</trace>
	<trace>
		<string key="file" value="esp_hid_common.h" />
	</trace>
	<trace>
		<string key="file" value="esp_hidd.h" />
	</trace>
	<trace>
		<string key="file" value="esp_hidd_gatts.h" />
	</trace>
	<trace>
		<string key="file" value="esp_hidd_transport.h" />
	</trace>
	<trace>
		<string key="file" value="esp_hidh.h" />
	</trace>
	<trace>
		<string key="file" value="esp_hidh_bluedroid.h" />
	</trace>
	<trace>
		<string key="file" value="esp_hidh_gattc.h" />
	</trace>
	<trace>
		<string key="file" value="esp_hidh_transport.h" />
	</trace>
	<trace>
		<string key="file" value="esp_http_client.h" />
	</trace>
	<trace>
		<string key="file" value="esp_http_server.h" />
	</trace>
	<trace>
		<string key="file" value="http_server.h" />
	</trace>
	<trace>
		<string key="file" value="esp_https_ota.h" />
	</trace>
	<trace>
		<string key="file" value="esp_https_server.h" />
	</trace>
	<trace>
		<string key="file" value="esp_async_memcpy.h" />
	</trace>
	<trace>
		<string key="file" value="esp_chip_info.h" />
	</trace>
	<trace>
		<string key="file" value="esp_clk.h" />
	</trace>
	<trace>
		<string key="file" value="esp_cpu.h" />
	</trace>
	<trace>
		<string key="file" value="esp_crc.h" />
	</trace>
	<trace>
		<string key="file" value="esp_fault.h" />
	</trace>
	<trace>
		<string key="file" value="esp_interface.h" />
	</trace>
	<trace>
		<string key="file" value="esp_intr.h" />
	</trace>
	<trace>
		<string key="file" value="esp_intr_alloc.h" />
	</trace>
	<trace>
		<string key="file" value="esp_mac.h" />
	</trace>
	<trace>
		<string key="file" value="esp_memprot.h" />
	</trace>
	<trace>
		<string key="file" value="esp_memprot_err.h" />
	</trace>
	<trace>
		<string key="file" value="esp_memprot_types.h" />
	</trace>
	<trace>
		<string key="file" value="esp_memprot_internal.h" />
	</trace>
	<trace>
		<string key="file" value="esp_sleep_internal.h" />
	</trace>
	<trace>
		<string key="file" value="sleep_gpio.h" />
	</trace>
	<trace>
		<string key="file" value="sleep_mac_bb.h" />
	</trace>
	<trace>
		<string key="file" value="sleep_retention.h" />
	</trace>
	<trace>
		<string key="file" value="esp_random.h" />
	</trace>
	<trace>
		<string key="file" value="esp_sleep.h" />
	</trace>
	<trace>
		<string key="file" value="clk_ctrl_os.h" />
	</trace>
	<trace>
		<string key="file" value="compare_set.h" />
	</trace>
	<trace>
		<string key="file" value="cpu.h" />
	</trace>
	<trace>
		<string key="file" value="clk.h" />
	</trace>
	<trace>
		<string key="file" value="dport_access.h" />
	</trace>
	<trace>
		<string key="file" value="himem.h" />
	</trace>
	<trace>
		<string key="file" value="spiram.h" />
	</trace>
	<trace>
		<string key="file" value="esp_crypto_lock.h" />
	</trace>
	<trace>
		<string key="file" value="esp_ds.h" />
	</trace>
	<trace>
		<string key="file" value="esp_hmac.h" />
	</trace>
	<trace>
		<string key="file" value="soc_memprot_types.h" />
	</trace>
	<trace>
		<string key="file" value="memprot.h" />
	</trace>
	<trace>
		<string key="file" value="esp_himem.h" />
	</trace>
	<trace>
		<string key="file" value="esp_spiram.h" />
	</trace>
	<trace>
		<string key="file" value="rtc_wdt.h" />
	</trace>
	<trace>
		<string key="file" value="spinlock.h" />
	</trace>
	<trace>
		<string key="file" value="soc_log.h" />
	</trace>
	<trace>
		<string key="file" value="regi2c_apll.h" />
	</trace>
	<trace>
		<string key="file" value="regi2c_bbpll.h" />
	</trace>
	<trace>
		<string key="file" value="regi2c_ctrl.h" />
	</trace>
	<trace>
		<string key="file" value="rtc_clk_common.h" />
	</trace>
	<trace>
		<string key="file" value="spiram_psram.h" />
	</trace>
	<trace>
		<string key="file" value="esp_insights.h" />
	</trace>
	<trace>
		<string key="file" value="esp_ipc.h" />
	</trace>
	<trace>
		<string key="file" value="esp_ipc_isr.h" />
	</trace>
	<trace>
		<string key="file" value="esp_lcd_panel_commands.h" />
	</trace>
	<trace>
		<string key="file" value="esp_lcd_panel_io.h" />
	</trace>
	<trace>
		<string key="file" value="esp_lcd_panel_ops.h" />
	</trace>
	<trace>
		<string key="file" value="esp_lcd_panel_rgb.h" />
	</trace>
	<trace>
		<string key="file" value="esp_lcd_panel_vendor.h" />
	</trace>
	<trace>
		<string key="file" value="esp_lcd_types.h" />
	</trace>
	<trace>
		<string key="file" value="esp_lcd_panel_interface.h" />
	</trace>
	<trace>
		<string key="file" value="esp_lcd_panel_io_interface.h" />
	</trace>
	<trace>
		<string key="file" value="esp_littlefs.h" />
	</trace>
	<trace>
		<string key="file" value="esp_local_ctrl.h" />
	</trace>
	<trace>
		<string key="file" value="esp_netif.h" />
	</trace>
	<trace>
		<string key="file" value="esp_netif_defaults.h" />
	</trace>
	<trace>
		<string key="file" value="esp_netif_ip_addr.h" />
	</trace>
	<trace>
		<string key="file" value="esp_netif_net_stack.h" />
	</trace>
	<trace>
		<string key="file" value="esp_netif_ppp.h" />
	</trace>
	<trace>
		<string key="file" value="esp_netif_slip.h" />
	</trace>
	<trace>
		<string key="file" value="esp_netif_sta_list.h" />
	</trace>
	<trace>
		<string key="file" value="esp_netif_types.h" />
	</trace>
	<trace>
		<string key="file" value="phy_init_data.h" />
	</trace>
	<trace>
		<string key="file" value="esp_phy_init.h" />
	</trace>
	<trace>
		<string key="file" value="phy.h" />
	</trace>
	<trace>
		<string key="file" value="pm.h" />
	</trace>
	<trace>
		<string key="file" value="esp_pm.h" />
	</trace>
	<trace>
		<string key="file" value="pm_impl.h" />
	</trace>
	<trace>
		<string key="file" value="pm_trace.h" />
	</trace>
	<trace>
		<string key="file" value="esp_rmaker_console.h" />
	</trace>
	<trace>
		<string key="file" value="esp_rmaker_core.h" />
	</trace>
	<trace>
		<string key="file" value="esp_rmaker_mqtt.h" />
	</trace>
	<trace>
		<string key="file" value="esp_rmaker_ota.h" />
	</trace>
	<trace>
		<string key="file" value="esp_rmaker_scenes.h" />
	</trace>
	<trace>
		<string key="file" value="esp_rmaker_schedule.h" />
	</trace>
	<trace>
		<string key="file" value="esp_rmaker_standard_devices.h" />
	</trace>
	<trace>
		<string key="file" value="esp_rmaker_standard_params.h" />
	</trace>
	<trace>
		<string key="file" value="esp_rmaker_standard_services.h" />
	</trace>
	<trace>
		<string key="file" value="esp_rmaker_standard_types.h" />
	</trace>
	<trace>
		<string key="file" value="esp_rmaker_user_mapping.h" />
	</trace>
	<trace>
		<string key="file" value="ringbuf.h" />
	</trace>
	<trace>
		<string key="file" value="esp_rom_caps.h" />
	</trace>
	<trace>
		<string key="file" value="rsa_pss.h" />
	</trace>
	<trace>
		<string key="file" value="apb_backup_dma.h" />
	</trace>
	<trace>
		<string key="file" value="digital_signature.h" />
	</trace>
	<trace>
		<string key="file" value="esp_flash.h" />
	</trace>
	<trace>
		<string key="file" value="rom_layout.h" />
	</trace>
	<trace>
		<string key="file" value="opi_flash.h" />
	</trace>
	<trace>
		<string key="file" value="cdc_acm.h" />
	</trace>
	<trace>
		<string key="file" value="chip_usb_dw_wrapper.h" />
	</trace>
	<trace>
		<string key="file" value="cpio.h" />
	</trace>
	<trace>
		<string key="file" value="usb_cdc.h" />
	</trace>
	<trace>
		<string key="file" value="usb_common.h" />
	</trace>
	<trace>
		<string key="file" value="usb_dc.h" />
	</trace>
	<trace>
		<string key="file" value="usb_descriptor.h" />
	</trace>
	<trace>
		<string key="file" value="usb_device.h" />
	</trace>
	<trace>
		<string key="file" value="usb_dfu.h" />
	</trace>
	<trace>
		<string key="file" value="usb_os_glue.h" />
	</trace>
	<trace>
		<string key="file" value="usb_persist.h" />
	</trace>
	<trace>
		<string key="file" value="esp_rom_crc.h" />
	</trace>
	<trace>
		<string key="file" value="esp_rom_efuse.h" />
	</trace>
	<trace>
		<string key="file" value="esp_rom_gpio.h" />
	</trace>
	<trace>
		<string key="file" value="esp_rom_md5.h" />
	</trace>
	<trace>
		<string key="file" value="esp_rom_sys.h" />
	</trace>
	<trace>
		<string key="file" value="esp_rom_tjpgd.h" />
	</trace>
	<trace>
		<string key="file" value="esp_rom_uart.h" />
	</trace>
	<trace>
		<string key="file" value="reset_reasons.h" />
	</trace>
	<trace>
		<string key="file" value="esp_schedule.h" />
	</trace>
	<trace>
		<string key="file" value="essl.h" />
	</trace>
	<trace>
		<string key="file" value="essl_sdio.h" />
	</trace>
	<trace>
		<string key="file" value="essl_spi.h" />
	</trace>
	<trace>
		<string key="file" value="eh_frame_parser.h" />
	</trace>
	<trace>
		<string key="file" value="esp_debug_helpers.h" />
	</trace>
	<trace>
		<string key="file" value="esp_expression_with_stack.h" />
	</trace>
	<trace>
		<string key="file" value="esp_freertos_hooks.h" />
	</trace>
	<trace>
		<string key="file" value="esp_int_wdt.h" />
	</trace>
	<trace>
		<string key="file" value="crosscore_int.h" />
	</trace>
	<trace>
		<string key="file" value="dbg_stubs.h" />
	</trace>
	<trace>
		<string key="file" value="panic_internal.h" />
	</trace>
	<trace>
		<string key="file" value="startup_internal.h" />
	</trace>
	<trace>
		<string key="file" value="system_internal.h" />
	</trace>
	<trace>
		<string key="file" value="usb_console.h" />
	</trace>
	<trace>
		<string key="file" value="esp_system.h" />
	</trace>
	<trace>
		<string key="file" value="esp_task.h" />
	</trace>
	<trace>
		<string key="file" value="esp_task_wdt.h" />
	</trace>
	<trace>
		<string key="file" value="esp_xt_wdt.h" />
	</trace>
	<trace>
		<string key="file" value="brownout.h" />
	</trace>
	<trace>
		<string key="file" value="cache_err_int.h" />
	</trace>
	<trace>
		<string key="file" value="trax.h" />
	</trace>
	<trace>
		<string key="file" value="esp_timer_private.h" />
	</trace>
	<trace>
		<string key="file" value="esp_timer.h" />
	</trace>
	<trace>
		<string key="file" value="esp_websocket_client.h" />
	</trace>
	<trace>
		<string key="file" value="esp_coexist.h" />
	</trace>
	<trace>
		<string key="file" value="esp_coexist_adapter.h" />
	</trace>
	<trace>
		<string key="file" value="esp_coexist_internal.h" />
	</trace>
	<trace>
		<string key="file" value="esp_mesh.h" />
	</trace>
	<trace>
		<string key="file" value="esp_mesh_internal.h" />
	</trace>
	<trace>
		<string key="file" value="esp_now.h" />
	</trace>
	<trace>
		<string key="file" value="esp_wifi_private.h" />
	</trace>
	<trace>
		<string key="file" value="esp_wifi_types_private.h" />
	</trace>
	<trace>
		<string key="file" value="wifi.h" />
	</trace>
	<trace>
		<string key="file" value="wifi_os_adapter.h" />
	</trace>
	<trace>
		<string key="file" value="wifi_types.h" />
	</trace>
	<trace>
		<string key="file" value="esp_smartconfig.h" />
	</trace>
	<trace>
		<string key="file" value="esp_wifi.h" />
	</trace>
	<trace>
		<string key="file" value="esp_wifi_crypto_types.h" />
	</trace>
	<trace>
		<string key="file" value="esp_wifi_default.h" />
	</trace>
	<trace>
		<string key="file" value="esp_wifi_netif.h" />
	</trace>
	<trace>
		<string key="file" value="esp_wifi_types.h" />
	</trace>
	<trace>
		<string key="file" value="smartconfig_ack.h" />
	</trace>
	<trace>
		<string key="file" value="esp_core_dump.h" />
	</trace>
	<trace>
		<string key="file" value="esp_core_dump_summary_port.h" />
	</trace>
	<trace>
		<string key="file" value="ascii.h" />
	</trace>
	<trace>
		<string key="file" value="asciitab.h" />
	</trace>
	<trace>
		<string key="file" value="expat.h" />
	</trace>
	<trace>
		<string key="file" value="expat_external.h" />
	</trace>
	<trace>
		<string key="file" value="iasciitab.h" />
	</trace>
	<trace>
		<string key="file" value="internal.h" />
	</trace>
	<trace>
		<string key="file" value="latin1tab.h" />
	</trace>
	<trace>
		<string key="file" value="nametab.h" />
	</trace>
	<trace>
		<string key="file" value="siphash.h" />
	</trace>
	<trace>
		<string key="file" value="utf8tab.h" />
	</trace>
	<trace>
		<string key="file" value="winconfig.h" />
	</trace>
	<trace>
		<string key="file" value="xmlrole.h" />
	</trace>
	<trace>
		<string key="file" value="xmltok.h" />
	</trace>
	<trace>
		<string key="file" value="xmltok_impl.h" />
	</trace>
	<trace>
		<string key="file" value="expat_config.h" />
	</trace>
	<trace>
		<string key="file" value="diskio_impl.h" />
	</trace>
	<trace>
		<string key="file" value="diskio_rawflash.h" />
	</trace>
	<trace>
		<string key="file" value="diskio_sdmmc.h" />
	</trace>
	<trace>
		<string key="file" value="diskio_wl.h" />
	</trace>
	<trace>
		<string key="file" value="diskio.h" />
	</trace>
	<trace>
		<string key="file" value="ff.h" />
	</trace>
	<trace>
		<string key="file" value="ffconf.h" />
	</trace>
	<trace>
		<string key="file" value="esp_vfs_fat.h" />
	</trace>
	<trace>
		<string key="file" value="vfs_fat_internal.h" />
	</trace>
	<trace>
		<string key="file" value="fb_gfx.h" />
	</trace>
	<trace>
		<string key="file" value="esp_modbus_common.h" />
	</trace>
	<trace>
		<string key="file" value="esp_modbus_master.h" />
	</trace>
	<trace>
		<string key="file" value="esp_modbus_slave.h" />
	</trace>
	<trace>
		<string key="file" value="mbcontroller.h" />
	</trace>
	<trace>
		<string key="file" value="FreeRTOSConfig.h" />
	</trace>
	<trace>
		<string key="file" value="idf_additions.h" />
	</trace>
	<trace>
		<string key="file" value="idf_additions_inc.h" />
	</trace>
	<trace>
		<string key="file" value="task_snapshot.h" />
	</trace>
	<trace>
		<string key="file" value="FreeRTOS.h" />
	</trace>
	<trace>
		<string key="file" value="StackMacros.h" />
	</trace>
	<trace>
		<string key="file" value="atomic.h" />
	</trace>
	<trace>
		<string key="file" value="croutine.h" />
	</trace>
	<trace>
		<string key="file" value="deprecated_definitions.h" />
	</trace>
	<trace>
		<string key="file" value="event_groups.h" />
	</trace>
	<trace>
		<string key="file" value="message_buffer.h" />
	</trace>
	<trace>
		<string key="file" value="mpu_prototypes.h" />
	</trace>
	<trace>
		<string key="file" value="mpu_wrappers.h" />
	</trace>
	<trace>
		<string key="file" value="portable.h" />
	</trace>
	<trace>
		<string key="file" value="projdefs.h" />
	</trace>
	<trace>
		<string key="file" value="semphr.h" />
	</trace>
	<trace>
		<string key="file" value="stack_macros.h" />
	</trace>
	<trace>
		<string key="file" value="stream_buffer.h" />
	</trace>
	<trace>
		<string key="file" value="task.h" />
	</trace>
	<trace>
		<string key="file" value="timers.h" />
	</trace>
	<trace>
		<string key="file" value="FreeRTOSConfig_arch.h" />
	</trace>
	<trace>
		<string key="file" value="portbenchmark.h" />
	</trace>
	<trace>
		<string key="file" value="portmacro.h" />
	</trace>
	<trace>
		<string key="file" value="portmacro_deprecated.h" />
	</trace>
	<trace>
		<string key="file" value="xtensa_api.h" />
	</trace>
	<trace>
		<string key="file" value="xtensa_config.h" />
	</trace>
	<trace>
		<string key="file" value="xtensa_context.h" />
	</trace>
	<trace>
		<string key="file" value="xtensa_rtos.h" />
	</trace>
	<trace>
		<string key="file" value="xtensa_timer.h" />
	</trace>
	<trace>
		<string key="file" value="iot_button.h" />
	</trace>
	<trace>
		<string key="file" value="adc_hal.h" />
	</trace>
	<trace>
		<string key="file" value="adc_hal_conf.h" />
	</trace>
	<trace>
		<string key="file" value="adc_ll.h" />
	</trace>
	<trace>
		<string key="file" value="aes_ll.h" />
	</trace>
	<trace>
		<string key="file" value="can_hal.h" />
	</trace>
	<trace>
		<string key="file" value="can_ll.h" />
	</trace>
	<trace>
		<string key="file" value="can_types.h" />
	</trace>
	<trace>
		<string key="file" value="clk_gate_ll.h" />
	</trace>
	<trace>
		<string key="file" value="cpu_ll.h" />
	</trace>
	<trace>
		<string key="file" value="dac_ll.h" />
	</trace>
	<trace>
		<string key="file" value="emac_ll.h" />
	</trace>
	<trace>
		<string key="file" value="gpio_ll.h" />
	</trace>
	<trace>
		<string key="file" value="i2c_ll.h" />
	</trace>
	<trace>
		<string key="file" value="i2s_ll.h" />
	</trace>
	<trace>
		<string key="file" value="interrupt_controller_ll.h" />
	</trace>
	<trace>
		<string key="file" value="ledc_ll.h" />
	</trace>
	<trace>
		<string key="file" value="mcpwm_ll.h" />
	</trace>
	<trace>
		<string key="file" value="mpu_ll.h" />
	</trace>
	<trace>
		<string key="file" value="mwdt_ll.h" />
	</trace>
	<trace>
		<string key="file" value="pcnt_ll.h" />
	</trace>
	<trace>
		<string key="file" value="rmt_ll.h" />
	</trace>
	<trace>
		<string key="file" value="rtc_cntl_ll.h" />
	</trace>
	<trace>
		<string key="file" value="rtc_io_ll.h" />
	</trace>
	<trace>
		<string key="file" value="rwdt_ll.h" />
	</trace>
	<trace>
		<string key="file" value="sha_ll.h" />
	</trace>
	<trace>
		<string key="file" value="sigmadelta_ll.h" />
	</trace>
	<trace>
		<string key="file" value="soc_ll.h" />
	</trace>
	<trace>
		<string key="file" value="spi_flash_encrypted_ll.h" />
	</trace>
	<trace>
		<string key="file" value="spi_flash_ll.h" />
	</trace>
	<trace>
		<string key="file" value="spi_ll.h" />
	</trace>
	<trace>
		<string key="file" value="timer_ll.h" />
	</trace>
	<trace>
		<string key="file" value="touch_sensor_hal.h" />
	</trace>
	<trace>
		<string key="file" value="touch_sensor_ll.h" />
	</trace>
	<trace>
		<string key="file" value="trace_ll.h" />
	</trace>
	<trace>
		<string key="file" value="twai_ll.h" />
	</trace>
	<trace>
		<string key="file" value="uart_ll.h" />
	</trace>
	<trace>
		<string key="file" value="adc_types.h" />
	</trace>
	<trace>
		<string key="file" value="aes_hal.h" />
	</trace>
	<trace>
		<string key="file" value="aes_types.h" />
	</trace>
	<trace>
		<string key="file" value="brownout_hal.h" />
	</trace>
	<trace>
		<string key="file" value="cpu_hal.h" />
	</trace>
	<trace>
		<string key="file" value="cpu_types.h" />
	</trace>
	<trace>
		<string key="file" value="dac_hal.h" />
	</trace>
	<trace>
		<string key="file" value="dac_types.h" />
	</trace>
	<trace>
		<string key="file" value="dma_types.h" />
	</trace>
	<trace>
		<string key="file" value="ds_hal.h" />
	</trace>
	<trace>
		<string key="file" value="emac_hal.h" />
	</trace>
	<trace>
		<string key="file" value="esp_flash_err.h" />
	</trace>
	<trace>
		<string key="file" value="eth_types.h" />
	</trace>
	<trace>
		<string key="file" value="gdma_hal.h" />
	</trace>
	<trace>
		<string key="file" value="gpio_hal.h" />
	</trace>
	<trace>
		<string key="file" value="gpio_types.h" />
	</trace>
	<trace>
		<string key="file" value="i2c_hal.h" />
	</trace>
	<trace>
		<string key="file" value="i2c_types.h" />
	</trace>
	<trace>
		<string key="file" value="i2s_hal.h" />
	</trace>
	<trace>
		<string key="file" value="i2s_types.h" />
	</trace>
	<trace>
		<string key="file" value="interrupt_controller_hal.h" />
	</trace>
	<trace>
		<string key="file" value="interrupt_controller_types.h" />
	</trace>
	<trace>
		<string key="file" value="lcd_hal.h" />
	</trace>
	<trace>
		<string key="file" value="lcd_types.h" />
	</trace>
	<trace>
		<string key="file" value="ledc_hal.h" />
	</trace>
	<trace>
		<string key="file" value="ledc_types.h" />
	</trace>
	<trace>
		<string key="file" value="mcpwm_hal.h" />
	</trace>
	<trace>
		<string key="file" value="mcpwm_types.h" />
	</trace>
	<trace>
		<string key="file" value="memprot_types.h" />
	</trace>
	<trace>
		<string key="file" value="mpu_hal.h" />
	</trace>
	<trace>
		<string key="file" value="mpu_types.h" />
	</trace>
	<trace>
		<string key="file" value="pcnt_hal.h" />
	</trace>
	<trace>
		<string key="file" value="pcnt_types.h" />
	</trace>
	<trace>
		<string key="file" value="rmt_hal.h" />
	</trace>
	<trace>
		<string key="file" value="rmt_types.h" />
	</trace>
	<trace>
		<string key="file" value="rtc_hal.h" />
	</trace>
	<trace>
		<string key="file" value="rtc_io_hal.h" />
	</trace>
	<trace>
		<string key="file" value="rtc_io_types.h" />
	</trace>
	<trace>
		<string key="file" value="sdio_slave_hal.h" />
	</trace>
	<trace>
		<string key="file" value="sdio_slave_ll.h" />
	</trace>
	<trace>
		<string key="file" value="sdio_slave_types.h" />
	</trace>
	<trace>
		<string key="file" value="sha_hal.h" />
	</trace>
	<trace>
		<string key="file" value="sha_types.h" />
	</trace>
	<trace>
		<string key="file" value="sigmadelta_hal.h" />
	</trace>
	<trace>
		<string key="file" value="sigmadelta_types.h" />
	</trace>
	<trace>
		<string key="file" value="soc_hal.h" />
	</trace>
	<trace>
		<string key="file" value="spi_flash_encrypt_hal.h" />
	</trace>
	<trace>
		<string key="file" value="spi_flash_hal.h" />
	</trace>
	<trace>
		<string key="file" value="spi_flash_types.h" />
	</trace>
	<trace>
		<string key="file" value="spi_hal.h" />
	</trace>
	<trace>
		<string key="file" value="spi_slave_hal.h" />
	</trace>
	<trace>
		<string key="file" value="spi_slave_hd_hal.h" />
	</trace>
	<trace>
		<string key="file" value="spi_types.h" />
	</trace>
	<trace>
		<string key="file" value="systimer_hal.h" />
	</trace>
	<trace>
		<string key="file" value="systimer_types.h" />
	</trace>
	<trace>
		<string key="file" value="timer_hal.h" />
	</trace>
	<trace>
		<string key="file" value="timer_types.h" />
	</trace>
	<trace>
		<string key="file" value="touch_sensor_types.h" />
	</trace>
	<trace>
		<string key="file" value="twai_hal.h" />
	</trace>
	<trace>
		<string key="file" value="twai_types.h" />
	</trace>
	<trace>
		<string key="file" value="uart_hal.h" />
	</trace>
	<trace>
		<string key="file" value="uart_types.h" />
	</trace>
	<trace>
		<string key="file" value="uhci_types.h" />
	</trace>
	<trace>
		<string key="file" value="usb_hal.h" />
	</trace>
	<trace>
		<string key="file" value="usb_phy_hal.h" />
	</trace>
	<trace>
		<string key="file" value="usb_phy_types.h" />
	</trace>
	<trace>
		<string key="file" value="usb_types_private.h" />
	</trace>
	<trace>
		<string key="file" value="usbh_hal.h" />
	</trace>
	<trace>
		<string key="file" value="usbh_ll.h" />
	</trace>
	<trace>
		<string key="file" value="wdt_hal.h" />
	</trace>
	<trace>
		<string key="file" value="wdt_types.h" />
	</trace>
	<trace>
		<string key="file" value="xt_wdt_hal.h" />
	</trace>
	<trace>
		<string key="file" value="assert.h" />
	</trace>
	<trace>
		<string key="file" value="check.h" />
	</trace>
	<trace>
		<string key="file" value="log.h" />
	</trace>
	<trace>
		<string key="file" value="misc.h" />
	</trace>
	<trace>
		<string key="file" value="esp_heap_caps.h" />
	</trace>
	<trace>
		<string key="file" value="esp_heap_caps_init.h" />
	</trace>
	<trace>
		<string key="file" value="esp_heap_task_info.h" />
	</trace>
	<trace>
		<string key="file" value="esp_heap_trace.h" />
	</trace>
	<trace>
		<string key="file" value="heap_memory_layout.h" />
	</trace>
	<trace>
		<string key="file" value="multi_heap.h" />
	</trace>
	<trace>
		<string key="file" value="soc_memory_layout.h" />
	</trace>
	<trace>
		<string key="file" value="idf_performance_target.h" />
	</trace>
	<trace>
		<string key="file" value="idf_performance.h" />
	</trace>
	<trace>
		<string key="file" value="esp_ieee802154.h" />
	</trace>
	<trace>
		<string key="file" value="esp_ieee802154_types.h" />
	</trace>
	<trace>
		<string key="file" value="jsmn.h" />
	</trace>
	<trace>
		<string key="file" value="cJSON.h" />
	</trace>
	<trace>
		<string key="file" value="cJSON_Utils.h" />
	</trace>
	<trace>
		<string key="file" value="common.h" />
	</trace>
	<trace>
		<string key="file" value="ProductionCode.h" />
	</trace>
	<trace>
		<string key="file" value="ProductionCode2.h" />
	</trace>
	<trace>
		<string key="file" value="UnityHelper.h" />
	</trace>
	<trace>
		<string key="file" value="unity_config.h" />
	</trace>
	<trace>
		<string key="file" value="unity_fixture.h" />
	</trace>
	<trace>
		<string key="file" value="unity_fixture_internals.h" />
	</trace>
	<trace>
		<string key="file" value="unity_fixture_malloc_overrides.h" />
	</trace>
	<trace>
		<string key="file" value="unity_output_Spy.h" />
	</trace>
	<trace>
		<string key="file" value="unity.h" />
	</trace>
	<trace>
		<string key="file" value="unity_internals.h" />
	</trace>
	<trace>
		<string key="file" value="testsample_head1.h" />
	</trace>
	<trace>
		<string key="file" value="testsample_mock_head1.h" />
	</trace>
	<trace>
		<string key="file" value="CException.h" />
	</trace>
	<trace>
		<string key="file" value="Defs.h" />
	</trace>
	<trace>
		<string key="file" value="mockMock.h" />
	</trace>
	<trace>
		<string key="file" value="json_generator.h" />
	</trace>
	<trace>
		<string key="file" value="json_parser.h" />
	</trace>
	<trace>
		<string key="file" value="testutil.h" />
	</trace>
	<trace>
		<string key="file" value="sodium.h" />
	</trace>
	<trace>
		<string key="file" value="core.h" />
	</trace>
	<trace>
		<string key="file" value="crypto_aead_aes256gcm.h" />
	</trace>
	<trace>
		<string key="file" value="crypto_aead_chacha20poly1305.h" />
	</trace>
	<trace>
		<string key="file" value="crypto_aead_xchacha20poly1305.h" />
	</trace>
	<trace>
		<string key="file" value="crypto_auth.h" />
	</trace>
	<trace>
		<string key="file" value="crypto_auth_hmacsha256.h" />
	</trace>
	<trace>
		<string key="file" value="crypto_auth_hmacsha512.h" />
	</trace>
	<trace>
		<string key="file" value="crypto_auth_hmacsha512256.h" />
	</trace>
	<trace>
		<string key="file" value="crypto_box.h" />
	</trace>
	<trace>
		<string key="file" value="crypto_box_curve25519xchacha20poly1305.h" />
	</trace>
	<trace>
		<string key="file" value="crypto_box_curve25519xsalsa20poly1305.h" />
	</trace>
	<trace>
		<string key="file" value="crypto_core_ed25519.h" />
	</trace>
	<trace>
		<string key="file" value="crypto_core_hchacha20.h" />
	</trace>
	<trace>
		<string key="file" value="crypto_core_hsalsa20.h" />
	</trace>
	<trace>
		<string key="file" value="crypto_core_ristretto255.h" />
	</trace>
	<trace>
		<string key="file" value="crypto_core_salsa20.h" />
	</trace>
	<trace>
		<string key="file" value="crypto_core_salsa2012.h" />
	</trace>
	<trace>
		<string key="file" value="crypto_core_salsa208.h" />
	</trace>
	<trace>
		<string key="file" value="crypto_generichash.h" />
	</trace>
	<trace>
		<string key="file" value="crypto_generichash_blake2b.h" />
	</trace>
	<trace>
		<string key="file" value="crypto_hash.h" />
	</trace>
	<trace>
		<string key="file" value="crypto_hash_sha256.h" />
	</trace>
	<trace>
		<string key="file" value="crypto_hash_sha512.h" />
	</trace>
	<trace>
		<string key="file" value="crypto_kdf.h" />
	</trace>
	<trace>
		<string key="file" value="crypto_kdf_blake2b.h" />
	</trace>
	<trace>
		<string key="file" value="crypto_kx.h" />
	</trace>
	<trace>
		<string key="file" value="crypto_onetimeauth.h" />
	</trace>
	<trace>
		<string key="file" value="crypto_onetimeauth_poly1305.h" />
	</trace>
	<trace>
		<string key="file" value="crypto_pwhash.h" />
	</trace>
	<trace>
		<string key="file" value="crypto_pwhash_argon2i.h" />
	</trace>
	<trace>
		<string key="file" value="crypto_pwhash_argon2id.h" />
	</trace>
	<trace>
		<string key="file" value="crypto_pwhash_scryptsalsa208sha256.h" />
	</trace>
	<trace>
		<string key="file" value="crypto_scalarmult.h" />
	</trace>
	<trace>
		<string key="file" value="crypto_scalarmult_curve25519.h" />
	</trace>
	<trace>
		<string key="file" value="crypto_scalarmult_ed25519.h" />
	</trace>
	<trace>
		<string key="file" value="crypto_scalarmult_ristretto255.h" />
	</trace>
	<trace>
		<string key="file" value="crypto_secretbox.h" />
	</trace>
	<trace>
		<string key="file" value="crypto_secretbox_xchacha20poly1305.h" />
	</trace>
	<trace>
		<string key="file" value="crypto_secretbox_xsalsa20poly1305.h" />
	</trace>
	<trace>
		<string key="file" value="crypto_secretstream_xchacha20poly1305.h" />
	</trace>
	<trace>
		<string key="file" value="crypto_shorthash.h" />
	</trace>
	<trace>
		<string key="file" value="crypto_shorthash_siphash24.h" />
	</trace>
	<trace>
		<string key="file" value="crypto_sign.h" />
	</trace>
	<trace>
		<string key="file" value="crypto_sign_ed25519.h" />
	</trace>
	<trace>
		<string key="file" value="crypto_sign_edwards25519sha512batch.h" />
	</trace>
	<trace>
		<string key="file" value="crypto_stream.h" />
	</trace>
	<trace>
		<string key="file" value="crypto_stream_chacha20.h" />
	</trace>
	<trace>
		<string key="file" value="crypto_stream_salsa20.h" />
	</trace>
	<trace>
		<string key="file" value="crypto_stream_salsa2012.h" />
	</trace>
	<trace>
		<string key="file" value="crypto_stream_salsa208.h" />
	</trace>
	<trace>
		<string key="file" value="crypto_stream_xchacha20.h" />
	</trace>
	<trace>
		<string key="file" value="crypto_stream_xsalsa20.h" />
	</trace>
	<trace>
		<string key="file" value="crypto_verify_16.h" />
	</trace>
	<trace>
		<string key="file" value="crypto_verify_32.h" />
	</trace>
	<trace>
		<string key="file" value="crypto_verify_64.h" />
	</trace>
	<trace>
		<string key="file" value="export.h" />
	</trace>
	<trace>
		<string key="file" value="chacha20_ietf_ext.h" />
	</trace>
	<trace>
		<string key="file" value="ed25519_ref10.h" />
	</trace>
	<trace>
		<string key="file" value="ed25519_ref10_fe_25_5.h" />
	</trace>
	<trace>
		<string key="file" value="ed25519_ref10_fe_51.h" />
	</trace>
	<trace>
		<string key="file" value="implementations.h" />
	</trace>
	<trace>
		<string key="file" value="sse2_64_32.h" />
	</trace>
	<trace>
		<string key="file" value="randombytes.h" />
	</trace>
	<trace>
		<string key="file" value="randombytes_internal_random.h" />
	</trace>
	<trace>
		<string key="file" value="randombytes_sysrandom.h" />
	</trace>
	<trace>
		<string key="file" value="runtime.h" />
	</trace>
	<trace>
		<string key="file" value="version.h" />
	</trace>
	<trace>
		<string key="file" value="esp_log.h" />
	</trace>
	<trace>
		<string key="file" value="esp_log_internal.h" />
	</trace>
	<trace>
		<string key="file" value="dhcpserver.h" />
	</trace>
	<trace>
		<string key="file" value="dhcpserver_options.h" />
	</trace>
	<trace>
		<string key="file" value="esp_ping.h" />
	</trace>
	<trace>
		<string key="file" value="esp_sntp.h" />
	</trace>
	<trace>
		<string key="file" value="ping.h" />
	</trace>
	<trace>
		<string key="file" value="ping_sock.h" />
	</trace>
	<trace>
		<string key="file" value="sntp.h" />
	</trace>
	<trace>
		<string key="file" value="inet.h" />
	</trace>
	<trace>
		<string key="file" value="if.h" />
	</trace>
	<trace>
		<string key="file" value="netdb.h" />
	</trace>
	<trace>
		<string key="file" value="socket.h" />
	</trace>
	<trace>
		<string key="file" value="errno.h" />
	</trace>
	<trace>
		<string key="file" value="altcp.h" />
	</trace>
	<trace>
		<string key="file" value="altcp_tcp.h" />
	</trace>
	<trace>
		<string key="file" value="altcp_tls.h" />
	</trace>
	<trace>
		<string key="file" value="api.h" />
	</trace>
	<trace>
		<string key="file" value="altcp_proxyconnect.h" />
	</trace>
	<trace>
		<string key="file" value="altcp_tls_mbedtls_opts.h" />
	</trace>
	<trace>
		<string key="file" value="fs.h" />
	</trace>
	<trace>
		<string key="file" value="http_client.h" />
	</trace>
	<trace>
		<string key="file" value="httpd.h" />
	</trace>
	<trace>
		<string key="file" value="httpd_opts.h" />
	</trace>
	<trace>
		<string key="file" value="lwiperf.h" />
	</trace>
	<trace>
		<string key="file" value="mdns.h" />
	</trace>
	<trace>
		<string key="file" value="mdns_opts.h" />
	</trace>
	<trace>
		<string key="file" value="mdns_priv.h" />
	</trace>
	<trace>
		<string key="file" value="mqtt.h" />
	</trace>
	<trace>
		<string key="file" value="mqtt_opts.h" />
	</trace>
	<trace>
		<string key="file" value="mqtt_priv.h" />
	</trace>
	<trace>
		<string key="file" value="netbiosns.h" />
	</trace>
	<trace>
		<string key="file" value="netbiosns_opts.h" />
	</trace>
	<trace>
		<string key="file" value="smtp.h" />
	</trace>
	<trace>
		<string key="file" value="smtp_opts.h" />
	</trace>
	<trace>
		<string key="file" value="snmp.h" />
	</trace>
	<trace>
		<string key="file" value="snmp_core.h" />
	</trace>
	<trace>
		<string key="file" value="snmp_mib2.h" />
	</trace>
	<trace>
		<string key="file" value="snmp_opts.h" />
	</trace>
	<trace>
		<string key="file" value="snmp_scalar.h" />
	</trace>
	<trace>
		<string key="file" value="snmp_snmpv2_framework.h" />
	</trace>
	<trace>
		<string key="file" value="snmp_snmpv2_usm.h" />
	</trace>
	<trace>
		<string key="file" value="snmp_table.h" />
	</trace>
	<trace>
		<string key="file" value="snmp_threadsync.h" />
	</trace>
	<trace>
		<string key="file" value="snmpv3.h" />
	</trace>
	<trace>
		<string key="file" value="sntp_opts.h" />
	</trace>
	<trace>
		<string key="file" value="tftp_opts.h" />
	</trace>
	<trace>
		<string key="file" value="tftp_server.h" />
	</trace>
	<trace>
		<string key="file" value="arch.h" />
	</trace>
	<trace>
		<string key="file" value="autoip.h" />
	</trace>
	<trace>
		<string key="file" value="debug.h" />
	</trace>
	<trace>
		<string key="file" value="def.h" />
	</trace>
	<trace>
		<string key="file" value="dhcp.h" />
	</trace>
	<trace>
		<string key="file" value="dhcp6.h" />
	</trace>
	<trace>
		<string key="file" value="dns.h" />
	</trace>
	<trace>
		<string key="file" value="err.h" />
	</trace>
	<trace>
		<string key="file" value="etharp.h" />
	</trace>
	<trace>
		<string key="file" value="ethip6.h" />
	</trace>
	<trace>
		<string key="file" value="icmp.h" />
	</trace>
	<trace>
		<string key="file" value="icmp6.h" />
	</trace>
	<trace>
		<string key="file" value="if_api.h" />
	</trace>
	<trace>
		<string key="file" value="igmp.h" />
	</trace>
	<trace>
		<string key="file" value="inet_chksum.h" />
	</trace>
	<trace>
		<string key="file" value="init.h" />
	</trace>
	<trace>
		<string key="file" value="ip.h" />
	</trace>
	<trace>
		<string key="file" value="ip4.h" />
	</trace>
	<trace>
		<string key="file" value="ip4_addr.h" />
	</trace>
	<trace>
		<string key="file" value="ip4_frag.h" />
	</trace>
	<trace>
		<string key="file" value="ip4_napt.h" />
	</trace>
	<trace>
		<string key="file" value="ip6.h" />
	</trace>
	<trace>
		<string key="file" value="ip6_addr.h" />
	</trace>
	<trace>
		<string key="file" value="ip6_frag.h" />
	</trace>
	<trace>
		<string key="file" value="ip6_zone.h" />
	</trace>
	<trace>
		<string key="file" value="ip_addr.h" />
	</trace>
	<trace>
		<string key="file" value="lwip_napt.h" />
	</trace>
	<trace>
		<string key="file" value="memp.h" />
	</trace>
	<trace>
		<string key="file" value="mld6.h" />
	</trace>
	<trace>
		<string key="file" value="nd6.h" />
	</trace>
	<trace>
		<string key="file" value="netbuf.h" />
	</trace>
	<trace>
		<string key="file" value="netif.h" />
	</trace>
	<trace>
		<string key="file" value="netifapi.h" />
	</trace>
	<trace>
		<string key="file" value="opt.h" />
	</trace>
	<trace>
		<string key="file" value="pbuf.h" />
	</trace>
	<trace>
		<string key="file" value="altcp_priv.h" />
	</trace>
	<trace>
		<string key="file" value="api_msg.h" />
	</trace>
	<trace>
		<string key="file" value="mem_priv.h" />
	</trace>
	<trace>
		<string key="file" value="memp_priv.h" />
	</trace>
	<trace>
		<string key="file" value="memp_std.h" />
	</trace>
	<trace>
		<string key="file" value="nd6_priv.h" />
	</trace>
	<trace>
		<string key="file" value="raw_priv.h" />
	</trace>
	<trace>
		<string key="file" value="sockets_priv.h" />
	</trace>
	<trace>
		<string key="file" value="tcp_priv.h" />
	</trace>
	<trace>
		<string key="file" value="tcpip_priv.h" />
	</trace>
	<trace>
		<string key="file" value="ethernet.h" />
	</trace>
	<trace>
		<string key="file" value="iana.h" />
	</trace>
	<trace>
		<string key="file" value="ieee.h" />
	</trace>
	<trace>
		<string key="file" value="tcp.h" />
	</trace>
	<trace>
		<string key="file" value="udp.h" />
	</trace>
	<trace>
		<string key="file" value="raw.h" />
	</trace>
	<trace>
		<string key="file" value="sio.h" />
	</trace>
	<trace>
		<string key="file" value="sockets.h" />
	</trace>
	<trace>
		<string key="file" value="stats.h" />
	</trace>
	<trace>
		<string key="file" value="sys.h" />
	</trace>
	<trace>
		<string key="file" value="tcpbase.h" />
	</trace>
	<trace>
		<string key="file" value="tcpip.h" />
	</trace>
	<trace>
		<string key="file" value="timeouts.h" />
	</trace>
	<trace>
		<string key="file" value="bridgeif.h" />
	</trace>
	<trace>
		<string key="file" value="bridgeif_opts.h" />
	</trace>
	<trace>
		<string key="file" value="ieee802154.h" />
	</trace>
	<trace>
		<string key="file" value="lowpan6.h" />
	</trace>
	<trace>
		<string key="file" value="lowpan6_ble.h" />
	</trace>
	<trace>
		<string key="file" value="lowpan6_common.h" />
	</trace>
	<trace>
		<string key="file" value="lowpan6_opts.h" />
	</trace>
	<trace>
		<string key="file" value="ccp.h" />
	</trace>
	<trace>
		<string key="file" value="chap-md5.h" />
	</trace>
	<trace>
		<string key="file" value="chap-new.h" />
	</trace>
	<trace>
		<string key="file" value="chap_ms.h" />
	</trace>
	<trace>
		<string key="file" value="eap.h" />
	</trace>
	<trace>
		<string key="file" value="ecp.h" />
	</trace>
	<trace>
		<string key="file" value="eui64.h" />
	</trace>
	<trace>
		<string key="file" value="fsm.h" />
	</trace>
	<trace>
		<string key="file" value="ipcp.h" />
	</trace>
	<trace>
		<string key="file" value="ipv6cp.h" />
	</trace>
	<trace>
		<string key="file" value="lcp.h" />
	</trace>
	<trace>
		<string key="file" value="magic.h" />
	</trace>
	<trace>
		<string key="file" value="mppe.h" />
	</trace>
	<trace>
		<string key="file" value="arc4.h" />
	</trace>
	<trace>
		<string key="file" value="des.h" />
	</trace>
	<trace>
		<string key="file" value="md4.h" />
	</trace>
	<trace>
		<string key="file" value="md5.h" />
	</trace>
	<trace>
		<string key="file" value="sha1.h" />
	</trace>
	<trace>
		<string key="file" value="ppp.h" />
	</trace>
	<trace>
		<string key="file" value="ppp_impl.h" />
	</trace>
	<trace>
		<string key="file" value="ppp_opts.h" />
	</trace>
	<trace>
		<string key="file" value="pppapi.h" />
	</trace>
	<trace>
		<string key="file" value="pppcrypt.h" />
	</trace>
	<trace>
		<string key="file" value="pppdebug.h" />
	</trace>
	<trace>
		<string key="file" value="pppoe.h" />
	</trace>
	<trace>
		<string key="file" value="pppol2tp.h" />
	</trace>
	<trace>
		<string key="file" value="pppos.h" />
	</trace>
	<trace>
		<string key="file" value="upap.h" />
	</trace>
	<trace>
		<string key="file" value="vj.h" />
	</trace>
	<trace>
		<string key="file" value="slipif.h" />
	</trace>
	<trace>
		<string key="file" value="zepif.h" />
	</trace>
	<trace>
		<string key="file" value="cc.h" />
	</trace>
	<trace>
		<string key="file" value="perf.h" />
	</trace>
	<trace>
		<string key="file" value="sys_arch.h" />
	</trace>
	<trace>
		<string key="file" value="vfs_lwip.h" />
	</trace>
	<trace>
		<string key="file" value="lwip_default_hooks.h" />
	</trace>
	<trace>
		<string key="file" value="lwipopts.h" />
	</trace>
	<trace>
		<string key="file" value="dhcp_state.h" />
	</trace>
	<trace>
		<string key="file" value="ethernetif.h" />
	</trace>
	<trace>
		<string key="file" value="openthreadif.h" />
	</trace>
	<trace>
		<string key="file" value="wlanif.h" />
	</trace>
	<trace>
		<string key="file" value="in.h" />
	</trace>
	<trace>
		<string key="file" value="sntp_get_set_time.h" />
	</trace>
	<trace>
		<string key="file" value="aesni.h" />
	</trace>
	<trace>
		<string key="file" value="aria.h" />
	</trace>
	<trace>
		<string key="file" value="asn1.h" />
	</trace>
	<trace>
		<string key="file" value="asn1write.h" />
	</trace>
	<trace>
		<string key="file" value="base64.h" />
	</trace>
	<trace>
		<string key="file" value="bignum.h" />
	</trace>
	<trace>
		<string key="file" value="blowfish.h" />
	</trace>
	<trace>
		<string key="file" value="bn_mul.h" />
	</trace>
	<trace>
		<string key="file" value="camellia.h" />
	</trace>
	<trace>
		<string key="file" value="ccm.h" />
	</trace>
	<trace>
		<string key="file" value="certs.h" />
	</trace>
	<trace>
		<string key="file" value="chacha20.h" />
	</trace>
	<trace>
		<string key="file" value="chachapoly.h" />
	</trace>
	<trace>
		<string key="file" value="check_config.h" />
	</trace>
	<trace>
		<string key="file" value="cipher.h" />
	</trace>
	<trace>
		<string key="file" value="cipher_internal.h" />
	</trace>
	<trace>
		<string key="file" value="cmac.h" />
	</trace>
	<trace>
		<string key="file" value="compat-1.3.h" />
	</trace>
	<trace>
		<string key="file" value="config_psa.h" />
	</trace>
	<trace>
		<string key="file" value="constant_time.h" />
	</trace>
	<trace>
		<string key="file" value="ctr_drbg.h" />
	</trace>
	<trace>
		<string key="file" value="dhm.h" />
	</trace>
	<trace>
		<string key="file" value="ecdh.h" />
	</trace>
	<trace>
		<string key="file" value="ecdsa.h" />
	</trace>
	<trace>
		<string key="file" value="ecjpake.h" />
	</trace>
	<trace>
		<string key="file" value="ecp_internal.h" />
	</trace>
	<trace>
		<string key="file" value="entropy.h" />
	</trace>
	<trace>
		<string key="file" value="entropy_poll.h" />
	</trace>
	<trace>
		<string key="file" value="error.h" />
	</trace>
	<trace>
		<string key="file" value="gcm.h" />
	</trace>
	<trace>
		<string key="file" value="havege.h" />
	</trace>
	<trace>
		<string key="file" value="hkdf.h" />
	</trace>
	<trace>
		<string key="file" value="hmac_drbg.h" />
	</trace>
	<trace>
		<string key="file" value="md.h" />
	</trace>
	<trace>
		<string key="file" value="md2.h" />
	</trace>
	<trace>
		<string key="file" value="md_internal.h" />
	</trace>
	<trace>
		<string key="file" value="memory_buffer_alloc.h" />
	</trace>
	<trace>
		<string key="file" value="net_sockets.h" />
	</trace>
	<trace>
		<string key="file" value="nist_kw.h" />
	</trace>
	<trace>
		<string key="file" value="oid.h" />
	</trace>
	<trace>
		<string key="file" value="padlock.h" />
	</trace>
	<trace>
		<string key="file" value="pem.h" />
	</trace>
	<trace>
		<string key="file" value="pk.h" />
	</trace>
	<trace>
		<string key="file" value="pk_internal.h" />
	</trace>
	<trace>
		<string key="file" value="pkcs11.h" />
	</trace>
	<trace>
		<string key="file" value="pkcs12.h" />
	</trace>
	<trace>
		<string key="file" value="pkcs5.h" />
	</trace>
	<trace>
		<string key="file" value="platform.h" />
	</trace>
	<trace>
		<string key="file" value="platform_time.h" />
	</trace>
	<trace>
		<string key="file" value="platform_util.h" />
	</trace>
	<trace>
		<string key="file" value="poly1305.h" />
	</trace>
	<trace>
		<string key="file" value="psa_util.h" />
	</trace>
	<trace>
		<string key="file" value="ripemd160.h" />
	</trace>
	<trace>
		<string key="file" value="rsa_internal.h" />
	</trace>
	<trace>
		<string key="file" value="sha512.h" />
	</trace>
	<trace>
		<string key="file" value="ssl.h" />
	</trace>
	<trace>
		<string key="file" value="ssl_cache.h" />
	</trace>
	<trace>
		<string key="file" value="ssl_ciphersuites.h" />
	</trace>
	<trace>
		<string key="file" value="ssl_cookie.h" />
	</trace>
	<trace>
		<string key="file" value="ssl_internal.h" />
	</trace>
	<trace>
		<string key="file" value="ssl_ticket.h" />
	</trace>
	<trace>
		<string key="file" value="threading.h" />
	</trace>
	<trace>
		<string key="file" value="timing.h" />
	</trace>
	<trace>
		<string key="file" value="x509.h" />
	</trace>
	<trace>
		<string key="file" value="x509_crl.h" />
	</trace>
	<trace>
		<string key="file" value="x509_crt.h" />
	</trace>
	<trace>
		<string key="file" value="x509_csr.h" />
	</trace>
	<trace>
		<string key="file" value="xtea.h" />
	</trace>
	<trace>
		<string key="file" value="crypto_builtin_composites.h" />
	</trace>
	<trace>
		<string key="file" value="crypto_builtin_primitives.h" />
	</trace>
	<trace>
		<string key="file" value="crypto_compat.h" />
	</trace>
	<trace>
		<string key="file" value="crypto_config.h" />
	</trace>
	<trace>
		<string key="file" value="crypto_driver_common.h" />
	</trace>
	<trace>
		<string key="file" value="crypto_driver_contexts_composites.h" />
	</trace>
	<trace>
		<string key="file" value="crypto_driver_contexts_primitives.h" />
	</trace>
	<trace>
		<string key="file" value="crypto_extra.h" />
	</trace>
	<trace>
		<string key="file" value="crypto_platform.h" />
	</trace>
	<trace>
		<string key="file" value="crypto_se_driver.h" />
	</trace>
	<trace>
		<string key="file" value="crypto_sizes.h" />
	</trace>
	<trace>
		<string key="file" value="crypto_struct.h" />
	</trace>
	<trace>
		<string key="file" value="crypto_types.h" />
	</trace>
	<trace>
		<string key="file" value="crypto_values.h" />
	</trace>
	<trace>
		<string key="file" value="esp_aes.h" />
	</trace>
	<trace>
		<string key="file" value="esp_aes_gcm.h" />
	</trace>
	<trace>
		<string key="file" value="esp_aes_internal.h" />
	</trace>
	<trace>
		<string key="file" value="aes_alt.h" />
	</trace>
	<trace>
		<string key="file" value="bignum_impl.h" />
	</trace>
	<trace>
		<string key="file" value="esp_crypto_shared_gdma.h" />
	</trace>
	<trace>
		<string key="file" value="esp_rsa_sign_alt.h" />
	</trace>
	<trace>
		<string key="file" value="esp_mem.h" />
	</trace>
	<trace>
		<string key="file" value="gcm_alt.h" />
	</trace>
	<trace>
		<string key="file" value="esp_config.h" />
	</trace>
	<trace>
		<string key="file" value="esp_debug.h" />
	</trace>
	<trace>
		<string key="file" value="esp_md.h" />
	</trace>
	<trace>
		<string key="file" value="md5_alt.h" />
	</trace>
	<trace>
		<string key="file" value="rsa_sign_alt.h" />
	</trace>
	<trace>
		<string key="file" value="sha_dma.h" />
	</trace>
	<trace>
		<string key="file" value="sha_parallel_engine.h" />
	</trace>
	<trace>
		<string key="file" value="sha1_alt.h" />
	</trace>
	<trace>
		<string key="file" value="sha256_alt.h" />
	</trace>
	<trace>
		<string key="file" value="sha512_alt.h" />
	</trace>
	<trace>
		<string key="file" value="mdns_console.h" />
	</trace>
	<trace>
		<string key="file" value="mqtt_client.h" />
	</trace>
	<trace>
		<string key="file" value="mqtt_supported_features.h" />
	</trace>
	<trace>
		<string key="file" value="endian.h" />
	</trace>
	<trace>
		<string key="file" value="esp_newlib.h" />
	</trace>
	<trace>
		<string key="file" value="pthread.h" />
	</trace>
	<trace>
		<string key="file" value="dirent.h" />
	</trace>
	<trace>
		<string key="file" value="ioctl.h" />
	</trace>
	<trace>
		<string key="file" value="lock.h" />
	</trace>
	<trace>
		<string key="file" value="poll.h" />
	</trace>
	<trace>
		<string key="file" value="random.h" />
	</trace>
	<trace>
		<string key="file" value="reent.h" />
	</trace>
	<trace>
		<string key="file" value="select.h" />
	</trace>
	<trace>
		<string key="file" value="termios.h" />
	</trace>
	<trace>
		<string key="file" value="time.h" />
	</trace>
	<trace>
		<string key="file" value="uio.h" />
	</trace>
	<trace>
		<string key="file" value="un.h" />
	</trace>
	<trace>
		<string key="file" value="unistd.h" />
	</trace>
	<trace>
		<string key="file" value="utime.h" />
	</trace>
	<trace>
		<string key="file" value="nghttp2.h" />
	</trace>
	<trace>
		<string key="file" value="http_parser.h" />
	</trace>
	<trace>
		<string key="file" value="nghttp2ver.h" />
	</trace>
	<trace>
		<string key="file" value="nvs.h" />
	</trace>
	<trace>
		<string key="file" value="nvs_flash.h" />
	</trace>
	<trace>
		<string key="file" value="nvs_handle.hpp" />
	</trace>
	<trace>
		<string key="file" value="ssl3.h" />
	</trace>
	<trace>
		<string key="file" value="ssl_cert.h" />
	</trace>
	<trace>
		<string key="file" value="ssl_code.h" />
	</trace>
	<trace>
		<string key="file" value="ssl_dbg.h" />
	</trace>
	<trace>
		<string key="file" value="ssl_lib.h" />
	</trace>
	<trace>
		<string key="file" value="ssl_methods.h" />
	</trace>
	<trace>
		<string key="file" value="ssl_pkey.h" />
	</trace>
	<trace>
		<string key="file" value="ssl_stack.h" />
	</trace>
	<trace>
		<string key="file" value="ssl_types.h" />
	</trace>
	<trace>
		<string key="file" value="ssl_x509.h" />
	</trace>
	<trace>
		<string key="file" value="tls1.h" />
	</trace>
	<trace>
		<string key="file" value="x509_vfy.h" />
	</trace>
	<trace>
		<string key="file" value="bio.h" />
	</trace>
	<trace>
		<string key="file" value="ssl_opt.h" />
	</trace>
	<trace>
		<string key="file" value="ssl_pm.h" />
	</trace>
	<trace>
		<string key="file" value="ssl_port.h" />
	</trace>
	<trace>
		<string key="file" value="perfmon.h" />
	</trace>
	<trace>
		<string key="file" value="xtensa_perfmon_access.h" />
	</trace>
	<trace>
		<string key="file" value="xtensa_perfmon_apis.h" />
	</trace>
	<trace>
		<string key="file" value="xtensa_perfmon_masks.h" />
	</trace>
	<trace>
		<string key="file" value="protobuf-c.h" />
	</trace>
	<trace>
		<string key="file" value="c_bytes_field.h" />
	</trace>
	<trace>
		<string key="file" value="c_enum.h" />
	</trace>
	<trace>
		<string key="file" value="c_enum_field.h" />
	</trace>
	<trace>
		<string key="file" value="c_extension.h" />
	</trace>
	<trace>
		<string key="file" value="c_field.h" />
	</trace>
	<trace>
		<string key="file" value="c_file.h" />
	</trace>
	<trace>
		<string key="file" value="c_generator.h" />
	</trace>
	<trace>
		<string key="file" value="c_helpers.h" />
	</trace>
	<trace>
		<string key="file" value="c_message.h" />
	</trace>
	<trace>
		<string key="file" value="c_message_field.h" />
	</trace>
	<trace>
		<string key="file" value="c_primitive_field.h" />
	</trace>
	<trace>
		<string key="file" value="c_service.h" />
	</trace>
	<trace>
		<string key="file" value="c_string_field.h" />
	</trace>
	<trace>
		<string key="file" value="common-test-arrays.h" />
	</trace>
	<trace>
		<string key="file" value="protocomm.h" />
	</trace>
	<trace>
		<string key="file" value="protocomm_security.h" />
	</trace>
	<trace>
		<string key="file" value="protocomm_security0.h" />
	</trace>
	<trace>
		<string key="file" value="protocomm_security1.h" />
	</trace>
	<trace>
		<string key="file" value="protocomm_ble.h" />
	</trace>
	<trace>
		<string key="file" value="protocomm_console.h" />
	</trace>
	<trace>
		<string key="file" value="protocomm_httpd.h" />
	</trace>
	<trace>
		<string key="file" value="esp_pthread.h" />
	</trace>
	<trace>
		<string key="file" value="qrcode.h" />
	</trace>
	<trace>
		<string key="file" value="esp_rmaker_cmd_resp.h" />
	</trace>
	<trace>
		<string key="file" value="esp_rmaker_common_events.h" />
	</trace>
	<trace>
		<string key="file" value="esp_rmaker_factory.h" />
	</trace>
	<trace>
		<string key="file" value="esp_rmaker_mqtt_glue.h" />
	</trace>
	<trace>
		<string key="file" value="esp_rmaker_utils.h" />
	</trace>
	<trace>
		<string key="file" value="esp_rmaker_work_queue.h" />
	</trace>
	<trace>
		<string key="file" value="rtc_store.h" />
	</trace>
	<trace>
		<string key="file" value="sdmmc_cmd.h" />
	</trace>
	<trace>
		<string key="file" value="adc_channel.h" />
	</trace>
	<trace>
		<string key="file" value="apb_ctrl_reg.h" />
	</trace>
	<trace>
		<string key="file" value="apb_ctrl_struct.h" />
	</trace>
	<trace>
		<string key="file" value="bb_reg.h" />
	</trace>
	<trace>
		<string key="file" value="boot_mode.h" />
	</trace>
	<trace>
		<string key="file" value="can_periph.h" />
	</trace>
	<trace>
		<string key="file" value="can_struct.h" />
	</trace>
	<trace>
		<string key="file" value="clkout_channel.h" />
	</trace>
	<trace>
		<string key="file" value="dac_channel.h" />
	</trace>
	<trace>
		<string key="file" value="dport_reg.h" />
	</trace>
	<trace>
		<string key="file" value="efuse_reg.h" />
	</trace>
	<trace>
		<string key="file" value="emac_dma_struct.h" />
	</trace>
	<trace>
		<string key="file" value="emac_ext_struct.h" />
	</trace>
	<trace>
		<string key="file" value="emac_mac_struct.h" />
	</trace>
	<trace>
		<string key="file" value="fe_reg.h" />
	</trace>
	<trace>
		<string key="file" value="flash_encryption_reg.h" />
	</trace>
	<trace>
		<string key="file" value="frc_timer_reg.h" />
	</trace>
	<trace>
		<string key="file" value="gdma_channel.h" />
	</trace>
	<trace>
		<string key="file" value="gpio_pins.h" />
	</trace>
	<trace>
		<string key="file" value="gpio_reg.h" />
	</trace>
	<trace>
		<string key="file" value="gpio_sd_reg.h" />
	</trace>
	<trace>
		<string key="file" value="gpio_sd_struct.h" />
	</trace>
	<trace>
		<string key="file" value="gpio_sig_map.h" />
	</trace>
	<trace>
		<string key="file" value="gpio_struct.h" />
	</trace>
	<trace>
		<string key="file" value="hinf_reg.h" />
	</trace>
	<trace>
		<string key="file" value="hinf_struct.h" />
	</trace>
	<trace>
		<string key="file" value="host_reg.h" />
	</trace>
	<trace>
		<string key="file" value="host_struct.h" />
	</trace>
	<trace>
		<string key="file" value="hwcrypto_reg.h" />
	</trace>
	<trace>
		<string key="file" value="i2c_reg.h" />
	</trace>
	<trace>
		<string key="file" value="i2c_struct.h" />
	</trace>
	<trace>
		<string key="file" value="i2s_reg.h" />
	</trace>
	<trace>
		<string key="file" value="i2s_struct.h" />
	</trace>
	<trace>
		<string key="file" value="io_mux_reg.h" />
	</trace>
	<trace>
		<string key="file" value="ledc_reg.h" />
	</trace>
	<trace>
		<string key="file" value="ledc_struct.h" />
	</trace>
	<trace>
		<string key="file" value="mcpwm_reg.h" />
	</trace>
	<trace>
		<string key="file" value="mcpwm_struct.h" />
	</trace>
	<trace>
		<string key="file" value="mmu.h" />
	</trace>
	<trace>
		<string key="file" value="nrx_reg.h" />
	</trace>
	<trace>
		<string key="file" value="pcnt_reg.h" />
	</trace>
	<trace>
		<string key="file" value="pcnt_struct.h" />
	</trace>
	<trace>
		<string key="file" value="periph_defs.h" />
	</trace>
	<trace>
		<string key="file" value="pid.h" />
	</trace>
	<trace>
		<string key="file" value="rmt_reg.h" />
	</trace>
	<trace>
		<string key="file" value="rmt_struct.h" />
	</trace>
	<trace>
		<string key="file" value="rtc_cntl_reg.h" />
	</trace>
	<trace>
		<string key="file" value="rtc_cntl_struct.h" />
	</trace>
	<trace>
		<string key="file" value="rtc_i2c_reg.h" />
	</trace>
	<trace>
		<string key="file" value="rtc_io_channel.h" />
	</trace>
	<trace>
		<string key="file" value="rtc_io_reg.h" />
	</trace>
	<trace>
		<string key="file" value="rtc_io_struct.h" />
	</trace>
	<trace>
		<string key="file" value="sdio_slave_pins.h" />
	</trace>
	<trace>
		<string key="file" value="sdmmc_pins.h" />
	</trace>
	<trace>
		<string key="file" value="sdmmc_reg.h" />
	</trace>
	<trace>
		<string key="file" value="sdmmc_struct.h" />
	</trace>
	<trace>
		<string key="file" value="sens_reg.h" />
	</trace>
	<trace>
		<string key="file" value="sens_struct.h" />
	</trace>
	<trace>
		<string key="file" value="slc_reg.h" />
	</trace>
	<trace>
		<string key="file" value="slc_struct.h" />
	</trace>
	<trace>
		<string key="file" value="soc.h" />
	</trace>
	<trace>
		<string key="file" value="soc_caps.h" />
	</trace>
	<trace>
		<string key="file" value="soc_pins.h" />
	</trace>
	<trace>
		<string key="file" value="soc_ulp.h" />
	</trace>
	<trace>
		<string key="file" value="spi_pins.h" />
	</trace>
	<trace>
		<string key="file" value="spi_reg.h" />
	</trace>
	<trace>
		<string key="file" value="spi_struct.h" />
	</trace>
	<trace>
		<string key="file" value="syscon_reg.h" />
	</trace>
	<trace>
		<string key="file" value="syscon_struct.h" />
	</trace>
	<trace>
		<string key="file" value="timer_group_reg.h" />
	</trace>
	<trace>
		<string key="file" value="timer_group_struct.h" />
	</trace>
	<trace>
		<string key="file" value="touch_sensor_channel.h" />
	</trace>
	<trace>
		<string key="file" value="tracemem_config.h" />
	</trace>
	<trace>
		<string key="file" value="twai_struct.h" />
	</trace>
	<trace>
		<string key="file" value="uart_channel.h" />
	</trace>
	<trace>
		<string key="file" value="uart_pins.h" />
	</trace>
	<trace>
		<string key="file" value="uart_reg.h" />
	</trace>
	<trace>
		<string key="file" value="uart_struct.h" />
	</trace>
	<trace>
		<string key="file" value="uhci_reg.h" />
	</trace>
	<trace>
		<string key="file" value="uhci_struct.h" />
	</trace>
	<trace>
		<string key="file" value="wdev_reg.h" />
	</trace>
	<trace>
		<string key="file" value="adc_periph.h" />
	</trace>
	<trace>
		<string key="file" value="dac_periph.h" />
	</trace>
	<trace>
		<string key="file" value="dedic_gpio_periph.h" />
	</trace>
	<trace>
		<string key="file" value="efuse_periph.h" />
	</trace>
	<trace>
		<string key="file" value="emac_periph.h" />
	</trace>
	<trace>
		<string key="file" value="gdma_periph.h" />
	</trace>
	<trace>
		<string key="file" value="gpio_periph.h" />
	</trace>
	<trace>
		<string key="file" value="hwcrypto_periph.h" />
	</trace>
	<trace>
		<string key="file" value="i2c_periph.h" />
	</trace>
	<trace>
		<string key="file" value="i2s_periph.h" />
	</trace>
	<trace>
		<string key="file" value="interrupts.h" />
	</trace>
	<trace>
		<string key="file" value="lcd_periph.h" />
	</trace>
	<trace>
		<string key="file" value="ledc_periph.h" />
	</trace>
	<trace>
		<string key="file" value="mcpwm_periph.h" />
	</trace>
	<trace>
		<string key="file" value="pcnt_periph.h" />
	</trace>
	<trace>
		<string key="file" value="rmt_periph.h" />
	</trace>
	<trace>
		<string key="file" value="rtc_cntl_periph.h" />
	</trace>
	<trace>
		<string key="file" value="rtc_io_periph.h" />
	</trace>
	<trace>
		<string key="file" value="rtc_periph.h" />
	</trace>
	<trace>
		<string key="file" value="sdio_slave_periph.h" />
	</trace>
	<trace>
		<string key="file" value="sdmmc_periph.h" />
	</trace>
	<trace>
		<string key="file" value="sens_periph.h" />
	</trace>
	<trace>
		<string key="file" value="sigmadelta_periph.h" />
	</trace>
	<trace>
		<string key="file" value="soc_memory_types.h" />
	</trace>
	<trace>
		<string key="file" value="spi_periph.h" />
	</trace>
	<trace>
		<string key="file" value="syscon_periph.h" />
	</trace>
	<trace>
		<string key="file" value="timer_periph.h" />
	</trace>
	<trace>
		<string key="file" value="touch_sensor_periph.h" />
	</trace>
	<trace>
		<string key="file" value="twai_periph.h" />
	</trace>
	<trace>
		<string key="file" value="uart_periph.h" />
	</trace>
	<trace>
		<string key="file" value="uhci_periph.h" />
	</trace>
	<trace>
		<string key="file" value="usb_periph.h" />
	</trace>
	<trace>
		<string key="file" value="usb_phy_periph.h" />
	</trace>
	<trace>
		<string key="file" value="esp_flash_internal.h" />
	</trace>
	<trace>
		<string key="file" value="esp_flash_spi_init.h" />
	</trace>
	<trace>
		<string key="file" value="esp_partition.h" />
	</trace>
	<trace>
		<string key="file" value="spi_flash_os.h" />
	</trace>
	<trace>
		<string key="file" value="esp_spi_flash.h" />
	</trace>
	<trace>
		<string key="file" value="esp_spi_flash_counters.h" />
	</trace>
	<trace>
		<string key="file" value="memspi_host_driver.h" />
	</trace>
	<trace>
		<string key="file" value="spi_flash_defs.h" />
	</trace>
	<trace>
		<string key="file" value="spi_flash_chip_boya.h" />
	</trace>
	<trace>
		<string key="file" value="spi_flash_chip_driver.h" />
	</trace>
	<trace>
		<string key="file" value="spi_flash_chip_gd.h" />
	</trace>
	<trace>
		<string key="file" value="spi_flash_chip_generic.h" />
	</trace>
	<trace>
		<string key="file" value="spi_flash_chip_issi.h" />
	</trace>
	<trace>
		<string key="file" value="spi_flash_chip_mxic.h" />
	</trace>
	<trace>
		<string key="file" value="spi_flash_chip_th.h" />
	</trace>
	<trace>
		<string key="file" value="spi_flash_chip_winbond.h" />
	</trace>
	<trace>
		<string key="file" value="esp_spiffs.h" />
	</trace>
	<trace>
		<string key="file" value="spiffs_config.h" />
	</trace>
	<trace>
		<string key="file" value="esp_transport.h" />
	</trace>
	<trace>
		<string key="file" value="esp_transport_ssl.h" />
	</trace>
	<trace>
		<string key="file" value="esp_transport_tcp.h" />
	</trace>
	<trace>
		<string key="file" value="esp_transport_ws.h" />
	</trace>
	<trace>
		<string key="file" value="tcpip_adapter.h" />
	</trace>
	<trace>
		<string key="file" value="tcpip_adapter_compat.h" />
	</trace>
	<trace>
		<string key="file" value="tcpip_adapter_types.h" />
	</trace>
	<trace>
		<string key="file" value="ulp.h" />
	</trace>
	<trace>
		<string key="file" value="ulp_riscv.h" />
	</trace>
	<trace>
		<string key="file" value="ulp_riscv_adc.h" />
	</trace>
	<trace>
		<string key="file" value="ulp_common.h" />
	</trace>
	<trace>
		<string key="file" value="setjmp.h" />
	</trace>
	<trace>
		<string key="file" value="unity_fixture_extras.h" />
	</trace>
	<trace>
		<string key="file" value="unity_test_runner.h" />
	</trace>
	<trace>
		<string key="file" value="esp_vfs.h" />
	</trace>
	<trace>
		<string key="file" value="esp_vfs_cdcacm.h" />
	</trace>
	<trace>
		<string key="file" value="esp_vfs_common.h" />
	</trace>
	<trace>
		<string key="file" value="esp_vfs_console.h" />
	</trace>
	<trace>
		<string key="file" value="esp_vfs_dev.h" />
	</trace>
	<trace>
		<string key="file" value="esp_vfs_eventfd.h" />
	</trace>
	<trace>
		<string key="file" value="esp_vfs_semihost.h" />
	</trace>
	<trace>
		<string key="file" value="esp_vfs_usb_serial_jtag.h" />
	</trace>
	<trace>
		<string key="file" value="wear_levelling.h" />
	</trace>
	<trace>
		<string key="file" value="manager.h" />
	</trace>
	<trace>
		<string key="file" value="scheme_ble.h" />
	</trace>
	<trace>
		<string key="file" value="scheme_console.h" />
	</trace>
	<trace>
		<string key="file" value="scheme_softap.h" />
	</trace>
	<trace>
		<string key="file" value="wifi_config.h" />
	</trace>
	<trace>
		<string key="file" value="wifi_scan.h" />
	</trace>
	<trace>
		<string key="file" value="esp_dpp.h" />
	</trace>
	<trace>
		<string key="file" value="esp_mbo.h" />
	</trace>
	<trace>
		<string key="file" value="esp_rrm.h" />
	</trace>
	<trace>
		<string key="file" value="esp_wnm.h" />
	</trace>
	<trace>
		<string key="file" value="esp_wpa.h" />
	</trace>
	<trace>
		<string key="file" value="esp_wpa2.h" />
	</trace>
	<trace>
		<string key="file" value="esp_wps.h" />
	</trace>
	<trace>
		<string key="file" value="wpa_debug.h" />
	</trace>
	<trace>
		<string key="file" value="wpabuf.h" />
	</trace>
	<trace>
		<string key="file" value="byteswap.h" />
	</trace>
	<trace>
		<string key="file" value="os.h" />
	</trace>
	<trace>
		<string key="file" value="supplicant_opt.h" />
	</trace>
	<trace>
		<string key="file" value="led_strip.h" />
	</trace>
	<trace>
		<string key="file" value="ws2812_led.h" />
	</trace>
	<trace>
		<string key="file" value="core-isa.h" />
	</trace>
	<trace>
		<string key="file" value="core-matmap.h" />
	</trace>
	<trace>
		<string key="file" value="defs.h" />
	</trace>
	<trace>
		<string key="file" value="extreg.h" />
	</trace>
	<trace>
		<string key="file" value="specreg.h" />
	</trace>
	<trace>
		<string key="file" value="system.h" />
	</trace>
	<trace>
		<string key="file" value="tie-asm.h" />
	</trace>
	<trace>
		<string key="file" value="tie.h" />
	</trace>
	<trace>
		<string key="file" value="eri.h" />
	</trace>
	<trace>
		<string key="file" value="esp_panic.h" />
	</trace>
	<trace>
		<string key="file" value="panic_reason.h" />
	</trace>
	<trace>
		<string key="file" value="xt_instr_macros.h" />
	</trace>
	<trace>
		<string key="file" value="xt_trax.h" />
	</trace>
	<trace>
		<string key="file" value="xtensa-debug-module.h" />
	</trace>
	<trace>
		<string key="file" value="cacheasm.h" />
	</trace>
	<trace>
		<string key="file" value="cacheattrasm.h" />
	</trace>
	<trace>
		<string key="file" value="core-macros.h" />
	</trace>
	<trace>
		<string key="file" value="coreasm.h" />
	</trace>
	<trace>
		<string key="file" value="corebits.h" />
	</trace>
	<trace>
		<string key="file" value="hal.h" />
	</trace>
	<trace>
		<string key="file" value="idmaasm.h" />
	</trace>
	<trace>
		<string key="file" value="mpuasm.h" />
	</trace>
	<trace>
		<string key="file" value="semihosting.h" />
	</trace>
	<trace>
		<string key="file" value="traxreg.h" />
	</trace>
	<trace>
		<string key="file" value="xdm-regs.h" />
	</trace>
	<trace>
		<string key="file" value="xt_perf_consts.h" />
	</trace>
	<trace>
		<string key="file" value="xtensa-libdb-macros.h" />
	</trace>
	<trace>
		<string key="file" value="xtensa-versions.h" />
	</trace>
	<trace>
		<string key="file" value="xtensa-xer.h" />
	</trace>
	<trace>
		<string key="file" value="xtruntime-core-state.h" />
	</trace>
	<trace>
		<string key="file" value="xtruntime-frames.h" />
	</trace>
	<trace>
		<string key="file" value="xtruntime.h" />
	</trace>
	<trace>
		<string key="file" value="esp32.peripherals.ld" />
	</trace>
	<trace>
		<string key="file" value="esp32.rom.api.ld" />
	</trace>
	<trace>
		<string key="file" value="esp32.rom.eco3.ld" />
	</trace>
	<trace>
		<string key="file" value="esp32.rom.ld" />
	</trace>
	<trace>
		<string key="file" value="esp32.rom.libgcc.ld" />
	</trace>
	<trace>
		<string key="file" value="esp32.rom.newlib-data.ld" />
	</trace>
	<trace>
		<string key="file" value="esp32.rom.newlib-funcs.ld" />
	</trace>
	<trace>
		<string key="file" value="esp32.rom.newlib-locale.ld" />
	</trace>
	<trace>
		<string key="file" value="esp32.rom.newlib-nano.ld" />
	</trace>
	<trace>
		<string key="file" value="esp32.rom.newlib-time.ld" />
	</trace>
	<trace>
		<string key="file" value="esp32.rom.redefined.ld" />
	</trace>
	<trace>
		<string key="file" value="esp32.rom.spiflash.ld" />
	</trace>
	<trace>
		<string key="file" value="esp32.rom.syscalls.ld" />
	</trace>
	<trace>
		<string key="file" value="libbtdm_app.a" />
	</trace>
	<trace>
		<string key="file" value="libc_speech_features.a" />
	</trace>
	<trace>
		<string key="file" value="libcat_face_detect.a" />
	</trace>
	<trace>
		<string key="file" value="libcolor_detect.a" />
	</trace>
	<trace>
		<string key="file" value="libdl.a" />
	</trace>
	<trace>
		<string key="file" value="libdl_lib.a" />
	</trace>
	<trace>
		<string key="file" value="libesp_tts_chinese.a" />
	</trace>
	<trace>
		<string key="file" value="libhuman_face_detect.a" />
	</trace>
	<trace>
		<string key="file" value="libmfn.a" />
	</trace>
	<trace>
		<string key="file" value="libmultinet2_ch.a" />
	</trace>
	<trace>
		<string key="file" value="libphy.a" />
	</trace>
	<trace>
		<string key="file" value="librtc.a" />
	</trace>
	<trace>
		<string key="file" value="libvoice_set_xiaole.a" />
	</trace>
	<trace>
		<string key="file" value="libwakeword_model.a" />
	</trace>
	<trace>
		<string key="file" value="memory.ld" />
	</trace>
	<trace>
		<string key="file" value="sections.ld" />
	</trace>
	<trace>
		<string key="file" value="libapp_trace.a" />
	</trace>
	<trace>
		<string key="file" value="libapp_update.a" />
	</trace>
	<trace>
		<string key="file" value="libasio.a" />
	</trace>
	<trace>
		<string key="file" value="libbootloader_support.a" />
	</trace>
	<trace>
		<string key="file" value="libbt.a" />
	</trace>
	<trace>
		<string key="file" value="libcbor.a" />
	</trace>
	<trace>
		<string key="file" value="libcmock.a" />
	</trace>
	<trace>
		<string key="file" value="libcoap.a" />
	</trace>
	<trace>
		<string key="file" value="libcoexist.a" />
	</trace>
	<trace>
		<string key="file" value="libconsole.a" />
	</trace>
	<trace>
		<string key="file" value="libcore.a" />
	</trace>
	<trace>
		<string key="file" value="libcxx.a" />
	</trace>
	<trace>
		<string key="file" value="libdriver.a" />
	</trace>
	<trace>
		<string key="file" value="libefuse.a" />
	</trace>
	<trace>
		<string key="file" value="libesp-dsp.a" />
	</trace>
	<trace>
		<string key="file" value="libesp-sr.a" />
	</trace>
	<trace>
		<string key="file" value="libesp-tls.a" />
	</trace>
	<trace>
		<string key="file" value="libesp32-camera.a" />
	</trace>
	<trace>
		<string key="file" value="libesp_adc_cal.a" />
	</trace>
	<trace>
		<string key="file" value="libesp_audio_front_end.a" />
	</trace>
	<trace>
		<string key="file" value="libesp_audio_processor.a" />
	</trace>
	<trace>
		<string key="file" value="libesp_common.a" />
	</trace>
	<trace>
		<string key="file" value="libesp_diagnostics.a" />
	</trace>
	<trace>
		<string key="file" value="libesp_eth.a" />
	</trace>
	<trace>
		<string key="file" value="libesp_event.a" />
	</trace>
	<trace>
		<string key="file" value="libesp_gdbstub.a" />
	</trace>
	<trace>
		<string key="file" value="libesp_hid.a" />
	</trace>
	<trace>
		<string key="file" value="libesp_http_client.a" />
	</trace>
	<trace>
		<string key="file" value="libesp_http_server.a" />
	</trace>
	<trace>
		<string key="file" value="libesp_https_ota.a" />
	</trace>
	<trace>
		<string key="file" value="libesp_https_server.a" />
	</trace>
	<trace>
		<string key="file" value="libesp_hw_support.a" />
	</trace>
	<trace>
		<string key="file" value="libesp_insights.a" />
	</trace>
	<trace>
		<string key="file" value="libesp_ipc.a" />
	</trace>
	<trace>
		<string key="file" value="libesp_lcd.a" />
	</trace>
	<trace>
		<string key="file" value="libesp_littlefs.a" />
	</trace>
	<trace>
		<string key="file" value="libesp_local_ctrl.a" />
	</trace>
	<trace>
		<string key="file" value="libesp_netif.a" />
	</trace>
	<trace>
		<string key="file" value="libesp_phy.a" />
	</trace>
	<trace>
		<string key="file" value="libesp_pm.a" />
	</trace>
	<trace>
		<string key="file" value="libesp_rainmaker.a" />
	</trace>
	<trace>
		<string key="file" value="libesp_ringbuf.a" />
	</trace>
	<trace>
		<string key="file" value="libesp_rom.a" />
	</trace>
	<trace>
		<string key="file" value="libesp_schedule.a" />
	</trace>
	<trace>
		<string key="file" value="libesp_serial_slave_link.a" />
	</trace>
	<trace>
		<string key="file" value="libesp_system.a" />
	</trace>
	<trace>
		<string key="file" value="libesp_timer.a" />
	</trace>
	<trace>
		<string key="file" value="libesp_websocket_client.a" />
	</trace>
	<trace>
		<string key="file" value="libesp_wifi.a" />
	</trace>
	<trace>
		<string key="file" value="libespcoredump.a" />
	</trace>
	<trace>
		<string key="file" value="libespnow.a" />
	</trace>
	<trace>
		<string key="file" value="libexpat.a" />
	</trace>
	<trace>
		<string key="file" value="libfatfs.a" />
	</trace>
	<trace>
		<string key="file" value="libfb_gfx.a" />
	</trace>
	<trace>
		<string key="file" value="libfreemodbus.a" />
	</trace>
	<trace>
		<string key="file" value="libfreertos.a" />
	</trace>
	<trace>
		<string key="file" value="libgpio_button.a" />
	</trace>
	<trace>
		<string key="file" value="libhal.a" />
	</trace>
	<trace>
		<string key="file" value="libheap.a" />
	</trace>
	<trace>
		<string key="file" value="libjsmn.a" />
	</trace>
	<trace>
		<string key="file" value="libjson.a" />
	</trace>
	<trace>
		<string key="file" value="libjson_generator.a" />
	</trace>
	<trace>
		<string key="file" value="libjson_parser.a" />
	</trace>
	<trace>
		<string key="file" value="liblibsodium.a" />
	</trace>
	<trace>
		<string key="file" value="liblog.a" />
	</trace>
	<trace>
		<string key="file" value="liblwip.a" />
	</trace>
	<trace>
		<string key="file" value="libmbedcrypto.a" />
	</trace>
	<trace>
		<string key="file" value="libmbedtls.a" />
	</trace>
	<trace>
		<string key="file" value="libmbedtls_2.a" />
	</trace>
	<trace>
		<string key="file" value="libmbedx509.a" />
	</trace>
	<trace>
		<string key="file" value="libmdns.a" />
	</trace>
	<trace>
		<string key="file" value="libmesh.a" />
	</trace>
	<trace>
		<string key="file" value="libmqtt.a" />
	</trace>
	<trace>
		<string key="file" value="libmultinet.a" />
	</trace>
	<trace>
		<string key="file" value="libnet80211.a" />
	</trace>
	<trace>
		<string key="file" value="libnewlib.a" />
	</trace>
	<trace>
		<string key="file" value="libnghttp.a" />
	</trace>
	<trace>
		<string key="file" value="libnvs_flash.a" />
	</trace>
	<trace>
		<string key="file" value="libopenssl.a" />
	</trace>
	<trace>
		<string key="file" value="libperfmon.a" />
	</trace>
	<trace>
		<string key="file" value="libpp.a" />
	</trace>
	<trace>
		<string key="file" value="libprotobuf-c.a" />
	</trace>
	<trace>
		<string key="file" value="libprotocomm.a" />
	</trace>
	<trace>
		<string key="file" value="libpthread.a" />
	</trace>
	<trace>
		<string key="file" value="libqrcode.a" />
	</trace>
	<trace>
		<string key="file" value="librmaker_common.a" />
	</trace>
	<trace>
		<string key="file" value="librtc_store.a" />
	</trace>
	<trace>
		<string key="file" value="libsdmmc.a" />
	</trace>
	<trace>
		<string key="file" value="libsmartconfig.a" />
	</trace>
	<trace>
		<string key="file" value="libsoc.a" />
	</trace>
	<trace>
		<string key="file" value="libspiffs.a" />
	</trace>
	<trace>
		<string key="file" value="libtcp_transport.a" />
	</trace>
	<trace>
		<string key="file" value="libtcpip_adapter.a" />
	</trace>
	<trace>
		<string key="file" value="libulp.a" />
	</trace>
	<trace>
		<string key="file" value="libunity.a" />
	</trace>
	<trace>
		<string key="file" value="libvfs.a" />
	</trace>
	<trace>
		<string key="file" value="libwakenet.a" />
	</trace>
	<trace>
		<string key="file" value="libwapi.a" />
	</trace>
	<trace>
		<string key="file" value="libwear_levelling.a" />
	</trace>
	<trace>
		<string key="file" value="libwifi_provisioning.a" />
	</trace>
	<trace>
		<string key="file" value="libwpa_supplicant.a" />
	</trace>
	<trace>
		<string key="file" value="libws2812_led.a" />
	</trace>
	<trace>
		<string key="file" value="libxt_hal.a" />
	</trace>
	<trace>
		<string key="file" value="libxtensa.a" />
	</trace>
	<trace>
		<string key="file" value="sdkconfig" />
	</trace>
	<trace>
		<string key="file" value="temp_sensor.h" />
	</trace>
	<trace>
		<string key="file" value="esp_efuse_rtc_calib.h" />
	</trace>
	<trace>
		<string key="file" value="i2c_brownout.h" />
	</trace>
	<trace>
		<string key="file" value="i2c_rtc_clk.h" />
	</trace>
	<trace>
		<string key="file" value="regi2c_bias.h" />
	</trace>
	<trace>
		<string key="file" value="regi2c_brownout.h" />
	</trace>
	<trace>
		<string key="file" value="regi2c_dig_reg.h" />
	</trace>
	<trace>
		<string key="file" value="regi2c_lp_bias.h" />
	</trace>
	<trace>
		<string key="file" value="regi2c_saradc.h" />
	</trace>
	<trace>
		<string key="file" value="eh_frame_parser_impl.h" />
	</trace>
	<trace>
		<string key="file" value="ds_ll.h" />
	</trace>
	<trace>
		<string key="file" value="gdma_ll.h" />
	</trace>
	<trace>
		<string key="file" value="gpspi_flash_ll.h" />
	</trace>
	<trace>
		<string key="file" value="hmac_hal.h" />
	</trace>
	<trace>
		<string key="file" value="hmac_ll.h" />
	</trace>
	<trace>
		<string key="file" value="memprot_ll.h" />
	</trace>
	<trace>
		<string key="file" value="spimem_flash_ll.h" />
	</trace>
	<trace>
		<string key="file" value="systimer_ll.h" />
	</trace>
	<trace>
		<string key="file" value="uhci_ll.h" />
	</trace>
	<trace>
		<string key="file" value="usb_phy_ll.h" />
	</trace>
	<trace>
		<string key="file" value="usb_serial_jtag_ll.h" />
	</trace>
	<trace>
		<string key="file" value="xt_wdt_ll.h" />
	</trace>
	<trace>
		<string key="file" value="csr.h" />
	</trace>
	<trace>
		<string key="file" value="encoding.h" />
	</trace>
	<trace>
		<string key="file" value="instruction_decode.h" />
	</trace>
	<trace>
		<string key="file" value="interrupt.h" />
	</trace>
	<trace>
		<string key="file" value="riscv_interrupts.h" />
	</trace>
	<trace>
		<string key="file" value="rvruntime-frames.h" />
	</trace>
	<trace>
		<string key="file" value="i2c_bbpll.h" />
	</trace>
	<trace>
		<string key="file" value="apb_saradc_reg.h" />
	</trace>
	<trace>
		<string key="file" value="apb_saradc_struct.h" />
	</trace>
	<trace>
		<string key="file" value="assist_debug_reg.h" />
	</trace>
	<trace>
		<string key="file" value="cache_memory.h" />
	</trace>
	<trace>
		<string key="file" value="efuse_struct.h" />
	</trace>
	<trace>
		<string key="file" value="extmem_reg.h" />
	</trace>
	<trace>
		<string key="file" value="gdma_reg.h" />
	</trace>
	<trace>
		<string key="file" value="gdma_struct.h" />
	</trace>
	<trace>
		<string key="file" value="interrupt_core0_reg.h" />
	</trace>
	<trace>
		<string key="file" value="interrupt_reg.h" />
	</trace>
	<trace>
		<string key="file" value="memprot_defs.h" />
	</trace>
	<trace>
		<string key="file" value="rtc_i2c_struct.h" />
	</trace>
	<trace>
		<string key="file" value="sensitive_reg.h" />
	</trace>
	<trace>
		<string key="file" value="sensitive_struct.h" />
	</trace>
	<trace>
		<string key="file" value="spi_mem_reg.h" />
	</trace>
	<trace>
		<string key="file" value="spi_mem_struct.h" />
	</trace>
	<trace>
		<string key="file" value="system_reg.h" />
	</trace>
	<trace>
		<string key="file" value="system_struct.h" />
	</trace>
	<trace>
		<string key="file" value="systimer_reg.h" />
	</trace>
	<trace>
		<string key="file" value="systimer_struct.h" />
	</trace>
	<trace>
		<string key="file" value="usb_serial_jtag_reg.h" />
	</trace>
	<trace>
		<string key="file" value="usb_serial_jtag_struct.h" />
	</trace>
	<trace>
		<string key="file" value="esp32c3.peripherals.ld" />
	</trace>
	<trace>
		<string key="file" value="esp32c3.rom.api.ld" />
	</trace>
	<trace>
		<string key="file" value="esp32c3.rom.eco3.ld" />
	</trace>
	<trace>
		<string key="file" value="esp32c3.rom.ld" />
	</trace>
	<trace>
		<string key="file" value="esp32c3.rom.libgcc.ld" />
	</trace>
	<trace>
		<string key="file" value="esp32c3.rom.newlib-nano.ld" />
	</trace>
	<trace>
		<string key="file" value="esp32c3.rom.newlib-time.ld" />
	</trace>
	<trace>
		<string key="file" value="esp32c3.rom.newlib.ld" />
	</trace>
	<trace>
		<string key="file" value="esp32c3.rom.version.ld" />
	</trace>
	<trace>
		<string key="file" value="libbtbb.a" />
	</trace>
	<trace>
		<string key="file" value="libriscv.a" />
	</trace>
	<trace>
		<string key="file" value="tusb_config.h" />
	</trace>
	<trace>
		<string key="file" value="audio.h" />
	</trace>
	<trace>
		<string key="file" value="audio_device.h" />
	</trace>
	<trace>
		<string key="file" value="bth_device.h" />
	</trace>
	<trace>
		<string key="file" value="cdc.h" />
	</trace>
	<trace>
		<string key="file" value="cdc_device.h" />
	</trace>
	<trace>
		<string key="file" value="cdc_host.h" />
	</trace>
	<trace>
		<string key="file" value="cdc_rndis.h" />
	</trace>
	<trace>
		<string key="file" value="cdc_rndis_host.h" />
	</trace>
	<trace>
		<string key="file" value="dfu.h" />
	</trace>
	<trace>
		<string key="file" value="dfu_device.h" />
	</trace>
	<trace>
		<string key="file" value="dfu_rt_device.h" />
	</trace>
	<trace>
		<string key="file" value="hid.h" />
	</trace>
	<trace>
		<string key="file" value="hid_device.h" />
	</trace>
	<trace>
		<string key="file" value="hid_host.h" />
	</trace>
	<trace>
		<string key="file" value="midi.h" />
	</trace>
	<trace>
		<string key="file" value="midi_device.h" />
	</trace>
	<trace>
		<string key="file" value="msc.h" />
	</trace>
	<trace>
		<string key="file" value="msc_device.h" />
	</trace>
	<trace>
		<string key="file" value="msc_host.h" />
	</trace>
	<trace>
		<string key="file" value="ncm.h" />
	</trace>
	<trace>
		<string key="file" value="net_device.h" />
	</trace>
	<trace>
		<string key="file" value="usbtmc.h" />
	</trace>
	<trace>
		<string key="file" value="usbtmc_device.h" />
	</trace>
	<trace>
		<string key="file" value="vendor_device.h" />
	</trace>
	<trace>
		<string key="file" value="vendor_host.h" />
	</trace>
	<trace>
		<string key="file" value="video.h" />
	</trace>
	<trace>
		<string key="file" value="video_device.h" />
	</trace>
	<trace>
		<string key="file" value="tusb_common.h" />
	</trace>
	<trace>
		<string key="file" value="tusb_compiler.h" />
	</trace>
	<trace>
		<string key="file" value="tusb_debug.h" />
	</trace>
	<trace>
		<string key="file" value="tusb_fifo.h" />
	</trace>
	<trace>
		<string key="file" value="tusb_mcu.h" />
	</trace>
	<trace>
		<string key="file" value="tusb_private.h" />
	</trace>
	<trace>
		<string key="file" value="tusb_timeout.h" />
	</trace>
	<trace>
		<string key="file" value="tusb_types.h" />
	</trace>
	<trace>
		<string key="file" value="tusb_verify.h" />
	</trace>
	<trace>
		<string key="file" value="dcd.h" />
	</trace>
	<trace>
		<string key="file" value="usbd.h" />
	</trace>
	<trace>
		<string key="file" value="usbd_pvt.h" />
	</trace>
	<trace>
		<string key="file" value="hcd.h" />
	</trace>
	<trace>
		<string key="file" value="hub.h" />
	</trace>
	<trace>
		<string key="file" value="usbh.h" />
	</trace>
	<trace>
		<string key="file" value="usbh_classdriver.h" />
	</trace>
	<trace>
		<string key="file" value="osal.h" />
	</trace>
	<trace>
		<string key="file" value="osal_freertos.h" />
	</trace>
	<trace>
		<string key="file" value="osal_mynewt.h" />
	</trace>
	<trace>
		<string key="file" value="osal_none.h" />
	</trace>
	<trace>
		<string key="file" value="osal_pico.h" />
	</trace>
	<trace>
		<string key="file" value="osal_rtthread.h" />
	</trace>
	<trace>
		<string key="file" value="osal_rtx4.h" />
	</trace>
	<trace>
		<string key="file" value="ci_hs_imxrt.h" />
	</trace>
	<trace>
		<string key="file" value="ci_hs_lpc18_43.h" />
	</trace>
	<trace>
		<string key="file" value="ci_hs_type.h" />
	</trace>
	<trace>
		<string key="file" value="ehci.h" />
	</trace>
	<trace>
		<string key="file" value="ehci_api.h" />
	</trace>
	<trace>
		<string key="file" value="musb_msp432e.h" />
	</trace>
	<trace>
		<string key="file" value="musb_tm4c.h" />
	</trace>
	<trace>
		<string key="file" value="musb_type.h" />
	</trace>
	<trace>
		<string key="file" value="usbhs_registers.h" />
	</trace>
	<trace>
		<string key="file" value="common_usb_regs.h" />
	</trace>
	<trace>
		<string key="file" value="dcd_lpc17_40.h" />
	</trace>
	<trace>
		<string key="file" value="common_transdimension.h" />
	</trace>
	<trace>
		<string key="file" value="ohci.h" />
	</trace>
	<trace>
		<string key="file" value="rp2040_usb.h" />
	</trace>
	<trace>
		<string key="file" value="dcd_stm32_fsdev_pvt_st.h" />
	</trace>
	<trace>
		<string key="file" value="synopsys_common.h" />
	</trace>
	<trace>
		<string key="file" value="musb_def.h" />
	</trace>
	<trace>
		<string key="file" value="dwc2_bcm.h" />
	</trace>
	<trace>
		<string key="file" value="dwc2_efm32.h" />
	</trace>
	<trace>
		<string key="file" value="dwc2_esp32.h" />
	</trace>
	<trace>
		<string key="file" value="dwc2_gd32.h" />
	</trace>
	<trace>
		<string key="file" value="dwc2_stm32.h" />
	</trace>
	<trace>
		<string key="file" value="dwc2_type.h" />
	</trace>
	<trace>
		<string key="file" value="dwc2_xmc.h" />
	</trace>
	<trace>
		<string key="file" value="dcd_eptri.h" />
	</trace>
	<trace>
		<string key="file" value="tusb.h" />
	</trace>
	<trace>
		<string key="file" value="tusb_option.h" />
	</trace>
	<trace>
		<string key="file" value="esp_efuse_rtc_table.h" />
	</trace>
	<trace>
		<string key="file" value="regi2c_ulp.h" />
	</trace>
	<trace>
		<string key="file" value="cp_dma_hal.h" />
	</trace>
	<trace>
		<string key="file" value="cp_dma_ll.h" />
	</trace>
	<trace>
		<string key="file" value="crypto_dma_ll.h" />
	</trace>
	<trace>
		<string key="file" value="dedic_gpio_ll.h" />
	</trace>
	<trace>
		<string key="file" value="memprot_peri_ll.h" />
	</trace>
	<trace>
		<string key="file" value="usb_ll.h" />
	</trace>
	<trace>
		<string key="file" value="cp_dma_reg.h" />
	</trace>
	<trace>
		<string key="file" value="cp_dma_struct.h" />
	</trace>
	<trace>
		<string key="file" value="crypto_dma_reg.h" />
	</trace>
	<trace>
		<string key="file" value="dedic_gpio_reg.h" />
	</trace>
	<trace>
		<string key="file" value="dedic_gpio_struct.h" />
	</trace>
	<trace>
		<string key="file" value="touch_sensor_pins.h" />
	</trace>
	<trace>
		<string key="file" value="usb_pins.h" />
	</trace>
	<trace>
		<string key="file" value="usb_reg.h" />
	</trace>
	<trace>
		<string key="file" value="usb_struct.h" />
	</trace>
	<trace>
		<string key="file" value="usb_types.h" />
	</trace>
	<trace>
		<string key="file" value="usb_wrap_reg.h" />
	</trace>
	<trace>
		<string key="file" value="usb_wrap_struct.h" />
	</trace>
	<trace>
		<string key="file" value="usbh_struct.h" />
	</trace>
	<trace>
		<string key="file" value="touch_button.h" />
	</trace>
	<trace>
		<string key="file" value="touch_element.h" />
	</trace>
	<trace>
		<string key="file" value="touch_element_private.h" />
	</trace>
	<trace>
		<string key="file" value="touch_matrix.h" />
	</trace>
	<trace>
		<string key="file" value="touch_slider.h" />
	</trace>
	<trace>
		<string key="file" value="usb_phy.h" />
	</trace>
	<trace>
		<string key="file" value="usb_helpers.h" />
	</trace>
	<trace>
		<string key="file" value="usb_host.h" />
	</trace>
	<trace>
		<string key="file" value="usb_types_ch9.h" />
	</trace>
	<trace>
		<string key="file" value="usb_types_stack.h" />
	</trace>
	<trace>
		<string key="file" value="esp32s2.peripherals.ld" />
	</trace>
	<trace>
		<string key="file" value="esp32s2.rom.api.ld" />
	</trace>
	<trace>
		<string key="file" value="esp32s2.rom.ld" />
	</trace>
	<trace>
		<string key="file" value="esp32s2.rom.libgcc.ld" />
	</trace>
	<trace>
		<string key="file" value="esp32s2.rom.newlib-data.ld" />
	</trace>
	<trace>
		<string key="file" value="esp32s2.rom.newlib-funcs.ld" />
	</trace>
	<trace>
		<string key="file" value="esp32s2.rom.newlib-nano.ld" />
	</trace>
	<trace>
		<string key="file" value="esp32s2.rom.newlib-time.ld" />
	</trace>
	<trace>
		<string key="file" value="esp32s2.rom.spiflash.ld" />
	</trace>
	<trace>
		<string key="file" value="libarduino_tinyusb.a" />
	</trace>
	<trace>
		<string key="file" value="libtouch_element.a" />
	</trace>
	<trace>
		<string key="file" value="libusb.a" />
	</trace>
	<trace>
		<string key="file" value="bootloader_opi_80m.elf" />
	</trace>
	<trace>
		<string key="file" value="bootloader_qio_120m.elf" />
	</trace>
	<trace>
		<string key="file" value="lcd_ll.h" />
	</trace>
	<trace>
		<string key="file" value="assist_debug_struct.h" />
	</trace>
	<trace>
		<string key="file" value="brownout_caps.h" />
	</trace>
	<trace>
		<string key="file" value="cpu_caps.h" />
	</trace>
	<trace>
		<string key="file" value="extmem_struct.h" />
	</trace>
	<trace>
		<string key="file" value="i2c_caps.h" />
	</trace>
	<trace>
		<string key="file" value="interrupt_core0_struct.h" />
	</trace>
	<trace>
		<string key="file" value="interrupt_core1_reg.h" />
	</trace>
	<trace>
		<string key="file" value="interrupt_core1_struct.h" />
	</trace>
	<trace>
		<string key="file" value="interrupt_struct.h" />
	</trace>
	<trace>
		<string key="file" value="lcd_cam_reg.h" />
	</trace>
	<trace>
		<string key="file" value="lcd_cam_struct.h" />
	</trace>
	<trace>
		<string key="file" value="ledc_caps.h" />
	</trace>
	<trace>
		<string key="file" value="mpu_caps.h" />
	</trace>
	<trace>
		<string key="file" value="pcnt_caps.h" />
	</trace>
	<trace>
		<string key="file" value="peri_backup_reg.h" />
	</trace>
	<trace>
		<string key="file" value="peri_backup_struct.h" />
	</trace>
	<trace>
		<string key="file" value="rtc_gpio_channel.h" />
	</trace>
	<trace>
		<string key="file" value="sigmadelta_caps.h" />
	</trace>
	<trace>
		<string key="file" value="touch_channel.h" />
	</trace>
	<trace>
		<string key="file" value="twai_caps.h" />
	</trace>
	<trace>
		<string key="file" value="uart_caps.h" />
	</trace>
	<trace>
		<string key="file" value="usb_caps.h" />
	</trace>
	<trace>
		<string key="file" value="usb_device_reg.h" />
	</trace>
	<trace>
		<string key="file" value="world_controller_reg.h" />
	</trace>
	<trace>
		<string key="file" value="world_controller_struct.h" />
	</trace>
	<trace>
		<string key="file" value="esp32s3.peripherals.ld" />
	</trace>
	<trace>
		<string key="file" value="esp32s3.rom.api.ld" />
	</trace>
	<trace>
		<string key="file" value="esp32s3.rom.ld" />
	</trace>
	<trace>
		<string key="file" value="esp32s3.rom.libgcc.ld" />
	</trace>
	<trace>
		<string key="file" value="esp32s3.rom.newlib-nano.ld" />
	</trace>
	<trace>
		<string key="file" value="esp32s3.rom.newlib-time.ld" />
	</trace>
	<trace>
		<string key="file" value="esp32s3.rom.newlib.ld" />
	</trace>
	<trace>
		<string key="file" value="esp32s3.rom.version.ld" />
	</trace>
	<trace>
		<string key="file" value="libhufzip.a" />
	</trace>
	<trace>
		<string key="file" value="versions.txt" />
	</trace>
	<trace>
		<string key="file" value="ETH_LAN8720.ino" />
	</trace>
	<trace>
		<string key="file" value="ETH_TLK110.ino" />
	</trace>
	<trace>
		<string key="file" value="ETH_W5500_Arduino_SPI.ino" />
	</trace>
	<trace>
		<string key="file" value="ETH_W5500_IDF_SPI.ino" />
	</trace>
	<trace>
		<string key="file" value="d32_core.h" />
	</trace>
	<trace>
		<string key="file" value="constants.cpp" />
		<event>
			<string key="timestamp" value="2023-10-06T13:50:53+03:00" />
			<string key="author" value="Me No Dev" />
			<string key="change_type" value="ADD" />
			<string key="commit_message" value="Add TFLite Micro examples (#8717)&#10;&#10;* create TFLite library&#13;&#10;&#13;&#10;* add TFLite hello_world example&#13;&#10;&#13;&#10;* add TFLite micro_speech example&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Sanket Wadekar &lt;67091512+sanketwadekar@users.noreply.github.com&gt;" />
			<int key="additions" value="19" />
			<int key="deletions" value="0" />
			<string key="diff" value="@@ -0,0 +1,19 @@&#10;+/* Copyright 2019 The TensorFlow Authors. All Rights Reserved.&#10;+&#10;+Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);&#10;+you may not use this file except in compliance with the License.&#10;+You may obtain a copy of the License at&#10;+&#10;+    http://www.apache.org/licenses/LICENSE-2.0&#10;+&#10;+Unless required by applicable law or agreed to in writing, software&#10;+distributed under the License is distributed on an &quot;AS IS&quot; BASIS,&#10;+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&#10;+See the License for the specific language governing permissions and&#10;+limitations under the License.&#10;+==============================================================================*/&#10;+&#10;+#include &quot;constants.h&quot;&#10;+&#10;+// This is a small number so that it's easy to read the logs&#10;+const int kInferencesPerCycle = 20;&#10;" />
			<string key="comment_change" value="True" />
		</event>
	</trace>
	<trace>
		<string key="file" value="hello_world.ino" />
	</trace>
	<trace>
		<string key="file" value="model.cpp" />
		<event>
			<string key="timestamp" value="2023-10-06T13:50:53+03:00" />
			<string key="author" value="Me No Dev" />
			<string key="change_type" value="ADD" />
			<string key="commit_message" value="Add TFLite Micro examples (#8717)&#10;&#10;* create TFLite library&#13;&#10;&#13;&#10;* add TFLite hello_world example&#13;&#10;&#13;&#10;* add TFLite micro_speech example&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Sanket Wadekar &lt;67091512+sanketwadekar@users.noreply.github.com&gt;" />
			<int key="additions" value="237" />
			<int key="deletions" value="0" />
			<string key="diff" value="@@ -0,0 +1,237 @@&#10;+/* Copyright 2020 The TensorFlow Authors. All Rights Reserved.&#10;+&#10;+Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);&#10;+you may not use this file except in compliance with the License.&#10;+You may obtain a copy of the License at&#10;+&#10;+    http://www.apache.org/licenses/LICENSE-2.0&#10;+&#10;+Unless required by applicable law or agreed to in writing, software&#10;+distributed under the License is distributed on an &quot;AS IS&quot; BASIS,&#10;+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&#10;+See the License for the specific language governing permissions and&#10;+limitations under the License.&#10;+==============================================================================*/&#10;+&#10;+// Automatically created from a TensorFlow Lite flatbuffer using the command:&#10;+// xxd -i model.tflite &gt; model.cc&#10;+&#10;+// This is a standard TensorFlow Lite model file that has been converted into a&#10;+// C data array, so it can be easily compiled into a binary for devices that&#10;+// don't have a file system.&#10;+&#10;+// See train/README.md for a full description of the creation process.&#10;+&#10;+#include &quot;model.h&quot;&#10;+&#10;+// Keep model aligned to 8 bytes to guarantee aligned 64-bit accesses.&#10;+alignas(8) const unsigned char g_model[] = {&#10;+    0x1c, 0x00, 0x00, 0x00, 0x54, 0x46, 0x4c, 0x33, 0x14, 0x00, 0x20, 0x00,&#10;+    0x1c, 0x00, 0x18, 0x00, 0x14, 0x00, 0x10, 0x00, 0x0c, 0x00, 0x00, 0x00,&#10;+    0x08, 0x00, 0x04, 0x00, 0x14, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x00, 0x00,&#10;+    0x98, 0x00, 0x00, 0x00, 0xc8, 0x00, 0x00, 0x00, 0x1c, 0x03, 0x00, 0x00,&#10;+    0x2c, 0x03, 0x00, 0x00, 0x30, 0x09, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,&#10;+    0x01, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x60, 0xf7, 0xff, 0xff,&#10;+    0x10, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00,&#10;+    0x44, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x73, 0x65, 0x72, 0x76,&#10;+    0x65, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x73, 0x65, 0x72, 0x76,&#10;+    0x69, 0x6e, 0x67, 0x5f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x00,&#10;+    0x01, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0xbc, 0xff, 0xff, 0xff,&#10;+    0x09, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00,&#10;+    0x64, 0x65, 0x6e, 0x73, 0x65, 0x5f, 0x34, 0x00, 0x01, 0x00, 0x00, 0x00,&#10;+    0x04, 0x00, 0x00, 0x00, 0x76, 0xfd, 0xff, 0xff, 0x04, 0x00, 0x00, 0x00,&#10;+    0x0d, 0x00, 0x00, 0x00, 0x64, 0x65, 0x6e, 0x73, 0x65, 0x5f, 0x32, 0x5f,&#10;+    0x69, 0x6e, 0x70, 0x75, 0x74, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,&#10;+    0x0c, 0x00, 0x00, 0x00, 0x08, 0x00, 0x0c, 0x00, 0x08, 0x00, 0x04, 0x00,&#10;+    0x08, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,&#10;+    0x13, 0x00, 0x00, 0x00, 0x6d, 0x69, 0x6e, 0x5f, 0x72, 0x75, 0x6e, 0x74,&#10;+    0x69, 0x6d, 0x65, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x00,&#10;+    0x0c, 0x00, 0x00, 0x00, 0x50, 0x02, 0x00, 0x00, 0x48, 0x02, 0x00, 0x00,&#10;+    0x34, 0x02, 0x00, 0x00, 0xdc, 0x01, 0x00, 0x00, 0x8c, 0x01, 0x00, 0x00,&#10;+    0x6c, 0x01, 0x00, 0x00, 0x5c, 0x00, 0x00, 0x00, 0x3c, 0x00, 0x00, 0x00,&#10;+    0x34, 0x00, 0x00, 0x00, 0x2c, 0x00, 0x00, 0x00, 0x24, 0x00, 0x00, 0x00,&#10;+    0x04, 0x00, 0x00, 0x00, 0xfa, 0xfd, 0xff, 0xff, 0x04, 0x00, 0x00, 0x00,&#10;+    0x10, 0x00, 0x00, 0x00, 0x31, 0x2e, 0x35, 0x2e, 0x30, 0x00, 0x00, 0x00,&#10;+    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x84, 0xfd, 0xff, 0xff,&#10;+    0x88, 0xfd, 0xff, 0xff, 0x8c, 0xfd, 0xff, 0xff, 0x22, 0xfe, 0xff, 0xff,&#10;+    0x04, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x21, 0xa5, 0x8b, 0xca,&#10;+    0x5e, 0x1d, 0xce, 0x42, 0x9d, 0xce, 0x1f, 0xb0, 0xdf, 0x54, 0x2f, 0x81,&#10;+    0x3e, 0xfe, 0xff, 0xff, 0x04, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00,&#10;+    0xee, 0xfc, 0x00, 0xec, 0x05, 0x17, 0xef, 0xec, 0xe6, 0xf8, 0x03, 0x01,&#10;+    0x00, 0xfa, 0xf8, 0xf5, 0xdc, 0xeb, 0x27, 0x14, 0xf1, 0xde, 0xe2, 0xdb,&#10;+    0xf0, 0xde, 0x31, 0x06, 0x02, 0xe6, 0xee, 0xf9, 0x00, 0x16, 0x07, 0xe0,&#10;+    0xfe, 0xff, 0xe9, 0x06, 0xe7, 0xef, 0x81, 0x1b, 0x18, 0xea, 0xc9, 0x01,&#10;+    0x0f, 0x00, 0xda, 0xf7, 0x0e, 0xec, 0x13, 0x1f, 0x04, 0x13, 0xb4, 0xe6,&#10;+    0xfd, 0x06, 0xb9, 0xe0, 0x0d, 0xec, 0xf0, 0xde, 0xeb, 0xf7, 0x05, 0x26,&#10;+    0x1a, 0xe4, 0x6f, 0x1a, 0xea, 0x1e, 0x35, 0xdf, 0x1a, 0xf3, 0xf1, 0x19,&#10;+    0x0f, 0x03, 0x1b, 0xe1, 0xde, 0x13, 0xf6, 0x19, 0xff, 0xf6, 0x1b, 0x18,&#10;+    0xf0, 0x1c, 0xda, 0x1b, 0x1b, 0x20, 0xe5, 0x1a, 0xf5, 0xff, 0x96, 0x0b,&#10;+    0x00, 0x01, 0xcd, 0xde, 0x0d, 0xf6, 0x16, 0xe3, 0xed, 0xfc, 0x0e, 0xe9,&#10;+    0xfa, 0xeb, 0x5c, 0xfc, 0x1d, 0x02, 0x5b, 0xe2, 0xe1, 0xf5, 0x15, 0xec,&#10;+    0xf4, 0x00, 0x13, 0x05, 0xec, 0x0c, 0x1d, 0x14, 0x0e, 0xe7, 0x0b, 0xf4,&#10;+    0x19, 0x00, 0xd7, 0x05, 0x27, 0x02, 0x15, 0xea, 0xea, 0x02, 0x9b, 0x00,&#10;+    0x0c, 0xfa, 0xe8, 0xea, 0xfd, 0x00, 0x14, 0xfd, 0x0b, 0x02, 0xef, 0xee,&#10;+    0x06, 0xee, 0x01, 0x0d, 0x06, 0xe6, 0xf7, 0x11, 0xf7, 0x09, 0xf8, 0xf1,&#10;+    0x21, 0xff, 0x0e, 0xf3, 0xec, 0x12, 0x26, 0x1d, 0xf2, 0xe9, 0x28, 0x18,&#10;+    0xe0, 0xfb, 0xf3, 0xf4, 0x05, 0x1d, 0x1d, 0xfb, 0xfd, 0x1e, 0xfc, 0x11,&#10;+    0xe8, 0x07, 0x09, 0x03, 0x12, 0xf2, 0x36, 0xfb, 0xdc, 0x1c, 0xf9, 0xef,&#10;+    0xf3, 0xe7, 0x6f, 0x0c, 0x1d, 0x00, 0x45, 0xfd, 0x0e, 0xf0, 0x0b, 0x19,&#10;+    0x1a, 0xfa, 0xe0, 0x19, 0x1f, 0x13, 0x36, 0x1c, 0x12, 0xeb, 0x3b, 0x0c,&#10;+    0xb4, 0xcb, 0xe6, 0x13, 0xfa, 0xeb, 0xf1, 0x06, 0x1c, 0xfa, 0x18, 0xe5,&#10;+    0xeb, 0xcb, 0x0c, 0xf4, 0x4a, 0xff, 0xff, 0xff, 0x04, 0x00, 0x00, 0x00,&#10;+    0x10, 0x00, 0x00, 0x00, 0x75, 0x1c, 0x11, 0xe1, 0x0c, 0x81, 0xa5, 0x42,&#10;+    0xfe, 0xd5, 0xd4, 0xb2, 0x61, 0x78, 0x19, 0xdf, 0x66, 0xff, 0xff, 0xff,&#10;+    0x04, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,&#10;+    0x77, 0x0b, 0x00, 0x00, 0x53, 0xf6, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00,&#10;+    0x77, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,&#10;+    0xd3, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,&#10;+    0x72, 0x21, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0x07, 0x00, 0x00,&#10;+    0x67, 0xf5, 0xff, 0xff, 0x34, 0xf0, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00,&#10;+    0xb2, 0xff, 0xff, 0xff, 0x04, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00,&#10;+    0x00, 0x00, 0x00, 0x00, 0xb5, 0x04, 0x00, 0x00, 0x78, 0x0a, 0x00, 0x00,&#10;+    0x2d, 0x06, 0x00, 0x00, 0x71, 0xf8, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00,&#10;+    0x9a, 0x0a, 0x00, 0x00, 0xfe, 0xf7, 0xff, 0xff, 0x0e, 0x05, 0x00, 0x00,&#10;+    0xd4, 0x09, 0x00, 0x00, 0x47, 0xfe, 0xff, 0xff, 0xb6, 0x04, 0x00, 0x00,&#10;+    0x00, 0x00, 0x00, 0x00, 0xac, 0xf7, 0xff, 0xff, 0x4b, 0xf9, 0xff, 0xff,&#10;+    0x4a, 0x05, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x08, 0x00, 0x04, 0x00,&#10;+    0x06, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,&#10;+    0x8c, 0xef, 0xff, 0xff, 0x84, 0xff, 0xff, 0xff, 0x88, 0xff, 0xff, 0xff,&#10;+    0x0f, 0x00, 0x00, 0x00, 0x4d, 0x4c, 0x49, 0x52, 0x20, 0x43, 0x6f, 0x6e,&#10;+    0x76, 0x65, 0x72, 0x74, 0x65, 0x64, 0x2e, 0x00, 0x01, 0x00, 0x00, 0x00,&#10;+    0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x18, 0x00, 0x14, 0x00,&#10;+    0x10, 0x00, 0x0c, 0x00, 0x08, 0x00, 0x04, 0x00, 0x0e, 0x00, 0x00, 0x00,&#10;+    0x14, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x00, 0x00, 0xdc, 0x00, 0x00, 0x00,&#10;+    0xe0, 0x00, 0x00, 0x00, 0xe4, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,&#10;+    0x6d, 0x61, 0x69, 0x6e, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,&#10;+    0x84, 0x00, 0x00, 0x00, 0x3c, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,&#10;+    0x96, 0xff, 0xff, 0xff, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08,&#10;+    0x10, 0x00, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00, 0x04, 0x00, 0x04, 0x00,&#10;+    0x04, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00,&#10;+    0x03, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00,&#10;+    0x01, 0x00, 0x00, 0x00, 0xca, 0xff, 0xff, 0xff, 0x10, 0x00, 0x00, 0x00,&#10;+    0x00, 0x00, 0x00, 0x08, 0x10, 0x00, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00,&#10;+    0xba, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x01, 0x01, 0x00, 0x00, 0x00,&#10;+    0x08, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00,&#10;+    0x05, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x00,&#10;+    0x16, 0x00, 0x00, 0x00, 0x10, 0x00, 0x0c, 0x00, 0x0b, 0x00, 0x04, 0x00,&#10;+    0x0e, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08,&#10;+    0x18, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00,&#10;+    0x08, 0x00, 0x07, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,&#10;+    0x01, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,&#10;+    0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,&#10;+    0x01, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,&#10;+    0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x4c, 0x04, 0x00, 0x00,&#10;+    0xd0, 0x03, 0x00, 0x00, 0x68, 0x03, 0x00, 0x00, 0x0c, 0x03, 0x00, 0x00,&#10;+    0x98, 0x02, 0x00, 0x00, 0x24, 0x02, 0x00, 0x00, 0xb0, 0x01, 0x00, 0x00,&#10;+    0x24, 0x01, 0x00, 0x00, 0x98, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,&#10;+    0xf0, 0xfb, 0xff, 0xff, 0x18, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00,&#10;+    0x54, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09,&#10;+    0x6c, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff,&#10;+    0x01, 0x00, 0x00, 0x00, 0xdc, 0xfb, 0xff, 0xff, 0x10, 0x00, 0x00, 0x00,&#10;+    0x18, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00,&#10;+    0x01, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,&#10;+    0x01, 0x00, 0x00, 0x00, 0x4a, 0xce, 0x0a, 0x3c, 0x01, 0x00, 0x00, 0x00,&#10;+    0x34, 0x84, 0x85, 0x3f, 0x01, 0x00, 0x00, 0x00, 0xc5, 0x02, 0x8f, 0xbf,&#10;+    0x1e, 0x00, 0x00, 0x00, 0x53, 0x74, 0x61, 0x74, 0x65, 0x66, 0x75, 0x6c,&#10;+    0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x65, 0x64, 0x43,&#10;+    0x61, 0x6c, 0x6c, 0x3a, 0x30, 0x5f, 0x69, 0x6e, 0x74, 0x38, 0x00, 0x00,&#10;+    0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,&#10;+    0x80, 0xfc, 0xff, 0xff, 0x18, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00,&#10;+    0x54, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09,&#10;+    0x64, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff,&#10;+    0x10, 0x00, 0x00, 0x00, 0x6c, 0xfc, 0xff, 0xff, 0x10, 0x00, 0x00, 0x00,&#10;+    0x18, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00,&#10;+    0x01, 0x00, 0x00, 0x00, 0x80, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,&#10;+    0x01, 0x00, 0x00, 0x00, 0x93, 0xd0, 0xc0, 0x3b, 0x01, 0x00, 0x00, 0x00,&#10;+    0xc2, 0x0f, 0xc0, 0x3f, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,&#10;+    0x14, 0x00, 0x00, 0x00, 0x74, 0x66, 0x6c, 0x2e, 0x66, 0x75, 0x6c, 0x6c,&#10;+    0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x31,&#10;+    0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,&#10;+    0x10, 0x00, 0x00, 0x00, 0x08, 0xfd, 0xff, 0xff, 0x18, 0x00, 0x00, 0x00,&#10;+    0x20, 0x00, 0x00, 0x00, 0x58, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,&#10;+    0x00, 0x00, 0x00, 0x09, 0x64, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,&#10;+    0xff, 0xff, 0xff, 0xff, 0x10, 0x00, 0x00, 0x00, 0xf4, 0xfc, 0xff, 0xff,&#10;+    0x10, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00,&#10;+    0x24, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x80, 0xff, 0xff, 0xff,&#10;+    0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,&#10;+    0xe0, 0xdb, 0x47, 0x3c, 0x01, 0x00, 0x00, 0x00, 0x04, 0x14, 0x47, 0x40,&#10;+    0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00,&#10;+    0x74, 0x66, 0x6c, 0x2e, 0x66, 0x75, 0x6c, 0x6c, 0x79, 0x5f, 0x63, 0x6f,&#10;+    0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x00, 0x02, 0x00, 0x00, 0x00,&#10;+    0x01, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x02, 0xfe, 0xff, 0xff,&#10;+    0x14, 0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00,&#10;+    0x00, 0x00, 0x00, 0x09, 0x50, 0x00, 0x00, 0x00, 0x6c, 0xfd, 0xff, 0xff,&#10;+    0x10, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x00, 0x00,&#10;+    0x20, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,&#10;+    0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0xfb, 0x4b, 0x0b, 0x3c,&#10;+    0x01, 0x00, 0x00, 0x00, 0x40, 0x84, 0x4b, 0x3f, 0x01, 0x00, 0x00, 0x00,&#10;+    0x63, 0x35, 0x8a, 0xbf, 0x0d, 0x00, 0x00, 0x00, 0x73, 0x74, 0x64, 0x2e,&#10;+    0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x32, 0x00, 0x00, 0x00,&#10;+    0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,&#10;+    0x72, 0xfe, 0xff, 0xff, 0x14, 0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 0x00,&#10;+    0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09, 0x50, 0x00, 0x00, 0x00,&#10;+    0xdc, 0xfd, 0xff, 0xff, 0x10, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00,&#10;+    0x1c, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,&#10;+    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,&#10;+    0x60, 0x01, 0x4f, 0x3c, 0x01, 0x00, 0x00, 0x00, 0x47, 0x6d, 0xb3, 0x3f,&#10;+    0x01, 0x00, 0x00, 0x00, 0x5d, 0x63, 0xcd, 0xbf, 0x0d, 0x00, 0x00, 0x00,&#10;+    0x73, 0x74, 0x64, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74,&#10;+    0x31, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,&#10;+    0x10, 0x00, 0x00, 0x00, 0xe2, 0xfe, 0xff, 0xff, 0x14, 0x00, 0x00, 0x00,&#10;+    0x48, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09,&#10;+    0x50, 0x00, 0x00, 0x00, 0x4c, 0xfe, 0xff, 0xff, 0x10, 0x00, 0x00, 0x00,&#10;+    0x18, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00,&#10;+    0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,&#10;+    0x01, 0x00, 0x00, 0x00, 0xd5, 0x6b, 0x8a, 0x3b, 0x01, 0x00, 0x00, 0x00,&#10;+    0xab, 0x49, 0x01, 0x3f, 0x01, 0x00, 0x00, 0x00, 0xfd, 0x56, 0x09, 0xbf,&#10;+    0x0c, 0x00, 0x00, 0x00, 0x73, 0x74, 0x64, 0x2e, 0x63, 0x6f, 0x6e, 0x73,&#10;+    0x74, 0x61, 0x6e, 0x74, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,&#10;+    0x10, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x52, 0xff, 0xff, 0xff,&#10;+    0x14, 0x00, 0x00, 0x00, 0x34, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,&#10;+    0x00, 0x00, 0x00, 0x02, 0x3c, 0x00, 0x00, 0x00, 0x44, 0xff, 0xff, 0xff,&#10;+    0x08, 0x00, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,&#10;+    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,&#10;+    0x01, 0x00, 0x00, 0x00, 0x28, 0xb3, 0xd9, 0x38, 0x0c, 0x00, 0x00, 0x00,&#10;+    0x64, 0x65, 0x6e, 0x73, 0x65, 0x5f, 0x32, 0x2f, 0x62, 0x69, 0x61, 0x73,&#10;+    0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,&#10;+    0xaa, 0xff, 0xff, 0xff, 0x14, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00,&#10;+    0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x38, 0x00, 0x00, 0x00,&#10;+    0x9c, 0xff, 0xff, 0xff, 0x08, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,&#10;+    0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,&#10;+    0x01, 0x00, 0x00, 0x00, 0xdd, 0x9b, 0x21, 0x39, 0x0c, 0x00, 0x00, 0x00,&#10;+    0x64, 0x65, 0x6e, 0x73, 0x65, 0x5f, 0x33, 0x2f, 0x62, 0x69, 0x61, 0x73,&#10;+    0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,&#10;+    0x00, 0x00, 0x0e, 0x00, 0x18, 0x00, 0x14, 0x00, 0x13, 0x00, 0x0c, 0x00,&#10;+    0x08, 0x00, 0x04, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00,&#10;+    0x40, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02,&#10;+    0x48, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00,&#10;+    0x08, 0x00, 0x04, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,&#10;+    0x14, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,&#10;+    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,&#10;+    0xf4, 0xd4, 0x51, 0x38, 0x0c, 0x00, 0x00, 0x00, 0x64, 0x65, 0x6e, 0x73,&#10;+    0x65, 0x5f, 0x34, 0x2f, 0x62, 0x69, 0x61, 0x73, 0x00, 0x00, 0x00, 0x00,&#10;+    0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x14, 0x00, 0x1c, 0x00,&#10;+    0x18, 0x00, 0x17, 0x00, 0x10, 0x00, 0x0c, 0x00, 0x08, 0x00, 0x00, 0x00,&#10;+    0x00, 0x00, 0x04, 0x00, 0x14, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00,&#10;+    0x2c, 0x00, 0x00, 0x00, 0x64, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,&#10;+    0x00, 0x00, 0x00, 0x09, 0x84, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,&#10;+    0xff, 0xff, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x14, 0x00,&#10;+    0x10, 0x00, 0x0c, 0x00, 0x08, 0x00, 0x04, 0x00, 0x0c, 0x00, 0x00, 0x00,&#10;+    0x10, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00,&#10;+    0x24, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x80, 0xff, 0xff, 0xff,&#10;+    0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,&#10;+    0x5d, 0x4f, 0xc9, 0x3c, 0x01, 0x00, 0x00, 0x00, 0x0e, 0x86, 0xc8, 0x40,&#10;+    0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 0x00, 0x00, 0x00,&#10;+    0x73, 0x65, 0x72, 0x76, 0x69, 0x6e, 0x67, 0x5f, 0x64, 0x65, 0x66, 0x61,&#10;+    0x75, 0x6c, 0x74, 0x5f, 0x64, 0x65, 0x6e, 0x73, 0x65, 0x5f, 0x32, 0x5f,&#10;+    0x69, 0x6e, 0x70, 0x75, 0x74, 0x3a, 0x30, 0x5f, 0x69, 0x6e, 0x74, 0x38,&#10;+    0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,&#10;+    0x01, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00,&#10;+    0x24, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0xd8, 0xff, 0xff, 0xff,&#10;+    0x06, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06,&#10;+    0x0c, 0x00, 0x0c, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00,&#10;+    0x0c, 0x00, 0x00, 0x00, 0x72, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x72,&#10;+    0x0c, 0x00, 0x10, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x08, 0x00, 0x04, 0x00,&#10;+    0x0c, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,&#10;+    0x00, 0x00, 0x00, 0x09};&#10;+const int g_model_len = 2488;&#10;" />
			<string key="comment_change" value="True" />
		</event>
		<event>
			<string key="timestamp" value="2023-10-06T13:50:53+03:00" />
			<string key="author" value="Me No Dev" />
			<string key="change_type" value="ADD" />
			<string key="commit_message" value="Add TFLite Micro examples (#8717)&#10;&#10;* create TFLite library&#13;&#10;&#13;&#10;* add TFLite hello_world example&#13;&#10;&#13;&#10;* add TFLite micro_speech example&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Sanket Wadekar &lt;67091512+sanketwadekar@users.noreply.github.com&gt;" />
			<int key="additions" value="1596" />
			<int key="deletions" value="0" />
			<string key="diff" value="@@ -0,0 +1,1596 @@&#10;+/* Copyright 2020 The TensorFlow Authors. All Rights Reserved.&#10;+&#10;+Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);&#10;+you may not use this file except in compliance with the License.&#10;+You may obtain a copy of the License at&#10;+&#10;+    http://www.apache.org/licenses/LICENSE-2.0&#10;+&#10;+Unless required by applicable law or agreed to in writing, software&#10;+distributed under the License is distributed on an &quot;AS IS&quot; BASIS,&#10;+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&#10;+See the License for the specific language governing permissions and&#10;+limitations under the License.&#10;+==============================================================================*/&#10;+&#10;+// This is a standard TensorFlow Lite FlatBuffer model file that has been&#10;+// converted into a C data array, so it can be easily compiled into a binary&#10;+// for devices that don't have a file system. It was created using the command:&#10;+// xxd -i model.tflite &gt; model.cc&#10;+&#10;+#include &quot;model.h&quot;&#10;+&#10;+// We need to keep the data array aligned on some architectures.&#10;+#ifdef __has_attribute&#10;+#define HAVE_ATTRIBUTE(x) __has_attribute(x)&#10;+#else&#10;+#define HAVE_ATTRIBUTE(x) 0&#10;+#endif&#10;+#if HAVE_ATTRIBUTE(aligned) || (defined(__GNUC__) &amp;&amp; !defined(__clang__))&#10;+#define DATA_ALIGN_ATTRIBUTE __attribute__((aligned(4)))&#10;+#else&#10;+#define DATA_ALIGN_ATTRIBUTE&#10;+#endif&#10;+&#10;+const unsigned char g_model[] DATA_ALIGN_ATTRIBUTE = {&#10;+    0x20, 0x00, 0x00, 0x00, 0x54, 0x46, 0x4c, 0x33, 0x00, 0x00, 0x00, 0x00,&#10;+    0x00, 0x00, 0x12, 0x00, 0x1c, 0x00, 0x04, 0x00, 0x08, 0x00, 0x0c, 0x00,&#10;+    0x10, 0x00, 0x14, 0x00, 0x00, 0x00, 0x18, 0x00, 0x12, 0x00, 0x00, 0x00,&#10;+    0x03, 0x00, 0x00, 0x00, 0x94, 0x48, 0x00, 0x00, 0x34, 0x42, 0x00, 0x00,&#10;+    0x1c, 0x42, 0x00, 0x00, 0x3c, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,&#10;+    0x01, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x08, 0x00, 0x0c, 0x00,&#10;+    0x04, 0x00, 0x08, 0x00, 0x08, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,&#10;+    0x0b, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00, 0x6d, 0x69, 0x6e, 0x5f,&#10;+    0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x76, 0x65, 0x72, 0x73,&#10;+    0x69, 0x6f, 0x6e, 0x00, 0x0c, 0x00, 0x00, 0x00, 0xd4, 0x41, 0x00, 0x00,&#10;+    0xb4, 0x41, 0x00, 0x00, 0x24, 0x03, 0x00, 0x00, 0xf4, 0x02, 0x00, 0x00,&#10;+    0xec, 0x02, 0x00, 0x00, 0xe4, 0x02, 0x00, 0x00, 0xc4, 0x02, 0x00, 0x00,&#10;+    0xbc, 0x02, 0x00, 0x00, 0x2c, 0x00, 0x00, 0x00, 0x24, 0x00, 0x00, 0x00,&#10;+    0x1c, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x16, 0xbd, 0xff, 0xff,&#10;+    0x04, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x31, 0x2e, 0x35, 0x2e,&#10;+    0x30, 0x00, 0x00, 0x00, 0x94, 0xba, 0xff, 0xff, 0x98, 0xba, 0xff, 0xff,&#10;+    0x32, 0xbd, 0xff, 0xff, 0x04, 0x00, 0x00, 0x00, 0x80, 0x02, 0x00, 0x00,&#10;+    0xfa, 0xee, 0x28, 0xc4, 0xee, 0xfe, 0xcf, 0x0f, 0x1e, 0xf7, 0x1f, 0x06,&#10;+    0x0d, 0xed, 0xe9, 0x83, 0x5c, 0xc9, 0x18, 0xe3, 0xf9, 0x14, 0x28, 0x2a,&#10;+    0x09, 0xf2, 0x18, 0x34, 0x62, 0xea, 0xef, 0xd6, 0x36, 0xb7, 0x1e, 0xf7,&#10;+    0x3b, 0x22, 0x28, 0x39, 0xc2, 0x9d, 0xf1, 0x07, 0x5e, 0x0b, 0x1e, 0x2c,&#10;+    0x07, 0xdd, 0xfd, 0xc3, 0xd8, 0x4a, 0xf3, 0x28, 0xa7, 0x16, 0xd5, 0xf1,&#10;+    0xc3, 0x05, 0xfd, 0x27, 0xcc, 0xba, 0x1e, 0xcb, 0xd7, 0x3d, 0xd4, 0x29,&#10;+    0x00, 0xfd, 0x28, 0x44, 0xfb, 0xf2, 0xf3, 0xb6, 0x4f, 0xcf, 0x09, 0xf0,&#10;+    0xfa, 0x45, 0x41, 0x49, 0x05, 0xc5, 0x17, 0x5d, 0x64, 0x00, 0xf8, 0xee,&#10;+    0x48, 0x17, 0xf4, 0xe9, 0x2e, 0x4b, 0x2e, 0x3f, 0xdf, 0xee, 0xe4, 0x08,&#10;+    0x38, 0xf1, 0x16, 0x13, 0x2f, 0x2a, 0xed, 0xc2, 0xbf, 0x36, 0xf4, 0x02,&#10;+    0xcf, 0xaa, 0xd2, 0xfa, 0xac, 0x13, 0xf6, 0xe8, 0xb5, 0x68, 0x12, 0xb6,&#10;+    0xce, 0x0e, 0xdf, 0x58, 0xe4, 0x49, 0x14, 0x15, 0x03, 0xed, 0xfa, 0xd4,&#10;+    0x40, 0xa7, 0xf6, 0xca, 0xfb, 0x00, 0x4d, 0x5e, 0xe4, 0x55, 0x1d, 0x30,&#10;+    0x45, 0xe2, 0xfc, 0x01, 0x48, 0x81, 0xe9, 0xf1, 0x1e, 0xfc, 0x21, 0x32,&#10;+    0xed, 0x4b, 0xed, 0xfa, 0x2f, 0xd2, 0xfa, 0xfb, 0x4d, 0xa7, 0xed, 0xc7,&#10;+    0x92, 0xdf, 0xe6, 0xdb, 0xf8, 0x1f, 0xd9, 0xfa, 0x91, 0xf5, 0xe5, 0xc5,&#10;+    0x8c, 0x17, 0x0f, 0xb9, 0xd2, 0xc7, 0xfe, 0x68, 0xd3, 0x51, 0x2e, 0x49,&#10;+    0x1f, 0xbd, 0x01, 0xeb, 0x31, 0x17, 0xf0, 0xef, 0xff, 0xb8, 0x5d, 0x62,&#10;+    0x02, 0x0f, 0x1f, 0x78, 0x6a, 0xb0, 0xf9, 0xfe, 0x4f, 0xcc, 0xd3, 0xff,&#10;+    0x0a, 0x96, 0x1e, 0x2c, 0xed, 0xbc, 0xf4, 0x0b, 0x42, 0xc8, 0xf1, 0xea,&#10;+    0x6e, 0x58, 0xec, 0xc4, 0x99, 0xae, 0xdc, 0xd7, 0x12, 0x87, 0xd8, 0x06,&#10;+    0xa2, 0xc2, 0xe6, 0xa2, 0x81, 0x24, 0xe9, 0xac, 0xce, 0xb6, 0x15, 0x6b,&#10;+    0xba, 0x00, 0x19, 0x58, 0x29, 0xb6, 0xfe, 0x01, 0x25, 0x96, 0xd2, 0xec,&#10;+    0x0e, 0x9c, 0x60, 0x5f, 0xe9, 0xf4, 0xf5, 0x69, 0x6b, 0xb5, 0xe1, 0xf6,&#10;+    0x5e, 0xb7, 0xb1, 0xe5, 0x11, 0x9b, 0x18, 0x10, 0xe3, 0xe1, 0xe0, 0x0d,&#10;+    0x4f, 0xa5, 0xde, 0xe5, 0x6f, 0xe2, 0xfb, 0x99, 0x82, 0xa5, 0xc9, 0xb6,&#10;+    0x1f, 0x46, 0xf3, 0x04, 0xc6, 0xca, 0xd6, 0x97, 0x90, 0x1d, 0xc0, 0x95,&#10;+    0xf0, 0x19, 0x30, 0x77, 0xc2, 0x3c, 0xfa, 0x24, 0x02, 0x4d, 0x06, 0x07,&#10;+    0x15, 0x02, 0xb0, 0xe7, 0x27, 0x22, 0x67, 0x4d, 0xf1, 0xc2, 0xf4, 0x64,&#10;+    0x38, 0x40, 0xdf, 0xf6, 0x3a, 0x43, 0xb8, 0xe1, 0x0d, 0x15, 0x11, 0xfe,&#10;+    0xf5, 0xec, 0xf9, 0xe5, 0x22, 0x36, 0xe4, 0xfd, 0x6d, 0xbf, 0x0d, 0x8e,&#10;+    0xb7, 0x15, 0xbf, 0x9f, 0x16, 0xad, 0x0a, 0x02, 0x8e, 0x14, 0xda, 0x9b,&#10;+    0x8e, 0xc3, 0xa6, 0xca, 0xf5, 0x7f, 0x51, 0x56, 0xc1, 0xb3, 0xd9, 0x35,&#10;+    0xf8, 0x7f, 0x04, 0x0a, 0x03, 0x3f, 0xbe, 0xee, 0x19, 0x68, 0x78, 0x50,&#10;+    0xf9, 0xa7, 0xf7, 0x7f, 0x1d, 0x76, 0xdb, 0xe8, 0x33, 0xb9, 0xd7, 0xe7,&#10;+    0xe8, 0x69, 0x15, 0xf7, 0xf5, 0xb2, 0xfe, 0xe8, 0xf3, 0x5b, 0xe2, 0x06,&#10;+    0x6e, 0x09, 0x36, 0xb7, 0xcc, 0x38, 0xbf, 0x8a, 0x28, 0x14, 0x2e, 0x18,&#10;+    0xa7, 0x26, 0xcb, 0xb2, 0x95, 0x37, 0xac, 0xcd, 0xd7, 0x51, 0x67, 0x44,&#10;+    0xcd, 0x31, 0xde, 0x04, 0xe9, 0x6a, 0x00, 0x13, 0x0a, 0x0c, 0xdd, 0x16,&#10;+    0xe0, 0x24, 0x7e, 0x49, 0xf1, 0xb5, 0x04, 0x52, 0x01, 0x50, 0xdd, 0xf5,&#10;+    0x26, 0xc9, 0xf4, 0xf8, 0xd6, 0x31, 0x1b, 0xd0, 0xef, 0x03, 0x0a, 0xc0,&#10;+    0xd4, 0x4f, 0xe2, 0xfd, 0x72, 0xf4, 0x5a, 0xc9, 0xd7, 0x31, 0xc0, 0x8e,&#10;+    0x17, 0x5e, 0x57, 0x00, 0xb4, 0x3a, 0xc8, 0xd2, 0x92, 0x32, 0xcb, 0xd8,&#10;+    0xc3, 0xa6, 0x63, 0x26, 0xcf, 0xbc, 0xe8, 0x57, 0x9b, 0xe9, 0xf7, 0x1c,&#10;+    0xea, 0x12, 0xf1, 0xf7, 0xdb, 0xb9, 0x7f, 0x16, 0xf6, 0xe0, 0x08, 0x70,&#10;+    0xa2, 0xed, 0xcc, 0xf1, 0x1e, 0x10, 0x04, 0xf7, 0xa9, 0xb7, 0x34, 0xaa,&#10;+    0x0a, 0xdb, 0x2a, 0xa6, 0xb6, 0x10, 0xea, 0xf8, 0x5e, 0x06, 0x72, 0xdd,&#10;+    0xd0, 0xb9, 0xd6, 0xa0, 0x10, 0x9f, 0x5a, 0x17, 0xb1, 0xe7, 0xc0, 0x01,&#10;+    0x9d, 0x01, 0xe0, 0xe0, 0xaf, 0x9c, 0x46, 0xd8, 0xaf, 0xe8, 0xce, 0x02,&#10;+    0x8a, 0xbb, 0xe4, 0xf6, 0xf3, 0x36, 0x07, 0xca, 0xcb, 0x87, 0x6e, 0xcc,&#10;+    0xd6, 0x9e, 0x0a, 0x2a, 0x81, 0xd7, 0xcf, 0xc0, 0x04, 0xeb, 0x24, 0xcc,&#10;+    0xc9, 0x95, 0x33, 0x81, 0xf7, 0xad, 0x1c, 0x9c, 0xa4, 0xd6, 0xf9, 0xe6,&#10;+    0x3d, 0x84, 0x7f, 0xcc, 0xd4, 0xb0, 0xf4, 0xa2, 0xe9, 0x3c, 0x36, 0xee,&#10;+    0xd5, 0xcf, 0xcd, 0x2d, 0x28, 0xbd, 0xff, 0xff, 0xc2, 0xbf, 0xff, 0xff,&#10;+    0x04, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff,&#10;+    0x31, 0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,&#10;+    0x48, 0xbd, 0xff, 0xff, 0x4c, 0xbd, 0xff, 0xff, 0xe6, 0xbf, 0xff, 0xff,&#10;+    0x04, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x8a, 0xfe, 0xff, 0xff,&#10;+    0xa9, 0x00, 0x00, 0x00, 0xd0, 0xff, 0xff, 0xff, 0xd0, 0x00, 0x00, 0x00,&#10;+    0x52, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x4f, 0xfb, 0xff, 0xff,&#10;+    0x4a, 0xfd, 0xff, 0xff, 0x12, 0xc0, 0xff, 0xff, 0x04, 0x00, 0x00, 0x00,&#10;+    0x80, 0x3e, 0x00, 0x00, 0xff, 0xf9, 0xfd, 0x0a, 0x07, 0x08, 0x07, 0x03,&#10;+    0x07, 0xf2, 0xd1, 0x09, 0xf0, 0xe9, 0x28, 0x09, 0xdf, 0x05, 0xfa, 0xf0,&#10;+    0xe8, 0xe3, 0x13, 0x0e, 0x08, 0xef, 0xd3, 0xee, 0x0f, 0xe8, 0xeb, 0x14,&#10;+    0xf7, 0xed, 0xfd, 0x1f, 0xe8, 0xd5, 0xeb, 0xfc, 0x0e, 0xf4, 0xf7, 0x07,&#10;+    0x05, 0xea, 0xf6, 0x1f, 0xf8, 0xdb, 0xdc, 0x0b, 0x03, 0xdd, 0xd8, 0xf3,&#10;+    0x0f, 0x19, 0xe1, 0x09, 0xfc, 0xe4, 0x02, 0x04, 0xf1, 0x04, 0xeb, 0xf3,&#10;+    0x1e, 0x06, 0xfd, 0x11, 0xfc, 0xfa, 0xf6, 0x1f, 0x0f, 0x02, 0xf5, 0xf7,&#10;+    0xff, 0x24, 0xdf, 0xf7, 0xf8, 0xf3, 0xf6, 0xe9, 0xef, 0x03, 0xdd, 0xf2,&#10;+    0x28, 0xe1, 0xf2, 0x22, 0xf4, 0x09, 0xf7, 0xf9, 0xf0, 0xd4, 0xf9, 0xee,&#10;+    0xff, 0x14, 0xda, 0xf3, 0x11, 0xe2, 0xf6, 0x0c, 0xf2, 0xeb, 0xf8, 0xe8,&#10;+    0xe3, 0x08, 0x02, 0x17, 0xf4, 0x0b, 0x0c, 0x27, 0xe6, 0x02, 0x03, 0xf9,&#10;+    0x14, 0x18, 0xf6, 0xeb, 0x1f, 0x0c, 0xf1, 0xee, 0xfc, 0x08, 0xf0, 0xfe,&#10;+    0xfd, 0xee, 0x17, 0xfd, 0x1c, 0xef, 0xfd, 0xde, 0x04, 0x05, 0xf0, 0x31,&#10;+    0xfa, 0x0b, 0xdc, 0x0d, 0xed, 0xf5, 0xfa, 0xf4, 0x08, 0x0c, 0xd7, 0x1e,&#10;+    0x15, 0x03, 0xf5, 0x02, 0xf4, 0xfb, 0xed, 0x01, 0xfe, 0xd6, 0x1f, 0xfd,&#10;+    0xfd, 0x0e, 0xfa, 0x06, 0xf1, 0xf9, 0xe2, 0x16, 0xe9, 0xf1, 0x03, 0x0d,&#10;+    0x0d, 0xdf, 0xf9, 0x1a, 0x0e, 0xf6, 0xfc, 0x0a, 0x19, 0xe2, 0xe0, 0x09,&#10;+    0x15, 0xf0, 0xf1, 0x06, 0xf1, 0xe1, 0xef, 0x1a, 0x08, 0xe8, 0xfd, 0x12,&#10;+    0x14, 0x06, 0xf1, 0xfc, 0xea, 0xfb, 0xf7, 0xea, 0x1d, 0x09, 0xfa, 0xf6,&#10;+    0x08, 0xf2, 0xe7, 0xf8, 0xfc, 0x16, 0xf5, 0x0e, 0x08, 0xf9, 0x0a, 0x03,&#10;+    0x26, 0xd8, 0x02, 0xf5, 0xf6, 0xf6, 0xef, 0x1f, 0xe4, 0xe2, 0xfb, 0x02,&#10;+    0x1b, 0xe6, 0xde, 0x00, 0xf2, 0xed, 0xfb, 0x18, 0xe4, 0x16, 0x1a, 0x1d,&#10;+    0xf1, 0xf6, 0xea, 0x16, 0x05, 0xde, 0xfb, 0x18, 0xf5, 0xe4, 0xfe, 0xe2,&#10;+    0x1b, 0x1c, 0x0c, 0xe8, 0x02, 0xee, 0xfb, 0x07, 0x24, 0xf2, 0xe9, 0xfa,&#10;+    0x0d, 0x05, 0xf1, 0x03, 0xfe, 0xf6, 0x19, 0x06, 0xff, 0xf9, 0x04, 0xfb,&#10;+    0x15, 0xef, 0xf1, 0xf8, 0xe9, 0xe1, 0x10, 0x04, 0xfc, 0xe6, 0x1f, 0xed,&#10;+    0x0b, 0xef, 0x00, 0x1e, 0xe6, 0x16, 0xf3, 0x09, 0xfd, 0x08, 0x08, 0x06,&#10;+    0x06, 0x23, 0xdf, 0xfc, 0x08, 0xf4, 0xea, 0x0c, 0xf2, 0xe6, 0x18, 0xf5,&#10;+    0x02, 0xf9, 0x50, 0x09, 0x01, 0xda, 0x0b, 0x05, 0x12, 0x18, 0xef, 0x04,&#10;+    0x0e, 0xd9, 0xff, 0xdc, 0xf6, 0x16, 0xf9, 0xf4, 0xec, 0xff, 0xea, 0xe6,&#10;+    0xfa, 0x0a, 0xed, 0xef, 0x02, 0xf0, 0x25, 0x21, 0xf1, 0x26, 0xf5, 0xed,&#10;+    0x09, 0xea, 0xea, 0x24, 0xfa, 0x11, 0xfc, 0xdf, 0xf3, 0x0a, 0x28, 0x0c,&#10;+    0x19, 0xff, 0xf5, 0xd6, 0x0e, 0xe2, 0x2a, 0x06, 0xfa, 0x03, 0xf9, 0xe6,&#10;+    0xef, 0x23, 0xf9, 0xfa, 0xe6, 0xfe, 0xfc, 0x03, 0x06, 0x1a, 0xf9, 0x08,&#10;+    0xe0, 0xe5, 0xff, 0x05, 0x01, 0xe7, 0x12, 0x02, 0x1d, 0x05, 0x03, 0x05,&#10;+    0x0b, 0xee, 0xed, 0xfc, 0x0f, 0xf3, 0x02, 0xe0, 0x15, 0xdf, 0x02, 0xed,&#10;+    0x10, 0x26, 0xef, 0x0d, 0x06, 0xee, 0xef, 0xf6, 0xeb, 0x11, 0x09, 0xf4,&#10;+    0xf7, 0x06, 0x0f, 0x01, 0x2a, 0x0b, 0x01, 0xdd, 0xfc, 0xf4, 0xf1, 0x17,&#10;+    0x03, 0x04, 0x07, 0xfc, 0x22, 0xfc, 0xde, 0xfe, 0x0b, 0x03, 0xf3, 0xfb,&#10;+    0x0c, 0x25, 0x04, 0x19, 0x04, 0x03, 0x01, 0xfa, 0xfb, 0xf7, 0xf6, 0x0e,&#10;+    0x15, 0x0e, 0x09, 0xff, 0x06, 0xfa, 0xfb, 0x1e, 0xfb, 0x05, 0x22, 0xf9,&#10;+    0xfe, 0xf7, 0x1d, 0xed, 0xdf, 0x18, 0x09, 0xeb, 0xef, 0x04, 0x12, 0xea,&#10;+    0xdf, 0xfb, 0xda, 0xf6, 0xdf, 0x17, 0xef, 0xef, 0xe1, 0x1a, 0xd9, 0xe2,&#10;+    0xe2, 0xfc, 0x05, 0x11, 0xf6, 0xee, 0xe8, 0xf2, 0xe1, 0x08, 0x26, 0x04,&#10;+    0xed, 0x03, 0xe0, 0xfb, 0xee, 0x0c, 0xee, 0xf6, 0x04, 0x2d, 0xf2, 0xd3,&#10;+    0xf4, 0xe0, 0xf8, 0x0c, 0xfe, 0x11, 0x0b, 0xd7, 0xfd, 0x18, 0x07, 0x0d,&#10;+    0x07, 0x08, 0xf4, 0xc6, 0x0a, 0x0a, 0x1f, 0x0c, 0xf4, 0x1d, 0x02, 0x0b,&#10;+    0x09, 0x0e, 0x21, 0xff, 0x17, 0x0b, 0x0d, 0xf2, 0xed, 0xd7, 0x0a, 0xf8,&#10;+    0x03, 0x06, 0xfa, 0xe5, 0xfd, 0x03, 0x14, 0x0f, 0xe9, 0x1a, 0xf4, 0xda,&#10;+    0x01, 0xe6, 0x09, 0x06, 0x11, 0x0d, 0xfd, 0xeb, 0x16, 0x23, 0xfa, 0x00,&#10;+    0x0b, 0x17, 0xf7, 0xda, 0xd7, 0x1b, 0xfa, 0x01, 0x03, 0x05, 0xfe, 0xd6,&#10;+    0x02, 0xee, 0xee, 0x02, 0xf3, 0x06, 0xed, 0x03, 0xec, 0x01, 0xf2, 0x0f,&#10;+    0x05, 0x17, 0x0b, 0xfb, 0x0f, 0x05, 0x03, 0x13, 0xff, 0x06, 0x02, 0xf5,&#10;+    0xf4, 0x18, 0x2b, 0xf0, 0x00, 0x17, 0xfc, 0xfd, 0x05, 0x0b, 0x0e, 0x14,&#10;+    0xe1, 0x24, 0x08, 0x24, 0xe6, 0xeb, 0x21, 0x12, 0xfb, 0x12, 0xe7, 0xf4,&#10;+    0xe8, 0x0e, 0x18, 0xee, 0xf5, 0xf3, 0xd9, 0xf3, 0xdb, 0xec, 0x0c, 0x1e,&#10;+    0xcf, 0x14, 0xdb, 0xe3, 0xdc, 0x02, 0x0c, 0xfb, 0xdb, 0x1b, 0xd0, 0xfe,&#10;+    0xf9, 0xfe, 0x2a, 0xf5, 0x00, 0x0b, 0xcd, 0xe0, 0xe2, 0x0e, 0x04, 0xf8,&#10;+    0xda, 0x1c, 0xe5, 0x0f, 0xe8, 0xf4, 0xf7, 0x15, 0x06, 0xf8, 0x02, 0xf7,&#10;+    0x0f, 0xfb, 0x17, 0xf9, 0xda, 0x01, 0xda, 0xd1, 0xf6, 0x02, 0xfd, 0x16,&#10;+    0xf1, 0xe4, 0xfa, 0x07, 0xee, 0x0a, 0xf3, 0xfd, 0xf2, 0x23, 0xf0, 0xe1,&#10;+    0x0a, 0x1a, 0x12, 0x1f, 0xef, 0x27, 0x09, 0xf1, 0x0c, 0x13, 0x23, 0xfd,&#10;+    0xf5, 0x03, 0xfe, 0x09, 0xfd, 0x16, 0xf8, 0x07, 0x08, 0x25, 0x08, 0xf8,&#10;+    0xf6, 0x0a, 0xf1, 0xf5, 0x07, 0x09, 0x05, 0xcc, 0xf8, 0x08, 0x13, 0xf9,&#10;+    0x1d, 0x11, 0x0f, 0xdc, 0xee, 0xf3, 0x27, 0xf9, 0xf9, 0x22, 0xfa, 0x0d,&#10;+    0xe2, 0x13, 0xfb, 0x11, 0x03, 0x1e, 0xff, 0xfb, 0xed, 0xf1, 0x0e, 0x0b,&#10;+    0x0f, 0x00, 0x06, 0xe0, 0x15, 0xf3, 0x13, 0xfc, 0x18, 0xf9, 0xff, 0x09,&#10;+    0xfa, 0x1f, 0x12, 0xe5, 0xe2, 0x06, 0xf9, 0xf4, 0x07, 0x15, 0x0b, 0x04,&#10;+    0xdb, 0x0d, 0xeb, 0xf3, 0xe6, 0x06, 0xe5, 0xee, 0xd8, 0x22, 0xd8, 0x10,&#10;+    0xea, 0xf9, 0x1c, 0xf7, 0xd3, 0x11, 0xc3, 0xf8, 0xde, 0x05, 0x00, 0xe6,&#10;+    0x07, 0xfd, 0xd3, 0x03, 0xea, 0xe0, 0x13, 0x14, 0xcf, 0xeb, 0xcd, 0xd3,&#10;+    0xde, 0xf5, 0xf0, 0x0c, 0x0c, 0xfa, 0xeb, 0xd3, 0xfb, 0xfd, 0x08, 0xf9,&#10;+    0xf4, 0x10, 0xfa, 0xd3, 0xf4, 0x11, 0x11, 0xf8, 0xef, 0xf8, 0xf8, 0xf1,&#10;+    0xfc, 0xe1, 0xf7, 0x12, 0x04, 0xf4, 0xfb, 0xed, 0xef, 0x0c, 0xfd, 0x1c,&#10;+    0xfe, 0x0e, 0xfd, 0xe2, 0xfe, 0x0a, 0x02, 0xfe, 0xe6, 0x1f, 0xef, 0xe5,&#10;+    0xe6, 0xf8, 0x16, 0x27, 0xe8, 0x20, 0x05, 0xe3, 0xf1, 0xef, 0xee, 0xed,&#10;+    0x0d, 0x11, 0x16, 0xfb, 0xf3, 0xff, 0x14, 0x01, 0xff, 0x15, 0x10, 0x02,&#10;+    0xe5, 0x28, 0x29, 0x13, 0x13, 0x16, 0xe6, 0x00, 0xd2, 0x26, 0xfd, 0x03,&#10;+    0x04, 0x05, 0x07, 0x06, 0xf1, 0x0e, 0x05, 0x0d, 0xe2, 0x0f, 0x02, 0xe1,&#10;+    0x07, 0xf7, 0x1c, 0xfa, 0x14, 0x30, 0xf7, 0xee, 0x00, 0xfa, 0x3d, 0x06,&#10;+    0x1c, 0x04, 0x06, 0x07, 0x05, 0x1a, 0x10, 0xf6, 0xee, 0x0a, 0xeb, 0x04,&#10;+    0xeb, 0xdf, 0x1d, 0x09, 0xd5, 0xe8, 0xd6, 0xf4, 0xf0, 0x0f, 0x1d, 0xea,&#10;+    0xf2, 0xf8, 0xa6, 0x0b, 0xdc, 0x09, 0x08, 0x24, 0xee, 0x24, 0xaa, 0xe4,&#10;+    0xcb, 0x15, 0xef, 0xe7, 0xe9, 0x0c, 0xcf, 0x06, 0xe3, 0x12, 0x11, 0x00,&#10;+    0x07, 0x14, 0xd7, 0xde, 0xf6, 0x0f, 0x0b, 0x04, 0xfb, 0x0d, 0xf8, 0x0d,&#10;+    0xf6, 0x1b, 0xf1, 0x21, 0xdd, 0xfc, 0xf4, 0xe9, 0xf8, 0xe8, 0xf7, 0x06,&#10;+    0x03, 0x1e, 0xce, 0xe1, 0xea, 0xf6, 0x05, 0xf9, 0x16, 0x15, 0x04, 0xe0,&#10;+    0x14, 0xf7, 0x1e, 0x1c, 0x0a, 0x27, 0xef, 0xf3, 0x0f, 0xf3, 0xee, 0x04,&#10;+    0xf8, 0xf1, 0x07, 0xe3, 0x05, 0x0b, 0x00, 0x1c, 0x15, 0x27, 0x07, 0xf7,&#10;+    0xfa, 0x0b, 0xfa, 0xfa, 0x17, 0x13, 0xe1, 0xf5, 0xfb, 0x0c, 0x21, 0x2f,&#10;+    0xd7, 0xfb, 0xf5, 0xfd, 0xd3, 0xf4, 0x07, 0x0e, 0xfd, 0x0b, 0xfc, 0xfa,&#10;+    0xf5, 0x0e, 0x02, 0xfa, 0xfa, 0x19, 0xfd, 0xfa, 0xfc, 0x13, 0x24, 0x0c,&#10;+    0xe4, 0x31, 0xf8, 0x12, 0xf4, 0x04, 0x18, 0x29, 0x27, 0x19, 0xfc, 0x08,&#10;+    0x11, 0xe3, 0x07, 0xfe, 0x26, 0x40, 0x05, 0x02, 0x04, 0x02, 0x0f, 0xee,&#10;+    0xf4, 0x27, 0xea, 0xf4, 0xf5, 0x11, 0x26, 0x0b, 0xe7, 0x05, 0xd2, 0xf6,&#10;+    0xea, 0xfa, 0x0b, 0xf9, 0xfa, 0x16, 0xba, 0x00, 0xfb, 0x0d, 0x0b, 0xf9,&#10;+    0xe6, 0xf6, 0xc5, 0xf8, 0xf6, 0x01, 0x0f, 0xed, 0xed, 0x13, 0xcd, 0x0d,&#10;+    0xda, 0x06, 0x17, 0xee, 0x07, 0x1d, 0xb8, 0xfa, 0xe2, 0xea, 0xf2, 0xee,&#10;+    0x04, 0x00, 0xdc, 0xd0, 0xfb, 0xf5, 0xec, 0xfe, 0xf1, 0x0d, 0xf0, 0xdb,&#10;+    0xf9, 0x0d, 0x03, 0x03, 0x0e, 0x0a, 0xda, 0xd6, 0x01, 0xf2, 0x06, 0x14,&#10;+    0x1c, 0x1f, 0xe8, 0xe8, 0x0e, 0xfd, 0x0c, 0xf5, 0xf3, 0x3d, 0xf3, 0x05,&#10;+    0x10, 0xfa, 0x1b, 0x18, 0x08, 0x36, 0x09, 0xf1, 0xeb, 0xf9, 0x22, 0x01,&#10;+    0xf3, 0xf7, 0xff, 0xf0, 0x0c, 0xe9, 0x01, 0x29, 0x21, 0x15, 0x03, 0xee,&#10;+    0xe9, 0x1a, 0xf7, 0x15, 0x06, 0x25, 0xfa, 0xf0, 0xe4, 0xf1, 0x1f, 0x01,&#10;+    0xdc, 0x2d, 0xce, 0xe9, 0xea, 0x0b, 0x06, 0x2c, 0x0a, 0x30, 0xe7, 0x09,&#10;+    0xf4, 0xf0, 0x10, 0x29, 0xf9, 0x3d, 0xe7, 0xdc, 0xe4, 0xf7, 0x3b, 0x27,&#10;+    0x23, 0x3a, 0x0a, 0x06, 0x0e, 0xfd, 0x2c, 0x07, 0x2b, 0x1c, 0xfa, 0x00,&#10;+    0xf9, 0x11, 0xea, 0x14, 0xeb, 0xfc, 0x18, 0x03, 0xf1, 0x16, 0x12, 0x04,&#10;+    0xcf, 0x12, 0xdd, 0xe4, 0x0e, 0xf0, 0x09, 0xe8, 0xf3, 0xfb, 0xa8, 0xf9,&#10;+    0xee, 0xfb, 0x1e, 0x1d, 0xfd, 0x05, 0xab, 0xe5, 0xff, 0x01, 0xfe, 0x04,&#10;+    0xf9, 0x02, 0xb9, 0xdc, 0xdf, 0x05, 0xf1, 0xef, 0xf1, 0x1e, 0xc7, 0xee,&#10;+    0xf7, 0x1e, 0x00, 0x00, 0xf8, 0x10, 0xec, 0xe8, 0x04, 0x0f, 0xf6, 0xff,&#10;+    0x04, 0x09, 0xe0, 0x0a, 0x0e, 0xe4, 0xf0, 0xf1, 0x16, 0x2b, 0xd3, 0xe1,&#10;+    0x0a, 0xef, 0xf9, 0xfe, 0x0b, 0x22, 0xf5, 0x01, 0x0a, 0xf8, 0x02, 0x00,&#10;+    0x17, 0x19, 0xf3, 0x05, 0x21, 0xfa, 0xee, 0xee, 0x12, 0xf2, 0xfa, 0xf5,&#10;+    0x05, 0x12, 0xee, 0xe4, 0x28, 0xfa, 0xf1, 0x03, 0x15, 0x16, 0x18, 0xfd,&#10;+    0x0f, 0x21, 0x04, 0xf4, 0xe5, 0x0c, 0x06, 0x13, 0xde, 0x36, 0xe8, 0xfb,&#10;+    0xe7, 0xfd, 0xf6, 0x12, 0x0e, 0x1d, 0xea, 0xf8, 0xd4, 0xe8, 0x19, 0x07,&#10;+    0xe5, 0x1c, 0xf7, 0x0c, 0xef, 0x05, 0x0f, 0x09, 0xdd, 0x1a, 0xea, 0xd7,&#10;+    0xf9, 0xf9, 0x12, 0x17, 0x2e, 0x10, 0x08, 0xfe, 0x14, 0xf5, 0x1d, 0xfa,&#10;+    0x06, 0x33, 0xed, 0xfe, 0xf7, 0x11, 0xf0, 0x15, 0xe2, 0x24, 0xf6, 0x0a,&#10;+    0xe2, 0xfc, 0x23, 0x12, 0xdd, 0x11, 0xfd, 0xe5, 0x08, 0xff, 0x15, 0xf6,&#10;+    0xf1, 0x1b, 0xae, 0xfe, 0xe6, 0x15, 0x2c, 0x2d, 0x15, 0x15, 0xc5, 0xf8,&#10;+    0xea, 0xe7, 0x07, 0x04, 0xfe, 0x28, 0xa1, 0xf2, 0xe1, 0xf9, 0xf8, 0xff,&#10;+    0xf4, 0x22, 0xb4, 0xdb, 0x03, 0x20, 0xe6, 0xf3, 0x0e, 0x19, 0xe3, 0x0a,&#10;+    0xfa, 0xee, 0xf3, 0xe5, 0xd8, 0xf9, 0xf1, 0xde, 0x06, 0x05, 0xf2, 0xf5,&#10;+    0xe7, 0x16, 0xd8, 0xfe, 0x07, 0xea, 0xee, 0x0e, 0xfa, 0xff, 0xdb, 0xe7,&#10;+    0x03, 0xed, 0x01, 0xfd, 0x09, 0x1a, 0xfa, 0xe6, 0x05, 0x10, 0xe9, 0x01,&#10;+    0x1f, 0x13, 0xf7, 0xf6, 0xfb, 0x13, 0xff, 0xdb, 0xed, 0xfe, 0x0a, 0x10,&#10;+    0x09, 0x29, 0xf5, 0x04, 0xf5, 0x26, 0x0d, 0x0c, 0xf9, 0x16, 0xfa, 0x02,&#10;+    0xf4, 0x2e, 0xde, 0xf5, 0xe1, 0x1d, 0xfb, 0x02, 0x0b, 0x23, 0x07, 0xea,&#10;+    0xd9, 0x0a, 0xf3, 0x0a, 0x0f, 0x1e, 0xe7, 0xf1, 0xd7, 0x0b, 0xf6, 0xff,&#10;+    0x0d, 0x24, 0xcc, 0x0a, 0xee, 0xda, 0x14, 0x12, 0x11, 0x29, 0xf4, 0x1a,&#10;+    0xef, 0x0b, 0xfa, 0xec, 0x0c, 0x1b, 0xf4, 0xff, 0xf5, 0xef, 0x0f, 0x10,&#10;+    0xd4, 0x04, 0xf9, 0xf8, 0xec, 0xf9, 0x21, 0x05, 0xd3, 0x27, 0xf3, 0x17,&#10;+    0xff, 0xf6, 0x15, 0xf9, 0xed, 0x0a, 0xac, 0x02, 0xfd, 0xfb, 0x04, 0x29,&#10;+    0x06, 0x03, 0xb8, 0xe6, 0xd5, 0x17, 0x09, 0x1b, 0xf6, 0x1b, 0xab, 0xdc,&#10;+    0xdf, 0xfd, 0x06, 0x09, 0x09, 0x37, 0xbb, 0xed, 0x19, 0xd7, 0xe2, 0xdd,&#10;+    0x05, 0x01, 0xec, 0xfb, 0xe4, 0x0e, 0xeb, 0xf0, 0x03, 0x17, 0x04, 0xeb,&#10;+    0x09, 0xee, 0xeb, 0xe7, 0x0c, 0x16, 0xcb, 0x0e, 0x17, 0xd8, 0xe1, 0xf8,&#10;+    0x2b, 0x19, 0xde, 0xeb, 0x10, 0xf2, 0xff, 0xf8, 0xee, 0x0e, 0xe7, 0xf0,&#10;+    0x15, 0x08, 0xf8, 0xdf, 0x06, 0x0d, 0xf9, 0x14, 0xfa, 0x0b, 0x04, 0xfd,&#10;+    0x15, 0x23, 0x20, 0xff, 0xfd, 0x1d, 0x0c, 0xf1, 0xfe, 0x15, 0x0a, 0x02,&#10;+    0xed, 0xfe, 0xfb, 0x04, 0xfb, 0x1e, 0xdd, 0x05, 0xe0, 0x16, 0xf9, 0xf6,&#10;+    0xfd, 0x32, 0xdc, 0xf2, 0xd3, 0x08, 0xf4, 0xec, 0x17, 0x25, 0xe2, 0xf0,&#10;+    0xee, 0xf1, 0x0d, 0xfe, 0x13, 0x2d, 0x01, 0x11, 0xd4, 0xe4, 0x07, 0xfb,&#10;+    0x32, 0x11, 0x14, 0x07, 0xd7, 0x02, 0x10, 0xeb, 0x2b, 0x1d, 0x01, 0xfc,&#10;+    0xf3, 0xf0, 0x13, 0x1a, 0xdb, 0x20, 0x00, 0xf0, 0xf0, 0x05, 0x16, 0x03,&#10;+    0xd4, 0xe3, 0xc2, 0xf0, 0x06, 0x02, 0x1e, 0x0a, 0xec, 0x1f, 0xab, 0xea,&#10;+    0xfa, 0xe3, 0x20, 0x22, 0x03, 0x1b, 0xb3, 0x0e, 0xe3, 0xf3, 0x1d, 0x27,&#10;+    0xe3, 0x10, 0xa7, 0xda, 0xf3, 0x00, 0x0a, 0x0a, 0x04, 0xfb, 0xb2, 0x0f,&#10;+    0x0c, 0xf5, 0x07, 0xff, 0x13, 0x1e, 0xdb, 0xf6, 0xf9, 0xef, 0xe8, 0xe7,&#10;+    0xfb, 0x18, 0xeb, 0xec, 0x09, 0xda, 0xf1, 0xf0, 0x0b, 0x04, 0xe1, 0xfa,&#10;+    0x1c, 0x25, 0xee, 0x01, 0x0b, 0x29, 0xd7, 0x0c, 0x04, 0x0b, 0xef, 0xfd,&#10;+    0x1c, 0xfc, 0xf1, 0xfb, 0x0b, 0x0f, 0xdf, 0xed, 0x17, 0x38, 0x0c, 0xd7,&#10;+    0xff, 0xfd, 0x01, 0xfc, 0xfb, 0xfb, 0x18, 0x1a, 0x18, 0xe3, 0xf9, 0xf4,&#10;+    0xfa, 0x20, 0x06, 0x09, 0x11, 0x08, 0x1d, 0xf8, 0xfa, 0x1d, 0xf5, 0x1c,&#10;+    0xf5, 0xfe, 0x03, 0x07, 0xe4, 0x33, 0xc8, 0x0c, 0xe1, 0x13, 0xff, 0xe5,&#10;+    0x10, 0x2c, 0xd3, 0xf0, 0xed, 0x04, 0x07, 0x01, 0xf1, 0x16, 0xe0, 0x13,&#10;+    0xfa, 0x11, 0x07, 0xfa, 0x19, 0x16, 0x01, 0x00, 0x07, 0x26, 0x00, 0xec,&#10;+    0x1d, 0x23, 0x05, 0xf4, 0x07, 0x17, 0x2c, 0x1d, 0xee, 0xf0, 0x0c, 0x09,&#10;+    0xe3, 0x1a, 0x24, 0x0b, 0xf3, 0x1e, 0xce, 0xfe, 0xfe, 0x12, 0x21, 0x1a,&#10;+    0xf6, 0x23, 0xc3, 0x03, 0xf4, 0x10, 0x1a, 0x2a, 0xf4, 0x08, 0xbf, 0xff,&#10;+    0x04, 0xf4, 0x0b, 0x1d, 0x1a, 0xf8, 0xcc, 0x00, 0xf7, 0x13, 0xf4, 0xfd,&#10;+    0xf4, 0x19, 0xbd, 0xef, 0x0c, 0x0d, 0x02, 0xfc, 0x12, 0x13, 0xe9, 0xe7,&#10;+    0xf5, 0xfa, 0xfa, 0xf6, 0x1a, 0x2e, 0xce, 0xd4, 0x01, 0x12, 0xfd, 0xfc,&#10;+    0x26, 0x10, 0xcc, 0xe7, 0xee, 0x13, 0xee, 0xff, 0xef, 0xea, 0x00, 0x0e,&#10;+    0x1a, 0x17, 0x04, 0x0c, 0x04, 0x0c, 0xe6, 0xf3, 0xf6, 0xdb, 0xdd, 0x04,&#10;+    0xf4, 0x22, 0x11, 0x16, 0xf3, 0x07, 0xec, 0xf8, 0xf2, 0x07, 0x03, 0x02,&#10;+    0xf5, 0x0a, 0xf6, 0x02, 0x1d, 0x1b, 0x11, 0x06, 0xf8, 0x06, 0x02, 0xea,&#10;+    0xf3, 0x1d, 0xce, 0x00, 0xed, 0xf9, 0xef, 0xf6, 0xec, 0x22, 0xc7, 0xf0,&#10;+    0xed, 0xdb, 0xe0, 0x02, 0x11, 0x07, 0xe8, 0xf0, 0xd1, 0xed, 0xff, 0xfd,&#10;+    0x0c, 0x2e, 0xd4, 0xed, 0xec, 0x0e, 0xf1, 0x07, 0x01, 0x0e, 0x0e, 0xfe,&#10;+    0xda, 0x0b, 0x0a, 0x0a, 0x1f, 0x2e, 0x13, 0x07, 0x00, 0x07, 0x14, 0x21,&#10;+    0xe9, 0xfc, 0xf0, 0x1e, 0xd7, 0xea, 0x34, 0x07, 0xc6, 0x0c, 0xd4, 0xec,&#10;+    0xfd, 0x06, 0x24, 0x0a, 0xf3, 0x15, 0xaf, 0xff, 0xe9, 0xf1, 0x0d, 0x3e,&#10;+    0xe9, 0x18, 0xba, 0x13, 0xed, 0xd7, 0x0b, 0x31, 0x05, 0x0e, 0xaf, 0x13,&#10;+    0xd6, 0x0e, 0x10, 0x02, 0x02, 0x14, 0xcb, 0xd5, 0xf9, 0x0c, 0xf9, 0x0e,&#10;+    0x1f, 0x24, 0xd5, 0xeb, 0xff, 0xf1, 0xf5, 0x0c, 0x08, 0x07, 0xf4, 0xd7,&#10;+    0x06, 0x10, 0xe8, 0xef, 0xfc, 0x2f, 0xee, 0xf1, 0x18, 0xf8, 0xf4, 0x02,&#10;+    0x11, 0x21, 0xd3, 0x12, 0x14, 0xe4, 0xf4, 0x02, 0x05, 0x24, 0xca, 0xf2,&#10;+    0xf3, 0xeb, 0xe7, 0xf8, 0x16, 0x1a, 0xeb, 0x0d, 0x05, 0x16, 0xf1, 0xec,&#10;+    0x11, 0x1c, 0x09, 0x1e, 0xe0, 0xe6, 0xfa, 0x0e, 0x0d, 0x2a, 0xea, 0x2e,&#10;+    0xed, 0xf9, 0xf7, 0x16, 0x09, 0x05, 0xdd, 0xd6, 0x02, 0xeb, 0xf5, 0xf3,&#10;+    0xe4, 0x3b, 0xed, 0x04, 0xe0, 0x0e, 0xfd, 0x09, 0xfd, 0x35, 0xdc, 0x18,&#10;+    0xf3, 0x04, 0xfa, 0x05, 0x15, 0x34, 0xe5, 0xe1, 0xe4, 0xf4, 0xe0, 0xf9,&#10;+    0x08, 0x32, 0x04, 0x08, 0xf4, 0x0f, 0xff, 0x08, 0x09, 0x2f, 0x06, 0x02,&#10;+    0xfd, 0x05, 0x0c, 0x24, 0xe3, 0x1e, 0xf5, 0x0c, 0xdd, 0xf8, 0x18, 0x20,&#10;+    0xd8, 0x14, 0xef, 0xf4, 0x17, 0x08, 0x25, 0x14, 0x04, 0x06, 0xb0, 0xf5,&#10;+    0xf5, 0x09, 0x0f, 0x3e, 0xff, 0x28, 0xb3, 0xf5, 0x19, 0xd8, 0x14, 0x21,&#10;+    0xd9, 0xf7, 0xb7, 0xe5, 0xfe, 0xe7, 0x07, 0x1e, 0x04, 0x15, 0xc5, 0xf9,&#10;+    0x14, 0x20, 0xeb, 0x01, 0x01, 0x18, 0xce, 0x00, 0xe6, 0xe2, 0xf7, 0xfb,&#10;+    0xf3, 0x0d, 0xd3, 0xf3, 0x04, 0xf8, 0xf0, 0x03, 0xf1, 0x25, 0xb5, 0xef,&#10;+    0x05, 0xe0, 0x01, 0xf6, 0x04, 0x16, 0xd1, 0x01, 0x0a, 0x21, 0x01, 0x05,&#10;+    0x0e, 0x01, 0xf0, 0x0a, 0xf3, 0x00, 0x03, 0xf8, 0xfa, 0x03, 0x0b, 0xde,&#10;+    0xfe, 0xff, 0xfb, 0xea, 0x09, 0x02, 0xf5, 0xe8, 0xe7, 0x08, 0x00, 0xf5,&#10;+    0xf8, 0x0f, 0x13, 0xfa, 0xeb, 0xe8, 0xfb, 0x1f, 0x08, 0x16, 0xe6, 0xfa,&#10;+    0xe1, 0x00, 0x03, 0xdd, 0xf1, 0x26, 0xe5, 0x1d, 0xd9, 0xff, 0xf2, 0xf8,&#10;+    0xff, 0x33, 0xea, 0xe5, 0x03, 0x0c, 0x07, 0xf9, 0xf8, 0x0f, 0xe1, 0x1e,&#10;+    0xdd, 0x0f, 0x00, 0xf1, 0x06, 0x21, 0x09, 0x05, 0xf3, 0xec, 0xe6, 0x04,&#10;+    0x07, 0x32, 0xf1, 0xf9, 0xf2, 0x01, 0x18, 0x1f, 0xd2, 0xe2, 0x0a, 0xf4,&#10;+    0xca, 0xfc, 0x28, 0x16, 0xc2, 0x10, 0xf2, 0xfc, 0x08, 0xe9, 0x2a, 0x0f,&#10;+    0xfa, 0xf5, 0xa9, 0x07, 0xec, 0xe9, 0x19, 0x43, 0x0b, 0x1c, 0xa6, 0xe9,&#10;+    0xf4, 0x16, 0x0d, 0x2b, 0xfc, 0x11, 0x9a, 0xe1, 0xf1, 0x1c, 0xf5, 0x0f,&#10;+    0xe4, 0x18, 0xc0, 0xd9, 0x14, 0x26, 0xe6, 0xf8, 0x0a, 0x17, 0xec, 0xfb,&#10;+    0xe1, 0x22, 0xdf, 0xf2, 0xfe, 0x1e, 0xd4, 0xeb, 0xd7, 0x0e, 0x08, 0xf6,&#10;+    0xef, 0xfc, 0xe6, 0xd4, 0xf7, 0x0b, 0xfb, 0xf5, 0x01, 0x25, 0xd7, 0xfb,&#10;+    0x0d, 0xfe, 0xff, 0xf3, 0x1d, 0x32, 0xfe, 0xee, 0x12, 0xf2, 0x0c, 0xec,&#10;+    0x02, 0x10, 0xef, 0x01, 0xf2, 0x0b, 0xf3, 0xf7, 0xfa, 0x25, 0xfb, 0x0d,&#10;+    0x11, 0x15, 0x04, 0xfc, 0x0c, 0x21, 0x12, 0x29, 0x00, 0xfa, 0xf6, 0xf5,&#10;+    0x06, 0x22, 0xea, 0xe2, 0xee, 0x00, 0xfd, 0xf0, 0x0b, 0x1d, 0xd3, 0xe4,&#10;+    0xe4, 0x0a, 0xfc, 0xe8, 0xea, 0x2c, 0xed, 0xed, 0xef, 0xe8, 0xf2, 0x05,&#10;+    0xfd, 0x15, 0xd8, 0xda, 0xca, 0xee, 0xfa, 0x00, 0xfe, 0x0e, 0xf2, 0xf0,&#10;+    0x0e, 0xf5, 0x04, 0x03, 0x1d, 0x2b, 0xee, 0x05, 0x0f, 0x10, 0x13, 0x35,&#10;+    0xe2, 0x04, 0x10, 0xdf, 0xcf, 0xeb, 0x40, 0x26, 0xe4, 0x03, 0xf3, 0xf9,&#10;+    0xf5, 0x14, 0x24, 0x2a, 0xdf, 0xfe, 0xab, 0xe5, 0xfe, 0x1c, 0x27, 0x35,&#10;+    0xdb, 0xff, 0xac, 0x01, 0xf6, 0xfc, 0x19, 0x1a, 0x11, 0x1f, 0xa8, 0xf5,&#10;+    0x02, 0x0f, 0x1a, 0x1f, 0xf7, 0xf2, 0xa2, 0x00, 0x15, 0x22, 0xe4, 0x13,&#10;+    0x00, 0x09, 0xd9, 0xd5, 0x02, 0x19, 0xfd, 0xf8, 0xe7, 0xff, 0xfb, 0xe0,&#10;+    0xef, 0xf7, 0xee, 0xf3, 0xf3, 0x19, 0xb0, 0xdf, 0x00, 0x0f, 0x08, 0xf3,&#10;+    0x15, 0x17, 0xec, 0x0f, 0x11, 0x14, 0x02, 0x08, 0x10, 0x17, 0xe6, 0x08,&#10;+    0xf7, 0x00, 0xed, 0xf7, 0x29, 0x07, 0x10, 0x05, 0x05, 0xe7, 0xed, 0xf4,&#10;+    0xf9, 0x15, 0xf9, 0xf0, 0x08, 0x00, 0x03, 0x09, 0x21, 0x28, 0xf6, 0x0e,&#10;+    0xfb, 0xf3, 0x03, 0xf7, 0x0f, 0x0c, 0xf0, 0xf5, 0xe3, 0xd8, 0xf8, 0xf2,&#10;+    0x09, 0x1c, 0xe7, 0xfb, 0xe4, 0xf6, 0xfa, 0xf8, 0xf1, 0x42, 0xf6, 0xda,&#10;+    0xdd, 0xd7, 0xfa, 0xff, 0x2f, 0x2c, 0xda, 0x0a, 0xde, 0xec, 0xf1, 0x14,&#10;+    0xfb, 0x1d, 0xeb, 0xee, 0xf2, 0xeb, 0xf3, 0xed, 0x0e, 0x35, 0xf0, 0x06,&#10;+    0x19, 0x04, 0x2f, 0x23, 0xe2, 0x07, 0x13, 0x0f, 0xe9, 0xf0, 0x22, 0x2e,&#10;+    0xd9, 0x1a, 0xcb, 0xed, 0xfd, 0x04, 0x27, 0x1e, 0xf6, 0x07, 0x96, 0xd6,&#10;+    0xd8, 0x11, 0x18, 0x56, 0xd2, 0xfb, 0x92, 0xfc, 0x0b, 0x0a, 0x17, 0x2c,&#10;+    0xe5, 0x04, 0xa2, 0xf8, 0xe2, 0x04, 0x1a, 0x0d, 0xeb, 0x11, 0xa2, 0xe5,&#10;+    0xe5, 0xf8, 0x02, 0xf7, 0x17, 0x03, 0xca, 0xe9, 0x0c, 0x1f, 0xfe, 0xf5,&#10;+    0x18, 0x12, 0xdd, 0x08, 0x15, 0xff, 0xfc, 0xf6, 0xe1, 0x1d, 0xe2, 0xe1,&#10;+    0xfe, 0xfc, 0x03, 0xff, 0xf2, 0x23, 0xd2, 0x01, 0x13, 0xdd, 0xf3, 0xf4,&#10;+    0xf2, 0x07, 0xef, 0x03, 0x15, 0x21, 0xd8, 0xf8, 0x09, 0xf3, 0xe8, 0xea,&#10;+    0xe8, 0xf2, 0x08, 0xf0, 0x04, 0x1a, 0xf2, 0x19, 0xfb, 0x1b, 0x15, 0xfc,&#10;+    0x1d, 0x30, 0xe5, 0x1e, 0x09, 0xe8, 0xe9, 0x09, 0xf7, 0x2a, 0xe1, 0x0e,&#10;+    0x00, 0x21, 0xf3, 0xff, 0xfb, 0x01, 0xdf, 0xf2, 0xfe, 0xf4, 0xfc, 0xf0,&#10;+    0x0b, 0x0b, 0xdd, 0xe4, 0xd2, 0x14, 0xf7, 0xfe, 0x0b, 0x39, 0x01, 0xe6,&#10;+    0xe4, 0x27, 0xfa, 0xe4, 0x04, 0x2c, 0xe2, 0x04, 0xf5, 0x07, 0xf2, 0x03,&#10;+    0xf0, 0x10, 0xf5, 0xf6, 0xfc, 0x16, 0x22, 0x1b, 0xf8, 0x11, 0xe4, 0x09,&#10;+    0xf6, 0xf0, 0x41, 0x1e, 0xcf, 0x04, 0xea, 0xee, 0x0e, 0xf6, 0x1b, 0x2f,&#10;+    0xc7, 0xf1, 0xba, 0xef, 0x0f, 0x16, 0x1e, 0x39, 0x05, 0x1e, 0x90, 0xe6,&#10;+    0x0d, 0xfa, 0x22, 0x3f, 0xe3, 0x23, 0xa5, 0xe3, 0xe9, 0x0f, 0x05, 0x27,&#10;+    0x02, 0x11, 0x99, 0x05, 0xfa, 0x05, 0x03, 0x01, 0xff, 0x26, 0xd3, 0xf7,&#10;+    0xf7, 0xf9, 0x05, 0xf4, 0xef, 0x23, 0xd2, 0xdd, 0x05, 0x08, 0xfa, 0xff,&#10;+    0x03, 0x04, 0xbd, 0xd7, 0x14, 0x06, 0xef, 0x06, 0xe5, 0x05, 0xea, 0xea,&#10;+    0x02, 0xfd, 0x0d, 0x00, 0x08, 0xff, 0xe7, 0xfb, 0xfe, 0x13, 0xfe, 0xec,&#10;+    0xf9, 0x02, 0xf3, 0xff, 0xff, 0x08, 0x04, 0xed, 0x19, 0x1d, 0xfa, 0x0a,&#10;+    0x0d, 0xf2, 0x0f, 0xec, 0x25, 0x1c, 0xec, 0x0b, 0x01, 0xff, 0x01, 0xf6,&#10;+    0x08, 0x09, 0xe8, 0xe2, 0xec, 0x23, 0xe5, 0xe9, 0xf0, 0x2e, 0xbd, 0xe1,&#10;+    0xef, 0x14, 0xe9, 0xf6, 0xf5, 0x1d, 0xdc, 0xe3, 0xd7, 0xfc, 0xf9, 0xf2,&#10;+    0xfe, 0x24, 0xf2, 0x05, 0xd5, 0xed, 0xe9, 0xf9, 0xfa, 0x2d, 0xf0, 0xfe,&#10;+    0xee, 0xf2, 0xe8, 0xf7, 0x06, 0x14, 0x01, 0x10, 0x06, 0xf3, 0x0e, 0x0e,&#10;+    0xc2, 0x1d, 0xf2, 0x1c, 0xed, 0xe3, 0x53, 0x21, 0xb8, 0x0c, 0xde, 0x03,&#10;+    0x15, 0xeb, 0x46, 0x39, 0xdf, 0xf6, 0xa3, 0xee, 0xf6, 0xe0, 0x33, 0x50,&#10;+    0xdd, 0x27, 0x9f, 0x07, 0x13, 0xe2, 0x1f, 0x35, 0xed, 0x1f, 0xb7, 0x07,&#10;+    0x11, 0xed, 0x17, 0x28, 0xf4, 0x20, 0xc1, 0xec, 0xef, 0x16, 0x02, 0xfa,&#10;+    0xe0, 0x1b, 0xf7, 0xdb, 0xfd, 0x0a, 0xe7, 0xfb, 0xe7, 0x25, 0xe2, 0xe7,&#10;+    0xf8, 0xf0, 0xee, 0xe9, 0x02, 0x06, 0xc9, 0xe4, 0x14, 0xe3, 0xe2, 0xf7,&#10;+    0xf8, 0xfd, 0xdd, 0xe2, 0x08, 0x0a, 0xe4, 0x05, 0xf5, 0x16, 0xe7, 0x01,&#10;+    0x00, 0x1c, 0xe7, 0xf0, 0xf6, 0x19, 0xfe, 0x0c, 0xf2, 0x06, 0x03, 0xe8,&#10;+    0x0b, 0xfe, 0xe3, 0x19, 0x08, 0x1a, 0x10, 0xfd, 0x00, 0x21, 0xf0, 0xeb,&#10;+    0x18, 0x02, 0xf3, 0x04, 0xf0, 0x18, 0xdb, 0x05, 0x01, 0xde, 0xed, 0xe9,&#10;+    0x23, 0x15, 0xaf, 0xe6, 0xf1, 0x0a, 0xe6, 0xea, 0x01, 0x18, 0xd8, 0xfd,&#10;+    0xf1, 0xe6, 0xec, 0xf5, 0x0e, 0x1e, 0xcc, 0xfc, 0xe7, 0x00, 0xe9, 0x11,&#10;+    0x00, 0x30, 0xf9, 0x14, 0xf4, 0x19, 0xdd, 0xf7, 0xf7, 0x2f, 0xf4, 0xf2,&#10;+    0xff, 0x27, 0x15, 0x1c, 0xbc, 0x2f, 0xe9, 0x14, 0xf5, 0xe8, 0x44, 0x30,&#10;+    0xe8, 0x1d, 0xe4, 0x18, 0x11, 0x00, 0x0c, 0x2b, 0xf3, 0x29, 0x96, 0xe0,&#10;+    0x06, 0xee, 0x3e, 0x55, 0xdc, 0x13, 0x98, 0xdf, 0xf0, 0xfe, 0x17, 0x33,&#10;+    0xe8, 0x09, 0xa3, 0x07, 0xef, 0x0e, 0x1d, 0x37, 0xdd, 0xfe, 0xb5, 0x00,&#10;+    0xf7, 0xe0, 0xea, 0xfd, 0xfd, 0x19, 0xbc, 0xfd, 0x15, 0xfe, 0x01, 0xf3,&#10;+    0xd5, 0x20, 0xbf, 0xe3, 0x15, 0x0e, 0xf0, 0xf6, 0xf2, 0x14, 0xcc, 0xf0,&#10;+    0xf7, 0x04, 0xf2, 0xff, 0x0b, 0x02, 0xd2, 0xd8, 0xfa, 0xfc, 0xe5, 0x02,&#10;+    0x00, 0xfb, 0xf0, 0xdc, 0x1e, 0x10, 0x02, 0x01, 0x00, 0x18, 0xe9, 0xdb,&#10;+    0x1e, 0xf6, 0xfc, 0x03, 0xef, 0x0a, 0x00, 0x16, 0x00, 0x0f, 0xf4, 0x16,&#10;+    0xfa, 0x0b, 0xe2, 0xfa, 0xe0, 0x07, 0xfb, 0x02, 0x21, 0x0e, 0xdd, 0x0b,&#10;+    0xea, 0xf0, 0xeb, 0xfb, 0x19, 0x09, 0xd4, 0xf2, 0xef, 0x0b, 0x00, 0xeb,&#10;+    0x1a, 0x2f, 0xea, 0x06, 0x03, 0xf6, 0xf8, 0xfb, 0xfe, 0x1d, 0xea, 0xdd,&#10;+    0xed, 0xfd, 0xfb, 0xe7, 0xfe, 0x18, 0xf4, 0xfc, 0x0b, 0xf6, 0xfc, 0x0b,&#10;+    0xfb, 0x28, 0x07, 0xff, 0x07, 0x1e, 0x03, 0x21, 0xcf, 0x22, 0x05, 0xe6,&#10;+    0xea, 0xe7, 0x43, 0x2e, 0xe7, 0x14, 0xfb, 0x0a, 0x1e, 0xfe, 0x2c, 0x24,&#10;+    0xd5, 0xfd, 0x9e, 0xd1, 0xf2, 0x1c, 0x32, 0x51, 0x01, 0xf3, 0xac, 0xe1,&#10;+    0xf4, 0xe5, 0x1c, 0x37, 0xf1, 0x0f, 0xa7, 0xdb, 0x00, 0xf6, 0x0f, 0x18,&#10;+    0xe1, 0x10, 0xc9, 0xc5, 0xe8, 0xeb, 0xf2, 0xfd, 0xf6, 0x02, 0xc2, 0xff,&#10;+    0x00, 0x19, 0x03, 0x0f, 0x02, 0x22, 0xd4, 0xe7, 0x07, 0x0f, 0xe5, 0x1a,&#10;+    0x09, 0x0b, 0xdc, 0xd2, 0x00, 0x05, 0xee, 0xf8, 0xdc, 0x14, 0xd0, 0x0a,&#10;+    0x0a, 0xfa, 0xeb, 0x04, 0xf3, 0x06, 0xde, 0x05, 0xfb, 0xfd, 0xe3, 0xec,&#10;+    0xfd, 0x14, 0xd7, 0x11, 0x0e, 0xe6, 0x06, 0xec, 0xde, 0x22, 0xd7, 0x00,&#10;+    0x03, 0xf5, 0xf5, 0x0d, 0x01, 0x05, 0xea, 0x0b, 0x16, 0x04, 0xff, 0x13,&#10;+    0xf3, 0x12, 0xd2, 0xdf, 0x0b, 0xe4, 0x06, 0xf6, 0x08, 0x2d, 0xd3, 0xd6,&#10;+    0xe7, 0x0a, 0xec, 0xff, 0xfe, 0x01, 0xdf, 0xf4, 0xdf, 0x1c, 0xfe, 0xf9,&#10;+    0xf7, 0x13, 0xca, 0xff, 0x03, 0x06, 0xe9, 0xf7, 0x06, 0x08, 0xd7, 0xf3,&#10;+    0xed, 0x08, 0xe3, 0xfd, 0x0c, 0x11, 0x15, 0xfb, 0x15, 0x08, 0x28, 0x40,&#10;+    0xe7, 0x0d, 0x08, 0xec, 0xe8, 0x16, 0x67, 0x46, 0xc8, 0x16, 0xf1, 0x02,&#10;+    0x24, 0x00, 0x3a, 0x43, 0xd6, 0x12, 0xae, 0xe7, 0xf4, 0xf8, 0x3a, 0x65,&#10;+    0xe4, 0x0c, 0xb2, 0xef, 0x1f, 0xe8, 0x29, 0x59, 0xf8, 0x11, 0xc4, 0xe1,&#10;+    0xfe, 0xfa, 0x27, 0x43, 0xc9, 0x1e, 0xbb, 0xfb, 0xf3, 0x13, 0x15, 0x0d,&#10;+    0xf1, 0x13, 0xcd, 0xf0, 0x07, 0x19, 0x07, 0x00, 0xd8, 0xeb, 0xbf, 0xf0,&#10;+    0xfc, 0xf6, 0xef, 0x16, 0x01, 0x02, 0xc1, 0xdf, 0xfd, 0xe9, 0x06, 0x06,&#10;+    0xf1, 0x08, 0xd7, 0xcc, 0xfb, 0x0e, 0xfc, 0x14, 0xf2, 0x1a, 0xe2, 0x0d,&#10;+    0xeb, 0x09, 0x07, 0x10, 0xe6, 0x13, 0xeb, 0xf5, 0x15, 0x14, 0xeb, 0xfe,&#10;+    0xf9, 0x17, 0xd2, 0xe3, 0x1e, 0xf5, 0x04, 0x0a, 0xf1, 0x0e, 0xde, 0xe7,&#10;+    0x01, 0x20, 0x0c, 0xfc, 0xdc, 0xf9, 0xe5, 0xe9, 0xff, 0x1d, 0x0a, 0xfe,&#10;+    0xec, 0x25, 0xaf, 0xd2, 0x01, 0x16, 0xfc, 0x17, 0xe8, 0x1e, 0xcd, 0xd9,&#10;+    0xe2, 0xf1, 0xeb, 0x08, 0xff, 0x33, 0xe5, 0xfb, 0xeb, 0x04, 0xfe, 0xf7,&#10;+    0xfd, 0x1f, 0xee, 0xff, 0xed, 0xf8, 0xe0, 0xff, 0xfd, 0x2b, 0x0a, 0xf5,&#10;+    0x15, 0x1d, 0xf3, 0x3f, 0x16, 0xf6, 0xf2, 0xee, 0xf4, 0xef, 0xf0, 0x56,&#10;+    0x0a, 0x1a, 0xbc, 0xfc, 0x2f, 0xfb, 0xf0, 0x56, 0x1e, 0x0e, 0xc6, 0xe8,&#10;+    0x06, 0x0b, 0x11, 0x62, 0x3e, 0xf9, 0xb8, 0xc9, 0xed, 0xeb, 0x02, 0x63,&#10;+    0x2c, 0xfd, 0xc5, 0xe9, 0x00, 0x17, 0x0f, 0x37, 0xfe, 0x20, 0xcc, 0xe0,&#10;+    0xe0, 0x0e, 0xe6, 0x20, 0x0a, 0xfd, 0xdf, 0xee, 0x0b, 0x02, 0xee, 0x1f,&#10;+    0xfb, 0x06, 0xd2, 0xed, 0xfe, 0xeb, 0xfc, 0x12, 0xfd, 0x14, 0x00, 0xd8,&#10;+    0x08, 0xf6, 0xec, 0x17, 0xf9, 0x10, 0x00, 0xd9, 0x18, 0xf1, 0xee, 0x0f,&#10;+    0xf4, 0x03, 0xee, 0xeb, 0xf0, 0xef, 0xf2, 0x06, 0x04, 0x00, 0xf4, 0x0f,&#10;+    0x09, 0x06, 0xf7, 0x0b, 0xfd, 0x01, 0x03, 0x03, 0xf4, 0xf6, 0xdd, 0x14,&#10;+    0x1c, 0xef, 0xf1, 0xdd, 0xf7, 0x13, 0xd9, 0x15, 0xef, 0x02, 0xd2, 0xe7,&#10;+    0x05, 0x05, 0xe2, 0x09, 0xf2, 0x11, 0xf5, 0xba, 0xf0, 0x04, 0xe0, 0x01,&#10;+    0x06, 0x10, 0xe6, 0xef, 0xfc, 0x12, 0xf9, 0xf4, 0x1b, 0x2f, 0xe3, 0x0f,&#10;+    0xd7, 0xf6, 0x0b, 0x11, 0xf7, 0x0c, 0x00, 0x06, 0x18, 0xef, 0x06, 0x03,&#10;+    0x0a, 0x09, 0xf6, 0x1a, 0x0d, 0xed, 0xfe, 0x2c, 0x43, 0xf4, 0xe5, 0xde,&#10;+    0xf5, 0x02, 0x25, 0x5a, 0x49, 0xd4, 0xe6, 0x24, 0x1e, 0xf7, 0x0e, 0x5c,&#10;+    0x5d, 0xf0, 0xf9, 0xe4, 0x1c, 0xeb, 0x28, 0x7f, 0x5b, 0xec, 0xfa, 0xdb,&#10;+    0x0c, 0xf5, 0x20, 0x49, 0x51, 0xe1, 0xed, 0xe6, 0x0e, 0x26, 0x28, 0x33,&#10;+    0x35, 0x05, 0xe1, 0xe4, 0x1f, 0xfc, 0xf9, 0x39, 0x18, 0x04, 0xed, 0xed,&#10;+    0x01, 0xe7, 0xe6, 0x08, 0x09, 0x03, 0xe7, 0xf9, 0x0e, 0x06, 0xec, 0x08,&#10;+    0x12, 0x1a, 0xda, 0xef, 0xdf, 0xf9, 0xe2, 0x1e, 0x1c, 0x00, 0x12, 0xd7,&#10;+    0x01, 0xf7, 0x21, 0x17, 0x13, 0x19, 0xde, 0xe0, 0xec, 0x16, 0x01, 0x1b,&#10;+    0x06, 0x0c, 0xf0, 0xe8, 0x18, 0x03, 0x06, 0x0e, 0x09, 0xfa, 0x03, 0xf3,&#10;+    0xdd, 0x01, 0xfb, 0x0a, 0x2a, 0xf4, 0xf6, 0xda, 0xe9, 0xfe, 0xe9, 0x12,&#10;+    0x19, 0xe9, 0x05, 0xdf, 0x00, 0xeb, 0xf2, 0x10, 0x0c, 0xe1, 0xcd, 0xcb,&#10;+    0xf2, 0x1f, 0xd9, 0x0c, 0xfa, 0xfb, 0xe8, 0xde, 0x00, 0xfc, 0xe5, 0x00,&#10;+    0x11, 0x02, 0xe6, 0x17, 0x14, 0x00, 0xf2, 0xfd, 0x00, 0xe1, 0x10, 0x24,&#10;+    0x12, 0xec, 0xed, 0x1e, 0x09, 0x18, 0x03, 0x0c, 0x04, 0xf4, 0x15, 0x0f,&#10;+    0x10, 0x18, 0xd6, 0x29, 0x10, 0x04, 0x1c, 0xef, 0x0f, 0x0c, 0xc7, 0x04,&#10;+    0xfe, 0xeb, 0xff, 0xf5, 0xe3, 0x15, 0xfe, 0xcb, 0x10, 0xff, 0x12, 0xfb,&#10;+    0xe4, 0xeb, 0xf9, 0x00, 0x02, 0xf1, 0x14, 0x13, 0x01, 0x02, 0xf9, 0x01,&#10;+    0x06, 0x0c, 0xf5, 0x0a, 0x1e, 0x01, 0x19, 0x0e, 0x05, 0xf5, 0x0a, 0xff,&#10;+    0xff, 0xf2, 0xfb, 0xdb, 0xf8, 0x06, 0x17, 0xf2, 0xf7, 0x0d, 0x0e, 0xf4,&#10;+    0xfa, 0xf7, 0x14, 0xdb, 0xe0, 0xfd, 0x08, 0x16, 0xf7, 0x16, 0xfc, 0x09,&#10;+    0x27, 0x07, 0x09, 0xfb, 0x0a, 0xfc, 0x0c, 0xe4, 0xdb, 0xee, 0xff, 0x10,&#10;+    0xf3, 0x09, 0xfa, 0xf4, 0x23, 0xf3, 0xf4, 0x19, 0xff, 0xfa, 0xff, 0x19,&#10;+    0x0f, 0x11, 0xed, 0xec, 0xf8, 0x0f, 0x10, 0xf3, 0xff, 0x0b, 0xf7, 0x06,&#10;+    0x0b, 0x0e, 0x07, 0xe4, 0x18, 0x0a, 0x08, 0x0e, 0x02, 0x0a, 0x05, 0x19,&#10;+    0x02, 0xf3, 0xfe, 0xfe, 0x0b, 0x0f, 0xfc, 0xfa, 0x05, 0xf9, 0xe2, 0xf9,&#10;+    0x1b, 0xf7, 0x0f, 0x07, 0xfc, 0x12, 0xfe, 0x01, 0xfd, 0xf0, 0x04, 0xf4,&#10;+    0xfd, 0x07, 0xf2, 0x04, 0x04, 0x07, 0xef, 0x0c, 0xed, 0x0e, 0xf6, 0xef,&#10;+    0x08, 0x07, 0x04, 0xe9, 0xf3, 0x20, 0xda, 0x15, 0xf8, 0xff, 0xec, 0xe0,&#10;+    0xf6, 0xff, 0xe9, 0x08, 0x01, 0x10, 0xf0, 0xfc, 0xe9, 0x08, 0xe8, 0xf5,&#10;+    0xf8, 0xe5, 0x17, 0xe6, 0x03, 0xfc, 0x09, 0xf5, 0xdd, 0xf2, 0xff, 0x05,&#10;+    0xf6, 0xf8, 0xf5, 0x07, 0xfc, 0xf1, 0x04, 0xf3, 0x13, 0xe1, 0x0f, 0xf2,&#10;+    0x0a, 0xf9, 0xfd, 0x1c, 0xe0, 0x11, 0x1b, 0xe6, 0xef, 0x05, 0x05, 0x0c,&#10;+    0x23, 0x10, 0x09, 0xfe, 0xf7, 0x1a, 0xf1, 0xfc, 0x11, 0x1d, 0xff, 0x03,&#10;+    0x03, 0xe6, 0x07, 0x11, 0x0c, 0x0d, 0x16, 0x05, 0x05, 0x25, 0xf3, 0x10,&#10;+    0x10, 0x06, 0x09, 0xe8, 0x1a, 0xf0, 0xee, 0x09, 0xff, 0x24, 0xf7, 0xfb,&#10;+    0xe6, 0x06, 0xfa, 0x08, 0x03, 0x00, 0xf2, 0x04, 0xf0, 0xeb, 0x14, 0x1c,&#10;+    0x03, 0x21, 0x14, 0x1d, 0xfe, 0x03, 0xf6, 0x02, 0x09, 0xff, 0x00, 0x13,&#10;+    0xef, 0x10, 0x1e, 0x0b, 0x1d, 0x1c, 0xf1, 0xf6, 0xe7, 0xfd, 0x14, 0x01,&#10;+    0xff, 0x13, 0xf7, 0xfc, 0x00, 0x21, 0xe3, 0xeb, 0x07, 0x0e, 0x09, 0xf1,&#10;+    0xf8, 0xfd, 0x03, 0xee, 0x19, 0xfd, 0xff, 0xfb, 0xff, 0xea, 0xfb, 0x07,&#10;+    0xf0, 0x0a, 0x04, 0x04, 0x0b, 0x12, 0xfe, 0x0b, 0xe0, 0xff, 0xf6, 0xe5,&#10;+    0xfc, 0x11, 0xed, 0xfd, 0x15, 0x03, 0xdd, 0xdb, 0x04, 0xfe, 0xff, 0x0e,&#10;+    0xff, 0xfa, 0xfb, 0xe5, 0xef, 0xf6, 0xfe, 0x22, 0x0f, 0xe8, 0xfe, 0xf4,&#10;+    0xfd, 0xd9, 0x03, 0x0a, 0xdf, 0xcf, 0xf1, 0x14, 0x05, 0xfd, 0xfb, 0xf3,&#10;+    0xfb, 0xfb, 0x0f, 0xf8, 0x05, 0x09, 0x03, 0xf7, 0x05, 0x05, 0x13, 0xfb,&#10;+    0xeb, 0x23, 0xe7, 0x18, 0xfb, 0x00, 0xfe, 0xdd, 0xe9, 0xea, 0xd3, 0xe8,&#10;+    0x1a, 0xef, 0x01, 0xf1, 0x09, 0x1d, 0xd8, 0xfc, 0xda, 0x19, 0x03, 0xec,&#10;+    0xe5, 0xf3, 0xed, 0x0a, 0xf4, 0x13, 0x0b, 0xf7, 0x0c, 0x00, 0xf9, 0xea,&#10;+    0xe3, 0xfe, 0xff, 0x0d, 0x0a, 0x1b, 0xd7, 0x17, 0xeb, 0xe9, 0x00, 0x0e,&#10;+    0xee, 0x24, 0xef, 0x09, 0x07, 0xf0, 0xf5, 0x07, 0xf5, 0xf5, 0x10, 0x17,&#10;+    0x06, 0xf7, 0xfc, 0x02, 0xfb, 0xf9, 0xe7, 0x0a, 0x26, 0xf3, 0x01, 0x01,&#10;+    0x09, 0x0b, 0x02, 0x27, 0xf8, 0xee, 0xfd, 0x1c, 0xf8, 0xf2, 0x0f, 0xfc,&#10;+    0x0d, 0xe0, 0xea, 0x02, 0x0b, 0x00, 0xe0, 0x08, 0xfe, 0x10, 0x04, 0xfe,&#10;+    0xeb, 0x13, 0x01, 0x0c, 0x0e, 0xed, 0x09, 0x01, 0x0c, 0xe3, 0x10, 0xdf,&#10;+    0xd1, 0x14, 0xf3, 0xef, 0x09, 0xf0, 0xee, 0xe5, 0x11, 0xf4, 0xf6, 0x00,&#10;+    0xe8, 0x20, 0x0a, 0xfc, 0xea, 0xf7, 0x02, 0x16, 0xe7, 0xf3, 0x0d, 0xe4,&#10;+    0x04, 0xe6, 0xef, 0xf8, 0x0f, 0x23, 0x02, 0xe0, 0x01, 0x01, 0x01, 0x05,&#10;+    0xf5, 0x0d, 0xf5, 0xf5, 0xe1, 0xff, 0x04, 0x00, 0xf4, 0x0d, 0xee, 0xf1,&#10;+    0xef, 0xf7, 0x0b, 0xff, 0x1b, 0xec, 0x05, 0xe7, 0xf3, 0x13, 0x12, 0xf2,&#10;+    0xf3, 0xfc, 0xea, 0x06, 0xfe, 0x13, 0x12, 0xdb, 0x11, 0xe2, 0xfc, 0x0d,&#10;+    0x1c, 0xe8, 0x1d, 0xfc, 0xf2, 0xe2, 0x13, 0x1d, 0xda, 0xf6, 0x1c, 0x18,&#10;+    0x1e, 0xf4, 0xfa, 0x03, 0xdc, 0x0f, 0xff, 0xff, 0x18, 0x0b, 0xed, 0xf1,&#10;+    0xf8, 0x02, 0xf4, 0x10, 0xf9, 0xeb, 0x0b, 0x0e, 0x0f, 0x01, 0x02, 0x1b,&#10;+    0x06, 0x10, 0x00, 0xe7, 0x23, 0x0d, 0xf6, 0x11, 0x08, 0xf5, 0x0f, 0x05,&#10;+    0x13, 0xf7, 0x01, 0x01, 0x0c, 0xf6, 0xf9, 0xf0, 0x29, 0x01, 0xe9, 0x11,&#10;+    0x02, 0xfa, 0xeb, 0x16, 0x0e, 0x10, 0x09, 0x0e, 0x1c, 0x0a, 0xe3, 0xd3,&#10;+    0x01, 0xe3, 0x00, 0x06, 0xe2, 0xe9, 0x19, 0xef, 0x12, 0xf3, 0xfc, 0x02,&#10;+    0x0b, 0x0c, 0x0d, 0xed, 0xfd, 0xf6, 0xf9, 0xe9, 0xf2, 0x28, 0xfe, 0x03,&#10;+    0xec, 0x03, 0x00, 0xf8, 0xde, 0x0d, 0x25, 0x07, 0x1a, 0xe7, 0xfd, 0x29,&#10;+    0xd8, 0xf7, 0xfb, 0xde, 0x0c, 0x08, 0x06, 0x22, 0xee, 0x1d, 0x05, 0x07,&#10;+    0xf0, 0xfb, 0xfe, 0x07, 0xf1, 0x04, 0xe9, 0x01, 0xfc, 0xf1, 0x00, 0xeb,&#10;+    0xe3, 0x08, 0xec, 0xfe, 0x04, 0xeb, 0xfc, 0x01, 0xf6, 0x0e, 0xdf, 0xf8,&#10;+    0x12, 0xe3, 0x16, 0xdc, 0x21, 0x0a, 0xe6, 0x06, 0xe5, 0x10, 0x07, 0xf7,&#10;+    0x1e, 0xde, 0xe3, 0x07, 0x16, 0xed, 0x23, 0xf2, 0x12, 0x0d, 0xe9, 0xf9,&#10;+    0xe8, 0xfe, 0x0e, 0x02, 0x18, 0x0a, 0xea, 0xec, 0xfb, 0xfe, 0x0c, 0x1b,&#10;+    0x19, 0x20, 0xfa, 0x07, 0xe5, 0x0c, 0x04, 0x27, 0xdb, 0xe6, 0xfe, 0x0d,&#10;+    0x0a, 0x0a, 0xfe, 0x39, 0xdd, 0xde, 0x05, 0xec, 0x09, 0x05, 0x0a, 0x2c,&#10;+    0xf4, 0x02, 0x1f, 0xd3, 0x24, 0xee, 0x0f, 0x3c, 0xf5, 0xfd, 0xf8, 0xf8,&#10;+    0x12, 0xf5, 0xf3, 0x19, 0xf9, 0xda, 0xf6, 0x0a, 0x0a, 0xf4, 0x09, 0x0f,&#10;+    0xfc, 0x00, 0x01, 0x01, 0xf3, 0xf8, 0x05, 0xf3, 0x0c, 0x19, 0x0e, 0xfd,&#10;+    0xfa, 0xe1, 0xfc, 0x0c, 0x03, 0xfb, 0x1b, 0x06, 0xcc, 0xe4, 0x08, 0xf9,&#10;+    0x10, 0xe9, 0x06, 0x00, 0x17, 0xe8, 0x0d, 0x12, 0xca, 0xf5, 0x23, 0xe4,&#10;+    0x21, 0xf6, 0x19, 0x33, 0xdd, 0xfa, 0x0c, 0x01, 0x14, 0x07, 0x00, 0x34,&#10;+    0xda, 0x05, 0x07, 0x01, 0x07, 0xe4, 0x06, 0x24, 0x02, 0xff, 0xf0, 0x09,&#10;+    0xfc, 0xf4, 0x03, 0x06, 0xee, 0x08, 0xe2, 0x1d, 0xfa, 0x0c, 0xfc, 0x02,&#10;+    0x03, 0xe5, 0xf0, 0xe2, 0x0a, 0x18, 0x12, 0x0c, 0x1e, 0x20, 0xed, 0x20,&#10;+    0xe4, 0x01, 0x2a, 0x09, 0x0d, 0x0e, 0xd0, 0xf4, 0xdd, 0xfd, 0x2b, 0xf2,&#10;+    0x08, 0x0c, 0xf8, 0xf7, 0xfc, 0xf9, 0x15, 0xef, 0x19, 0x1c, 0x01, 0xff,&#10;+    0xe2, 0x01, 0xf3, 0x30, 0x0e, 0xfb, 0x15, 0xe8, 0x1c, 0x00, 0xfa, 0x16,&#10;+    0xef, 0xea, 0xfb, 0x05, 0xf0, 0x0e, 0x02, 0x13, 0xf4, 0x01, 0x03, 0xe5,&#10;+    0x29, 0x07, 0x09, 0x24, 0xf9, 0xe3, 0xf8, 0xde, 0x2d, 0xf4, 0xf5, 0x40,&#10;+    0xed, 0xdf, 0x07, 0xef, 0x0f, 0x0a, 0x0b, 0x32, 0x0d, 0xe8, 0x00, 0xe6,&#10;+    0xf6, 0xfc, 0xfd, 0x19, 0x11, 0x09, 0xf3, 0x03, 0xea, 0xf1, 0xfb, 0x02,&#10;+    0xfd, 0x06, 0xff, 0xfe, 0x09, 0xec, 0x06, 0x0c, 0x15, 0xf9, 0x06, 0xd7,&#10;+    0xe3, 0xf7, 0xed, 0x01, 0x03, 0xfd, 0x14, 0x01, 0x0e, 0xe0, 0x37, 0x0d,&#10;+    0xd2, 0x18, 0x2f, 0xea, 0x12, 0x0d, 0x05, 0x3a, 0xd5, 0x07, 0x1e, 0xf2,&#10;+    0x21, 0x11, 0xf9, 0x36, 0xd3, 0xf5, 0x12, 0xf6, 0xfb, 0xf6, 0x06, 0x0f,&#10;+    0xde, 0xf9, 0x06, 0x09, 0xdf, 0xff, 0x0b, 0xf3, 0xf5, 0x01, 0xf1, 0xea,&#10;+    0xf2, 0x02, 0x12, 0xfc, 0x0e, 0xee, 0xf8, 0xeb, 0x00, 0xef, 0x21, 0x0f,&#10;+    0x09, 0xef, 0xeb, 0x1e, 0xef, 0xf2, 0x26, 0xf9, 0x17, 0xf1, 0xf1, 0xf0,&#10;+    0x0c, 0x10, 0x1d, 0xff, 0x1d, 0x06, 0x03, 0xf6, 0xfb, 0x14, 0x1b, 0x03,&#10;+    0x22, 0xfd, 0xec, 0x03, 0xfa, 0xf8, 0x01, 0x2b, 0x1e, 0x1b, 0x09, 0x09,&#10;+    0x07, 0xff, 0xf0, 0x20, 0xee, 0x14, 0xfb, 0xf6, 0xf8, 0x11, 0xd9, 0x29,&#10;+    0xf4, 0xfa, 0x07, 0xef, 0x20, 0xf9, 0xf2, 0x30, 0xee, 0xf0, 0xf3, 0xd6,&#10;+    0x0d, 0xfe, 0x03, 0x36, 0xf5, 0xd7, 0x01, 0xe6, 0x04, 0xf0, 0x05, 0x1f,&#10;+    0x0f, 0xdd, 0xff, 0xf8, 0x1f, 0xf2, 0x04, 0x37, 0xfa, 0x00, 0xfd, 0xf8,&#10;+    0x10, 0xe1, 0xfb, 0x0d, 0xed, 0xf6, 0xe2, 0xfe, 0x08, 0xfe, 0x07, 0x08,&#10;+    0x08, 0x11, 0x0a, 0xf0, 0xf8, 0xf5, 0x04, 0xea, 0x08, 0x12, 0x06, 0x0d,&#10;+    0x0f, 0x10, 0x40, 0x28, 0xc0, 0xfb, 0x3f, 0x08, 0x1d, 0x09, 0x1b, 0x3d,&#10;+    0xee, 0xf4, 0x29, 0x13, 0x20, 0xfc, 0x11, 0x4c, 0xdb, 0x02, 0x15, 0x05,&#10;+    0xec, 0xeb, 0x0a, 0x22, 0xe7, 0x00, 0x02, 0x01, 0xd4, 0xea, 0x0a, 0xf3,&#10;+    0xe3, 0xf8, 0xf5, 0xfa, 0x01, 0x0d, 0x19, 0x06, 0x24, 0x13, 0x02, 0xf5,&#10;+    0xf1, 0xf1, 0x1b, 0x0f, 0x19, 0x04, 0xe3, 0xf9, 0xe7, 0x02, 0x29, 0xfc,&#10;+    0x29, 0xec, 0xe9, 0x04, 0xdc, 0x22, 0x1d, 0xfd, 0x1f, 0x01, 0xec, 0xe8,&#10;+    0xf5, 0x14, 0x1b, 0x19, 0x06, 0x0e, 0x02, 0x0d, 0xf9, 0x06, 0xfc, 0x15,&#10;+    0x07, 0xfa, 0x0c, 0xe1, 0x18, 0x1a, 0xe8, 0x1b, 0xe9, 0xef, 0x0a, 0x18,&#10;+    0xfc, 0x05, 0xf9, 0x14, 0xdc, 0x04, 0x01, 0xff, 0x07, 0xfd, 0xf0, 0x2c,&#10;+    0xf2, 0xec, 0x0e, 0xe7, 0x1a, 0x05, 0xe8, 0x35, 0x13, 0x09, 0xf9, 0x07,&#10;+    0xfe, 0xfa, 0x0d, 0x40, 0x0c, 0xea, 0xf4, 0x04, 0x01, 0x11, 0xfc, 0x23,&#10;+    0xeb, 0xf4, 0xe9, 0x04, 0xeb, 0xe7, 0x07, 0x09, 0xfb, 0xf1, 0xf6, 0xfd,&#10;+    0x02, 0xfa, 0x02, 0xff, 0x00, 0xff, 0xf1, 0xf1, 0x1a, 0xe9, 0x10, 0xe3,&#10;+    0x0b, 0x0c, 0x08, 0x04, 0x1b, 0x0a, 0x2b, 0x10, 0xe1, 0x01, 0x1f, 0x06,&#10;+    0x04, 0xec, 0x19, 0x49, 0xee, 0xf8, 0x22, 0x0c, 0x20, 0x02, 0x07, 0x31,&#10;+    0xe7, 0xff, 0x0f, 0xf0, 0xfd, 0xea, 0x13, 0x26, 0xce, 0xfa, 0xff, 0xee,&#10;+    0xe9, 0xfe, 0x15, 0x08, 0x04, 0x05, 0x0d, 0xfa, 0xdd, 0xf8, 0x07, 0x0b,&#10;+    0x33, 0xef, 0xec, 0xf9, 0xd9, 0xe6, 0x1d, 0x10, 0x41, 0xf6, 0xdf, 0x11,&#10;+    0xe3, 0x14, 0x1d, 0xfb, 0x2b, 0x15, 0xdc, 0x09, 0xf6, 0x05, 0x16, 0x00,&#10;+    0x1c, 0x27, 0xe4, 0xfc, 0xf7, 0x16, 0x08, 0x08, 0x2f, 0xdd, 0xf8, 0xfa,&#10;+    0xe9, 0x0e, 0x0b, 0x0b, 0x02, 0x12, 0x02, 0xfd, 0x19, 0x03, 0xeb, 0x11,&#10;+    0xf4, 0x09, 0x09, 0x15, 0x12, 0x0d, 0xef, 0x1c, 0xe4, 0xfe, 0x17, 0x0c,&#10;+    0x09, 0x04, 0xea, 0x2f, 0xf2, 0x1e, 0x02, 0xfb, 0xfe, 0xe3, 0x00, 0x2e,&#10;+    0x04, 0xf9, 0x0c, 0x05, 0x27, 0x0c, 0x07, 0x2d, 0xf7, 0x0b, 0xfb, 0xf9,&#10;+    0x1c, 0xdf, 0x11, 0x36, 0x05, 0xf2, 0x02, 0xf8, 0x0b, 0x07, 0x05, 0xfb,&#10;+    0xfc, 0x0e, 0x13, 0xfa, 0xfb, 0x09, 0xf5, 0xfd, 0x06, 0x15, 0xf9, 0x03,&#10;+    0x18, 0xfd, 0x1a, 0x0a, 0x03, 0xe2, 0xfb, 0x00, 0x1e, 0xfe, 0x4f, 0x27,&#10;+    0xe1, 0xf7, 0x31, 0xf0, 0x1b, 0xec, 0x07, 0x5f, 0xe2, 0xf8, 0x40, 0x05,&#10;+    0x17, 0x24, 0x0c, 0x3c, 0xf3, 0x10, 0x13, 0xf8, 0x0b, 0xf3, 0xf9, 0x36,&#10;+    0xe1, 0xf3, 0xf4, 0xe8, 0xef, 0xf8, 0xfc, 0xeb, 0xe3, 0xfb, 0xf0, 0xee,&#10;+    0xdb, 0x06, 0x0c, 0x11, 0x1e, 0x10, 0xe2, 0xe9, 0xeb, 0x0d, 0x34, 0x0f,&#10;+    0x43, 0xd9, 0xef, 0x08, 0xec, 0x05, 0x1d, 0x02, 0x33, 0xef, 0xf4, 0xf7,&#10;+    0xe6, 0xf9, 0x22, 0x07, 0x04, 0x06, 0xe9, 0x02, 0xf0, 0xfc, 0x24, 0x20,&#10;+    0x24, 0x17, 0xe6, 0x0f, 0x05, 0xf6, 0xfc, 0x1f, 0xf2, 0x01, 0x0d, 0xe7,&#10;+    0xff, 0x1d, 0xf0, 0xfa, 0xd0, 0x00, 0xff, 0x0e, 0x23, 0xf9, 0xf3, 0x11,&#10;+    0xde, 0x0d, 0x05, 0x04, 0x0b, 0x0b, 0xfb, 0x26, 0x0d, 0x0d, 0xff, 0xe8,&#10;+    0x16, 0xe8, 0x0b, 0x3c, 0x18, 0xe4, 0x04, 0xff, 0xfa, 0xf3, 0xff, 0x40,&#10;+    0xee, 0x06, 0xfc, 0x0d, 0x00, 0xf7, 0x13, 0x3f, 0xf7, 0x13, 0x06, 0x08,&#10;+    0xf9, 0x13, 0xf2, 0x19, 0xfd, 0xf9, 0xf3, 0xe6, 0xfc, 0x07, 0xf6, 0xfd,&#10;+    0x0a, 0x22, 0x00, 0x01, 0x19, 0xff, 0xe7, 0xff, 0x08, 0xfd, 0x03, 0xfd,&#10;+    0x1f, 0xe7, 0x28, 0x08, 0xde, 0xf3, 0x43, 0xf6, 0x0c, 0xfe, 0x1e, 0x52,&#10;+    0xf2, 0x04, 0x17, 0xf2, 0x08, 0x0d, 0x04, 0x38, 0xde, 0x0c, 0x10, 0xef,&#10;+    0xdf, 0x0f, 0x01, 0x24, 0xde, 0xe1, 0x0d, 0xfd, 0xd4, 0xf6, 0x12, 0x0e,&#10;+    0xed, 0x01, 0xf0, 0xf3, 0xfd, 0xff, 0x18, 0xf3, 0x36, 0xda, 0xf6, 0xef,&#10;+    0xe8, 0xef, 0x37, 0x27, 0x4e, 0xf8, 0xf4, 0xff, 0xe5, 0xf3, 0x32, 0x0b,&#10;+    0x36, 0x08, 0xe9, 0xf6, 0xe2, 0x13, 0x21, 0xfe, 0x12, 0xed, 0xdd, 0xfb,&#10;+    0xf8, 0x05, 0x0f, 0x03, 0x1c, 0x04, 0xfc, 0xf2, 0x23, 0x0e, 0x03, 0xfc,&#10;+    0xf9, 0x18, 0xf7, 0x01, 0x1b, 0x03, 0xf5, 0xfd, 0xde, 0xf3, 0x19, 0xfc,&#10;+    0x11, 0x02, 0xe7, 0x13, 0xde, 0xd8, 0xf2, 0x05, 0x28, 0x02, 0x02, 0x27,&#10;+    0x07, 0x08, 0xff, 0x07, 0x27, 0x0e, 0x19, 0x40, 0xfb, 0x02, 0x0c, 0xf6,&#10;+    0x0d, 0x07, 0x0f, 0x47, 0xf8, 0x05, 0x0e, 0xfd, 0x03, 0x1e, 0x07, 0x32,&#10;+    0xe7, 0xf6, 0x24, 0x01, 0x01, 0x02, 0x0a, 0xff, 0xf6, 0x26, 0x15, 0xf0,&#10;+    0x04, 0x13, 0x03, 0xfa, 0xfe, 0xf6, 0xf1, 0x09, 0x2a, 0xe6, 0xea, 0xf6,&#10;+    0x17, 0x13, 0xeb, 0xff, 0x15, 0xeb, 0x23, 0x06, 0xc8, 0xf6, 0x33, 0xeb,&#10;+    0xf4, 0xe7, 0x12, 0x2a, 0xe3, 0xe6, 0x32, 0xfa, 0x16, 0x15, 0x17, 0x40,&#10;+    0xf1, 0x08, 0x1a, 0xf3, 0xf6, 0x0c, 0x0c, 0x11, 0xd0, 0x22, 0x02, 0xee,&#10;+    0xea, 0xf4, 0xf8, 0xf9, 0x13, 0x10, 0x17, 0xf5, 0xf1, 0x0a, 0x0e, 0xfd,&#10;+    0x32, 0xda, 0xf1, 0xe2, 0xdb, 0xf2, 0x34, 0x1f, 0x53, 0xfc, 0xe4, 0xf2,&#10;+    0xf6, 0xf2, 0x1d, 0x04, 0x4a, 0xec, 0xee, 0x06, 0xdf, 0x01, 0x1a, 0x04,&#10;+    0x27, 0xfc, 0xe6, 0xfd, 0xd9, 0xfd, 0x0e, 0x00, 0x0c, 0x16, 0xf3, 0x03,&#10;+    0xf7, 0xfc, 0x0e, 0x0f, 0x09, 0x06, 0x06, 0x04, 0x08, 0x02, 0xed, 0xf5,&#10;+    0xe4, 0xe6, 0x07, 0x06, 0x03, 0x18, 0xea, 0x13, 0xe2, 0xfa, 0x10, 0xf2,&#10;+    0x02, 0xec, 0x03, 0x3c, 0xf6, 0xf6, 0x0a, 0x10, 0x09, 0xf8, 0x15, 0x24,&#10;+    0xfd, 0x0d, 0x09, 0x01, 0x00, 0xff, 0x00, 0x1a, 0xf0, 0xee, 0x08, 0x03,&#10;+    0x1d, 0x05, 0x16, 0x46, 0xe6, 0xf8, 0x08, 0x00, 0x09, 0x09, 0xff, 0x01,&#10;+    0xfc, 0x20, 0xfc, 0xec, 0x05, 0x1b, 0x03, 0xf1, 0x12, 0xe4, 0xfa, 0x24,&#10;+    0x1c, 0xf5, 0xf2, 0x05, 0x11, 0xe7, 0xfa, 0x02, 0x20, 0xea, 0x31, 0x10,&#10;+    0xcf, 0xd8, 0x33, 0xee, 0xff, 0x09, 0x20, 0x3f, 0xe2, 0x0a, 0x29, 0xee,&#10;+    0x3a, 0xf2, 0x1e, 0x39, 0x02, 0x1e, 0xfe, 0xf2, 0xef, 0xe2, 0x0d, 0x0f,&#10;+    0xf1, 0x19, 0x02, 0xe7, 0xec, 0xff, 0xfe, 0xe4, 0xfe, 0xfb, 0x02, 0xf6,&#10;+    0xf1, 0xf4, 0x07, 0x1a, 0x2a, 0xf9, 0x06, 0xf9, 0xda, 0xf4, 0x22, 0x02,&#10;+    0x4f, 0x0a, 0xf3, 0xfc, 0xf3, 0xf6, 0x25, 0x0a, 0x28, 0x01, 0xf7, 0x09,&#10;+    0xe6, 0x05, 0x28, 0xf7, 0x1e, 0xf2, 0xee, 0x13, 0xee, 0x05, 0x0f, 0x0a,&#10;+    0x09, 0xe8, 0xe8, 0x0e, 0x05, 0x12, 0x0f, 0x15, 0x02, 0xec, 0xf8, 0x02,&#10;+    0xf7, 0x05, 0xf8, 0xff, 0xdc, 0x00, 0x01, 0x00, 0x12, 0x17, 0xec, 0x19,&#10;+    0xfa, 0x09, 0xfa, 0xf3, 0x1d, 0x0b, 0x07, 0x25, 0xea, 0x0c, 0xf5, 0xfa,&#10;+    0x04, 0xf7, 0xfe, 0x33, 0xfe, 0x14, 0xef, 0x04, 0xf0, 0x00, 0x00, 0x3a,&#10;+    0xea, 0xfa, 0x10, 0x01, 0xe4, 0x00, 0xff, 0x23, 0xe9, 0x26, 0x15, 0x10,&#10;+    0x04, 0x14, 0x0d, 0x08, 0xf8, 0xfd, 0x10, 0xfb, 0x00, 0x21, 0x06, 0xfa,&#10;+    0x0f, 0x08, 0xf1, 0x09, 0x28, 0xf0, 0xd8, 0x0d, 0x08, 0x09, 0x02, 0xfb,&#10;+    0x12, 0x03, 0x0e, 0xfb, 0xce, 0xf0, 0x39, 0xe5, 0x09, 0xf6, 0x1f, 0x35,&#10;+    0xdd, 0x1c, 0x25, 0xef, 0x17, 0x0c, 0xf6, 0x3e, 0xf0, 0x21, 0x08, 0xff,&#10;+    0xd7, 0xfc, 0xfd, 0x1f, 0xe5, 0x18, 0x12, 0xe9, 0xf5, 0xe9, 0x12, 0xf6,&#10;+    0x02, 0x13, 0xf4, 0x0a, 0xfd, 0x03, 0x09, 0x08, 0x2f, 0x07, 0xee, 0xfd,&#10;+    0xd7, 0x00, 0x2b, 0x29, 0x3b, 0xdb, 0xde, 0xf1, 0xe1, 0xf7, 0x47, 0x12,&#10;+    0x35, 0x0c, 0xe4, 0x09, 0xef, 0x17, 0x2b, 0xea, 0x2d, 0xf8, 0xe8, 0x18,&#10;+    0xef, 0x03, 0x11, 0x0a, 0x10, 0xff, 0xe8, 0x07, 0x0c, 0x07, 0x03, 0x18,&#10;+    0x05, 0x08, 0xf8, 0xf8, 0x06, 0x18, 0xe9, 0xf9, 0xe0, 0x0f, 0x0d, 0x18,&#10;+    0x04, 0x01, 0xf0, 0x1c, 0xf6, 0x14, 0xfd, 0x12, 0x0c, 0x0c, 0x02, 0x34,&#10;+    0xf6, 0xe6, 0xfd, 0xf9, 0xf9, 0xfd, 0x00, 0x2a, 0xfc, 0xf9, 0xff, 0x0a,&#10;+    0xfe, 0x1b, 0xf5, 0x34, 0xdc, 0xf9, 0x15, 0x13, 0xe7, 0x1b, 0xf7, 0x25,&#10;+    0xfd, 0x09, 0x08, 0x0a, 0xf0, 0x17, 0x0f, 0x04, 0xf4, 0xe9, 0x06, 0x07,&#10;+    0xf5, 0x02, 0xfc, 0xf5, 0x09, 0xee, 0xf1, 0x07, 0x38, 0x03, 0x05, 0x0f,&#10;+    0x16, 0x0f, 0xed, 0xff, 0x21, 0xf8, 0x34, 0x07, 0xd1, 0xf9, 0x27, 0x00,&#10;+    0x0c, 0x21, 0x18, 0x42, 0xe6, 0x02, 0x1a, 0xf1, 0x2f, 0xf1, 0x0e, 0x3b,&#10;+    0xee, 0xf8, 0x08, 0xea, 0xfe, 0xf9, 0x03, 0x18, 0xf5, 0xf8, 0x0d, 0xeb,&#10;+    0x01, 0x10, 0x09, 0x02, 0x15, 0xfb, 0xf1, 0x0b, 0xf2, 0x06, 0x08, 0x09,&#10;+    0x2f, 0x19, 0x02, 0xfe, 0xe4, 0x06, 0x1f, 0x17, 0x49, 0xf2, 0xe2, 0x02,&#10;+    0xef, 0x04, 0x26, 0x16, 0x3f, 0x08, 0xf1, 0x0a, 0xfd, 0xf9, 0x28, 0x01,&#10;+    0x15, 0x0b, 0xf9, 0x10, 0xdc, 0x02, 0x20, 0xf7, 0x16, 0xe6, 0x09, 0x03,&#10;+    0xf1, 0xf5, 0x12, 0x1c, 0xfb, 0x2a, 0x08, 0xfa, 0x0a, 0x16, 0xf6, 0x15,&#10;+    0xf0, 0x06, 0x11, 0xfd, 0x0e, 0xf9, 0xf6, 0x12, 0xed, 0xf3, 0xfd, 0x1f,&#10;+    0x0b, 0xfa, 0x08, 0x30, 0xf8, 0xff, 0x0b, 0xeb, 0x10, 0xff, 0x07, 0x22,&#10;+    0x0d, 0x07, 0x09, 0x03, 0xf6, 0xf8, 0xfc, 0x26, 0xf8, 0xee, 0x11, 0x02,&#10;+    0x03, 0x0a, 0xef, 0x38, 0xfe, 0x13, 0x1b, 0x09, 0xfe, 0x06, 0x05, 0xf3,&#10;+    0x04, 0xdf, 0xfc, 0x00, 0xe7, 0x15, 0xec, 0xf1, 0xf8, 0xfc, 0xed, 0x05,&#10;+    0x0e, 0xf3, 0x15, 0x09, 0x01, 0x0d, 0xfd, 0x00, 0x24, 0xe2, 0x31, 0x13,&#10;+    0xd5, 0x1b, 0x2b, 0xe8, 0x03, 0x08, 0x1d, 0x33, 0xdc, 0xfd, 0x24, 0xe4,&#10;+    0x20, 0xfa, 0x07, 0x33, 0x01, 0x12, 0x06, 0xf5, 0xef, 0xf7, 0xfa, 0x13,&#10;+    0x01, 0xec, 0xee, 0xe0, 0xfd, 0x0d, 0xff, 0x09, 0xf6, 0x00, 0xed, 0x07,&#10;+    0xea, 0x0e, 0xff, 0x0e, 0x26, 0xfc, 0xf0, 0xe7, 0xe7, 0xfe, 0x30, 0xff,&#10;+    0x24, 0x04, 0x06, 0xf4, 0xf5, 0xf8, 0x23, 0x0e, 0x3d, 0xf2, 0xfd, 0x04,&#10;+    0xe8, 0xfb, 0x23, 0xfe, 0x33, 0xe1, 0x01, 0xfd, 0xdc, 0xfb, 0x0e, 0xfa,&#10;+    0x22, 0xfb, 0x11, 0xfa, 0xff, 0x08, 0x21, 0x30, 0x13, 0x03, 0xf2, 0x03,&#10;+    0xf8, 0x0f, 0xec, 0x0d, 0xef, 0x0f, 0x10, 0x10, 0x0f, 0xf6, 0xf9, 0x1e,&#10;+    0xf7, 0xe5, 0x08, 0xfa, 0x09, 0xff, 0x00, 0x15, 0x02, 0x00, 0x08, 0xfe,&#10;+    0xfb, 0x0e, 0x15, 0x28, 0xfa, 0xfb, 0x13, 0x06, 0xfb, 0x05, 0xf6, 0x11,&#10;+    0xf6, 0x0b, 0x06, 0x15, 0xe1, 0x00, 0xe9, 0x0f, 0xe1, 0x1d, 0x18, 0xfd,&#10;+    0x0b, 0x0f, 0xff, 0xf2, 0xf5, 0xfd, 0x14, 0xff, 0xf4, 0xfe, 0xe2, 0xf8,&#10;+    0x14, 0x0b, 0xeb, 0x07, 0x35, 0xe2, 0xeb, 0x0b, 0x04, 0x22, 0xfe, 0x0e,&#10;+    0x1d, 0xf2, 0x24, 0x11, 0xcc, 0xec, 0x25, 0xf7, 0xff, 0xf9, 0x06, 0x29,&#10;+    0xe4, 0x07, 0x1c, 0xdb, 0xf8, 0x1d, 0xfa, 0x44, 0xf2, 0x01, 0x0f, 0xe6,&#10;+    0x11, 0x03, 0xee, 0x17, 0x06, 0xe0, 0x0c, 0xd8, 0xe9, 0xfd, 0x11, 0xfe,&#10;+    0x07, 0xdd, 0xea, 0xff, 0xde, 0xdd, 0x0a, 0x09, 0x30, 0xf2, 0x01, 0xe4,&#10;+    0xe0, 0xeb, 0x2d, 0x12, 0x2d, 0xeb, 0xfc, 0xf0, 0xe8, 0xf9, 0x1f, 0x08,&#10;+    0x3f, 0xeb, 0x0e, 0x13, 0xf9, 0x0c, 0x1c, 0x02, 0x25, 0xec, 0xf6, 0x05,&#10;+    0xf3, 0xf4, 0x18, 0x08, 0x12, 0xe9, 0xfb, 0xfd, 0xf9, 0x08, 0x13, 0x1c,&#10;+    0x08, 0xec, 0xfe, 0x02, 0xf1, 0x19, 0xf3, 0x1d, 0xf1, 0x07, 0x11, 0x12,&#10;+    0xfa, 0xf2, 0xf6, 0x0d, 0xff, 0x17, 0x0a, 0xfb, 0x1f, 0xf8, 0x11, 0x24,&#10;+    0xf6, 0xfc, 0xfe, 0x07, 0xed, 0x05, 0x1c, 0x21, 0xfe, 0xfe, 0x16, 0x0d,&#10;+    0x08, 0x0f, 0x09, 0x33, 0xf4, 0x1f, 0x14, 0x0c, 0xfe, 0xf5, 0xeb, 0x2a,&#10;+    0xee, 0xf3, 0x12, 0x19, 0xec, 0x01, 0x06, 0xf7, 0x05, 0x22, 0x0b, 0xeb,&#10;+    0xeb, 0x06, 0xe1, 0xf5, 0x0d, 0xee, 0xfb, 0x0a, 0x31, 0xff, 0xe3, 0xea,&#10;+    0x18, 0x09, 0xe3, 0x07, 0x1a, 0xf8, 0x15, 0xfc, 0xcc, 0xf2, 0x2a, 0xe5,&#10;+    0x01, 0xea, 0x10, 0x1f, 0xd9, 0x02, 0x13, 0xf6, 0x16, 0x01, 0x0e, 0x3c,&#10;+    0x02, 0x17, 0x04, 0xf1, 0xf7, 0x02, 0x07, 0x0c, 0x02, 0x1f, 0xf4, 0xe6,&#10;+    0xf0, 0xe9, 0x05, 0xf4, 0xfd, 0xe4, 0xf7, 0xe9, 0xfc, 0xef, 0x06, 0x02,&#10;+    0x26, 0xf1, 0xf1, 0xeb, 0xe9, 0xe6, 0x30, 0x1c, 0x38, 0x0f, 0x03, 0xf1,&#10;+    0x10, 0x04, 0x30, 0x19, 0x1f, 0xfb, 0xfc, 0x05, 0xe2, 0xfe, 0x18, 0xf2,&#10;+    0x1c, 0xf2, 0xf5, 0x0e, 0xf2, 0x05, 0x1d, 0x28, 0x12, 0xf0, 0xf0, 0x0f,&#10;+    0x0a, 0x03, 0x1a, 0x1a, 0xf3, 0x08, 0x13, 0xef, 0xf5, 0x1c, 0x06, 0x00,&#10;+    0xee, 0x12, 0x1d, 0x03, 0x18, 0x06, 0x0a, 0x0e, 0xf0, 0xeb, 0xfa, 0x0d,&#10;+    0x08, 0xff, 0x06, 0x24, 0x0f, 0x03, 0x0a, 0x0f, 0x0e, 0xff, 0x08, 0x33,&#10;+    0xfc, 0x00, 0x0e, 0xfb, 0xfb, 0x05, 0x07, 0x19, 0xe8, 0xe7, 0x12, 0x11,&#10;+    0x15, 0xf7, 0x0c, 0x1a, 0xf6, 0x28, 0x08, 0xeb, 0xf2, 0x25, 0xee, 0x01,&#10;+    0x03, 0xec, 0xed, 0xfa, 0xf0, 0xf2, 0xef, 0xf1, 0x02, 0x23, 0xef, 0x01,&#10;+    0x41, 0xfa, 0xf4, 0xf4, 0x15, 0xf5, 0xf5, 0xf9, 0x28, 0xde, 0x20, 0xf6,&#10;+    0xc7, 0xde, 0x21, 0xe4, 0xfe, 0xec, 0x0d, 0x2c, 0xee, 0x24, 0x10, 0xf0,&#10;+    0x1d, 0x12, 0x0e, 0x2b, 0x06, 0xf8, 0xfd, 0x01, 0x08, 0xef, 0xfd, 0x0f,&#10;+    0xeb, 0xed, 0xe1, 0xdf, 0xf1, 0xe5, 0x16, 0xe3, 0x08, 0xfc, 0xf6, 0xf6,&#10;+    0xd8, 0xf0, 0x23, 0xfc, 0x2b, 0xf5, 0xff, 0xe7, 0xf4, 0xe9, 0x29, 0x09,&#10;+    0x2b, 0x0c, 0xff, 0x08, 0x0b, 0xed, 0x29, 0x14, 0x3c, 0xf5, 0xeb, 0x18,&#10;+    0xf6, 0x10, 0x22, 0xf9, 0x17, 0x23, 0x02, 0x0c, 0xf6, 0xfa, 0x2f, 0xfe,&#10;+    0x1e, 0xeb, 0xfd, 0x03, 0xf0, 0x07, 0x1c, 0x09, 0xfa, 0xe1, 0x0d, 0x0f,&#10;+    0x18, 0x03, 0xfe, 0xf0, 0xec, 0x0b, 0x10, 0x02, 0x14, 0x06, 0xef, 0xf7,&#10;+    0xea, 0x0b, 0x05, 0xfe, 0x1f, 0x06, 0x0e, 0x07, 0x00, 0xe1, 0x01, 0x01,&#10;+    0x07, 0x05, 0x09, 0xf7, 0xef, 0x15, 0xf7, 0x12, 0x05, 0x03, 0x04, 0x1d,&#10;+    0x04, 0x10, 0x12, 0x06, 0x05, 0x00, 0x08, 0x18, 0xd6, 0xf2, 0xfa, 0x07,&#10;+    0xf8, 0x12, 0x07, 0xfd, 0xdd, 0x00, 0x04, 0xfb, 0xf8, 0x09, 0xf3, 0x09,&#10;+    0xfb, 0xf0, 0xe8, 0x09, 0x27, 0xf5, 0xf8, 0x06, 0x01, 0x02, 0x0e, 0xf6,&#10;+    0x1f, 0xfa, 0x29, 0xf8, 0xd6, 0x01, 0x22, 0xf8, 0x1d, 0xe3, 0x1a, 0x39,&#10;+    0x0a, 0x0d, 0x19, 0xf5, 0x12, 0xfb, 0x1d, 0x2a, 0x03, 0xf6, 0x0c, 0xf2,&#10;+    0xfd, 0xec, 0x18, 0x13, 0xfe, 0x1a, 0xe8, 0xdd, 0x01, 0xf8, 0x30, 0x01,&#10;+    0xf8, 0xfe, 0xe4, 0xe7, 0xff, 0xeb, 0x23, 0xfa, 0x2c, 0xf0, 0xfc, 0xe7,&#10;+    0x0a, 0xf8, 0x18, 0x10, 0x23, 0x01, 0xfa, 0xe8, 0xf1, 0xfa, 0x1d, 0x0e,&#10;+    0x17, 0xe7, 0xe4, 0xf5, 0xf9, 0x0c, 0x17, 0x0c, 0x13, 0xe8, 0xe1, 0x17,&#10;+    0x19, 0x05, 0x0b, 0x0f, 0x23, 0xed, 0xff, 0xfe, 0xe0, 0x14, 0x16, 0x00,&#10;+    0x0d, 0x1c, 0x0b, 0xf5, 0xfb, 0x18, 0xee, 0xff, 0xff, 0xf3, 0x18, 0x0c,&#10;+    0x05, 0xfa, 0xf6, 0xfe, 0xfe, 0xf8, 0xf8, 0x09, 0xef, 0xf8, 0x0e, 0xf0,&#10;+    0x00, 0xf8, 0x0c, 0xf8, 0xf6, 0x07, 0x16, 0x11, 0xf8, 0xea, 0xff, 0xff,&#10;+    0x01, 0x20, 0x07, 0x08, 0xfd, 0x1c, 0xfc, 0x06, 0xed, 0x0d, 0x08, 0x15,&#10;+    0xf0, 0x25, 0x01, 0x1b, 0x00, 0x02, 0xfe, 0x01, 0x05, 0x01, 0xfd, 0xf1,&#10;+    0xe5, 0x0c, 0xe4, 0xe1, 0xf0, 0xfa, 0xee, 0x0e, 0x35, 0xee, 0x15, 0xef,&#10;+    0x0a, 0xf9, 0x01, 0xf5, 0x1f, 0x05, 0x1f, 0x0d, 0xe1, 0xf4, 0xff, 0xf5,&#10;+    0x23, 0x02, 0x18, 0x30, 0xfc, 0xf0, 0x0d, 0x04, 0x0d, 0x06, 0x29, 0x1d,&#10;+    0xf9, 0x08, 0x06, 0xe5, 0x13, 0xfd, 0x0d, 0x26, 0xef, 0x09, 0xdc, 0xf2,&#10;+    0x05, 0xdf, 0x0c, 0xf6, 0xf3, 0xd9, 0xf8, 0x08, 0xef, 0xeb, 0x0f, 0xf9,&#10;+    0x3a, 0x03, 0xff, 0xe0, 0xf7, 0xf0, 0x15, 0x12, 0x41, 0x0b, 0xf1, 0x04,&#10;+    0x04, 0xe2, 0x0e, 0x0b, 0x2c, 0x03, 0xea, 0x02, 0xfb, 0xe7, 0x08, 0xe9,&#10;+    0x22, 0xf3, 0xf2, 0x1c, 0xfa, 0xf3, 0x11, 0x04, 0x1f, 0xf5, 0x02, 0x0f,&#10;+    0x1a, 0x1f, 0x24, 0x0b, 0x06, 0x1f, 0xf3, 0x06, 0x00, 0x02, 0xe8, 0xf6,&#10;+    0xf4, 0xe8, 0x07, 0x2e, 0xfb, 0xf8, 0x10, 0x09, 0xf0, 0x0e, 0xff, 0xfe,&#10;+    0x1c, 0x14, 0x17, 0x06, 0xe2, 0xf1, 0xfa, 0x01, 0x11, 0x13, 0x12, 0x29,&#10;+    0xf1, 0x0f, 0x1f, 0xfa, 0xfd, 0xfd, 0x02, 0x07, 0x0e, 0xfb, 0x0e, 0x04,&#10;+    0x01, 0x01, 0xed, 0xfe, 0xde, 0xfd, 0x08, 0xef, 0xf6, 0x0a, 0xff, 0x0f,&#10;+    0xe7, 0xf2, 0x0f, 0x02, 0xea, 0x10, 0xf9, 0xec, 0xfd, 0x09, 0xea, 0x1f,&#10;+    0x46, 0xdd, 0xe2, 0xf7, 0x08, 0xf5, 0xf7, 0xe9, 0x33, 0xfb, 0x2f, 0xf6,&#10;+    0xb5, 0x1d, 0x15, 0xeb, 0x11, 0xf7, 0x2a, 0x2e, 0x08, 0x1d, 0xf4, 0xfb,&#10;+    0x15, 0xfa, 0x22, 0x34, 0xff, 0x06, 0xf6, 0xfd, 0xfa, 0xf9, 0x03, 0xf5,&#10;+    0xf4, 0xf4, 0xd5, 0xea, 0x01, 0x08, 0x22, 0xf1, 0xf2, 0x06, 0xd1, 0xe5,&#10;+    0x0c, 0xef, 0x12, 0x03, 0x08, 0x02, 0xf7, 0x05, 0x1b, 0x07, 0x39, 0x34,&#10;+    0x21, 0xe2, 0xe3, 0x0b, 0x0c, 0xf6, 0x29, 0xf7, 0x24, 0x0a, 0xfc, 0xff,&#10;+    0x1a, 0xfd, 0x05, 0xff, 0xff, 0x0e, 0x0a, 0x1a, 0x09, 0xfb, 0x15, 0x04,&#10;+    0x03, 0xf7, 0xfe, 0x00, 0xfc, 0xfb, 0x11, 0xfa, 0x1d, 0x0e, 0x06, 0xed,&#10;+    0xfc, 0x23, 0xd8, 0xf2, 0x04, 0xe5, 0x0f, 0x16, 0x29, 0xfe, 0xf5, 0xec,&#10;+    0xe2, 0x0e, 0xeb, 0x09, 0x1d, 0x11, 0x05, 0x11, 0xe4, 0x29, 0x12, 0x02,&#10;+    0x12, 0x19, 0x0e, 0x1a, 0xee, 0xf9, 0x05, 0x09, 0xf5, 0xfd, 0x05, 0x04,&#10;+    0xe4, 0xf1, 0x17, 0x01, 0xf2, 0xfe, 0x0b, 0xf4, 0x0d, 0x04, 0x06, 0xfe,&#10;+    0xff, 0xec, 0xe9, 0x00, 0xff, 0x03, 0x03, 0xfd, 0xf1, 0x15, 0xfc, 0xf3,&#10;+    0xff, 0xfe, 0x09, 0xee, 0x3c, 0x01, 0xec, 0x02, 0xf0, 0xf6, 0x20, 0xeb,&#10;+    0x16, 0x07, 0x32, 0xf3, 0xce, 0xf0, 0x02, 0xd4, 0x11, 0xe6, 0x28, 0x0e,&#10;+    0xe3, 0x21, 0xee, 0xce, 0x1e, 0xd9, 0x23, 0x26, 0x06, 0xfa, 0xf9, 0xf1,&#10;+    0x01, 0xe6, 0x0b, 0x07, 0xdc, 0x21, 0xbc, 0xe3, 0xef, 0xf8, 0x12, 0xfc,&#10;+    0xe6, 0xfe, 0xf5, 0xd4, 0x15, 0x0a, 0x00, 0x13, 0xfc, 0xec, 0xf3, 0xd6,&#10;+    0x1a, 0xe3, 0x21, 0x36, 0x2a, 0x03, 0xe9, 0xe3, 0xff, 0x00, 0x13, 0x1c,&#10;+    0x0e, 0x20, 0xe5, 0xf5, 0x24, 0x0b, 0x20, 0x14, 0x13, 0xf8, 0x04, 0x1b,&#10;+    0x2f, 0x0a, 0x15, 0x00, 0xf4, 0x1a, 0x11, 0x0d, 0x03, 0x18, 0x0f, 0x18,&#10;+    0x04, 0x1f, 0xfb, 0xf2, 0x1f, 0x15, 0x03, 0xfb, 0x0b, 0x17, 0xfb, 0x0b,&#10;+    0x1b, 0x1f, 0xf4, 0x07, 0xf9, 0xf9, 0xf8, 0xf4, 0x14, 0x0f, 0xf6, 0xfe,&#10;+    0xdd, 0x0b, 0xff, 0x01, 0x18, 0x04, 0x1b, 0x0a, 0xed, 0xe7, 0xf9, 0x16,&#10;+    0x02, 0x01, 0x00, 0xf7, 0xf1, 0x07, 0xf0, 0x06, 0xf8, 0x0b, 0x02, 0xf3,&#10;+    0xff, 0x20, 0xfd, 0x01, 0x04, 0xf5, 0xd9, 0xf4, 0xf4, 0xf2, 0xe8, 0xff,&#10;+    0x04, 0x00, 0xf0, 0xe2, 0xfe, 0xed, 0x1b, 0xef, 0x20, 0xfa, 0xfb, 0xf4,&#10;+    0x02, 0x18, 0x07, 0xfb, 0xef, 0xe4, 0x08, 0x0d, 0xe1, 0x0e, 0x25, 0xc6,&#10;+    0xfd, 0x0c, 0x1c, 0x0b, 0xf0, 0x01, 0x1c, 0xd4, 0x11, 0xf5, 0x1b, 0x09,&#10;+    0xfb, 0xda, 0x13, 0xe3, 0xf9, 0x10, 0x14, 0xf0, 0xf0, 0xfd, 0x1f, 0xcf,&#10;+    0xf4, 0xe4, 0xfb, 0x0e, 0x0a, 0x11, 0xed, 0xdc, 0xfc, 0xe6, 0xf7, 0xfc,&#10;+    0x13, 0xe1, 0x0b, 0xe4, 0x04, 0x11, 0xee, 0x21, 0x14, 0xe1, 0x07, 0xe4,&#10;+    0xfb, 0x08, 0x03, 0x2b, 0x27, 0xf6, 0x0d, 0x02, 0x1b, 0x09, 0x09, 0xf8,&#10;+    0x14, 0x19, 0x0f, 0x0b, 0x01, 0x10, 0x09, 0x12, 0x03, 0xf5, 0x18, 0xf3,&#10;+    0xfb, 0xf5, 0x02, 0x0e, 0x0d, 0x00, 0x07, 0xfc, 0x18, 0x25, 0x0b, 0xf0,&#10;+    0xf9, 0xe6, 0x08, 0x01, 0x24, 0x14, 0xfa, 0xed, 0xe5, 0x1f, 0x09, 0xfe,&#10;+    0x08, 0xee, 0x1a, 0x1a, 0x05, 0x00, 0xff, 0x0c, 0xfe, 0xf9, 0x11, 0x11,&#10;+    0xea, 0xfe, 0x08, 0xf9, 0xf0, 0xe4, 0x01, 0x0d, 0xf1, 0x00, 0x0b, 0xea,&#10;+    0x19, 0xea, 0xf3, 0xf8, 0x08, 0x12, 0x1c, 0x1f, 0xfb, 0xef, 0xf0, 0xf2,&#10;+    0x14, 0xe1, 0x03, 0xfa, 0xf9, 0xda, 0xe9, 0xfc, 0xf3, 0xff, 0x12, 0x04,&#10;+    0xf7, 0xfc, 0x17, 0x0f, 0xfc, 0x29, 0x03, 0xe5, 0xf2, 0xee, 0x1e, 0xfa,&#10;+    0x04, 0xed, 0x25, 0xf4, 0xe1, 0x15, 0x10, 0x1e, 0xef, 0x1c, 0x04, 0xde,&#10;+    0xe5, 0x08, 0x21, 0xfd, 0xfd, 0xea, 0x03, 0xca, 0xda, 0x26, 0x00, 0x0a,&#10;+    0xfd, 0x05, 0xf0, 0xd4, 0xe1, 0x1a, 0xe4, 0xf5, 0x07, 0xe7, 0xfa, 0xdf,&#10;+    0xd4, 0x03, 0xf0, 0x10, 0x15, 0x0c, 0xf4, 0xed, 0xe3, 0xfb, 0x0f, 0x1e,&#10;+    0x16, 0x09, 0x00, 0xec, 0xea, 0x13, 0x16, 0x0b, 0x01, 0xfb, 0xff, 0x00,&#10;+    0xfb, 0x07, 0x13, 0x08, 0xf4, 0xe4, 0x12, 0x00, 0xfb, 0xfa, 0xfc, 0x08,&#10;+    0xeb, 0x19, 0x02, 0x1c, 0xe8, 0x26, 0xf3, 0x10, 0x09, 0x0f, 0x19, 0x02,&#10;+    0xfb, 0xec, 0xf7, 0xe2, 0xfb, 0xfa, 0x11, 0xf3, 0x0b, 0x08, 0xff, 0xd9,&#10;+    0xf8, 0x12, 0x18, 0x06, 0x07, 0x22, 0xff, 0x19, 0xf5, 0x0b, 0x0a, 0x13,&#10;+    0xf2, 0xfa, 0x02, 0x21, 0xeb, 0x11, 0x17, 0x17, 0xec, 0xe1, 0x0e, 0xf7,&#10;+    0xe8, 0xd8, 0x0e, 0x01, 0xf1, 0xed, 0xed, 0xf0, 0x09, 0xf7, 0xe7, 0xfd,&#10;+    0xf0, 0xf9, 0xdb, 0xee, 0xdc, 0xfb, 0xf8, 0x0a, 0xf5, 0x0b, 0xd4, 0xd7,&#10;+    0x08, 0x06, 0x18, 0x06, 0x0c, 0x13, 0xfd, 0x09, 0x13, 0x26, 0x12, 0xf4,&#10;+    0xef, 0x00, 0xf5, 0x28, 0x18, 0xfe, 0x04, 0x0e, 0x21, 0x1a, 0x0a, 0x1e,&#10;+    0x09, 0xf0, 0x0d, 0x0f, 0xec, 0xf3, 0x17, 0x22, 0x00, 0xec, 0x0e, 0x01,&#10;+    0xe9, 0x08, 0x09, 0xf2, 0xf2, 0x08, 0xf0, 0x0b, 0xd9, 0x09, 0x14, 0xf5,&#10;+    0xf6, 0x04, 0x19, 0xf4, 0x11, 0xe9, 0xf2, 0x0d, 0x20, 0x17, 0x0a, 0x05,&#10;+    0x0c, 0x04, 0x01, 0xfd, 0xf4, 0xfb, 0x1b, 0x0c, 0xf2, 0x0b, 0xff, 0xfe,&#10;+    0x01, 0xd8, 0xfa, 0x0e, 0xf5, 0x14, 0xf9, 0x01, 0x04, 0xf8, 0xfa, 0x02,&#10;+    0xe8, 0xf9, 0xf9, 0xea, 0xf1, 0x07, 0xff, 0x1e, 0x01, 0x0b, 0xf7, 0x0a,&#10;+    0xf7, 0x0c, 0xfd, 0xec, 0xf3, 0x05, 0xf8, 0xda, 0x0b, 0x15, 0xf6, 0xee,&#10;+    0xf9, 0x10, 0xfa, 0xfe, 0x08, 0xf0, 0xe6, 0xec, 0x05, 0xff, 0x15, 0x19,&#10;+    0x1f, 0x11, 0xfc, 0x09, 0x08, 0x01, 0x06, 0xfe, 0x04, 0x08, 0xfb, 0xfb,&#10;+    0x08, 0xf4, 0xf6, 0x28, 0x10, 0xf9, 0x28, 0x0b, 0xf8, 0x0d, 0x01, 0x00,&#10;+    0xff, 0x02, 0x05, 0x08, 0xea, 0xe9, 0xf4, 0xf6, 0x01, 0xea, 0xdf, 0x1f,&#10;+    0xfe, 0x0a, 0xf9, 0xf7, 0x0c, 0x1b, 0x06, 0xed, 0xf6, 0xf2, 0x03, 0x03,&#10;+    0xfd, 0x04, 0xf5, 0x10, 0x0a, 0x0b, 0xf4, 0xf8, 0xf1, 0xe7, 0x05, 0xfe,&#10;+    0xe7, 0x0b, 0xf1, 0xec, 0xf4, 0xec, 0x06, 0xee, 0xde, 0x05, 0x1b, 0xfe,&#10;+    0x13, 0xf3, 0xd9, 0xea, 0x04, 0x10, 0x05, 0xed, 0x15, 0x02, 0x0b, 0x10,&#10;+    0xfa, 0x02, 0x05, 0x0b, 0x02, 0x07, 0xfc, 0xf5, 0x15, 0x14, 0x05, 0xf7,&#10;+    0x0c, 0xfe, 0xf6, 0xf4, 0xfa, 0x06, 0xfc, 0x13, 0xdc, 0xe4, 0x09, 0xfa,&#10;+    0x02, 0x23, 0xec, 0x06, 0x11, 0x13, 0xf8, 0xfa, 0x27, 0x28, 0x0b, 0x23,&#10;+    0xec, 0xf1, 0x09, 0x17, 0x0f, 0x13, 0xff, 0xf2, 0xfc, 0x0a, 0xf5, 0x0d,&#10;+    0x03, 0x26, 0x01, 0x0f, 0xfe, 0xf1, 0xfb, 0xe6, 0xf0, 0x02, 0xf2, 0xff,&#10;+    0x02, 0x11, 0xff, 0xfd, 0x1c, 0x02, 0x0b, 0xf6, 0x14, 0x0c, 0x0b, 0x21,&#10;+    0x28, 0xf0, 0x11, 0x05, 0x06, 0xed, 0xf9, 0x0a, 0xf2, 0xef, 0xf8, 0xf1,&#10;+    0xfe, 0x0d, 0xf9, 0xf7, 0xea, 0x00, 0x08, 0xdb, 0x02, 0x0f, 0xfe, 0x04,&#10;+    0xef, 0x20, 0x16, 0x01, 0xe8, 0xed, 0xe4, 0x22, 0xf6, 0x19, 0x00, 0x04,&#10;+    0x01, 0x13, 0xeb, 0x0d, 0xec, 0x01, 0x08, 0x05, 0x0c, 0x0e, 0xfe, 0x02,&#10;+    0x12, 0xf7, 0x27, 0xf9, 0xfd, 0x18, 0xfe, 0x24, 0xf7, 0x13, 0xed, 0x1e,&#10;+    0x09, 0xff, 0xd8, 0xf4, 0x12, 0xf8, 0x04, 0x0c, 0x1c, 0x11, 0xfd, 0x17,&#10;+    0x1d, 0x01, 0x13, 0xee, 0x11, 0xf3, 0xf8, 0x06, 0xf6, 0x16, 0xfe, 0x15,&#10;+    0x16, 0xdc, 0x1f, 0x00, 0x25, 0xee, 0xff, 0xf7, 0xf6, 0x02, 0xdd, 0x15,&#10;+    0xf1, 0x14, 0x08, 0xe8, 0xe5, 0x21, 0xea, 0xf0, 0x1a, 0x07, 0xea, 0x08,&#10;+    0xea, 0xe4, 0x1e, 0x00, 0x13, 0x17, 0xec, 0x11, 0xd6, 0x11, 0x18, 0x17,&#10;+    0x04, 0x15, 0x03, 0x3a, 0xd6, 0x02, 0x07, 0x04, 0xe6, 0xe5, 0xfe, 0x0e,&#10;+    0xff, 0xed, 0xfc, 0xfb, 0xff, 0x1c, 0x06, 0x0a, 0xfb, 0xf9, 0xea, 0x1a,&#10;+    0x21, 0xf5, 0x04, 0x06, 0x0a, 0xe3, 0x16, 0xea, 0x04, 0xe2, 0xf9, 0xf9,&#10;+    0xe6, 0xfb, 0x0f, 0xfc, 0x06, 0xfb, 0x10, 0x07, 0x07, 0x13, 0x07, 0xfc,&#10;+    0x16, 0xef, 0x07, 0xdc, 0x12, 0x1f, 0x08, 0xf4, 0xe9, 0x14, 0x06, 0xf7,&#10;+    0xf1, 0x0c, 0x01, 0x0c, 0xe6, 0x04, 0xf3, 0xf2, 0xe5, 0xf3, 0xef, 0x1d,&#10;+    0xf6, 0x20, 0x07, 0xfe, 0xf4, 0x05, 0xee, 0x10, 0xfd, 0x0e, 0x0b, 0x02,&#10;+    0x0d, 0xd8, 0x07, 0xfb, 0x26, 0x0a, 0x1c, 0x21, 0x06, 0x1f, 0xf4, 0x06,&#10;+    0x37, 0x18, 0xfa, 0x16, 0x1e, 0x24, 0xfb, 0xf0, 0x12, 0xf9, 0x02, 0x09,&#10;+    0x17, 0x16, 0xf3, 0xf9, 0x17, 0xf2, 0x02, 0x0a, 0x2d, 0xe7, 0xe3, 0x25,&#10;+    0xf0, 0xf9, 0x0f, 0xdd, 0x15, 0xe6, 0x04, 0xfc, 0xf1, 0x17, 0x0a, 0xea,&#10;+    0x24, 0x07, 0xf1, 0x11, 0x13, 0x29, 0xf4, 0xc5, 0xfb, 0x07, 0xef, 0x13,&#10;+    0x0b, 0xe1, 0xf1, 0xeb, 0xf8, 0x1b, 0x09, 0x08, 0x1f, 0x15, 0xf2, 0x05,&#10;+    0x02, 0xdd, 0x09, 0x0f, 0x16, 0x10, 0x01, 0x30, 0xf2, 0xe0, 0x27, 0xfe,&#10;+    0xf1, 0x0e, 0x0e, 0x07, 0xe6, 0x07, 0x0b, 0x18, 0xfe, 0x0f, 0x01, 0x07,&#10;+    0xf4, 0x07, 0x10, 0xe7, 0xfb, 0xf3, 0xf7, 0x0b, 0xf9, 0x15, 0x18, 0x25,&#10;+    0x0c, 0x14, 0x02, 0x08, 0x0a, 0x0f, 0x10, 0xec, 0xee, 0x1a, 0x03, 0x14,&#10;+    0x0f, 0xfa, 0x25, 0xff, 0x18, 0x0d, 0x0b, 0xea, 0x1f, 0x28, 0x10, 0x0c,&#10;+    0xe7, 0xee, 0xf7, 0xfa, 0x03, 0x15, 0x0c, 0x1d, 0x01, 0x00, 0x12, 0xee,&#10;+    0x01, 0xf1, 0xf8, 0x0b, 0xf3, 0xfd, 0x04, 0xf8, 0x02, 0x1e, 0x0e, 0xf3,&#10;+    0x02, 0x10, 0xfd, 0x07, 0x0b, 0x09, 0x03, 0x10, 0x3e, 0x08, 0x0e, 0x0c,&#10;+    0xf4, 0xe7, 0xfd, 0x1c, 0x27, 0x1a, 0xed, 0xe1, 0x08, 0xdc, 0xd9, 0xf1,&#10;+    0x1e, 0x07, 0x12, 0xf1, 0x10, 0xfb, 0xc8, 0x08, 0x0f, 0x03, 0x1d, 0xdc,&#10;+    0x23, 0x04, 0xf9, 0x0a, 0xff, 0x08, 0x0e, 0xc9, 0x39, 0x0a, 0x01, 0x07,&#10;+    0xec, 0xe0, 0x05, 0xe8, 0x14, 0xd8, 0xe1, 0xfa, 0xd6, 0xf8, 0xed, 0xdb,&#10;+    0xff, 0x1d, 0xf5, 0x17, 0x0f, 0x1c, 0xdc, 0xed, 0xff, 0xff, 0x04, 0x13,&#10;+    0xf5, 0xe7, 0xd2, 0x12, 0xdb, 0xe1, 0x13, 0x11, 0x23, 0x0e, 0xf9, 0x31,&#10;+    0xdc, 0xef, 0x07, 0x0a, 0x20, 0xf2, 0xf9, 0x13, 0xff, 0x1c, 0x2a, 0xdf,&#10;+    0xdb, 0xe7, 0x11, 0xf2, 0xfd, 0xfb, 0x28, 0x00, 0x15, 0x03, 0x02, 0x20,&#10;+    0x07, 0xf7, 0x19, 0x13, 0x13, 0xf6, 0x09, 0xfe, 0xfd, 0x20, 0x14, 0xf5,&#10;+    0xf5, 0xfc, 0x14, 0x0e, 0x17, 0xfe, 0x15, 0x04, 0xf9, 0xf6, 0x1d, 0xf6,&#10;+    0x1b, 0xe4, 0xee, 0xfd, 0x00, 0xe9, 0xee, 0xce, 0x0f, 0x20, 0x05, 0x02,&#10;+    0x0d, 0x06, 0x05, 0xf8, 0xef, 0xdf, 0x16, 0x17, 0xe6, 0xf1, 0x10, 0xf3,&#10;+    0x06, 0x04, 0xdb, 0xfb, 0xe7, 0xf8, 0x02, 0x11, 0xff, 0x0d, 0x0a, 0xfa,&#10;+    0x27, 0x0a, 0xfc, 0xe8, 0x11, 0x17, 0xf0, 0x0d, 0x0d, 0xee, 0xdf, 0xdd,&#10;+    0xf1, 0x15, 0xd6, 0xf7, 0x00, 0xef, 0x2e, 0xe6, 0x24, 0xfd, 0xd5, 0x04,&#10;+    0xf0, 0x08, 0x08, 0xed, 0x22, 0x07, 0xe1, 0x09, 0xd0, 0x0b, 0x18, 0xe6,&#10;+    0x3f, 0x0a, 0xe5, 0xe2, 0xf9, 0x08, 0x02, 0xd6, 0x13, 0x15, 0xbd, 0x00,&#10;+    0x0e, 0xf8, 0xe2, 0xca, 0xec, 0x0e, 0xe6, 0xef, 0x15, 0x11, 0xcb, 0xdf,&#10;+    0xf9, 0x03, 0x22, 0x10, 0xfb, 0xf9, 0xe5, 0x08, 0xe1, 0x11, 0x10, 0xfc,&#10;+    0xfa, 0x00, 0xf8, 0x30, 0xe5, 0x08, 0x14, 0xe8, 0x12, 0xe2, 0x04, 0x19,&#10;+    0x0b, 0xfa, 0x33, 0xf3, 0xec, 0xfe, 0xf8, 0x25, 0xf8, 0x21, 0x28, 0xef,&#10;+    0x00, 0xde, 0xff, 0x2b, 0x03, 0xfc, 0x10, 0x0c, 0xcf, 0xfd, 0x19, 0x0a,&#10;+    0x0c, 0xf2, 0xf7, 0x0c, 0xfd, 0x02, 0x1c, 0xdf, 0x26, 0x0d, 0xf0, 0x0b,&#10;+    0xce, 0x15, 0xfb, 0xec, 0x27, 0xf6, 0xf9, 0xe5, 0xe2, 0xfb, 0xfd, 0xd8,&#10;+    0x28, 0xec, 0xe9, 0xf2, 0xca, 0x09, 0x02, 0x06, 0x0c, 0xfa, 0x05, 0x01,&#10;+    0xd5, 0x0a, 0x02, 0xfb, 0x04, 0x17, 0xdd, 0xfe, 0xeb, 0xf1, 0x09, 0x10,&#10;+    0x12, 0xff, 0x00, 0xe0, 0x26, 0xf7, 0xed, 0xf4, 0x00, 0xf2, 0xfa, 0x07,&#10;+    0x02, 0xf5, 0x06, 0xe8, 0x03, 0xfd, 0xdc, 0xf2, 0xc2, 0xff, 0x0b, 0xd6,&#10;+    0x25, 0x04, 0xe9, 0xf0, 0xd9, 0x08, 0x09, 0xc5, 0x23, 0x12, 0xf6, 0x13,&#10;+    0x11, 0xf3, 0x18, 0xf0, 0x34, 0xfe, 0xfe, 0xed, 0xea, 0x02, 0x17, 0xdc,&#10;+    0x1b, 0x1b, 0xea, 0xfe, 0xea, 0xfe, 0xf2, 0xc4, 0xfd, 0x04, 0xe9, 0x0d,&#10;+    0x0d, 0x09, 0xca, 0xd4, 0xe1, 0x04, 0x1e, 0xff, 0x0f, 0xef, 0xd6, 0x0f,&#10;+    0xd5, 0xf8, 0x26, 0xd6, 0x33, 0xe8, 0xf5, 0x3b, 0xf1, 0xe8, 0x39, 0xe8,&#10;+    0x08, 0xe5, 0x01, 0x02, 0x04, 0xf6, 0x19, 0x0a, 0xd0, 0xeb, 0x0b, 0x15,&#10;+    0xf7, 0x0e, 0x23, 0xf6, 0xf4, 0xd8, 0xf4, 0x17, 0x23, 0x25, 0x14, 0x01,&#10;+    0xd7, 0xfd, 0xf9, 0x1f, 0x1b, 0x11, 0x0a, 0x18, 0xf5, 0xf5, 0x0f, 0xe0,&#10;+    0x2e, 0x01, 0xe5, 0xdb, 0xe2, 0xf2, 0x14, 0xfa, 0x2a, 0x00, 0xe2, 0xea,&#10;+    0xfd, 0x0e, 0xfc, 0xc1, 0x35, 0x08, 0xf6, 0xf9, 0xec, 0x00, 0x06, 0x00,&#10;+    0x0b, 0xf6, 0x01, 0xfe, 0xea, 0x0b, 0x08, 0x05, 0xe4, 0xea, 0xd7, 0xfd,&#10;+    0xee, 0xf3, 0x0c, 0x0c, 0x0d, 0x02, 0xfd, 0xee, 0x17, 0x10, 0x13, 0xfd,&#10;+    0x07, 0x03, 0xf8, 0x0c, 0xd4, 0xed, 0xfe, 0x07, 0xf4, 0xee, 0xf4, 0x03,&#10;+    0xc2, 0x18, 0x2c, 0xd1, 0x33, 0xd8, 0xdb, 0xfa, 0xed, 0x10, 0x1c, 0xe3,&#10;+    0x37, 0x0a, 0xea, 0xfe, 0xf6, 0xef, 0x20, 0xed, 0x32, 0xf7, 0xf5, 0xf3,&#10;+    0xca, 0xfd, 0x0a, 0xcf, 0x0d, 0x10, 0xde, 0x07, 0x18, 0x10, 0xf0, 0xd6,&#10;+    0x0c, 0x04, 0xeb, 0x1a, 0xf9, 0x08, 0xc4, 0xcb, 0xe4, 0x0b, 0x19, 0xfc,&#10;+    0x29, 0xf6, 0xec, 0x07, 0xf3, 0xed, 0x2b, 0xe9, 0xfa, 0x02, 0xec, 0x2b,&#10;+    0xf0, 0xf2, 0x2d, 0xe8, 0xed, 0x00, 0x12, 0x13, 0xed, 0x1a, 0x3d, 0xf0,&#10;+    0x05, 0x04, 0xfc, 0x13, 0x10, 0x01, 0x40, 0xf2, 0x06, 0x02, 0xf9, 0x22,&#10;+    0x24, 0xff, 0x18, 0x00, 0xeb, 0xe8, 0x14, 0xf9, 0x25, 0xe0, 0xff, 0x03,&#10;+    0xe5, 0xfd, 0x08, 0xea, 0x2e, 0x0b, 0x05, 0xe7, 0xde, 0xe4, 0xf5, 0xea,&#10;+    0x3a, 0xf4, 0xf4, 0xe7, 0xed, 0xec, 0xf8, 0xee, 0x30, 0x0a, 0xdb, 0x05,&#10;+    0xf7, 0x16, 0xff, 0xf7, 0xfa, 0x1f, 0xef, 0xe4, 0xce, 0xf8, 0x13, 0x04,&#10;+    0xf9, 0x01, 0xe1, 0x03, 0xf9, 0xf9, 0x08, 0x04, 0xfa, 0xe4, 0xe7, 0xf7,&#10;+    0x28, 0xfd, 0xfd, 0x00, 0xfc, 0xfb, 0xef, 0x0a, 0xec, 0x0c, 0x0a, 0xd2,&#10;+    0x05, 0xfb, 0xcd, 0xfb, 0x9d, 0xea, 0x1c, 0xe5, 0x25, 0xe8, 0xea, 0x0b,&#10;+    0xf0, 0xf3, 0x0d, 0xab, 0x49, 0x0e, 0xeb, 0x00, 0xe2, 0x03, 0x29, 0xe0,&#10;+    0x3d, 0x06, 0xf7, 0xf8, 0xcf, 0x0c, 0x1a, 0xd6, 0x1f, 0xef, 0xfd, 0xff,&#10;+    0xef, 0x0c, 0xdb, 0xe0, 0x20, 0x06, 0xdf, 0x1a, 0xe7, 0xfc, 0xb2, 0xd1,&#10;+    0xdf, 0x13, 0x07, 0x1f, 0x0c, 0xf7, 0xde, 0x0a, 0xdb, 0xdf, 0x1a, 0xf5,&#10;+    0x29, 0x0d, 0xeb, 0x2c, 0xcf, 0x0e, 0x26, 0xfe, 0xef, 0x04, 0xf5, 0x14,&#10;+    0x09, 0x13, 0x34, 0xff, 0xfe, 0x0e, 0x06, 0x0e, 0x10, 0xf9, 0x2a, 0x0b,&#10;+    0xe6, 0xfe, 0xf1, 0x1a, 0x36, 0x29, 0x29, 0x05, 0x05, 0xd8, 0x14, 0x12,&#10;+    0x26, 0x0b, 0x18, 0xff, 0xd7, 0xdf, 0x0f, 0xed, 0x31, 0xf7, 0xfc, 0xec,&#10;+    0x0b, 0xef, 0x0c, 0xd2, 0x30, 0xf9, 0x04, 0xfe, 0xef, 0xe4, 0xfb, 0xd1,&#10;+    0x32, 0xe5, 0xee, 0xf0, 0x0c, 0xe6, 0x13, 0xed, 0x1e, 0x0b, 0xe4, 0xe0,&#10;+    0xfa, 0xf4, 0x14, 0xf4, 0x18, 0xf7, 0xd9, 0xf6, 0xed, 0xea, 0xfc, 0x06,&#10;+    0xfc, 0xf5, 0xed, 0xeb, 0x05, 0x03, 0x1b, 0x0b, 0xff, 0x0b, 0xef, 0x01,&#10;+    0xf1, 0x16, 0x05, 0x00, 0xee, 0x0a, 0xdb, 0x10, 0xb4, 0x14, 0x0f, 0xe1,&#10;+    0x1c, 0xfd, 0xf0, 0xf8, 0xc3, 0x11, 0x17, 0xba, 0x47, 0x15, 0xe6, 0x01,&#10;+    0xea, 0xf1, 0x0c, 0x08, 0x4a, 0x15, 0xf0, 0xf7, 0xea, 0x00, 0xf5, 0xd4,&#10;+    0xf1, 0xff, 0xe0, 0x0c, 0xf4, 0x17, 0xd8, 0xea, 0x03, 0xff, 0xd5, 0x18,&#10;+    0xfb, 0x07, 0xc7, 0xc9, 0xdd, 0xf3, 0x15, 0x0d, 0x22, 0xea, 0xdb, 0x0a,&#10;+    0xd6, 0x09, 0x1d, 0xe5, 0x2d, 0x04, 0xfc, 0x35, 0xc6, 0x0e, 0x33, 0xf1,&#10;+    0xd7, 0xea, 0x01, 0x1b, 0x0e, 0x01, 0x2a, 0xff, 0xef, 0xf1, 0xf7, 0x0f,&#10;+    0xff, 0x00, 0x3b, 0xe8, 0x0a, 0xff, 0xf4, 0x0d, 0x1f, 0x04, 0x17, 0xf7,&#10;+    0xdf, 0xec, 0x12, 0x26, 0x36, 0x07, 0x0c, 0x06, 0xe7, 0xd6, 0x13, 0xe3,&#10;+    0x30, 0x09, 0x00, 0xf5, 0xe0, 0xf3, 0x11, 0xe2, 0x38, 0x0d, 0xf6, 0x05,&#10;+    0xec, 0x05, 0x00, 0xe5, 0x24, 0xef, 0xfe, 0xf8, 0x00, 0xd8, 0x18, 0xf1,&#10;+    0x26, 0x0b, 0xf2, 0xfc, 0xe0, 0xe4, 0x06, 0x0b, 0x1a, 0x05, 0xc6, 0xf6,&#10;+    0xe8, 0xde, 0xfe, 0x0c, 0x03, 0x09, 0xfe, 0xe2, 0x18, 0x1b, 0xfb, 0xf7,&#10;+    0x06, 0xf1, 0xfe, 0xf6, 0xef, 0x1b, 0x07, 0x0d, 0x01, 0x0a, 0xed, 0xf0,&#10;+    0xad, 0x1a, 0x17, 0xd6, 0x37, 0xfd, 0xd8, 0xec, 0xca, 0xf1, 0x15, 0xc4,&#10;+    0x33, 0xf1, 0xed, 0xf0, 0xe9, 0x15, 0x0d, 0xf2, 0x36, 0xde, 0xfd, 0x0e,&#10;+    0xfb, 0x10, 0x0f, 0xf6, 0xf9, 0x0c, 0xea, 0xf0, 0xe5, 0x0b, 0xee, 0xc1,&#10;+    0x10, 0xf4, 0xe8, 0x1f, 0xee, 0x00, 0xd0, 0xe4, 0xe7, 0x13, 0x07, 0x27,&#10;+    0x12, 0xea, 0xea, 0x0f, 0xea, 0xf4, 0x14, 0xee, 0xfe, 0x09, 0xfb, 0x31,&#10;+    0xdb, 0x1b, 0x1c, 0xe7, 0xef, 0xf5, 0xf7, 0x1a, 0x06, 0x01, 0x2c, 0xed,&#10;+    0xfb, 0x04, 0xfa, 0x07, 0x19, 0xec, 0x2b, 0x0d, 0xfc, 0xd8, 0xfc, 0x0f,&#10;+    0x1f, 0xfc, 0x2d, 0xf3, 0xc9, 0xda, 0x0a, 0xfe, 0x29, 0x00, 0xfa, 0x09,&#10;+    0xe8, 0xf6, 0x21, 0xf3, 0x4a, 0x1a, 0xf8, 0x00, 0xe7, 0xf0, 0x21, 0x01,&#10;+    0x22, 0xf3, 0x00, 0xe9, 0x06, 0xe3, 0x15, 0xd7, 0x3d, 0x0c, 0x07, 0xf1,&#10;+    0xf3, 0xec, 0x17, 0xdf, 0x29, 0x1b, 0xfd, 0xfe, 0xeb, 0xed, 0x17, 0xf6,&#10;+    0x23, 0x0a, 0xea, 0xee, 0xf9, 0xf3, 0x0f, 0x0c, 0xf8, 0xf5, 0xed, 0xe8,&#10;+    0x1c, 0x14, 0x07, 0x17, 0x0b, 0x0d, 0xed, 0xf7, 0xed, 0x10, 0x07, 0xd5,&#10;+    0xf2, 0x09, 0xd6, 0xf7, 0xb5, 0xf6, 0x19, 0xc9, 0x25, 0x15, 0xe8, 0xf5,&#10;+    0xc4, 0xf9, 0x2a, 0xb0, 0x39, 0x0e, 0x02, 0x11, 0xf0, 0xf7, 0x1d, 0xeb,&#10;+    0x39, 0x10, 0x02, 0x15, 0xe0, 0x08, 0x01, 0xee, 0x1c, 0x1e, 0x08, 0x04,&#10;+    0xf2, 0x02, 0xe8, 0xda, 0xfa, 0xfb, 0xe0, 0xfe, 0x05, 0x02, 0xd3, 0xca,&#10;+    0xf4, 0xec, 0x10, 0x16, 0x05, 0x0d, 0xd7, 0x09, 0xdc, 0xf6, 0x1e, 0xf8,&#10;+    0x10, 0xed, 0xf7, 0x27, 0xf5, 0x08, 0x28, 0xee, 0xec, 0xe0, 0xf8, 0x17,&#10;+    0xfb, 0x23, 0x2e, 0xf1, 0xfa, 0xf5, 0xfc, 0x1a, 0x10, 0xf7, 0x32, 0xfb,&#10;+    0xfb, 0xe8, 0xf1, 0x03, 0x24, 0xeb, 0x25, 0xf9, 0xca, 0xf1, 0xfe, 0x01,&#10;+    0x2e, 0x07, 0x18, 0x03, 0xe5, 0xea, 0x10, 0xfa, 0x3b, 0x07, 0x0f, 0x11,&#10;+    0x04, 0xf7, 0x1d, 0xf1, 0x24, 0xd9, 0x08, 0xef, 0x02, 0xdd, 0x07, 0xc8,&#10;+    0x2c, 0x0d, 0x06, 0xec, 0x17, 0xda, 0x21, 0xdf, 0x34, 0xd9, 0xfb, 0xf2,&#10;+    0xf4, 0xec, 0x0e, 0x0a, 0x0f, 0x0f, 0xdb, 0xf0, 0xfb, 0xe6, 0x0f, 0x00,&#10;+    0x04, 0xf9, 0x01, 0x05, 0x05, 0xfe, 0x08, 0xf3, 0x0e, 0xf2, 0xfb, 0x01,&#10;+    0xfd, 0x18, 0x1d, 0xf6, 0xee, 0x06, 0xcf, 0xfc, 0xae, 0x27, 0x21, 0xd2,&#10;+    0x33, 0x03, 0xe0, 0xe0, 0xc9, 0xfb, 0x3a, 0xbd, 0x4d, 0x04, 0xe8, 0xf5,&#10;+    0xe6, 0xeb, 0x19, 0xf2, 0x4b, 0x1d, 0xfc, 0xf7, 0xd9, 0xff, 0xfe, 0xea,&#10;+    0x0f, 0x04, 0x0e, 0x00, 0xed, 0x19, 0xe9, 0xe9, 0xff, 0x11, 0xef, 0x14,&#10;+    0x01, 0x17, 0xbc, 0xb5, 0xef, 0x0c, 0x22, 0x27, 0x0f, 0x01, 0xd4, 0x03,&#10;+    0xce, 0x01, 0x25, 0xff, 0xf9, 0xf0, 0x0a, 0x1c, 0xe5, 0x0f, 0x1c, 0xee,&#10;+    0xf4, 0xf1, 0xf4, 0x0c, 0x00, 0x08, 0x1c, 0xf4, 0xd5, 0xf1, 0xfc, 0x1f,&#10;+    0x11, 0x00, 0x18, 0x03, 0xf7, 0xe4, 0xff, 0x07, 0x09, 0x1a, 0x18, 0xff,&#10;+    0xea, 0xec, 0xfd, 0x13, 0x2b, 0xf8, 0x0c, 0xfa, 0xdf, 0xf6, 0x11, 0xda,&#10;+    0x2a, 0xdc, 0xfc, 0xff, 0xff, 0xec, 0x12, 0xe1, 0x37, 0xfd, 0xeb, 0xfe,&#10;+    0xea, 0xd1, 0x12, 0xfa, 0x28, 0x1a, 0x0d, 0xf0, 0xf7, 0xe0, 0x0c, 0xeb,&#10;+    0x35, 0x14, 0xeb, 0x00, 0xeb, 0xe7, 0x1b, 0xfc, 0x09, 0x00, 0xf2, 0x04,&#10;+    0xf9, 0xe5, 0x1a, 0x0e, 0x08, 0x12, 0xf8, 0xfe, 0x09, 0x0f, 0x0d, 0xea,&#10;+    0x03, 0xe1, 0xfe, 0xf2, 0xec, 0x0d, 0x02, 0xdb, 0x04, 0x1d, 0xd4, 0x01,&#10;+    0xca, 0x13, 0x29, 0xca, 0x28, 0x04, 0xe2, 0xf1, 0xdb, 0x0b, 0x2c, 0xcd,&#10;+    0x44, 0x00, 0xe7, 0xf4, 0xd0, 0x12, 0x15, 0xff, 0x42, 0x11, 0x05, 0xfd,&#10;+    0xd9, 0x11, 0x1c, 0xf4, 0x15, 0xec, 0xf2, 0x24, 0xd6, 0x1d, 0xec, 0xda,&#10;+    0xf5, 0xec, 0xe5, 0x22, 0xf2, 0x0b, 0xbd, 0xd0, 0xeb, 0x05, 0x07, 0x1b,&#10;+    0x01, 0xed, 0xf5, 0x02, 0xcf, 0x08, 0x15, 0xfd, 0x1c, 0xe5, 0x04, 0x19,&#10;+    0xc7, 0x25, 0x22, 0xf3, 0xde, 0xfb, 0xfb, 0x20, 0xf6, 0xeb, 0x25, 0xfe,&#10;+    0xf5, 0x08, 0xf5, 0x17, 0x0e, 0x04, 0x1c, 0xf9, 0xee, 0xec, 0xe1, 0x06,&#10;+    0x12, 0xff, 0x2a, 0x13, 0xed, 0xfe, 0x05, 0x18, 0x25, 0x20, 0x09, 0x13,&#10;+    0xea, 0xd7, 0x05, 0x06, 0x33, 0x25, 0xff, 0x0a, 0xf0, 0xea, 0x17, 0xe1,&#10;+    0x30, 0xfa, 0x0d, 0x0a, 0x04, 0x00, 0x0e, 0xe9, 0x16, 0x20, 0x0d, 0x02,&#10;+    0xe8, 0xed, 0x07, 0xe8, 0x3c, 0xf1, 0xd9, 0xfa, 0xe1, 0xed, 0x18, 0xfc,&#10;+    0xf0, 0x09, 0xe3, 0x05, 0xfe, 0xd1, 0x0b, 0x0e, 0xf5, 0x25, 0xfd, 0xfb,&#10;+    0x30, 0x1e, 0x08, 0xfc, 0x0c, 0x21, 0xea, 0xfc, 0xe5, 0x1e, 0x16, 0xf5,&#10;+    0xf4, 0xfc, 0xf0, 0xea, 0xc4, 0x21, 0x27, 0xe9, 0x2b, 0xdb, 0xdb, 0xec,&#10;+    0xe5, 0xfe, 0x37, 0xe2, 0x46, 0x25, 0xfa, 0xec, 0xe4, 0xf3, 0x19, 0xf2,&#10;+    0x4c, 0x06, 0x00, 0xfb, 0xeb, 0x10, 0x10, 0xf7, 0x2a, 0xf8, 0xe9, 0x18,&#10;+    0xee, 0x21, 0xe8, 0xd5, 0xf4, 0x0a, 0xed, 0x24, 0xfe, 0xf9, 0xb2, 0xbc,&#10;+    0xf3, 0x1d, 0x00, 0x2f, 0x07, 0x08, 0xe1, 0xf1, 0xed, 0x27, 0x27, 0xfe,&#10;+    0x22, 0xfd, 0x02, 0x20, 0xd8, 0x05, 0x25, 0xec, 0xf1, 0xff, 0x0a, 0x0f,&#10;+    0xe6, 0xfe, 0x46, 0xfd, 0xe1, 0xca, 0xf7, 0x22, 0x03, 0x08, 0x21, 0xf5,&#10;+    0x0f, 0xf7, 0xfb, 0x0c, 0xfb, 0x14, 0x2d, 0x03, 0xe5, 0xe4, 0x09, 0x0b,&#10;+    0x1a, 0xe6, 0x01, 0x28, 0xe9, 0xd6, 0x0b, 0xf7, 0x2c, 0xfb, 0x11, 0xee,&#10;+    0x0b, 0xed, 0x17, 0xf0, 0x3c, 0xf5, 0x08, 0xfa, 0xf8, 0xcd, 0x17, 0xfa,&#10;+    0x39, 0xea, 0x11, 0xf5, 0xed, 0xee, 0x0a, 0xec, 0x41, 0xd6, 0xe7, 0xf9,&#10;+    0xfa, 0xc8, 0x15, 0xf7, 0x08, 0x0e, 0xe3, 0x08, 0xe8, 0xec, 0xfd, 0xfe,&#10;+    0xf1, 0x00, 0xe9, 0xf4, 0x09, 0x26, 0x02, 0x16, 0xf0, 0x01, 0xef, 0x01,&#10;+    0xff, 0x03, 0x22, 0xdb, 0xfc, 0xf5, 0xde, 0xe5, 0xc4, 0x01, 0x28, 0xd4,&#10;+    0x38, 0x08, 0xd0, 0xec, 0xd5, 0x04, 0x2f, 0xce, 0x4e, 0xeb, 0xf9, 0xe7,&#10;+    0xdf, 0xf0, 0x1b, 0xf5, 0x42, 0xf1, 0xf6, 0x09, 0xd5, 0x0a, 0x0d, 0x08,&#10;+    0x04, 0x05, 0xe2, 0x0e, 0xd7, 0x19, 0xdb, 0xda, 0xe1, 0x25, 0xde, 0x15,&#10;+    0x0e, 0x14, 0xbd, 0xb0, 0xe3, 0xe5, 0x24, 0x1e, 0xf8, 0x0d, 0xd8, 0xf7,&#10;+    0xf2, 0xff, 0x18, 0xf5, 0x07, 0xf0, 0x02, 0x25, 0xd5, 0x1e, 0x2e, 0xdf,&#10;+    0xe7, 0x05, 0xef, 0x11, 0xe8, 0xe7, 0x47, 0xf4, 0xe1, 0xde, 0x09, 0x36,&#10;+    0x1a, 0x11, 0x11, 0xf5, 0x12, 0xe5, 0xe7, 0x18, 0x01, 0x17, 0x2a, 0x03,&#10;+    0x05, 0xea, 0x09, 0x0b, 0x12, 0x04, 0x17, 0xf0, 0xee, 0xd7, 0x11, 0xed,&#10;+    0x3c, 0x17, 0x16, 0xff, 0x02, 0xdc, 0x21, 0xf3, 0x2e, 0xe5, 0x13, 0xef,&#10;+    0xec, 0xe2, 0x10, 0xd0, 0x2e, 0xee, 0xff, 0x01, 0xe0, 0xe5, 0x0b, 0xda,&#10;+    0x1f, 0xf8, 0xf6, 0xfb, 0x07, 0xdb, 0x05, 0xf6, 0x0c, 0xf3, 0xf0, 0x10,&#10;+    0xf9, 0xf5, 0xf2, 0x0d, 0x10, 0xf7, 0xf6, 0xff, 0x2b, 0x0d, 0x06, 0x1e,&#10;+    0xf3, 0x0c, 0xe9, 0x01, 0xf2, 0x23, 0xfe, 0xe9, 0xdd, 0x12, 0xdd, 0xf7,&#10;+    0xbb, 0x22, 0x1b, 0xd4, 0x38, 0x29, 0xd4, 0xcf, 0xf5, 0xf9, 0x27, 0xdd,&#10;+    0x47, 0x00, 0xf2, 0xe5, 0x09, 0xfc, 0x0e, 0xf9, 0x34, 0x0a, 0x02, 0xfd,&#10;+    0xec, 0x25, 0x1d, 0x03, 0x15, 0x09, 0xf1, 0x1b, 0xd0, 0x17, 0xda, 0xda,&#10;+    0xe7, 0x07, 0xe3, 0x15, 0xf1, 0x02, 0xb9, 0xce, 0xe6, 0x0c, 0x10, 0x31,&#10;+    0xfe, 0xf7, 0xd9, 0xfa, 0xed, 0xed, 0x33, 0xf4, 0x19, 0xe7, 0xfe, 0x3f,&#10;+    0xe5, 0x06, 0x2e, 0xe6, 0xf2, 0xdc, 0xf5, 0x18, 0xe6, 0x01, 0x2f, 0xee,&#10;+    0xe7, 0xe4, 0xfe, 0x2c, 0x03, 0xf7, 0x20, 0x05, 0x07, 0xe2, 0x06, 0x1e,&#10;+    0x05, 0xed, 0x2f, 0x03, 0xea, 0xf8, 0x0e, 0x0c, 0x1f, 0xff, 0x20, 0xf4,&#10;+    0xe8, 0xe1, 0x1c, 0xec, 0x22, 0x1e, 0x05, 0xfd, 0xf5, 0xca, 0x30, 0xe9,&#10;+    0x30, 0xe4, 0x14, 0xff, 0xf2, 0xdc, 0x17, 0xf8, 0x26, 0xe1, 0x0b, 0x01,&#10;+    0x11, 0xc2, 0x02, 0xf1, 0x36, 0x10, 0x02, 0x05, 0xed, 0xf1, 0x15, 0xfa,&#10;+    0x17, 0xf8, 0xf7, 0xf1, 0xe8, 0xd3, 0xfd, 0x08, 0xfb, 0x27, 0xf5, 0xf5,&#10;+    0x13, 0x06, 0x0b, 0xf0, 0x01, 0xf9, 0xd7, 0x0e, 0xec, 0x12, 0xfe, 0xfd,&#10;+    0xee, 0x25, 0xd8, 0xf1, 0xb2, 0x09, 0x1c, 0xbf, 0x34, 0xea, 0xc8, 0xea,&#10;+    0xdb, 0x0e, 0x24, 0xde, 0x47, 0xfe, 0xdc, 0xe0, 0xf3, 0x06, 0x20, 0xfe,&#10;+    0x2b, 0xf6, 0x18, 0x14, 0xcd, 0x19, 0x16, 0xfe, 0x1a, 0x15, 0xf8, 0x11,&#10;+    0xf4, 0x22, 0xd7, 0xcc, 0xdd, 0x15, 0xdc, 0x14, 0xf9, 0x02, 0xbb, 0xca,&#10;+    0xe3, 0xf3, 0x0d, 0x1e, 0x2a, 0x0c, 0xe4, 0x05, 0xe0, 0x18, 0x2a, 0x07,&#10;+    0x20, 0xed, 0xf6, 0x17, 0xcf, 0xf4, 0x2a, 0xd6, 0xfb, 0xce, 0x03, 0x37,&#10;+    0xe2, 0xfd, 0x1d, 0xfb, 0xe5, 0xe0, 0x05, 0x29, 0xef, 0x16, 0x23, 0xf7,&#10;+    0x01, 0xf4, 0x0c, 0x14, 0xff, 0xee, 0x31, 0xf9, 0x12, 0xf9, 0x14, 0xf6,&#10;+    0x0c, 0xf6, 0x0b, 0x0f, 0xd8, 0xdc, 0xfe, 0x0f, 0x37, 0xfa, 0x01, 0x09,&#10;+    0x04, 0xd1, 0x0b, 0x0c, 0x29, 0xf3, 0x0a, 0xf9, 0xed, 0xc2, 0x18, 0xf4,&#10;+    0x25, 0x18, 0x0f, 0x08, 0xf7, 0xed, 0x1f, 0xf7, 0x4f, 0x0e, 0xf0, 0xe4,&#10;+    0x00, 0xeb, 0xfa, 0x1a, 0x0c, 0x03, 0xe9, 0xfc, 0xf0, 0xcc, 0x06, 0x05,&#10;+    0xf2, 0x12, 0x04, 0xe2, 0x16, 0x0a, 0x0a, 0xf3, 0x0b, 0xf3, 0xdc, 0xfd,&#10;+    0x10, 0xfc, 0x0e, 0xe2, 0xe0, 0xfe, 0xf0, 0xff, 0xb1, 0x06, 0x1b, 0xe4,&#10;+    0x30, 0x13, 0xc6, 0xc3, 0xfa, 0x0c, 0x1e, 0xd9, 0x57, 0x11, 0xe1, 0xd6,&#10;+    0xfa, 0xee, 0x1d, 0xf7, 0x37, 0xea, 0xf0, 0x05, 0xef, 0x24, 0x1e, 0xf1,&#10;+    0x10, 0xe8, 0xeb, 0x19, 0xd1, 0x18, 0xf5, 0xc8, 0xf8, 0xec, 0xf5, 0x1f,&#10;+    0xf2, 0xff, 0xb3, 0xd2, 0xe6, 0x0e, 0x06, 0x2e, 0x07, 0x17, 0xe0, 0xf5,&#10;+    0x02, 0xf9, 0x20, 0x07, 0x16, 0x08, 0xe8, 0x1d, 0xd3, 0x08, 0x34, 0xda,&#10;+    0xf2, 0xce, 0xfb, 0x1f, 0xe1, 0x00, 0x2d, 0xdb, 0xdf, 0xcc, 0x05, 0xfb,&#10;+    0xf7, 0x00, 0x33, 0xf9, 0x0b, 0x01, 0x13, 0x28, 0xf8, 0x07, 0x24, 0xf8,&#10;+    0x0f, 0x03, 0x0d, 0xe9, 0x06, 0xfe, 0x18, 0xf9, 0xed, 0xf5, 0x0c, 0xe0,&#10;+    0x2c, 0x0e, 0xf9, 0x06, 0xfb, 0xce, 0x27, 0xe8, 0x29, 0x19, 0xf9, 0x01,&#10;+    0x0e, 0xc8, 0x25, 0xed, 0x30, 0xeb, 0x01, 0xfe, 0x10, 0xdc, 0x1e, 0x00,&#10;+    0x1e, 0x10, 0xf9, 0x00, 0xfc, 0xc8, 0x0e, 0x04, 0x13, 0x04, 0xf0, 0x02,&#10;+    0xfe, 0xd8, 0x0f, 0x1b, 0xf7, 0xe1, 0xf8, 0xde, 0x12, 0xe2, 0xef, 0x0a,&#10;+    0x02, 0xe0, 0xdd, 0xf1, 0x0e, 0x2a, 0x25, 0x15, 0xeb, 0x02, 0xf4, 0xf0,&#10;+    0xbf, 0xfc, 0x27, 0xdc, 0x42, 0x0f, 0xe9, 0xbf, 0xe8, 0x20, 0x33, 0xc9,&#10;+    0x3f, 0x10, 0xec, 0xf3, 0x03, 0x02, 0x2c, 0x04, 0x38, 0x06, 0x0a, 0xf9,&#10;+    0xe5, 0x1c, 0x3f, 0x0f, 0x0c, 0x25, 0xe2, 0x06, 0xe6, 0x03, 0xf4, 0xd7,&#10;+    0xfe, 0xf6, 0xe7, 0x2f, 0xfa, 0x03, 0xb6, 0xcb, 0xf1, 0x11, 0x0a, 0x2c,&#10;+    0xfc, 0x1e, 0xe0, 0xff, 0xc2, 0xdd, 0x1d, 0xf3, 0x10, 0xfa, 0x07, 0x1e,&#10;+    0xf6, 0x20, 0x07, 0xe6, 0xf1, 0x0a, 0xe8, 0x27, 0xf1, 0xf5, 0x24, 0xed,&#10;+    0xfd, 0xee, 0x13, 0x15, 0xe9, 0xe2, 0x22, 0xe5, 0xf9, 0xdd, 0x1d, 0x32,&#10;+    0x04, 0xfa, 0x25, 0x00, 0xee, 0xfd, 0x0b, 0x0e, 0x23, 0xfa, 0x0f, 0x01,&#10;+    0xf8, 0xf0, 0x15, 0xe4, 0x21, 0xf7, 0x10, 0xf9, 0xe7, 0xc3, 0x19, 0xe1,&#10;+    0x34, 0xff, 0xed, 0xf4, 0xef, 0xd7, 0x21, 0x01, 0x31, 0xee, 0xf7, 0xf2,&#10;+    0xf3, 0xe5, 0x0a, 0xee, 0x2e, 0x1e, 0xf2, 0x0c, 0x07, 0xc2, 0x08, 0x0a,&#10;+    0x14, 0x14, 0x00, 0xfc, 0xf9, 0xd6, 0xfb, 0xf8, 0xe5, 0xf1, 0xfa, 0xe0,&#10;+    0x15, 0x21, 0xef, 0x06, 0xf9, 0x00, 0xf5, 0xf4, 0x0b, 0x0b, 0x18, 0x02,&#10;+    0xf5, 0x04, 0xdb, 0xfd, 0xcc, 0x32, 0x1d, 0xc9, 0x3b, 0x12, 0xd9, 0xaf,&#10;+    0xcf, 0x0f, 0x26, 0xde, 0x35, 0xe4, 0xdb, 0xd3, 0x22, 0x11, 0x2e, 0xfb,&#10;+    0x36, 0xfa, 0xfd, 0x02, 0xeb, 0x0f, 0x37, 0x0b, 0x14, 0x1d, 0xdd, 0x18,&#10;+    0xe0, 0x10, 0xe0, 0xdf, 0x14, 0xf9, 0xf0, 0x19, 0xf7, 0xfb, 0xc4, 0xe5,&#10;+    0xe7, 0x11, 0x01, 0x31, 0x1a, 0xf7, 0xd8, 0xf1, 0xe9, 0xf3, 0x21, 0xf9,&#10;+    0xfe, 0xe4, 0xe9, 0x02, 0xd0, 0x06, 0x14, 0xd7, 0xfc, 0xec, 0x06, 0x10,&#10;+    0xfc, 0xf0, 0x1c, 0xe7, 0xec, 0xe3, 0x03, 0x21, 0xe4, 0x04, 0x12, 0xf0,&#10;+    0xf3, 0xed, 0x16, 0x36, 0x02, 0xfd, 0x13, 0x11, 0xdf, 0xeb, 0x19, 0x07,&#10;+    0x10, 0x0c, 0xf9, 0x08, 0xf8, 0xf4, 0x1d, 0xfd, 0x1d, 0x16, 0xf4, 0x0a,&#10;+    0x08, 0xec, 0x0c, 0x09, 0x3d, 0xe0, 0x0b, 0xee, 0x10, 0xd1, 0x1e, 0x15,&#10;+    0x43, 0xeb, 0xfa, 0xf3, 0x05, 0xc7, 0xf2, 0xd9, 0x25, 0x20, 0xee, 0xe9,&#10;+    0xfd, 0xce, 0x16, 0x0c, 0x27, 0x06, 0x0a, 0x06, 0xf9, 0xd6, 0x0b, 0x05,&#10;+    0xe8, 0x02, 0xe8, 0xd2, 0x10, 0x01, 0xf2, 0x15, 0x09, 0x04, 0xd3, 0xe2,&#10;+    0xfe, 0xf0, 0x32, 0x1b, 0xd9, 0xf5, 0xea, 0xcc, 0xcb, 0x10, 0x1c, 0xf1,&#10;+    0x3b, 0x02, 0xd4, 0xbf, 0xca, 0xfe, 0x12, 0xdb, 0x3b, 0xf8, 0xd5, 0xe7,&#10;+    0x13, 0x10, 0x1a, 0xf4, 0x38, 0x09, 0x08, 0xee, 0xf4, 0xf4, 0x3c, 0xf7,&#10;+    0x15, 0x04, 0xe4, 0xfa, 0xf4, 0x04, 0xee, 0xf4, 0x07, 0xf8, 0xe9, 0x3b,&#10;+    0xe2, 0x1f, 0xd5, 0xed, 0xe6, 0xfd, 0x18, 0x49, 0x21, 0x06, 0xd8, 0xde,&#10;+    0xfa, 0xf0, 0x1b, 0xfe, 0xde, 0x08, 0xf7, 0x14, 0xc7, 0x0f, 0x1d, 0xcf,&#10;+    0x00, 0xea, 0xff, 0x1b, 0xd5, 0x08, 0x0d, 0xd9, 0xf1, 0xf4, 0x16, 0x23,&#10;+    0xd8, 0x0c, 0x29, 0xdc, 0xf1, 0xf2, 0x21, 0x49, 0xfc, 0xe2, 0x08, 0x01,&#10;+    0xf0, 0xf8, 0x17, 0xf9, 0x0f, 0xf5, 0xfa, 0x1a, 0xef, 0xec, 0x09, 0xeb,&#10;+    0x1a, 0x0c, 0x17, 0x09, 0x11, 0xe9, 0x1a, 0xf7, 0x29, 0xf9, 0xfd, 0x07,&#10;+    0x01, 0xdd, 0x0a, 0xec, 0x22, 0x15, 0x03, 0xfd, 0xe2, 0xd2, 0x15, 0xec,&#10;+    0x4d, 0xd7, 0xfc, 0xf6, 0x0b, 0xcc, 0x0e, 0x04, 0x03, 0xf7, 0xfb, 0xfb,&#10;+    0x0d, 0xeb, 0x19, 0x07, 0xf4, 0xf4, 0xe5, 0xde, 0x22, 0x07, 0xea, 0xf7,&#10;+    0xeb, 0x23, 0xc8, 0xee, 0x03, 0x04, 0x0f, 0x19, 0xc3, 0xf8, 0x06, 0xd0,&#10;+    0xf7, 0xfe, 0x0e, 0xe7, 0x0a, 0x02, 0xb0, 0xb8, 0x00, 0xfb, 0x18, 0x0f,&#10;+    0x22, 0xf7, 0xe9, 0xdc, 0x09, 0x15, 0x23, 0x0d, 0x22, 0x13, 0xe2, 0xed,&#10;+    0xeb, 0x18, 0x20, 0x0b, 0x12, 0xfc, 0x02, 0xf1, 0xdb, 0x0e, 0xe1, 0x04,&#10;+    0xdb, 0x0f, 0xf3, 0x1a, 0x06, 0xef, 0xdb, 0xdc, 0xdd, 0xfb, 0x00, 0x2a,&#10;+    0x20, 0xfd, 0xc1, 0xe3, 0xef, 0x01, 0x14, 0xf2, 0x14, 0x00, 0x0f, 0x28,&#10;+    0xd9, 0xff, 0xf4, 0xdc, 0x09, 0xfa, 0x1c, 0x08, 0xd1, 0x03, 0x0a, 0xf4,&#10;+    0xe4, 0xdb, 0x20, 0x30, 0xea, 0x06, 0x11, 0xe2, 0x26, 0xf7, 0x16, 0x22,&#10;+    0xf9, 0x07, 0x02, 0xf5, 0xf6, 0xfb, 0x1d, 0x0c, 0x16, 0x0a, 0x07, 0xf9,&#10;+    0x11, 0xde, 0x20, 0x08, 0x19, 0x04, 0x0a, 0x0b, 0x0c, 0xf7, 0xf4, 0xfc,&#10;+    0x41, 0xf1, 0xf8, 0x16, 0x09, 0xdc, 0x0e, 0x1a, 0x2b, 0x1f, 0xe7, 0xfe,&#10;+    0x01, 0xe0, 0xfd, 0xe2, 0x34, 0xec, 0xf3, 0xf5, 0x03, 0xec, 0x0b, 0xfb,&#10;+    0x04, 0xf6, 0xdd, 0xfd, 0x06, 0x14, 0x0d, 0xfa, 0xfc, 0xf1, 0x0a, 0xca,&#10;+    0x01, 0xec, 0x0e, 0x0e, 0xec, 0xd7, 0xee, 0xd4, 0xf2, 0xfe, 0x16, 0xfa,&#10;+    0xbd, 0x0d, 0xef, 0xcb, 0xc4, 0xee, 0xed, 0x13, 0x10, 0x19, 0xf8, 0xb1,&#10;+    0xf1, 0xe3, 0x00, 0xf3, 0x0c, 0xf6, 0xde, 0xc6, 0x15, 0x27, 0x14, 0x29,&#10;+    0x15, 0xf6, 0xf4, 0xf5, 0xe7, 0x00, 0x0b, 0x2f, 0x0c, 0xef, 0x03, 0x0f,&#10;+    0xfd, 0x08, 0xf3, 0xf9, 0xf9, 0x05, 0x0d, 0x34, 0x15, 0x1b, 0xc8, 0xd1,&#10;+    0xf2, 0x1b, 0x0a, 0x22, 0x12, 0x11, 0xe9, 0xf4, 0xe1, 0x2a, 0x20, 0x03,&#10;+    0xf2, 0xf8, 0x14, 0x0b, 0xd0, 0xf4, 0x0e, 0xbf, 0xc6, 0xd8, 0x04, 0x05,&#10;+    0xf8, 0xf4, 0x04, 0xc9, 0xea, 0xfd, 0xf7, 0xfa, 0xe3, 0x1b, 0x11, 0xde,&#10;+    0x0c, 0x11, 0x25, 0x29, 0xe5, 0x02, 0xef, 0xef, 0x02, 0xfa, 0x1a, 0x21,&#10;+    0x19, 0x09, 0x08, 0x05, 0x04, 0xe5, 0xfa, 0xed, 0x2d, 0x26, 0xfa, 0x17,&#10;+    0xf6, 0xe8, 0x12, 0x12, 0x31, 0xfc, 0x0d, 0x00, 0xf7, 0xeb, 0x19, 0xf1,&#10;+    0x2a, 0x06, 0x14, 0xec, 0x08, 0xd3, 0x21, 0x07, 0x32, 0xe3, 0x02, 0x0b,&#10;+    0xfb, 0xd8, 0x27, 0x07, 0x05, 0xe6, 0xf5, 0xf5, 0x0a, 0xf7, 0x2c, 0x2a,&#10;+    0xd8, 0x1b, 0xda, 0xf7, 0xea, 0xf6, 0xf9, 0x0e, 0xf8, 0x0c, 0x05, 0xc7,&#10;+    0xd6, 0x06, 0x12, 0xe3, 0xe1, 0xe1, 0xd8, 0xdb, 0xc6, 0xf8, 0xe6, 0xfa,&#10;+    0x0c, 0x07, 0xf8, 0xe7, 0xe1, 0x0f, 0x00, 0xf3, 0x03, 0xf0, 0xde, 0xcc,&#10;+    0xf5, 0xfc, 0xef, 0x1e, 0x16, 0x13, 0xfb, 0xf4, 0x03, 0xe9, 0xfc, 0xfa,&#10;+    0x15, 0xe8, 0x15, 0x09, 0xf1, 0x0d, 0xdb, 0x0a, 0xe8, 0x09, 0xf5, 0x1a,&#10;+    0x04, 0xf8, 0xd8, 0xd4, 0x04, 0xee, 0x25, 0x29, 0x09, 0xfe, 0xf3, 0xf5,&#10;+    0xd4, 0x0a, 0x15, 0x19, 0xf5, 0x12, 0xfe, 0x04, 0xe7, 0x01, 0xeb, 0xde,&#10;+    0xbe, 0xfe, 0x09, 0x12, 0xdf, 0x13, 0xe0, 0xef, 0xc7, 0xff, 0x03, 0x08,&#10;+    0xfe, 0xf2, 0x19, 0xe0, 0xe4, 0x0c, 0x22, 0x1e, 0x05, 0xf7, 0x16, 0xf2,&#10;+    0xf9, 0x06, 0x17, 0xf6, 0x0c, 0x1e, 0x23, 0x08, 0xfe, 0xdc, 0xfd, 0x17,&#10;+    0x11, 0xdf, 0xf5, 0x0f, 0x01, 0x03, 0x08, 0xee, 0x1b, 0x02, 0x0b, 0x1b,&#10;+    0x0c, 0x16, 0x1a, 0x00, 0x0f, 0x26, 0x14, 0xf8, 0xf4, 0xf3, 0x19, 0x16,&#10;+    0x22, 0x0a, 0xd0, 0xf9, 0xf1, 0x05, 0x2b, 0x1e, 0x1e, 0xef, 0xf5, 0x06,&#10;+    0x05, 0xe7, 0x3f, 0x2a, 0x06, 0xf0, 0x15, 0x14, 0x13, 0x20, 0x1b, 0xde,&#10;+    0x10, 0x05, 0x33, 0xf8, 0x08, 0x04, 0x17, 0x0d, 0x0f, 0xf6, 0x01, 0xed,&#10;+    0x28, 0x25, 0x1c, 0x13, 0xfb, 0xea, 0xfb, 0xf3, 0x1c, 0xf9, 0x1f, 0xf0,&#10;+    0xfb, 0x17, 0xf8, 0xff, 0x10, 0xf7, 0x0b, 0x24, 0x04, 0x00, 0x0d, 0x0c,&#10;+    0xf7, 0x0a, 0x16, 0x13, 0xf8, 0x05, 0x0a, 0xf1, 0xf5, 0xee, 0xf8, 0x14,&#10;+    0x0e, 0xed, 0xfe, 0x1b, 0xfe, 0x17, 0x13, 0x10, 0x12, 0x21, 0x1c, 0xfa,&#10;+    0xe5, 0x0b, 0x08, 0x0c, 0x10, 0x1b, 0x03, 0xef, 0x0d, 0x05, 0x0a, 0xf0,&#10;+    0x04, 0x11, 0x15, 0x00, 0xfd, 0xef, 0x02, 0x18, 0xf4, 0x09, 0xfa, 0xf6,&#10;+    0x02, 0xf7, 0xfd, 0x13, 0xef, 0x13, 0xf7, 0xf9, 0x17, 0x0f, 0xfa, 0xf8,&#10;+    0x15, 0xff, 0x04, 0xef, 0xf0, 0x15, 0xfa, 0xfe, 0xf0, 0xf4, 0xed, 0x06,&#10;+    0x1c, 0x02, 0xfb, 0xf7, 0x05, 0xfb, 0x0c, 0xef, 0xf4, 0xf0, 0xf6, 0xec,&#10;+    0x17, 0xf3, 0xf5, 0xef, 0x02, 0xfd, 0xe5, 0x21, 0x0c, 0xf1, 0x1e, 0x08,&#10;+    0xf1, 0x0b, 0xf7, 0x09, 0x1d, 0xf2, 0xf9, 0xf2, 0xfb, 0x0e, 0xed, 0xf8,&#10;+    0xfa, 0xdd, 0xf0, 0xfd, 0xdb, 0x1a, 0xf4, 0xef, 0x0c, 0x06, 0x0f, 0xdf,&#10;+    0xe2, 0x06, 0x06, 0xee, 0xfa, 0x0d, 0x17, 0xfc, 0xf9, 0x15, 0x1a, 0xe4,&#10;+    0xfb, 0x0c, 0x1a, 0xfc, 0x1b, 0x04, 0x07, 0x20, 0xff, 0x09, 0x0f, 0xf2,&#10;+    0x26, 0x19, 0x1f, 0x0d, 0x02, 0x16, 0x03, 0x03, 0xfd, 0x05, 0x01, 0x1b,&#10;+    0x0a, 0x11, 0xfa, 0x21, 0x13, 0xfb, 0x0c, 0x05, 0xf3, 0xdd, 0xe4, 0xdc,&#10;+    0x22, 0x1b, 0x15, 0x14, 0x0e, 0xe8, 0x00, 0xf7, 0xf8, 0xf4, 0x0b, 0x0b,&#10;+    0xfd, 0x21, 0xe3, 0x0f, 0xe1, 0x22, 0x01, 0x21, 0x0b, 0x1f, 0x09, 0x10,&#10;+    0xe2, 0x18, 0x11, 0x0e, 0xed, 0x01, 0x14, 0x12, 0xfd, 0x11, 0xf6, 0xe9,&#10;+    0x20, 0xe1, 0xf5, 0x1b, 0x27, 0x22, 0xfa, 0xf7, 0xfe, 0x13, 0xf6, 0xdc,&#10;+    0x06, 0x0d, 0xf4, 0x05, 0x20, 0x0d, 0x0b, 0xe4, 0x15, 0x28, 0x0c, 0x00,&#10;+    0xf5, 0x07, 0x0c, 0x0a, 0x06, 0x0e, 0xf3, 0xfb, 0xfe, 0x04, 0x08, 0xf4,&#10;+    0xef, 0x03, 0xe4, 0xeb, 0x06, 0xee, 0xed, 0xdb, 0xeb, 0x1d, 0xf4, 0xfa,&#10;+    0x0c, 0xfc, 0xfe, 0x11, 0xf7, 0xf8, 0xf5, 0xef, 0xe7, 0xfc, 0x1b, 0xdc,&#10;+    0x17, 0xfd, 0xfe, 0x00, 0xea, 0xf4, 0xf1, 0xf7, 0x0f, 0x21, 0x04, 0xfd,&#10;+    0x0d, 0x0c, 0x0a, 0x14, 0xfd, 0x19, 0x09, 0x01, 0xfd, 0xe2, 0x0c, 0x0c,&#10;+    0xe0, 0x25, 0xfb, 0xff, 0x0d, 0x18, 0xf6, 0x0b, 0x19, 0x12, 0x10, 0x09,&#10;+    0x0b, 0x06, 0x12, 0x1c, 0x10, 0x03, 0x13, 0x0a, 0x05, 0x0f, 0x09, 0x01,&#10;+    0x21, 0xe4, 0x01, 0x26, 0xf9, 0xf4, 0x05, 0x19, 0x00, 0xff, 0x0b, 0xff,&#10;+    0x16, 0x09, 0xe7, 0xee, 0xed, 0xf5, 0x0f, 0x2f, 0xee, 0x19, 0x03, 0x0a,&#10;+    0x10, 0xee, 0xf7, 0x2e, 0xf4, 0x08, 0xf7, 0xee, 0x07, 0x00, 0xfc, 0x0e,&#10;+    0xf0, 0x12, 0x08, 0x05, 0xed, 0x11, 0xfc, 0xfb, 0xf7, 0x25, 0xf1, 0x05,&#10;+    0x0c, 0xf9, 0xfa, 0x03, 0x0c, 0x16, 0x04, 0x25, 0xf8, 0xe7, 0xfc, 0x11,&#10;+    0x0d, 0x19, 0xd8, 0xfa, 0x0b, 0x06, 0xfd, 0xef, 0x13, 0xf6, 0xff, 0x0e,&#10;+    0xf9, 0x04, 0xf1, 0xdc, 0xfb, 0xe1, 0xf6, 0x0b, 0x15, 0x07, 0xf7, 0x02,&#10;+    0x0e, 0xf1, 0xfd, 0xe3, 0xeb, 0x07, 0xf1, 0xef, 0x03, 0xfe, 0xf8, 0x07,&#10;+    0x10, 0xf7, 0x00, 0xf9, 0xf2, 0x0e, 0xf9, 0xf2, 0x1d, 0xf5, 0xd8, 0xff,&#10;+    0xe6, 0x18, 0x2a, 0x1b, 0x03, 0x16, 0xfe, 0xf4, 0xf5, 0xfd, 0x04, 0x01,&#10;+    0xfe, 0xfe, 0x07, 0xfc, 0x0e, 0xfa, 0x15, 0xeb, 0x02, 0x15, 0xea, 0xfd,&#10;+    0x04, 0xe5, 0xfe, 0xed, 0xfe, 0x1a, 0x09, 0x2a, 0x1b, 0xdf, 0xfb, 0xf8,&#10;+    0xf1, 0x04, 0x1a, 0x34, 0x07, 0xf9, 0x0d, 0xf5, 0xef, 0xec, 0x10, 0x1a,&#10;+    0x0b, 0x0f, 0x13, 0xfe, 0x10, 0x22, 0x1e, 0x02, 0xe6, 0xf7, 0x11, 0xfa,&#10;+    0x11, 0xfc, 0x1b, 0x21, 0x12, 0xf4, 0x18, 0x16, 0x29, 0xe4, 0x0c, 0x2e,&#10;+    0x12, 0x07, 0x20, 0xf6, 0x1d, 0xf4, 0x12, 0x33, 0xf4, 0xee, 0xfe, 0x05,&#10;+    0x06, 0xfb, 0x13, 0x0c, 0x0e, 0xf0, 0x00, 0xf8, 0xee, 0xf3, 0x17, 0x00,&#10;+    0xf7, 0xfb, 0xfc, 0x0f, 0xf4, 0xd5, 0x0a, 0xed, 0xeb, 0xf5, 0xe9, 0xef,&#10;+    0xd8, 0xf0, 0xf8, 0xe2, 0x19, 0xf7, 0xf8, 0x0a, 0x0b, 0x09, 0xfa, 0xe7,&#10;+    0x0f, 0xfc, 0xe8, 0x02, 0x00, 0x1a, 0xfe, 0xfd, 0x1b, 0xe6, 0xef, 0x0f,&#10;+    0xe3, 0x10, 0xf1, 0xe2, 0x0b, 0x0e, 0x06, 0x29, 0x00, 0x01, 0xf3, 0x00,&#10;+    0x11, 0x04, 0xf2, 0xf7, 0xea, 0xf8, 0xe0, 0x09, 0x0e, 0x13, 0xf4, 0x00,&#10;+    0x09, 0xfa, 0xf5, 0x0c, 0xff, 0x18, 0x08, 0x0d, 0xfa, 0xde, 0xfa, 0x03,&#10;+    0xf2, 0xf3, 0x1b, 0xeb, 0x06, 0xea, 0xfb, 0xff, 0x0d, 0xf5, 0x10, 0x17,&#10;+    0xf8, 0xe8, 0xf1, 0xf1, 0xf5, 0x00, 0x03, 0x0a, 0x09, 0x0a, 0xf3, 0xfb,&#10;+    0x33, 0x26, 0xe7, 0x17, 0xe3, 0xfa, 0x1f, 0x24, 0xfc, 0x07, 0x02, 0xe2,&#10;+    0xeb, 0x08, 0x2c, 0xf8, 0x02, 0x1f, 0x04, 0xeb, 0x0b, 0x04, 0x17, 0xf7,&#10;+    0xff, 0x1c, 0xed, 0x00, 0x3f, 0xd5, 0x17, 0x1d, 0xfe, 0x03, 0xf1, 0x1c,&#10;+    0x17, 0xec, 0x0e, 0x54, 0xee, 0xf5, 0x25, 0xfa, 0x08, 0xee, 0x13, 0x32,&#10;+    0x0e, 0xd8, 0x09, 0x0f, 0xee, 0xe5, 0x06, 0x10, 0xf4, 0xfb, 0xe4, 0xfb,&#10;+    0x09, 0xde, 0x13, 0xff, 0x02, 0xf9, 0xec, 0x0a, 0x00, 0xe9, 0xfd, 0xdc,&#10;+    0x06, 0x04, 0xdb, 0x06, 0x01, 0xf8, 0x09, 0xe2, 0x0c, 0x14, 0xda, 0xfe,&#10;+    0x20, 0xe3, 0x09, 0xda, 0x14, 0x12, 0xe1, 0x05, 0xff, 0xf3, 0x00, 0x08,&#10;+    0xfb, 0xf1, 0xfd, 0xf3, 0x04, 0xfa, 0x08, 0xff, 0x01, 0x1d, 0x0b, 0xfd,&#10;+    0x0a, 0xf4, 0xfb, 0xfc, 0xf9, 0x19, 0xed, 0xfc, 0xf2, 0x06, 0xe7, 0x02,&#10;+    0xf6, 0x0c, 0xfc, 0xfb, 0x01, 0x0c, 0xeb, 0x1b, 0xff, 0xff, 0x08, 0x1d,&#10;+    0xf7, 0xe8, 0xfc, 0xf4, 0x0c, 0xfa, 0xf1, 0xee, 0xed, 0xdd, 0xfc, 0x06,&#10;+    0x05, 0xdc, 0x1a, 0xfc, 0xf9, 0x07, 0xdf, 0x1b, 0x14, 0x0c, 0xfc, 0x01,&#10;+    0x16, 0xe1, 0xed, 0x09, 0x34, 0xee, 0xe4, 0x1c, 0x1b, 0xfc, 0x3b, 0x03,&#10;+    0x15, 0xf2, 0xeb, 0x14, 0x00, 0xdd, 0x24, 0x04, 0xf1, 0xed, 0xfd, 0xe6,&#10;+    0x32, 0xf9, 0x24, 0x04, 0x0e, 0x22, 0x03, 0x14, 0x2f, 0xf5, 0x1a, 0x37,&#10;+    0xf4, 0x18, 0x03, 0x0f, 0x4b, 0xe6, 0x0d, 0x5c, 0xf7, 0x1f, 0x1c, 0xe6,&#10;+    0x23, 0x0c, 0x15, 0x4e, 0xe0, 0x05, 0x1c, 0xec, 0xff, 0x04, 0x13, 0x15,&#10;+    0xee, 0x07, 0xec, 0x0c, 0xdd, 0xf8, 0x0e, 0x03, 0x0c, 0x1f, 0xe8, 0x0e,&#10;+    0xf5, 0xec, 0xfc, 0xe2, 0xe8, 0xfb, 0xf6, 0x00, 0xe5, 0xea, 0xf3, 0xd3,&#10;+    0xf5, 0xfd, 0xd2, 0xfd, 0x1b, 0xed, 0x09, 0xd1, 0x23, 0xfa, 0xd4, 0xf7,&#10;+    0xe9, 0xf0, 0x0a, 0xd6, 0x14, 0x03, 0xe6, 0x10, 0xf4, 0x18, 0xfe, 0xe1,&#10;+    0x0b, 0x25, 0xf5, 0xfc, 0xe9, 0xf2, 0xe9, 0xf4, 0x0d, 0xf5, 0x00, 0xf9,&#10;+    0x17, 0x02, 0xfd, 0x03, 0x04, 0xf8, 0xf5, 0x14, 0xe3, 0xd3, 0xeb, 0xe7,&#10;+    0x09, 0xf3, 0x14, 0x17, 0xee, 0xe6, 0xf6, 0xff, 0x11, 0x26, 0xf4, 0xf7,&#10;+    0x02, 0xfa, 0x05, 0x08, 0x16, 0xff, 0x0d, 0xf7, 0xf1, 0xf7, 0xe6, 0xfb,&#10;+    0x04, 0x04, 0x07, 0x02, 0x04, 0x09, 0xf5, 0xfc, 0x5f, 0xd6, 0xe7, 0x2a,&#10;+    0x23, 0xf4, 0x1b, 0x06, 0x01, 0xea, 0xe7, 0x05, 0x25, 0xe3, 0x25, 0x07,&#10;+    0xea, 0xfb, 0xfb, 0x09, 0x25, 0xde, 0x37, 0x04, 0x07, 0xe5, 0xff, 0x14,&#10;+    0x2f, 0x0a, 0x30, 0x23, 0x04, 0xf0, 0x23, 0xfe, 0x1c, 0xd2, 0x2b, 0x55,&#10;+    0x01, 0xe5, 0x26, 0xfe, 0x14, 0xed, 0x24, 0x46, 0xe6, 0xee, 0x0f, 0xfd,&#10;+    0xed, 0xef, 0x0e, 0x1e, 0x05, 0x0a, 0x12, 0xff, 0xe4, 0xf5, 0x0c, 0xed,&#10;+    0xfd, 0xea, 0x0d, 0x13, 0x1a, 0xe5, 0xfc, 0xc2, 0xef, 0x0a, 0xe2, 0x0f,&#10;+    0xfe, 0xff, 0x0c, 0xf0, 0xff, 0xdf, 0xea, 0x00, 0xf6, 0xe1, 0x04, 0xd8,&#10;+    0x26, 0x20, 0xdc, 0xf4, 0x19, 0x06, 0xe8, 0xd2, 0x10, 0x04, 0xf1, 0x02,&#10;+    0x0c, 0x06, 0xf0, 0xf0, 0x04, 0x1f, 0xf4, 0xf5, 0xed, 0xf1, 0xfa, 0xf1,&#10;+    0x04, 0x02, 0xf8, 0xfb, 0x04, 0xf1, 0xe5, 0xe4, 0x0a, 0xf0, 0xfe, 0xef,&#10;+    0x1c, 0xe3, 0xeb, 0xf3, 0x00, 0x17, 0x01, 0x13, 0x19, 0xda, 0xf8, 0x06,&#10;+    0xde, 0x11, 0xea, 0xf7, 0xf4, 0xef, 0x03, 0x04, 0x0b, 0xe8, 0x08, 0x0e,&#10;+    0xe2, 0xee, 0xde, 0x06, 0x0e, 0x29, 0xfb, 0xfa, 0x00, 0x02, 0xec, 0x1b,&#10;+    0x52, 0xff, 0xde, 0x3a, 0x2f, 0x13, 0x30, 0xe9, 0xff, 0xf6, 0xe7, 0x15,&#10;+    0x1d, 0xd9, 0x3c, 0x0f, 0xe6, 0x14, 0xee, 0x13, 0x1f, 0xe7, 0x33, 0x08,&#10;+    0xfc, 0x06, 0x0c, 0x08, 0x19, 0xd9, 0x2b, 0x1f, 0x07, 0x10, 0x24, 0x16,&#10;+    0x29, 0xfc, 0x31, 0x4d, 0xf0, 0xd9, 0x3f, 0xf2, 0x20, 0xe2, 0x25, 0x49,&#10;+    0xe5, 0xec, 0x0a, 0xf5, 0xf2, 0xd9, 0x22, 0x1f, 0xed, 0x22, 0x02, 0x0a,&#10;+    0x16, 0x08, 0xf7, 0xfb, 0x0e, 0xfb, 0xfb, 0x1d, 0xf3, 0x1c, 0xf6, 0xe1,&#10;+    0xcf, 0x19, 0xf4, 0x0f, 0xee, 0xf9, 0x04, 0xd1, 0xf9, 0xe2, 0xda, 0xf1,&#10;+    0x24, 0xf5, 0x07, 0xdf, 0x1d, 0xf9, 0xdb, 0x18, 0x0b, 0xea, 0x08, 0xca,&#10;+    0xf2, 0xfa, 0xec, 0x04, 0x0e, 0x17, 0xed, 0xf1, 0x06, 0x15, 0xfc, 0xfd,&#10;+    0x08, 0xfa, 0xe3, 0xe4, 0x0a, 0xfc, 0xee, 0x08, 0xf5, 0x09, 0xef, 0xee,&#10;+    0x06, 0xef, 0xe1, 0x19, 0x07, 0xe8, 0xe6, 0xdf, 0xea, 0x0d, 0xf1, 0x16,&#10;+    0xee, 0xed, 0xf8, 0x09, 0xfa, 0xfb, 0x0c, 0xf8, 0xeb, 0xda, 0x00, 0xfc,&#10;+    0x04, 0xfe, 0xf5, 0xff, 0xf6, 0xe1, 0x0c, 0x0a, 0x13, 0x0d, 0xf6, 0xf5,&#10;+    0x15, 0x07, 0xca, 0xec, 0x50, 0x0e, 0xd0, 0x26, 0x4c, 0xf8, 0x23, 0xeb,&#10;+    0xff, 0x08, 0xe3, 0x11, 0x2c, 0xf9, 0x2a, 0xf1, 0xe9, 0x0b, 0xe9, 0x0f,&#10;+    0x15, 0xec, 0x33, 0x11, 0x0c, 0x0d, 0x01, 0x01, 0x32, 0xe3, 0x41, 0x27,&#10;+    0x11, 0x02, 0x2e, 0x07, 0x09, 0xe3, 0x22, 0x4d, 0xf1, 0x05, 0x27, 0x03,&#10;+    0x25, 0xf5, 0x2c, 0x3b, 0xf4, 0x00, 0x16, 0x0b, 0xec, 0xfe, 0x17, 0x0d,&#10;+    0xff, 0xe7, 0xfe, 0x24, 0x06, 0xee, 0xf0, 0xe9, 0xfa, 0x1c, 0xf2, 0x19,&#10;+    0x08, 0xfa, 0xff, 0xd2, 0x01, 0x02, 0xea, 0x05, 0xf2, 0xf4, 0x0b, 0xd2,&#10;+    0xf9, 0x0d, 0xcd, 0x0d, 0x12, 0xf2, 0x0e, 0xe1, 0x1f, 0x00, 0xe7, 0x14,&#10;+    0x04, 0xff, 0x09, 0xdb, 0xfc, 0xd9, 0x06, 0xf9, 0xeb, 0x01, 0xef, 0xfa,&#10;+    0xfb, 0xf5, 0xfc, 0xfb, 0x14, 0xe2, 0xf9, 0xf5, 0x02, 0xfd, 0xfc, 0x01,&#10;+    0xf7, 0xf3, 0x00, 0xec, 0xe7, 0xf2, 0x00, 0xf1, 0x11, 0xec, 0xf0, 0xe9,&#10;+    0x11, 0x0a, 0x07, 0x04, 0x01, 0xee, 0xfb, 0xf2, 0x14, 0x01, 0x12, 0xf0,&#10;+    0xf2, 0xf1, 0xf0, 0xfb, 0x08, 0x03, 0xf8, 0x01, 0xe8, 0xf9, 0x17, 0x26,&#10;+    0x0f, 0xea, 0xf7, 0xf8, 0x1e, 0xfe, 0xf2, 0xf8, 0x3f, 0x00, 0xd4, 0x1c,&#10;+    0x53, 0xfe, 0x1e, 0x0f, 0xef, 0xdd, 0xed, 0x10, 0x19, 0xe7, 0x34, 0x0e,&#10;+    0xde, 0xdf, 0xfa, 0x0e, 0x29, 0xe3, 0x16, 0x09, 0x06, 0x12, 0xeb, 0xf9,&#10;+    0x32, 0xe0, 0x1a, 0x1d, 0xf3, 0xed, 0x10, 0x07, 0x31, 0xf2, 0x12, 0x52,&#10;+    0xeb, 0xf7, 0x1e, 0xf7, 0x1a, 0xdc, 0x3e, 0x33, 0xe3, 0xfb, 0x1f, 0x0b,&#10;+    0x08, 0xfe, 0x13, 0x1a, 0xf4, 0xf8, 0xfe, 0x08, 0xfc, 0xe9, 0xfe, 0xeb,&#10;+    0xe6, 0xf6, 0x02, 0x18, 0x02, 0xe8, 0xfb, 0xf3, 0x01, 0x08, 0xd7, 0x13,&#10;+    0x04, 0xe6, 0x02, 0xe6, 0xd7, 0x01, 0xd4, 0xf0, 0x0e, 0x05, 0x18, 0xe5,&#10;+    0x08, 0xe5, 0xd2, 0x16, 0x12, 0xfe, 0x0e, 0xd3, 0xfc, 0x1f, 0xe9, 0xf8,&#10;+    0x11, 0x06, 0xf3, 0xd5, 0xf8, 0xff, 0xf0, 0x04, 0x0a, 0xd9, 0xf8, 0xfd,&#10;+    0xf5, 0x12, 0xff, 0x06, 0x1b, 0xe6, 0xfe, 0xfe, 0xde, 0xee, 0xf6, 0x18,&#10;+    0xf1, 0xf8, 0x06, 0xf3, 0x02, 0xea, 0x04, 0x14, 0xfc, 0xee, 0xe6, 0x09,&#10;+    0xf9, 0xee, 0xe3, 0xe7, 0xfc, 0xd9, 0xef, 0xfc, 0x0a, 0x0c, 0x03, 0xf6,&#10;+    0xe2, 0x11, 0x0f, 0x19, 0x18, 0x10, 0xef, 0xe5, 0x22, 0xf5, 0xe5, 0xe9,&#10;+    0x4b, 0xf7, 0xdb, 0x0c, 0x4f, 0xde, 0x22, 0x16, 0x09, 0x16, 0xd1, 0xf8,&#10;+    0x19, 0xe0, 0x24, 0xfe, 0xb8, 0xfb, 0xe5, 0x12, 0x1c, 0xe3, 0x22, 0x09,&#10;+    0x05, 0x29, 0xf7, 0x10, 0x31, 0xe1, 0x33, 0x3f, 0xfd, 0xed, 0x04, 0x03,&#10;+    0x2e, 0xed, 0x30, 0x36, 0xee, 0x16, 0x2f, 0xf5, 0x1b, 0xdc, 0x3a, 0x56,&#10;+    0xe5, 0xef, 0x26, 0xff, 0x03, 0xd7, 0x31, 0x16, 0xef, 0xf1, 0x08, 0x13,&#10;+    0x01, 0x02, 0x03, 0xf1, 0xf2, 0x08, 0xff, 0x05, 0x12, 0xf2, 0xee, 0xda,&#10;+    0xed, 0xec, 0xea, 0xf7, 0x0c, 0xf1, 0x09, 0xe6, 0xe6, 0x00, 0xcc, 0x10,&#10;+    0x0d, 0x0d, 0x20, 0xf4, 0x18, 0x23, 0xec, 0xf9, 0x00, 0xe4, 0x07, 0xd4,&#10;+    0xfb, 0x16, 0xd2, 0x01, 0xe6, 0x01, 0x06, 0xf0, 0xfe, 0x03, 0xf3, 0x09,&#10;+    0x01, 0x0d, 0x05, 0xf7, 0xd4, 0x02, 0xfb, 0xfb, 0x08, 0xf0, 0x1f, 0xf3,&#10;+    0xfe, 0xeb, 0x02, 0x0e, 0x1b, 0x0f, 0x04, 0xf5, 0xf0, 0x1f, 0x14, 0xf7,&#10;+    0x06, 0xdc, 0xf9, 0xe9, 0x01, 0xff, 0x08, 0xf2, 0x06, 0xff, 0xff, 0xf3,&#10;+    0x05, 0x1a, 0xfc, 0xfa, 0xeb, 0xfb, 0xfa, 0x12, 0x20, 0xf6, 0xe0, 0xe8,&#10;+    0x1c, 0xfa, 0xd6, 0x0d, 0x2c, 0x04, 0xe1, 0x09, 0x3b, 0xd3, 0x2a, 0xee,&#10;+    0xf7, 0xed, 0xf1, 0xf7, 0x0d, 0xf0, 0x32, 0x0f, 0xc9, 0x0e, 0x00, 0x10,&#10;+    0x24, 0xfb, 0x31, 0xf0, 0xf4, 0xdd, 0xf5, 0x04, 0x25, 0xc7, 0x27, 0x25,&#10;+    0x16, 0x11, 0x2e, 0x09, 0x30, 0xd1, 0x2c, 0x34, 0xe6, 0xf0, 0x21, 0xf5,&#10;+    0x21, 0xc8, 0x40, 0x39, 0xde, 0xf0, 0x12, 0xf3, 0x10, 0xe8, 0x1f, 0x18,&#10;+    0xfa, 0xea, 0x07, 0x11, 0xdf, 0xed, 0xfa, 0xf0, 0x07, 0xef, 0xf3, 0x05,&#10;+    0x10, 0xe5, 0xf3, 0xe9, 0xe9, 0xe8, 0xd6, 0x01, 0xf9, 0x05, 0x0b, 0xee,&#10;+    0xf9, 0x12, 0xe3, 0x05, 0xfd, 0xe6, 0x16, 0xe2, 0x1b, 0x12, 0xc5, 0x00,&#10;+    0xfd, 0x02, 0x04, 0xd2, 0xff, 0xec, 0xf6, 0xfd, 0x00, 0xe4, 0xf7, 0xf3,&#10;+    0xeb, 0xfa, 0xf8, 0x0d, 0x03, 0xfa, 0xfe, 0xe4, 0xdb, 0xe3, 0x06, 0xff,&#10;+    0xf4, 0xf2, 0x1b, 0xf1, 0xf7, 0x02, 0x01, 0x04, 0x13, 0xe5, 0x0c, 0x05,&#10;+    0xf7, 0x0a, 0x03, 0x03, 0x0b, 0x03, 0xee, 0xf7, 0x21, 0x20, 0xff, 0xf3,&#10;+    0x09, 0xe5, 0xff, 0xec, 0x17, 0x00, 0x06, 0x14, 0xeb, 0xf2, 0x18, 0x16,&#10;+    0x1f, 0xec, 0xee, 0xe1, 0x1e, 0x03, 0xfa, 0xfe, 0x28, 0x03, 0xc9, 0x0c,&#10;+    0x3f, 0xd8, 0x30, 0x16, 0x03, 0xf8, 0xe9, 0xfb, 0x28, 0xe1, 0x36, 0x0a,&#10;+    0xdf, 0xe5, 0xeb, 0x08, 0x1c, 0xcd, 0x29, 0xf2, 0xfc, 0x0a, 0xed, 0x01,&#10;+    0x29, 0xf1, 0x20, 0x13, 0x04, 0xec, 0x17, 0x0a, 0x35, 0xc3, 0x1a, 0x46,&#10;+    0xe0, 0xd7, 0x3c, 0x09, 0x28, 0xd1, 0x22, 0x20, 0xd5, 0xfa, 0x28, 0xfa,&#10;+    0xff, 0xea, 0x1d, 0x23, 0xe0, 0x07, 0x07, 0x0f, 0xf1, 0xf1, 0x08, 0xf0,&#10;+    0xf8, 0xff, 0x05, 0x1b, 0x05, 0xfa, 0xf0, 0xfb, 0xe3, 0xe4, 0xcc, 0x1a,&#10;+    0xf9, 0x09, 0x06, 0xee, 0xf4, 0x03, 0xd0, 0x14, 0xf4, 0xff, 0x1d, 0xe8,&#10;+    0x11, 0xf4, 0xd1, 0xf4, 0x04, 0x0b, 0xfb, 0xdc, 0x0a, 0x0c, 0xeb, 0xed,&#10;+    0x06, 0xf3, 0x04, 0xdd, 0xdf, 0xf9, 0xea, 0xfc, 0xf5, 0xf2, 0xfb, 0xea,&#10;+    0xe3, 0x03, 0xee, 0x0e, 0xff, 0xdb, 0x1e, 0x04, 0xf7, 0x1a, 0x04, 0x0c,&#10;+    0x0d, 0xda, 0x04, 0xe9, 0xff, 0x04, 0x00, 0x0c, 0xf9, 0xe4, 0xfb, 0xf6,&#10;+    0x14, 0xde, 0x1b, 0x00, 0x0b, 0xfe, 0x06, 0xf8, 0x0f, 0xdc, 0x01, 0xef,&#10;+    0xef, 0x0d, 0xf8, 0xf1, 0x0f, 0xf9, 0xf9, 0xdf, 0x0d, 0xe4, 0xd9, 0xf9,&#10;+    0x2b, 0xee, 0xe8, 0x09, 0x40, 0xf9, 0x2f, 0x0a, 0xfa, 0xe8, 0xe9, 0x01,&#10;+    0x0e, 0xe7, 0x23, 0x0a, 0xd0, 0x19, 0xd3, 0x0e, 0x04, 0xda, 0x2b, 0x0f,&#10;+    0xe7, 0xe6, 0xf3, 0xfb, 0x2c, 0xd3, 0x36, 0x19, 0x0e, 0xfe, 0x03, 0x1a,&#10;+    0x2e, 0xd0, 0x23, 0x32, 0xf1, 0xe1, 0x2a, 0x09, 0x1b, 0xf6, 0x29, 0x3e,&#10;+    0xce, 0x15, 0x0a, 0xe8, 0xec, 0xdf, 0x44, 0x28, 0xd9, 0xfd, 0xfa, 0x09,&#10;+    0xff, 0xe7, 0x08, 0xec, 0xf4, 0xef, 0x01, 0x19, 0x11, 0xf3, 0xeb, 0xeb,&#10;+    0xed, 0x1a, 0xdd, 0x15, 0x0f, 0x07, 0xfe, 0xeb, 0xff, 0xd6, 0xd5, 0x04,&#10;+    0xf5, 0x07, 0x10, 0xe6, 0x0c, 0xe4, 0xda, 0x0c, 0x08, 0xee, 0x06, 0xd8,&#10;+    0xf8, 0xf1, 0xe0, 0x01, 0x08, 0xfe, 0xf9, 0xf3, 0xdf, 0x03, 0xe6, 0xf4,&#10;+    0x0a, 0xff, 0xf2, 0xe0, 0xd9, 0xeb, 0x01, 0x10, 0x02, 0xfc, 0x0d, 0x14,&#10;+    0xea, 0xf8, 0x03, 0x18, 0xf3, 0x09, 0xfc, 0x0c, 0x0b, 0x1f, 0xf5, 0x05,&#10;+    0xf7, 0xf9, 0x00, 0xfd, 0x04, 0xfc, 0x16, 0x07, 0x00, 0xdf, 0xf9, 0xfa,&#10;+    0x0c, 0xfb, 0xf4, 0xf7, 0xf0, 0xeb, 0x07, 0x17, 0x20, 0xfb, 0xf0, 0xec,&#10;+    0x04, 0x00, 0xf8, 0xf2, 0x2d, 0xf9, 0xd9, 0x0b, 0x55, 0xec, 0x33, 0x26,&#10;+    0xf8, 0x0a, 0xf2, 0x0b, 0x25, 0xdf, 0x29, 0x05, 0xd1, 0x14, 0xe2, 0xf2,&#10;+    0x12, 0xdd, 0x28, 0xfc, 0xec, 0x08, 0xfd, 0x02, 0x3a, 0xe6, 0x29, 0x25,&#10;+    0x0d, 0x10, 0x09, 0x0a, 0x32, 0xf5, 0x17, 0x2d, 0xea, 0xfb, 0x35, 0xfc,&#10;+    0x28, 0xd0, 0x29, 0x2f, 0xcb, 0x06, 0x0f, 0x04, 0xf2, 0xf3, 0x34, 0x1c,&#10;+    0xf4, 0x08, 0x05, 0xfc, 0xfd, 0xed, 0x0f, 0xf8, 0xe9, 0xf0, 0x09, 0x16,&#10;+    0xfe, 0x02, 0xff, 0xd4, 0xea, 0x0a, 0xeb, 0x0c, 0xf8, 0xf4, 0x09, 0xf4,&#10;+    0xf2, 0x07, 0xd9, 0x0b, 0xfd, 0xe4, 0x1a, 0xef, 0x14, 0x08, 0xd8, 0xfc,&#10;+    0xf5, 0xe1, 0x03, 0xcf, 0xf1, 0x11, 0xdb, 0x15, 0x07, 0x10, 0xf8, 0xfc,&#10;+    0xe2, 0xf1, 0xf5, 0xde, 0xff, 0xe7, 0x01, 0xea, 0xee, 0xe9, 0x02, 0x0a,&#10;+    0x18, 0xec, 0xfe, 0xf9, 0x09, 0xf3, 0x0e, 0x02, 0xf1, 0xfc, 0xf9, 0x16,&#10;+    0x05, 0x07, 0x09, 0x0d, 0x0e, 0xf7, 0x04, 0xed, 0x04, 0xdb, 0x04, 0x04,&#10;+    0xf6, 0xdc, 0xee, 0xec, 0xf5, 0xfe, 0xf4, 0x02, 0xe4, 0x0b, 0xe0, 0x17,&#10;+    0x0a, 0xe0, 0xf7, 0xdc, 0x11, 0xd6, 0xfe, 0xfa, 0x35, 0xde, 0xe6, 0x06,&#10;+    0x44, 0xf9, 0x35, 0x0a, 0xfb, 0xff, 0xec, 0xfb, 0x16, 0xd9, 0x23, 0x0f,&#10;+    0xd4, 0xef, 0xdf, 0x06, 0x0b, 0xd9, 0x25, 0xff, 0xf8, 0xeb, 0xf4, 0x0a,&#10;+    0x20, 0xe5, 0x22, 0x1c, 0xeb, 0xf4, 0x0d, 0x0c, 0x19, 0xe1, 0x1e, 0x31,&#10;+    0xe9, 0xfb, 0x20, 0xf0, 0x23, 0xfe, 0x35, 0x28, 0xb4, 0x06, 0x28, 0xe7,&#10;+    0xfb, 0xe9, 0x2a, 0x1a, 0xef, 0x15, 0x0c, 0xed, 0xf1, 0x04, 0x0e, 0x0a,&#10;+    0xff, 0x16, 0x01, 0x04, 0x17, 0xea, 0xec, 0xdc, 0xf4, 0xf7, 0x04, 0x16,&#10;+    0x1f, 0x0a, 0x11, 0xef, 0x12, 0xdf, 0xd9, 0x0c, 0xf5, 0x10, 0x02, 0xf3,&#10;+    0x10, 0x03, 0xd3, 0xf5, 0x0b, 0x02, 0x00, 0xcb, 0xf6, 0x23, 0xf6, 0xf1,&#10;+    0x1f, 0xf9, 0xfc, 0xf0, 0xf6, 0xfe, 0xfa, 0xf8, 0xf9, 0xf4, 0xfb, 0x0a,&#10;+    0xd6, 0x29, 0x09, 0x02, 0x00, 0xfc, 0xfc, 0xee, 0xf5, 0x05, 0xfb, 0x1e,&#10;+    0xf1, 0xf1, 0xf3, 0x02, 0xec, 0x1c, 0x0c, 0x0e, 0x0b, 0x04, 0xf6, 0xe7,&#10;+    0x14, 0x08, 0x27, 0x01, 0xfe, 0xe5, 0xe7, 0x01, 0x1b, 0xf0, 0xf6, 0xff,&#10;+    0xf4, 0xe7, 0xee, 0x18, 0x0d, 0x08, 0xf8, 0xd6, 0x07, 0xf4, 0x08, 0xff,&#10;+    0x1d, 0x13, 0xe7, 0x0b, 0x42, 0xef, 0x28, 0x00, 0xf9, 0xf0, 0xf3, 0x00,&#10;+    0x15, 0xfd, 0x1a, 0x22, 0xc1, 0xf5, 0xe0, 0xf8, 0x09, 0xe6, 0x0e, 0x05,&#10;+    0xf9, 0xf6, 0x01, 0x01, 0x13, 0xdc, 0x1f, 0x0d, 0xfb, 0x04, 0x08, 0x0b,&#10;+    0x15, 0xdb, 0x28, 0x34, 0xed, 0x0b, 0x3a, 0xed, 0x16, 0xe3, 0x39, 0x32,&#10;+    0xc4, 0x0b, 0x20, 0xe7, 0xf7, 0x02, 0x35, 0x24, 0xfc, 0xe8, 0x1c, 0xf8,&#10;+    0xf1, 0xfa, 0x0c, 0x1d, 0xf2, 0x05, 0xff, 0x12, 0x0f, 0x01, 0xec, 0xea,&#10;+    0xf0, 0x03, 0xe7, 0x15, 0xfd, 0x05, 0x08, 0xe0, 0x1b, 0xf8, 0xe1, 0x1e,&#10;+    0xed, 0xdc, 0x11, 0xeb, 0xfd, 0x1a, 0xeb, 0x09, 0xf9, 0xf3, 0x00, 0xe8,&#10;+    0xe6, 0x08, 0xf7, 0xde, 0x1e, 0x00, 0x00, 0x00, 0xe4, 0x09, 0xf2, 0xf8,&#10;+    0xe7, 0xf2, 0x0d, 0xfa, 0xe2, 0x0f, 0x04, 0x08, 0xf2, 0x13, 0xf8, 0xf9,&#10;+    0xf1, 0xff, 0x03, 0x11, 0x12, 0xe9, 0xf4, 0x13, 0x07, 0x0c, 0x13, 0x2b,&#10;+    0xf7, 0xdd, 0xf9, 0xe9, 0xfa, 0xdb, 0x1d, 0xf6, 0xf6, 0xf9, 0xe4, 0xf6,&#10;+    0x0d, 0xeb, 0x0d, 0x08, 0xe7, 0xe7, 0xf2, 0x03, 0x1d, 0xd9, 0xd8, 0xe4,&#10;+    0xf7, 0xea, 0xdc, 0xdc, 0x26, 0x02, 0xee, 0xfa, 0x38, 0xfc, 0x1a, 0xef,&#10;+    0xda, 0xf1, 0xdf, 0x0b, 0x1a, 0xe0, 0x16, 0x16, 0xdc, 0x04, 0xfa, 0xf7,&#10;+    0xee, 0x02, 0x25, 0x02, 0xf5, 0xfb, 0x08, 0xf6, 0x11, 0xf5, 0x12, 0x08,&#10;+    0xf4, 0xe3, 0x1b, 0xf5, 0x3a, 0xdc, 0x20, 0x2e, 0xe0, 0xf5, 0x30, 0xe4,&#10;+    0x09, 0xf8, 0x3c, 0x45, 0xd3, 0x08, 0x23, 0xd8, 0x09, 0xe4, 0x35, 0x30,&#10;+    0xe4, 0xfe, 0x07, 0xf6, 0x05, 0x01, 0x05, 0xff, 0xf6, 0x0d, 0x02, 0xfd,&#10;+    0x03, 0x05, 0x0d, 0x00, 0xf5, 0xd6, 0xcf, 0x19, 0x06, 0xee, 0x0d, 0xf2,&#10;+    0x01, 0x18, 0xef, 0x12, 0x04, 0x02, 0x21, 0xd9, 0x02, 0x0d, 0xeb, 0xe9,&#10;+    0x13, 0x08, 0x15, 0xf0, 0xee, 0x03, 0xec, 0x06, 0x17, 0xed, 0x00, 0x1a,&#10;+    0xee, 0xf2, 0xfc, 0x09, 0xec, 0xf8, 0xf8, 0x18, 0xf4, 0x13, 0x04, 0xf6,&#10;+    0x02, 0xf0, 0xfc, 0xfe, 0xe3, 0x01, 0x0a, 0x1c, 0x1b, 0xec, 0x0e, 0x01,&#10;+    0xfb, 0x08, 0x11, 0xf5, 0x00, 0x14, 0xe6, 0x12, 0x07, 0xf4, 0x15, 0x07,&#10;+    0xfc, 0xfb, 0xf5, 0xf1, 0x01, 0x21, 0x01, 0xe9, 0xe8, 0xef, 0xdb, 0xdf,&#10;+    0x1f, 0x0a, 0xdd, 0xd1, 0x16, 0x04, 0xfd, 0xe1, 0x24, 0xf0, 0xec, 0xf4,&#10;+    0x38, 0xe1, 0x16, 0xfd, 0xe0, 0xec, 0xe7, 0x0c, 0x2a, 0x04, 0x0c, 0x17,&#10;+    0xdc, 0xe8, 0xf2, 0x03, 0xec, 0xfd, 0x19, 0xfe, 0xf3, 0xf0, 0xf3, 0xfb,&#10;+    0x18, 0xdf, 0x1c, 0x00, 0x09, 0xf4, 0x18, 0x0b, 0x1f, 0xf6, 0x34, 0x22,&#10;+    0xf4, 0x22, 0x45, 0xeb, 0x23, 0xcf, 0x32, 0x34, 0xf2, 0xf9, 0x29, 0xd4,&#10;+    0xf7, 0x0b, 0x38, 0x2a, 0x09, 0xe6, 0x05, 0x01, 0x0b, 0xfe, 0x17, 0xfb,&#10;+    0x00, 0xeb, 0x08, 0xfd, 0x0c, 0x02, 0x1d, 0xea, 0xfa, 0x0b, 0xeb, 0x09,&#10;+    0xfe, 0xfe, 0x10, 0xe0, 0xf6, 0x06, 0xf0, 0x15, 0xf3, 0x09, 0x11, 0xe4,&#10;+    0xf9, 0x07, 0xe1, 0xed, 0x17, 0x05, 0x0c, 0xe1, 0xdb, 0xf2, 0xf8, 0xea,&#10;+    0x22, 0xe9, 0x02, 0x00, 0xfd, 0xe7, 0xf2, 0xf8, 0xf9, 0xfc, 0xfa, 0xe8,&#10;+    0xe8, 0xeb, 0xe9, 0x0d, 0x04, 0xf8, 0xf8, 0xf7, 0xf8, 0x0d, 0x03, 0x0c,&#10;+    0x13, 0xf2, 0x0f, 0xf9, 0xe6, 0xfd, 0x0f, 0x19, 0x08, 0xf7, 0xfa, 0x01,&#10;+    0xf3, 0x12, 0x1e, 0x05, 0x0a, 0x09, 0xfd, 0x0b, 0x07, 0x08, 0x02, 0xfc,&#10;+    0xd6, 0xe8, 0x14, 0x01, 0x13, 0x19, 0xef, 0xda, 0x0e, 0x0a, 0x07, 0xef,&#10;+    0x34, 0xe0, 0x05, 0x1e, 0x4e, 0xe9, 0x19, 0xff, 0xe1, 0x04, 0xfb, 0x0e,&#10;+    0x11, 0x05, 0x1f, 0x15, 0xd4, 0xec, 0xf9, 0xe7, 0xf9, 0xfc, 0x25, 0xff,&#10;+    0x06, 0xf2, 0x01, 0xf6, 0x2a, 0x17, 0x24, 0x11, 0xf3, 0x1a, 0x1f, 0xfb,&#10;+    0x32, 0xeb, 0x33, 0x2f, 0x00, 0x08, 0x2c, 0xf0, 0x26, 0xf4, 0x25, 0x36,&#10;+    0xd9, 0xf1, 0x1a, 0xd5, 0xec, 0xf9, 0x32, 0x27, 0xfc, 0xf4, 0xf0, 0xe3,&#10;+    0xfa, 0x0c, 0x16, 0x17, 0xfa, 0xf9, 0xe5, 0x1f, 0x1f, 0xfa, 0xff, 0xfd,&#10;+    0x0d, 0x02, 0xe9, 0x0e, 0xf0, 0x12, 0x09, 0xda, 0x02, 0xea, 0xe5, 0x0a,&#10;+    0xff, 0x03, 0x13, 0xf0, 0x0a, 0xf9, 0xe9, 0xff, 0x10, 0xfc, 0x1a, 0xf3,&#10;+    0xf7, 0x0f, 0xf4, 0xfa, 0xf4, 0x05, 0x10, 0x0a, 0xdd, 0x09, 0xf7, 0xf0,&#10;+    0xe5, 0x07, 0x07, 0xfa, 0x02, 0xd7, 0xf8, 0xf7, 0x01, 0xfb, 0x0e, 0xf8,&#10;+    0x07, 0x0f, 0xfe, 0x03, 0x12, 0x05, 0x09, 0x13, 0xf8, 0xdc, 0xfd, 0x27,&#10;+    0x0f, 0xec, 0xf7, 0x07, 0x00, 0xfc, 0x12, 0xf8, 0xfb, 0xea, 0xe4, 0xe9,&#10;+    0xe9, 0xe0, 0xff, 0xdc, 0xd6, 0xeb, 0xf2, 0xf7, 0x0d, 0x1b, 0xe9, 0xc4,&#10;+    0x06, 0x00, 0xfd, 0x04, 0x46, 0xf9, 0xe9, 0x13, 0x2d, 0x0c, 0x1f, 0xf8,&#10;+    0xd3, 0x0c, 0x14, 0x11, 0x05, 0xe5, 0x27, 0x08, 0xc5, 0xef, 0xdf, 0xdd,&#10;+    0x04, 0xf8, 0x11, 0x10, 0xf0, 0xe7, 0xfb, 0x03, 0x3c, 0xe7, 0x14, 0x0c,&#10;+    0xf4, 0xf6, 0x1b, 0x0a, 0x23, 0xf2, 0x2d, 0x1a, 0x08, 0xff, 0x32, 0xe7,&#10;+    0x1a, 0x05, 0x2b, 0x34, 0xf1, 0x0a, 0x00, 0xe8, 0x02, 0xdf, 0x2c, 0x2a,&#10;+    0x03, 0xe6, 0xfc, 0xef, 0xfc, 0xe4, 0x03, 0x01, 0x03, 0xee, 0xe9, 0x15,&#10;+    0x05, 0x03, 0x13, 0x11, 0x0e, 0xee, 0xf5, 0x22, 0x1b, 0x0e, 0xfd, 0xf3,&#10;+    0x0a, 0x02, 0xdd, 0x20, 0xeb, 0x06, 0xf8, 0xe2, 0x06, 0x0e, 0xde, 0x0d,&#10;+    0xf9, 0x16, 0x1c, 0x0c, 0xe0, 0xf0, 0xec, 0x0c, 0x0f, 0xf2, 0x27, 0x1d,&#10;+    0xde, 0xe6, 0xf0, 0xf9, 0xf0, 0x02, 0x0a, 0x07, 0x06, 0xf9, 0x0f, 0xfa,&#10;+    0xf0, 0xee, 0xf1, 0xf7, 0xff, 0x02, 0x0b, 0x0d, 0x1b, 0xee, 0xf6, 0x05,&#10;+    0xff, 0x1c, 0x17, 0x04, 0x05, 0x17, 0x00, 0xff, 0x0d, 0xf3, 0x23, 0x10,&#10;+    0xfd, 0x05, 0xfb, 0xea, 0x03, 0x10, 0x07, 0xd7, 0xf7, 0xff, 0xf3, 0xf1,&#10;+    0x17, 0xed, 0xd3, 0xcb, 0x14, 0x1c, 0xf5, 0x03, 0x47, 0xf6, 0xf7, 0xf2,&#10;+    0x3e, 0xf2, 0x22, 0xf4, 0xed, 0xfc, 0xee, 0x0b, 0xf4, 0xf1, 0x25, 0x10,&#10;+    0xd0, 0xf6, 0x00, 0xef, 0x10, 0xfc, 0x15, 0xe5, 0xdb, 0xf3, 0xea, 0x10,&#10;+    0x22, 0xf2, 0x2b, 0x11, 0xf9, 0x0a, 0xfc, 0xf5, 0x53, 0x16, 0x25, 0x43,&#10;+    0xe0, 0x0e, 0x13, 0xfc, 0x2d, 0xe2, 0x55, 0x65, 0xf4, 0x08, 0x01, 0xdf,&#10;+    0x0a, 0x00, 0x49, 0x1c, 0xfe, 0xdf, 0xef, 0xf2, 0xf9, 0xf6, 0xfd, 0xff,&#10;+    0xf3, 0x02, 0xf6, 0x14, 0x0b, 0xe8, 0x09, 0xfc, 0xfc, 0xe2, 0xe5, 0x11,&#10;+    0x03, 0x09, 0xfb, 0x06, 0x10, 0x1a, 0xf3, 0x0d, 0xfa, 0x0a, 0xd5, 0xf5,&#10;+    0x1a, 0x11, 0xf2, 0xfc, 0x1f, 0xfe, 0x0e, 0xe4, 0xef, 0xd7, 0xee, 0x06,&#10;+    0x1e, 0x04, 0x12, 0x28, 0xf7, 0x0e, 0x06, 0xf8, 0xee, 0xf0, 0x1a, 0x01,&#10;+    0xf7, 0xfd, 0x03, 0x11, 0x19, 0x10, 0x04, 0xfb, 0xd7, 0xfa, 0x16, 0x06,&#10;+    0x07, 0x23, 0xfa, 0x14, 0x11, 0xf1, 0x12, 0x10, 0x04, 0xe1, 0xee, 0xf7,&#10;+    0x21, 0x0e, 0x0a, 0x0a, 0xf8, 0x07, 0x0a, 0xee, 0x03, 0x1f, 0xfa, 0xc4,&#10;+    0xec, 0x12, 0x01, 0x1e, 0xfd, 0xf1, 0xe8, 0xcc, 0xf4, 0x17, 0xff, 0xdd,&#10;+    0x45, 0x10, 0xee, 0xfa, 0x3d, 0xe7, 0x27, 0xdd, 0xd7, 0xf9, 0xf4, 0xf6,&#10;+    0x06, 0xf8, 0x1e, 0x13, 0xe7, 0xe2, 0xf1, 0xe3, 0xf3, 0xf7, 0x18, 0x12,&#10;+    0xe4, 0x0a, 0xdb, 0xff, 0xff, 0xfe, 0x20, 0x09, 0x00, 0xf7, 0x23, 0xf6,&#10;+    0x2d, 0x14, 0x26, 0x28, 0xe5, 0xff, 0x0f, 0xe3, 0x1d, 0xe8, 0x56, 0x43,&#10;+    0xe7, 0xfb, 0xf9, 0xe6, 0xe9, 0xe2, 0x19, 0x19, 0x08, 0xfa, 0xf3, 0xe5,&#10;+    0x23, 0x07, 0x0f, 0xf8, 0xf8, 0xf3, 0xfc, 0x11, 0x2a, 0x05, 0xf4, 0xf1,&#10;+    0xfa, 0xfb, 0xf1, 0x1e, 0x13, 0x0f, 0xf9, 0xf5, 0xfa, 0x09, 0xf9, 0x03,&#10;+    0xf0, 0xf0, 0xe7, 0xec, 0xf1, 0x0c, 0xe6, 0xee, 0xf6, 0x20, 0x0f, 0xe9,&#10;+    0x00, 0xf4, 0xfe, 0xf0, 0x13, 0x0a, 0x17, 0x13, 0xee, 0x13, 0xfb, 0xff,&#10;+    0xf8, 0xfd, 0xf4, 0xe2, 0xe8, 0x06, 0xfc, 0x14, 0x03, 0x17, 0x00, 0x03,&#10;+    0xe6, 0xfd, 0xf2, 0x12, 0x12, 0x20, 0xeb, 0x10, 0x02, 0xf7, 0x13, 0x0d,&#10;+    0x11, 0xfd, 0xde, 0xf5, 0x07, 0xf3, 0x04, 0xff, 0x06, 0x05, 0xfb, 0xea,&#10;+    0xf0, 0x0a, 0x00, 0xb5, 0xe8, 0x1a, 0x03, 0xfe, 0x0d, 0x1a, 0xe7, 0xc0,&#10;+    0xd6, 0xdc, 0xf6, 0xf8, 0x39, 0xf5, 0xd5, 0xf8, 0x22, 0xfa, 0x22, 0x05,&#10;+    0xd0, 0xf4, 0x2d, 0xfc, 0x00, 0x0a, 0x1b, 0xfc, 0xe6, 0x09, 0x14, 0xfa,&#10;+    0x00, 0x1d, 0x1a, 0xfd, 0xf3, 0x18, 0xfc, 0xeb, 0x15, 0xf5, 0x0e, 0x0a,&#10;+    0xf3, 0xf1, 0x1b, 0x05, 0x14, 0x03, 0x2d, 0x27, 0xfb, 0x18, 0x22, 0xef,&#10;+    0xf6, 0x06, 0x28, 0x2b, 0xde, 0xec, 0xef, 0xe8, 0xd3, 0xfe, 0x17, 0x12,&#10;+    0x01, 0x13, 0x05, 0xf7, 0x00, 0xde, 0xf3, 0xe5, 0x03, 0xfb, 0x07, 0x0b,&#10;+    0xfd, 0xdc, 0xdf, 0x03, 0x0c, 0x00, 0xfa, 0x06, 0x0e, 0x02, 0x05, 0xfa,&#10;+    0xfd, 0xed, 0x09, 0x0c, 0xfd, 0xfb, 0x0c, 0xf0, 0xe4, 0x04, 0xd6, 0xf3,&#10;+    0x09, 0x0a, 0xf9, 0xf8, 0xe2, 0xef, 0xdf, 0xf0, 0xf8, 0x03, 0x0f, 0x20,&#10;+    0xf4, 0xe3, 0xf8, 0x02, 0xe2, 0xe5, 0x25, 0x0f, 0xeb, 0xf8, 0xe9, 0xfd,&#10;+    0x04, 0x0c, 0x0c, 0xfe, 0x01, 0x08, 0xfc, 0xfc, 0x1b, 0x01, 0xe5, 0x13,&#10;+    0xf9, 0xe8, 0x07, 0x20, 0xfe, 0x06, 0xec, 0xfe, 0x09, 0xef, 0x14, 0x04,&#10;+    0x0b, 0xf5, 0xe7, 0xff, 0x0a, 0x02, 0x09, 0xe9, 0xc4, 0x16, 0x0d, 0xe7,&#10;+    0x15, 0x14, 0xf1, 0xd0, 0xec, 0xe7, 0xf0, 0xf0, 0x33, 0x05, 0xda, 0xf2,&#10;+    0x0b, 0x08, 0x38, 0x01, 0x07, 0xfd, 0xd8, 0x06, 0xd9, 0xf0, 0x16, 0x1f,&#10;+    0xff, 0xf7, 0xe0, 0xd8, 0xf3, 0xf7, 0x12, 0x08, 0x0e, 0x05, 0xf6, 0x03,&#10;+    0xef, 0x1b, 0x12, 0xf4, 0xe8, 0x0f, 0x02, 0xfd, 0xf2, 0x16, 0x26, 0x22,&#10;+    0xe0, 0x07, 0xf7, 0xe6, 0xeb, 0x16, 0x22, 0x1a, 0x0b, 0x01, 0xf5, 0xea,&#10;+    0xd2, 0x22, 0x0f, 0x13, 0x15, 0x08, 0xf0, 0xfb, 0xed, 0x11, 0xf3, 0xe9,&#10;+    0xff, 0xde, 0x0a, 0x18, 0x0f, 0x02, 0xfb, 0xf9, 0xfb, 0xe8, 0x12, 0x18,&#10;+    0x01, 0xf4, 0xf6, 0xf8, 0xf0, 0x1f, 0x24, 0x15, 0xf5, 0x00, 0x1c, 0xf9,&#10;+    0x01, 0x0a, 0x11, 0xd5, 0x01, 0x12, 0x02, 0xec, 0xfd, 0x07, 0xf2, 0xea,&#10;+    0xf9, 0xff, 0xf7, 0xfb, 0x15, 0xec, 0xe5, 0x01, 0xeb, 0x05, 0xf9, 0x10,&#10;+    0xfe, 0x28, 0xe5, 0x0a, 0xeb, 0x1b, 0x0e, 0xf9, 0xde, 0x02, 0x15, 0x0a,&#10;+    0xff, 0xfe, 0x11, 0x24, 0x03, 0xf8, 0x00, 0x08, 0xfd, 0x0e, 0xeb, 0xf3,&#10;+    0xf6, 0xf7, 0x14, 0x0e, 0xfc, 0xf5, 0xde, 0xf5, 0x9e, 0xfe, 0xff, 0xff,&#10;+    0x04, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0xab, 0x01, 0x00, 0x00,&#10;+    0xfa, 0xfd, 0xff, 0xff, 0xa2, 0xff, 0xff, 0xff, 0xba, 0x00, 0x00, 0x00,&#10;+    0x24, 0xfc, 0xff, 0xff, 0x0f, 0x00, 0x00, 0x00, 0x54, 0x4f, 0x43, 0x4f,&#10;+    0x20, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x65, 0x64, 0x2e, 0x00,&#10;+    0x01, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x24, 0xfb, 0xff, 0xff,&#10;+    0x68, 0x01, 0x00, 0x00, 0x5c, 0x01, 0x00, 0x00, 0x50, 0x01, 0x00, 0x00,&#10;+    0x04, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0xf4, 0x00, 0x00, 0x00,&#10;+    0x90, 0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,&#10;+    0xce, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x09, 0x03, 0x00, 0x00, 0x00,&#10;+    0x1c, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,&#10;+    0x1a, 0xff, 0xff, 0xff, 0x00, 0x00, 0x80, 0x3f, 0x01, 0x00, 0x00, 0x00,&#10;+    0x09, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00,&#10;+    0x00, 0x00, 0x0e, 0x00, 0x18, 0x00, 0x08, 0x00, 0x0c, 0x00, 0x10, 0x00,&#10;+    0x07, 0x00, 0x14, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08,&#10;+    0x01, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00,&#10;+    0x04, 0x00, 0x00, 0x00, 0xc4, 0xfc, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00,&#10;+    0x06, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,&#10;+    0x07, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x00,&#10;+    0x16, 0x00, 0x00, 0x00, 0x08, 0x00, 0x0c, 0x00, 0x07, 0x00, 0x10, 0x00,&#10;+    0x0e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x38, 0x00, 0x00, 0x00,&#10;+    0x2c, 0x00, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x00,&#10;+    0x14, 0x00, 0x00, 0x00, 0x08, 0x00, 0x0c, 0x00, 0x10, 0x00, 0x07, 0x00,&#10;+    0x0e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x02, 0x00, 0x00, 0x00,&#10;+    0x02, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,&#10;+    0x02, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,&#10;+    0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x00,&#10;+    0x1a, 0x00, 0x08, 0x00, 0x0c, 0x00, 0x10, 0x00, 0x07, 0x00, 0x14, 0x00,&#10;+    0x0e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x02, 0x00, 0x00, 0x00,&#10;+    0x38, 0x00, 0x00, 0x00, 0x2c, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00,&#10;+    0x00, 0x00, 0x06, 0x00, 0x08, 0x00, 0x04, 0x00, 0x06, 0x00, 0x00, 0x00,&#10;+    0x04, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff,&#10;+    0x31, 0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,&#10;+    0x01, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,&#10;+    0x03, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,&#10;+    0x09, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,&#10;+    0x0a, 0x00, 0x00, 0x00, 0x34, 0x04, 0x00, 0x00, 0xcc, 0x03, 0x00, 0x00,&#10;+    0x4c, 0x03, 0x00, 0x00, 0xdc, 0x02, 0x00, 0x00, 0x60, 0x02, 0x00, 0x00,&#10;+    0x20, 0x02, 0x00, 0x00, 0xb0, 0x01, 0x00, 0x00, 0x44, 0x01, 0x00, 0x00,&#10;+    0x70, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x02, 0xfc, 0xff, 0xff,&#10;+    0x00, 0x00, 0x00, 0x09, 0x44, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00,&#10;+    0x28, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0xf4, 0xfb, 0xff, 0xff,&#10;+    0x14, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,&#10;+    0x80, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00,&#10;+    0x00, 0x00, 0x80, 0x3b, 0x0e, 0x00, 0x00, 0x00, 0x6c, 0x61, 0x62, 0x65,&#10;+    0x6c, 0x73, 0x5f, 0x73, 0x6f, 0x66, 0x74, 0x6d, 0x61, 0x78, 0x00, 0x00,&#10;+    0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,&#10;+    0x00, 0x00, 0x0e, 0x00, 0x1a, 0x00, 0x08, 0x00, 0x07, 0x00, 0x0c, 0x00,&#10;+    0x10, 0x00, 0x14, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09,&#10;+    0xb4, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x94, 0x00, 0x00, 0x00,&#10;+    0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x12, 0x00, 0x10, 0x00, 0x00, 0x00,&#10;+    0x00, 0x00, 0x04, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x00,&#10;+    0x12, 0x00, 0x00, 0x00, 0x50, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,&#10;+    0x03, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,&#10;+    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,&#10;+    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,&#10;+    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,&#10;+    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,&#10;+    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,&#10;+    0x08, 0x00, 0x00, 0x00, 0x11, 0x1e, 0x23, 0x3a, 0x9e, 0xa1, 0x15, 0x39,&#10;+    0x23, 0x69, 0x45, 0x3a, 0x09, 0xe4, 0xe4, 0x39, 0x65, 0xd7, 0x13, 0x3a,&#10;+    0xe0, 0xb2, 0xfd, 0x39, 0x1b, 0xc1, 0x53, 0x3a, 0xc2, 0x50, 0x2d, 0x3a,&#10;+    0x12, 0x00, 0x00, 0x00, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x77, 0x65,&#10;+    0x69, 0x67, 0x68, 0x74, 0x73, 0x2f, 0x72, 0x65, 0x61, 0x64, 0x00, 0x00,&#10;+    0x04, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00,&#10;+    0x08, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x3a, 0xfd, 0xff, 0xff,&#10;+    0x00, 0x00, 0x00, 0x09, 0x54, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,&#10;+    0x28, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x2c, 0xfd, 0xff, 0xff,&#10;+    0x14, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,&#10;+    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,&#10;+    0xb5, 0xfa, 0xfa, 0x39, 0x1f, 0x00, 0x00, 0x00, 0x66, 0x69, 0x6e, 0x61,&#10;+    0x6c, 0x5f, 0x66, 0x63, 0x5f, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x73,&#10;+    0x2f, 0x72, 0x65, 0x61, 0x64, 0x2f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70,&#10;+    0x6f, 0x73, 0x65, 0x00, 0x02, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,&#10;+    0xa0, 0x0f, 0x00, 0x00, 0xa2, 0xfd, 0xff, 0xff, 0x00, 0x00, 0x00, 0x09,&#10;+    0x58, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x00,&#10;+    0x04, 0x00, 0x00, 0x00, 0x74, 0xfe, 0xff, 0xff, 0x30, 0x00, 0x00, 0x00,&#10;+    0x24, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,&#10;+    0x01, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,&#10;+    0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0xf2, 0xdd, 0xbb, 0x3d,&#10;+    0x01, 0x00, 0x00, 0x00, 0x32, 0xa3, 0x25, 0x41, 0x01, 0x00, 0x00, 0x00,&#10;+    0xf6, 0xa0, 0x50, 0xc1, 0x05, 0x00, 0x00, 0x00, 0x61, 0x64, 0x64, 0x5f,&#10;+    0x31, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,&#10;+    0x04, 0x00, 0x00, 0x00, 0x0e, 0xfe, 0xff, 0xff, 0x00, 0x00, 0x00, 0x02,&#10;+    0x2c, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,&#10;+    0x08, 0x00, 0x00, 0x00, 0x04, 0x00, 0x04, 0x00, 0x04, 0x00, 0x00, 0x00,&#10;+    0x0f, 0x00, 0x00, 0x00, 0x52, 0x65, 0x73, 0x68, 0x61, 0x70, 0x65, 0x5f,&#10;+    0x32, 0x2f, 0x73, 0x68, 0x61, 0x70, 0x65, 0x00, 0x01, 0x00, 0x00, 0x00,&#10;+    0x04, 0x00, 0x00, 0x00, 0x4a, 0xfe, 0xff, 0xff, 0x00, 0x00, 0x00, 0x09,&#10;+    0x5c, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x00,&#10;+    0x04, 0x00, 0x00, 0x00, 0x1c, 0xff, 0xff, 0xff, 0x30, 0x00, 0x00, 0x00,&#10;+    0x24, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,&#10;+    0x01, 0x00, 0x00, 0x00, 0x80, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,&#10;+    0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x50, 0x50, 0xd0, 0x3d,&#10;+    0x01, 0x00, 0x00, 0x00, 0x00, 0x80, 0xcf, 0x41, 0x01, 0x00, 0x00, 0x00,&#10;+    0x00, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x52, 0x65, 0x73, 0x68,&#10;+    0x61, 0x70, 0x65, 0x5f, 0x32, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,&#10;+    0x01, 0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00,&#10;+    0x01, 0x00, 0x00, 0x00, 0xc2, 0xfe, 0xff, 0xff, 0x00, 0x00, 0x00, 0x09,&#10;+    0x58, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00,&#10;+    0x04, 0x00, 0x00, 0x00, 0x94, 0xff, 0xff, 0xff, 0x2c, 0x00, 0x00, 0x00,&#10;+    0x20, 0x00, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,&#10;+    0x01, 0x00, 0x00, 0x00, 0x80, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,&#10;+    0x01, 0x00, 0x00, 0x00, 0x50, 0x50, 0xd0, 0x3d, 0x01, 0x00, 0x00, 0x00,&#10;+    0x00, 0x80, 0xcf, 0x41, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,&#10;+    0x09, 0x00, 0x00, 0x00, 0x52, 0x65, 0x73, 0x68, 0x61, 0x70, 0x65, 0x5f,&#10;+    0x31, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,&#10;+    0xa8, 0x07, 0x00, 0x00, 0x2e, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x09,&#10;+    0x60, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x4c, 0x00, 0x00, 0x00,&#10;+    0x10, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x14, 0x00, 0x04, 0x00, 0x08, 0x00,&#10;+    0x0c, 0x00, 0x10, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x2c, 0x00, 0x00, 0x00,&#10;+    0x20, 0x00, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,&#10;+    0x01, 0x00, 0x00, 0x00, 0x80, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,&#10;+    0x01, 0x00, 0x00, 0x00, 0x3a, 0x6a, 0xac, 0x3d, 0x01, 0x00, 0x00, 0x00,&#10;+    0xd0, 0xbd, 0xab, 0x41, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,&#10;+    0x04, 0x00, 0x00, 0x00, 0x52, 0x65, 0x6c, 0x75, 0x00, 0x00, 0x00, 0x00,&#10;+    0x04, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x19, 0x00, 0x00, 0x00,&#10;+    0x14, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0xaa, 0xff, 0xff, 0xff,&#10;+    0x00, 0x00, 0x00, 0x02, 0x44, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,&#10;+    0x2c, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x9c, 0xff, 0xff, 0xff,&#10;+    0x18, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,&#10;+    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,&#10;+    0x01, 0x00, 0x00, 0x00, 0x96, 0x08, 0x29, 0x38, 0x0b, 0x00, 0x00, 0x00,&#10;+    0x4d, 0x61, 0x74, 0x4d, 0x75, 0x6c, 0x5f, 0x62, 0x69, 0x61, 0x73, 0x00,&#10;+    0x01, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x00,&#10;+    0x18, 0x00, 0x08, 0x00, 0x07, 0x00, 0x0c, 0x00, 0x10, 0x00, 0x14, 0x00,&#10;+    0x0e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xa0, 0x00, 0x00, 0x00,&#10;+    0x03, 0x00, 0x00, 0x00, 0x88, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,&#10;+    0x0c, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x08, 0x00,&#10;+    0x0c, 0x00, 0x00, 0x00, 0x4c, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,&#10;+    0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,&#10;+    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,&#10;+    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,&#10;+    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,&#10;+    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,&#10;+    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,&#10;+    0x9a, 0xbb, 0x84, 0x38, 0x83, 0x84, 0x73, 0x37, 0x5b, 0xa3, 0xa0, 0x38,&#10;+    0x16, 0x41, 0x3a, 0x38, 0xc7, 0x9a, 0x70, 0x38, 0xed, 0x70, 0x4e, 0x38,&#10;+    0x54, 0x4f, 0xac, 0x38, 0xfd, 0x07, 0x8d, 0x38, 0x0b, 0x00, 0x00, 0x00,&#10;+    0x43, 0x6f, 0x6e, 0x76, 0x32, 0x44, 0x5f, 0x62, 0x69, 0x61, 0x73, 0x00,&#10;+    0x01, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,&#10;+    0x4c, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x00, 0x00,&#10;+    0x04, 0x00, 0x00, 0x00, 0xe6, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x19,&#10;+    0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x06, 0x00, 0x05, 0x00,&#10;+    0x06, 0x00, 0x00, 0x00, 0x00, 0x16, 0x0a, 0x00, 0x0e, 0x00, 0x07, 0x00,&#10;+    0x00, 0x00, 0x08, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09,&#10;+    0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x0c, 0x00, 0x07, 0x00,&#10;+    0x00, 0x00, 0x08, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04,&#10;+    0x03, 0x00, 0x00, 0x00};&#10;+const int g_model_len = 18712;&#10;" />
			<string key="comment_change" value="True" />
		</event>
	</trace>
	<trace>
		<string key="file" value="model.h" />
	</trace>
	<trace>
		<string key="file" value="output_handler.cpp" />
		<event>
			<string key="timestamp" value="2023-10-06T13:50:53+03:00" />
			<string key="author" value="Me No Dev" />
			<string key="change_type" value="ADD" />
			<string key="commit_message" value="Add TFLite Micro examples (#8717)&#10;&#10;* create TFLite library&#13;&#10;&#13;&#10;* add TFLite hello_world example&#13;&#10;&#13;&#10;* add TFLite micro_speech example&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Sanket Wadekar &lt;67091512+sanketwadekar@users.noreply.github.com&gt;" />
			<int key="additions" value="23" />
			<int key="deletions" value="0" />
			<string key="diff" value='@@ -0,0 +1,23 @@&#10;+/* Copyright 2019 The TensorFlow Authors. All Rights Reserved.&#10;+&#10;+Licensed under the Apache License, Version 2.0 (the "License");&#10;+you may not use this file except in compliance with the License.&#10;+You may obtain a copy of the License at&#10;+&#10;+    http://www.apache.org/licenses/LICENSE-2.0&#10;+&#10;+Unless required by applicable law or agreed to in writing, software&#10;+distributed under the License is distributed on an "AS IS" BASIS,&#10;+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&#10;+See the License for the specific language governing permissions and&#10;+limitations under the License.&#10;+==============================================================================*/&#10;+&#10;+#include "output_handler.h"&#10;+#include "tensorflow/lite/micro/micro_log.h"&#10;+&#10;+void HandleOutput(float x_value, float y_value) {&#10;+  // Log the current X and Y values&#10;+  MicroPrintf("x_value: %f, y_value: %f\n", static_cast&lt;double&gt;(x_value),&#10;+              static_cast&lt;double&gt;(y_value));&#10;+}&#10;' />
			<string key="comment_change" value="True" />
		</event>
	</trace>
	<trace>
		<string key="file" value="output_handler.h" />
	</trace>
	<trace>
		<string key="file" value="audio_provider.cpp" />
		<event>
			<string key="timestamp" value="2023-10-06T13:50:53+03:00" />
			<string key="author" value="Me No Dev" />
			<string key="change_type" value="ADD" />
			<string key="commit_message" value="Add TFLite Micro examples (#8717)&#10;&#10;* create TFLite library&#13;&#10;&#13;&#10;* add TFLite hello_world example&#13;&#10;&#13;&#10;* add TFLite micro_speech example&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Sanket Wadekar &lt;67091512+sanketwadekar@users.noreply.github.com&gt;" />
			<int key="additions" value="198" />
			<int key="deletions" value="0" />
			<string key="diff" value='@@ -0,0 +1,198 @@&#10;+/* Copyright 2019 The TensorFlow Authors. All Rights Reserved.&#10;+&#10;+Licensed under the Apache License, Version 2.0 (the "License");&#10;+you may not use this file except in compliance with the License.&#10;+You may obtain a copy of the License at&#10;+&#10;+    http://www.apache.org/licenses/LICENSE-2.0&#10;+&#10;+Unless required by applicable law or agreed to in writing, software&#10;+distributed under the License is distributed on an "AS IS" BASIS,&#10;+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&#10;+See the License for the specific language governing permissions and&#10;+limitations under the License.&#10;+==============================================================================*/&#10;+&#10;+#include "audio_provider.h"&#10;+&#10;+#include &lt;cstdlib&gt;&#10;+#include &lt;cstring&gt;&#10;+&#10;+// FreeRTOS.h must be included before some of the following dependencies.&#10;+// Solves b/150260343.&#10;+// clang-format off&#10;+#include "freertos/FreeRTOS.h"&#10;+// clang-format on&#10;+&#10;+#include "driver/i2s.h"&#10;+#include "esp_log.h"&#10;+#include "esp_spi_flash.h"&#10;+#include "esp_system.h"&#10;+#include "esp_timer.h"&#10;+#include "freertos/task.h"&#10;+#include "ringbuf.h"&#10;+#include "micro_model_settings.h"&#10;+&#10;+using namespace std;&#10;+&#10;+#define NO_I2S_SUPPORT CONFIG_IDF_TARGET_ESP32C2 || \&#10;+                          (CONFIG_IDF_TARGET_ESP32C3 \&#10;+                          &amp;&amp; (ESP_IDF_VERSION &lt; ESP_IDF_VERSION_VAL(4, 4, 0)))&#10;+&#10;+static const char* TAG = "TF_LITE_AUDIO_PROVIDER";&#10;+/* ringbuffer to hold the incoming audio data */&#10;+ringbuf_t* g_audio_capture_buffer;&#10;+volatile int32_t g_latest_audio_timestamp = 0;&#10;+/* model requires 20ms new data from g_audio_capture_buffer and 10ms old data&#10;+ * each time , storing old data in the histrory buffer , {&#10;+ * history_samples_to_keep = 10 * 16 } */&#10;+constexpr int32_t history_samples_to_keep =&#10;+    ((kFeatureSliceDurationMs - kFeatureSliceStrideMs) *&#10;+     (kAudioSampleFrequency / 1000));&#10;+/* new samples to get each time from ringbuffer, { new_samples_to_get =  20 * 16&#10;+ * } */&#10;+constexpr int32_t new_samples_to_get =&#10;+    (kFeatureSliceStrideMs * (kAudioSampleFrequency / 1000));&#10;+&#10;+namespace {&#10;+int16_t g_audio_output_buffer[kMaxAudioSampleSize];&#10;+bool g_is_audio_initialized = false;&#10;+int16_t g_history_buffer[history_samples_to_keep];&#10;+}  // namespace&#10;+&#10;+const int32_t kAudioCaptureBufferSize = 80000;&#10;+const int32_t i2s_bytes_to_read = 3200;&#10;+&#10;+#if NO_I2S_SUPPORT&#10;+  // nothing to be done here&#10;+#else&#10;+static void i2s_init(void) {&#10;+  // Start listening for audio: MONO @ 16KHz&#10;+  i2s_config_t i2s_config = {&#10;+      .mode = (i2s_mode_t)(I2S_MODE_MASTER | I2S_MODE_RX | I2S_MODE_TX),&#10;+      .sample_rate = 16000,&#10;+      .bits_per_sample = (i2s_bits_per_sample_t)16,&#10;+      .channel_format = I2S_CHANNEL_FMT_ONLY_LEFT,&#10;+      .communication_format = I2S_COMM_FORMAT_I2S,&#10;+      .intr_alloc_flags = 0,&#10;+      .dma_buf_count = 3,&#10;+      .dma_buf_len = 300,&#10;+      .use_apll = false,&#10;+      .tx_desc_auto_clear = false,&#10;+      .fixed_mclk = -1,&#10;+  };&#10;+  i2s_pin_config_t pin_config = {&#10;+      .bck_io_num = 26,    // IIS_SCLK&#10;+      .ws_io_num = 32,     // IIS_LCLK&#10;+      .data_out_num = -1,  // IIS_DSIN&#10;+      .data_in_num = 33,   // IIS_DOUT&#10;+  };&#10;+  esp_err_t ret = 0;&#10;+  ret = i2s_driver_install((i2s_port_t)1, &amp;i2s_config, 0, NULL);&#10;+  if (ret != ESP_OK) {&#10;+    ESP_LOGE(TAG, "Error in i2s_driver_install");&#10;+  }&#10;+  ret = i2s_set_pin((i2s_port_t)1, &amp;pin_config);&#10;+  if (ret != ESP_OK) {&#10;+    ESP_LOGE(TAG, "Error in i2s_set_pin");&#10;+  }&#10;+&#10;+  ret = i2s_zero_dma_buffer((i2s_port_t)1);&#10;+  if (ret != ESP_OK) {&#10;+    ESP_LOGE(TAG, "Error in initializing dma buffer with 0");&#10;+  }&#10;+}&#10;+#endif&#10;+&#10;+static void CaptureSamples(void* arg) {&#10;+#if NO_I2S_SUPPORT&#10;+  ESP_LOGE(TAG, "i2s support not available on C3 chip for IDF &lt; 4.4.0");&#10;+  return;&#10;+#else&#10;+  size_t bytes_read = i2s_bytes_to_read;&#10;+  uint8_t i2s_read_buffer[i2s_bytes_to_read] = {};&#10;+  i2s_init();&#10;+  while (1) {&#10;+    /* read 100ms data at once from i2s */&#10;+    i2s_read((i2s_port_t)1, (void*)i2s_read_buffer, i2s_bytes_to_read,&#10;+             &amp;bytes_read, pdMS_TO_TICKS(100));&#10;+    if (bytes_read &lt;= 0) {&#10;+      ESP_LOGE(TAG, "Error in I2S read : %d", bytes_read);&#10;+    } else {&#10;+      if (bytes_read &lt; i2s_bytes_to_read) {&#10;+        ESP_LOGW(TAG, "Partial I2S read");&#10;+      }&#10;+      /* write bytes read by i2s into ring buffer */&#10;+      int bytes_written = rb_write(g_audio_capture_buffer,&#10;+                                   (uint8_t*)i2s_read_buffer, bytes_read, pdMS_TO_TICKS(100));&#10;+      /* update the timestamp (in ms) to let the model know that new data has&#10;+       * arrived */&#10;+      g_latest_audio_timestamp = g_latest_audio_timestamp +&#10;+          ((1000 * (bytes_written / 2)) / kAudioSampleFrequency);&#10;+      if (bytes_written &lt;= 0) {&#10;+        ESP_LOGE(TAG, "Could Not Write in Ring Buffer: %d ", bytes_written);&#10;+      } else if (bytes_written &lt; bytes_read) {&#10;+        ESP_LOGW(TAG, "Partial Write");&#10;+      }&#10;+    }&#10;+  }&#10;+#endif&#10;+  vTaskDelete(NULL);&#10;+}&#10;+&#10;+TfLiteStatus InitAudioRecording() {&#10;+  g_audio_capture_buffer = rb_init("tf_ringbuffer", kAudioCaptureBufferSize);&#10;+  if (!g_audio_capture_buffer) {&#10;+    ESP_LOGE(TAG, "Error creating ring buffer");&#10;+    return kTfLiteError;&#10;+  }&#10;+  /* create CaptureSamples Task which will get the i2s_data from mic and fill it&#10;+   * in the ring buffer */&#10;+  xTaskCreate(CaptureSamples, "CaptureSamples", 1024 * 32, NULL, 10, NULL);&#10;+  while (!g_latest_audio_timestamp) {&#10;+    vTaskDelay(1); // one tick delay to avoid watchdog&#10;+  }&#10;+  ESP_LOGI(TAG, "Audio Recording started");&#10;+  return kTfLiteOk;&#10;+}&#10;+&#10;+TfLiteStatus GetAudioSamples(int start_ms, int duration_ms,&#10;+                             int* audio_samples_size, int16_t** audio_samples) {&#10;+  if (!g_is_audio_initialized) {&#10;+    TfLiteStatus init_status = InitAudioRecording();&#10;+    if (init_status != kTfLiteOk) {&#10;+      return init_status;&#10;+    }&#10;+    g_is_audio_initialized = true;&#10;+  }&#10;+  /* copy 160 samples (320 bytes) into output_buff from history */&#10;+  memcpy((void*)(g_audio_output_buffer), (void*)(g_history_buffer),&#10;+         history_samples_to_keep * sizeof(int16_t));&#10;+&#10;+  /* copy 320 samples (640 bytes) from rb at ( int16_t*(g_audio_output_buffer) +&#10;+   * 160 ), first 160 samples (320 bytes) will be from history */&#10;+  int bytes_read =&#10;+      rb_read(g_audio_capture_buffer,&#10;+              ((uint8_t*)(g_audio_output_buffer + history_samples_to_keep)),&#10;+              new_samples_to_get * sizeof(int16_t), pdMS_TO_TICKS(100));&#10;+  if (bytes_read &lt; 0) {&#10;+    ESP_LOGE(TAG, " Model Could not read data from Ring Buffer");&#10;+  } else if (bytes_read &lt; new_samples_to_get * sizeof(int16_t)) {&#10;+    ESP_LOGD(TAG, "RB FILLED RIGHT NOW IS %d",&#10;+             rb_filled(g_audio_capture_buffer));&#10;+    ESP_LOGD(TAG, " Partial Read of Data by Model ");&#10;+    ESP_LOGV(TAG, " Could only read %d bytes when required %d bytes ",&#10;+             bytes_read, (int) (new_samples_to_get * sizeof(int16_t)));&#10;+  }&#10;+&#10;+  /* copy 320 bytes from output_buff into history */&#10;+  memcpy((void*)(g_history_buffer),&#10;+         (void*)(g_audio_output_buffer + new_samples_to_get),&#10;+         history_samples_to_keep * sizeof(int16_t));&#10;+&#10;+  *audio_samples_size = kMaxAudioSampleSize;&#10;+  *audio_samples = g_audio_output_buffer;&#10;+  return kTfLiteOk;&#10;+}&#10;+&#10;+int32_t LatestAudioTimestamp() { return g_latest_audio_timestamp; }&#10;' />
			<string key="comment_change" value="True" />
		</event>
	</trace>
	<trace>
		<string key="file" value="audio_provider.h" />
	</trace>
	<trace>
		<string key="file" value="command_responder.cpp" />
		<event>
			<string key="timestamp" value="2023-10-06T13:50:53+03:00" />
			<string key="author" value="Me No Dev" />
			<string key="change_type" value="ADD" />
			<string key="commit_message" value="Add TFLite Micro examples (#8717)&#10;&#10;* create TFLite library&#13;&#10;&#13;&#10;* add TFLite hello_world example&#13;&#10;&#13;&#10;* add TFLite micro_speech example&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Sanket Wadekar &lt;67091512+sanketwadekar@users.noreply.github.com&gt;" />
			<int key="additions" value="27" />
			<int key="deletions" value="0" />
			<string key="diff" value='@@ -0,0 +1,27 @@&#10;+/* Copyright 2019 The TensorFlow Authors. All Rights Reserved.&#10;+&#10;+Licensed under the Apache License, Version 2.0 (the "License");&#10;+you may not use this file except in compliance with the License.&#10;+You may obtain a copy of the License at&#10;+&#10;+    http://www.apache.org/licenses/LICENSE-2.0&#10;+&#10;+Unless required by applicable law or agreed to in writing, software&#10;+distributed under the License is distributed on an "AS IS" BASIS,&#10;+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&#10;+See the License for the specific language governing permissions and&#10;+limitations under the License.&#10;+==============================================================================*/&#10;+&#10;+#include "command_responder.h"&#10;+#include "tensorflow/lite/micro/micro_log.h"&#10;+&#10;+// The default implementation writes out the name of the recognized command&#10;+// to the error console. Real applications will want to take some custom&#10;+// action instead, and should implement their own versions of this function.&#10;+void RespondToCommand(int32_t current_time, const char* found_command,&#10;+                      uint8_t score, bool is_new_command) {&#10;+  if (is_new_command) {&#10;+    MicroPrintf("Heard %s (%d) @%dms", found_command, score, current_time);&#10;+  }&#10;+}&#10;' />
			<string key="comment_change" value="True" />
		</event>
	</trace>
	<trace>
		<string key="file" value="command_responder.h" />
	</trace>
	<trace>
		<string key="file" value="feature_provider.cpp" />
		<event>
			<string key="timestamp" value="2023-10-06T13:50:53+03:00" />
			<string key="author" value="Me No Dev" />
			<string key="change_type" value="ADD" />
			<string key="commit_message" value="Add TFLite Micro examples (#8717)&#10;&#10;* create TFLite library&#13;&#10;&#13;&#10;* add TFLite hello_world example&#13;&#10;&#13;&#10;* add TFLite micro_speech example&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Sanket Wadekar &lt;67091512+sanketwadekar@users.noreply.github.com&gt;" />
			<int key="additions" value="118" />
			<int key="deletions" value="0" />
			<string key="diff" value="@@ -0,0 +1,118 @@&#10;+/* Copyright 2018 The TensorFlow Authors. All Rights Reserved.&#10;+&#10;+Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);&#10;+you may not use this file except in compliance with the License.&#10;+You may obtain a copy of the License at&#10;+&#10;+    http://www.apache.org/licenses/LICENSE-2.0&#10;+&#10;+Unless required by applicable law or agreed to in writing, software&#10;+distributed under the License is distributed on an &quot;AS IS&quot; BASIS,&#10;+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&#10;+See the License for the specific language governing permissions and&#10;+limitations under the License.&#10;+==============================================================================*/&#10;+&#10;+#include &quot;feature_provider.h&quot;&#10;+&#10;+#include &quot;audio_provider.h&quot;&#10;+#include &quot;micro_features_generator.h&quot;&#10;+#include &quot;micro_model_settings.h&quot;&#10;+#include &quot;tensorflow/lite/micro/micro_log.h&quot;&#10;+&#10;+FeatureProvider::FeatureProvider(int feature_size, int8_t* feature_data)&#10;+    : feature_size_(feature_size),&#10;+      feature_data_(feature_data),&#10;+      is_first_run_(true) {&#10;+  // Initialize the feature data to default values.&#10;+  for (int n = 0; n &lt; feature_size_; ++n) {&#10;+    feature_data_[n] = 0;&#10;+  }&#10;+}&#10;+&#10;+FeatureProvider::~FeatureProvider() {}&#10;+&#10;+TfLiteStatus FeatureProvider::PopulateFeatureData(&#10;+    int32_t last_time_in_ms, int32_t time_in_ms, int* how_many_new_slices) {&#10;+  if (feature_size_ != kFeatureElementCount) {&#10;+    MicroPrintf(&quot;Requested feature_data_ size %d doesn't match %d&quot;,&#10;+                feature_size_, kFeatureElementCount);&#10;+    return kTfLiteError;&#10;+  }&#10;+&#10;+  // Quantize the time into steps as long as each window stride, so we can&#10;+  // figure out which audio data we need to fetch.&#10;+  const int last_step = (last_time_in_ms / kFeatureSliceStrideMs);&#10;+  const int current_step = (time_in_ms / kFeatureSliceStrideMs);&#10;+&#10;+  int slices_needed = current_step - last_step;&#10;+  // If this is the first call, make sure we don't use any cached information.&#10;+  if (is_first_run_) {&#10;+    TfLiteStatus init_status = InitializeMicroFeatures();&#10;+    if (init_status != kTfLiteOk) {&#10;+      return init_status;&#10;+    }&#10;+    is_first_run_ = false;&#10;+    slices_needed = kFeatureSliceCount;&#10;+  }&#10;+  if (slices_needed &gt; kFeatureSliceCount) {&#10;+    slices_needed = kFeatureSliceCount;&#10;+  }&#10;+  *how_many_new_slices = slices_needed;&#10;+&#10;+  const int slices_to_keep = kFeatureSliceCount - slices_needed;&#10;+  const int slices_to_drop = kFeatureSliceCount - slices_to_keep;&#10;+  // If we can avoid recalculating some slices, just move the existing data&#10;+  // up in the spectrogram, to perform something like this:&#10;+  // last time = 80ms          current time = 120ms&#10;+  // +-----------+             +-----------+&#10;+  // | data@20ms |         --&gt; | data@60ms |&#10;+  // +-----------+       --    +-----------+&#10;+  // | data@40ms |     --  --&gt; | data@80ms |&#10;+  // +-----------+   --  --    +-----------+&#10;+  // | data@60ms | --  --      |  &lt;empty&gt;  |&#10;+  // +-----------+   --        +-----------+&#10;+  // | data@80ms | --          |  &lt;empty&gt;  |&#10;+  // +-----------+             +-----------+&#10;+  if (slices_to_keep &gt; 0) {&#10;+    for (int dest_slice = 0; dest_slice &lt; slices_to_keep; ++dest_slice) {&#10;+      int8_t* dest_slice_data =&#10;+          feature_data_ + (dest_slice * kFeatureSliceSize);&#10;+      const int src_slice = dest_slice + slices_to_drop;&#10;+      const int8_t* src_slice_data =&#10;+          feature_data_ + (src_slice * kFeatureSliceSize);&#10;+      for (int i = 0; i &lt; kFeatureSliceSize; ++i) {&#10;+        dest_slice_data[i] = src_slice_data[i];&#10;+      }&#10;+    }&#10;+  }&#10;+  // Any slices that need to be filled in with feature data have their&#10;+  // appropriate audio data pulled, and features calculated for that slice.&#10;+  if (slices_needed &gt; 0) {&#10;+    for (int new_slice = slices_to_keep; new_slice &lt; kFeatureSliceCount;&#10;+         ++new_slice) {&#10;+      const int new_step = (current_step - kFeatureSliceCount + 1) + new_slice;&#10;+      const int32_t slice_start_ms = (new_step * kFeatureSliceStrideMs);&#10;+      int16_t* audio_samples = nullptr;&#10;+      int audio_samples_size = 0;&#10;+      // TODO(petewarden): Fix bug that leads to non-zero slice_start_ms&#10;+      GetAudioSamples((slice_start_ms &gt; 0 ? slice_start_ms : 0),&#10;+                      kFeatureSliceDurationMs, &amp;audio_samples_size,&#10;+                      &amp;audio_samples);&#10;+      if (audio_samples_size &lt; kMaxAudioSampleSize) {&#10;+        MicroPrintf(&quot;Audio data size %d too small, want %d&quot;,&#10;+                    audio_samples_size, kMaxAudioSampleSize);&#10;+        return kTfLiteError;&#10;+      }&#10;+      int8_t* new_slice_data = feature_data_ + (new_slice * kFeatureSliceSize);&#10;+      size_t num_samples_read;&#10;+      TfLiteStatus generate_status = GenerateMicroFeatures(&#10;+          audio_samples, audio_samples_size, kFeatureSliceSize,&#10;+          new_slice_data, &amp;num_samples_read);&#10;+      if (generate_status != kTfLiteOk) {&#10;+        return generate_status;&#10;+      }&#10;+    }&#10;+  }&#10;+  return kTfLiteOk;&#10;+}&#10;" />
			<string key="comment_change" value="True" />
		</event>
	</trace>
	<trace>
		<string key="file" value="feature_provider.h" />
	</trace>
	<trace>
		<string key="file" value="micro_features_generator.cpp" />
		<event>
			<string key="timestamp" value="2023-10-06T13:50:53+03:00" />
			<string key="author" value="Me No Dev" />
			<string key="change_type" value="ADD" />
			<string key="commit_message" value="Add TFLite Micro examples (#8717)&#10;&#10;* create TFLite library&#13;&#10;&#13;&#10;* add TFLite hello_world example&#13;&#10;&#13;&#10;* add TFLite micro_speech example&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Sanket Wadekar &lt;67091512+sanketwadekar@users.noreply.github.com&gt;" />
			<int key="additions" value="116" />
			<int key="deletions" value="0" />
			<string key="diff" value='@@ -0,0 +1,116 @@&#10;+/* Copyright 2019 The TensorFlow Authors. All Rights Reserved.&#10;+&#10;+Licensed under the Apache License, Version 2.0 (the "License");&#10;+you may not use this file except in compliance with the License.&#10;+You may obtain a copy of the License at&#10;+&#10;+    http://www.apache.org/licenses/LICENSE-2.0&#10;+&#10;+Unless required by applicable law or agreed to in writing, software&#10;+distributed under the License is distributed on an "AS IS" BASIS,&#10;+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&#10;+See the License for the specific language governing permissions and&#10;+limitations under the License.&#10;+==============================================================================*/&#10;+&#10;+#include "micro_features_generator.h"&#10;+&#10;+#include &lt;cmath&gt;&#10;+#include &lt;cstring&gt;&#10;+&#10;+#include "tensorflow/lite/experimental/microfrontend/lib/frontend.h"&#10;+#include "tensorflow/lite/experimental/microfrontend/lib/frontend_util.h"&#10;+#include "tensorflow/lite/micro/micro_log.h"&#10;+#include "micro_model_settings.h"&#10;+&#10;+// Configure FFT to output 16 bit fixed point.&#10;+#define FIXED_POINT 16&#10;+&#10;+namespace {&#10;+&#10;+FrontendState g_micro_features_state;&#10;+bool g_is_first_time = true;&#10;+&#10;+}  // namespace&#10;+&#10;+TfLiteStatus InitializeMicroFeatures() {&#10;+  FrontendConfig config;&#10;+  config.window.size_ms = kFeatureSliceDurationMs;&#10;+  config.window.step_size_ms = kFeatureSliceStrideMs;&#10;+  config.noise_reduction.smoothing_bits = 10;&#10;+  config.filterbank.num_channels = kFeatureSliceSize;&#10;+  config.filterbank.lower_band_limit = 125.0;&#10;+  config.filterbank.upper_band_limit = 7500.0;&#10;+  config.noise_reduction.smoothing_bits = 10;&#10;+  config.noise_reduction.even_smoothing = 0.025;&#10;+  config.noise_reduction.odd_smoothing = 0.06;&#10;+  config.noise_reduction.min_signal_remaining = 0.05;&#10;+  config.pcan_gain_control.enable_pcan = 1;&#10;+  config.pcan_gain_control.strength = 0.95;&#10;+  config.pcan_gain_control.offset = 80.0;&#10;+  config.pcan_gain_control.gain_bits = 21;&#10;+  config.log_scale.enable_log = 1;&#10;+  config.log_scale.scale_shift = 6;&#10;+  if (!FrontendPopulateState(&amp;config, &amp;g_micro_features_state,&#10;+                             kAudioSampleFrequency)) {&#10;+    MicroPrintf("FrontendPopulateState() failed");&#10;+    return kTfLiteError;&#10;+  }&#10;+  g_is_first_time = true;&#10;+  return kTfLiteOk;&#10;+}&#10;+&#10;+// This is not exposed in any header, and is only used for testing, to ensure&#10;+// that the state is correctly set up before generating results.&#10;+void SetMicroFeaturesNoiseEstimates(const uint32_t* estimate_presets) {&#10;+  for (int i = 0; i &lt; g_micro_features_state.filterbank.num_channels; ++i) {&#10;+    g_micro_features_state.noise_reduction.estimate[i] = estimate_presets[i];&#10;+  }&#10;+}&#10;+&#10;+TfLiteStatus GenerateMicroFeatures(const int16_t* input, int input_size,&#10;+                                   int output_size, int8_t* output,&#10;+                                   size_t* num_samples_read) {&#10;+  const int16_t* frontend_input;&#10;+  if (g_is_first_time) {&#10;+    frontend_input = input;&#10;+    g_is_first_time = false;&#10;+  } else {&#10;+    frontend_input = input + 160;&#10;+  }&#10;+  FrontendOutput frontend_output = FrontendProcessSamples(&#10;+      &amp;g_micro_features_state, frontend_input, input_size, num_samples_read);&#10;+&#10;+  for (size_t i = 0; i &lt; frontend_output.size; ++i) {&#10;+    // These scaling values are derived from those used in input_data.py in the&#10;+    // training pipeline.&#10;+    // The feature pipeline outputs 16-bit signed integers in roughly a 0 to 670&#10;+    // range. In training, these are then arbitrarily divided by 25.6 to get&#10;+    // float values in the rough range of 0.0 to 26.0. This scaling is performed&#10;+    // for historical reasons, to match up with the output of other feature&#10;+    // generators.&#10;+    // The process is then further complicated when we quantize the model. This&#10;+    // means we have to scale the 0.0 to 26.0 real values to the -128 to 127&#10;+    // signed integer numbers.&#10;+    // All this means that to get matching values from our integer feature&#10;+    // output into the tensor input, we have to perform:&#10;+    // input = (((feature / 25.6) / 26.0) * 256) - 128&#10;+    // To simplify this and perform it in 32-bit integer math, we rearrange to:&#10;+    // input = (feature * 256) / (25.6 * 26.0) - 128&#10;+    constexpr int32_t value_scale = 256;&#10;+    constexpr int32_t value_div = static_cast&lt;int32_t&gt;((25.6f * 26.0f) + 0.5f);&#10;+    int32_t value =&#10;+        ((frontend_output.values[i] * value_scale) + (value_div / 2)) /&#10;+        value_div;&#10;+    value -= 128;&#10;+    if (value &lt; -128) {&#10;+      value = -128;&#10;+    }&#10;+    if (value &gt; 127) {&#10;+      value = 127;&#10;+    }&#10;+    output[i] = value;&#10;+  }&#10;+&#10;+  return kTfLiteOk;&#10;+}&#10;' />
			<string key="comment_change" value="True" />
		</event>
	</trace>
	<trace>
		<string key="file" value="micro_features_generator.h" />
	</trace>
	<trace>
		<string key="file" value="micro_model_settings.cpp" />
	</trace>
	<trace>
		<string key="file" value="micro_model_settings.h" />
	</trace>
	<trace>
		<string key="file" value="micro_speech.ino" />
	</trace>
	<trace>
		<string key="file" value="recognize_commands.cpp" />
		<event>
			<string key="timestamp" value="2023-10-06T13:50:53+03:00" />
			<string key="author" value="Me No Dev" />
			<string key="change_type" value="ADD" />
			<string key="commit_message" value="Add TFLite Micro examples (#8717)&#10;&#10;* create TFLite library&#13;&#10;&#13;&#10;* add TFLite hello_world example&#13;&#10;&#13;&#10;* add TFLite micro_speech example&#13;&#10;&#13;&#10;---------&#13;&#10;&#13;&#10;Co-authored-by: Sanket Wadekar &lt;67091512+sanketwadekar@users.noreply.github.com&gt;" />
			<int key="additions" value="137" />
			<int key="deletions" value="0" />
			<string key="diff" value="@@ -0,0 +1,137 @@&#10;+/* Copyright 2017 The TensorFlow Authors. All Rights Reserved.&#10;+&#10;+Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);&#10;+you may not use this file except in compliance with the License.&#10;+You may obtain a copy of the License at&#10;+&#10;+    http://www.apache.org/licenses/LICENSE-2.0&#10;+&#10;+Unless required by applicable law or agreed to in writing, software&#10;+distributed under the License is distributed on an &quot;AS IS&quot; BASIS,&#10;+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&#10;+See the License for the specific language governing permissions and&#10;+limitations under the License.&#10;+==============================================================================*/&#10;+&#10;+#include &quot;recognize_commands.h&quot;&#10;+&#10;+#include &lt;limits&gt;&#10;+&#10;+RecognizeCommands::RecognizeCommands(int32_t average_window_duration_ms,&#10;+                                     uint8_t detection_threshold,&#10;+                                     int32_t suppression_ms,&#10;+                                     int32_t minimum_count)&#10;+    : average_window_duration_ms_(average_window_duration_ms),&#10;+      detection_threshold_(detection_threshold),&#10;+      suppression_ms_(suppression_ms),&#10;+      minimum_count_(minimum_count),&#10;+      previous_results_() {&#10;+  previous_top_label_ = &quot;silence&quot;;&#10;+  previous_top_label_time_ = std::numeric_limits&lt;int32_t&gt;::min();&#10;+}&#10;+&#10;+TfLiteStatus RecognizeCommands::ProcessLatestResults(&#10;+    const TfLiteTensor* latest_results, const int32_t current_time_ms,&#10;+    const char** found_command, uint8_t* score, bool* is_new_command) {&#10;+  if ((latest_results-&gt;dims-&gt;size != 2) ||&#10;+      (latest_results-&gt;dims-&gt;data[0] != 1) ||&#10;+      (latest_results-&gt;dims-&gt;data[1] != kCategoryCount)) {&#10;+    MicroPrintf(&#10;+        &quot;The results for recognition should contain %d elements, but there are &quot;&#10;+        &quot;%d in an %d-dimensional shape&quot;,&#10;+        kCategoryCount, latest_results-&gt;dims-&gt;data[1],&#10;+        latest_results-&gt;dims-&gt;size);&#10;+    return kTfLiteError;&#10;+  }&#10;+&#10;+  if (latest_results-&gt;type != kTfLiteInt8) {&#10;+    MicroPrintf(&#10;+        &quot;The results for recognition should be int8_t elements, but are %d&quot;,&#10;+        latest_results-&gt;type);&#10;+    return kTfLiteError;&#10;+  }&#10;+&#10;+  if ((!previous_results_.empty()) &amp;&amp;&#10;+      (current_time_ms &lt; previous_results_.front().time_)) {&#10;+    MicroPrintf(&#10;+        &quot;Results must be fed in increasing time order, but received a &quot;&#10;+        &quot;timestamp of %d that was earlier than the previous one of %d&quot;,&#10;+        current_time_ms, previous_results_.front().time_);&#10;+    return kTfLiteError;&#10;+  }&#10;+&#10;+  // Add the latest results to the head of the queue.&#10;+  previous_results_.push_back({current_time_ms, latest_results-&gt;data.int8});&#10;+&#10;+  // Prune any earlier results that are too old for the averaging window.&#10;+  const int64_t time_limit = current_time_ms - average_window_duration_ms_;&#10;+  while ((!previous_results_.empty()) &amp;&amp;&#10;+         previous_results_.front().time_ &lt; time_limit) {&#10;+    previous_results_.pop_front();&#10;+  }&#10;+&#10;+  // If there are too few results, assume the result will be unreliable and&#10;+  // bail.&#10;+  const int64_t how_many_results = previous_results_.size();&#10;+  const int64_t earliest_time = previous_results_.front().time_;&#10;+  const int64_t samples_duration = current_time_ms - earliest_time;&#10;+  if ((how_many_results &lt; minimum_count_) ||&#10;+      (samples_duration &lt; (average_window_duration_ms_ / 4))) {&#10;+    *found_command = previous_top_label_;&#10;+    *score = 0;&#10;+    *is_new_command = false;&#10;+    return kTfLiteOk;&#10;+  }&#10;+&#10;+  // Calculate the average score across all the results in the window.&#10;+  int32_t average_scores[kCategoryCount];&#10;+  for (int offset = 0; offset &lt; previous_results_.size(); ++offset) {&#10;+    PreviousResultsQueue::Result previous_result =&#10;+        previous_results_.from_front(offset);&#10;+    const int8_t* scores = previous_result.scores;&#10;+    for (int i = 0; i &lt; kCategoryCount; ++i) {&#10;+      if (offset == 0) {&#10;+        average_scores[i] = scores[i] + 128;&#10;+      } else {&#10;+        average_scores[i] += scores[i] + 128;&#10;+      }&#10;+    }&#10;+  }&#10;+  for (int i = 0; i &lt; kCategoryCount; ++i) {&#10;+    average_scores[i] /= how_many_results;&#10;+  }&#10;+&#10;+  // Find the current highest scoring category.&#10;+  int current_top_index = 0;&#10;+  int32_t current_top_score = 0;&#10;+  for (int i = 0; i &lt; kCategoryCount; ++i) {&#10;+    if (average_scores[i] &gt; current_top_score) {&#10;+      current_top_score = average_scores[i];&#10;+      current_top_index = i;&#10;+    }&#10;+  }&#10;+  const char* current_top_label = kCategoryLabels[current_top_index];&#10;+&#10;+  // If we've recently had another label trigger, assume one that occurs too&#10;+  // soon afterwards is a bad result.&#10;+  int64_t time_since_last_top;&#10;+  if ((previous_top_label_ == kCategoryLabels[0]) ||&#10;+      (previous_top_label_time_ == std::numeric_limits&lt;int32_t&gt;::min())) {&#10;+    time_since_last_top = std::numeric_limits&lt;int32_t&gt;::max();&#10;+  } else {&#10;+    time_since_last_top = current_time_ms - previous_top_label_time_;&#10;+  }&#10;+  if ((current_top_score &gt; detection_threshold_) &amp;&amp;&#10;+      ((current_top_label != previous_top_label_) ||&#10;+       (time_since_last_top &gt; suppression_ms_))) {&#10;+    previous_top_label_ = current_top_label;&#10;+    previous_top_label_time_ = current_time_ms;&#10;+    *is_new_command = true;&#10;+  } else {&#10;+    *is_new_command = false;&#10;+  }&#10;+  *found_command = current_top_label;&#10;+  *score = current_top_score;&#10;+&#10;+  return kTfLiteOk;&#10;+}&#10;" />
			<string key="comment_change" value="True" />
		</event>
	</trace>
	<trace>
		<string key="file" value="recognize_commands.h" />
	</trace>
	<trace>
		<string key="file" value="ringbuf.c" />
	</trace>
	<trace>
		<string key="file" value="TFLIteMicro.h" />
	</trace>
	<trace>
		<string key="file" value="utility.h" />
	</trace>
	<trace>
		<string key="file" value="DiscoverConnect.ino" />
	</trace>
	<trace>
		<string key="file" value="SerialToSerialBT.ino" />
	</trace>
	<trace>
		<string key="file" value="SerialToSerialBTM.ino" />
	</trace>
	<trace>
		<string key="file" value="SerialToSerialBT_Legacy.ino" />
	</trace>
	<trace>
		<string key="file" value="SerialToSerialBT_SSP.ino" />
	</trace>
	<trace>
		<string key="file" value="SerialToSerialBT_SSP_pairing.ino" />
	</trace>
	<trace>
		<string key="file" value="bt_classic_device_discovery.ino" />
	</trace>
	<trace>
		<string key="file" value="bt_remove_paired_devices.ino" />
	</trace>
	<trace>
		<string key="file" value="BTScan.h" />
	</trace>
	<trace>
		<string key="file" value="Beacon_Scanner.ino" />
	</trace>
	<trace>
		<string key="file" value="Beacon_Scanner.md" />
	</trace>
	<trace>
		<string key="file" value="Client.ino" />
	</trace>
	<trace>
		<string key="file" value="EddystoneTLM_Beacon.ino" />
	</trace>
	<trace>
		<string key="file" value="EddystoneTLM_Beacon.md" />
	</trace>
	<trace>
		<string key="file" value="EddystoneURL_Beacon.ino" />
	</trace>
	<trace>
		<string key="file" value="EddystoneURL_Beacon.md" />
	</trace>
	<trace>
		<string key="file" value="Notify.ino" />
	</trace>
	<trace>
		<string key="file" value="Scan.ino" />
	</trace>
	<trace>
		<string key="file" value="Server.ino" />
	</trace>
	<trace>
		<string key="file" value="Server_multiconnect.ino" />
	</trace>
	<trace>
		<string key="file" value="UART.ino" />
	</trace>
	<trace>
		<string key="file" value="Write.ino" />
	</trace>
	<trace>
		<string key="file" value="iBeacon.ino" />
	</trace>
	<trace>
		<string key="file" value="BLEEddystoneTLM.cppwithheadder" />
	</trace>
	<trace>
		<string key="file" value="BLEEddystoneURL.h.orig" />
	</trace>
	<trace>
		<string key="file" value="GeneralUtils.h" />
	</trace>
	<trace>
		<string key="file" value="RTOS.h" />
	</trace>
</log>
