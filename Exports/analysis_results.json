[
    {
        "file": "admin_diagnostics.js",
        "line": 80,
        "comment": "// This is for backwards compatibility",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-02 21:44:19+01:00"
    },
    {
        "file": "admin_diagnostics.js",
        "line": 182,
        "comment": "/*GLOBAL*/",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-02 21:44:19+01:00"
    },
    {
        "file": "admin_diagnostics.js",
        "line": 80,
        "comment": "// This is for backwards compatibility",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-02 21:44:19+01:00"
    },
    {
        "file": "admin_diagnostics.js",
        "line": 24,
        "comment": " *",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "admin_diagnostics.js",
        "line": 25,
        "comment": " * This source file is free software, available under the following license:",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "admin_diagnostics.js",
        "line": 26,
        "comment": " *   MIT license - https://datatables.net/license",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "admin_diagnostics.js",
        "line": 27,
        "comment": " *",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "admin_diagnostics.js",
        "line": 28,
        "comment": " * This source file is distributed in the hope that it will be useful, but",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "admin_diagnostics.js",
        "line": 80,
        "comment": "// This is for backwards compatibility",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-02 21:44:19+01:00"
    },
    {
        "file": "admin_diagnostics.js",
        "line": 24,
        "comment": " *",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "admin_diagnostics.js",
        "line": 25,
        "comment": " * This source file is free software, available under the following license:",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "admin_diagnostics.js",
        "line": 26,
        "comment": " *   MIT license - https://datatables.net/license",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "admin_diagnostics.js",
        "line": 27,
        "comment": " *",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "admin_diagnostics.js",
        "line": 28,
        "comment": " * This source file is distributed in the hope that it will be useful, but",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "admin_diagnostics.js",
        "line": 182,
        "comment": "/*GLOBAL*/",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-02 21:44:19+01:00"
    },
    {
        "file": "admin_diagnostics.js",
        "line": 80,
        "comment": "// This is for backwards compatibility",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-02 21:44:19+01:00"
    },
    {
        "file": "admin_diagnostics.js",
        "line": 27,
        "comment": " *",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "admin_diagnostics.js",
        "line": 28,
        "comment": " * This source file is distributed in the hope that it will be useful, but",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 127,
        "comment": "// onLoad events",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 128,
        "comment": "/*event*/",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 141,
        "comment": "// get current URL path and assign \"active\" class to the correct nav-item",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 73,
        "comment": "// ================================",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 167,
        "comment": "// Check for HTTPS at domain-server-string",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 203,
        "comment": "// Time check",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 206,
        "comment": "// Check if we were able to fetch a valid NTP Time",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 207,
        "comment": "// If so, compare both browser and server with NTP",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 208,
        "comment": "// Else, compare browser and server.",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 218,
        "comment": "// Domain check",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 223,
        "comment": "// Version check",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 226,
        "comment": "// DNS Check",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 97,
        "comment": "// This function will prevent submitting a from when someone presses enter.",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 108,
        "comment": "// This function will hook into the smtp-test-email input field and will call the smtpTest() function when enter is pressed.",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 121,
        "comment": "// Colorize some settings which are high risk",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 155,
        "comment": "// Trigger the event initially",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 160,
        "comment": "// This will check if the ADMIN_TOKEN is not a Argon2 hashed value.",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 161,
        "comment": "// Else it will show a warning, unless someone has closed it.",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 162,
        "comment": "// Then it will not show this warning for 30 days.",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 167,
        "comment": "// Check for HTTPS at domain-server-string",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 178,
        "comment": "// When closing the alert, store the current date/time in the browser",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 185,
        "comment": "// Display the warning",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 190,
        "comment": "// This will check for specific configured values, and when needed will show a warning div",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 197,
        "comment": "// onLoad events",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 198,
        "comment": "/*event*/",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 200,
        "comment": "// Prevent enter to submitting the form and save the config.",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 201,
        "comment": "// Users need to really click on save, this also to prevent accidental submits.",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 161,
        "comment": "// Else it will show a warning, unless someone has closed it.",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 190,
        "comment": "// This will check for specific configured values, and when needed will show a warning div",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 192,
        "comment": "// Get shared values",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 195,
        "comment": "// Get org specific values",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 207,
        "comment": "// If so, compare both browser and server with NTP",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 228,
        "comment": "// Color all the org buttons per type",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 262,
        "comment": "// onLoad events",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 263,
        "comment": "/*event*/",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 274,
        "comment": "// Default show all",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 285,
        "comment": "// Add click events for user actions",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 14,
        "comment": "   * Bootstrap dom/data.js",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 32,
        "comment": "// can be removed later when multiple key/instances are fine to be used",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 73,
        "comment": "// ================================",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 94,
        "comment": "   */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 107,
        "comment": "// Get transition-duration of the element",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 115,
        "comment": "// Return 0 if element or transition duration is not found",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 120,
        "comment": "// If multiple durations are defined, take the first",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 138,
        "comment": "// it's a jQuery object or a node element",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 152,
        "comment": "// Handle `details` element as its content may falsie appear visible when it is closed",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 185,
        "comment": "// Display the warning",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 202,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 203,
        "comment": "// Time check",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 204,
        "comment": "   *",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 205,
        "comment": "   * @param {HTMLElement} element",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 206,
        "comment": "// Check if we were able to fetch a valid NTP Time",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 207,
        "comment": "// If so, compare both browser and server with NTP",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 208,
        "comment": "// Else, compare browser and server.",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 209,
        "comment": "   */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 211,
        "comment": "// eslint-disable-line no-unused-expressions",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 222,
        "comment": "// add listener on the first call when the document is in loading state",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 239,
        "comment": "/* istanbul ignore if */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 282,
        "comment": "   * Return the previous/next element of a list.",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 283,
        "comment": "   *",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 284,
        "comment": "   * @param {array} list    The list of elements",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 285,
        "comment": "// Add click events for user actions",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 286,
        "comment": "   * @param shouldGetNext   Choose to get next or previous element",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 287,
        "comment": "   * @param isCycleAllowed",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 288,
        "comment": "   * @return {Element|elem} The proper element",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 289,
        "comment": "   */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 294,
        "comment": "// if the element does not exist in the list return an element",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 306,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 393,
        "comment": "// in case of mouseenter or mouseleave wrap the handler within a function that checks for its DOM position",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 394,
        "comment": "// this prevents the handler from being dispatched the same way as mouseover or mouseout does",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 438,
        "comment": "// allow to get the native events from namespaced events ('click.bs.button' --> 'click')",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 459,
        "comment": "// Simplest case: handler is passed, remove that listener ONLY.",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 528,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 529,
        "comment": "   * --------------------------------------------------------------------------",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 530,
        "comment": "   * Bootstrap dom/manipulator.js",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 531,
        "comment": "   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 532,
        "comment": "   * --------------------------------------------------------------------------",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 533,
        "comment": "   */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 585,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 586,
        "comment": "   * --------------------------------------------------------------------------",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 587,
        "comment": "   * Bootstrap util/config.js",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 588,
        "comment": "   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 589,
        "comment": "   * --------------------------------------------------------------------------",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 590,
        "comment": "   */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 593,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 594,
        "comment": "   * Class definition",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 595,
        "comment": "   */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 598,
        "comment": "// Getters",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 618,
        "comment": "// try to parse",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 638,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 639,
        "comment": "   * --------------------------------------------------------------------------",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 640,
        "comment": "   * Bootstrap base-component.js",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 641,
        "comment": "   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 642,
        "comment": "   * --------------------------------------------------------------------------",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 643,
        "comment": "   */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 646,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 647,
        "comment": "   * Constants",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 648,
        "comment": "   */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 652,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 653,
        "comment": "   * Class definition",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 654,
        "comment": "   */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 668,
        "comment": "// Public",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 686,
        "comment": "// Static",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 707,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 708,
        "comment": "   * --------------------------------------------------------------------------",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 709,
        "comment": "   * Bootstrap dom/selector-engine.js",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 710,
        "comment": "   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 711,
        "comment": "   * --------------------------------------------------------------------------",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 712,
        "comment": "   */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 719,
        "comment": "// The only valid content that could double as a selector are IDs or classes,",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 720,
        "comment": "// so everything starting with `#` or `.`. If a \"real\" URL is used as the selector,",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 721,
        "comment": "// `document.querySelector` will rightfully complain it is invalid.",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 722,
        "comment": "// See https://github.com/twbs/bootstrap/issues/32273",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 727,
        "comment": "// Just in case some CMS puts out a full URL with the anchor appended",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 764,
        "comment": "// TODO: this is now unused; remove later along with prev()",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 796,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 797,
        "comment": "   * --------------------------------------------------------------------------",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 798,
        "comment": "   * Bootstrap util/component-functions.js",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 799,
        "comment": "   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 800,
        "comment": "   * --------------------------------------------------------------------------",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 801,
        "comment": "   */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 816,
        "comment": "// Method argument is left, for Alert and only, as it doesn't implement the 'hide' method",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 821,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 822,
        "comment": "   * --------------------------------------------------------------------------",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 823,
        "comment": "   * Bootstrap alert.js",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 824,
        "comment": "   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 825,
        "comment": "   * --------------------------------------------------------------------------",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 826,
        "comment": "   */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 829,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 830,
        "comment": "   * Constants",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 831,
        "comment": "   */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 841,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 842,
        "comment": "   * Class definition",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 843,
        "comment": "   */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 846,
        "comment": "// Getters",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 851,
        "comment": "// Public",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 862,
        "comment": "// Private",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 869,
        "comment": "// Static",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 884,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 885,
        "comment": "   * Data API implementation",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 886,
        "comment": "   */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 890,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 891,
        "comment": "   * jQuery",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 892,
        "comment": "   */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 896,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 897,
        "comment": "   * --------------------------------------------------------------------------",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 898,
        "comment": "   * Bootstrap button.js",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 899,
        "comment": "   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 900,
        "comment": "   * --------------------------------------------------------------------------",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 901,
        "comment": "   */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 904,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 905,
        "comment": "   * Constants",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 906,
        "comment": "   */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 916,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 917,
        "comment": "   * Class definition",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 918,
        "comment": "   */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 921,
        "comment": "// Getters",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 926,
        "comment": "// Public",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 928,
        "comment": "// Toggle class and sync the `aria-pressed` attribute with the return value of the `.toggle()` method",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 932,
        "comment": "// Static",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 943,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 944,
        "comment": "   * Data API implementation",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 945,
        "comment": "   */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 954,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 955,
        "comment": "   * jQuery",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 956,
        "comment": "   */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 960,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 961,
        "comment": "   * --------------------------------------------------------------------------",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 962,
        "comment": "   * Bootstrap util/swipe.js",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 963,
        "comment": "   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 964,
        "comment": "   * --------------------------------------------------------------------------",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 965,
        "comment": "   */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 968,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 969,
        "comment": "   * Constants",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 970,
        "comment": "   */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 994,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 995,
        "comment": "   * Class definition",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 996,
        "comment": "   */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1022,
        "comment": "// Public",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1027,
        "comment": "// Private",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1074,
        "comment": "// Static",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1080,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1081,
        "comment": "   * --------------------------------------------------------------------------",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1082,
        "comment": "   * Bootstrap carousel.js",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1083,
        "comment": "   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1084,
        "comment": "   * --------------------------------------------------------------------------",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1085,
        "comment": "   */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1088,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1447,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1448,
        "comment": "   * jQuery",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1449,
        "comment": "   */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1453,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1454,
        "comment": "   * --------------------------------------------------------------------------",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1455,
        "comment": "   * Bootstrap collapse.js",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1456,
        "comment": "   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1457,
        "comment": "   * --------------------------------------------------------------------------",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1458,
        "comment": "   */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1461,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1462,
        "comment": "   * Constants",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1463,
        "comment": "   */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1756,
        "comment": "// and applies them to the HTMLElements such as popper and arrow",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1763,
        "comment": "// arrow is optional + virtual elements",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1767,
        "comment": "// Flow doesn't support to extend this property, but it's the most",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1768,
        "comment": "// effective way to apply styles to an HTMLElement",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1769,
        "comment": "// $FlowFixMe[cannot-write]",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2164,
        "comment": "// Round the offsets to the nearest suitable subpixel based on the DPR.",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2165,
        "comment": "// Zooming can change the DPR, but it seems to report a value that will",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2166,
        "comment": "// cleanly divide the values into the appropriate subpixels.",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2356,
        "comment": "// eslint-disable-next-line import/no-unused-modules",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2439,
        "comment": "// of the `<html>` and `<body>` rect bounds if horizontally scrollable",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2487,
        "comment": "/*",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2488,
        "comment": "  given a DOM element, return the list of all scroll parents, up the list of ancesors",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2489,
        "comment": "  until we get to the top window object. This list is what we attach scroll listeners",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2490,
        "comment": "  to, because if any of these parent elements scroll, we'll need to re-calculate the",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2491,
        "comment": "  reference element's position.",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2492,
        "comment": "  */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2506,
        "comment": "// $FlowFixMe[incompatible-call]: isBody tells us target will be an HTMLElement here",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2534,
        "comment": "// A \"clipping parent\" is an overflowable container with the characteristic of",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2535,
        "comment": "// clipping (or hiding) overflowing elements with a position different from",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2536,
        "comment": "// `initial`",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2546,
        "comment": "// $FlowFixMe[incompatible-return]: https://github.com/facebook/flow/issues/1414",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2719,
        "comment": "// $FlowFixMe[incompatible-type]: Flow seems to have problems with two array unions...",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2990,
        "comment": "// Offsets are the actual position the popper needs to have to be",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2991,
        "comment": "// properly positioned near its reference element",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2992,
        "comment": "// This is the most basic placement, and will be adjusted by",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2993,
        "comment": "// the modifiers in the next step",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3000,
        "comment": "// eslint-disable-next-line import/no-unused-modules",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3166,
        "comment": "// Returns the composite rect of an element relative to its offsetParent.",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3167,
        "comment": "// Composite means it takes into account transforms as well as layout.",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3189,
        "comment": "// https://github.com/popperjs/popper-core/issues/1078",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3217,
        "comment": "// On visiting object, check for its dependencies and visit them recursively",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3236,
        "comment": "// check for visited object",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3244,
        "comment": "// order based on dependencies",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3245,
        "comment": "// order based on phase",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3342,
        "comment": "// Strip out disabled modifiers",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3354,
        "comment": "// prefer the async Popper#update method",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3380,
        "comment": "// On each update cycle, the `modifiersData` property for each modifier",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3381,
        "comment": "// is filled with the initial data specified by the modifier. This means",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3382,
        "comment": "// it doesn't persist and is fresh on each update.",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3383,
        "comment": "// To ensure persistent data, use `${name}#persistent`",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3434,
        "comment": "// Modifiers have the ability to execute arbitrary code before the first",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3472,
        "comment": "/*#__PURE__*/ // eslint-disable-next-line import/no-unused-modules",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3475,
        "comment": "/*#__PURE__*/",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3477,
        "comment": "// eslint-disable-next-line import/no-unused-modules",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3480,
        "comment": "/*#__PURE__*/",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3482,
        "comment": "// eslint-disable-next-line import/no-unused-modules",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3484,
        "comment": "/*#__PURE__*/ /*#__PURE__*/",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3530,
        "comment": "   * --------------------------------------------------------------------------",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3531,
        "comment": "   */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3534,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3535,
        "comment": "   * Constants",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3536,
        "comment": "   */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3546,
        "comment": "// MouseEvent.button value for the secondary button, usually the right button",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3600,
        "comment": "// dropdown wrapper",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3601,
        "comment": "// TODO: v6 revert #37011 & change markup https://getbootstrap.com/docs/5.3/forms/input-group/",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3606,
        "comment": "// Getters",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3617,
        "comment": "// Public",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3634,
        "comment": "// If this is a touch-enabled device we add extra",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3635,
        "comment": "// empty mouseover listeners to the body's immediate children;",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3636,
        "comment": "// only needed because of broken event delegation on iOS",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3637,
        "comment": "// https://www.quirksmode.org/blog/archives/2014/02/mouse_event_bub.html",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3678,
        "comment": "// If this is a touch-enabled device we remove the extra",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3679,
        "comment": "// empty mouseover listeners we added for iOS support",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3697,
        "comment": "// Popper virtual elements require a getBoundingClientRect method",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3773,
        "comment": "// Disable Popper if we have a static display or Dropdown is in Navbar",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3795,
        "comment": "// if target isn't included in items (e.g. when expanding the dropdown)",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3796,
        "comment": "// allow cycling to get the last item in case key equals ARROW_UP_KEY",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3800,
        "comment": "// Static",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3829,
        "comment": "// Tab navigation through the dropdown menu or events from contained inputs shouldn't close the menu",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3843,
        "comment": "// If not an UP | DOWN | ESCAPE key => not a dropdown command",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3844,
        "comment": "// If input/textarea && if key is other than ESCAPE => not a dropdown command",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3867,
        "comment": "// else is escape and we check if it is shown",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3875,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3876,
        "comment": "   * Data API implementation",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3877,
        "comment": "   */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3888,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3889,
        "comment": "   * jQuery",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3890,
        "comment": "   */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3894,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3895,
        "comment": "   * --------------------------------------------------------------------------",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3896,
        "comment": "   * Bootstrap util/backdrop.js",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3897,
        "comment": "   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3898,
        "comment": "   * --------------------------------------------------------------------------",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3899,
        "comment": "   */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3902,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3915,
        "comment": "// if false, we use the backdrop helper without adding any element to the dom",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3985,
        "comment": "// Private",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4019,
        "comment": "   * --------------------------------------------------------------------------",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4048,
        "comment": "   * Class definition",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4049,
        "comment": "   */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4116,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4117,
        "comment": "   * --------------------------------------------------------------------------",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4118,
        "comment": "   * Bootstrap util/scrollBar.js",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4119,
        "comment": "   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4120,
        "comment": "   * --------------------------------------------------------------------------",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4121,
        "comment": "   */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4124,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4125,
        "comment": "   * Constants",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4126,
        "comment": "   */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4133,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4134,
        "comment": "   * Class definition",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4135,
        "comment": "   */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4142,
        "comment": "// Public",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4214,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4215,
        "comment": "   * --------------------------------------------------------------------------",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4216,
        "comment": "   * Bootstrap modal.js",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4217,
        "comment": "   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4218,
        "comment": "   * --------------------------------------------------------------------------",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4224,
        "comment": "   */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4260,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4261,
        "comment": "   * Class definition",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4262,
        "comment": "   */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4276,
        "comment": "// Getters",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4287,
        "comment": "// Public",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4390,
        "comment": "// a bad trick to segregate clicks that may start inside dialog but end outside, and avoid listen to scrollbar clicks",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4428,
        "comment": "// return if the following background transition hasn't yet completed",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4445,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4467,
        "comment": "// Static",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4484,
        "comment": "   */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4514,
        "comment": "   * jQuery",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4519,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4520,
        "comment": "   * --------------------------------------------------------------------------",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4521,
        "comment": "   * Bootstrap offcanvas.js",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4522,
        "comment": "   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4523,
        "comment": "   * --------------------------------------------------------------------------",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4524,
        "comment": "   */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4750,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4851,
        "comment": "   */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5062,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5063,
        "comment": "   * Class definition",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5064,
        "comment": "   */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5073,
        "comment": "// Private",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5145,
        "comment": "// TODO: v6 remove this or make it optional",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5188,
        "comment": "// If this is a touch-enabled device we remove the extra",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5189,
        "comment": "// empty mouseover listeners we added for iOS support",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5198,
        "comment": "// it is a trick to support manual triggering",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5218,
        "comment": "// Protected",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5231,
        "comment": "// TODO: remove this check in v6",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5236,
        "comment": "// TODO: v6 the following can be achieved with CSS only",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5259,
        "comment": "// to override config.content in case of popover",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5275,
        "comment": "// Private",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5382,
        "comment": "// DO NOT USE IT. Is only for backwards compatibility",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5457,
        "comment": "// In the future can be replaced with:",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5458,
        "comment": "// const keysWithDifferentValues = Object.entries(this._config).filter(entry => this.constructor.Default[entry[0]] !== this._config[entry[0]])",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5459,
        "comment": "// `Object.fromEntries(keysWithDifferentValues)`",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5473,
        "comment": "// Static",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5495,
        "comment": "   * --------------------------------------------------------------------------",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5577,
        "comment": "   * Bootstrap scrollspy.js",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5578,
        "comment": "   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5579,
        "comment": "   * --------------------------------------------------------------------------",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5580,
        "comment": "   */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5583,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5584,
        "comment": "   * Constants",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5585,
        "comment": "   */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5622,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5623,
        "comment": "   * Class definition",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5624,
        "comment": "   */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5654,
        "comment": "// Public",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5672,
        "comment": "// Private",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5674,
        "comment": "// TODO: on v6 target should be given explicitly & remove the {target: 'ss-target'} case",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5677,
        "comment": "// TODO: v6 Only for backwards compatibility reasons. Use rootMargin only",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5820,
        "comment": "   * Data API implementation",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5821,
        "comment": "   */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5829,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5830,
        "comment": "   * jQuery",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5831,
        "comment": "   */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5836,
        "comment": "   * --------------------------------------------------------------------------",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5845,
        "comment": "   */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5877,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 6182,
        "comment": "// @deprecated",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 6196,
        "comment": "// @deprecated",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 14,
        "comment": "   * Bootstrap dom/data.js",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 26,
        "comment": " *   MIT license - https://datatables.net/license",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 32,
        "comment": "// can be removed later when multiple key/instances are fine to be used",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 102,
        "comment": "// Method to get DT API instance from jQuery object",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 109,
        "comment": "// For each initialisation we want to give it a clean initialisation",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 110,
        "comment": "// object that can be bashed around",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 112,
        "comment": "// optimisation for single table case",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 124,
        "comment": "/* Sanity check */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 133,
        "comment": "/* Backwards compatibility for the defaults */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 137,
        "comment": "/* Convert the camel-case defaults to Hungarian */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 141,
        "comment": "// get current URL path and assign \"active\" class to the correct nav-item",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 146,
        "comment": "/* Check to see if we are re-initialising a table */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 152,
        "comment": "// Handle `details` element as its content may falsie appear visible when it is closed",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 177,
        "comment": "/* If the element we are initialising has the same ID as a table which was previously",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 178,
        "comment": "// When closing the alert, store the current date/time in the browser",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 179,
        "comment": "\t\t\t\t * instance by simply deleting it. This is under the assumption that the table has been",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 180,
        "comment": "\t\t\t\t * destroyed by other methods. Anyone using non-id selectors will need to do this manually",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 181,
        "comment": "\t\t\t\t */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 189,
        "comment": "/* Ensure the table has an ID - required for accessibility */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 196,
        "comment": "/* Create the settings object for this table and set some of the default parameters */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 211,
        "comment": "// eslint-disable-line no-unused-expressions",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 214,
        "comment": "// Need to add the instance after the instance after the settings object has been added",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 215,
        "comment": "// to the settings array, so we can self reference the table instance if more than one",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 218,
        "comment": "// Domain check",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 221,
        "comment": "// If the length menu is given, but the init display length is not, use the length menu",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 231,
        "comment": "// Apply the defaults and init options to make a single init object will all",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 232,
        "comment": "// options defined from defaults and instance options.",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 236,
        "comment": "// Map the initialisation options onto the settings object",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 269,
        "comment": "// backwards compat",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 282,
        "comment": "   * Return the previous/next element of a list.",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 296,
        "comment": "/* Browser support detection */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 336,
        "comment": "// Error occurred loading language file",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 339,
        "comment": "// continue on as best we can",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 357,
        "comment": "// If we don't have a columns array, then generate one with nulls",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 367,
        "comment": "// Add the columns",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 372,
        "comment": "// Apply the column definitions",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 415,
        "comment": "/*",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 416,
        "comment": "\t\t\t\t * Sorting",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 417,
        "comment": "\t\t\t\t * @todo For modularisation (1.11) this needs to do into a sort start up handler",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 418,
        "comment": "\t\t\t\t */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 420,
        "comment": "// If aaSorting is not defined, then we use the first indicator in asSorting",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 421,
        "comment": "// in case that has been altered, so the default sort reflects that option",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 429,
        "comment": "/* Do a first pass on the sorting classes (allows any size changes to be taken into",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 430,
        "comment": "\t\t\t\t * account, and also will apply sorting disabled classes if disabled",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 431,
        "comment": "\t\t\t\t */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 441,
        "comment": "/*",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 442,
        "comment": "\t\t\t\t * Final init",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 443,
        "comment": "\t\t\t\t * Cache the header, body and footer as required, creating them if needed",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 444,
        "comment": "\t\t\t\t */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 455,
        "comment": "// Store the caption side, so we can remove the element from the document",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 456,
        "comment": "// when creating the element",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 476,
        "comment": "// If we are a scrolling table, and no footer has been given, then we need to create",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 477,
        "comment": "// a tfoot element for the caption element to be appended to",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 483,
        "comment": "// Check if there is data passing into the constructor",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 490,
        "comment": "// Grab the data from the page",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 494,
        "comment": "/* Copy the data index array */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 497,
        "comment": "/* Initialisation complete - table can be drawn */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 500,
        "comment": "/* Check if we need to initialise the table (it might not have been handed off to the",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 501,
        "comment": "\t\t\t\t * language processor)",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 502,
        "comment": "\t\t\t\t */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 508,
        "comment": "/* Must be done after everything which can be overridden by the state saving! */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 527,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 528,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 529,
        "comment": "   * --------------------------------------------------------------------------",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 530,
        "comment": "   * Bootstrap dom/manipulator.js",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 531,
        "comment": "   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 532,
        "comment": "   * --------------------------------------------------------------------------",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 533,
        "comment": "   */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 534,
        "comment": "\t *",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 535,
        "comment": "\t * Note that this namespace is aliased to `jQuery.fn.dataTableExt` for legacy",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 536,
        "comment": "\t * reasons",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 537,
        "comment": "\t *",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 538,
        "comment": "\t *  @namespace",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 539,
        "comment": "\t */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 541,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 542,
        "comment": "\t\t * Buttons. For use with the Buttons extension for DataTables. This is",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 543,
        "comment": "\t\t * defined here so other extensions can define buttons regardless of load",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 544,
        "comment": "\t\t * order. It is _not_ used by DataTables core.",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 545,
        "comment": "\t\t *",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 546,
        "comment": "\t\t *  @type object",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 547,
        "comment": "\t\t *  @default {}",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 548,
        "comment": "\t\t */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 552,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 553,
        "comment": "\t\t * Element class names",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 554,
        "comment": "\t\t *",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 555,
        "comment": "\t\t *  @type object",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 556,
        "comment": "\t\t *  @default {}",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 557,
        "comment": "\t\t */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 561,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 562,
        "comment": "\t\t * DataTables build type (expanded by the download builder)",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 563,
        "comment": "\t\t *",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 564,
        "comment": "\t\t *  @type string",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 565,
        "comment": "\t\t */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 569,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 570,
        "comment": "\t\t * Error reporting.",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 571,
        "comment": "\t\t * ",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 572,
        "comment": "\t\t * How should DataTables report an error. Can take the value 'alert',",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 573,
        "comment": "\t\t * 'throw', 'none' or a function.",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 574,
        "comment": "\t\t *",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 575,
        "comment": "\t\t *  @type string|function",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 576,
        "comment": "\t\t *  @default alert",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 577,
        "comment": "\t\t */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 581,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 582,
        "comment": "\t\t * Legacy so v1 plug-ins don't throw js errors on load",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 583,
        "comment": "\t\t */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 586,
        "comment": "   * --------------------------------------------------------------------------",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 587,
        "comment": "   * Bootstrap util/config.js",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 588,
        "comment": "   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 589,
        "comment": "   * --------------------------------------------------------------------------",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 590,
        "comment": "   */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 591,
        "comment": "\t\t */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 595,
        "comment": "   */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 596,
        "comment": "\t\t * Row searching.",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 597,
        "comment": "\t\t * ",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 598,
        "comment": "// Getters",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 599,
        "comment": "\t\t * searching, and a lot more comprehensive as it allows you complete control",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 600,
        "comment": "\t\t * over the searching logic. Each element in this array is a function",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 601,
        "comment": "\t\t * (parameters described below) that is called for every row in the table,",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 602,
        "comment": "\t\t * and your logic decides if it should be included in the searching data set",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 603,
        "comment": "\t\t * or not.",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 604,
        "comment": "\t\t *",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 605,
        "comment": "\t\t * Searching functions have the following input parameters:",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 606,
        "comment": "\t\t *",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 607,
        "comment": "\t\t * 1. `{object}` DataTables settings object: see",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 608,
        "comment": "\t\t *    {@link DataTable.models.oSettings}",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 609,
        "comment": "\t\t * 2. `{array|object}` Data for the row to be processed (same as the",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 610,
        "comment": "\t\t *    original format that was passed in as the data source, or an array",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 611,
        "comment": "\t\t *    from a DOM data source",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 612,
        "comment": "\t\t * 3. `{int}` Row index ({@link DataTable.models.oSettings.aoData}), which",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 613,
        "comment": "\t\t *    can be useful to retrieve the `TR` element if you need DOM interaction.",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 614,
        "comment": "\t\t *",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 615,
        "comment": "\t\t * And the following return is expected:",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 616,
        "comment": "\t\t *",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 617,
        "comment": "\t\t * * {boolean} Include the row in the searched result set (true) or not",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 618,
        "comment": "// try to parse",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 619,
        "comment": "\t\t *",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 620,
        "comment": "\t\t * Note that as with the main search ability in DataTables, technically this",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 621,
        "comment": "\t\t * is \"filtering\", since it is subtractive. However, for consistency in",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 622,
        "comment": "\t\t * naming we call it searching here.",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 623,
        "comment": "\t\t *",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 624,
        "comment": "\t\t *  @type array",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 625,
        "comment": "\t\t *  @default []",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 626,
        "comment": "\t\t *",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 627,
        "comment": "\t\t *  @example",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 628,
        "comment": "\t\t *    // The following example shows custom search being applied to the",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 629,
        "comment": "\t\t *    // fourth column (i.e. the data[3] index) based on two input values",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 630,
        "comment": "\t\t *    // from the end-user, matching the data in a certain range.",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 631,
        "comment": "\t\t *    $.fn.dataTable.ext.search.push(",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 632,
        "comment": "\t\t *      function( settings, data, dataIndex ) {",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 633,
        "comment": "\t\t *        var min = document.getElementById('min').value * 1;",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 634,
        "comment": "\t\t *        var max = document.getElementById('max').value * 1;",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 635,
        "comment": "\t\t *        var version = data[3] == \"-\" ? 0 : data[3]*1;",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 636,
        "comment": "\t\t *",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 637,
        "comment": "\t\t *        if ( min == \"\" && max == \"\" ) {",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 638,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 639,
        "comment": "   * --------------------------------------------------------------------------",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 640,
        "comment": "   * Bootstrap base-component.js",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 641,
        "comment": "   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 642,
        "comment": "   * --------------------------------------------------------------------------",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 643,
        "comment": "   */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 644,
        "comment": "\t\t *          return true;",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 645,
        "comment": "\t\t *        }",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 646,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 647,
        "comment": "   * Constants",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 648,
        "comment": "   */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 649,
        "comment": "\t\t *        return false;",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 650,
        "comment": "\t\t *      }",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 651,
        "comment": "\t\t *    );",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 652,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 656,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 657,
        "comment": "\t\t * Selector extensions",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 658,
        "comment": "\t\t *",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 659,
        "comment": "\t\t * The `selector` option can be used to extend the options available for the",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 660,
        "comment": "\t\t * selector modifier options (`selector-modifier` object data type) that",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 661,
        "comment": "\t\t * each of the three built in selector types offer (row, column and cell +",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 662,
        "comment": "\t\t * their plural counterparts). For example the Select extension uses this",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 663,
        "comment": "\t\t * mechanism to provide an option to select only rows, columns and cells",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 664,
        "comment": "\t\t * that have been marked as selected by the end user (`{selected: true}`),",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 665,
        "comment": "\t\t * which can be used in conjunction with the existing built in selector",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 666,
        "comment": "\t\t * options.",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 667,
        "comment": "\t\t *",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 668,
        "comment": "// Public",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 669,
        "comment": "\t\t * take three attributes:",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 670,
        "comment": "\t\t *",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 671,
        "comment": "\t\t * * Settings object for the host table",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 672,
        "comment": "\t\t * * Options object (`selector-modifier` object type)",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 673,
        "comment": "\t\t * * Array of selected item indexes",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 674,
        "comment": "\t\t *",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 675,
        "comment": "\t\t * The return is an array of the resulting item indexes after the custom",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 676,
        "comment": "\t\t * selector has been applied.",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 677,
        "comment": "\t\t *",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 678,
        "comment": "\t\t *  @type object",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 679,
        "comment": "\t\t */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 687,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 688,
        "comment": "\t\t * Legacy configuration options. Enable and disable legacy options that",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 689,
        "comment": "\t\t * are available in DataTables.",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 690,
        "comment": "\t\t *",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 691,
        "comment": "\t\t *  @type object",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 692,
        "comment": "\t\t */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 694,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 695,
        "comment": "\t\t\t * Enable / disable DataTables 1.9 compatible server-side processing",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 696,
        "comment": "\t\t\t * requests",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 697,
        "comment": "\t\t\t *",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 698,
        "comment": "\t\t\t *  @type boolean",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 699,
        "comment": "\t\t\t *  @default null",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 700,
        "comment": "\t\t\t */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 705,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 706,
        "comment": "\t\t * Pagination plug-in methods.",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 707,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 708,
        "comment": "   * --------------------------------------------------------------------------",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 709,
        "comment": "   * Bootstrap dom/selector-engine.js",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 710,
        "comment": "   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 711,
        "comment": "   * --------------------------------------------------------------------------",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 712,
        "comment": "   */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 713,
        "comment": "\t\t * descriptions (what each button will do).",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 714,
        "comment": "\t\t *",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 715,
        "comment": "\t\t * Pagination types (the four built in options and any additional plug-in",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 716,
        "comment": "\t\t * options defined here) can be used through the `paginationType`",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 717,
        "comment": "\t\t * initialisation parameter.",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 718,
        "comment": "\t\t *",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 719,
        "comment": "// The only valid content that could double as a selector are IDs or classes,",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 720,
        "comment": "// so everything starting with `#` or `.`. If a \"real\" URL is used as the selector,",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 721,
        "comment": "// `document.querySelector` will rightfully complain it is invalid.",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 722,
        "comment": "// See https://github.com/twbs/bootstrap/issues/32273",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 723,
        "comment": "\t\t *",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 724,
        "comment": "\t\t * Each function is expected to return an array where each element of the",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 725,
        "comment": "\t\t * array can be one of:",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 726,
        "comment": "\t\t *",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 727,
        "comment": "// Just in case some CMS puts out a full URL with the anchor appended",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 728,
        "comment": "\t\t * * `last` - Jump to last page when activated",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 729,
        "comment": "\t\t * * `previous` - Show previous page when activated",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 730,
        "comment": "\t\t * * `next` - Show next page when activated",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 731,
        "comment": "\t\t * * `{int}` - Show page of the index given",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 732,
        "comment": "\t\t * * `{array}` - A nested array containing the above elements to add a",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 733,
        "comment": "\t\t *   containing 'DIV' element (might be useful for styling).",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 734,
        "comment": "\t\t *",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 735,
        "comment": "\t\t * Note that DataTables v1.9- used this object slightly differently whereby",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 736,
        "comment": "\t\t * an object with two functions would be defined for each plug-in. That",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 737,
        "comment": "\t\t * ability is still supported by DataTables 1.10+ to provide backwards",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 738,
        "comment": "\t\t * compatibility, but this option of use is now decremented and no longer",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 739,
        "comment": "\t\t * documented in DataTables 1.10+.",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 740,
        "comment": "\t\t *",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 741,
        "comment": "\t\t *  @type object",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 742,
        "comment": "\t\t *  @default {}",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 743,
        "comment": "\t\t *",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 744,
        "comment": "\t\t *  @example",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 745,
        "comment": "\t\t *    // Show previous, next and current page buttons only",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 746,
        "comment": "\t\t *    $.fn.dataTableExt.oPagination.current = function ( page, pages ) {",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 747,
        "comment": "\t\t *      return [ 'previous', page, 'next' ];",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 748,
        "comment": "\t\t *    };",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 749,
        "comment": "\t\t */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 759,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 760,
        "comment": "\t\t * Ordering plug-ins - custom data source",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 761,
        "comment": "\t\t * ",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 762,
        "comment": "\t\t * The extension options for ordering of data available here is complimentary",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 763,
        "comment": "\t\t * to the default type based ordering that DataTables typically uses. It",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 764,
        "comment": "// TODO: this is now unused; remove later along with prev()",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 765,
        "comment": "\t\t * order a column, but is necessarily therefore more complex.",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 766,
        "comment": "\t\t * ",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 767,
        "comment": "\t\t * This type of ordering is useful if you want to do ordering based on data",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 768,
        "comment": "\t\t * live from the DOM (for example the contents of an 'input' element) rather",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 769,
        "comment": "\t\t * than just the static string that DataTables knows of.",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 770,
        "comment": "\t\t * ",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 771,
        "comment": "\t\t * The way these plug-ins work is that you create an array of the values you",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 772,
        "comment": "\t\t * wish to be ordering for the column in question and then return that",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 773,
        "comment": "\t\t * array. The data in the array much be in the index order of the rows in",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 774,
        "comment": "\t\t * the table (not the currently ordering order!). Which order data gathering",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 775,
        "comment": "\t\t * function is run here depends on the `dt-init columns.orderDataType`",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 776,
        "comment": "\t\t * parameter that is used for the column (if any).",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 777,
        "comment": "\t\t *",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 778,
        "comment": "\t\t * The functions defined take two parameters:",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 779,
        "comment": "\t\t *",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 780,
        "comment": "\t\t * 1. `{object}` DataTables settings object: see",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 781,
        "comment": "\t\t *    {@link DataTable.models.oSettings}",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 782,
        "comment": "\t\t * 2. `{int}` Target column index",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 783,
        "comment": "\t\t *",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 784,
        "comment": "\t\t * Each function is expected to return an array:",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 785,
        "comment": "\t\t *",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 786,
        "comment": "\t\t * * `{array}` Data for the column to be ordering upon",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 787,
        "comment": "\t\t *",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 788,
        "comment": "\t\t *  @type array",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 789,
        "comment": "\t\t *",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 790,
        "comment": "\t\t *  @example",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 791,
        "comment": "\t\t *    // Ordering using `input` node values",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 792,
        "comment": "\t\t *    $.fn.dataTable.ext.order['dom-text'] = function  ( settings, col )",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 793,
        "comment": "\t\t *    {",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 794,
        "comment": "\t\t *      return this.api().column( col, {order:'index'} ).nodes().map( function ( td, i ) {",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 795,
        "comment": "\t\t *        return $('input', td).val();",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 796,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 797,
        "comment": "   * --------------------------------------------------------------------------",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 798,
        "comment": "   * Bootstrap util/component-functions.js",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 802,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 803,
        "comment": "\t\t * Type based plug-ins.",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 804,
        "comment": "\t\t *",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 805,
        "comment": "\t\t * Each column in DataTables has a type assigned to it, either by automatic",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 806,
        "comment": "\t\t * detection or by direct assignment using the `type` option for the column.",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 807,
        "comment": "\t\t * The type of a column will effect how it is ordering and search (plug-ins",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 808,
        "comment": "\t\t * can also make use of the column type if required).",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 809,
        "comment": "\t\t *",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 810,
        "comment": "\t\t * @namespace",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 811,
        "comment": "\t\t */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 813,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 814,
        "comment": "\t\t\t * Automatic column class assignment",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 815,
        "comment": "\t\t\t */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 818,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 819,
        "comment": "\t\t\t * Type detection functions.",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 820,
        "comment": "\t\t\t *",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 821,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 822,
        "comment": "   * --------------------------------------------------------------------------",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 823,
        "comment": "   * Bootstrap alert.js",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 824,
        "comment": "   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 825,
        "comment": "   * --------------------------------------------------------------------------",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 826,
        "comment": "   */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 827,
        "comment": "\t\t     *  1. `{*}` Data from the column cell to be analysed",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 828,
        "comment": "\t\t     *  2. `{settings}` DataTables settings object. This can be used to",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 829,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 830,
        "comment": "   * Constants",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 831,
        "comment": "   */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 832,
        "comment": "\t\t     *     be required",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 833,
        "comment": "\t\t\t *",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 834,
        "comment": "\t\t\t * Each function is expected to return:",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 835,
        "comment": "\t\t\t *",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 836,
        "comment": "\t\t\t * * `{string|null}` Data type detected, or null if unknown (and thus",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 837,
        "comment": "\t\t\t *   pass it on to the other type detection functions.",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 838,
        "comment": "\t\t\t *",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 839,
        "comment": "\t\t\t *  @type array",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 840,
        "comment": "\t\t\t *",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 841,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 842,
        "comment": "   * Class definition",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 843,
        "comment": "   */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 844,
        "comment": "\t\t\t *      function ( data, settings ) {",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 845,
        "comment": "\t\t\t *        // Check the numeric part",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 846,
        "comment": "// Getters",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 847,
        "comment": "\t\t\t *          return null;",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 848,
        "comment": "\t\t\t *        }",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 849,
        "comment": "\t\t\t *",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 850,
        "comment": "\t\t\t *        // Check prefixed by currency",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 851,
        "comment": "// Public",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 852,
        "comment": "\t\t\t *          return 'currency';",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 853,
        "comment": "\t\t\t *        }",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 854,
        "comment": "\t\t\t *        return null;",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 855,
        "comment": "\t\t\t *      }",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 856,
        "comment": "\t\t\t *    );",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 857,
        "comment": "\t\t\t */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 860,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 861,
        "comment": "\t\t\t * Automatic renderer assignment",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 862,
        "comment": "// Private",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 866,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 867,
        "comment": "\t\t\t * Type based search formatting.",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 868,
        "comment": "\t\t\t *",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 869,
        "comment": "// Static",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 870,
        "comment": "\t\t\t * data to be search on. For example, it can be used to strip HTML",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 871,
        "comment": "\t\t\t * tags or to de-format telephone numbers for numeric only searching.",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 872,
        "comment": "\t\t\t *",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 873,
        "comment": "\t\t\t * Note that is a search is not defined for a column of a given type,",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 874,
        "comment": "\t\t\t * no search formatting will be performed.",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 875,
        "comment": "\t\t\t * ",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 876,
        "comment": "\t\t\t * Pre-processing of searching data plug-ins - When you assign the sType",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 877,
        "comment": "\t\t\t * for a column (or have it automatically detected for you by DataTables",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 878,
        "comment": "\t\t\t * or a type detection plug-in), you will typically be using this for",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 879,
        "comment": "\t\t\t * custom sorting, but it can also be used to provide custom searching",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 880,
        "comment": "\t\t\t * by allowing you to pre-processing the data and returning the data in",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 881,
        "comment": "\t\t\t * the format that should be searched upon. This is done by adding",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 882,
        "comment": "\t\t\t * functions this object with a parameter name which matches the sType",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 883,
        "comment": "\t\t\t * for that target column. This is the corollary of <i>afnSortData</i>",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 884,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 885,
        "comment": "   * Data API implementation",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 886,
        "comment": "   */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 887,
        "comment": "\t\t\t *",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 888,
        "comment": "\t\t     *  1. `{*}` Data from the column cell to be prepared for searching",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 889,
        "comment": "\t\t\t *",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 890,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 891,
        "comment": "   * jQuery",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 892,
        "comment": "   */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 893,
        "comment": "\t\t\t *",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 894,
        "comment": "\t\t\t *  @type object",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 895,
        "comment": "\t\t\t *  @default {}",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 896,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 897,
        "comment": "   * --------------------------------------------------------------------------",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 898,
        "comment": "   * Bootstrap button.js",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 899,
        "comment": "   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 900,
        "comment": "   * --------------------------------------------------------------------------",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 901,
        "comment": "   */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 905,
        "comment": "   * Constants",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 906,
        "comment": "   */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 907,
        "comment": "\t\t\t *",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 908,
        "comment": "\t\t\t * The column type tells DataTables what ordering to apply to the table",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 909,
        "comment": "\t\t\t * when a column is sorted upon. The order for each type that is defined,",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 910,
        "comment": "\t\t\t * is defined by the functions available in this object.",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 911,
        "comment": "\t\t\t *",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 912,
        "comment": "\t\t\t * Each ordering option can be described by three properties added to",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 913,
        "comment": "\t\t\t * this object:",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 914,
        "comment": "\t\t\t *",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 915,
        "comment": "\t\t\t * * `{type}-pre` - Pre-formatting function",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 916,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 917,
        "comment": "   * Class definition",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 918,
        "comment": "   */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 919,
        "comment": "\t\t\t * All three can be used together, only `{type}-pre` or only",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 920,
        "comment": "\t\t\t * `{type}-asc` and `{type}-desc` together. It is generally recommended",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 921,
        "comment": "// Getters",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 922,
        "comment": "\t\t\t * implementation in terms of speed, although the others are provided",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 923,
        "comment": "\t\t\t * for compatibility with existing Javascript sort functions.",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 924,
        "comment": "\t\t\t *",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 925,
        "comment": "\t\t\t * `{type}-pre`: Functions defined take a single parameter:",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 926,
        "comment": "// Public",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 927,
        "comment": "\t\t     *  1. `{*}` Data from the column cell to be prepared for ordering",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 928,
        "comment": "// Toggle class and sync the `aria-pressed` attribute with the return value of the `.toggle()` method",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 929,
        "comment": "\t\t\t * And return:",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 930,
        "comment": "\t\t\t *",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 931,
        "comment": "\t\t\t * * `{*}` Data to be sorted upon",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 932,
        "comment": "// Static",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 933,
        "comment": "\t\t\t * `{type}-asc` and `{type}-desc`: Functions are typical Javascript sort",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 934,
        "comment": "\t\t\t * functions, taking two parameters:",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 935,
        "comment": "\t\t\t *",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 936,
        "comment": "\t\t     *  1. `{*}` Data to compare to the second parameter",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 937,
        "comment": "\t\t     *  2. `{*}` Data to compare to the first parameter",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 938,
        "comment": "\t\t\t *",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 939,
        "comment": "\t\t\t * And returning:",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 940,
        "comment": "\t\t\t *",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 941,
        "comment": "\t\t\t * * `{*}` Ordering match: <0 if first parameter should be sorted lower",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 942,
        "comment": "\t\t\t *   than the second parameter, ===0 if the two parameters are equal and",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 943,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 944,
        "comment": "   * Data API implementation",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 945,
        "comment": "   */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 946,
        "comment": "\t\t\t *  @type object",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 947,
        "comment": "\t\t\t *  @default {}",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 948,
        "comment": "\t\t\t *",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 949,
        "comment": "\t\t\t *  @example",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 950,
        "comment": "\t\t\t *    // Numeric ordering of formatted numbers with a pre-formatter",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 951,
        "comment": "\t\t\t *    $.extend( $.fn.dataTable.ext.type.order, {",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 952,
        "comment": "\t\t\t *      \"string-pre\": function(x) {",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 953,
        "comment": "\t\t\t *        a = (a === \"-\" || a === \"\") ? 0 : a.replace( /[^\\d\\-\\.]/g, \"\" );",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 954,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 955,
        "comment": "   * jQuery",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 956,
        "comment": "   */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 957,
        "comment": "\t\t\t *",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 958,
        "comment": "\t\t\t *  @example",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 959,
        "comment": "\t\t\t *    // Case-sensitive string ordering, with no pre-formatting method",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 960,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 961,
        "comment": "   * --------------------------------------------------------------------------",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 962,
        "comment": "   * Bootstrap util/swipe.js",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 963,
        "comment": "   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 964,
        "comment": "   * --------------------------------------------------------------------------",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 965,
        "comment": "   */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 966,
        "comment": "\t\t\t *      }",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 967,
        "comment": "\t\t\t *    } );",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 968,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 972,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 973,
        "comment": "\t\t * Unique DataTables instance counter",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 974,
        "comment": "\t\t *",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 975,
        "comment": "\t\t * @type int",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 976,
        "comment": "\t\t * @private",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 977,
        "comment": "\t\t */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 981,
        "comment": "//",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 982,
        "comment": "// Depreciated",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 983,
        "comment": "// The following properties are retained for backwards compatibility only.",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 984,
        "comment": "// The should not be used in new projects and will be removed in a future",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 985,
        "comment": "// version",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 986,
        "comment": "//",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 988,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 989,
        "comment": "\t\t * Version check function.",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 990,
        "comment": "\t\t *  @type function",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 991,
        "comment": "\t\t *  @depreciated Since 1.10",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 992,
        "comment": "\t\t */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 996,
        "comment": "   */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 997,
        "comment": "\t\t * Index for what 'this' index API functions should use",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 998,
        "comment": "\t\t *  @type int",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 999,
        "comment": "\t\t *  @deprecated Since v1.10",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1000,
        "comment": "\t\t */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1004,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1005,
        "comment": "\t\t * Software version",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1006,
        "comment": "\t\t *  @type string",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1007,
        "comment": "\t\t *  @deprecated Since v1.10",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1008,
        "comment": "\t\t */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1013,
        "comment": "//",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1014,
        "comment": "// Backwards compatibility. Alias to pre 1.10 Hungarian notation counter parts",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1015,
        "comment": "//",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1115,
        "comment": "// implementations differ between browsers.",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1197,
        "comment": "// input and select strings mean that this isn't just a number",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1320,
        "comment": "// Replaceable function in api.util",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1335,
        "comment": "// Remove diacritics from a string by decomposing it and then removing",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1385,
        "comment": "\t * @return {array} Array of unique items",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1424,
        "comment": "// Surprisingly this is faster than [].concat.apply",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1425,
        "comment": "// https://jsperf.com/flatten-an-array-loop-vs-reduce/2",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1451,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1452,
        "comment": "\t * DataTables utility methods",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1453,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1454,
        "comment": "   * --------------------------------------------------------------------------",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1455,
        "comment": "   * Bootstrap collapse.js",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1456,
        "comment": "   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1457,
        "comment": "   * --------------------------------------------------------------------------",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1458,
        "comment": "   */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1459,
        "comment": "\t *  @namespace",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1460,
        "comment": "\t */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1462,
        "comment": "   * Constants",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1463,
        "comment": "   */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1464,
        "comment": "\t\t * @param {*} mixed Function or string to normalize",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1465,
        "comment": "\t\t * @param {*} both Return original string and the normalized string",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1466,
        "comment": "\t\t * @returns String or undefined",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1467,
        "comment": "\t\t */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1477,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1478,
        "comment": "\t\t * Debounce a function",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1479,
        "comment": "\t\t *",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1480,
        "comment": "\t\t * @param {function} fn Function to be called",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1481,
        "comment": "\t\t * @param {integer} freq Call frequency in mS",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1482,
        "comment": "\t\t * @return {function} Wrapped function",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1483,
        "comment": "\t\t */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1552,
        "comment": "\t\t\t\t * setting data since we don't know the type here. This is why an object",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1553,
        "comment": "\t\t\t\t * option is not documented for `mData` (which is read/write), but it is",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1554,
        "comment": "\t\t\t\t * for `mRender` which is read only.",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1555,
        "comment": "\t\t\t\t */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1758,
        "comment": "// row and meta also passed, but not used",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1763,
        "comment": "// arrow is optional + virtual elements",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1764,
        "comment": "// row and meta also passed, but not used",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1801,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1839,
        "comment": "\t *    mapped.",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1917,
        "comment": "// Column search objects are in an array, so it needs to be converted",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1961,
        "comment": "\t */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2007,
        "comment": "// scrollbar on the left, rather than the right.",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2017,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2093,
        "comment": "/* iDataSort to be applied (backwards compatibility), but aDataSort will take",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2094,
        "comment": "\t\t\t * priority if defined",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2095,
        "comment": "\t\t\t */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2155,
        "comment": "\t *  @memberof DataTable#oApi",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2156,
        "comment": "\t */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2170,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2222,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2223,
        "comment": "\t * Get the number of visible columns",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2225,
        "comment": "\t *  @returns {int} i the number of visible columns",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2281,
        "comment": "// For each column, spin over the ",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2322,
        "comment": "// Type is valid for all data points in the column - use this",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2323,
        "comment": "// type",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2330,
        "comment": "// Fall back - if no type was detected, always use string",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2336,
        "comment": "// Set class names for header / footer for auto type classes",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2346,
        "comment": "// This can only happen once! There is no way to remover",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2347,
        "comment": "// a renderer. After the first time the renderer has",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2348,
        "comment": "// already been set so createTr will run the renderer itself.",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2357,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2358,
        "comment": "\t * Apply an auto detected renderer to data which doesn't yet have",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2359,
        "comment": "\t * a renderer",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2360,
        "comment": "\t */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2366,
        "comment": "// We have to update the display here since there is no",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2367,
        "comment": "// invalidation check for the data",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2373,
        "comment": "// No need to update sort / filter data since it has",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2374,
        "comment": "// been invalidated and will be re-read with the",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2393,
        "comment": "\t * they relate to column indexes. The callback function will then apply the",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2394,
        "comment": "\t * definition found for a column to a suitable configuration object.",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2395,
        "comment": "\t *  @param {object} oSettings dataTables settings object",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2396,
        "comment": "\t *  @param {array} aoColDefs The aoColumnDefs array that is to be applied",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2397,
        "comment": "\t *  @param {array} aoCols The aoColumns array that defines columns individually",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2398,
        "comment": "\t *  @param {array} headerLayout Layout for header as it was loaded",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2399,
        "comment": "\t *  @param {function} fn Callback function - takes two parameters, the calculated",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2400,
        "comment": "\t *    column index and the definition for that column.",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2424,
        "comment": "/* Each definition can target multiple columns, as it is an array */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2448,
        "comment": "/* Integer, basic index */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2453,
        "comment": "/* Negative integer, right to left column counting */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2494,
        "comment": "// Statically defined columns array",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2503,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2504,
        "comment": "\t * Get the width for a given set of columns",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2505,
        "comment": "\t *",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2506,
        "comment": "// $FlowFixMe[incompatible-call]: isBody tells us target will be an HTMLElement here",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2507,
        "comment": "\t * @param {*} targets Columns - comma separated string or array of numbers",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2508,
        "comment": "\t * @param {*} original Use the original width (true) or calculated (false)",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2509,
        "comment": "\t * @param {*} incVisible Include visible columns (true) or not (false)",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2510,
        "comment": "\t * @returns Combined CSS value",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2511,
        "comment": "\t */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2532,
        "comment": "// can't determine a defined width - browser defined",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2565,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2567,
        "comment": "\t * _fnGatherData, but for adding rows from a Javascript source, rather than a",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2571,
        "comment": "\t *  @param {node} [tr] TR element to add to the table - optional. If not given,",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2576,
        "comment": "\t *  @memberof DataTable#oApi",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2580,
        "comment": "/* Create the object for storing information about this new row */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2647,
        "comment": "\t *  @param {string} type data get type ('display', 'type' 'filter|search' 'sort|order')",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2648,
        "comment": "\t *  @returns {*} Cell data",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2649,
        "comment": "\t *  @memberof DataTable#oApi",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2650,
        "comment": "\t */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2718,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2719,
        "comment": "// $FlowFixMe[incompatible-type]: Flow seems to have problems with two array unions...",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2720,
        "comment": "\t *  @param {object} settings dataTables settings object",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2721,
        "comment": "\t *  @param {int} rowIdx aoData row id",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2722,
        "comment": "\t *  @param {int} colIdx Column index",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2723,
        "comment": "\t *  @param {*} val Value to set",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2724,
        "comment": "\t *  @memberof DataTable#oApi",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2725,
        "comment": "\t */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2738,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2739,
        "comment": "\t * Write a value to a cell",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2740,
        "comment": "\t * @param {*} td Cell",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2829,
        "comment": "\t * @param {int}    [colIdx] Column index to invalidate. If undefined the whole",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2833,
        "comment": "\t * @todo For the modularisation of v1.11 this will need to become a callback, so",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2849,
        "comment": "// Read the data from the DOM",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2856,
        "comment": "// Reading from data object, update the DOM",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2986,
        "comment": "// Existing row object passed in",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2994,
        "comment": "// Read the ID from the DOM if present",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3063,
        "comment": "\t\t\t * to the aoData array for fast look up",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3064,
        "comment": "\t\t\t */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3067,
        "comment": "/* Special parameters can be given by the data source to be used on the row */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3070,
        "comment": "/* Process each column */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3091,
        "comment": "// Need to create the HTML if new, or if a rendering function is defined",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3148,
        "comment": "// Remove any classes added by DT_RowClass before",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3171,
        "comment": "\t * Create the HTML header for the table",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3173,
        "comment": "\t *  @memberof DataTable#oApi",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3185,
        "comment": "// Footer might be defined",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3190,
        "comment": "// If no cells yet and we have content for them, then create",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3220,
        "comment": "// ARIA role for the rows",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3223,
        "comment": "// Every cell needs to be passed through the renderer",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3232,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3234,
        "comment": "\t *",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3235,
        "comment": "\t * @param {*} settings DataTables settings",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3236,
        "comment": "// check for visited object",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3237,
        "comment": "\t * @param {*} incColumns What columns should be included",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3239,
        "comment": "\t */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3253,
        "comment": "// Default is to work on only visible columns",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3261,
        "comment": "// Make a copy of the master layout array, but with only the columns we want",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3263,
        "comment": "// Remove any columns we haven't selected",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3268,
        "comment": "// Prep the structure array - it needs an element for each row",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3282,
        "comment": "// Expand for rowspan",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3296,
        "comment": "// Which also needs to go over rows",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3446,
        "comment": "/* Header and footer callbacks */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3463,
        "comment": "// Empty table needs a specific class",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3466,
        "comment": "/* Call all required callback functions for the end of a draw */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3469,
        "comment": "/* Draw is complete, sorting and filtering must be as well */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3476,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3477,
        "comment": "// eslint-disable-next-line import/no-unused-modules",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3478,
        "comment": "\t *  @param {object} oSettings dataTables settings object",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3479,
        "comment": "\t *  @param {boolean} [holdPosition] Keep the current paging position. By default",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3480,
        "comment": "/*#__PURE__*/",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3481,
        "comment": "\t *  @memberof DataTable#oApi",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3482,
        "comment": "// eslint-disable-next-line import/no-unused-modules",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3499,
        "comment": "// No filtering, so we want to just use the display master",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3508,
        "comment": "// Let any modules know about the draw hold position state (used by",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3509,
        "comment": "// scrolling internally)",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3518,
        "comment": "/*",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3519,
        "comment": "\t * Table is empty - create a row with an empty message in it",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3520,
        "comment": "\t */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3545,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3546,
        "comment": "// MouseEvent.button value for the secondary button, usually the right button",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3547,
        "comment": "\t * for the renderer. This is done twice, once for above and once for below",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3548,
        "comment": "\t * the table. Ordering must also be considered.",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3549,
        "comment": "\t *",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3550,
        "comment": "\t * @param {*} settings DataTables settings object",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3551,
        "comment": "\t * @param {*} layout Layout object to convert",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3552,
        "comment": "\t * @param {string} side `top` or `bottom`",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3553,
        "comment": "\t * @returns Converted array structure - one item for each row.",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3554,
        "comment": "\t */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3559,
        "comment": "// Combine into like groups (e.g. `top`, `top2`, etc)",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3605,
        "comment": "// And make contents an array",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3613,
        "comment": "// Filter to only the side we need",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3627,
        "comment": "// Order by item identifier",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3639,
        "comment": "// Split into rows",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3659,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3660,
        "comment": "\t * Convert the contents of a row's layout object to nodes that can be inserted",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3661,
        "comment": "\t * into the document by a renderer. Execute functions, look up plug-ins, etc.",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3662,
        "comment": "\t *",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3663,
        "comment": "\t * @param {*} settings DataTables settings object",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3664,
        "comment": "\t * @param {*} row Layout object for this row",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3665,
        "comment": "\t */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3686,
        "comment": "// If it's an object, it just has feature and opts properties from",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3709,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3710,
        "comment": "\t * Add the options to the page HTML for the table",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3712,
        "comment": "\t *  @memberof DataTable#oApi",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3719,
        "comment": "// Wrapper div around everything DataTables controls",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3730,
        "comment": "// Legacy",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3738,
        "comment": "// Everything above - the renderer will actually insert the contents into the document",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3743,
        "comment": "// The table - always the center of attention",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3751,
        "comment": "// Everything below",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3757,
        "comment": "// Processing floats on top, so it isn't an inserted feature",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3763,
        "comment": "\t * @param {*} settings DT settings object",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3764,
        "comment": "\t * @param {*} dom DOM string",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3765,
        "comment": "\t * @param {*} insert Insert point",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3777,
        "comment": "// New container div",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3789,
        "comment": "\t\t\t\t\t * breaks the string into parts and applies them as needed",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3790,
        "comment": "\t\t\t\t\t */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3815,
        "comment": "// End container div",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3819,
        "comment": "// Table",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3831,
        "comment": "// Add to the display",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3839,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3840,
        "comment": "\t * Use the DOM source to create up an array of header cells. The idea here is to",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3841,
        "comment": "\t * create a layout grid (array) of rows x columns, which contains a reference",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3842,
        "comment": "\t * to the cell that that point in the grid (regardless of col/rowspan), such that",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3843,
        "comment": "// If not an UP | DOWN | ESCAPE key => not a dropdown command",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3844,
        "comment": "// If input/textarea && if key is other than ESCAPE => not a dropdown command",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3845,
        "comment": "\t *  @returns {array} Calculated layout array",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3846,
        "comment": "\t *  @memberof DataTable#oApi",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3847,
        "comment": "\t */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3865,
        "comment": "// We know how many rows there are in the layout - so prep it",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3874,
        "comment": "// For every cell in the row..",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3883,
        "comment": "// Get the col and rowspan attributes from the DOM and sanitise them",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3889,
        "comment": "   * jQuery",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3890,
        "comment": "   */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3893,
        "comment": "// Cache calculation for unique columns",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3898,
        "comment": "   * --------------------------------------------------------------------------",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3901,
        "comment": "// Allow column options to be set from HTML attributes",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3917,
        "comment": "// This happens before the render, so the original is still in place",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4009,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4010,
        "comment": "\t * Create an Ajax call based on the table's settings, taking into account that",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4016,
        "comment": "\t * @param {function} fn Callback function to run when data is obtained",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4017,
        "comment": "\t */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4049,
        "comment": "   */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4050,
        "comment": "// an object object or array to merge",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4057,
        "comment": "// Remove the data property as we've resolved it already and don't want",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4058,
        "comment": "// jQuery to do it again (it is restored at the end of the function)",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4100,
        "comment": "// Is a function - let the caller define what needs to be done",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4112,
        "comment": "// Object to extend the base settings",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4115,
        "comment": "// Restore for next time around",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4123,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4124,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4125,
        "comment": "   * Constants",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4126,
        "comment": "   */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4127,
        "comment": "\t *  @memberof DataTable#oApi",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4128,
        "comment": "\t */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4209,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4210,
        "comment": "\t * Data the data from the server (nuking the old) and redraw the table",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4211,
        "comment": "\t *  @param {object} oSettings dataTables settings object",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4212,
        "comment": "\t *  @param {object} json json data return from the server.",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4213,
        "comment": "\t *  @param {string} json.sEcho Tracking flag for DataTables to match requests",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4214,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4215,
        "comment": "   * --------------------------------------------------------------------------",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4216,
        "comment": "   * Bootstrap modal.js",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4217,
        "comment": "   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4218,
        "comment": "   * --------------------------------------------------------------------------",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4228,
        "comment": "// Protect against out of sequence returns",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4256,
        "comment": "\t * Get the data from the JSON data source to use for drawing a table. Using",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4257,
        "comment": "\t * `_fnGetObjectDataFn` allows the data to be sourced from a property of the",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4258,
        "comment": "\t * source object, or from a processing function.",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4259,
        "comment": "\t *  @param {object} settings dataTables settings object",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4260,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4261,
        "comment": "   * Class definition",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4262,
        "comment": "   */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4268,
        "comment": "// Could in inside a `dataSrc` object, or not!",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4292,
        "comment": "// set",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4296,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4297,
        "comment": "\t * Very similar to _fnAjaxDataSrc, but for the other SSP properties",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4298,
        "comment": "\t * @param {*} settings DataTables settings object",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4299,
        "comment": "\t * @param {*} param Target parameter",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4300,
        "comment": "\t * @param {*} json JSON data",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4301,
        "comment": "\t * @returns Resolved value",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4302,
        "comment": "\t */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4309,
        "comment": "// Get from custom location",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4313,
        "comment": "// else - Default behaviour",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4316,
        "comment": "// Legacy support",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4334,
        "comment": "\t * Filter the table using both the global filter and column based filtering",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4335,
        "comment": "\t *  @param {object} settings dataTables settings object",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4336,
        "comment": "\t *  @param {object} input search information",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4381,
        "comment": "// And finally global filtering",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4385,
        "comment": "// Tell the draw function we have been filtering",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4392,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4394,
        "comment": "\t * ",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4395,
        "comment": "\t * This is legacy now that we have named functions, but it is widely used",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4396,
        "comment": "\t * from 1.x, so it is not yet deprecated.",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4399,
        "comment": "\t */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4419,
        "comment": "// So the array reference doesn't break set the results into the",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4420,
        "comment": "// existing array",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4427,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4428,
        "comment": "// return if the following background transition hasn't yet completed",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4429,
        "comment": "\t */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4439,
        "comment": "// Search term can be a function, regex or string - if a string we apply our",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4471,
        "comment": "\t *  @param {string} sSearch string to search for",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4472,
        "comment": "\t *  @param {bool} bRegex treat as a regular expression or not",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4473,
        "comment": "\t *  @param {bool} bSmart perform smart filtering or not",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4474,
        "comment": "\t *  @param {bool} bCaseInsensitive Do case insensitive matching or not",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4475,
        "comment": "\t *  @returns {RegExp} constructed object",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4476,
        "comment": "\t *  @memberof DataTable#oApi",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4477,
        "comment": "\t */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4514,
        "comment": "   * jQuery",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4516,
        "comment": "\t\t\t */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4522,
        "comment": "   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4603,
        "comment": "// Search in DataTables is string based",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4616,
        "comment": "// If it looks like there is an HTML entity in the string,",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4617,
        "comment": "// attempt to decode it so sorting works as expected. Note that",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4648,
        "comment": "\t */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4653,
        "comment": "/* Ensure that the table data is fully initialised */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4665,
        "comment": "// Enable features",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4749,
        "comment": "\t * Alter the display settings to change the page",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4750,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4868,
        "comment": "\t * Add any control elements for the table - specifically scrolling",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4906,
        "comment": "\t\t *        table - scroll head table",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4907,
        "comment": "\t\t *          thead - thead",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4909,
        "comment": "\t\t *      table - table (master table)",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4911,
        "comment": "\t\t *        tbody - tbody",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4912,
        "comment": "\t\t *    div - scroll foot",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4913,
        "comment": "\t\t *      div - scroll foot inner",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4914,
        "comment": "\t\t *        table - scroll foot table",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4915,
        "comment": "\t\t *          tfoot - tfoot",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4916,
        "comment": "\t\t */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5012,
        "comment": "// On redraw - align columns",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5020,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5021,
        "comment": "\t * Update the header, footer and body tables for resizing - i.e. column",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5023,
        "comment": "\t *",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5024,
        "comment": "\t * Welcome to the most horrible function DataTables. The process that this",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5025,
        "comment": "\t * function follows is basically:",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5026,
        "comment": "\t *   1. Re-create the table inside the scrolling div",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5027,
        "comment": "\t *   2. Correct colgroup > col values if needed",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5029,
        "comment": "\t *   4. Clean up",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5030,
        "comment": "\t *",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5031,
        "comment": "\t *  @param {object} settings dataTables settings object",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5032,
        "comment": "\t *  @memberof DataTable#oApi",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5036,
        "comment": "// Given that this is such a monster function, a lot of variables are use",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5037,
        "comment": "// to try and keep the minimised size as small as possible",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5057,
        "comment": "// for the scrollbar",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5063,
        "comment": "   * Class definition",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5069,
        "comment": "// 1. Re-create the table inside the scrolling div",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5073,
        "comment": "// Private",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5093,
        "comment": "// Get the column sizes from the first row in the table",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5127,
        "comment": "// \"Hide\" the header and footer that we used for the sizing. We need to keep",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5128,
        "comment": "// the content of the cell so that the width applied to the header and body",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5140,
        "comment": "// 4. Clean up",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5142,
        "comment": "// provide a bit more space to allow \"overflow\" scrolling (i.e. past the scrollbar)",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5146,
        "comment": "// Set the width's of the header and footer tables",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5164,
        "comment": "// Adjust the position of the header in case we loose the y-scrollbar",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5174,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5176,
        "comment": "\t *  @param {object} settings dataTables settings object",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5178,
        "comment": "\t */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5181,
        "comment": "// Not interested in doing column width calculation if auto-width is disabled",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5194,
        "comment": "// from DOM element",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5203,
        "comment": "// Let plug-ins know that we are doing a recalc, in case they have changed any of the",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5204,
        "comment": "// visible columns their own way (e.g. Responsive uses display:none).",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5213,
        "comment": "// Construct a single row, worst case, table with the widest",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5214,
        "comment": "// node in the data, assign any user defined widths, then insert it into",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5215,
        "comment": "// the DOM and allow the browser to do all the hard work of calculating",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5216,
        "comment": "// table widths",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5221,
        "comment": "// Clean up the table body",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5225,
        "comment": "// Clone the table header and footer - we can't use the header / footer",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5226,
        "comment": "// from the cloned table, since if scrolling is active, the table's",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5227,
        "comment": "// real header and footer are contained in different table tags",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5232,
        "comment": "// Remove any assigned widths from the footer (from scrolling)",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5235,
        "comment": "// Apply custom sizing to the cloned header",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5237,
        "comment": "// Get the `width` from the header layout",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5243,
        "comment": "// For scrollX we need to force the column width otherwise the",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5244,
        "comment": "// browser will collapse it. If this width is smaller than the",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5245,
        "comment": "// width the column requires, then it will have no effect",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5261,
        "comment": "// Find the widest piece of data for each column and put it into the table",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5281,
        "comment": "// duplicated in the dom (radio elements for example)",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5303,
        "comment": "// When scrolling (X or Y) we want to set the width of the table as ",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5304,
        "comment": "// appropriate. However, when not scrolling leave the table width as it",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5305,
        "comment": "// is. This results in slightly different, but I think correct behaviour",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5313,
        "comment": "// If there is no width attribute or style, then allow the table to",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5314,
        "comment": "// collapse",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5326,
        "comment": "// Get the width of each column in the constructed table",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5371,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5372,
        "comment": "\t * Get the maximum strlen for each data column",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5373,
        "comment": "\t *  @param {object} settings dataTables settings object",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5374,
        "comment": "\t *  @param {int} colIdx column of interest",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5375,
        "comment": "\t *  @returns {string} string of the max length",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5376,
        "comment": "\t *  @memberof DataTable#oApi",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5377,
        "comment": "\t */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5393,
        "comment": "// Remove id / name attributes from elements so they",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5394,
        "comment": "// don't interfere with existing elements",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5403,
        "comment": "// We want the HTML in the string, but the length that",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5404,
        "comment": "// is important is the stripped string",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5417,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5418,
        "comment": "\t * Append a CSS unit (only if required) to a string",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5419,
        "comment": "\t *  @param {string} value to css-ify",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5420,
        "comment": "\t *  @returns {string} value with css unit",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5421,
        "comment": "\t *  @memberof DataTable#oApi",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5422,
        "comment": "\t */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5435,
        "comment": "// Check it has a unit character already",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5441,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5442,
        "comment": "\t * Re-insert the `col` elements for current visibility",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5443,
        "comment": "\t *",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5444,
        "comment": "\t * @param {*} settings DT settings",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5445,
        "comment": "\t */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5465,
        "comment": "// Legacy support for `orderCellsTop`",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5481,
        "comment": "// Need to resolve the user input array into our internal structure",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5534,
        "comment": "\t * Sort the display array to match the master's order",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5535,
        "comment": "\t * @param {*} settings",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5536,
        "comment": "\t */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5582,
        "comment": "// Plain column index and direction pair",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5588,
        "comment": "// Object",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5592,
        "comment": "// 1D array",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5621,
        "comment": "// specified",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5670,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5671,
        "comment": "\t * Change the order of the table",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5672,
        "comment": "// Private",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5673,
        "comment": "\t *  @memberof DataTable#oApi",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5674,
        "comment": "// TODO: on v6 target should be given explicitly & remove the {target: 'ss-target'} case",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5686,
        "comment": "// Resolve any column types that are unknown due to addition or invalidation",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5687,
        "comment": "// @todo Can this be moved into a 'data-ready' handler which is called when",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5720,
        "comment": "// Reset the initial positions on each pass so we get a stable sort",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5732,
        "comment": "\t\t\t * and sorting function (from oSort) in a certain direction. It's reasonably complex to",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5812,
        "comment": "\t *  @param {function} [callback] callback function",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5845,
        "comment": "   */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5899,
        "comment": "\t */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5935,
        "comment": "// Custom sorting function - provided by the sort data type",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5946,
        "comment": "// Use / populate cache",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5965,
        "comment": "// If there was a custom sort function, use data from there",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 6164,
        "comment": "\t *  @param {string} msg error message",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 6165,
        "comment": "\t *  @param {int} tn Technical note id to get more information about the error.",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 6179,
        "comment": "// Backwards compatibility pre 1.10",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 6236,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 6240,
        "comment": "\t * able to override them, but we do want to deep copy arrays.",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 6310,
        "comment": "\t * Register a callback function. Easily allows a callback function to be added to",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 6316,
        "comment": "\t */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 6325,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 6326,
        "comment": "\t * Fire callback functions and trigger events. Note that the loop over the",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 6327,
        "comment": "\t * callback array store is done backwards! Further note that you do not want to",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 6328,
        "comment": "\t * fire off triggers in time sensitive applications (for example cell creation)",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 6329,
        "comment": "\t * as its slow.",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 6330,
        "comment": "\t *  @param {object} settings dataTables settings object",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 6331,
        "comment": "\t *  @param {string} callbackArr Name of the array storage for the callbacks in",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 6332,
        "comment": "\t *      oSettings",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 6333,
        "comment": "\t *  @param {string} eventName Name of the jQuery custom event to trigger. If",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 6334,
        "comment": "\t *      null no trigger is fired",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 6335,
        "comment": "\t *  @param {array} args Array of arguments to pass to the callback function /",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 6336,
        "comment": "\t *      trigger",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 6337,
        "comment": "\t *  @param {boolean} [bubbles] True if the event should bubble",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 6338,
        "comment": "\t *  @memberof DataTable#oApi",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 6339,
        "comment": "\t */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 6422,
        "comment": "\t *  @param {object} settings dataTables settings object",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 6441,
        "comment": "\t * @param {*} str String with values to replace",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 6534,
        "comment": "\t *   * `DataTables.Api` - API instance",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 6535,
        "comment": "\t * @return {array|null} Matching DataTables settings objects. `null` or",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 6536,
        "comment": "\t *   `undefined` is returned if no matching DataTable is found.",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 6590,
        "comment": "\t * `rows().nodes()` will return an array of nodes, while `rows().data()` will",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 6598,
        "comment": "\t * top level object had. For example, these two calls are equivalent:",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 6602,
        "comment": "\t *     api.draw();",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 6603,
        "comment": "\t *",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 6604,
        "comment": "\t *     // Chained",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 6605,
        "comment": "\t *     api.row.add( {...} ).draw();",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 6609,
        "comment": "\t *   used to define which DataTables enhanced tables this API will operate on.",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 6610,
        "comment": "\t *   Can be one of:",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 6613,
        "comment": "\t *     with be found and used.",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 6614,
        "comment": "\t *   * `node` - `TABLE` node which has already been formed into a DataTable.",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 6763,
        "comment": "// this has same length as context - one entry for each table",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 6771,
        "comment": "// columns and rows share the same structure.",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 6772,
        "comment": "// 'this' is an array of column indexes for each context",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 6913,
        "comment": "// Value",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 6922,
        "comment": "// Property extension",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 6932,
        "comment": "//         propExt:   [ ... ]               -- array    - Array of Api object definitions to extend the property",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 6938,
        "comment": "//         propExt:   [",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 6940,
        "comment": "//             name:      'data'",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 7007,
        "comment": "// Returned item is the API instance that was passed in, return it",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 7011,
        "comment": "// New API instance returned, want the value from the first item",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 7015,
        "comment": "// Array results are 'enhanced'",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 7020,
        "comment": "// Non-API return - just fire it back",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 7026,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 7027,
        "comment": "\t * Selector for HTML tables. Apply the given selector to the give array of",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 7028,
        "comment": "\t * DataTables settings objects.",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 7030,
        "comment": "\t * @param {string|integer} [selector] jQuery selector string or integer",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 7031,
        "comment": "\t * @param  {array} Array of DataTables settings objects to be filtered",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 7032,
        "comment": "\t * @return {array}",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 7033,
        "comment": "\t * @ignore",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 7051,
        "comment": "// Integer is used to pick out a table by index",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 7056,
        "comment": "// Perform a jQuery selector on the table nodes",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 7064,
        "comment": "// Need to translate back from the table node to the settings",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 7073,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 7074,
        "comment": "\t * Context selector for the API's context (i.e. the tables the API instance",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 7075,
        "comment": "\t * refers to.",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 7076,
        "comment": "\t *",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 7077,
        "comment": "\t * @name    DataTable.Api#tables",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 7151,
        "comment": "// Getter - return existing node's content",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 7228,
        "comment": "\t * Get the current page index.",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 7237,
        "comment": "\t * @param {integer|string} action The paging action to take. This can be one of:",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 7314,
        "comment": "// is a Javascript property of functions which defines how many arguments",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 7315,
        "comment": "// the function expects.",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 7373,
        "comment": "\t *",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 7374,
        "comment": "\t * @return {object} JSON received from the server.",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 7375,
        "comment": "\t */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 7417,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 7419,
        "comment": "\t * table in the current context.",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 7421,
        "comment": "\t * @return {string} Current Ajax source URL",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 7422,
        "comment": "\t */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 7423,
        "comment": "\t * Set the Ajax URL. Note that this will set the URL for all tables in the",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 7424,
        "comment": "\t * current context.",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 7425,
        "comment": "\t *",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 7426,
        "comment": "\t * @param {string} url URL to set.",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 7427,
        "comment": "\t * @returns {DataTables.Api} this",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 7428,
        "comment": "\t */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 7483,
        "comment": "// Can't just check for isArray here, as an API or jQuery instance might be",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 7484,
        "comment": "// given with their array like look",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 7509,
        "comment": "// selector extensions",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 7527,
        "comment": "// Backwards compatibility for 1.9- which used the terminology filter rather",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 7572,
        "comment": "// applied, current, index (original - compatibility with 1.9)",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 7722,
        "comment": "// but to select it using a CSS selector engine (like Sizzle or",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 7726,
        "comment": "// unescaped.",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 7728,
        "comment": "// get row index from id",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 7734,
        "comment": "// need to fall through to jQuery in case there is DOM id that",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 7735,
        "comment": "// matches",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 7780,
        "comment": "// Want argument shifting here and in __row_selector?",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 7884,
        "comment": "// Return an Api.rows() extended instance, so rows().nodes() etc can be used",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 7918,
        "comment": "// If the DOM has an id, and the data source is an array",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 8200,
        "comment": "// show",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 8218,
        "comment": "// only when `child()` was called with parameters (without",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 8228,
        "comment": "// it returns an object and this method is not executed)",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 8236,
        "comment": "// only when `child()` was called with parameters (without",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 8237,
        "comment": "// it returns an object and this method is not executed)",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 8314,
        "comment": "// Count from left",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 8315,
        "comment": "// Count from right (+ because its a negative value)",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 8344,
        "comment": "// Counting from the right",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 8350,
        "comment": "// Counting from the left",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 8360,
        "comment": "// match by column title",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 8375,
        "comment": "// jQuery selector on the TH elements for the columns",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 8406,
        "comment": "// Get",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 8411,
        "comment": "// Set",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 8412,
        "comment": "// No change",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 8418,
        "comment": "// Insert column",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 8419,
        "comment": "// Need to decide if we should use appendChild or insertBefore",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 8428,
        "comment": "// insertBefore can act like appendChild if 2nd arg is null",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 8435,
        "comment": "// Remove column",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 8449,
        "comment": "// argument shifting",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 8875,
        "comment": "// Get",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 8881,
        "comment": "// Set",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 8890,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 8891,
        "comment": "\t * Get current ordering (sorting) that has been applied to the table.",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 8892,
        "comment": "\t *",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 8893,
        "comment": "\t * @returns {array} 2D array containing the sorting information for the first",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 8894,
        "comment": "\t *   table in the current context. Each element in the parent array represents",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 8895,
        "comment": "\t *   a column being sorted upon (i.e. multi-sorting with two columns would have",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 8896,
        "comment": "\t *   2 inner arrays). The inner arrays may have 2 or 3 elements. The first is",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 8897,
        "comment": "\t *   the column index that the sorting condition applies to, the second is the",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 8901,
        "comment": "\t * Set the ordering for the table.",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 8902,
        "comment": "\t *",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 8903,
        "comment": "\t * @param {integer} order Column index to sort upon.",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 8904,
        "comment": "\t * @param {string} direction Direction of the sort to be applied (`asc` or `desc`)",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 8905,
        "comment": "\t * @returns {DataTables.Api} this",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 8906,
        "comment": "\t */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 8914,
        "comment": "\t *",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 8929,
        "comment": "// set",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 8931,
        "comment": "// Simple column / direction passed in",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 8935,
        "comment": "// Arguments passed in (list of 1D arrays)",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 8938,
        "comment": "// otherwise a 2D array was passed in",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 8946,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 8947,
        "comment": "\t * Attach a sort listener to an element for a given column",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 8948,
        "comment": "\t *",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 8949,
        "comment": "\t * @param {node|jQuery|string} node Identifier for the element(s) to attach the",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 8950,
        "comment": "\t *   listener to. This can take the form of a single DOM node, a jQuery",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 8951,
        "comment": "\t *   collection of nodes or a jQuery selector which will identify the node(s).",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 8952,
        "comment": "\t * @param {integer} column the column that a click on this node will sort on",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 8953,
        "comment": "\t * @param {function} [callback] callback function when sort is run",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 8954,
        "comment": "\t * @returns {DataTables.Api} this",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 8955,
        "comment": "\t */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 9032,
        "comment": "// get",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 9038,
        "comment": "// set",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 9045,
        "comment": "// New style options to pass to the search builder",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 9051,
        "comment": "// Compat for the old options",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 9221,
        "comment": "\t * CommonJS factory function pass through. This will check if the arguments",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 9231,
        "comment": "// Test if the first parameter is a window object",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 9329,
        "comment": "\t *  @param {boolean} [visible=false] Flag to indicate if you want all (default)",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 9330,
        "comment": "\t *    or visible tables only.",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 9331,
        "comment": "\t *  @returns {array} Array of `table` nodes (not DataTable instances) which are",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 9332,
        "comment": "\t *    DataTables",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 9333,
        "comment": "\t *  @static",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 9334,
        "comment": "\t *  @dtopt API-Static",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 9335,
        "comment": "\t *",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 9336,
        "comment": "\t *  @example",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 9337,
        "comment": "\t *    $.each( $.fn.dataTable.tables(true), function () {",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 9338,
        "comment": "\t *      $(table).DataTable().columns.adjust();",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 9339,
        "comment": "\t *    } );",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 9340,
        "comment": "\t */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 9373,
        "comment": "\t *    mapped.",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 9374,
        "comment": "\t *  @param {object} user The object to convert from camel case to Hungarian.",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 9459,
        "comment": "// Get status of first table",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 9466,
        "comment": "// Function to run either once the table becomes ready or",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 9467,
        "comment": "// immediately if it is already ready.",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 9632,
        "comment": "\t * Note that the `DataTable.settings` object is aliased to",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 9633,
        "comment": "\t * `jQuery.fn.dataTableExt` through which it may be accessed and",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 9634,
        "comment": "\t * manipulated, or `jQuery.fn.dataTable.settings`.",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 9635,
        "comment": "\t *  @member",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 9636,
        "comment": "\t *  @type array",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 9637,
        "comment": "\t *  @default []",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 9654,
        "comment": "\t * search information for the global filter and individual column filters.",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 9805,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 9806,
        "comment": "\t\t * Flag to indicate if the column is sortable or not.",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 9807,
        "comment": "\t\t */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 9810,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 9811,
        "comment": "\t\t * Flag to indicate if the column is currently visible in the table or not",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 9812,
        "comment": "\t\t */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 9913,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 10008,
        "comment": "\t\t * --------",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 10032,
        "comment": "\t\t *   it my be used as a function. As a function it takes a single parameter,",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 10033,
        "comment": "\t\t *   the JSON returned from the server, which can be manipulated as",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 10038,
        "comment": "\t\t *   DataTables. To manipulate / transform the data returned by the server",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 10039,
        "comment": "\t\t *   use `ajax.dataSrc`, or use `ajax` as a function (see below).",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 10108,
        "comment": "\t\t * as the number of columns, and each element be an object with the parameters",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 10228,
        "comment": "\t\t * This is useful when using complex headers.",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 10229,
        "comment": "\t\t */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 10233,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 10256,
        "comment": "\t\t */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 10332,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 10333,
        "comment": "\t\t * Load the table state. With this function you can define from where, and how, the",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 10334,
        "comment": "\t\t * state of a table is loaded. By default DataTables will load from `localStorage`",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 10335,
        "comment": "\t\t * but you might wish to use a server-side database or cookies.",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 10350,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 10361,
        "comment": "\t\t * Callback that is called when the state has been loaded from the state saving method",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 10369,
        "comment": "\t\t * information for the table is stored By default DataTables will use `localStorage`",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 10371,
        "comment": "\t\t */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 10379,
        "comment": "// noop",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 10384,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 10410,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 10425,
        "comment": "\t\t * disable built-in keyboard navigation.",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 10542,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 10544,
        "comment": "\t\t\t * to the information (`info`) to give an idea of how strong the filtering",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 10545,
        "comment": "\t\t\t * is. The variable _MAX_ is dynamically updated.",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 10546,
        "comment": "\t\t\t */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 10553,
        "comment": "\t\t\t * the `info` (`infoEmpty` and `infoFiltered` in whatever combination they are",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 10555,
        "comment": "\t\t\t */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 10577,
        "comment": "\t\t\t * used to format large numbers that are used in the table information.",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 10642,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 10643,
        "comment": "\t\t\t * Text shown inside the table records when the is no information to be",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 10644,
        "comment": "\t\t\t * displayed after filtering. `emptyTable` is shown when there is simply no",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 10645,
        "comment": "\t\t\t * information in the table at all (regardless of filtering).",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 10646,
        "comment": "\t\t\t */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 10674,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 10675,
        "comment": "\t\t * Legacy DOM layout option",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 10682,
        "comment": "\t\t * DataTables provided search input element (it does not effect calls to",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 10965,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 10967,
        "comment": "\t\t * it finds the longest string in each column and then constructs a",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 10970,
        "comment": "\t\t * string - thus the calculation can go wrong (doing it properly and putting",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 10971,
        "comment": "\t\t * it into an DOM object and measuring that is horribly(!) slow). Thus as",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 10973,
        "comment": "\t\t * text that is found to be the longest string for the column - i.e. padding.",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 11166,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 11167,
        "comment": "\t\t\t * Width of the scrollbar for the web-browser's platform. Calculated",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 11168,
        "comment": "\t\t\t * during table initialisation.",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 11169,
        "comment": "\t\t\t */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 11320,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 11321,
        "comment": "\t\t * If restoring a table - we should restore its width",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 11322,
        "comment": "\t\t */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 11368,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 11586,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 11587,
        "comment": "\t\t * Flag attached to the settings object so you can check in the draw",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 11588,
        "comment": "\t\t * callback if sorting has been done in the draw. Deprecated in favour of",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 11589,
        "comment": "\t\t * events.",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 11590,
        "comment": "\t\t *  @deprecated",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 11660,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 11661,
        "comment": "\t\t * The DataTables object for this table",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 11662,
        "comment": "\t\t */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 11667,
        "comment": "\t\t * is an ID on the table node, then it takes that value, otherwise an",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 11668,
        "comment": "\t\t * incrementing internal counter is used.",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 11891,
        "comment": "// the output string for auto locale support",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 11894,
        "comment": "// Luxon and Moment support",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 11895,
        "comment": "// Argument shifting",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 11938,
        "comment": "// made, as such need to get the local date / time as if it were",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 11939,
        "comment": "// UTC",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 12108,
        "comment": "// If NaN then there isn't much formatting that we can do - just",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 12109,
        "comment": "// return immediately, escaping any HTML (this was supposed to",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 12110,
        "comment": "// be a number after all)",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 12123,
        "comment": "// If zero, then can't have a negative prefix",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 12149,
        "comment": "// Get / set type",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 12171,
        "comment": "// Wrap to allow the function to return `true` rather than",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 12172,
        "comment": "// specifying the type name.",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 12194,
        "comment": "// can be undefined",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 12195,
        "comment": "// can be undefined",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 12196,
        "comment": "// can be undefined",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 12199,
        "comment": "// prop is optional",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 12243,
        "comment": "// Get a list of types",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 12250,
        "comment": "//",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 12251,
        "comment": "// Built in data types",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 12252,
        "comment": "//",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 12260,
        "comment": "// This is a little complex, but faster than always calling toString,",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 12261,
        "comment": "// http://jsperf.com/tostring-v-check",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 12297,
        "comment": "// V8 tries _very_ hard to make a string passed into `Date.parse()`",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 12298,
        "comment": "// valid, so we need to use a regex to restrict date formats. Use a",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 12299,
        "comment": "// plug-in for anything other than ISO8601 style strings",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 12394,
        "comment": "// If a decimal place other than `.` is used, it needs to be given to the",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 12395,
        "comment": "// function so we can detect it and replace with a `.` which is the only",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 12396,
        "comment": "// decimal place Javascript recognises - it is not locale aware.",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 12436,
        "comment": "// Cells and rows which have the attribute to disable the icons",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 12440,
        "comment": "// Legacy support for `orderCellsTop`. If it is set, then cells",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 12441,
        "comment": "// which are not in the top or bottom row of the header (depending",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 12442,
        "comment": "// on the value) do not get the sorting classes applied to them",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 12449,
        "comment": "// No additional mark-up required",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 12453,
        "comment": "// listening for",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 12455,
        "comment": "// need to check this this is the host",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 12482,
        "comment": "// Get the ordering direction for the columns under this cell",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 12483,
        "comment": "// Note that it is possible for a cell to be asc and desc sorting",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 12484,
        "comment": "// (column spanning cells)",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 12493,
        "comment": "// The ARIA spec says that only one column should be marked with aria-sort",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 12500,
        "comment": "// Determine if the next click will remove sorting or change the sort",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 12550,
        "comment": "// Third parameter is internal only!",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 12563,
        "comment": "// For compatibility with the legacy `info` top level option",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 12584,
        "comment": "// Update display on each draw",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 12589,
        "comment": "// For the first info display in the table, we add a callback and aria information.",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 12597,
        "comment": "// Table is described by our info div",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 12607,
        "comment": "\t * Update the information elements in the display",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 12608,
        "comment": "\t *  @param {object} settings dataTables settings object",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 12609,
        "comment": "\t *  @memberof DataTable#oApi",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 12610,
        "comment": "\t */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 12623,
        "comment": "// Record set after filtering",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 12627,
        "comment": "// Convert the macros",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 12645,
        "comment": "// - text",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 12646,
        "comment": "// - placeholder",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 12648,
        "comment": "// Don't show the input if filtering isn't available on the table",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 12671,
        "comment": "// We can put the <input> outside of the label if it is at the start or end",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 12673,
        "comment": "// for elements).",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 12690,
        "comment": "// add for and id to label and input",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 12702,
        "comment": "/* Now do the filter */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 12708,
        "comment": "// Need to redraw, without resorting",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 12729,
        "comment": "// on the clear icon (Edge bug 17584515). This is safe in other browsers as `searchFn`",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 12730,
        "comment": "// checks the value to see if it has changed. In other browsers it won't have.",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 12756,
        "comment": "// opts",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 12757,
        "comment": "// - type - button configuration",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 12760,
        "comment": "// Don't show the paging input if the table doesn't have paging enabled",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 12783,
        "comment": "// Responsive redraw of paging control",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 12862,
        "comment": "// Responsive - check if the buttons are over two lines based on the",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 12863,
        "comment": "// height of the buttons and the container.",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 12866,
        "comment": "// prevent infinite",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 12874,
        "comment": "\t * Get properties for a button based on the current paging state of the table",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 12875,
        "comment": "\t *",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 12876,
        "comment": "\t * @param {*} settings DT settings object",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 12877,
        "comment": "\t * @param {*} button The button type in question",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 12878,
        "comment": "\t * @param {*} page Table's current page",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 12879,
        "comment": "\t * @param {*} pages Number of pages",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 12880,
        "comment": "\t * @returns Info object",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 12881,
        "comment": "\t */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 12942,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 12943,
        "comment": "\t * Compute what number buttons to show in the paging control",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 12944,
        "comment": "\t *",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 12947,
        "comment": "\t * @param {*} buttons Target number of number buttons",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 12949,
        "comment": "\t * @returns Buttons to show",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 12950,
        "comment": "\t */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 12962,
        "comment": "// Single button - current page only",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 12966,
        "comment": "// Special logic for just three buttons",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 13010,
        "comment": "// opts",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 13011,
        "comment": "// - menu",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 13012,
        "comment": "// - text",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 13016,
        "comment": "// For compatibility with the legacy `pageLength` top level option",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 13034,
        "comment": "// Options can be given in a number of ways",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 13036,
        "comment": "// Old 1.x style - 2D array",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 13042,
        "comment": "// An object with different label and value",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 13048,
        "comment": "// Or just a number to display and use",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 13055,
        "comment": "// We can put the <select> outside of the label if it is at the start or",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 13056,
        "comment": "// end which helps improve accessability (not all screen readers like",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 13057,
        "comment": "// implicit for elements).",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 13070,
        "comment": "// Wrapper element - use a span as a holder for where the select will go",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 13077,
        "comment": "// Save text node content for macro updating",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 13088,
        "comment": "// Update the label text in case it has an entries value",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 13095,
        "comment": "// Next, the select itself, along with the options",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 13111,
        "comment": "// add for and id to label and input",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 13116,
        "comment": "// Swap in the select list",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 13119,
        "comment": "// Can't use `select` variable as user might provide their own and the",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 13120,
        "comment": "// reference is broken by the use of outerHTML",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 13128,
        "comment": "// Update node value whenever anything changes the table's length",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 13133,
        "comment": "// Resolve plurals in the text for the new length",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 13143,
        "comment": "// jQuery access",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 13146,
        "comment": "// Provide access to the host jQuery object (circular reference)",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 13153,
        "comment": "// With a capital `D` we return a DataTables API instance rather than a",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 13154,
        "comment": "// jQuery object",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 13159,
        "comment": "// All properties that are available to $.fn.dataTable should also be",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 13160,
        "comment": "// available on $.fn.DataTable",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 13169,
        "comment": "/*! DataTables Bootstrap 5 integration",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 13171,
        "comment": " */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 13175,
        "comment": "// AMD",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 13181,
        "comment": "// CommonJS",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 13192,
        "comment": "// CommonJS environments without a window global must pass a",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 13211,
        "comment": "// Browser",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 13222,
        "comment": " *",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 13223,
        "comment": " * This file sets the defaults and adds options to DataTables to style its",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 13224,
        "comment": " * controls using Bootstrap. See https://datatables.net/manual/styling/bootstrap",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 13226,
        "comment": " */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 13228,
        "comment": "/* Set the defaults for DataTables initialisation */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 13234,
        "comment": "/* Default class modification */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 13249,
        "comment": "/* Bootstrap paging button renderer */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 13290,
        "comment": "// Apply start / end (left / right when ltr) margins",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 14,
        "comment": "   * Bootstrap dom/data.js",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 26,
        "comment": " *   MIT license - https://datatables.net/license",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 98,
        "comment": "/**\r",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 99,
        "comment": " * Converts a hexadecimal color to a CSS3 compatible color.\r",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 100,
        "comment": " * @param {string} hexColor  Color on the format \"#RRGGBB\" or \"#RRGGBBAA\"\r",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 101,
        "comment": " * @returns {string}\r",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 102,
        "comment": "// Method to get DT API instance from jQuery object",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 119,
        "comment": "/**\r",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 120,
        "comment": "// If multiple durations are defined, take the first",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 121,
        "comment": "// Colorize some settings which are high risk",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 122,
        "comment": " * @param {number} saturation  Saturation in range [0, 1]\r",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 123,
        "comment": " * @param {number} lightness  Lightness in range [0, 1]\r",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 124,
        "comment": "/* Sanity check */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 125,
        "comment": " */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 127,
        "comment": "// onLoad events",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 146,
        "comment": "/* Check to see if we are re-initialising a table */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 147,
        "comment": " * Converts an HSL color to a hexadecimal RGB color. This function will correct the lightness for the \"dark\" hues\r",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 148,
        "comment": " * @param {number} hue  Hue in range [0, 1]\r",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 149,
        "comment": " * @param {number} saturation  Saturation in range [0, 1]\r",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 150,
        "comment": " * @param {number} lightness  Lightness in range [0, 1]\r",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 151,
        "comment": " * @returns {string}\r",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 152,
        "comment": "// Handle `details` element as its content may falsie appear visible when it is closed",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 154,
        "comment": "// The corrector specifies the perceived middle lightness for each hue",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 158,
        "comment": "// Adjust the input lightness relative to the corrector",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 164,
        "comment": "/* global umdGlobal */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 166,
        "comment": "// In the future we can replace `GLOBAL` with `globalThis`, but for now use the old school global detection for",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 167,
        "comment": "// Check for HTTPS at domain-server-string",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 170,
        "comment": "/**\r",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 171,
        "comment": " * @typedef {Object} ParsedConfiguration\r",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 172,
        "comment": " * @property {number} colorSaturation\r",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 173,
        "comment": " * @property {number} grayscaleSaturation\r",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 174,
        "comment": " * @property {string} backColor\r",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 175,
        "comment": " * @property {number} iconPadding\r",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 176,
        "comment": " * @property {function(number):number} hue\r",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 177,
        "comment": "/* If the element we are initialising has the same ID as a table which was previously",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 178,
        "comment": "// When closing the alert, store the current date/time in the browser",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 179,
        "comment": "\t\t\t\t * instance by simply deleting it. This is under the assumption that the table has been",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 182,
        "comment": "/*GLOBAL*/",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 183,
        "comment": "/*MODULE*/",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 188,
        "comment": "/**\r",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 189,
        "comment": "/* Ensure the table has an ID - required for accessibility */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 190,
        "comment": "// This will check for specific configured values, and when needed will show a warning div",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 191,
        "comment": " * @param {!Object} rootObject \r",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 192,
        "comment": "// Get shared values",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 197,
        "comment": "// onLoad events",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 198,
        "comment": "/*event*/",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 199,
        "comment": " * @param {Object} newConfiguration - New configuration object.\r",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 200,
        "comment": "// Prevent enter to submitting the form and save the config.",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 203,
        "comment": "// Time check",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 205,
        "comment": "   * @param {HTMLElement} element",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 208,
        "comment": "// Else, compare browser and server.",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 209,
        "comment": "   */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 210,
        "comment": " * @param {Object|number|undefined} paddingOrLocalConfig - Configuration passed to the called API method. A\r",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 211,
        "comment": "// eslint-disable-line no-unused-expressions",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 212,
        "comment": " *    compatibility also contain a padding value. A padding value only overrides the global padding, not the\r",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 213,
        "comment": " *    entire global configuration.\r",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 214,
        "comment": "// Need to add the instance after the instance after the settings object has been added",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 215,
        "comment": "// to the settings array, so we can self reference the table instance if more than one",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 216,
        "comment": " * @returns {ParsedConfiguration}\r",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 217,
        "comment": " */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 221,
        "comment": "// If the length menu is given, but the init display length is not, use the length menu",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 222,
        "comment": "// add listener on the first call when the document is in loading state",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 227,
        "comment": "// In versions < 2.1.0 there was no grayscale saturation -",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 228,
        "comment": "// Color all the org buttons per type",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 236,
        "comment": "// Map the initialisation options onto the settings object",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 237,
        "comment": "     * Creates a lightness range.\r",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 238,
        "comment": "     */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 242,
        "comment": "// Check if the lightness range is an array-like object. This way we ensure the",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 243,
        "comment": "// array contain two values at the same time.",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 248,
        "comment": "/**\r",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 249,
        "comment": "         * Gets a lightness relative the specified value in the specified lightness range.\r",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 250,
        "comment": "         */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 257,
        "comment": "/**\r",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 258,
        "comment": "     * Gets a hue allowed by the configured hue restriction,\r",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 259,
        "comment": "     * provided the originally computed hue.\r",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 260,
        "comment": "     */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 265,
        "comment": "// Check if 'hues' is an array-like object. This way we also ensure that",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 266,
        "comment": "// the array is not empty, which would mean no hue restriction.",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 268,
        "comment": "// originalHue is in the range [0, 1]",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 269,
        "comment": "// backwards compat",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 275,
        "comment": "// A hue was specified. We need to convert the hue from",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 276,
        "comment": "// degrees on any turn - e.g. 746\u00b0 is a perfectly valid hue -",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 277,
        "comment": "// to turns in the range [0, 1).",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 280,
        "comment": "// No hue configured => use original hue",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 285,
        "comment": "// Add click events for user actions",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 286,
        "comment": "   * @param shouldGetNext   Choose to get next or previous element",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 287,
        "comment": "   * @param isCycleAllowed",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 288,
        "comment": "   * @return {Element|elem} The proper element",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 289,
        "comment": "   */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 290,
        "comment": "/*backColor*/",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 291,
        "comment": "/*iconPadding*/",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 304,
        "comment": "/*VALUE*/",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 359,
        "comment": "// Skip other types of nodes than element nodes, since they might not support",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 383,
        "comment": "/*VALUE*/ /*HASH*/",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 389,
        "comment": "/**\r",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 390,
        "comment": " * Represents a point.\r",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 391,
        "comment": " */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 397,
        "comment": "/**\r",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 398,
        "comment": " * Translates and rotates a point before being passed on to the canvas context. This was previously done by the canvas context itself, \r",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 399,
        "comment": " * but this caused a rendering issue in Chrome on sizes > 256 where the rotation transformation of inverted paths was not done properly.\r",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 400,
        "comment": " */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 402,
        "comment": "/*_x*/",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 403,
        "comment": "/*_y*/",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 404,
        "comment": "/*_size*/",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 405,
        "comment": "/*_rotation*/",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 408,
        "comment": "/**\r",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 409,
        "comment": " * Transforms the specified point based on the translation and rotation specification for this Transform.\r",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 410,
        "comment": " * @param {number} x x-coordinate\r",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 411,
        "comment": " * @param {number} y y-coordinate\r",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 412,
        "comment": " * @param {number=} w The width of the transformed rectangle. If greater than 0, this will ensure the returned point is of the upper left corner of the transformed rectangle.\r",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 413,
        "comment": " * @param {number=} h The height of the transformed rectangle. If greater than 0, this will ensure the returned point is of the upper left corner of the transformed rectangle.\r",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 414,
        "comment": " */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 415,
        "comment": "/*",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 416,
        "comment": "\t\t\t\t * Sorting",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 417,
        "comment": "\t\t\t\t * @todo For modularisation (1.11) this needs to do into a sort start up handler",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 418,
        "comment": "\t\t\t\t */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 419,
        "comment": "/*_y*/",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 421,
        "comment": "// in case that has been altered, so the default sort reflects that option",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 422,
        "comment": "/*_x*/ /*_y*/",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 429,
        "comment": "/* Do a first pass on the sorting classes (allows any size changes to be taken into",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 430,
        "comment": "\t\t\t\t * account, and also will apply sorting disabled classes if disabled",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 431,
        "comment": "\t\t\t\t */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 433,
        "comment": "/**\r",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 434,
        "comment": "     * @type {Renderer}\r",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 435,
        "comment": "     * @private\r",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 436,
        "comment": "     */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 437,
        "comment": "/*_renderer*/",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 439,
        "comment": "/**\r",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 440,
        "comment": "     * @type {Transform}\r",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 441,
        "comment": "/*",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 442,
        "comment": "\t\t\t\t * Final init",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 446,
        "comment": "/**\r",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 447,
        "comment": " * Adds a polygon to the underlying renderer.\r",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 448,
        "comment": " * @param {Array<number>} points The points of the polygon clockwise on the format [ x0, y0, x1, y1, ..., xn, yn ]\r",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 449,
        "comment": " * @param {boolean=} invert Specifies if the polygon will be inverted.\r",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 450,
        "comment": " */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 451,
        "comment": "/*addPolygon*/",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 458,
        "comment": "/*currentTransform*/ /*transformIconPoint*/",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 461,
        "comment": "/*_renderer*/ /*addPolygon*/",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 464,
        "comment": "/**\r",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 465,
        "comment": " * Adds a polygon to the underlying renderer.\r",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 466,
        "comment": " * Source: http://stackoverflow.com/a/2173084\r",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 467,
        "comment": " * @param {number} x The x-coordinate of the upper left corner of the rectangle holding the entire ellipse.\r",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 468,
        "comment": " * @param {number} y The y-coordinate of the upper left corner of the rectangle holding the entire ellipse.\r",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 469,
        "comment": " * @param {number} size The size of the ellipse.\r",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 470,
        "comment": " * @param {boolean=} invert Specifies if the ellipse will be inverted.\r",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 471,
        "comment": " */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 472,
        "comment": "/*addCircle*/",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 473,
        "comment": "/*currentTransform*/ /*transformIconPoint*/",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 474,
        "comment": "/*_renderer*/ /*addCircle*/",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 477,
        "comment": "// a tfoot element for the caption element to be appended to",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 478,
        "comment": " * Adds a rectangle to the underlying renderer.\r",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 479,
        "comment": " * @param {number} x The x-coordinate of the upper left corner of the rectangle.\r",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 480,
        "comment": " * @param {number} y The y-coordinate of the upper left corner of the rectangle.\r",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 481,
        "comment": " * @param {number} w The width of the rectangle.\r",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 482,
        "comment": " * @param {number} h The height of the rectangle.\r",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 483,
        "comment": "// Check if there is data passing into the constructor",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 484,
        "comment": " */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 485,
        "comment": "/*addRectangle*/",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 486,
        "comment": "/*addPolygon*/",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 494,
        "comment": "/* Copy the data index array */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 495,
        "comment": " * Adds a right triangle to the underlying renderer.\r",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 496,
        "comment": " * @param {number} x The x-coordinate of the upper left corner of the rectangle holding the triangle.\r",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 497,
        "comment": "/* Initialisation complete - table can be drawn */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 498,
        "comment": " * @param {number} w The width of the triangle.\r",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 499,
        "comment": " * @param {number} h The height of the triangle.\r",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 500,
        "comment": "/* Check if we need to initialise the table (it might not have been handed off to the",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 501,
        "comment": "\t\t\t\t * language processor)",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 502,
        "comment": "\t\t\t\t */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 503,
        "comment": "/*addTriangle*/",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 511,
        "comment": "/*addPolygon*/",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 514,
        "comment": "/**\r",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 515,
        "comment": " * Adds a rhombus to the underlying renderer.\r",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 516,
        "comment": " * @param {number} x The x-coordinate of the upper left corner of the rectangle holding the rhombus.\r",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 517,
        "comment": " * @param {number} y The y-coordinate of the upper left corner of the rectangle holding the rhombus.\r",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 518,
        "comment": " * @param {number} w The width of the rhombus.\r",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 519,
        "comment": " * @param {number} h The height of the rhombus.\r",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 520,
        "comment": " * @param {boolean=} invert Specifies if the rhombus will be inverted.\r",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 521,
        "comment": " */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 522,
        "comment": "/*addRhombus*/",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 523,
        "comment": "/*addPolygon*/",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 531,
        "comment": "   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 532,
        "comment": "   * --------------------------------------------------------------------------",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 533,
        "comment": "   */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 534,
        "comment": "\t *",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 535,
        "comment": "\t * Note that this namespace is aliased to `jQuery.fn.dataTableExt` for legacy",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 536,
        "comment": "\t * reasons",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 544,
        "comment": "\t\t * order. It is _not_ used by DataTables core.",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 556,
        "comment": "\t\t *  @default {}",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 560,
        "comment": "/*addRectangle*/",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 564,
        "comment": "\t\t *  @type string",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 571,
        "comment": "\t\t * ",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 572,
        "comment": "\t\t * How should DataTables report an error. Can take the value 'alert',",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 573,
        "comment": "\t\t * 'throw', 'none' or a function.",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 575,
        "comment": "\t\t *  @type string|function",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 580,
        "comment": "/*addCircle*/",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 586,
        "comment": "   * --------------------------------------------------------------------------",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 589,
        "comment": "   * --------------------------------------------------------------------------",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 590,
        "comment": "   */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 597,
        "comment": "\t\t * ",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 607,
        "comment": "\t\t * 1. `{object}` DataTables settings object: see",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 610,
        "comment": "\t\t *    original format that was passed in as the data source, or an array",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 611,
        "comment": "\t\t *    from a DOM data source",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 612,
        "comment": "\t\t * 3. `{int}` Row index ({@link DataTable.models.oSettings.aoData}), which",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 616,
        "comment": "\t\t *",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 623,
        "comment": "\t\t *",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 624,
        "comment": "\t\t *  @type array",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 626,
        "comment": "\t\t *",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 627,
        "comment": "\t\t *  @example",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 633,
        "comment": "\t\t *        var min = document.getElementById('min').value * 1;",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 634,
        "comment": "\t\t *        var max = document.getElementById('max').value * 1;",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 637,
        "comment": "\t\t *        if ( min == \"\" && max == \"\" ) {",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 641,
        "comment": "   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 642,
        "comment": "   * --------------------------------------------------------------------------",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 644,
        "comment": "\t\t *          return true;",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 648,
        "comment": "   */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 653,
        "comment": "   * Class definition",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 654,
        "comment": "   */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 655,
        "comment": " * @param {Graphics} g\r",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 656,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 657,
        "comment": "\t\t * Selector extensions",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 664,
        "comment": "\t\t * that have been marked as selected by the end user (`{selected: true}`),",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 667,
        "comment": "\t\t *",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 670,
        "comment": "\t\t *",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 672,
        "comment": "\t\t * * Options object (`selector-modifier` object type)",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 675,
        "comment": "\t\t * The return is an array of the resulting item indexes after the custom",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 679,
        "comment": "\t\t */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 680,
        "comment": " * Gets a set of identicon color candidates for a specified hue and config.\r",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 681,
        "comment": " * @param {number} hue\r",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 682,
        "comment": " * @param {ParsedConfiguration} config\r",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 683,
        "comment": " */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 685,
        "comment": "/*hue*/",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 687,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 688,
        "comment": "\t\t * Legacy configuration options. Enable and disable legacy options that",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 689,
        "comment": "\t\t * are available in DataTables.",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 690,
        "comment": "\t\t *",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 691,
        "comment": "\t\t *  @type object",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 692,
        "comment": "\t\t */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 693,
        "comment": "// Light color",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 694,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 695,
        "comment": "\t\t\t * Enable / disable DataTables 1.9 compatible server-side processing",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 696,
        "comment": "\t\t\t * requests",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 700,
        "comment": "\t\t\t */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 701,
        "comment": " * Draws an identicon to a specified renderer.\r",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 702,
        "comment": " * @param {Renderer} renderer\r",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 703,
        "comment": " * @param {string} hash\r",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 704,
        "comment": " * @param {Object|number=} config\r",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 705,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 709,
        "comment": "   * Bootstrap dom/selector-engine.js",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 710,
        "comment": "   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 711,
        "comment": "   * --------------------------------------------------------------------------",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 714,
        "comment": "\t\t *",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 715,
        "comment": "\t\t * Pagination types (the four built in options and any additional plug-in",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 716,
        "comment": "\t\t * options defined here) can be used through the `paginationType`",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 721,
        "comment": "// `document.querySelector` will rightfully complain it is invalid.",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 724,
        "comment": "\t\t * Each function is expected to return an array where each element of the",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 732,
        "comment": "\t\t * * `{array}` - A nested array containing the above elements to add a",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 735,
        "comment": "\t\t * Note that DataTables v1.9- used this object slightly differently whereby",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 739,
        "comment": "\t\t * documented in DataTables 1.10+.",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 742,
        "comment": "\t\t *  @default {}",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 745,
        "comment": "\t\t *    // Show previous, next and current page buttons only",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 748,
        "comment": "\t\t *    };",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 765,
        "comment": "\t\t * order a column, but is necessarily therefore more complex.",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 766,
        "comment": "\t\t * ",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 772,
        "comment": "\t\t * wish to be ordering for the column in question and then return that",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 773,
        "comment": "\t\t * array. The data in the array much be in the index order of the rows in",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 775,
        "comment": "\t\t * function is run here depends on the `dt-init columns.orderDataType`",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 777,
        "comment": "\t\t *",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 783,
        "comment": "\t\t *",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 784,
        "comment": "\t\t * Each function is expected to return an array:",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 785,
        "comment": "\t\t *",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 786,
        "comment": "\t\t * * `{array}` Data for the column to be ordering upon",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 787,
        "comment": "\t\t *",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 788,
        "comment": "\t\t *  @type array",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 789,
        "comment": "\t\t *",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 794,
        "comment": "\t\t *      return this.api().column( col, {order:'index'} ).nodes().map( function ( td, i ) {",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 795,
        "comment": "\t\t *        return $('input', td).val();",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 799,
        "comment": "   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 800,
        "comment": "   * --------------------------------------------------------------------------",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 801,
        "comment": "   */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 802,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 804,
        "comment": "\t\t *",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 820,
        "comment": "\t\t\t *",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 821,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 822,
        "comment": "   * --------------------------------------------------------------------------",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 823,
        "comment": "   * Bootstrap alert.js",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 824,
        "comment": "   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 829,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 835,
        "comment": "\t\t\t *",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 837,
        "comment": "\t\t\t *   pass it on to the other type detection functions.",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 841,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 846,
        "comment": "// Getters",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 847,
        "comment": "\t\t\t *          return null;",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 848,
        "comment": "\t\t\t *        }",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 851,
        "comment": "// Public",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 852,
        "comment": "\t\t\t *          return 'currency';",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 853,
        "comment": "\t\t\t *        }",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 856,
        "comment": "\t\t\t *    );",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 860,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 863,
        "comment": "// Parity",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 866,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 869,
        "comment": "// Static",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 873,
        "comment": "\t\t\t * Note that is a search is not defined for a column of a given type,",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 892,
        "comment": "   */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 896,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 899,
        "comment": "   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 902,
        "comment": "// Clamp to half-byte",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 910,
        "comment": "\t\t\t * is defined by the functions available in this object.",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 911,
        "comment": "\t\t\t *",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 912,
        "comment": "\t\t\t * Each ordering option can be described by three properties added to",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 913,
        "comment": "\t\t\t * this object:",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 918,
        "comment": "   */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 919,
        "comment": "\t\t\t * All three can be used together, only `{type}-pre` or only",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 920,
        "comment": "\t\t\t * `{type}-asc` and `{type}-desc` together. It is generally recommended",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 921,
        "comment": "// Getters",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 928,
        "comment": "// Toggle class and sync the `aria-pressed` attribute with the return value of the `.toggle()` method",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 929,
        "comment": "\t\t\t * And return:",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 930,
        "comment": "\t\t\t *",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 931,
        "comment": "\t\t\t * * `{*}` Data to be sorted upon",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 947,
        "comment": "\t\t\t *  @default {}",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 948,
        "comment": "\t\t\t *",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 949,
        "comment": "\t\t\t *  @example",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 950,
        "comment": "\t\t\t *    // Numeric ordering of formatted numbers with a pre-formatter",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 951,
        "comment": "\t\t\t *    $.extend( $.fn.dataTable.ext.type.order, {",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 957,
        "comment": "\t\t\t *",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 958,
        "comment": "\t\t\t *  @example",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 959,
        "comment": "\t\t\t *    // Case-sensitive string ordering, with no pre-formatting method",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 960,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 961,
        "comment": "   * --------------------------------------------------------------------------",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 962,
        "comment": "   * Bootstrap util/swipe.js",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 963,
        "comment": "   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 969,
        "comment": "   * Constants",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 970,
        "comment": "   */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 971,
        "comment": " * @param {string} fillColor Fill color on format #rrggbb[aa].\r",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 972,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 973,
        "comment": "\t\t * Unique DataTables instance counter",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 974,
        "comment": "\t\t *",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 979,
        "comment": "/**\r",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 980,
        "comment": " * Marks the end of the currently drawn shape. This causes the queued paths to be rendered on the canvas.\r",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 981,
        "comment": "//",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 982,
        "comment": "// Depreciated",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 983,
        "comment": "// The following properties are retained for backwards compatibility only.",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 986,
        "comment": "//",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 987,
        "comment": " * Adds a polygon to the rendering queue.\r",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 988,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 989,
        "comment": "\t\t * Version check function.",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 990,
        "comment": "\t\t *  @type function",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 991,
        "comment": "\t\t *  @depreciated Since 1.10",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 999,
        "comment": "\t\t *  @deprecated Since v1.10",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1000,
        "comment": "\t\t */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1001,
        "comment": " * @param {Point} point The upper left corner of the circle bounding box.\r",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1002,
        "comment": " * @param {number} diameter The diameter of the circle.\r",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1003,
        "comment": " * @param {boolean} counterClockwise True if the circle is drawn counter-clockwise (will result in a hole if rendered on a clockwise path).\r",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1004,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1005,
        "comment": "\t\t * Software version",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1006,
        "comment": "\t\t *  @type string",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1013,
        "comment": "//",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1014,
        "comment": "// Backwards compatibility. Alias to pre 1.10 Hungarian notation counter parts",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1015,
        "comment": "//",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1017,
        "comment": "/*_ctx*/",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1020,
        "comment": "/**\r",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1021,
        "comment": " * Draws an identicon to a context.\r",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1022,
        "comment": "// Public",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1023,
        "comment": " * @param {*} hashOrValue - A hexadecimal hash string or any value that will be hashed by Jdenticon.\r",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1024,
        "comment": " * @param {number} size - Icon size in pixels.\r",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1025,
        "comment": " * @param {Object|number=} config - Optional configuration. If specified, this configuration object overrides any\r",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1026,
        "comment": " *    global configuration in its entirety. For backward compatibility a padding value in the range [0.0, 0.5) can be\r",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1027,
        "comment": "// Private",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1028,
        "comment": " */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1044,
        "comment": "/**\r",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1045,
        "comment": " * Prepares a measure to be used as a measure in an SVG path, by\r",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1046,
        "comment": " * rounding the measure to a single decimal. This reduces the file\r",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1047,
        "comment": " * size of the generated SVG with more than 50% in some cases.\r",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1048,
        "comment": " */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1053,
        "comment": "/**\r",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1054,
        "comment": " * Represents an SVG path element.\r",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1055,
        "comment": " */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1057,
        "comment": "/**\r",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1058,
        "comment": "     * This property holds the data string (path.d) of the SVG path.\r",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1059,
        "comment": "     * @type {string}\r",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1060,
        "comment": "     */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1061,
        "comment": "/*dataString*/",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1065,
        "comment": "/**\r",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1066,
        "comment": " * Adds a polygon with the current fill color to the SVG path.\r",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1067,
        "comment": " * @param points An array of Point objects.\r",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1068,
        "comment": " */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1069,
        "comment": "/*addPolygon*/",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1074,
        "comment": "// Static",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1077,
        "comment": "/**\r",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1078,
        "comment": " * Adds a circle with the current fill color to the SVG path.\r",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1079,
        "comment": " * @param {Point} point The upper left corner of the circle bounding box.\r",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1080,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1081,
        "comment": "   * --------------------------------------------------------------------------",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1082,
        "comment": "   * Bootstrap carousel.js",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1083,
        "comment": "   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1115,
        "comment": "// implementations differ between browsers.",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1120,
        "comment": "/**\r",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1190,
        "comment": "/**\r",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1196,
        "comment": "     */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1197,
        "comment": "// input and select strings mean that this isn't just a number",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1199,
        "comment": "/**\r",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1200,
        "comment": "     * @type {string}\r",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1255,
        "comment": "/**\r",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1298,
        "comment": "// Clear current SVG child elements",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1318,
        "comment": "/*HEIGHT*/",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1324,
        "comment": "/**\r",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1325,
        "comment": " * Appends a path to the SVG element.\r",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1326,
        "comment": " * @param {string} color Fill color on format #xxxxxx.\r",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1327,
        "comment": " * @param {string} dataString The SVG path data string.\r",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1328,
        "comment": " */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1329,
        "comment": "/*appendPath*/",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1330,
        "comment": "/*_el*/",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1335,
        "comment": "// Remove diacritics from a string by decomposing it and then removing",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1377,
        "comment": "/** @type {HTMLCanvasElement} */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1385,
        "comment": "\t * @return {array} Array of unique items",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1428,
        "comment": "// Draw icon",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1451,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1457,
        "comment": "   * --------------------------------------------------------------------------",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1465,
        "comment": "\t\t * @param {*} both Return original string and the normalized string",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1466,
        "comment": "\t\t * @returns String or undefined",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1467,
        "comment": "\t\t */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1468,
        "comment": " */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1471,
        "comment": "/**\r",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1472,
        "comment": " * Specifies which bundle of Jdenticon that is used.\r",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1473,
        "comment": " * @type {string}\r",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1474,
        "comment": " */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1477,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1483,
        "comment": "\t\t */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 114,
        "comment": "// Support: Firefox 64+, Edge 18+",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 115,
        "comment": "// Return 0 if element or transition duration is not found",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 116,
        "comment": "// On the other hand, just using `getAttribute` is not enough as",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 117,
        "comment": "// the `nonce` attribute is reset to an empty string whenever it",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 118,
        "comment": "// becomes browsing-context connected.",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 119,
        "comment": "/**\r",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 120,
        "comment": "// If multiple durations are defined, take the first",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 121,
        "comment": "// Colorize some settings which are high risk",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 122,
        "comment": " * @param {number} saturation  Saturation in range [0, 1]\r",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 123,
        "comment": " * @param {number} lightness  Lightness in range [0, 1]\r",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 139,
        "comment": "// Support: Android <=2.3 only (functionish RegExp)",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 144,
        "comment": "/* global Symbol */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 145,
        "comment": "// Defining this global in .eslintrc.json would create a danger of using the global",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 146,
        "comment": "/* Check to see if we are re-initialising a table */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 154,
        "comment": "// The corrector specifies the perceived middle lightness for each hue",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 157,
        "comment": "// The jQuery object is actually just the init constructor 'enhanced'",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 158,
        "comment": "// Adjust the input lightness relative to the corrector",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 164,
        "comment": "/* global umdGlobal */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 169,
        "comment": "// The default length of a jQuery object is 0",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 176,
        "comment": " * @property {function(number):number} hue\r",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 177,
        "comment": "/* If the element we are initialising has the same ID as a table which was previously",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 180,
        "comment": "\t\t\t\t * destroyed by other methods. Anyone using non-id selectors will need to do this manually",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 185,
        "comment": "// Display the warning",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 189,
        "comment": "/* Ensure the table has an ID - required for accessibility */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 190,
        "comment": "// This will check for specific configured values, and when needed will show a warning div",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 193,
        "comment": "// Build a new jQuery matched element set",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 196,
        "comment": "/* Create the settings object for this table and set some of the default parameters */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 199,
        "comment": " * @param {Object} newConfiguration - New configuration object.\r",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 203,
        "comment": "// Time check",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 248,
        "comment": "/**\r",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 249,
        "comment": "         * Gets a lightness relative the specified value in the specified lightness range.\r",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 262,
        "comment": "// onLoad events",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 266,
        "comment": "// the array is not empty, which would mean no hue restriction.",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 271,
        "comment": "// Handle case when target is a string or something (possible in deep copy)",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 276,
        "comment": "// degrees on any turn - e.g. 746\u00b0 is a perfectly valid hue -",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 284,
        "comment": "   * @param {array} list    The list of elements",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 287,
        "comment": "   * @param isCycleAllowed",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 291,
        "comment": "/*iconPadding*/",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 292,
        "comment": "// Prevent never-ending loop",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 297,
        "comment": "// Recurse if we're merging plain objects or arrays",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 302,
        "comment": "// Ensure proper type for the source value",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 357,
        "comment": "// If we don't have a columns array, then generate one with nulls",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 372,
        "comment": "// Apply the column definitions",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 399,
        "comment": " * but this caused a rendering issue in Chrome on sizes > 256 where the rotation transformation of inverted paths was not done properly.\r",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 408,
        "comment": "/**\r",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 411,
        "comment": " * @param {number} y y-coordinate\r",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 425,
        "comment": "// Do not include comment or processing instruction nodes",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 430,
        "comment": "\t\t\t\t * account, and also will apply sorting disabled classes if disabled",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 456,
        "comment": "// when creating the element",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 457,
        "comment": "// document fragments.",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 461,
        "comment": "/*_renderer*/ /*addPolygon*/",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 462,
        "comment": "// push.apply(_, arraylike) throws on ancient WebKit",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 484,
        "comment": " */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 485,
        "comment": "/*addRectangle*/",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 496,
        "comment": " * @param {number} x The x-coordinate of the upper left corner of the rectangle holding the triangle.\r",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 502,
        "comment": "\t\t\t\t */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 513,
        "comment": "// Go through every key on the object,",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 524,
        "comment": "// Flatten any nested arrays",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 528,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 531,
        "comment": "   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 532,
        "comment": "   * --------------------------------------------------------------------------",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 540,
        "comment": "// Populate the class2type map",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 548,
        "comment": "\t\t */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 549,
        "comment": "// `in` check used to prevent JIT error (gh-2145)",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 550,
        "comment": "// hasOwn isn't used here due to false negatives",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 551,
        "comment": "// regarding Nodelist length in IE",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 589,
        "comment": "   * --------------------------------------------------------------------------",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 595,
        "comment": "   */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 596,
        "comment": "\t\t * Row searching.",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 606,
        "comment": "\t\t *",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 607,
        "comment": "\t\t * 1. `{object}` DataTables settings object: see",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 613,
        "comment": "\t\t *    can be useful to retrieve the `TR` element if you need DOM interaction.",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 618,
        "comment": "// try to parse",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 622,
        "comment": "\t\t * naming we call it searching here.",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 645,
        "comment": "\t\t *        }",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 652,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 670,
        "comment": "\t\t *",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 672,
        "comment": "\t\t * * Options object (`selector-modifier` object type)",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 676,
        "comment": "\t\t * selector has been applied.",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 679,
        "comment": "\t\t */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 682,
        "comment": " * @param {ParsedConfiguration} config\r",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 688,
        "comment": "\t\t * Legacy configuration options. Enable and disable legacy options that",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 689,
        "comment": "\t\t * are available in DataTables.",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 692,
        "comment": "\t\t */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 695,
        "comment": "\t\t\t * Enable / disable DataTables 1.9 compatible server-side processing",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 699,
        "comment": "\t\t\t *  @default null",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 722,
        "comment": "// See https://github.com/twbs/bootstrap/issues/32273",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 723,
        "comment": "\t\t *",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 732,
        "comment": "\t\t * * `{array}` - A nested array containing the above elements to add a",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 737,
        "comment": "\t\t * ability is still supported by DataTables 1.10+ to provide backwards",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 738,
        "comment": "\t\t * compatibility, but this option of use is now decremented and no longer",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 746,
        "comment": "\t\t *    $.fn.dataTableExt.oPagination.current = function ( page, pages ) {",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 750,
        "comment": "// Replace a hexadecimal escape sequence with the encoded Unicode code point",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 751,
        "comment": "// Support: IE <=11+",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 752,
        "comment": "// For values outside the Basic Multilingual Plane (BMP), manually construct a",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 753,
        "comment": "// surrogate pair",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 759,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 760,
        "comment": "\t\t * Ordering plug-ins - custom data source",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 761,
        "comment": "\t\t * ",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 762,
        "comment": "\t\t * The extension options for ordering of data available here is complimentary",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 774,
        "comment": "\t\t * the table (not the currently ordering order!). Which order data gathering",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 775,
        "comment": "\t\t * function is run here depends on the `dt-init columns.orderDataType`",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 776,
        "comment": "\t\t * parameter that is used for the column (if any).",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 783,
        "comment": "\t\t *",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 790,
        "comment": "\t\t *  @example",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 791,
        "comment": "\t\t *    // Ordering using `input` node values",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 792,
        "comment": "\t\t *    $.fn.dataTable.ext.order['dom-text'] = function  ( settings, col )",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 809,
        "comment": "\t\t *",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 814,
        "comment": "\t\t\t * Automatic column class assignment",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 821,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 828,
        "comment": "\t\t     *  2. `{settings}` DataTables settings object. This can be used to",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 829,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 832,
        "comment": "\t\t     *     be required",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 835,
        "comment": "\t\t\t *",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 839,
        "comment": "\t\t\t *  @type array",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 840,
        "comment": "\t\t\t *",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 849,
        "comment": "\t\t\t *",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 852,
        "comment": "\t\t\t *          return 'currency';",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 853,
        "comment": "\t\t\t *        }",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 863,
        "comment": "// Parity",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 868,
        "comment": "\t\t\t *",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 875,
        "comment": "\t\t\t * ",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 882,
        "comment": "\t\t\t * functions this object with a parameter name which matches the sType",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 883,
        "comment": "\t\t\t * for that target column. This is the corollary of <i>afnSortData</i>",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 884,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 885,
        "comment": "   * Data API implementation",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 886,
        "comment": "   */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 887,
        "comment": "\t\t\t *",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 888,
        "comment": "\t\t     *  1. `{*}` Data from the column cell to be prepared for searching",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 892,
        "comment": "   */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 896,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 897,
        "comment": "   * --------------------------------------------------------------------------",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 898,
        "comment": "   * Bootstrap button.js",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 899,
        "comment": "   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 900,
        "comment": "   * --------------------------------------------------------------------------",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 901,
        "comment": "   */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 904,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 912,
        "comment": "\t\t\t * Each ordering option can be described by three properties added to",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 938,
        "comment": "\t\t\t *",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 942,
        "comment": "\t\t\t *   than the second parameter, ===0 if the two parameters are equal and",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 943,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 944,
        "comment": "   * Data API implementation",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 945,
        "comment": "   */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 946,
        "comment": "\t\t\t *  @type object",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 947,
        "comment": "\t\t\t *  @default {}",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 953,
        "comment": "\t\t\t *        a = (a === \"-\" || a === \"\") ? 0 : a.replace( /[^\\d\\-\\.]/g, \"\" );",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 954,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 957,
        "comment": "\t\t\t *",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 965,
        "comment": "   */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 966,
        "comment": "\t\t\t *      }",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 967,
        "comment": "\t\t\t *    } );",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 968,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 974,
        "comment": "\t\t *",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 975,
        "comment": "\t\t * @type int",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 976,
        "comment": "\t\t * @private",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 977,
        "comment": "\t\t */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 987,
        "comment": " * Adds a polygon to the rendering queue.\r",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 992,
        "comment": "\t\t */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 997,
        "comment": "\t\t * Index for what 'this' index API functions should use",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 998,
        "comment": "\t\t *  @type int",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 999,
        "comment": "\t\t *  @deprecated Since v1.10",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1000,
        "comment": "\t\t */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1007,
        "comment": "\t\t *  @deprecated Since v1.10",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1008,
        "comment": "\t\t */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1009,
        "comment": " * @param {String} type",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1018,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1019,
        "comment": " * Returns a function to use in pseudos for :enabled/:disabled",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1020,
        "comment": "/**\r",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1021,
        "comment": " * Draws an identicon to a context.\r",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1024,
        "comment": " * @param {number} size - Icon size in pixels.\r",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1027,
        "comment": "// Private",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1028,
        "comment": " */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1029,
        "comment": "// https://html.spec.whatwg.org/multipage/scripting.html#selector-disabled",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1032,
        "comment": "// Check for inherited disabledness on relevant non-disabled elements:",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1033,
        "comment": "// * listed form-associated elements in a disabled fieldset",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1034,
        "comment": "//   https://html.spec.whatwg.org/multipage/forms.html#category-listed",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1035,
        "comment": "//   https://html.spec.whatwg.org/multipage/forms.html#concept-fe-disabled",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1036,
        "comment": "// * option elements in a disabled optgroup",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1037,
        "comment": "//   https://html.spec.whatwg.org/multipage/forms.html#concept-option-disabled",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1038,
        "comment": "// All such elements have a \"form\" property.",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1041,
        "comment": "// Option elements defer to a parent optgroup if present",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1050,
        "comment": "// Support: IE 6 - 11+",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1051,
        "comment": "// Use the isDisabled shortcut property to check for disabled fieldset ancestors",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1054,
        "comment": " * Represents an SVG path element.\r",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1061,
        "comment": "/*dataString*/",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1062,
        "comment": "// Some victims get caught in our net (label, legend, menu, track), but it shouldn't",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1063,
        "comment": "// even exist on them, let alone have a boolean value.",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1068,
        "comment": " */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1073,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1074,
        "comment": "// Static",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1075,
        "comment": " * @param {Function} fn",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1076,
        "comment": " */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1085,
        "comment": "   */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1115,
        "comment": "// implementations differ between browsers.",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1318,
        "comment": "/*HEIGHT*/",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1319,
        "comment": "// This is probably OK but for backwards compatibility we want to maintain",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1320,
        "comment": "// Replaceable function in api.util",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1326,
        "comment": " * @param {string} color Fill color on format #xxxxxx.\r",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1327,
        "comment": " * @param {string} dataString The SVG path data string.\r",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1328,
        "comment": " */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1329,
        "comment": "/*appendPath*/",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1330,
        "comment": "/*_el*/",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1375,
        "comment": "// eslint-disable-next-line eqeqeq",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1431,
        "comment": "// IE 9's matchesSelector returns false on disconnected nodes",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1449,
        "comment": "   */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1450,
        "comment": "// Support: IE 11+, Edge 17 - 18+",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1451,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1452,
        "comment": "\t * DataTables utility methods",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1453,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1463,
        "comment": "   */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1464,
        "comment": "\t\t * @param {*} mixed Function or string to normalize",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1465,
        "comment": "\t\t * @param {*} both Return original string and the normalized string",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1466,
        "comment": "\t\t * @returns String or undefined",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1467,
        "comment": "\t\t */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1474,
        "comment": " */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1555,
        "comment": "\t\t\t\t */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1749,
        "comment": "// Seek `elem` from a previously-cached index",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1758,
        "comment": "// row and meta also passed, but not used",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1761,
        "comment": "// When found, cache indexes on `parent` and break",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1770,
        "comment": "// Use previously-cached element index if available",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1778,
        "comment": "// xml :nth-child(...)",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1779,
        "comment": "// or :nth-last-child(...) or :nth(-last)?-of-type(...)",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1961,
        "comment": "\t */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2016,
        "comment": "// Position-in-collection",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2114,
        "comment": "// Combinators",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2145,
        "comment": "// Return the length of the invalid excess",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2155,
        "comment": "\t *  @memberof DataTable#oApi",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2216,
        "comment": "// Reuse newcache so results back-propagate to previous elements",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2219,
        "comment": "// A match means we're done; a fail means we have to keep checking",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2321,
        "comment": "// Un-match failing elements by moving them back to matcherIn",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2334,
        "comment": "// Get the final matcherOut by condensing this intermediate into postFinder contexts",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2340,
        "comment": "// Restore matcherIn since elem is not yet a final match",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2347,
        "comment": "// a renderer. After the first time the renderer has",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2358,
        "comment": "\t * Apply an auto detected renderer to data which doesn't yet have",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2393,
        "comment": "\t * they relate to column indexes. The callback function will then apply the",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2399,
        "comment": "\t *  @param {function} fn Callback function - takes two parameters, the calculated",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2400,
        "comment": "\t *    column index and the definition for that column.",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2425,
        "comment": "// If the preceding token was a descendant combinator, insert an implicit any-element `*`",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2453,
        "comment": "/* Negative integer, right to left column counting */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2456,
        "comment": "// Use integer dirruns iff this is the outermost matcher",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2496,
        "comment": "// Track unmatched elements for set filters",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2499,
        "comment": "// They will have gone through all possible matchers",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2504,
        "comment": "\t * Get the width for a given set of columns",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2511,
        "comment": "\t */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2512,
        "comment": "// makes the latter nonnegative.",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2515,
        "comment": "// Apply set filters to unmatched elements",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2516,
        "comment": "// NOTE: This can be skipped if there are no unmatched elements (i.e., `matchedCount`",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2517,
        "comment": "// equals `i`), unless we didn't visit _any_ elements in the above loop because we have",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2518,
        "comment": "// no element matchers and no seed.",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2519,
        "comment": "// Incrementing an initially-string \"0\" `i` allows `i` to remain a string only in that",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2520,
        "comment": "// case, which will result in a \"00\" `matchedCount` that differs from `i` but is also",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2521,
        "comment": "// numerically zero.",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2530,
        "comment": "// Reintegrate element matches to eliminate the need for sorting",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2539,
        "comment": "// Discard index placeholder values to get only actual matches",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2546,
        "comment": "// $FlowFixMe[incompatible-return]: https://github.com/facebook/flow/issues/1414",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2576,
        "comment": "\t *  @memberof DataTable#oApi",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2651,
        "comment": "// Search, expanding context for leading sibling combinators",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2721,
        "comment": "\t *  @param {int} rowIdx aoData row id",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2837,
        "comment": "// If this is a positional/relative selector, check membership in the returned set",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2848,
        "comment": "// Initialize a jQuery object",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2851,
        "comment": "// A central reference to the root jQuery(document)",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2856,
        "comment": "// Reading from data object, update the DOM",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2998,
        "comment": "// Positional selectors never match, since there's no _selection_ context",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3003,
        "comment": "// Always skip document fragments",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3021,
        "comment": "// Determine the position of an element within the set",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3149,
        "comment": "// Convert String-formatted options into Object-formatted ones",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3158,
        "comment": "/*",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3161,
        "comment": " *\toptions: an optional list of space-separated options that will change how",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3162,
        "comment": " *\t\t\tthe callback list behaves or a more traditional option object",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3163,
        "comment": " *",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3164,
        "comment": " * By default a callback list will act like an event callback list and can be",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3166,
        "comment": "// Returns the composite rect of an element relative to its offsetParent.",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3167,
        "comment": "// Composite means it takes into account transforms as well as layout.",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3168,
        "comment": " *",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3169,
        "comment": " *\tonce:\t\t\twill ensure the callback list can only be fired once (like a Deferred)",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3171,
        "comment": "\t * Create the HTML header for the table",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3173,
        "comment": "\t *  @memberof DataTable#oApi",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3175,
        "comment": " *\tunique:\t\t\twill ensure a callback can only be added once (no duplicate in the list)",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3176,
        "comment": " *",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3177,
        "comment": " *\tstopOnFalse:\tinterrupt callings when a callback returns false",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3178,
        "comment": " *",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3179,
        "comment": " */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3182,
        "comment": "// Convert options from String-formatted to Object-formatted if needed",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3183,
        "comment": "// (we check in cache first)",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3188,
        "comment": "// Flag to know if list is currently firing",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3209,
        "comment": "// Fire callbacks",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3212,
        "comment": "// Enforce single-firing",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3215,
        "comment": "// Execute callbacks for all pending executions,",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3216,
        "comment": "// respecting firingIndex overrides and runtime changes",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3226,
        "comment": "// Jump to end and forget the data so .add doesn't re-fire",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3240,
        "comment": "// Clean up if we're done firing for good",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3247,
        "comment": "// Otherwise, this object is spent",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3254,
        "comment": "// Actual Callbacks object",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3257,
        "comment": "// Add a callback or a collection of callbacks to the list",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3261,
        "comment": "// Make a copy of the master layout array, but with only the columns we want",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3275,
        "comment": "// Inspect recursively",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3295,
        "comment": "// Handle firing indexes",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3442,
        "comment": "// Keep pipe for back-compat",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3443,
        "comment": "/* fnDone, fnFail, fnProgress */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3449,
        "comment": "// Map tuples (progress, done, fail) to arguments (done, fail, progress)",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3452,
        "comment": "// deferred.progress(function() { bind to newDefer or newDefer.notify })",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3482,
        "comment": "// eslint-disable-next-line import/no-unused-modules",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3483,
        "comment": "// https://promisesaplus.com/#point-59",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3484,
        "comment": "/*#__PURE__*/ /*#__PURE__*/",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3491,
        "comment": "// Support: Promises/A+ section 2.3.1",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3492,
        "comment": "// https://promisesaplus.com/#point-48",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3497,
        "comment": "// Support: Promises/A+ sections 2.3.3.1, 3.5",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3498,
        "comment": "// https://promisesaplus.com/#point-54",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3499,
        "comment": "// No filtering, so we want to just use the display master",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3500,
        "comment": "// Retrieve `then` only once",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3503,
        "comment": "// Support: Promises/A+ section 2.3.4",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3504,
        "comment": "// https://promisesaplus.com/#point-64",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3505,
        "comment": "// Only check objects and functions for thenability",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3510,
        "comment": "// Handle a returned thenable",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3513,
        "comment": "// Special processors (notify) just wait for resolution",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3521,
        "comment": "// Normal processors (resolve) also hook into progress",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3524,
        "comment": "// ...and disregard older resolution values",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3536,
        "comment": "   */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3539,
        "comment": "// Only substitute handlers pass on context",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3540,
        "comment": "// and multiple values (non-spec behavior)",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3546,
        "comment": "// MouseEvent.button value for the secondary button, usually the right button",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3547,
        "comment": "\t * for the renderer. This is done twice, once for above and once for below",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3552,
        "comment": "\t * @param {string} side `top` or `bottom`",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3565,
        "comment": "// Support: Promises/A+ section 2.3.3.3.4.1",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3566,
        "comment": "// https://promisesaplus.com/#point-61",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3567,
        "comment": "// Ignore post-resolution exceptions",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3570,
        "comment": "// Only substitute handlers pass on context",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3571,
        "comment": "// and multiple values (non-spec behavior)",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3584,
        "comment": "// Re-resolve promises immediately to dodge false rejection from",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3585,
        "comment": "// subsequent errors",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3609,
        "comment": "// progress_handlers.add( ... )",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3621,
        "comment": "// fulfilled_handlers.add( ... )",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3632,
        "comment": "// rejected_handlers.add( ... )",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3645,
        "comment": "// Get a promise for this deferred",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3646,
        "comment": "// If obj is provided, the promise aspect is added to the object",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3653,
        "comment": "// Add list-specific methods",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3658,
        "comment": "// promise.progress = list.add",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3659,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3660,
        "comment": "\t * Convert the contents of a row's layout object to nodes that can be inserted",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3663,
        "comment": "\t * @param {*} settings DataTables settings object",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3668,
        "comment": "// state = \"resolved\" (i.e., fulfilled)",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3669,
        "comment": "// state = \"rejected\"",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3674,
        "comment": "// fulfilled_callbacks.disable",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3677,
        "comment": "// rejected_handlers.disable",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3678,
        "comment": "// If this is a touch-enabled device we remove the extra",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3684,
        "comment": "// progress_handlers.lock",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3689,
        "comment": "// progress_handlers.fire",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3690,
        "comment": "// fulfilled_handlers.fire",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3691,
        "comment": "// rejected_handlers.fire",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3694,
        "comment": "// deferred.notify = function() { deferred.notifyWith(...) }",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3696,
        "comment": "// deferred.reject = function() { deferred.rejectWith(...) }",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3702,
        "comment": "// deferred.notifyWith = list.fireWith",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3703,
        "comment": "// deferred.resolveWith = list.fireWith",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3708,
        "comment": "// Make the deferred a promise",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3730,
        "comment": "// Legacy",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3753,
        "comment": "// Use .then() to unwrap secondary thenables (cf. gh-3000)",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3771,
        "comment": "// These usually indicate a programmer mistake during development,",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3776,
        "comment": "// captured before the async barrier to get the original error cause",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3777,
        "comment": "// New container div",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3800,
        "comment": "// Static",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3810,
        "comment": "// registration.",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3820,
        "comment": "// Is the DOM ready to be used? Set to true once it occurs.",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3823,
        "comment": "// A counter to track how many items to wait for before",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3824,
        "comment": "// the ready event fires. See trac-6781",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3827,
        "comment": "// Handle when the DOM is ready",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3830,
        "comment": "// Abort if there are pending holds or we're already ready",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3835,
        "comment": "// Remember that the DOM is ready",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3838,
        "comment": "// If a normal DOM Ready event fired, decrement, and wait if need be",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3843,
        "comment": "// If not an UP | DOWN | ESCAPE key => not a dropdown command",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3850,
        "comment": "// The ready event handler and self cleanup method",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3858,
        "comment": "// after the browser event has already occurred.",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3860,
        "comment": "// Older IE sometimes signals \"interactive\" too soon",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3864,
        "comment": "// Handle it asynchronously to allow scripts the opportunity to delay ready",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3869,
        "comment": "// Use the handy event callback",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3872,
        "comment": "// A fallback to window.onload, that will always work",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3879,
        "comment": "// Multifunctional method to get and set values of a collection",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3880,
        "comment": "// The value/s can optionally be executed if it's a function",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3886,
        "comment": "// Sets many values",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3893,
        "comment": "// Cache calculation for unique columns",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3908,
        "comment": "// ...except when executing function values",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4016,
        "comment": "\t * @param {function} fn Callback function to run when data is obtained",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4034,
        "comment": "// Always use camelCase key (gh-2257)",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4041,
        "comment": "//   1. No key was specified",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4043,
        "comment": "//",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4048,
        "comment": "   * Class definition",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4049,
        "comment": "   */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4056,
        "comment": "// When the key is not a string, or both a key and value",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4057,
        "comment": "// Remove the data property as we've resolved it already and don't want",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4058,
        "comment": "// jQuery to do it again (it is restored at the end of the function)",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4101,
        "comment": "// Remove the expando if there's no more data",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4126,
        "comment": "   */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4127,
        "comment": "\t *  @memberof DataTable#oApi",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4128,
        "comment": "\t */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4129,
        "comment": "//\t2. Improve the module's maintainability by reducing the storage",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4130,
        "comment": "//\t\tpaths to a single mechanism.",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4131,
        "comment": "//\t3. Use the same single mechanism to support \"private\" and \"user\" data.",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4132,
        "comment": "//\t4. _Never_ expose \"private\" data to user code (TODO: Drop _data, _removeData)",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4133,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4134,
        "comment": "   * Class definition",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4217,
        "comment": "   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4227,
        "comment": "// The attrs elements can be null (trac-14894)",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4243,
        "comment": "// Sets multiple values",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4253,
        "comment": "// The calling jQuery object (element matches) is not empty",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4254,
        "comment": "// (and therefore has an element appears at this[ 0 ]) and the",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4256,
        "comment": "\t * Get the data from the JSON data source to use for drawing a table. Using",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4257,
        "comment": "\t * `_fnGetObjectDataFn` allows the data to be sourced from a property of the",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4260,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4261,
        "comment": "   * Class definition",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4267,
        "comment": "// Attempt to \"discover\" the data in",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4268,
        "comment": "// Could in inside a `dataSrc` object, or not!",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4281,
        "comment": "// We always store the camelCased key",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4303,
        "comment": "// Speed up dequeue by getting out quickly if this is just a lookup",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4326,
        "comment": "// If the fx queue is dequeued, always remove the progress sentinel",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4334,
        "comment": "\t * Filter the table using both the global filter and column based filtering",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4335,
        "comment": "\t *  @param {object} settings dataTables settings object",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4380,
        "comment": "// Ensure a hooks for this queue",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4444,
        "comment": "// Support: IE 9 - 11+, Edge 12 - 18+, iOS 10.0 - 10.2 only",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4445,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4457,
        "comment": "// isHiddenWithinTree might be called from jQuery#filter function;",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4466,
        "comment": "// Support: Firefox <=43 - 45",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4467,
        "comment": "// Static",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4489,
        "comment": "// Starting value computation is required for potential unit mismatches",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4521,
        "comment": "   * Bootstrap offcanvas.js",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4583,
        "comment": "// Since we force visibility upon cascade-hidden elements, an immediate (and slow)",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4599,
        "comment": "// Remember what we're overwriting",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4651,
        "comment": "// Support: Windows Web Apps (WWA)",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4663,
        "comment": "// Support: IE <=11 only",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4759,
        "comment": "// Convert non-html into a text node",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4763,
        "comment": "// Convert html into DOM nodes",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4767,
        "comment": "// Deserialize a standard representation",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4772,
        "comment": "// Descend through wrappers to the right content",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4778,
        "comment": "// Support: Android <=4.0 only, PhantomJS 1 only",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4810,
        "comment": "// Preserve script evaluation history",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4916,
        "comment": "\t\t */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4921,
        "comment": "// Caller can pass in an object of custom data in lieu of the handler",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4975,
        "comment": "// handleObj is passed to all event handlers",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5010,
        "comment": "// Add to the element's handler list, delegates in front",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5017,
        "comment": "// Keep track of which events have ever been used, for event optimization",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5023,
        "comment": "\t *",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5057,
        "comment": "// for the scrollbar",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5079,
        "comment": "// (avoids potential for endless recursion during removal of special event handlers)",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5110,
        "comment": "// Use the fix-ed jQuery.Event rather than the (read-only) native event",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5124,
        "comment": "// Determine handlers",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5127,
        "comment": "// \"Hide\" the header and footer that we used for the sizing. We need to keep",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5157,
        "comment": "// Call the postDispatch hook for the mapped type",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5174,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5178,
        "comment": "\t */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5179,
        "comment": "// Suppress spec-violating clicks indicating a non-primary pointer button (trac-3861)",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5180,
        "comment": "// https://www.w3.org/TR/DOM-Level-3-Events/#event-type-click",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5181,
        "comment": "// Not interested in doing column width calculation if auto-width is disabled",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5182,
        "comment": "// ...but not arrow key \"clicks\" of radio inputs, which can have `button` -1 (gh-2343)",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5187,
        "comment": "// Don't check non-elements (trac-13208)",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5188,
        "comment": "// If this is a touch-enabled device we remove the extra",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5195,
        "comment": "// Don't conflict with Object.prototype properties (trac-13203)",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5214,
        "comment": "// node in the data, assign any user defined widths, then insert it into",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5272,
        "comment": "// Claim the first handler",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5276,
        "comment": "// dataPriv.set( el, \"click\", ... )",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5300,
        "comment": "// For cross-browser consistency, suppress native .click() on links",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5301,
        "comment": "// Also prevent it if we're currently inside a leveraged native-event stack",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5314,
        "comment": "// collapse",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5315,
        "comment": "// Firefox doesn't alert if the returnValue field is not set.",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5324,
        "comment": "// Ensure the presence of an event listener that handles manually-triggered",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5326,
        "comment": "// Get the width of each column in the constructed table",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5327,
        "comment": "// already occurred before other listeners are invoked.",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5330,
        "comment": "// Missing `isSetup` indicates a trigger call, which must force setup through jQuery.event.add",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5351,
        "comment": "// Store arguments for use when handling the inner native event",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5352,
        "comment": "// There will always be at least one argument (an event object), so this array",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5353,
        "comment": "// will not be confused with a leftover capture object.",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5357,
        "comment": "// Trigger the native event and capture its result",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5364,
        "comment": "// Cancel the outer synthetic event",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5371,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5372,
        "comment": "\t * Get the maximum strlen for each data column",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5373,
        "comment": "\t *  @param {object} settings dataTables settings object",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5374,
        "comment": "\t *  @param {int} colIdx column of interest",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5375,
        "comment": "\t *  @returns {string} string of the max length",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5376,
        "comment": "\t *  @memberof DataTable#oApi",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5381,
        "comment": "// If this is a native event triggered above, everything is now in order",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5382,
        "comment": "// DO NOT USE IT. Is only for backwards compatibility",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5385,
        "comment": "// ...and capture the result",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5392,
        "comment": "// Abort handling of the native event by all jQuery handlers while allowing",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5393,
        "comment": "// Remove id / name attributes from elements so they",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5394,
        "comment": "// don't interfere with existing elements",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5395,
        "comment": "// the native event is re-wrapped by a jQuery one on each level of the",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5396,
        "comment": "// propagation so the only way to stop it for jQuery is to stop it for",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5397,
        "comment": "// everyone via native `stopPropagation()`. This is not a problem for",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5398,
        "comment": "// focus/blur which don't bubble, but it does also stop click on checkboxes",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5399,
        "comment": "// and radios. We accept this limitation.",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5409,
        "comment": "// This \"if\" is needed for plain objects",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5417,
        "comment": "/**",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5422,
        "comment": "\t */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5427,
        "comment": "// Events bubbling up the document may have been marked as prevented",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5428,
        "comment": "// by a handler lower down the tree; reflect the correct value.",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5432,
        "comment": "// Support: Android <=2.3 only",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5437,
        "comment": "// Create target properties",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5438,
        "comment": "// Support: Safari <=6 - 7 only",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5439,
        "comment": "// Target should not be a text node (trac-504, trac-13143)",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5447,
        "comment": "// Event type",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5452,
        "comment": "// Put explicitly provided properties onto the event object",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5457,
        "comment": "// In the future can be replaced with:",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5460,
        "comment": "// Mark it as fixed",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5464,
        "comment": "// jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5465,
        "comment": "// Legacy support for `orderCellsTop`",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5561,
        "comment": "// focus/blur don't bubble while focusin/focusout do; simulate the former by only",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5566,
        "comment": "// `jQuery.event.add`, so event handle will already have been set",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5581,
        "comment": "// Utilize native event if possible so blur/focus sequence is correct",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5586,
        "comment": "// Claim the first handler",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5587,
        "comment": "// dataPriv.set( this, \"focus\", ... )",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5588,
        "comment": "// Object",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5593,
        "comment": "// Support: IE 9 - 11+",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5594,
        "comment": "// We use the same native handler for focusin & focus (and focusout & blur)",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5610,
        "comment": "// Force setup before trigger",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5613,
        "comment": "// Return non-false to allow normal event-path propagation",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5635,
        "comment": "// Suppress native focus or blur if we're currently inside",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5636,
        "comment": "// a leveraged native-event stack",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5644,
        "comment": "// Support: Firefox <=44",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5645,
        "comment": "// Firefox doesn't have focus(in | out) events",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5646,
        "comment": "// Related ticket - https://bugzilla.mozilla.org/show_bug.cgi?id=687787",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5647,
        "comment": "//",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5648,
        "comment": "// Support: Chrome <=48 - 49, Safari <=9.0 - 9.1",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5649,
        "comment": "// focus(in | out) events fire after focus & blur events,",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5650,
        "comment": "// which is spec violation - http://www.w3.org/TR/DOM-Level-3-Events/#events-focusevent-event-order",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5651,
        "comment": "// Related ticket - https://bugs.chromium.org/p/chromium/issues/detail?id=449857",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5654,
        "comment": "// Public",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5659,
        "comment": "// Handle: regular nodes (via `this.ownerDocument`), window",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5665,
        "comment": "// Support: IE 9 - 11+",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5667,
        "comment": "// so we need to coordinate setup & teardown parts between those events.",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5668,
        "comment": "// Use `delegateType` as the key as `type` is already used by `leverageNative`.",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5701,
        "comment": "// Support: Safari 7 only",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5721,
        "comment": "// For mouseenter/leave call the handler if related is outside the target.",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5722,
        "comment": "// NB: No relatedTarget if the mouse left/entered the browser window",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5782,
        "comment": "// Support: IE <=10 - 11, Edge 12 - 13 only",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5858,
        "comment": "// Fails to return the selected option to the default selected state when cloning options",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5946,
        "comment": "// Use / populate cache",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 6177,
        "comment": "// If using innerHTML throws an exception, use the fallback method",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 6224,
        "comment": "// Support: Android <=4.0 only, PhantomJS 1 only",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 6225,
        "comment": "// .get() because push.apply(_, arraylike) throws on ancient WebKit",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 6240,
        "comment": "\t * able to override them, but we do want to deep copy arrays.",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 6310,
        "comment": "\t * Register a callback function. Easily allows a callback function to be added to",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 6319,
        "comment": "// Nullify the div so it wouldn't be stored in the memory and",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 6320,
        "comment": "// it will also be a sign that checks already performed",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 6333,
        "comment": "\t *  @param {string} eventName Name of the jQuery custom event to trigger. If",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 6338,
        "comment": "\t *  @memberof DataTable#oApi",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 6339,
        "comment": "\t */",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 6422,
        "comment": "\t *  @param {object} settings dataTables settings object",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 6441,
        "comment": "\t * @param {*} str String with values to replace",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 6449,
        "comment": "// Firefox only trims leading whitespace. Chrome just collapses",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 6450,
        "comment": "// both leading & trailing whitespace to a single space.",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 6451,
        "comment": "//",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 6602,
        "comment": "\t *     api.draw();",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 6605,
        "comment": "\t *     api.row.add( {...} ).draw();",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 6609,
        "comment": "\t *   used to define which DataTables enhanced tables this API will operate on.",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 6614,
        "comment": "\t *   * `node` - `TABLE` node which has already been formed into a DataTable.",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 6686,
        "comment": "// Fall back to offsetWidth/offsetHeight when value is \"auto\"",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 6768,
        "comment": "// SVG-related",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 6783,
        "comment": "// Don't set styles on text and comment nodes",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 6981,
        "comment": "// These hooks are used by animate to expand properties",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 6992,
        "comment": "// Assumes a single number if not a string",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 7056,
        "comment": "// Perform a jQuery selector on the table nodes",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 7057,
        "comment": "// Default value for a checkbox should be \"on\"",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 7060,
        "comment": "// Support: IE <=11 only",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 7061,
        "comment": "// Must access selectedIndex to make default options select",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 7064,
        "comment": "// Need to translate back from the table node to the settings",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 7065,
        "comment": "// An input loses its value after becoming a radio",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 7425,
        "comment": "\t *",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 7431,
        "comment": "// Only assign if different to avoid unneeded rendering.",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 7485,
        "comment": "// Store className if set",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 7491,
        "comment": "// Otherwise bring back whatever was previously saved (if anything),",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 7492,
        "comment": "// falling back to the empty string if nothing was stored.",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 7639,
        "comment": "// Get the specific value for the option",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 7642,
        "comment": "// We don't need an array for one selects",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 7647,
        "comment": "// Multi-Selects return an array",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 7854,
        "comment": "// Don't re-trigger an onFOO event when we call its FOO() method",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 7861,
        "comment": "// Prevent re-triggering of the same event, since we already bubbled it above",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 7886,
        "comment": "// Piggyback on a donor event to simulate a different one",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 8234,
        "comment": "// offset() relates an element's border box to the document origin",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 8237,
        "comment": "// it returns an object and this method is not executed)",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 8302,
        "comment": "// Incorporate borders into its offset, since they are outside its content origin",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 8316,
        "comment": "// This method will return documentElement in the following cases:",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 8317,
        "comment": "// 1) For the element inside the iframe without offsetParent, this method will return",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 8346,
        "comment": "// Coalesce documents and windows",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 8373,
        "comment": "// Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 8374,
        "comment": "// Blink bug: https://bugs.chromium.org/p/chromium/issues/detail?id=589347",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 8375,
        "comment": "// jQuery selector on the TH elements for the columns",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 8376,
        "comment": "// rather than make the css module depend on the offset module, just check for it here",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 8393,
        "comment": "// Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 8411,
        "comment": "// Set",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 8417,
        "comment": "// Get document width or height",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 8421,
        "comment": "// Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height],",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 8422,
        "comment": "// whichever is greatest",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 8432,
        "comment": "// Get width or height on the element, requesting but not forcing parseFloat",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 8435,
        "comment": "// Remove column",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 8488,
        "comment": "// Support: Android <=4.0 only",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 8489,
        "comment": "// Make sure we trim BOM and NBSP",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 8490,
        "comment": "// Require that the \"whitespace run\" starts from a non-whitespace",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 8491,
        "comment": "// to avoid O(N^2) behavior when the engine would try matching \"\\s+$\" at each space position.",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 8494,
        "comment": "// Bind a function to a context, optionally partially applying any",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 8495,
        "comment": "// arguments.",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 8496,
        "comment": "// jQuery.proxy is deprecated to promote standards (specifically Function#bind)",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 8497,
        "comment": "// However, it is not slated for removal any time soon",
        "comment_time": "2024-05-25 15:39:36+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 127,
        "comment": "// onLoad events",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 128,
        "comment": "/*event*/",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 141,
        "comment": "// get current URL path and assign \"active\" class to the correct nav-item",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 73,
        "comment": "// ================================",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 167,
        "comment": "// Check for HTTPS at domain-server-string",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 203,
        "comment": "// Time check",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 206,
        "comment": "// Check if we were able to fetch a valid NTP Time",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 207,
        "comment": "// If so, compare both browser and server with NTP",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 208,
        "comment": "// Else, compare browser and server.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 218,
        "comment": "// Domain check",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 223,
        "comment": "// Version check",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 226,
        "comment": "// DNS Check",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 97,
        "comment": "// This function will prevent submitting a from when someone presses enter.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 108,
        "comment": "// This function will hook into the smtp-test-email input field and will call the smtpTest() function when enter is pressed.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 121,
        "comment": "// Colorize some settings which are high risk",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 155,
        "comment": "// Trigger the event initially",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 160,
        "comment": "// This will check if the ADMIN_TOKEN is not a Argon2 hashed value.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 161,
        "comment": "// Else it will show a warning, unless someone has closed it.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 162,
        "comment": "// Then it will not show this warning for 30 days.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 167,
        "comment": "// Check for HTTPS at domain-server-string",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 178,
        "comment": "// When closing the alert, store the current date/time in the browser",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 185,
        "comment": "// Display the warning",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 190,
        "comment": "// This will check for specific configured values, and when needed will show a warning div",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 197,
        "comment": "// onLoad events",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 198,
        "comment": "/*event*/",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 200,
        "comment": "// Prevent enter to submitting the form and save the config.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 201,
        "comment": "// Users need to really click on save, this also to prevent accidental submits.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 161,
        "comment": "// Else it will show a warning, unless someone has closed it.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 190,
        "comment": "// This will check for specific configured values, and when needed will show a warning div",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 192,
        "comment": "// Get shared values",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 195,
        "comment": "// Get org specific values",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 208,
        "comment": "// Else, compare browser and server.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 264,
        "comment": "// onLoad events",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 265,
        "comment": "/*event*/",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 276,
        "comment": "// Default show all",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 287,
        "comment": "// Add click events for user actions",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 14,
        "comment": "   * Bootstrap dom/data.js",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 32,
        "comment": "// can be removed later when multiple key/instances are fine to be used",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 73,
        "comment": "// ================================",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 94,
        "comment": "   */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 107,
        "comment": "// Get transition-duration of the element",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 115,
        "comment": "// Return 0 if element or transition duration is not found",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 120,
        "comment": "// If multiple durations are defined, take the first",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 138,
        "comment": "// it's a jQuery object or a node element",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 152,
        "comment": "// Handle `details` element as its content may falsie appear visible when it is closed",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 185,
        "comment": "// Display the warning",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 202,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 203,
        "comment": "// Time check",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 204,
        "comment": "   *",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 205,
        "comment": "   * @param {HTMLElement} element",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 206,
        "comment": "// Check if we were able to fetch a valid NTP Time",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 207,
        "comment": "// If so, compare both browser and server with NTP",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 208,
        "comment": "// Else, compare browser and server.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 209,
        "comment": "   */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 211,
        "comment": "// eslint-disable-line no-unused-expressions",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 222,
        "comment": "// add listener on the first call when the document is in loading state",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 239,
        "comment": "/* istanbul ignore if */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 282,
        "comment": "   * Return the previous/next element of a list.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 283,
        "comment": "   *",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 284,
        "comment": "   * @param {array} list    The list of elements",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 285,
        "comment": "   * @param activeElement   The active element",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 286,
        "comment": "   * @param shouldGetNext   Choose to get next or previous element",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 287,
        "comment": "// Add click events for user actions",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 288,
        "comment": "   * @return {Element|elem} The proper element",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 289,
        "comment": "   */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 294,
        "comment": "// if the element does not exist in the list return an element",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 306,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 393,
        "comment": "// in case of mouseenter or mouseleave wrap the handler within a function that checks for its DOM position",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 394,
        "comment": "// this prevents the handler from being dispatched the same way as mouseover or mouseout does",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 438,
        "comment": "// allow to get the native events from namespaced events ('click.bs.button' --> 'click')",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 459,
        "comment": "// Simplest case: handler is passed, remove that listener ONLY.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 528,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 529,
        "comment": "   * --------------------------------------------------------------------------",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 530,
        "comment": "   * Bootstrap dom/manipulator.js",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 531,
        "comment": "   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 532,
        "comment": "   * --------------------------------------------------------------------------",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 533,
        "comment": "   */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 585,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 586,
        "comment": "   * --------------------------------------------------------------------------",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 587,
        "comment": "   * Bootstrap util/config.js",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 588,
        "comment": "   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 589,
        "comment": "   * --------------------------------------------------------------------------",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 590,
        "comment": "   */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 593,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 594,
        "comment": "   * Class definition",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 595,
        "comment": "   */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 598,
        "comment": "// Getters",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 618,
        "comment": "// try to parse",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 638,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 639,
        "comment": "   * --------------------------------------------------------------------------",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 640,
        "comment": "   * Bootstrap base-component.js",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 641,
        "comment": "   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 642,
        "comment": "   * --------------------------------------------------------------------------",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 643,
        "comment": "   */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 646,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 647,
        "comment": "   * Constants",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 648,
        "comment": "   */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 652,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 653,
        "comment": "   * Class definition",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 654,
        "comment": "   */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 668,
        "comment": "// Public",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 686,
        "comment": "// Static",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 707,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 708,
        "comment": "   * --------------------------------------------------------------------------",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 709,
        "comment": "   * Bootstrap dom/selector-engine.js",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 710,
        "comment": "   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 711,
        "comment": "   * --------------------------------------------------------------------------",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 712,
        "comment": "   */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 719,
        "comment": "// The only valid content that could double as a selector are IDs or classes,",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 720,
        "comment": "// so everything starting with `#` or `.`. If a \"real\" URL is used as the selector,",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 721,
        "comment": "// `document.querySelector` will rightfully complain it is invalid.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 722,
        "comment": "// See https://github.com/twbs/bootstrap/issues/32273",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 727,
        "comment": "// Just in case some CMS puts out a full URL with the anchor appended",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 764,
        "comment": "// TODO: this is now unused; remove later along with prev()",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 796,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 797,
        "comment": "   * --------------------------------------------------------------------------",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 798,
        "comment": "   * Bootstrap util/component-functions.js",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 799,
        "comment": "   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 800,
        "comment": "   * --------------------------------------------------------------------------",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 801,
        "comment": "   */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 816,
        "comment": "// Method argument is left, for Alert and only, as it doesn't implement the 'hide' method",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 821,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 822,
        "comment": "   * --------------------------------------------------------------------------",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 823,
        "comment": "   * Bootstrap alert.js",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 824,
        "comment": "   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 825,
        "comment": "   * --------------------------------------------------------------------------",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 826,
        "comment": "   */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 829,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 830,
        "comment": "   * Constants",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 831,
        "comment": "   */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 841,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 842,
        "comment": "   * Class definition",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 843,
        "comment": "   */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 846,
        "comment": "// Getters",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 851,
        "comment": "// Public",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 862,
        "comment": "// Private",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 869,
        "comment": "// Static",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 884,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 885,
        "comment": "   * Data API implementation",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 886,
        "comment": "   */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 890,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 891,
        "comment": "   * jQuery",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 892,
        "comment": "   */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 896,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 897,
        "comment": "   * --------------------------------------------------------------------------",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 898,
        "comment": "   * Bootstrap button.js",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 899,
        "comment": "   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 900,
        "comment": "   * --------------------------------------------------------------------------",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 901,
        "comment": "   */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 904,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 905,
        "comment": "   * Constants",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 906,
        "comment": "   */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 916,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 917,
        "comment": "   * Class definition",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 918,
        "comment": "   */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 921,
        "comment": "// Getters",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 926,
        "comment": "// Public",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 928,
        "comment": "// Toggle class and sync the `aria-pressed` attribute with the return value of the `.toggle()` method",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 932,
        "comment": "// Static",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 943,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 944,
        "comment": "   * Data API implementation",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 945,
        "comment": "   */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 954,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 955,
        "comment": "   * jQuery",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 956,
        "comment": "   */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 960,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 961,
        "comment": "   * --------------------------------------------------------------------------",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 962,
        "comment": "   * Bootstrap util/swipe.js",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 963,
        "comment": "   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 964,
        "comment": "   * --------------------------------------------------------------------------",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 965,
        "comment": "   */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 968,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 969,
        "comment": "   * Constants",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 970,
        "comment": "   */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 994,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 995,
        "comment": "   * Class definition",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 996,
        "comment": "   */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1022,
        "comment": "// Public",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1027,
        "comment": "// Private",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1074,
        "comment": "// Static",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1080,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1081,
        "comment": "   * --------------------------------------------------------------------------",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1082,
        "comment": "   * Bootstrap carousel.js",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1083,
        "comment": "   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1084,
        "comment": "   * --------------------------------------------------------------------------",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1085,
        "comment": "   */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1088,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1447,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1448,
        "comment": "   * jQuery",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1449,
        "comment": "   */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1453,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1454,
        "comment": "   * --------------------------------------------------------------------------",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1455,
        "comment": "   * Bootstrap collapse.js",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1456,
        "comment": "   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1457,
        "comment": "   * --------------------------------------------------------------------------",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1458,
        "comment": "   */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1461,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1462,
        "comment": "   * Constants",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1463,
        "comment": "   */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1756,
        "comment": "// and applies them to the HTMLElements such as popper and arrow",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1763,
        "comment": "// arrow is optional + virtual elements",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1767,
        "comment": "// Flow doesn't support to extend this property, but it's the most",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1768,
        "comment": "// effective way to apply styles to an HTMLElement",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1769,
        "comment": "// $FlowFixMe[cannot-write]",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2164,
        "comment": "// Round the offsets to the nearest suitable subpixel based on the DPR.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2165,
        "comment": "// Zooming can change the DPR, but it seems to report a value that will",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2166,
        "comment": "// cleanly divide the values into the appropriate subpixels.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2356,
        "comment": "// eslint-disable-next-line import/no-unused-modules",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2439,
        "comment": "// of the `<html>` and `<body>` rect bounds if horizontally scrollable",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2476,
        "comment": "// $FlowFixMe[incompatible-return]: assume body is always available",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 2487,
        "comment": "/*",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2488,
        "comment": "  given a DOM element, return the list of all scroll parents, up the list of ancesors",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2489,
        "comment": "  until we get to the top window object. This list is what we attach scroll listeners",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2490,
        "comment": "  to, because if any of these parent elements scroll, we'll need to re-calculate the",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2491,
        "comment": "  reference element's position.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2492,
        "comment": "  */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2506,
        "comment": "// $FlowFixMe[incompatible-call]: isBody tells us target will be an HTMLElement here",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2534,
        "comment": "// A \"clipping parent\" is an overflowable container with the characteristic of",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2535,
        "comment": "// clipping (or hiding) overflowing elements with a position different from",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2536,
        "comment": "// `initial`",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2546,
        "comment": "// $FlowFixMe[incompatible-return]: https://github.com/facebook/flow/issues/1414",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2719,
        "comment": "// $FlowFixMe[incompatible-type]: Flow seems to have problems with two array unions...",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2990,
        "comment": "// Offsets are the actual position the popper needs to have to be",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2991,
        "comment": "// properly positioned near its reference element",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2992,
        "comment": "// This is the most basic placement, and will be adjusted by",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2993,
        "comment": "// the modifiers in the next step",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3000,
        "comment": "// eslint-disable-next-line import/no-unused-modules",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3166,
        "comment": "// Returns the composite rect of an element relative to its offsetParent.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3167,
        "comment": "// Composite means it takes into account transforms as well as layout.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3189,
        "comment": "// https://github.com/popperjs/popper-core/issues/1078",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3217,
        "comment": "// On visiting object, check for its dependencies and visit them recursively",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3236,
        "comment": "// check for visited object",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3244,
        "comment": "// order based on dependencies",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3245,
        "comment": "// order based on phase",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3342,
        "comment": "// Strip out disabled modifiers",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3354,
        "comment": "// prefer the async Popper#update method",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3380,
        "comment": "// On each update cycle, the `modifiersData` property for each modifier",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3381,
        "comment": "// is filled with the initial data specified by the modifier. This means",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3382,
        "comment": "// it doesn't persist and is fresh on each update.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3383,
        "comment": "// To ensure persistent data, use `${name}#persistent`",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3434,
        "comment": "// Modifiers have the ability to execute arbitrary code before the first",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3472,
        "comment": "/*#__PURE__*/ // eslint-disable-next-line import/no-unused-modules",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3475,
        "comment": "/*#__PURE__*/",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3477,
        "comment": "// eslint-disable-next-line import/no-unused-modules",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3480,
        "comment": "/*#__PURE__*/",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3482,
        "comment": "// eslint-disable-next-line import/no-unused-modules",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3484,
        "comment": "/*#__PURE__*/ /*#__PURE__*/",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3526,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 3527,
        "comment": "   * --------------------------------------------------------------------------",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 3528,
        "comment": "   * Bootstrap dropdown.js",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 3529,
        "comment": "   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 3530,
        "comment": "   * --------------------------------------------------------------------------",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3531,
        "comment": "   */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3534,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3535,
        "comment": "   * Constants",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3536,
        "comment": "   */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3546,
        "comment": "// MouseEvent.button value for the secondary button, usually the right button",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3592,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 3593,
        "comment": "   * Class definition",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 3594,
        "comment": "   */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 3600,
        "comment": "// dropdown wrapper",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3601,
        "comment": "// TODO: v6 revert #37011 & change markup https://getbootstrap.com/docs/5.3/forms/input-group/",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3606,
        "comment": "// Getters",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3617,
        "comment": "// Public",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3634,
        "comment": "// If this is a touch-enabled device we add extra",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3635,
        "comment": "// empty mouseover listeners to the body's immediate children;",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3636,
        "comment": "// only needed because of broken event delegation on iOS",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3637,
        "comment": "// https://www.quirksmode.org/blog/archives/2014/02/mouse_event_bub.html",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3678,
        "comment": "// If this is a touch-enabled device we remove the extra",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3679,
        "comment": "// empty mouseover listeners we added for iOS support",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3697,
        "comment": "// Popper virtual elements require a getBoundingClientRect method",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3735,
        "comment": "// We need to trim the value because custom properties can also include spaces",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 3773,
        "comment": "// Disable Popper if we have a static display or Dropdown is in Navbar",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3795,
        "comment": "// if target isn't included in items (e.g. when expanding the dropdown)",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3796,
        "comment": "// allow cycling to get the last item in case key equals ARROW_UP_KEY",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3800,
        "comment": "// Static",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3829,
        "comment": "// Tab navigation through the dropdown menu or events from contained inputs shouldn't close the menu",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3843,
        "comment": "// If not an UP | DOWN | ESCAPE key => not a dropdown command",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3844,
        "comment": "// If input/textarea && if key is other than ESCAPE => not a dropdown command",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3867,
        "comment": "// else is escape and we check if it is shown",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3875,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3876,
        "comment": "   * Data API implementation",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3877,
        "comment": "   */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3888,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3889,
        "comment": "   * jQuery",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3890,
        "comment": "   */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3894,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3895,
        "comment": "   * --------------------------------------------------------------------------",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3896,
        "comment": "   * Bootstrap util/backdrop.js",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3897,
        "comment": "   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3898,
        "comment": "   * --------------------------------------------------------------------------",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3899,
        "comment": "   */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3902,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3915,
        "comment": "// if false, we use the backdrop helper without adding any element to the dom",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3985,
        "comment": "// Private",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4019,
        "comment": "   * --------------------------------------------------------------------------",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4048,
        "comment": "   * Class definition",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4049,
        "comment": "   */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4116,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4117,
        "comment": "   * --------------------------------------------------------------------------",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4118,
        "comment": "   * Bootstrap util/scrollBar.js",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4119,
        "comment": "   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4120,
        "comment": "   * --------------------------------------------------------------------------",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4121,
        "comment": "   */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4124,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4125,
        "comment": "   * Constants",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4126,
        "comment": "   */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4133,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4134,
        "comment": "   * Class definition",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4135,
        "comment": "   */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4142,
        "comment": "// Public",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4214,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4215,
        "comment": "   * --------------------------------------------------------------------------",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4216,
        "comment": "   * Bootstrap modal.js",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4217,
        "comment": "   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4218,
        "comment": "   * --------------------------------------------------------------------------",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4224,
        "comment": "   */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4260,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4261,
        "comment": "   * Class definition",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4262,
        "comment": "   */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4276,
        "comment": "// Getters",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4287,
        "comment": "// Public",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4390,
        "comment": "// a bad trick to segregate clicks that may start inside dialog but end outside, and avoid listen to scrollbar clicks",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4428,
        "comment": "// return if the following background transition hasn't yet completed",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4445,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4467,
        "comment": "// Static",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4484,
        "comment": "   */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4493,
        "comment": "// only register focus restorer if modal will actually get shown",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 4514,
        "comment": "   * jQuery",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4519,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4520,
        "comment": "   * --------------------------------------------------------------------------",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4521,
        "comment": "   * Bootstrap offcanvas.js",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4522,
        "comment": "   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4523,
        "comment": "   * --------------------------------------------------------------------------",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4524,
        "comment": "   */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4750,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4846,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 4847,
        "comment": "   * --------------------------------------------------------------------------",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 4848,
        "comment": "   * Bootstrap util/template-factory.js",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 4849,
        "comment": "   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 4850,
        "comment": "   * --------------------------------------------------------------------------",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 4851,
        "comment": "   */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5062,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5063,
        "comment": "   * Class definition",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5064,
        "comment": "   */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5073,
        "comment": "// Private",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5090,
        "comment": "// Getters",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 5145,
        "comment": "// TODO: v6 remove this or make it optional",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5188,
        "comment": "// If this is a touch-enabled device we remove the extra",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5189,
        "comment": "// empty mouseover listeners we added for iOS support",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5198,
        "comment": "// it is a trick to support manual triggering",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5218,
        "comment": "// Protected",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5231,
        "comment": "// TODO: remove this check in v6",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5236,
        "comment": "// TODO: v6 the following can be achieved with CSS only",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5259,
        "comment": "// to override config.content in case of popover",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5275,
        "comment": "// Private",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5382,
        "comment": "// DO NOT USE IT. Is only for backwards compatibility",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5457,
        "comment": "// In the future can be replaced with:",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5458,
        "comment": "// const keysWithDifferentValues = Object.entries(this._config).filter(entry => this.constructor.Default[entry[0]] !== this._config[entry[0]])",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5459,
        "comment": "// `Object.fromEntries(keysWithDifferentValues)`",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5473,
        "comment": "// Static",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5495,
        "comment": "   * --------------------------------------------------------------------------",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5497,
        "comment": "   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 5498,
        "comment": "   * --------------------------------------------------------------------------",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 5502,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 5503,
        "comment": "   * Constants",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 5504,
        "comment": "   */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 5522,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 5523,
        "comment": "   * Class definition",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 5524,
        "comment": "   */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 5527,
        "comment": "// Getters",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 5538,
        "comment": "// Overrides",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 5543,
        "comment": "// Private",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 5554,
        "comment": "// Static",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 5577,
        "comment": "   * Bootstrap scrollspy.js",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5578,
        "comment": "   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5579,
        "comment": "   * --------------------------------------------------------------------------",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5580,
        "comment": "   */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5583,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5584,
        "comment": "   * Constants",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5585,
        "comment": "   */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5622,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5623,
        "comment": "   * Class definition",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5624,
        "comment": "   */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5654,
        "comment": "// Public",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5672,
        "comment": "// Private",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5674,
        "comment": "// TODO: on v6 target should be given explicitly & remove the {target: 'ss-target'} case",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5677,
        "comment": "// TODO: v6 Only for backwards compatibility reasons. Use rootMargin only",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5820,
        "comment": "   * Data API implementation",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5821,
        "comment": "   */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5829,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5830,
        "comment": "   * jQuery",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5831,
        "comment": "   */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5835,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 5836,
        "comment": "   * --------------------------------------------------------------------------",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5844,
        "comment": "   * Constants",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 5845,
        "comment": "   */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5873,
        "comment": "// TODO: could only be `tab` in v6",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 5877,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 6182,
        "comment": "// @deprecated",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 6196,
        "comment": "// @deprecated",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 14,
        "comment": "   * Bootstrap dom/data.js",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 26,
        "comment": " *   MIT license - https://datatables.net/license",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 32,
        "comment": "// can be removed later when multiple key/instances are fine to be used",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 102,
        "comment": "// Method to get DT API instance from jQuery object",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 109,
        "comment": "// For each initialisation we want to give it a clean initialisation",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 110,
        "comment": "// object that can be bashed around",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 112,
        "comment": "// optimisation for single table case",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 124,
        "comment": "/* Sanity check */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 133,
        "comment": "/* Backwards compatibility for the defaults */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 137,
        "comment": "/* Convert the camel-case defaults to Hungarian */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 141,
        "comment": "// get current URL path and assign \"active\" class to the correct nav-item",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 146,
        "comment": "/* Check to see if we are re-initialising a table */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 152,
        "comment": "// Handle `details` element as its content may falsie appear visible when it is closed",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 177,
        "comment": "/* If the element we are initialising has the same ID as a table which was previously",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 178,
        "comment": "// When closing the alert, store the current date/time in the browser",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 179,
        "comment": "\t\t\t\t * instance by simply deleting it. This is under the assumption that the table has been",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 180,
        "comment": "\t\t\t\t * destroyed by other methods. Anyone using non-id selectors will need to do this manually",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 181,
        "comment": "\t\t\t\t */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 189,
        "comment": "/* Ensure the table has an ID - required for accessibility */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 196,
        "comment": "/* Create the settings object for this table and set some of the default parameters */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 211,
        "comment": "// eslint-disable-line no-unused-expressions",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 214,
        "comment": "// Need to add the instance after the instance after the settings object has been added",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 215,
        "comment": "// to the settings array, so we can self reference the table instance if more than one",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 218,
        "comment": "// Domain check",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 221,
        "comment": "// If the length menu is given, but the init display length is not, use the length menu",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 231,
        "comment": "// Apply the defaults and init options to make a single init object will all",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 232,
        "comment": "// options defined from defaults and instance options.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 236,
        "comment": "// Map the initialisation options onto the settings object",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 269,
        "comment": "// backwards compat",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 282,
        "comment": "   * Return the previous/next element of a list.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 296,
        "comment": "/* Browser support detection */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 336,
        "comment": "// Error occurred loading language file",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 339,
        "comment": "// continue on as best we can",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 357,
        "comment": "// If we don't have a columns array, then generate one with nulls",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 367,
        "comment": "// Add the columns",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 372,
        "comment": "// Apply the column definitions",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 415,
        "comment": "/*",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 416,
        "comment": "\t\t\t\t * Sorting",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 417,
        "comment": "\t\t\t\t * @todo For modularisation (1.11) this needs to do into a sort start up handler",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 418,
        "comment": "\t\t\t\t */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 420,
        "comment": "// If aaSorting is not defined, then we use the first indicator in asSorting",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 421,
        "comment": "// in case that has been altered, so the default sort reflects that option",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 429,
        "comment": "/* Do a first pass on the sorting classes (allows any size changes to be taken into",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 430,
        "comment": "\t\t\t\t * account, and also will apply sorting disabled classes if disabled",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 431,
        "comment": "\t\t\t\t */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 441,
        "comment": "/*",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 442,
        "comment": "\t\t\t\t * Final init",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 443,
        "comment": "\t\t\t\t * Cache the header, body and footer as required, creating them if needed",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 444,
        "comment": "\t\t\t\t */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 455,
        "comment": "// Store the caption side, so we can remove the element from the document",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 456,
        "comment": "// when creating the element",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 476,
        "comment": "// If we are a scrolling table, and no footer has been given, then we need to create",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 477,
        "comment": "// a tfoot element for the caption element to be appended to",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 483,
        "comment": "// Check if there is data passing into the constructor",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 490,
        "comment": "// Grab the data from the page",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 494,
        "comment": "/* Copy the data index array */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 497,
        "comment": "/* Initialisation complete - table can be drawn */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 500,
        "comment": "/* Check if we need to initialise the table (it might not have been handed off to the",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 501,
        "comment": "\t\t\t\t * language processor)",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 502,
        "comment": "\t\t\t\t */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 508,
        "comment": "/* Must be done after everything which can be overridden by the state saving! */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 527,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 528,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 529,
        "comment": "   * --------------------------------------------------------------------------",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 530,
        "comment": "   * Bootstrap dom/manipulator.js",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 531,
        "comment": "   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 532,
        "comment": "   * --------------------------------------------------------------------------",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 533,
        "comment": "   */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 534,
        "comment": "\t *",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 535,
        "comment": "\t * Note that this namespace is aliased to `jQuery.fn.dataTableExt` for legacy",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 536,
        "comment": "\t * reasons",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 537,
        "comment": "\t *",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 538,
        "comment": "\t *  @namespace",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 539,
        "comment": "\t */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 541,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 542,
        "comment": "\t\t * Buttons. For use with the Buttons extension for DataTables. This is",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 543,
        "comment": "\t\t * defined here so other extensions can define buttons regardless of load",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 544,
        "comment": "\t\t * order. It is _not_ used by DataTables core.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 545,
        "comment": "\t\t *",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 546,
        "comment": "\t\t *  @type object",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 547,
        "comment": "\t\t *  @default {}",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 548,
        "comment": "\t\t */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 552,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 553,
        "comment": "\t\t * Element class names",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 554,
        "comment": "\t\t *",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 555,
        "comment": "\t\t *  @type object",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 556,
        "comment": "\t\t *  @default {}",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 557,
        "comment": "\t\t */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 561,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 562,
        "comment": "\t\t * DataTables build type (expanded by the download builder)",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 563,
        "comment": "\t\t *",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 564,
        "comment": "\t\t *  @type string",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 565,
        "comment": "\t\t */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 569,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 570,
        "comment": "\t\t * Error reporting.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 571,
        "comment": "\t\t * ",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 572,
        "comment": "\t\t * How should DataTables report an error. Can take the value 'alert',",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 573,
        "comment": "\t\t * 'throw', 'none' or a function.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 574,
        "comment": "\t\t *",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 575,
        "comment": "\t\t *  @type string|function",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 576,
        "comment": "\t\t *  @default alert",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 577,
        "comment": "\t\t */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 581,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 582,
        "comment": "\t\t * Legacy so v1 plug-ins don't throw js errors on load",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 583,
        "comment": "\t\t */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 586,
        "comment": "   * --------------------------------------------------------------------------",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 587,
        "comment": "   * Bootstrap util/config.js",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 588,
        "comment": "   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 589,
        "comment": "   * --------------------------------------------------------------------------",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 590,
        "comment": "   */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 591,
        "comment": "\t\t */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 595,
        "comment": "   */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 596,
        "comment": "\t\t * Row searching.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 597,
        "comment": "\t\t * ",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 598,
        "comment": "// Getters",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 599,
        "comment": "\t\t * searching, and a lot more comprehensive as it allows you complete control",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 600,
        "comment": "\t\t * over the searching logic. Each element in this array is a function",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 601,
        "comment": "\t\t * (parameters described below) that is called for every row in the table,",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 602,
        "comment": "\t\t * and your logic decides if it should be included in the searching data set",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 603,
        "comment": "\t\t * or not.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 604,
        "comment": "\t\t *",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 605,
        "comment": "\t\t * Searching functions have the following input parameters:",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 606,
        "comment": "\t\t *",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 607,
        "comment": "\t\t * 1. `{object}` DataTables settings object: see",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 608,
        "comment": "\t\t *    {@link DataTable.models.oSettings}",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 609,
        "comment": "\t\t * 2. `{array|object}` Data for the row to be processed (same as the",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 610,
        "comment": "\t\t *    original format that was passed in as the data source, or an array",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 611,
        "comment": "\t\t *    from a DOM data source",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 612,
        "comment": "\t\t * 3. `{int}` Row index ({@link DataTable.models.oSettings.aoData}), which",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 613,
        "comment": "\t\t *    can be useful to retrieve the `TR` element if you need DOM interaction.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 614,
        "comment": "\t\t *",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 615,
        "comment": "\t\t * And the following return is expected:",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 616,
        "comment": "\t\t *",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 617,
        "comment": "\t\t * * {boolean} Include the row in the searched result set (true) or not",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 618,
        "comment": "// try to parse",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 619,
        "comment": "\t\t *",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 620,
        "comment": "\t\t * Note that as with the main search ability in DataTables, technically this",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 621,
        "comment": "\t\t * is \"filtering\", since it is subtractive. However, for consistency in",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 622,
        "comment": "\t\t * naming we call it searching here.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 623,
        "comment": "\t\t *",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 624,
        "comment": "\t\t *  @type array",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 625,
        "comment": "\t\t *  @default []",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 626,
        "comment": "\t\t *",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 627,
        "comment": "\t\t *  @example",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 628,
        "comment": "\t\t *    // The following example shows custom search being applied to the",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 629,
        "comment": "\t\t *    // fourth column (i.e. the data[3] index) based on two input values",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 630,
        "comment": "\t\t *    // from the end-user, matching the data in a certain range.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 631,
        "comment": "\t\t *    $.fn.dataTable.ext.search.push(",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 632,
        "comment": "\t\t *      function( settings, data, dataIndex ) {",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 633,
        "comment": "\t\t *        var min = document.getElementById('min').value * 1;",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 634,
        "comment": "\t\t *        var max = document.getElementById('max').value * 1;",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 635,
        "comment": "\t\t *        var version = data[3] == \"-\" ? 0 : data[3]*1;",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 636,
        "comment": "\t\t *",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 637,
        "comment": "\t\t *        if ( min == \"\" && max == \"\" ) {",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 638,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 639,
        "comment": "   * --------------------------------------------------------------------------",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 640,
        "comment": "   * Bootstrap base-component.js",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 641,
        "comment": "   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 642,
        "comment": "   * --------------------------------------------------------------------------",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 643,
        "comment": "   */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 644,
        "comment": "\t\t *          return true;",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 645,
        "comment": "\t\t *        }",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 646,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 647,
        "comment": "   * Constants",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 648,
        "comment": "   */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 649,
        "comment": "\t\t *        return false;",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 650,
        "comment": "\t\t *      }",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 651,
        "comment": "\t\t *    );",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 652,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 656,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 657,
        "comment": "\t\t * Selector extensions",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 658,
        "comment": "\t\t *",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 659,
        "comment": "\t\t * The `selector` option can be used to extend the options available for the",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 660,
        "comment": "\t\t * selector modifier options (`selector-modifier` object data type) that",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 661,
        "comment": "\t\t * each of the three built in selector types offer (row, column and cell +",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 662,
        "comment": "\t\t * their plural counterparts). For example the Select extension uses this",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 663,
        "comment": "\t\t * mechanism to provide an option to select only rows, columns and cells",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 664,
        "comment": "\t\t * that have been marked as selected by the end user (`{selected: true}`),",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 665,
        "comment": "\t\t * which can be used in conjunction with the existing built in selector",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 666,
        "comment": "\t\t * options.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 667,
        "comment": "\t\t *",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 668,
        "comment": "// Public",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 669,
        "comment": "\t\t * take three attributes:",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 670,
        "comment": "\t\t *",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 671,
        "comment": "\t\t * * Settings object for the host table",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 672,
        "comment": "\t\t * * Options object (`selector-modifier` object type)",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 673,
        "comment": "\t\t * * Array of selected item indexes",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 674,
        "comment": "\t\t *",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 675,
        "comment": "\t\t * The return is an array of the resulting item indexes after the custom",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 676,
        "comment": "\t\t * selector has been applied.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 677,
        "comment": "\t\t *",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 678,
        "comment": "\t\t *  @type object",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 679,
        "comment": "\t\t */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 687,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 688,
        "comment": "\t\t * Legacy configuration options. Enable and disable legacy options that",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 689,
        "comment": "\t\t * are available in DataTables.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 690,
        "comment": "\t\t *",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 691,
        "comment": "\t\t *  @type object",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 692,
        "comment": "\t\t */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 694,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 695,
        "comment": "\t\t\t * Enable / disable DataTables 1.9 compatible server-side processing",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 696,
        "comment": "\t\t\t * requests",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 697,
        "comment": "\t\t\t *",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 698,
        "comment": "\t\t\t *  @type boolean",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 699,
        "comment": "\t\t\t *  @default null",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 700,
        "comment": "\t\t\t */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 705,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 706,
        "comment": "\t\t * Pagination plug-in methods.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 707,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 708,
        "comment": "   * --------------------------------------------------------------------------",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 709,
        "comment": "   * Bootstrap dom/selector-engine.js",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 710,
        "comment": "   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 711,
        "comment": "   * --------------------------------------------------------------------------",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 712,
        "comment": "   */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 713,
        "comment": "\t\t * descriptions (what each button will do).",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 714,
        "comment": "\t\t *",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 715,
        "comment": "\t\t * Pagination types (the four built in options and any additional plug-in",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 716,
        "comment": "\t\t * options defined here) can be used through the `paginationType`",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 717,
        "comment": "\t\t * initialisation parameter.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 718,
        "comment": "\t\t *",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 719,
        "comment": "// The only valid content that could double as a selector are IDs or classes,",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 720,
        "comment": "// so everything starting with `#` or `.`. If a \"real\" URL is used as the selector,",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 721,
        "comment": "// `document.querySelector` will rightfully complain it is invalid.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 722,
        "comment": "// See https://github.com/twbs/bootstrap/issues/32273",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 723,
        "comment": "\t\t *",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 724,
        "comment": "\t\t * Each function is expected to return an array where each element of the",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 725,
        "comment": "\t\t * array can be one of:",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 726,
        "comment": "\t\t *",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 727,
        "comment": "// Just in case some CMS puts out a full URL with the anchor appended",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 728,
        "comment": "\t\t * * `last` - Jump to last page when activated",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 729,
        "comment": "\t\t * * `previous` - Show previous page when activated",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 730,
        "comment": "\t\t * * `next` - Show next page when activated",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 731,
        "comment": "\t\t * * `{int}` - Show page of the index given",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 732,
        "comment": "\t\t * * `{array}` - A nested array containing the above elements to add a",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 733,
        "comment": "\t\t *   containing 'DIV' element (might be useful for styling).",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 734,
        "comment": "\t\t *",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 735,
        "comment": "\t\t * Note that DataTables v1.9- used this object slightly differently whereby",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 736,
        "comment": "\t\t * an object with two functions would be defined for each plug-in. That",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 737,
        "comment": "\t\t * ability is still supported by DataTables 1.10+ to provide backwards",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 738,
        "comment": "\t\t * compatibility, but this option of use is now decremented and no longer",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 739,
        "comment": "\t\t * documented in DataTables 1.10+.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 740,
        "comment": "\t\t *",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 741,
        "comment": "\t\t *  @type object",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 742,
        "comment": "\t\t *  @default {}",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 743,
        "comment": "\t\t *",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 744,
        "comment": "\t\t *  @example",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 745,
        "comment": "\t\t *    // Show previous, next and current page buttons only",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 746,
        "comment": "\t\t *    $.fn.dataTableExt.oPagination.current = function ( page, pages ) {",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 747,
        "comment": "\t\t *      return [ 'previous', page, 'next' ];",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 748,
        "comment": "\t\t *    };",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 749,
        "comment": "\t\t */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 759,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 760,
        "comment": "\t\t * Ordering plug-ins - custom data source",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 761,
        "comment": "\t\t * ",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 762,
        "comment": "\t\t * The extension options for ordering of data available here is complimentary",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 763,
        "comment": "\t\t * to the default type based ordering that DataTables typically uses. It",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 764,
        "comment": "// TODO: this is now unused; remove later along with prev()",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 765,
        "comment": "\t\t * order a column, but is necessarily therefore more complex.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 766,
        "comment": "\t\t * ",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 767,
        "comment": "\t\t * This type of ordering is useful if you want to do ordering based on data",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 768,
        "comment": "\t\t * live from the DOM (for example the contents of an 'input' element) rather",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 769,
        "comment": "\t\t * than just the static string that DataTables knows of.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 770,
        "comment": "\t\t * ",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 771,
        "comment": "\t\t * The way these plug-ins work is that you create an array of the values you",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 772,
        "comment": "\t\t * wish to be ordering for the column in question and then return that",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 773,
        "comment": "\t\t * array. The data in the array much be in the index order of the rows in",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 774,
        "comment": "\t\t * the table (not the currently ordering order!). Which order data gathering",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 775,
        "comment": "\t\t * function is run here depends on the `dt-init columns.orderDataType`",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 776,
        "comment": "\t\t * parameter that is used for the column (if any).",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 777,
        "comment": "\t\t *",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 778,
        "comment": "\t\t * The functions defined take two parameters:",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 779,
        "comment": "\t\t *",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 780,
        "comment": "\t\t * 1. `{object}` DataTables settings object: see",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 781,
        "comment": "\t\t *    {@link DataTable.models.oSettings}",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 782,
        "comment": "\t\t * 2. `{int}` Target column index",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 783,
        "comment": "\t\t *",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 784,
        "comment": "\t\t * Each function is expected to return an array:",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 785,
        "comment": "\t\t *",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 786,
        "comment": "\t\t * * `{array}` Data for the column to be ordering upon",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 787,
        "comment": "\t\t *",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 788,
        "comment": "\t\t *  @type array",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 789,
        "comment": "\t\t *",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 790,
        "comment": "\t\t *  @example",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 791,
        "comment": "\t\t *    // Ordering using `input` node values",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 792,
        "comment": "\t\t *    $.fn.dataTable.ext.order['dom-text'] = function  ( settings, col )",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 793,
        "comment": "\t\t *    {",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 794,
        "comment": "\t\t *      return this.api().column( col, {order:'index'} ).nodes().map( function ( td, i ) {",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 795,
        "comment": "\t\t *        return $('input', td).val();",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 796,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 797,
        "comment": "   * --------------------------------------------------------------------------",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 798,
        "comment": "   * Bootstrap util/component-functions.js",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 802,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 803,
        "comment": "\t\t * Type based plug-ins.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 804,
        "comment": "\t\t *",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 805,
        "comment": "\t\t * Each column in DataTables has a type assigned to it, either by automatic",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 806,
        "comment": "\t\t * detection or by direct assignment using the `type` option for the column.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 807,
        "comment": "\t\t * The type of a column will effect how it is ordering and search (plug-ins",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 808,
        "comment": "\t\t * can also make use of the column type if required).",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 809,
        "comment": "\t\t *",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 810,
        "comment": "\t\t * @namespace",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 811,
        "comment": "\t\t */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 813,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 814,
        "comment": "\t\t\t * Automatic column class assignment",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 815,
        "comment": "\t\t\t */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 818,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 819,
        "comment": "\t\t\t * Type detection functions.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 820,
        "comment": "\t\t\t *",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 821,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 822,
        "comment": "   * --------------------------------------------------------------------------",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 823,
        "comment": "   * Bootstrap alert.js",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 824,
        "comment": "   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 825,
        "comment": "   * --------------------------------------------------------------------------",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 826,
        "comment": "   */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 827,
        "comment": "\t\t     *  1. `{*}` Data from the column cell to be analysed",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 828,
        "comment": "\t\t     *  2. `{settings}` DataTables settings object. This can be used to",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 829,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 830,
        "comment": "   * Constants",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 831,
        "comment": "   */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 832,
        "comment": "\t\t     *     be required",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 833,
        "comment": "\t\t\t *",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 834,
        "comment": "\t\t\t * Each function is expected to return:",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 835,
        "comment": "\t\t\t *",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 836,
        "comment": "\t\t\t * * `{string|null}` Data type detected, or null if unknown (and thus",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 837,
        "comment": "\t\t\t *   pass it on to the other type detection functions.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 838,
        "comment": "\t\t\t *",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 839,
        "comment": "\t\t\t *  @type array",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 840,
        "comment": "\t\t\t *",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 841,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 842,
        "comment": "   * Class definition",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 843,
        "comment": "   */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 844,
        "comment": "\t\t\t *      function ( data, settings ) {",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 845,
        "comment": "\t\t\t *        // Check the numeric part",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 846,
        "comment": "// Getters",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 847,
        "comment": "\t\t\t *          return null;",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 848,
        "comment": "\t\t\t *        }",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 849,
        "comment": "\t\t\t *",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 850,
        "comment": "\t\t\t *        // Check prefixed by currency",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 851,
        "comment": "// Public",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 852,
        "comment": "\t\t\t *          return 'currency';",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 853,
        "comment": "\t\t\t *        }",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 854,
        "comment": "\t\t\t *        return null;",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 855,
        "comment": "\t\t\t *      }",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 856,
        "comment": "\t\t\t *    );",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 857,
        "comment": "\t\t\t */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 860,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 861,
        "comment": "\t\t\t * Automatic renderer assignment",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 862,
        "comment": "// Private",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 866,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 867,
        "comment": "\t\t\t * Type based search formatting.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 868,
        "comment": "\t\t\t *",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 869,
        "comment": "// Static",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 870,
        "comment": "\t\t\t * data to be search on. For example, it can be used to strip HTML",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 871,
        "comment": "\t\t\t * tags or to de-format telephone numbers for numeric only searching.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 872,
        "comment": "\t\t\t *",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 873,
        "comment": "\t\t\t * Note that is a search is not defined for a column of a given type,",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 874,
        "comment": "\t\t\t * no search formatting will be performed.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 875,
        "comment": "\t\t\t * ",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 876,
        "comment": "\t\t\t * Pre-processing of searching data plug-ins - When you assign the sType",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 877,
        "comment": "\t\t\t * for a column (or have it automatically detected for you by DataTables",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 878,
        "comment": "\t\t\t * or a type detection plug-in), you will typically be using this for",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 879,
        "comment": "\t\t\t * custom sorting, but it can also be used to provide custom searching",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 880,
        "comment": "\t\t\t * by allowing you to pre-processing the data and returning the data in",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 881,
        "comment": "\t\t\t * the format that should be searched upon. This is done by adding",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 882,
        "comment": "\t\t\t * functions this object with a parameter name which matches the sType",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 883,
        "comment": "\t\t\t * for that target column. This is the corollary of <i>afnSortData</i>",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 884,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 885,
        "comment": "   * Data API implementation",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 886,
        "comment": "   */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 887,
        "comment": "\t\t\t *",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 888,
        "comment": "\t\t     *  1. `{*}` Data from the column cell to be prepared for searching",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 889,
        "comment": "\t\t\t *",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 890,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 891,
        "comment": "   * jQuery",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 892,
        "comment": "   */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 893,
        "comment": "\t\t\t *",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 894,
        "comment": "\t\t\t *  @type object",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 895,
        "comment": "\t\t\t *  @default {}",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 896,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 897,
        "comment": "   * --------------------------------------------------------------------------",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 898,
        "comment": "   * Bootstrap button.js",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 899,
        "comment": "   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 900,
        "comment": "   * --------------------------------------------------------------------------",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 901,
        "comment": "   */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 905,
        "comment": "   * Constants",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 906,
        "comment": "   */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 907,
        "comment": "\t\t\t *",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 908,
        "comment": "\t\t\t * The column type tells DataTables what ordering to apply to the table",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 909,
        "comment": "\t\t\t * when a column is sorted upon. The order for each type that is defined,",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 910,
        "comment": "\t\t\t * is defined by the functions available in this object.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 911,
        "comment": "\t\t\t *",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 912,
        "comment": "\t\t\t * Each ordering option can be described by three properties added to",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 913,
        "comment": "\t\t\t * this object:",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 914,
        "comment": "\t\t\t *",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 915,
        "comment": "\t\t\t * * `{type}-pre` - Pre-formatting function",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 916,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 917,
        "comment": "   * Class definition",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 918,
        "comment": "   */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 919,
        "comment": "\t\t\t * All three can be used together, only `{type}-pre` or only",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 920,
        "comment": "\t\t\t * `{type}-asc` and `{type}-desc` together. It is generally recommended",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 921,
        "comment": "// Getters",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 922,
        "comment": "\t\t\t * implementation in terms of speed, although the others are provided",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 923,
        "comment": "\t\t\t * for compatibility with existing Javascript sort functions.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 924,
        "comment": "\t\t\t *",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 925,
        "comment": "\t\t\t * `{type}-pre`: Functions defined take a single parameter:",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 926,
        "comment": "// Public",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 927,
        "comment": "\t\t     *  1. `{*}` Data from the column cell to be prepared for ordering",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 928,
        "comment": "// Toggle class and sync the `aria-pressed` attribute with the return value of the `.toggle()` method",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 929,
        "comment": "\t\t\t * And return:",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 930,
        "comment": "\t\t\t *",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 931,
        "comment": "\t\t\t * * `{*}` Data to be sorted upon",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 932,
        "comment": "// Static",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 933,
        "comment": "\t\t\t * `{type}-asc` and `{type}-desc`: Functions are typical Javascript sort",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 934,
        "comment": "\t\t\t * functions, taking two parameters:",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 935,
        "comment": "\t\t\t *",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 936,
        "comment": "\t\t     *  1. `{*}` Data to compare to the second parameter",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 937,
        "comment": "\t\t     *  2. `{*}` Data to compare to the first parameter",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 938,
        "comment": "\t\t\t *",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 939,
        "comment": "\t\t\t * And returning:",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 940,
        "comment": "\t\t\t *",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 941,
        "comment": "\t\t\t * * `{*}` Ordering match: <0 if first parameter should be sorted lower",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 942,
        "comment": "\t\t\t *   than the second parameter, ===0 if the two parameters are equal and",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 943,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 944,
        "comment": "   * Data API implementation",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 945,
        "comment": "   */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 946,
        "comment": "\t\t\t *  @type object",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 947,
        "comment": "\t\t\t *  @default {}",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 948,
        "comment": "\t\t\t *",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 949,
        "comment": "\t\t\t *  @example",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 950,
        "comment": "\t\t\t *    // Numeric ordering of formatted numbers with a pre-formatter",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 951,
        "comment": "\t\t\t *    $.extend( $.fn.dataTable.ext.type.order, {",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 952,
        "comment": "\t\t\t *      \"string-pre\": function(x) {",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 953,
        "comment": "\t\t\t *        a = (a === \"-\" || a === \"\") ? 0 : a.replace( /[^\\d\\-\\.]/g, \"\" );",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 954,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 955,
        "comment": "   * jQuery",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 956,
        "comment": "   */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 957,
        "comment": "\t\t\t *",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 958,
        "comment": "\t\t\t *  @example",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 959,
        "comment": "\t\t\t *    // Case-sensitive string ordering, with no pre-formatting method",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 960,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 961,
        "comment": "   * --------------------------------------------------------------------------",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 962,
        "comment": "   * Bootstrap util/swipe.js",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 963,
        "comment": "   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 964,
        "comment": "   * --------------------------------------------------------------------------",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 965,
        "comment": "   */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 966,
        "comment": "\t\t\t *      }",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 967,
        "comment": "\t\t\t *    } );",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 968,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 972,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 973,
        "comment": "\t\t * Unique DataTables instance counter",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 974,
        "comment": "\t\t *",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 975,
        "comment": "\t\t * @type int",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 976,
        "comment": "\t\t * @private",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 977,
        "comment": "\t\t */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 981,
        "comment": "//",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 982,
        "comment": "// Depreciated",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 983,
        "comment": "// The following properties are retained for backwards compatibility only.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 984,
        "comment": "// The should not be used in new projects and will be removed in a future",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 985,
        "comment": "// version",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 986,
        "comment": "//",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 988,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 989,
        "comment": "\t\t * Version check function.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 990,
        "comment": "\t\t *  @type function",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 991,
        "comment": "\t\t *  @depreciated Since 1.10",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 992,
        "comment": "\t\t */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 996,
        "comment": "   */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 997,
        "comment": "\t\t * Index for what 'this' index API functions should use",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 998,
        "comment": "\t\t *  @type int",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 999,
        "comment": "\t\t *  @deprecated Since v1.10",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1000,
        "comment": "\t\t */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1004,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1005,
        "comment": "\t\t * Software version",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1006,
        "comment": "\t\t *  @type string",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1007,
        "comment": "\t\t *  @deprecated Since v1.10",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1008,
        "comment": "\t\t */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1013,
        "comment": "//",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1014,
        "comment": "// Backwards compatibility. Alias to pre 1.10 Hungarian notation counter parts",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1015,
        "comment": "//",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1115,
        "comment": "// implementations differ between browsers.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1197,
        "comment": "// input and select strings mean that this isn't just a number",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1301,
        "comment": "// Irrelevant check to workaround CodeQL's false positive on the regex",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 1308,
        "comment": "// Complete tags",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 1310,
        "comment": "// Safety for incomplete script tag - use do / while to ensure that",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 1311,
        "comment": "// we get all instances",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 1320,
        "comment": "// Replaceable function in api.util",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1335,
        "comment": "// Remove diacritics from a string by decomposing it and then removing",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1385,
        "comment": "\t * @return {array} Array of unique items",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1424,
        "comment": "// Surprisingly this is faster than [].concat.apply",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1425,
        "comment": "// https://jsperf.com/flatten-an-array-loop-vs-reduce/2",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1451,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1452,
        "comment": "\t * DataTables utility methods",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1453,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1454,
        "comment": "   * --------------------------------------------------------------------------",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1455,
        "comment": "   * Bootstrap collapse.js",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1456,
        "comment": "   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1457,
        "comment": "   * --------------------------------------------------------------------------",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1458,
        "comment": "   */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1459,
        "comment": "\t *  @namespace",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1460,
        "comment": "\t */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1462,
        "comment": "   * Constants",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1463,
        "comment": "   */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1464,
        "comment": "\t\t * @param {*} mixed Function or string to normalize",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1465,
        "comment": "\t\t * @param {*} both Return original string and the normalized string",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1466,
        "comment": "\t\t * @returns String or undefined",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1467,
        "comment": "\t\t */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1477,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1478,
        "comment": "\t\t * Debounce a function",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1479,
        "comment": "\t\t *",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1480,
        "comment": "\t\t * @param {function} fn Function to be called",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1481,
        "comment": "\t\t * @param {integer} freq Call frequency in mS",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1482,
        "comment": "\t\t * @return {function} Wrapped function",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1483,
        "comment": "\t\t */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1552,
        "comment": "\t\t\t\t * setting data since we don't know the type here. This is why an object",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1553,
        "comment": "\t\t\t\t * option is not documented for `mData` (which is read/write), but it is",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1554,
        "comment": "\t\t\t\t * for `mRender` which is read only.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1555,
        "comment": "\t\t\t\t */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1758,
        "comment": "// row and meta also passed, but not used",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1763,
        "comment": "// arrow is optional + virtual elements",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1764,
        "comment": "// row and meta also passed, but not used",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1801,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1839,
        "comment": "\t *    mapped.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1917,
        "comment": "// Column search objects are in an array, so it needs to be converted",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1961,
        "comment": "\t */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2007,
        "comment": "// scrollbar on the left, rather than the right.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2017,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2093,
        "comment": "/* iDataSort to be applied (backwards compatibility), but aDataSort will take",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2094,
        "comment": "\t\t\t * priority if defined",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2095,
        "comment": "\t\t\t */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2155,
        "comment": "\t *  @memberof DataTable#oApi",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2156,
        "comment": "\t */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2170,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2222,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2223,
        "comment": "\t * Get the number of visible columns",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2225,
        "comment": "\t *  @returns {int} i the number of visible columns",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2281,
        "comment": "// For each column, spin over the ",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2322,
        "comment": "// Type is valid for all data points in the column - use this",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2323,
        "comment": "// type",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2330,
        "comment": "// Fall back - if no type was detected, always use string",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2336,
        "comment": "// Set class names for header / footer for auto type classes",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2346,
        "comment": "// This can only happen once! There is no way to remover",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2347,
        "comment": "// a renderer. After the first time the renderer has",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2348,
        "comment": "// already been set so createTr will run the renderer itself.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2357,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2358,
        "comment": "\t * Apply an auto detected renderer to data which doesn't yet have",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2359,
        "comment": "\t * a renderer",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2360,
        "comment": "\t */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2366,
        "comment": "// We have to update the display here since there is no",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2367,
        "comment": "// invalidation check for the data",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2373,
        "comment": "// No need to update sort / filter data since it has",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2374,
        "comment": "// been invalidated and will be re-read with the",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2393,
        "comment": "\t * they relate to column indexes. The callback function will then apply the",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2394,
        "comment": "\t * definition found for a column to a suitable configuration object.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2395,
        "comment": "\t *  @param {object} oSettings dataTables settings object",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2396,
        "comment": "\t *  @param {array} aoColDefs The aoColumnDefs array that is to be applied",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2397,
        "comment": "\t *  @param {array} aoCols The aoColumns array that defines columns individually",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2398,
        "comment": "\t *  @param {array} headerLayout Layout for header as it was loaded",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2399,
        "comment": "\t *  @param {function} fn Callback function - takes two parameters, the calculated",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2400,
        "comment": "\t *    column index and the definition for that column.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2424,
        "comment": "/* Each definition can target multiple columns, as it is an array */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2448,
        "comment": "/* Integer, basic index */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2453,
        "comment": "/* Negative integer, right to left column counting */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2460,
        "comment": "// Apply to all columns",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 2464,
        "comment": "// Column selector",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 2470,
        "comment": "// Cell selector",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 2475,
        "comment": "// Legacy support. Note that it means that we don't support",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 2476,
        "comment": "// $FlowFixMe[incompatible-return]: assume body is always available",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 2477,
        "comment": "// class names for 1.x compat.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 2494,
        "comment": "// Statically defined columns array",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2503,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2504,
        "comment": "\t * Get the width for a given set of columns",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2505,
        "comment": "\t *",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2506,
        "comment": "// $FlowFixMe[incompatible-call]: isBody tells us target will be an HTMLElement here",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2507,
        "comment": "\t * @param {*} targets Columns - comma separated string or array of numbers",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2508,
        "comment": "\t * @param {*} original Use the original width (true) or calculated (false)",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2509,
        "comment": "\t * @param {*} incVisible Include visible columns (true) or not (false)",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2510,
        "comment": "\t * @returns Combined CSS value",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2511,
        "comment": "\t */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2532,
        "comment": "// can't determine a defined width - browser defined",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2565,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2567,
        "comment": "\t * _fnGatherData, but for adding rows from a Javascript source, rather than a",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2571,
        "comment": "\t *  @param {node} [tr] TR element to add to the table - optional. If not given,",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2576,
        "comment": "\t *  @memberof DataTable#oApi",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2580,
        "comment": "/* Create the object for storing information about this new row */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2647,
        "comment": "\t *  @param {string} type data get type ('display', 'type' 'filter|search' 'sort|order')",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2648,
        "comment": "\t *  @returns {*} Cell data",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2649,
        "comment": "\t *  @memberof DataTable#oApi",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2650,
        "comment": "\t */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2718,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2719,
        "comment": "// $FlowFixMe[incompatible-type]: Flow seems to have problems with two array unions...",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2720,
        "comment": "\t *  @param {object} settings dataTables settings object",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2721,
        "comment": "\t *  @param {int} rowIdx aoData row id",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2722,
        "comment": "\t *  @param {int} colIdx Column index",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2723,
        "comment": "\t *  @param {*} val Value to set",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2724,
        "comment": "\t *  @memberof DataTable#oApi",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2725,
        "comment": "\t */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2738,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2739,
        "comment": "\t * Write a value to a cell",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2740,
        "comment": "\t * @param {*} td Cell",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2829,
        "comment": "\t * @param {int}    [colIdx] Column index to invalidate. If undefined the whole",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2833,
        "comment": "\t * @todo For the modularisation of v1.11 this will need to become a callback, so",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2849,
        "comment": "// Read the data from the DOM",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2856,
        "comment": "// Reading from data object, update the DOM",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2986,
        "comment": "// Existing row object passed in",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2994,
        "comment": "// Read the ID from the DOM if present",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3063,
        "comment": "\t\t\t * to the aoData array for fast look up",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3064,
        "comment": "\t\t\t */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3067,
        "comment": "/* Special parameters can be given by the data source to be used on the row */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3070,
        "comment": "/* Process each column */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3091,
        "comment": "// Need to create the HTML if new, or if a rendering function is defined",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3148,
        "comment": "// Remove any classes added by DT_RowClass before",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3171,
        "comment": "\t * Create the HTML header for the table",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3173,
        "comment": "\t *  @memberof DataTable#oApi",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3185,
        "comment": "// Footer might be defined",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3190,
        "comment": "// If no cells yet and we have content for them, then create",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3194,
        "comment": "// Add a row if needed",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 3199,
        "comment": "// Add the number of cells needed to make up to the number of columns",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 3220,
        "comment": "// ARIA role for the rows",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3223,
        "comment": "// Every cell needs to be passed through the renderer",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3232,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3234,
        "comment": "\t *",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3235,
        "comment": "\t * @param {*} settings DataTables settings",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3236,
        "comment": "// check for visited object",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3237,
        "comment": "\t * @param {*} incColumns What columns should be included",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3239,
        "comment": "\t */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3253,
        "comment": "// Default is to work on only visible columns",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3261,
        "comment": "// Make a copy of the master layout array, but with only the columns we want",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3263,
        "comment": "// Remove any columns we haven't selected",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3268,
        "comment": "// Prep the structure array - it needs an element for each row",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3282,
        "comment": "// Expand for rowspan",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3296,
        "comment": "// Which also needs to go over rows",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3446,
        "comment": "/* Header and footer callbacks */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3453,
        "comment": "// replaceChildren is faster, but only became widespread in 2020,",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 3454,
        "comment": "// so a fall back in jQuery is provided for older browsers.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 3463,
        "comment": "// Empty table needs a specific class",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3466,
        "comment": "/* Call all required callback functions for the end of a draw */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3469,
        "comment": "/* Draw is complete, sorting and filtering must be as well */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3476,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3477,
        "comment": "// eslint-disable-next-line import/no-unused-modules",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3478,
        "comment": "\t *  @param {object} oSettings dataTables settings object",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3479,
        "comment": "\t *  @param {boolean} [holdPosition] Keep the current paging position. By default",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3480,
        "comment": "/*#__PURE__*/",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3481,
        "comment": "\t *  @memberof DataTable#oApi",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3482,
        "comment": "// eslint-disable-next-line import/no-unused-modules",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3499,
        "comment": "// No filtering, so we want to just use the display master",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3508,
        "comment": "// Let any modules know about the draw hold position state (used by",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3509,
        "comment": "// scrolling internally)",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3518,
        "comment": "/*",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3519,
        "comment": "\t * Table is empty - create a row with an empty message in it",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3520,
        "comment": "\t */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3545,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3546,
        "comment": "// MouseEvent.button value for the secondary button, usually the right button",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3547,
        "comment": "\t * for the renderer. This is done twice, once for above and once for below",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3548,
        "comment": "\t * the table. Ordering must also be considered.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3549,
        "comment": "\t *",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3550,
        "comment": "\t * @param {*} settings DataTables settings object",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3551,
        "comment": "\t * @param {*} layout Layout object to convert",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3552,
        "comment": "\t * @param {string} side `top` or `bottom`",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3553,
        "comment": "\t * @returns Converted array structure - one item for each row.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3554,
        "comment": "\t */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3559,
        "comment": "// Combine into like groups (e.g. `top`, `top2`, etc)",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3576,
        "comment": "// If it is an object, then there can be multiple features contained in it",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 3590,
        "comment": "// Transform to an object with a contents property",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 3595,
        "comment": "// Allow for an array or just a single object",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 3605,
        "comment": "// And make contents an array",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3613,
        "comment": "// Filter to only the side we need",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3627,
        "comment": "// Order by item identifier",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3639,
        "comment": "// Split into rows",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3659,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3660,
        "comment": "\t * Convert the contents of a row's layout object to nodes that can be inserted",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3661,
        "comment": "\t * into the document by a renderer. Execute functions, look up plug-ins, etc.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3662,
        "comment": "\t *",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3663,
        "comment": "\t * @param {*} settings DataTables settings object",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3664,
        "comment": "\t * @param {*} row Layout object for this row",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3665,
        "comment": "\t */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3686,
        "comment": "// If it's an object, it just has feature and opts properties from",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3709,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3710,
        "comment": "\t * Add the options to the page HTML for the table",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3712,
        "comment": "\t *  @memberof DataTable#oApi",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3719,
        "comment": "// Wrapper div around everything DataTables controls",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3730,
        "comment": "// Legacy",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3738,
        "comment": "// Everything above - the renderer will actually insert the contents into the document",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3743,
        "comment": "// The table - always the center of attention",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3751,
        "comment": "// Everything below",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3757,
        "comment": "// Processing floats on top, so it isn't an inserted feature",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3763,
        "comment": "\t * @param {*} settings DT settings object",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3764,
        "comment": "\t * @param {*} dom DOM string",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3765,
        "comment": "\t * @param {*} insert Insert point",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3777,
        "comment": "// New container div",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3789,
        "comment": "\t\t\t\t\t * breaks the string into parts and applies them as needed",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3790,
        "comment": "\t\t\t\t\t */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3815,
        "comment": "// End container div",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3819,
        "comment": "// Table",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3831,
        "comment": "// Add to the display",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3839,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3840,
        "comment": "\t * Use the DOM source to create up an array of header cells. The idea here is to",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3841,
        "comment": "\t * create a layout grid (array) of rows x columns, which contains a reference",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3842,
        "comment": "\t * to the cell that that point in the grid (regardless of col/rowspan), such that",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3843,
        "comment": "// If not an UP | DOWN | ESCAPE key => not a dropdown command",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3844,
        "comment": "// If input/textarea && if key is other than ESCAPE => not a dropdown command",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3845,
        "comment": "\t *  @returns {array} Calculated layout array",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3846,
        "comment": "\t *  @memberof DataTable#oApi",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3847,
        "comment": "\t */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3865,
        "comment": "// We know how many rows there are in the layout - so prep it",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3874,
        "comment": "// For every cell in the row..",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3883,
        "comment": "// Get the col and rowspan attributes from the DOM and sanitise them",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3889,
        "comment": "   * jQuery",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3890,
        "comment": "   */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3893,
        "comment": "// Cache calculation for unique columns",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3898,
        "comment": "   * --------------------------------------------------------------------------",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3901,
        "comment": "// Allow column options to be set from HTML attributes",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3917,
        "comment": "// This happens before the render, so the original is still in place",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4009,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4010,
        "comment": "\t * Create an Ajax call based on the table's settings, taking into account that",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4016,
        "comment": "\t * @param {function} fn Callback function to run when data is obtained",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4017,
        "comment": "\t */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4049,
        "comment": "   */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4050,
        "comment": "// an object object or array to merge",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4057,
        "comment": "// Remove the data property as we've resolved it already and don't want",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4058,
        "comment": "// jQuery to do it again (it is restored at the end of the function)",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4100,
        "comment": "// Is a function - let the caller define what needs to be done",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4104,
        "comment": "// No url, so don't load any data. Just apply an empty data array",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 4105,
        "comment": "// to the object for the callback.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 4112,
        "comment": "// Object to extend the base settings",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4115,
        "comment": "// Restore for next time around",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4123,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4124,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4125,
        "comment": "   * Constants",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4126,
        "comment": "   */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4127,
        "comment": "\t *  @memberof DataTable#oApi",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4128,
        "comment": "\t */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4209,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4210,
        "comment": "\t * Data the data from the server (nuking the old) and redraw the table",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4211,
        "comment": "\t *  @param {object} oSettings dataTables settings object",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4212,
        "comment": "\t *  @param {object} json json data return from the server.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4213,
        "comment": "\t *  @param {string} json.sEcho Tracking flag for DataTables to match requests",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4214,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4215,
        "comment": "   * --------------------------------------------------------------------------",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4216,
        "comment": "   * Bootstrap modal.js",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4217,
        "comment": "   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4218,
        "comment": "   * --------------------------------------------------------------------------",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4228,
        "comment": "// Protect against out of sequence returns",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4256,
        "comment": "\t * Get the data from the JSON data source to use for drawing a table. Using",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4257,
        "comment": "\t * `_fnGetObjectDataFn` allows the data to be sourced from a property of the",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4258,
        "comment": "\t * source object, or from a processing function.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4259,
        "comment": "\t *  @param {object} settings dataTables settings object",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4260,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4261,
        "comment": "   * Class definition",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4262,
        "comment": "   */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4268,
        "comment": "// Could in inside a `dataSrc` object, or not!",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4292,
        "comment": "// set",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4296,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4297,
        "comment": "\t * Very similar to _fnAjaxDataSrc, but for the other SSP properties",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4298,
        "comment": "\t * @param {*} settings DataTables settings object",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4299,
        "comment": "\t * @param {*} param Target parameter",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4300,
        "comment": "\t * @param {*} json JSON data",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4301,
        "comment": "\t * @returns Resolved value",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4302,
        "comment": "\t */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4309,
        "comment": "// Get from custom location",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4313,
        "comment": "// else - Default behaviour",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4316,
        "comment": "// Legacy support",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4334,
        "comment": "\t * Filter the table using both the global filter and column based filtering",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4335,
        "comment": "\t *  @param {object} settings dataTables settings object",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4336,
        "comment": "\t *  @param {object} input search information",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4381,
        "comment": "// And finally global filtering",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4385,
        "comment": "// Tell the draw function we have been filtering",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4392,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4394,
        "comment": "\t * ",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4395,
        "comment": "\t * This is legacy now that we have named functions, but it is widely used",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4396,
        "comment": "\t * from 1.x, so it is not yet deprecated.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4399,
        "comment": "\t */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4419,
        "comment": "// So the array reference doesn't break set the results into the",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4420,
        "comment": "// existing array",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4427,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4428,
        "comment": "// return if the following background transition hasn't yet completed",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4429,
        "comment": "\t */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4439,
        "comment": "// Search term can be a function, regex or string - if a string we apply our",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4460,
        "comment": "// Mutate the searchRows array",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 4471,
        "comment": "\t *  @param {string} sSearch string to search for",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4472,
        "comment": "\t *  @param {bool} bRegex treat as a regular expression or not",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4473,
        "comment": "\t *  @param {bool} bSmart perform smart filtering or not",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4474,
        "comment": "\t *  @param {bool} bCaseInsensitive Do case insensitive matching or not",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4475,
        "comment": "\t *  @returns {RegExp} constructed object",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4476,
        "comment": "\t *  @memberof DataTable#oApi",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4477,
        "comment": "\t */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4493,
        "comment": "// only register focus restorer if modal will actually get shown",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 4514,
        "comment": "   * jQuery",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4516,
        "comment": "\t\t\t */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4522,
        "comment": "   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4603,
        "comment": "// Search in DataTables is string based",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4616,
        "comment": "// If it looks like there is an HTML entity in the string,",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4617,
        "comment": "// attempt to decode it so sorting works as expected. Note that",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4648,
        "comment": "\t */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4653,
        "comment": "/* Ensure that the table data is fully initialised */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4665,
        "comment": "// Enable features",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4749,
        "comment": "\t * Alter the display settings to change the page",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4750,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4843,
        "comment": "// Different positioning depending on if scrolling is enabled or not",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 4868,
        "comment": "\t * Add any control elements for the table - specifically scrolling",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4906,
        "comment": "\t\t *        table - scroll head table",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4907,
        "comment": "\t\t *          thead - thead",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4909,
        "comment": "\t\t *      table - table (master table)",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4911,
        "comment": "\t\t *        tbody - tbody",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4912,
        "comment": "\t\t *    div - scroll foot",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4913,
        "comment": "\t\t *      div - scroll foot inner",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4914,
        "comment": "\t\t *        table - scroll foot table",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4915,
        "comment": "\t\t *          tfoot - tfoot",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4916,
        "comment": "\t\t */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5012,
        "comment": "// On redraw - align columns",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5020,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5021,
        "comment": "\t * Update the header, footer and body tables for resizing - i.e. column",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5023,
        "comment": "\t *",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5024,
        "comment": "\t * Welcome to the most horrible function DataTables. The process that this",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5025,
        "comment": "\t * function follows is basically:",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5026,
        "comment": "\t *   1. Re-create the table inside the scrolling div",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5027,
        "comment": "\t *   2. Correct colgroup > col values if needed",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5029,
        "comment": "\t *   4. Clean up",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5030,
        "comment": "\t *",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5031,
        "comment": "\t *  @param {object} settings dataTables settings object",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5032,
        "comment": "\t *  @memberof DataTable#oApi",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5036,
        "comment": "// Given that this is such a monster function, a lot of variables are use",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5037,
        "comment": "// to try and keep the minimised size as small as possible",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5057,
        "comment": "// for the scrollbar",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5063,
        "comment": "   * Class definition",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5069,
        "comment": "// 1. Re-create the table inside the scrolling div",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5073,
        "comment": "// Private",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5089,
        "comment": "// Note the use of translating into a column index to get the `col` element. This",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 5090,
        "comment": "// Getters",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 5091,
        "comment": "// of the indexes out.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 5093,
        "comment": "// Get the column sizes from the first row in the table",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5127,
        "comment": "// \"Hide\" the header and footer that we used for the sizing. We need to keep",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5128,
        "comment": "// the content of the cell so that the width applied to the header and body",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5140,
        "comment": "// 4. Clean up",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5142,
        "comment": "// provide a bit more space to allow \"overflow\" scrolling (i.e. past the scrollbar)",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5146,
        "comment": "// Set the width's of the header and footer tables",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5164,
        "comment": "// Adjust the position of the header in case we loose the y-scrollbar",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5174,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5176,
        "comment": "\t *  @param {object} settings dataTables settings object",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5178,
        "comment": "\t */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5181,
        "comment": "// Not interested in doing column width calculation if auto-width is disabled",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5194,
        "comment": "// from DOM element",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5203,
        "comment": "// Let plug-ins know that we are doing a recalc, in case they have changed any of the",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5204,
        "comment": "// visible columns their own way (e.g. Responsive uses display:none).",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5213,
        "comment": "// Construct a single row, worst case, table with the widest",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5214,
        "comment": "// node in the data, assign any user defined widths, then insert it into",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5215,
        "comment": "// the DOM and allow the browser to do all the hard work of calculating",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5216,
        "comment": "// table widths",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5221,
        "comment": "// Clean up the table body",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5225,
        "comment": "// Clone the table header and footer - we can't use the header / footer",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5226,
        "comment": "// from the cloned table, since if scrolling is active, the table's",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5227,
        "comment": "// real header and footer are contained in different table tags",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5232,
        "comment": "// Remove any assigned widths from the footer (from scrolling)",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5235,
        "comment": "// Apply custom sizing to the cloned header",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5237,
        "comment": "// Get the `width` from the header layout",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5243,
        "comment": "// For scrollX we need to force the column width otherwise the",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5244,
        "comment": "// browser will collapse it. If this width is smaller than the",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5245,
        "comment": "// width the column requires, then it will have no effect",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5261,
        "comment": "// Find the widest piece of data for each column and put it into the table",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5281,
        "comment": "// duplicated in the dom (radio elements for example)",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5303,
        "comment": "// When scrolling (X or Y) we want to set the width of the table as ",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5304,
        "comment": "// appropriate. However, when not scrolling leave the table width as it",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5305,
        "comment": "// is. This results in slightly different, but I think correct behaviour",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5313,
        "comment": "// If there is no width attribute or style, then allow the table to",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5314,
        "comment": "// collapse",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5326,
        "comment": "// Get the width of each column in the constructed table",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5371,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5372,
        "comment": "\t * Get the maximum strlen for each data column",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5373,
        "comment": "\t *  @param {object} settings dataTables settings object",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5374,
        "comment": "\t *  @param {int} colIdx column of interest",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5375,
        "comment": "\t *  @returns {string} string of the max length",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5376,
        "comment": "\t *  @memberof DataTable#oApi",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5377,
        "comment": "\t */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5393,
        "comment": "// Remove id / name attributes from elements so they",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5394,
        "comment": "// don't interfere with existing elements",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5403,
        "comment": "// We want the HTML in the string, but the length that",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5404,
        "comment": "// is important is the stripped string",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5417,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5418,
        "comment": "\t * Append a CSS unit (only if required) to a string",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5419,
        "comment": "\t *  @param {string} value to css-ify",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5420,
        "comment": "\t *  @returns {string} value with css unit",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5421,
        "comment": "\t *  @memberof DataTable#oApi",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5422,
        "comment": "\t */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5435,
        "comment": "// Check it has a unit character already",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5441,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5442,
        "comment": "\t * Re-insert the `col` elements for current visibility",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5443,
        "comment": "\t *",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5444,
        "comment": "\t * @param {*} settings DT settings",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5445,
        "comment": "\t */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5465,
        "comment": "// Legacy support for `orderCellsTop`",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5481,
        "comment": "// Need to resolve the user input array into our internal structure",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5504,
        "comment": "   */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 5505,
        "comment": "// sort columns are ignored",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 5514,
        "comment": "// Allow the processing display to show",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 5519,
        "comment": "// Sort processing done - redraw has its own processing display",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 5534,
        "comment": "\t * Sort the display array to match the master's order",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5535,
        "comment": "\t * @param {*} settings",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5536,
        "comment": "\t */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5547,
        "comment": "// Rather than needing an `indexOf` on master array, we can create a map",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 5552,
        "comment": "// And then cache what would be the indexOf fom the display",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 5558,
        "comment": "// Short version of this function is simply `master.indexOf(a) - master.indexOf(b);`",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 5582,
        "comment": "// Plain column index and direction pair",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5588,
        "comment": "// Object",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5592,
        "comment": "// 1D array",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5621,
        "comment": "// specified",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5670,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5671,
        "comment": "\t * Change the order of the table",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5672,
        "comment": "// Private",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5673,
        "comment": "\t *  @memberof DataTable#oApi",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5674,
        "comment": "// TODO: on v6 target should be given explicitly & remove the {target: 'ss-target'} case",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5686,
        "comment": "// Resolve any column types that are unknown due to addition or invalidation",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5687,
        "comment": "// @todo Can this be moved into a 'data-ready' handler which is called when",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5720,
        "comment": "// Reset the initial positions on each pass so we get a stable sort",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5732,
        "comment": "\t\t\t * and sorting function (from oSort) in a certain direction. It's reasonably complex to",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5810,
        "comment": "\t *  @param {int} addIndex Counter",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 5811,
        "comment": "\t *  @param {boolean} [shift=false] Shift click add",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 5812,
        "comment": "\t *  @param {function} [callback] callback function",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5845,
        "comment": "   */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5865,
        "comment": "// No sort on this column yet, being added by shift click",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 5866,
        "comment": "// add it as itself",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 5871,
        "comment": "// No sort on this column yet, being added from a colspan",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 5872,
        "comment": "// so add with same direction as first column",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 5899,
        "comment": "\t */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5935,
        "comment": "// Custom sorting function - provided by the sort data type",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5946,
        "comment": "// Use / populate cache",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5965,
        "comment": "// If there was a custom sort function, use data from there",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 6164,
        "comment": "\t *  @param {string} msg error message",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 6165,
        "comment": "\t *  @param {int} tn Technical note id to get more information about the error.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 6179,
        "comment": "// Backwards compatibility pre 1.10",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 6236,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 6240,
        "comment": "\t * able to override them, but we do want to deep copy arrays.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 6310,
        "comment": "\t * Register a callback function. Easily allows a callback function to be added to",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 6316,
        "comment": "\t */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 6325,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 6326,
        "comment": "\t * Fire callback functions and trigger events. Note that the loop over the",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 6327,
        "comment": "\t * callback array store is done backwards! Further note that you do not want to",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 6328,
        "comment": "\t * fire off triggers in time sensitive applications (for example cell creation)",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 6329,
        "comment": "\t * as its slow.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 6330,
        "comment": "\t *  @param {object} settings dataTables settings object",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 6331,
        "comment": "\t *  @param {string} callbackArr Name of the array storage for the callbacks in",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 6332,
        "comment": "\t *      oSettings",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 6333,
        "comment": "\t *  @param {string} eventName Name of the jQuery custom event to trigger. If",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 6334,
        "comment": "\t *      null no trigger is fired",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 6335,
        "comment": "\t *  @param {array} args Array of arguments to pass to the callback function /",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 6336,
        "comment": "\t *      trigger",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 6337,
        "comment": "\t *  @param {boolean} [bubbles] True if the event should bubble",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 6338,
        "comment": "\t *  @memberof DataTable#oApi",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 6339,
        "comment": "\t */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 6422,
        "comment": "\t *  @param {object} settings dataTables settings object",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 6441,
        "comment": "\t * @param {*} str String with values to replace",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 6534,
        "comment": "\t *   * `DataTables.Api` - API instance",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 6535,
        "comment": "\t * @return {array|null} Matching DataTables settings objects. `null` or",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 6536,
        "comment": "\t *   `undefined` is returned if no matching DataTable is found.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 6590,
        "comment": "\t * `rows().nodes()` will return an array of nodes, while `rows().data()` will",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 6598,
        "comment": "\t * top level object had. For example, these two calls are equivalent:",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 6602,
        "comment": "\t *     api.draw();",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 6603,
        "comment": "\t *",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 6604,
        "comment": "\t *     // Chained",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 6605,
        "comment": "\t *     api.row.add( {...} ).draw();",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 6609,
        "comment": "\t *   used to define which DataTables enhanced tables this API will operate on.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 6610,
        "comment": "\t *   Can be one of:",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 6613,
        "comment": "\t *     with be found and used.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 6614,
        "comment": "\t *   * `node` - `TABLE` node which has already been formed into a DataTable.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 6763,
        "comment": "// this has same length as context - one entry for each table",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 6771,
        "comment": "// columns and rows share the same structure.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 6772,
        "comment": "// 'this' is an array of column indexes for each context",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 6913,
        "comment": "// Value",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 6922,
        "comment": "// Property extension",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 6932,
        "comment": "//         propExt:   [ ... ]               -- array    - Array of Api object definitions to extend the property",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 6938,
        "comment": "//         propExt:   [",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 6940,
        "comment": "//             name:      'data'",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 7007,
        "comment": "// Returned item is the API instance that was passed in, return it",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 7011,
        "comment": "// New API instance returned, want the value from the first item",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 7015,
        "comment": "// Array results are 'enhanced'",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 7020,
        "comment": "// Non-API return - just fire it back",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 7026,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 7027,
        "comment": "\t * Selector for HTML tables. Apply the given selector to the give array of",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 7028,
        "comment": "\t * DataTables settings objects.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 7030,
        "comment": "\t * @param {string|integer} [selector] jQuery selector string or integer",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 7031,
        "comment": "\t * @param  {array} Array of DataTables settings objects to be filtered",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 7032,
        "comment": "\t * @return {array}",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 7033,
        "comment": "\t * @ignore",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 7051,
        "comment": "// Integer is used to pick out a table by index",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 7056,
        "comment": "// Perform a jQuery selector on the table nodes",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 7064,
        "comment": "// Need to translate back from the table node to the settings",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 7073,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 7074,
        "comment": "\t * Context selector for the API's context (i.e. the tables the API instance",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 7075,
        "comment": "\t * refers to.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 7076,
        "comment": "\t *",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 7077,
        "comment": "\t * @name    DataTable.Api#tables",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 7151,
        "comment": "// Getter - return existing node's content",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 7228,
        "comment": "\t * Get the current page index.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 7237,
        "comment": "\t * @param {integer|string} action The paging action to take. This can be one of:",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 7314,
        "comment": "// is a Javascript property of functions which defines how many arguments",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 7315,
        "comment": "// the function expects.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 7373,
        "comment": "\t *",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 7374,
        "comment": "\t * @return {object} JSON received from the server.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 7375,
        "comment": "\t */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 7417,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 7419,
        "comment": "\t * table in the current context.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 7421,
        "comment": "\t * @return {string} Current Ajax source URL",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 7422,
        "comment": "\t */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 7423,
        "comment": "\t * Set the Ajax URL. Note that this will set the URL for all tables in the",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 7424,
        "comment": "\t * current context.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 7425,
        "comment": "\t *",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 7426,
        "comment": "\t * @param {string} url URL to set.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 7427,
        "comment": "\t * @returns {DataTables.Api} this",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 7428,
        "comment": "\t */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 7483,
        "comment": "// Can't just check for isArray here, as an API or jQuery instance might be",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 7484,
        "comment": "// given with their array like look",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 7509,
        "comment": "// selector extensions",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 7527,
        "comment": "// Backwards compatibility for 1.9- which used the terminology filter rather",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 7572,
        "comment": "// applied, current, index (original - compatibility with 1.9)",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 7642,
        "comment": "// applied | removed",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 7728,
        "comment": "// ID selector. Want to always be able to select rows by id, regardless",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 7729,
        "comment": "// of if the tr element has been created or not, so can't rely upon",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 7732,
        "comment": "// but to select it using a CSS selector engine (like Sizzle or",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 7733,
        "comment": "// querySelect) it would need to need to be escaped for some characters.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 7734,
        "comment": "// DataTables simplifies this for row selectors since you can select",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 7735,
        "comment": "// only a row. A # indicates an id any anything that follows is the id -",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 7854,
        "comment": "// For server-side processing tables - subtract the deleted row from the count",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 7862,
        "comment": "// Remove the row's ID reference if there is one",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 7918,
        "comment": "// Get",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 7933,
        "comment": "// Automatically invalidate",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 8001,
        "comment": "// And the initial load state",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 8040,
        "comment": "// Otherwise create a row with a wrapper",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 8176,
        "comment": "// Table destroyed - nuke any child rows",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 8196,
        "comment": "// data can be:",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 8197,
        "comment": "//  tr",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 8218,
        "comment": "// set",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 8228,
        "comment": "// only when `child()` was called with parameters (without",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 8237,
        "comment": "// only when `child()` was called with parameters (without",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 8277,
        "comment": "// separated lists",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 8283,
        "comment": "// iterator callback in columns().data()",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 8297,
        "comment": "// legacy support",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 8316,
        "comment": "// Selector - all",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 8377,
        "comment": "// match by column title",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 8396,
        "comment": "// `nodes` is column index complete and in order",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 8405,
        "comment": "// a child or such an element",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 8423,
        "comment": "// Get",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 8428,
        "comment": "// Set",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 8429,
        "comment": "// No change",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 8435,
        "comment": "// Insert column",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 8436,
        "comment": "// Need to decide if we should use appendChild or insertBefore",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 8814,
        "comment": "// an extension specific check at the moment",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 8892,
        "comment": "// Get",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 8914,
        "comment": "\t *   the column index that the sorting condition applies to, the second is the",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 8924,
        "comment": "\t * Set the ordering for the table.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 8925,
        "comment": "\t *",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 8926,
        "comment": "\t * @param {array} order 1D array of sorting information to be applied.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 8927,
        "comment": "\t * @param {array} [...] Optional additional sorting conditions",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 8928,
        "comment": "\t * @returns {DataTables.Api} this",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 8929,
        "comment": "\t */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 8930,
        "comment": "\t * Set the ordering for the table.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 8931,
        "comment": "\t *",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 8932,
        "comment": "\t * @param {array} order 2D array of sorting information to be applied.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 8933,
        "comment": "\t * @returns {DataTables.Api} this",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 8934,
        "comment": "\t */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 8946,
        "comment": "// set",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 8948,
        "comment": "// Simple column / direction passed in",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 8952,
        "comment": "// Arguments passed in (list of 1D arrays)",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 8955,
        "comment": "// otherwise a 2D array was passed in",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 8963,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 8964,
        "comment": "\t * Attach a sort listener to an element for a given column",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 8965,
        "comment": "\t *",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 8998,
        "comment": "// Order by the selected column(s)",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 9049,
        "comment": "// get",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 9055,
        "comment": "// set",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 9221,
        "comment": "\t * @param {string} [type] Library or container type `lib`, `win` or `datetime`.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 9238,
        "comment": "\t * CommonJS factory function pass through. This will check if the arguments",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 9305,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 9306,
        "comment": "\t * Check if a `<table>` node is a DataTable table already or not.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 9307,
        "comment": "\t *",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 9308,
        "comment": "\t *  @param {node|jquery|string} table Table node, jQuery object or jQuery",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 9309,
        "comment": "\t *      selector for the table to test. Note that if more than more than one",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 9310,
        "comment": "\t *      table is passed on, only the first will be checked",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 9342,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 9343,
        "comment": "\t * Get all DataTable tables that have been initialised - optionally you can",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 9344,
        "comment": "\t * select to get only currently visible tables.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 9345,
        "comment": "\t *",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 9346,
        "comment": "\t *  @param {boolean} [visible=false] Flag to indicate if you want all (default)",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 9347,
        "comment": "\t *    or visible tables only.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 9348,
        "comment": "\t *  @returns {array} Array of `table` nodes (not DataTable instances) which are",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 9349,
        "comment": "\t *    DataTables",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 9350,
        "comment": "\t *  @static",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 9351,
        "comment": "\t *  @dtopt API-Static",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 9352,
        "comment": "\t *",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 9353,
        "comment": "\t *  @example",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 9354,
        "comment": "\t *    $.each( $.fn.dataTable.tables(true), function () {",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 9355,
        "comment": "\t *      $(table).DataTable().columns.adjust();",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 9356,
        "comment": "\t *    } );",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 9357,
        "comment": "\t */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 9415,
        "comment": "// jQuery functions to operate on the tables",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 9525,
        "comment": "// Blitz all `DT` namespaced events (these are internal events, the",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 9526,
        "comment": "// lowercase, `dt` events are user subscribed and they are responsible",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 9635,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 9636,
        "comment": "\t * Version string for plug-ins to check compatibility. Allowed format is",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 9637,
        "comment": "\t * `a.b.c-d` where: a:int, b:int, c:int, d:string(dev|beta|alpha). `d` is used",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 9654,
        "comment": "\t *  @default []",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 9804,
        "comment": "\t\t */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 9807,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 9808,
        "comment": "\t\t * Define the sorting directions that are applied to the column, in sequence",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 9809,
        "comment": "\t\t * as the column is repeatedly sorted upon - i.e. the first value is used",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 9810,
        "comment": "\t\t * as the sorting direction when the column if first sorted (clicked on).",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 9811,
        "comment": "\t\t * Sort it again (click again) and it will move on to the next index.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 9812,
        "comment": "\t\t * Repeat until loop.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 9889,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 10008,
        "comment": "\t\t * DataTables can be instructed to load data to display in the table from a",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 10032,
        "comment": "\t\t * the following parameters provide additional options in DataTables or",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 10033,
        "comment": "\t\t * require special consideration:",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 10038,
        "comment": "\t\t *   parameters with the values that DataTables has readied for sending. An",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 10039,
        "comment": "\t\t *   object may be returned which will be merged into the DataTables",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 10108,
        "comment": "\t\t * columns you specifically want. `columnDefs` may use any of the column",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 10228,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 10229,
        "comment": "\t\t * Enable or disable sorting of columns. Sorting of individual columns can be",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 10230,
        "comment": "\t\t * disabled by the `sortable` option for each column.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 10231,
        "comment": "\t\t */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 10256,
        "comment": "\t\t */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 10333,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 10334,
        "comment": "\t\t * Called at the very start of each table draw and can be used to cancel the",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 10335,
        "comment": "\t\t * draw by returning false, any other return (including undefined) results in",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 10337,
        "comment": "\t\t */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 10341,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 10343,
        "comment": "\t\t * generated for each table draw, but before it is rendered on screen. This",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 10344,
        "comment": "\t\t * function might be used for setting the row class name etc.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 10345,
        "comment": "\t\t */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 10349,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 10350,
        "comment": "\t\t * Load the table state. With this function you can define from where, and how, the",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 10369,
        "comment": "\t\t * This callback is called when the table is loading state from the stored data, but",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 10371,
        "comment": "\t\t * plug-in authors, you should use the `stateLoadParams` event to load parameters for",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 10377,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 10378,
        "comment": "\t\t * Callback that is called when the state has been loaded from the state saving method",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 10379,
        "comment": "\t\t * and the DataTables settings object has been modified as a result of the loaded state.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 10380,
        "comment": "\t\t */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 10384,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 10468,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 10481,
        "comment": "\t\t\t\t */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 10493,
        "comment": "\t\t\t * Pagination string used by DataTables for the built-in pagination",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 10498,
        "comment": "\t\t\t\t * Label and character for first page button (\u00ab)",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 10542,
        "comment": "\t\t\t * * `\\_START\\_` - Display index of the first record on the current page",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 10544,
        "comment": "\t\t\t * * `\\_TOTAL\\_` - Number of records in the table after filtering",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 10545,
        "comment": "\t\t\t * * `\\_MAX\\_` - Number of records in the table without filtering",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 10546,
        "comment": "\t\t\t * * `\\_PAGE\\_` - Current page number",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 10547,
        "comment": "\t\t\t * * `\\_PAGES\\_` - Total number of pages of data in the table",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 10548,
        "comment": "\t\t\t */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 10553,
        "comment": "\t\t\t * Display information string for when the table is empty. Typically the",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 10555,
        "comment": "\t\t\t */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 10577,
        "comment": "\t\t\t * This decimal place operator is a little different from the other",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 10641,
        "comment": "\t\t\t *",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 10642,
        "comment": "\t\t\t *  @dtopt Language",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 10643,
        "comment": "\t\t\t *  @name DataTable.defaults.language.searchPlaceholder",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 10644,
        "comment": "\t\t\t */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 10674,
        "comment": "\t\t * DataTables will use it's smart filtering methods (to word match at",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 10675,
        "comment": "\t\t * any point in the data), when false this will not be done.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 10682,
        "comment": "\t\t */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 10964,
        "comment": "\t\t *        data requested.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 10965,
        "comment": "\t\t */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 10970,
        "comment": "\t\t * Change the cell type created for the column - either TD cells or TH cells. This",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 10971,
        "comment": "\t\t * can be useful as TH cells have semantic meaning in the table body, allowing them",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 10973,
        "comment": "\t\t */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 11166,
        "comment": "\t\t\t */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 11319,
        "comment": "\t\t * used in the following manner:",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 11320,
        "comment": "\t\t * <ul>",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 11321,
        "comment": "\t\t *   <li>Index 0 - column number</li>",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 11322,
        "comment": "\t\t *   <li>Index 1 - current sorting direction</li>",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 11323,
        "comment": "\t\t * </ul>",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 11368,
        "comment": "\t\t * Callback functions for just before the table is redrawn. A return of",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 11584,
        "comment": "\t\t * (i.e. after filtering). Use fnRecordsDisplay rather than",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 11585,
        "comment": "\t\t * this property to get the value of the number of records, regardless of",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 11586,
        "comment": "\t\t * the server-side processing setting.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 11587,
        "comment": "\t\t */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 11590,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 11644,
        "comment": "\t\t */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 11732,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 11733,
        "comment": "\t * Extension object for DataTables that is used to provide all extension",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 11735,
        "comment": "\t *",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 11736,
        "comment": "\t * Note that the `DataTable.ext` object is available through",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 11737,
        "comment": "\t * `jQuery.fn.dataTable.ext` where it may be accessed and manipulated. It is",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 11739,
        "comment": "\t *  @namespace",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 11740,
        "comment": "\t *  @extends DataTable.models.ext",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 11741,
        "comment": "\t */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 11776,
        "comment": "// For testing and plug-ins to use",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 11893,
        "comment": "// No format given, must be ISO",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 11941,
        "comment": "// The renderer gives us Moment, Luxon or Date obects for the sorting, all of which have a",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 11942,
        "comment": "// `valueOf` which gives milliseconds epoch",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 12119,
        "comment": "// Scientific notation for large and small numbers",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 12125,
        "comment": "// If NaN then there isn't much formatting that we can do - just",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 12126,
        "comment": "// return immediately, escaping any HTML (this was supposed to",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 12127,
        "comment": "// be a number after all)",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 12140,
        "comment": "// If zero, then can't have a negative prefix",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 12166,
        "comment": "// Get / set type",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 12188,
        "comment": "// Wrap to allow the function to return `true` rather than",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 12189,
        "comment": "// specifying the type name.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 12211,
        "comment": "// can be undefined",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 12212,
        "comment": "// can be undefined",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 12213,
        "comment": "// can be undefined",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 12216,
        "comment": "// prop is optional",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 12260,
        "comment": "// Get a list of types",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 12267,
        "comment": "//",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 12268,
        "comment": "// Built in data types",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 12269,
        "comment": "//",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 12277,
        "comment": "// This is a little complex, but faster than always calling toString,",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 12278,
        "comment": "// http://jsperf.com/tostring-v-check",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 12314,
        "comment": "// V8 tries _very_ hard to make a string passed into `Date.parse()`",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 12315,
        "comment": "// valid, so we need to use a regex to restrict date formats. Use a",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 12316,
        "comment": "// plug-in for anything other than ISO8601 style strings",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 12411,
        "comment": "// If a decimal place other than `.` is used, it needs to be given to the",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 12412,
        "comment": "// function so we can detect it and replace with a `.` which is the only",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 12413,
        "comment": "// decimal place Javascript recognises - it is not locale aware.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 12453,
        "comment": "// Cells and rows which have the attribute to disable the icons",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 12457,
        "comment": "// Legacy support for `orderCellsTop`. If it is set, then cells",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 12458,
        "comment": "// which are not in the top or bottom row of the header (depending",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 12459,
        "comment": "// on the value) do not get the sorting classes applied to them",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 12466,
        "comment": "// No additional mark-up required",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 12467,
        "comment": "// Attach a sort listener to update on sort - note that using the",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 12468,
        "comment": "// `DT` namespace will allow the event to be removed automatically",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 12469,
        "comment": "// on destroy, while the `dt` namespaced event is the one we are",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 12470,
        "comment": "// listening for",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 12472,
        "comment": "// need to check this this is the host",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 12473,
        "comment": "// table, not a nested one",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 12499,
        "comment": "// Get the ordering direction for the columns under this cell",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 12500,
        "comment": "// Note that it is possible for a cell to be asc and desc sorting",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 12501,
        "comment": "// (column spanning cells)",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 12510,
        "comment": "// The ARIA spec says that only one column should be marked with aria-sort",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 12517,
        "comment": "// Determine if the next click will remove sorting or change the sort",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 12580,
        "comment": "// For compatibility with the legacy `info` top level option",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 12601,
        "comment": "// Update display on each draw",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 12614,
        "comment": "// Table is described by our info div",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 12623,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 12624,
        "comment": "\t * Update the information elements in the display",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 12626,
        "comment": "\t *  @memberof DataTable#oApi",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 12627,
        "comment": "\t */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 12640,
        "comment": "// Record set after filtering",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 12661,
        "comment": "// opts",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 12662,
        "comment": "// - text",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 12663,
        "comment": "// - placeholder",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 12665,
        "comment": "// Don't show the input if filtering isn't available on the table",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 12681,
        "comment": "// The _INPUT_ is optional - is appended if not present",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 12688,
        "comment": "// We can put the <input> outside of the label if it is at the start or end",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 12690,
        "comment": "// for elements).",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 12707,
        "comment": "// add for and id to label and input",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 12719,
        "comment": "/* Now do the filter */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 12725,
        "comment": "// Need to redraw, without resorting",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 12746,
        "comment": "// on the clear icon (Edge bug 17584515). This is safe in other browsers as `searchFn`",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 12747,
        "comment": "// checks the value to see if it has changed. In other browsers it won't have.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 12760,
        "comment": "// Update the input elements whenever the table is filtered",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 12773,
        "comment": "// opts",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 12774,
        "comment": "// - type - button configuration",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 12777,
        "comment": "// Don't show the paging input if the table doesn't have paging enabled",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 12788,
        "comment": "// To be removed in 2.1",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 12800,
        "comment": "// Responsive redraw of paging control",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 12879,
        "comment": "// Responsive - check if the buttons are over two lines based on the",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 12880,
        "comment": "// height of the buttons and the container.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 12882,
        "comment": "// any buttons",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 12883,
        "comment": "// prevent infinite",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 12894,
        "comment": "\t * @param {*} button The button type in question",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 12960,
        "comment": "\t * Compute what number buttons to show in the paging control",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 12961,
        "comment": "\t *",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 12962,
        "comment": "\t * @param {*} page Current page",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 12963,
        "comment": "\t * @param {*} pages Total number of pages",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 12964,
        "comment": "\t * @param {*} buttons Target number of number buttons",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 12965,
        "comment": "\t * @param {boolean} addFirstLast Indicate if page 1 and end should be included",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 12966,
        "comment": "\t * @returns Buttons to show",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 12967,
        "comment": "\t */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 12979,
        "comment": "// Single button - current page only",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 12983,
        "comment": "// Special logic for just three buttons",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 13027,
        "comment": "// opts",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 13028,
        "comment": "// - menu",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 13029,
        "comment": "// - text",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 13033,
        "comment": "// For compatibility with the legacy `pageLength` top level option",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 13051,
        "comment": "// Options can be given in a number of ways",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 13053,
        "comment": "// Old 1.x style - 2D array",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 13065,
        "comment": "// Or just a number to display and use",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 13072,
        "comment": "// We can put the <select> outside of the label if it is at the start or",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 13087,
        "comment": "// Wrapper element - use a span as a holder for where the select will go",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 13094,
        "comment": "// Save text node content for macro updating",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 13112,
        "comment": "// Next, the select itself, along with the options",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 13128,
        "comment": "// add for and id to label and input",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 13133,
        "comment": "// Swap in the select list",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 13136,
        "comment": "// Can't use `select` variable as user might provide their own and the",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 13137,
        "comment": "// reference is broken by the use of outerHTML",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 13145,
        "comment": "// Update node value whenever anything changes the table's length",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 13150,
        "comment": "// Resolve plurals in the text for the new length",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 13160,
        "comment": "// jQuery access",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 13163,
        "comment": "// Provide access to the host jQuery object (circular reference)",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 13166,
        "comment": "// Legacy aliases",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 13170,
        "comment": "// With a capital `D` we return a DataTables API instance rather than a",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 13171,
        "comment": "// jQuery object",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 13176,
        "comment": "// All properties that are available to $.fn.dataTable should also be",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 13177,
        "comment": "// available on $.fn.DataTable",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 13186,
        "comment": "/*! DataTables Bootstrap 5 integration",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 13187,
        "comment": " * \u00a9 SpryMedia Ltd - datatables.net/license",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 13192,
        "comment": "// AMD",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 13198,
        "comment": "// CommonJS",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 13209,
        "comment": "// CommonJS environments without a window global must pass a",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 13210,
        "comment": "// root. This will give an error otherwise",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 13228,
        "comment": "// Browser",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 13237,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 13238,
        "comment": " * DataTables integration for Bootstrap 5.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 13239,
        "comment": " *",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 13240,
        "comment": " * This file sets the defaults and adds options to DataTables to style its",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 13241,
        "comment": " * controls using Bootstrap. See https://datatables.net/manual/styling/bootstrap",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 13242,
        "comment": " * for further information.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 13243,
        "comment": " */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 13245,
        "comment": "/* Set the defaults for DataTables initialisation */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 13251,
        "comment": "/* Default class modification */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 13266,
        "comment": "/* Bootstrap paging button renderer */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 13307,
        "comment": "// Apply start / end (left / right when ltr) margins",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 14,
        "comment": "   * Bootstrap dom/data.js",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 26,
        "comment": " *   MIT license - https://datatables.net/license",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 98,
        "comment": "/**\r",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 99,
        "comment": " * Converts a hexadecimal color to a CSS3 compatible color.\r",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 100,
        "comment": " * @param {string} hexColor  Color on the format \"#RRGGBB\" or \"#RRGGBBAA\"\r",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 101,
        "comment": " * @returns {string}\r",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 102,
        "comment": "// Method to get DT API instance from jQuery object",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 119,
        "comment": "/**\r",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 120,
        "comment": "// If multiple durations are defined, take the first",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 121,
        "comment": "// Colorize some settings which are high risk",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 122,
        "comment": " * @param {number} saturation  Saturation in range [0, 1]\r",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 123,
        "comment": " * @param {number} lightness  Lightness in range [0, 1]\r",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 124,
        "comment": "/* Sanity check */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 125,
        "comment": " */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 127,
        "comment": "// onLoad events",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 146,
        "comment": "/* Check to see if we are re-initialising a table */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 147,
        "comment": " * Converts an HSL color to a hexadecimal RGB color. This function will correct the lightness for the \"dark\" hues\r",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 148,
        "comment": " * @param {number} hue  Hue in range [0, 1]\r",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 149,
        "comment": " * @param {number} saturation  Saturation in range [0, 1]\r",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 150,
        "comment": " * @param {number} lightness  Lightness in range [0, 1]\r",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 151,
        "comment": " * @returns {string}\r",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 152,
        "comment": "// Handle `details` element as its content may falsie appear visible when it is closed",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 154,
        "comment": "// The corrector specifies the perceived middle lightness for each hue",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 158,
        "comment": "// Adjust the input lightness relative to the corrector",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 164,
        "comment": "/* global umdGlobal */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 166,
        "comment": "// In the future we can replace `GLOBAL` with `globalThis`, but for now use the old school global detection for",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 167,
        "comment": "// Check for HTTPS at domain-server-string",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 170,
        "comment": "/**\r",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 171,
        "comment": " * @typedef {Object} ParsedConfiguration\r",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 172,
        "comment": " * @property {number} colorSaturation\r",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 173,
        "comment": " * @property {number} grayscaleSaturation\r",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 174,
        "comment": " * @property {string} backColor\r",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 175,
        "comment": " * @property {number} iconPadding\r",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 176,
        "comment": " * @property {function(number):number} hue\r",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 177,
        "comment": "/* If the element we are initialising has the same ID as a table which was previously",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 178,
        "comment": "// When closing the alert, store the current date/time in the browser",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 179,
        "comment": "\t\t\t\t * instance by simply deleting it. This is under the assumption that the table has been",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 182,
        "comment": "/*GLOBAL*/",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 183,
        "comment": "/*MODULE*/",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 188,
        "comment": "/**\r",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 189,
        "comment": "/* Ensure the table has an ID - required for accessibility */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 190,
        "comment": "// This will check for specific configured values, and when needed will show a warning div",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 191,
        "comment": " * @param {!Object} rootObject \r",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 192,
        "comment": "// Get shared values",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 197,
        "comment": "// onLoad events",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 198,
        "comment": "/*event*/",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 199,
        "comment": " * @param {Object} newConfiguration - New configuration object.\r",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 200,
        "comment": "// Prevent enter to submitting the form and save the config.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 203,
        "comment": "// Time check",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 205,
        "comment": "   * @param {HTMLElement} element",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 208,
        "comment": "// Else, compare browser and server.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 209,
        "comment": "   */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 210,
        "comment": " * @param {Object|number|undefined} paddingOrLocalConfig - Configuration passed to the called API method. A\r",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 211,
        "comment": "// eslint-disable-line no-unused-expressions",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 212,
        "comment": " *    compatibility also contain a padding value. A padding value only overrides the global padding, not the\r",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 213,
        "comment": " *    entire global configuration.\r",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 214,
        "comment": "// Need to add the instance after the instance after the settings object has been added",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 215,
        "comment": "// to the settings array, so we can self reference the table instance if more than one",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 216,
        "comment": " * @returns {ParsedConfiguration}\r",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 217,
        "comment": " */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 221,
        "comment": "// If the length menu is given, but the init display length is not, use the length menu",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 222,
        "comment": "// add listener on the first call when the document is in loading state",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 227,
        "comment": "// In versions < 2.1.0 there was no grayscale saturation -",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 228,
        "comment": "// saturation was the color saturation.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 236,
        "comment": "// Map the initialisation options onto the settings object",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 237,
        "comment": "     * Creates a lightness range.\r",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 238,
        "comment": "     */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 242,
        "comment": "// Check if the lightness range is an array-like object. This way we ensure the",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 243,
        "comment": "// array contain two values at the same time.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 248,
        "comment": "/**\r",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 249,
        "comment": "         * Gets a lightness relative the specified value in the specified lightness range.\r",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 250,
        "comment": "         */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 257,
        "comment": "/**\r",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 258,
        "comment": "     * Gets a hue allowed by the configured hue restriction,\r",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 259,
        "comment": "     * provided the originally computed hue.\r",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 260,
        "comment": "     */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 265,
        "comment": "/*event*/",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 266,
        "comment": "// the array is not empty, which would mean no hue restriction.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 268,
        "comment": "// originalHue is in the range [0, 1]",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 269,
        "comment": "// backwards compat",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 275,
        "comment": "// A hue was specified. We need to convert the hue from",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 276,
        "comment": "// Default show all",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 277,
        "comment": "// to turns in the range [0, 1).",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 280,
        "comment": "// No hue configured => use original hue",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 285,
        "comment": "   * @param activeElement   The active element",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 286,
        "comment": "   * @param shouldGetNext   Choose to get next or previous element",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 287,
        "comment": "// Add click events for user actions",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 288,
        "comment": "   * @return {Element|elem} The proper element",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 289,
        "comment": "   */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 290,
        "comment": "/*backColor*/",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 291,
        "comment": "/*iconPadding*/",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 304,
        "comment": "/*VALUE*/",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 332,
        "comment": "// Give scripts a chance to run",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 359,
        "comment": "// Skip other types of nodes than element nodes, since they might not support",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 383,
        "comment": "/*VALUE*/ /*HASH*/",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 389,
        "comment": "/**\r",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 390,
        "comment": " * Represents a point.\r",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 391,
        "comment": " */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 397,
        "comment": "/**\r",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 398,
        "comment": " * Translates and rotates a point before being passed on to the canvas context. This was previously done by the canvas context itself, \r",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 399,
        "comment": " * but this caused a rendering issue in Chrome on sizes > 256 where the rotation transformation of inverted paths was not done properly.\r",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 400,
        "comment": " */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 402,
        "comment": "/*_x*/",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 403,
        "comment": "/*_y*/",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 404,
        "comment": "/*_size*/",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 405,
        "comment": "/*_rotation*/",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 408,
        "comment": "/**\r",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 409,
        "comment": " * Transforms the specified point based on the translation and rotation specification for this Transform.\r",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 410,
        "comment": " * @param {number} x x-coordinate\r",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 411,
        "comment": " * @param {number} y y-coordinate\r",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 412,
        "comment": " * @param {number=} w The width of the transformed rectangle. If greater than 0, this will ensure the returned point is of the upper left corner of the transformed rectangle.\r",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 413,
        "comment": " * @param {number=} h The height of the transformed rectangle. If greater than 0, this will ensure the returned point is of the upper left corner of the transformed rectangle.\r",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 414,
        "comment": " */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 415,
        "comment": "/*",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 416,
        "comment": "\t\t\t\t * Sorting",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 417,
        "comment": "\t\t\t\t * @todo For modularisation (1.11) this needs to do into a sort start up handler",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 418,
        "comment": "\t\t\t\t */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 419,
        "comment": "/*_y*/",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 421,
        "comment": "// in case that has been altered, so the default sort reflects that option",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 422,
        "comment": "/*_x*/ /*_y*/",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 429,
        "comment": "/* Do a first pass on the sorting classes (allows any size changes to be taken into",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 430,
        "comment": "\t\t\t\t * account, and also will apply sorting disabled classes if disabled",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 431,
        "comment": "\t\t\t\t */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 433,
        "comment": "/**\r",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 434,
        "comment": "     * @type {Renderer}\r",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 435,
        "comment": "     * @private\r",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 436,
        "comment": "     */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 437,
        "comment": "/*_renderer*/",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 439,
        "comment": "/**\r",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 440,
        "comment": "     * @type {Transform}\r",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 441,
        "comment": "/*",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 442,
        "comment": "\t\t\t\t * Final init",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 446,
        "comment": "/**\r",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 447,
        "comment": " * Adds a polygon to the underlying renderer.\r",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 448,
        "comment": " * @param {Array<number>} points The points of the polygon clockwise on the format [ x0, y0, x1, y1, ..., xn, yn ]\r",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 449,
        "comment": " * @param {boolean=} invert Specifies if the polygon will be inverted.\r",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 450,
        "comment": " */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 451,
        "comment": "/*addPolygon*/",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 458,
        "comment": "/*currentTransform*/ /*transformIconPoint*/",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 461,
        "comment": "/*_renderer*/ /*addPolygon*/",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 464,
        "comment": "/**\r",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 465,
        "comment": " * Adds a polygon to the underlying renderer.\r",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 466,
        "comment": " * Source: http://stackoverflow.com/a/2173084\r",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 467,
        "comment": " * @param {number} x The x-coordinate of the upper left corner of the rectangle holding the entire ellipse.\r",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 468,
        "comment": " * @param {number} y The y-coordinate of the upper left corner of the rectangle holding the entire ellipse.\r",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 469,
        "comment": " * @param {number} size The size of the ellipse.\r",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 470,
        "comment": " * @param {boolean=} invert Specifies if the ellipse will be inverted.\r",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 471,
        "comment": " */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 472,
        "comment": "/*addCircle*/",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 473,
        "comment": "/*currentTransform*/ /*transformIconPoint*/",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 474,
        "comment": "/*_renderer*/ /*addCircle*/",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 477,
        "comment": "// a tfoot element for the caption element to be appended to",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 478,
        "comment": " * Adds a rectangle to the underlying renderer.\r",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 479,
        "comment": " * @param {number} x The x-coordinate of the upper left corner of the rectangle.\r",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 480,
        "comment": " * @param {number} y The y-coordinate of the upper left corner of the rectangle.\r",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 481,
        "comment": " * @param {number} w The width of the rectangle.\r",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 482,
        "comment": " * @param {number} h The height of the rectangle.\r",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 483,
        "comment": "// Check if there is data passing into the constructor",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 484,
        "comment": " */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 485,
        "comment": "/*addRectangle*/",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 486,
        "comment": "/*addPolygon*/",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 494,
        "comment": "/* Copy the data index array */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 495,
        "comment": " * Adds a right triangle to the underlying renderer.\r",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 496,
        "comment": " * @param {number} x The x-coordinate of the upper left corner of the rectangle holding the triangle.\r",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 497,
        "comment": "/* Initialisation complete - table can be drawn */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 498,
        "comment": " * @param {number} w The width of the triangle.\r",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 499,
        "comment": " * @param {number} h The height of the triangle.\r",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 500,
        "comment": "/* Check if we need to initialise the table (it might not have been handed off to the",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 501,
        "comment": "\t\t\t\t * language processor)",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 502,
        "comment": "\t\t\t\t */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 503,
        "comment": "/*addTriangle*/",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 511,
        "comment": "/*addPolygon*/",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 514,
        "comment": "/**\r",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 515,
        "comment": " * Adds a rhombus to the underlying renderer.\r",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 516,
        "comment": " * @param {number} x The x-coordinate of the upper left corner of the rectangle holding the rhombus.\r",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 517,
        "comment": " * @param {number} y The y-coordinate of the upper left corner of the rectangle holding the rhombus.\r",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 518,
        "comment": " * @param {number} w The width of the rhombus.\r",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 519,
        "comment": " * @param {number} h The height of the rhombus.\r",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 520,
        "comment": " * @param {boolean=} invert Specifies if the rhombus will be inverted.\r",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 521,
        "comment": " */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 522,
        "comment": "/*addRhombus*/",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 523,
        "comment": "/*addPolygon*/",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 531,
        "comment": "   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 532,
        "comment": "   * --------------------------------------------------------------------------",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 533,
        "comment": "   */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 534,
        "comment": "\t *",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 535,
        "comment": "\t * Note that this namespace is aliased to `jQuery.fn.dataTableExt` for legacy",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 536,
        "comment": "\t * reasons",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 544,
        "comment": "\t\t * order. It is _not_ used by DataTables core.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 556,
        "comment": "\t\t *  @default {}",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 560,
        "comment": "/*addRectangle*/",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 564,
        "comment": "\t\t *  @type string",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 571,
        "comment": "\t\t * ",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 572,
        "comment": "\t\t * How should DataTables report an error. Can take the value 'alert',",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 573,
        "comment": "\t\t * 'throw', 'none' or a function.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 575,
        "comment": "\t\t *  @type string|function",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 580,
        "comment": "/*addCircle*/",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 586,
        "comment": "   * --------------------------------------------------------------------------",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 589,
        "comment": "   * --------------------------------------------------------------------------",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 590,
        "comment": "   */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 597,
        "comment": "\t\t * ",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 607,
        "comment": "\t\t * 1. `{object}` DataTables settings object: see",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 610,
        "comment": "\t\t *    original format that was passed in as the data source, or an array",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 611,
        "comment": "\t\t *    from a DOM data source",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 612,
        "comment": "\t\t * 3. `{int}` Row index ({@link DataTable.models.oSettings.aoData}), which",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 616,
        "comment": "\t\t *",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 623,
        "comment": "\t\t *",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 624,
        "comment": "\t\t *  @type array",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 626,
        "comment": "\t\t *",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 627,
        "comment": "\t\t *  @example",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 633,
        "comment": "\t\t *        var min = document.getElementById('min').value * 1;",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 634,
        "comment": "\t\t *        var max = document.getElementById('max').value * 1;",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 637,
        "comment": "\t\t *        if ( min == \"\" && max == \"\" ) {",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 641,
        "comment": "   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 642,
        "comment": "   * --------------------------------------------------------------------------",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 644,
        "comment": "\t\t *          return true;",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 648,
        "comment": "   */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 653,
        "comment": "   * Class definition",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 654,
        "comment": "   */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 655,
        "comment": " * @param {Graphics} g\r",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 656,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 657,
        "comment": "\t\t * Selector extensions",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 664,
        "comment": "\t\t * that have been marked as selected by the end user (`{selected: true}`),",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 667,
        "comment": "\t\t *",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 670,
        "comment": "\t\t *",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 672,
        "comment": "\t\t * * Options object (`selector-modifier` object type)",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 675,
        "comment": "\t\t * The return is an array of the resulting item indexes after the custom",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 679,
        "comment": "\t\t */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 680,
        "comment": " * Gets a set of identicon color candidates for a specified hue and config.\r",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 681,
        "comment": " * @param {number} hue\r",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 682,
        "comment": " * @param {ParsedConfiguration} config\r",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 683,
        "comment": " */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 685,
        "comment": "/*hue*/",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 687,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 688,
        "comment": "\t\t * Legacy configuration options. Enable and disable legacy options that",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 689,
        "comment": "\t\t * are available in DataTables.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 690,
        "comment": "\t\t *",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 691,
        "comment": "\t\t *  @type object",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 692,
        "comment": "\t\t */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 693,
        "comment": "// Light color",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 694,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 695,
        "comment": "\t\t\t * Enable / disable DataTables 1.9 compatible server-side processing",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 696,
        "comment": "\t\t\t * requests",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 700,
        "comment": "\t\t\t */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 701,
        "comment": " * Draws an identicon to a specified renderer.\r",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 702,
        "comment": " * @param {Renderer} renderer\r",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 703,
        "comment": " * @param {string} hash\r",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 704,
        "comment": " * @param {Object|number=} config\r",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 705,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 709,
        "comment": "   * Bootstrap dom/selector-engine.js",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 710,
        "comment": "   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 711,
        "comment": "   * --------------------------------------------------------------------------",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 714,
        "comment": "\t\t *",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 715,
        "comment": "\t\t * Pagination types (the four built in options and any additional plug-in",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 716,
        "comment": "\t\t * options defined here) can be used through the `paginationType`",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 721,
        "comment": "// `document.querySelector` will rightfully complain it is invalid.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 724,
        "comment": "\t\t * Each function is expected to return an array where each element of the",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 732,
        "comment": "\t\t * * `{array}` - A nested array containing the above elements to add a",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 735,
        "comment": "\t\t * Note that DataTables v1.9- used this object slightly differently whereby",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 739,
        "comment": "\t\t * documented in DataTables 1.10+.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 742,
        "comment": "\t\t *  @default {}",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 745,
        "comment": "\t\t *    // Show previous, next and current page buttons only",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 748,
        "comment": "\t\t *    };",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 765,
        "comment": "\t\t * order a column, but is necessarily therefore more complex.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 766,
        "comment": "\t\t * ",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 772,
        "comment": "\t\t * wish to be ordering for the column in question and then return that",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 773,
        "comment": "\t\t * array. The data in the array much be in the index order of the rows in",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 775,
        "comment": "\t\t * function is run here depends on the `dt-init columns.orderDataType`",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 777,
        "comment": "\t\t *",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 783,
        "comment": "\t\t *",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 784,
        "comment": "\t\t * Each function is expected to return an array:",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 785,
        "comment": "\t\t *",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 786,
        "comment": "\t\t * * `{array}` Data for the column to be ordering upon",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 787,
        "comment": "\t\t *",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 788,
        "comment": "\t\t *  @type array",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 789,
        "comment": "\t\t *",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 794,
        "comment": "\t\t *      return this.api().column( col, {order:'index'} ).nodes().map( function ( td, i ) {",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 795,
        "comment": "\t\t *        return $('input', td).val();",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 799,
        "comment": "   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 800,
        "comment": "   * --------------------------------------------------------------------------",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 801,
        "comment": "   */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 802,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 804,
        "comment": "\t\t *",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 820,
        "comment": "\t\t\t *",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 821,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 822,
        "comment": "   * --------------------------------------------------------------------------",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 823,
        "comment": "   * Bootstrap alert.js",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 824,
        "comment": "   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 829,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 835,
        "comment": "\t\t\t *",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 837,
        "comment": "\t\t\t *   pass it on to the other type detection functions.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 841,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 846,
        "comment": "// Getters",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 847,
        "comment": "\t\t\t *          return null;",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 848,
        "comment": "\t\t\t *        }",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 851,
        "comment": "// Public",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 852,
        "comment": "\t\t\t *          return 'currency';",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 853,
        "comment": "\t\t\t *        }",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 856,
        "comment": "\t\t\t *    );",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 860,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 863,
        "comment": "// Parity",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 866,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 869,
        "comment": "// Static",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 873,
        "comment": "\t\t\t * Note that is a search is not defined for a column of a given type,",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 892,
        "comment": "   */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 896,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 899,
        "comment": "   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 902,
        "comment": "// Clamp to half-byte",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 910,
        "comment": "\t\t\t * is defined by the functions available in this object.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 911,
        "comment": "\t\t\t *",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 912,
        "comment": "\t\t\t * Each ordering option can be described by three properties added to",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 913,
        "comment": "\t\t\t * this object:",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 918,
        "comment": "   */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 919,
        "comment": "\t\t\t * All three can be used together, only `{type}-pre` or only",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 920,
        "comment": "\t\t\t * `{type}-asc` and `{type}-desc` together. It is generally recommended",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 921,
        "comment": "// Getters",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 928,
        "comment": "// Toggle class and sync the `aria-pressed` attribute with the return value of the `.toggle()` method",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 929,
        "comment": "\t\t\t * And return:",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 930,
        "comment": "\t\t\t *",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 931,
        "comment": "\t\t\t * * `{*}` Data to be sorted upon",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 947,
        "comment": "\t\t\t *  @default {}",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 948,
        "comment": "\t\t\t *",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 949,
        "comment": "\t\t\t *  @example",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 950,
        "comment": "\t\t\t *    // Numeric ordering of formatted numbers with a pre-formatter",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 951,
        "comment": "\t\t\t *    $.extend( $.fn.dataTable.ext.type.order, {",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 957,
        "comment": "\t\t\t *",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 958,
        "comment": "\t\t\t *  @example",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 959,
        "comment": "\t\t\t *    // Case-sensitive string ordering, with no pre-formatting method",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 960,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 961,
        "comment": "   * --------------------------------------------------------------------------",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 962,
        "comment": "   * Bootstrap util/swipe.js",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 963,
        "comment": "   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 969,
        "comment": "   * Constants",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 970,
        "comment": "   */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 971,
        "comment": " * @param {string} fillColor Fill color on format #rrggbb[aa].\r",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 972,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 973,
        "comment": "\t\t * Unique DataTables instance counter",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 974,
        "comment": "\t\t *",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 979,
        "comment": "/**\r",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 980,
        "comment": " * Marks the end of the currently drawn shape. This causes the queued paths to be rendered on the canvas.\r",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 981,
        "comment": "//",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 982,
        "comment": "// Depreciated",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 983,
        "comment": "// The following properties are retained for backwards compatibility only.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 986,
        "comment": "//",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 987,
        "comment": " * Adds a polygon to the rendering queue.\r",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 988,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 989,
        "comment": "\t\t * Version check function.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 990,
        "comment": "\t\t *  @type function",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 991,
        "comment": "\t\t *  @depreciated Since 1.10",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 999,
        "comment": "\t\t *  @deprecated Since v1.10",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1000,
        "comment": "\t\t */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1001,
        "comment": " * @param {Point} point The upper left corner of the circle bounding box.\r",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1002,
        "comment": " * @param {number} diameter The diameter of the circle.\r",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1003,
        "comment": " * @param {boolean} counterClockwise True if the circle is drawn counter-clockwise (will result in a hole if rendered on a clockwise path).\r",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1004,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1005,
        "comment": "\t\t * Software version",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1006,
        "comment": "\t\t *  @type string",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1013,
        "comment": "//",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1014,
        "comment": "// Backwards compatibility. Alias to pre 1.10 Hungarian notation counter parts",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1015,
        "comment": "//",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1017,
        "comment": "/*_ctx*/",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1020,
        "comment": "/**\r",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1021,
        "comment": " * Draws an identicon to a context.\r",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1022,
        "comment": "// Public",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1023,
        "comment": " * @param {*} hashOrValue - A hexadecimal hash string or any value that will be hashed by Jdenticon.\r",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1024,
        "comment": " * @param {number} size - Icon size in pixels.\r",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1025,
        "comment": " * @param {Object|number=} config - Optional configuration. If specified, this configuration object overrides any\r",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1026,
        "comment": " *    global configuration in its entirety. For backward compatibility a padding value in the range [0.0, 0.5) can be\r",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1027,
        "comment": "// Private",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1028,
        "comment": " */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1044,
        "comment": "/**\r",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1045,
        "comment": " * Prepares a measure to be used as a measure in an SVG path, by\r",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1046,
        "comment": " * rounding the measure to a single decimal. This reduces the file\r",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1047,
        "comment": " * size of the generated SVG with more than 50% in some cases.\r",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1048,
        "comment": " */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1053,
        "comment": "/**\r",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1054,
        "comment": " * Represents an SVG path element.\r",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1055,
        "comment": " */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1057,
        "comment": "/**\r",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1058,
        "comment": "     * This property holds the data string (path.d) of the SVG path.\r",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1059,
        "comment": "     * @type {string}\r",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1060,
        "comment": "     */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1061,
        "comment": "/*dataString*/",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1065,
        "comment": "/**\r",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1066,
        "comment": " * Adds a polygon with the current fill color to the SVG path.\r",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1067,
        "comment": " * @param points An array of Point objects.\r",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1068,
        "comment": " */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1069,
        "comment": "/*addPolygon*/",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1074,
        "comment": "// Static",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1077,
        "comment": "/**\r",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1078,
        "comment": " * Adds a circle with the current fill color to the SVG path.\r",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1079,
        "comment": " * @param {Point} point The upper left corner of the circle bounding box.\r",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1080,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1081,
        "comment": "   * --------------------------------------------------------------------------",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1082,
        "comment": "   * Bootstrap carousel.js",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1083,
        "comment": "   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1111,
        "comment": "     */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 1112,
        "comment": "/*_pathsByColor*/",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 1115,
        "comment": "// implementations differ between browsers.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1120,
        "comment": "/**\r",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1190,
        "comment": "/**\r",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1196,
        "comment": "     */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1197,
        "comment": "// input and select strings mean that this isn't just a number",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1199,
        "comment": "/**\r",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1200,
        "comment": "     * @type {string}\r",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1255,
        "comment": "/**\r",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1298,
        "comment": "// Clear current SVG child elements",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1303,
        "comment": "// Set viewBox attribute to ensure the svg scales nicely.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 1309,
        "comment": "/**\r",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 1310,
        "comment": "// Safety for incomplete script tag - use do / while to ensure that",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 1311,
        "comment": "// we get all instances",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 1312,
        "comment": " * @param {number} opacity  Opacity in the range [0.0, 1.0].\r",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 1313,
        "comment": " */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 1314,
        "comment": "/*setBackground*/",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 1316,
        "comment": "/*_el*/",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 1317,
        "comment": "/*WIDTH*/",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 1318,
        "comment": "/*HEIGHT*/",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1324,
        "comment": "/**\r",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1325,
        "comment": " * Appends a path to the SVG element.\r",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1326,
        "comment": " * @param {string} color Fill color on format #xxxxxx.\r",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1327,
        "comment": " * @param {string} dataString The SVG path data string.\r",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1328,
        "comment": " */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1329,
        "comment": "/*appendPath*/",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1330,
        "comment": "/*_el*/",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1335,
        "comment": "// Remove diacritics from a string by decomposing it and then removing",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1377,
        "comment": "/** @type {HTMLCanvasElement} */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1385,
        "comment": "\t * @return {array} Array of unique items",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1428,
        "comment": "// Draw icon",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1451,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1457,
        "comment": "   * --------------------------------------------------------------------------",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1465,
        "comment": "\t\t * @param {*} both Return original string and the normalized string",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1466,
        "comment": "\t\t * @returns String or undefined",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1467,
        "comment": "\t\t */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1468,
        "comment": " */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1471,
        "comment": "/**\r",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1472,
        "comment": " * Specifies which bundle of Jdenticon that is used.\r",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1473,
        "comment": " * @type {string}\r",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1474,
        "comment": " */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1477,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1483,
        "comment": "\t\t */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 114,
        "comment": "// Support: Firefox 64+, Edge 18+",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 115,
        "comment": "// Return 0 if element or transition duration is not found",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 116,
        "comment": "// On the other hand, just using `getAttribute` is not enough as",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 117,
        "comment": "// the `nonce` attribute is reset to an empty string whenever it",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 118,
        "comment": "// becomes browsing-context connected.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 119,
        "comment": "/**\r",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 120,
        "comment": "// If multiple durations are defined, take the first",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 121,
        "comment": "// Colorize some settings which are high risk",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 122,
        "comment": " * @param {number} saturation  Saturation in range [0, 1]\r",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 123,
        "comment": " * @param {number} lightness  Lightness in range [0, 1]\r",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 139,
        "comment": "// Support: Android <=2.3 only (functionish RegExp)",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 144,
        "comment": "/* global Symbol */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 145,
        "comment": "// Defining this global in .eslintrc.json would create a danger of using the global",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 146,
        "comment": "/* Check to see if we are re-initialising a table */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 154,
        "comment": "// The corrector specifies the perceived middle lightness for each hue",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 157,
        "comment": "// The jQuery object is actually just the init constructor 'enhanced'",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 158,
        "comment": "// Adjust the input lightness relative to the corrector",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 164,
        "comment": "/* global umdGlobal */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 169,
        "comment": "// The default length of a jQuery object is 0",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 176,
        "comment": " * @property {function(number):number} hue\r",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 177,
        "comment": "/* If the element we are initialising has the same ID as a table which was previously",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 180,
        "comment": "\t\t\t\t * destroyed by other methods. Anyone using non-id selectors will need to do this manually",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 185,
        "comment": "// Display the warning",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 189,
        "comment": "/* Ensure the table has an ID - required for accessibility */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 190,
        "comment": "// This will check for specific configured values, and when needed will show a warning div",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 193,
        "comment": "// Build a new jQuery matched element set",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 196,
        "comment": "/* Create the settings object for this table and set some of the default parameters */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 199,
        "comment": " * @param {Object} newConfiguration - New configuration object.\r",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 203,
        "comment": "// Time check",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 248,
        "comment": "/**\r",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 249,
        "comment": "         * Gets a lightness relative the specified value in the specified lightness range.\r",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 262,
        "comment": "// Handle a deep copy situation",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 266,
        "comment": "// the array is not empty, which would mean no hue restriction.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 271,
        "comment": "// Handle case when target is a string or something (possible in deep copy)",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 276,
        "comment": "// Default show all",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 284,
        "comment": "   * @param {array} list    The list of elements",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 287,
        "comment": "// Add click events for user actions",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 291,
        "comment": "/*iconPadding*/",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 292,
        "comment": "// Prevent never-ending loop",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 297,
        "comment": "// Recurse if we're merging plain objects or arrays",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 302,
        "comment": "// Ensure proper type for the source value",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 332,
        "comment": "// Give scripts a chance to run",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 357,
        "comment": "// If we don't have a columns array, then generate one with nulls",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 372,
        "comment": "// Apply the column definitions",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 399,
        "comment": " * but this caused a rendering issue in Chrome on sizes > 256 where the rotation transformation of inverted paths was not done properly.\r",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 408,
        "comment": "/**\r",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 411,
        "comment": " * @param {number} y y-coordinate\r",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 425,
        "comment": "// Do not include comment or processing instruction nodes",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 430,
        "comment": "\t\t\t\t * account, and also will apply sorting disabled classes if disabled",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 456,
        "comment": "// when creating the element",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 457,
        "comment": "// document fragments.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 461,
        "comment": "/*_renderer*/ /*addPolygon*/",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 462,
        "comment": "// push.apply(_, arraylike) throws on ancient WebKit",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 484,
        "comment": " */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 485,
        "comment": "/*addRectangle*/",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 496,
        "comment": " * @param {number} x The x-coordinate of the upper left corner of the rectangle holding the triangle.\r",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 502,
        "comment": "\t\t\t\t */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 513,
        "comment": "// Go through every key on the object,",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 524,
        "comment": "// Flatten any nested arrays",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 528,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 531,
        "comment": "   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 532,
        "comment": "   * --------------------------------------------------------------------------",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 540,
        "comment": "// Populate the class2type map",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 548,
        "comment": "\t\t */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 549,
        "comment": "// `in` check used to prevent JIT error (gh-2145)",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 550,
        "comment": "// hasOwn isn't used here due to false negatives",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 551,
        "comment": "// regarding Nodelist length in IE",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 589,
        "comment": "   * --------------------------------------------------------------------------",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 595,
        "comment": "   */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 596,
        "comment": "\t\t * Row searching.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 606,
        "comment": "\t\t *",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 607,
        "comment": "\t\t * 1. `{object}` DataTables settings object: see",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 613,
        "comment": "\t\t *    can be useful to retrieve the `TR` element if you need DOM interaction.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 618,
        "comment": "// try to parse",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 622,
        "comment": "\t\t * naming we call it searching here.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 645,
        "comment": "\t\t *        }",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 652,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 670,
        "comment": "\t\t *",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 672,
        "comment": "\t\t * * Options object (`selector-modifier` object type)",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 676,
        "comment": "\t\t * selector has been applied.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 679,
        "comment": "\t\t */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 682,
        "comment": " * @param {ParsedConfiguration} config\r",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 688,
        "comment": "\t\t * Legacy configuration options. Enable and disable legacy options that",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 689,
        "comment": "\t\t * are available in DataTables.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 692,
        "comment": "\t\t */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 695,
        "comment": "\t\t\t * Enable / disable DataTables 1.9 compatible server-side processing",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 699,
        "comment": "\t\t\t *  @default null",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 722,
        "comment": "// See https://github.com/twbs/bootstrap/issues/32273",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 723,
        "comment": "\t\t *",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 732,
        "comment": "\t\t * * `{array}` - A nested array containing the above elements to add a",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 737,
        "comment": "\t\t * ability is still supported by DataTables 1.10+ to provide backwards",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 738,
        "comment": "\t\t * compatibility, but this option of use is now decremented and no longer",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 746,
        "comment": "\t\t *    $.fn.dataTableExt.oPagination.current = function ( page, pages ) {",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 750,
        "comment": "// Replace a hexadecimal escape sequence with the encoded Unicode code point",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 751,
        "comment": "// Support: IE <=11+",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 752,
        "comment": "// For values outside the Basic Multilingual Plane (BMP), manually construct a",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 753,
        "comment": "// surrogate pair",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 759,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 760,
        "comment": "\t\t * Ordering plug-ins - custom data source",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 761,
        "comment": "\t\t * ",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 762,
        "comment": "\t\t * The extension options for ordering of data available here is complimentary",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 774,
        "comment": "\t\t * the table (not the currently ordering order!). Which order data gathering",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 775,
        "comment": "\t\t * function is run here depends on the `dt-init columns.orderDataType`",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 776,
        "comment": "\t\t * parameter that is used for the column (if any).",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 783,
        "comment": "\t\t *",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 790,
        "comment": "\t\t *  @example",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 791,
        "comment": "\t\t *    // Ordering using `input` node values",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 792,
        "comment": "\t\t *    $.fn.dataTable.ext.order['dom-text'] = function  ( settings, col )",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 809,
        "comment": "\t\t *",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 814,
        "comment": "\t\t\t * Automatic column class assignment",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 821,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 828,
        "comment": "\t\t     *  2. `{settings}` DataTables settings object. This can be used to",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 829,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 832,
        "comment": "\t\t     *     be required",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 835,
        "comment": "\t\t\t *",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 839,
        "comment": "\t\t\t *  @type array",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 840,
        "comment": "\t\t\t *",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 849,
        "comment": "\t\t\t *",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 852,
        "comment": "\t\t\t *          return 'currency';",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 853,
        "comment": "\t\t\t *        }",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 863,
        "comment": "// Parity",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 868,
        "comment": "\t\t\t *",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 875,
        "comment": "\t\t\t * ",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 882,
        "comment": "\t\t\t * functions this object with a parameter name which matches the sType",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 883,
        "comment": "\t\t\t * for that target column. This is the corollary of <i>afnSortData</i>",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 884,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 885,
        "comment": "   * Data API implementation",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 886,
        "comment": "   */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 887,
        "comment": "\t\t\t *",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 888,
        "comment": "\t\t     *  1. `{*}` Data from the column cell to be prepared for searching",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 892,
        "comment": "   */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 896,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 897,
        "comment": "   * --------------------------------------------------------------------------",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 898,
        "comment": "   * Bootstrap button.js",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 899,
        "comment": "   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 900,
        "comment": "   * --------------------------------------------------------------------------",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 901,
        "comment": "   */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 904,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 912,
        "comment": "\t\t\t * Each ordering option can be described by three properties added to",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 938,
        "comment": "\t\t\t *",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 942,
        "comment": "\t\t\t *   than the second parameter, ===0 if the two parameters are equal and",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 943,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 944,
        "comment": "   * Data API implementation",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 945,
        "comment": "   */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 946,
        "comment": "\t\t\t *  @type object",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 947,
        "comment": "\t\t\t *  @default {}",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 953,
        "comment": "\t\t\t *        a = (a === \"-\" || a === \"\") ? 0 : a.replace( /[^\\d\\-\\.]/g, \"\" );",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 954,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 957,
        "comment": "\t\t\t *",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 965,
        "comment": "   */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 966,
        "comment": "\t\t\t *      }",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 967,
        "comment": "\t\t\t *    } );",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 968,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 974,
        "comment": "\t\t *",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 975,
        "comment": "\t\t * @type int",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 976,
        "comment": "\t\t * @private",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 977,
        "comment": "\t\t */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 987,
        "comment": " * Adds a polygon to the rendering queue.\r",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 992,
        "comment": "\t\t */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 997,
        "comment": "\t\t * Index for what 'this' index API functions should use",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 998,
        "comment": "\t\t *  @type int",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 999,
        "comment": "\t\t *  @deprecated Since v1.10",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1000,
        "comment": "\t\t */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1007,
        "comment": "\t\t *  @deprecated Since v1.10",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1008,
        "comment": "\t\t */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1009,
        "comment": " * @param {String} type",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1018,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1019,
        "comment": " * Returns a function to use in pseudos for :enabled/:disabled",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1020,
        "comment": "/**\r",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1021,
        "comment": " * Draws an identicon to a context.\r",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1024,
        "comment": " * @param {number} size - Icon size in pixels.\r",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1027,
        "comment": "// Private",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1028,
        "comment": " */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1029,
        "comment": "// https://html.spec.whatwg.org/multipage/scripting.html#selector-disabled",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1032,
        "comment": "// Check for inherited disabledness on relevant non-disabled elements:",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1033,
        "comment": "// * listed form-associated elements in a disabled fieldset",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1034,
        "comment": "//   https://html.spec.whatwg.org/multipage/forms.html#category-listed",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1035,
        "comment": "//   https://html.spec.whatwg.org/multipage/forms.html#concept-fe-disabled",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1036,
        "comment": "// * option elements in a disabled optgroup",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1037,
        "comment": "//   https://html.spec.whatwg.org/multipage/forms.html#concept-option-disabled",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1038,
        "comment": "// All such elements have a \"form\" property.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1041,
        "comment": "// Option elements defer to a parent optgroup if present",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1050,
        "comment": "// Support: IE 6 - 11+",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1051,
        "comment": "// Use the isDisabled shortcut property to check for disabled fieldset ancestors",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1054,
        "comment": " * Represents an SVG path element.\r",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1061,
        "comment": "/*dataString*/",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1062,
        "comment": "// Some victims get caught in our net (label, legend, menu, track), but it shouldn't",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1063,
        "comment": "// even exist on them, let alone have a boolean value.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1068,
        "comment": " */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1073,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1074,
        "comment": "// Static",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1075,
        "comment": " * @param {Function} fn",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1076,
        "comment": " */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1085,
        "comment": "   */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1115,
        "comment": "// implementations differ between browsers.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1301,
        "comment": "// Irrelevant check to workaround CodeQL's false positive on the regex",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 1302,
        "comment": "// In some of the document kinds, these selectors wouldn't work natively.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 1303,
        "comment": "// Set viewBox attribute to ensure the svg scales nicely.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 1304,
        "comment": "// handling them through jQuery traversal in jQuery 3.x.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 1309,
        "comment": "/**\r",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 1310,
        "comment": "// Safety for incomplete script tag - use do / while to ensure that",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 1315,
        "comment": "// Support: IE 9 - 11+",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 1316,
        "comment": "/*_el*/",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 1317,
        "comment": "/*WIDTH*/",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 1318,
        "comment": "/*HEIGHT*/",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1319,
        "comment": "// This is probably OK but for backwards compatibility we want to maintain",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1320,
        "comment": "// Replaceable function in api.util",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1326,
        "comment": " * @param {string} color Fill color on format #xxxxxx.\r",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1327,
        "comment": " * @param {string} dataString The SVG path data string.\r",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1328,
        "comment": " */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1329,
        "comment": "/*appendPath*/",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1330,
        "comment": "/*_el*/",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1375,
        "comment": "// eslint-disable-next-line eqeqeq",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1431,
        "comment": "// IE 9's matchesSelector returns false on disconnected nodes",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1449,
        "comment": "   */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1450,
        "comment": "// Support: IE 11+, Edge 17 - 18+",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1451,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1452,
        "comment": "\t * DataTables utility methods",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1453,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1463,
        "comment": "   */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1464,
        "comment": "\t\t * @param {*} mixed Function or string to normalize",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1465,
        "comment": "\t\t * @param {*} both Return original string and the normalized string",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1466,
        "comment": "\t\t * @returns String or undefined",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1467,
        "comment": "\t\t */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1474,
        "comment": " */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1555,
        "comment": "\t\t\t\t */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1749,
        "comment": "// Seek `elem` from a previously-cached index",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1758,
        "comment": "// row and meta also passed, but not used",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1761,
        "comment": "// When found, cache indexes on `parent` and break",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1770,
        "comment": "// Use previously-cached element index if available",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1778,
        "comment": "// xml :nth-child(...)",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1779,
        "comment": "// or :nth-last-child(...) or :nth(-last)?-of-type(...)",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 1961,
        "comment": "\t */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2016,
        "comment": "// Position-in-collection",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2114,
        "comment": "// Combinators",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2145,
        "comment": "// Return the length of the invalid excess",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2155,
        "comment": "\t *  @memberof DataTable#oApi",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2216,
        "comment": "// Reuse newcache so results back-propagate to previous elements",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2219,
        "comment": "// A match means we're done; a fail means we have to keep checking",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2321,
        "comment": "// Un-match failing elements by moving them back to matcherIn",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2334,
        "comment": "// Get the final matcherOut by condensing this intermediate into postFinder contexts",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2340,
        "comment": "// Restore matcherIn since elem is not yet a final match",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2347,
        "comment": "// a renderer. After the first time the renderer has",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2358,
        "comment": "\t * Apply an auto detected renderer to data which doesn't yet have",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2393,
        "comment": "\t * they relate to column indexes. The callback function will then apply the",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2399,
        "comment": "\t *  @param {function} fn Callback function - takes two parameters, the calculated",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2400,
        "comment": "\t *    column index and the definition for that column.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2425,
        "comment": "// If the preceding token was a descendant combinator, insert an implicit any-element `*`",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2453,
        "comment": "/* Negative integer, right to left column counting */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2456,
        "comment": "// Use integer dirruns iff this is the outermost matcher",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2462,
        "comment": "// Support: IE 11+, Edge 17 - 18+",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 2463,
        "comment": "// IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 2464,
        "comment": "// Column selector",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 2470,
        "comment": "// Cell selector",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 2472,
        "comment": "// elements by id. (see trac-14142)",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 2477,
        "comment": "// class names for 1.x compat.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 2478,
        "comment": "// IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 2479,
        "comment": "// two documents; shallow comparisons work.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 2480,
        "comment": "// eslint-disable-next-line eqeqeq",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 2496,
        "comment": "// Track unmatched elements for set filters",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2499,
        "comment": "// They will have gone through all possible matchers",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2504,
        "comment": "\t * Get the width for a given set of columns",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2511,
        "comment": "\t */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2512,
        "comment": "// makes the latter nonnegative.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2515,
        "comment": "// Apply set filters to unmatched elements",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2516,
        "comment": "// NOTE: This can be skipped if there are no unmatched elements (i.e., `matchedCount`",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2517,
        "comment": "// equals `i`), unless we didn't visit _any_ elements in the above loop because we have",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2518,
        "comment": "// no element matchers and no seed.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2519,
        "comment": "// Incrementing an initially-string \"0\" `i` allows `i` to remain a string only in that",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2520,
        "comment": "// case, which will result in a \"00\" `matchedCount` that differs from `i` but is also",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2521,
        "comment": "// numerically zero.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2530,
        "comment": "// Reintegrate element matches to eliminate the need for sorting",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2539,
        "comment": "// Discard index placeholder values to get only actual matches",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2546,
        "comment": "// $FlowFixMe[incompatible-return]: https://github.com/facebook/flow/issues/1414",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2576,
        "comment": "\t *  @memberof DataTable#oApi",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2651,
        "comment": "// Search, expanding context for leading sibling combinators",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2721,
        "comment": "\t *  @param {int} rowIdx aoData row id",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2837,
        "comment": "// If this is a positional/relative selector, check membership in the returned set",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2848,
        "comment": "// Initialize a jQuery object",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2851,
        "comment": "// A central reference to the root jQuery(document)",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2856,
        "comment": "// Reading from data object, update the DOM",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 2998,
        "comment": "// Positional selectors never match, since there's no _selection_ context",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3003,
        "comment": "// Always skip document fragments",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3021,
        "comment": "// Determine the position of an element within the set",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3149,
        "comment": "// Convert String-formatted options into Object-formatted ones",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3158,
        "comment": "/*",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3161,
        "comment": " *\toptions: an optional list of space-separated options that will change how",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3162,
        "comment": " *\t\t\tthe callback list behaves or a more traditional option object",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3163,
        "comment": " *",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3164,
        "comment": " * By default a callback list will act like an event callback list and can be",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3166,
        "comment": "// Returns the composite rect of an element relative to its offsetParent.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3167,
        "comment": "// Composite means it takes into account transforms as well as layout.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3168,
        "comment": " *",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3169,
        "comment": " *\tonce:\t\t\twill ensure the callback list can only be fired once (like a Deferred)",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3171,
        "comment": "\t * Create the HTML header for the table",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3173,
        "comment": "\t *  @memberof DataTable#oApi",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3175,
        "comment": " *\tunique:\t\t\twill ensure a callback can only be added once (no duplicate in the list)",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3176,
        "comment": " *",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3177,
        "comment": " *\tstopOnFalse:\tinterrupt callings when a callback returns false",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3178,
        "comment": " *",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3179,
        "comment": " */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3182,
        "comment": "// Convert options from String-formatted to Object-formatted if needed",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3183,
        "comment": "// (we check in cache first)",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3188,
        "comment": "// Flag to know if list is currently firing",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3191,
        "comment": "// Last fire value for non-forgettable lists",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 3194,
        "comment": "// Add a row if needed",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 3197,
        "comment": "// Flag to prevent firing",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 3200,
        "comment": "// Actual callback list",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 3203,
        "comment": "// Queue of execution data for repeatable lists",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 3206,
        "comment": "// Index of currently firing callback (modified by add/remove as needed)",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 3209,
        "comment": "// Fire callbacks",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3212,
        "comment": "// Enforce single-firing",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3215,
        "comment": "// Execute callbacks for all pending executions,",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3216,
        "comment": "// respecting firingIndex overrides and runtime changes",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3226,
        "comment": "// Jump to end and forget the data so .add doesn't re-fire",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3240,
        "comment": "// Clean up if we're done firing for good",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3247,
        "comment": "// Otherwise, this object is spent",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3254,
        "comment": "// Actual Callbacks object",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3257,
        "comment": "// Add a callback or a collection of callbacks to the list",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3261,
        "comment": "// Make a copy of the master layout array, but with only the columns we want",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3275,
        "comment": "// Inspect recursively",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3295,
        "comment": "// Handle firing indexes",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3304,
        "comment": "// Check if a given callback is in the list.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 3305,
        "comment": "// If no argument is given, return whether or not list has callbacks attached.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 3312,
        "comment": "// Remove all callbacks from the list",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 3442,
        "comment": "// Keep pipe for back-compat",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3443,
        "comment": "/* fnDone, fnFail, fnProgress */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3449,
        "comment": "// Map tuples (progress, done, fail) to arguments (done, fail, progress)",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3452,
        "comment": "// deferred.progress(function() { bind to newDefer or newDefer.notify })",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3453,
        "comment": "// replaceChildren is faster, but only became widespread in 2020,",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 3454,
        "comment": "// so a fall back in jQuery is provided for older browsers.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 3482,
        "comment": "// eslint-disable-next-line import/no-unused-modules",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3483,
        "comment": "// https://promisesaplus.com/#point-59",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3484,
        "comment": "/*#__PURE__*/ /*#__PURE__*/",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3491,
        "comment": "// Support: Promises/A+ section 2.3.1",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3492,
        "comment": "// https://promisesaplus.com/#point-48",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3497,
        "comment": "// Support: Promises/A+ sections 2.3.3.1, 3.5",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3498,
        "comment": "// https://promisesaplus.com/#point-54",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3499,
        "comment": "// No filtering, so we want to just use the display master",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3500,
        "comment": "// Retrieve `then` only once",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3503,
        "comment": "// Support: Promises/A+ section 2.3.4",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3504,
        "comment": "// https://promisesaplus.com/#point-64",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3505,
        "comment": "// Only check objects and functions for thenability",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3510,
        "comment": "// Handle a returned thenable",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3513,
        "comment": "// Special processors (notify) just wait for resolution",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3521,
        "comment": "// Normal processors (resolve) also hook into progress",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3524,
        "comment": "// ...and disregard older resolution values",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3536,
        "comment": "   */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3539,
        "comment": "// Only substitute handlers pass on context",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3540,
        "comment": "// and multiple values (non-spec behavior)",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3546,
        "comment": "// MouseEvent.button value for the secondary button, usually the right button",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3547,
        "comment": "\t * for the renderer. This is done twice, once for above and once for below",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3552,
        "comment": "\t * @param {string} side `top` or `bottom`",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3565,
        "comment": "// Support: Promises/A+ section 2.3.3.3.4.1",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3566,
        "comment": "// https://promisesaplus.com/#point-61",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3567,
        "comment": "// Ignore post-resolution exceptions",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3570,
        "comment": "// Only substitute handlers pass on context",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3571,
        "comment": "// and multiple values (non-spec behavior)",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3582,
        "comment": "// Support: Promises/A+ section 2.3.3.3.1",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 3583,
        "comment": "// https://promisesaplus.com/#point-57",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 3584,
        "comment": "// Re-resolve promises immediately to dodge false rejection from",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3585,
        "comment": "// subsequent errors",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3590,
        "comment": "// Transform to an object with a contents property",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 3591,
        "comment": "// since it's otherwise lost when execution goes async",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 3595,
        "comment": "// Allow for an array or just a single object",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 3596,
        "comment": "// returning the stack, not an error instance, jQuery just passes",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 3597,
        "comment": "// it directly to `console.warn` so both will work; an instance",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 3598,
        "comment": "// just better cooperates with source maps.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 3609,
        "comment": "// progress_handlers.add( ... )",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3621,
        "comment": "// fulfilled_handlers.add( ... )",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3632,
        "comment": "// rejected_handlers.add( ... )",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3645,
        "comment": "// Get a promise for this deferred",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3646,
        "comment": "// If obj is provided, the promise aspect is added to the object",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3653,
        "comment": "// Add list-specific methods",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3658,
        "comment": "// promise.progress = list.add",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3659,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3660,
        "comment": "\t * Convert the contents of a row's layout object to nodes that can be inserted",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3663,
        "comment": "\t * @param {*} settings DataTables settings object",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3668,
        "comment": "// state = \"resolved\" (i.e., fulfilled)",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3669,
        "comment": "// state = \"rejected\"",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3674,
        "comment": "// fulfilled_callbacks.disable",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3677,
        "comment": "// rejected_handlers.disable",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3678,
        "comment": "// If this is a touch-enabled device we remove the extra",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3684,
        "comment": "// progress_handlers.lock",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3689,
        "comment": "// progress_handlers.fire",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3690,
        "comment": "// fulfilled_handlers.fire",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3691,
        "comment": "// rejected_handlers.fire",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3694,
        "comment": "// deferred.notify = function() { deferred.notifyWith(...) }",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3696,
        "comment": "// deferred.reject = function() { deferred.rejectWith(...) }",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3702,
        "comment": "// deferred.notifyWith = list.fireWith",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3703,
        "comment": "// deferred.resolveWith = list.fireWith",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3708,
        "comment": "// Make the deferred a promise",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3730,
        "comment": "// Legacy",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3734,
        "comment": "// the primary Deferred",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 3737,
        "comment": "// subordinate callback factory",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 3753,
        "comment": "// Use .then() to unwrap secondary thenables (cf. gh-3000)",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3771,
        "comment": "// These usually indicate a programmer mistake during development,",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3776,
        "comment": "// captured before the async barrier to get the original error cause",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3777,
        "comment": "// New container div",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3800,
        "comment": "// Static",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3810,
        "comment": "// registration.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3820,
        "comment": "// Is the DOM ready to be used? Set to true once it occurs.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3823,
        "comment": "// A counter to track how many items to wait for before",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3824,
        "comment": "// the ready event fires. See trac-6781",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3827,
        "comment": "// Handle when the DOM is ready",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3830,
        "comment": "// Abort if there are pending holds or we're already ready",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3835,
        "comment": "// Remember that the DOM is ready",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3838,
        "comment": "// If a normal DOM Ready event fired, decrement, and wait if need be",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3843,
        "comment": "// If not an UP | DOWN | ESCAPE key => not a dropdown command",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3850,
        "comment": "// The ready event handler and self cleanup method",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3858,
        "comment": "// after the browser event has already occurred.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3860,
        "comment": "// Older IE sometimes signals \"interactive\" too soon",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3864,
        "comment": "// Handle it asynchronously to allow scripts the opportunity to delay ready",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3869,
        "comment": "// Use the handy event callback",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3872,
        "comment": "// A fallback to window.onload, that will always work",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3879,
        "comment": "// Multifunctional method to get and set values of a collection",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3880,
        "comment": "// The value/s can optionally be executed if it's a function",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3886,
        "comment": "// Sets many values",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3893,
        "comment": "// Cache calculation for unique columns",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 3908,
        "comment": "// ...except when executing function values",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4016,
        "comment": "\t * @param {function} fn Callback function to run when data is obtained",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4034,
        "comment": "// Always use camelCase key (gh-2257)",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4041,
        "comment": "//   1. No key was specified",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4043,
        "comment": "//",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4048,
        "comment": "   * Class definition",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4049,
        "comment": "   */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4056,
        "comment": "// When the key is not a string, or both a key and value",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4057,
        "comment": "// Remove the data property as we've resolved it already and don't want",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4058,
        "comment": "// jQuery to do it again (it is restored at the end of the function)",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4101,
        "comment": "// Remove the expando if there's no more data",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4104,
        "comment": "// No url, so don't load any data. Just apply an empty data array",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 4105,
        "comment": "// to the object for the callback.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 4106,
        "comment": "// from DOM nodes, so set to undefined instead",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 4107,
        "comment": "// https://bugs.chromium.org/p/chromium/issues/detail?id=378607 (bug restricted)",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 4126,
        "comment": "   */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4127,
        "comment": "\t *  @memberof DataTable#oApi",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4128,
        "comment": "\t */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4129,
        "comment": "//\t2. Improve the module's maintainability by reducing the storage",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4130,
        "comment": "//\t\tpaths to a single mechanism.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4131,
        "comment": "//\t3. Use the same single mechanism to support \"private\" and \"user\" data.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4132,
        "comment": "//\t4. _Never_ expose \"private\" data to user code (TODO: Drop _data, _removeData)",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4133,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4134,
        "comment": "   * Class definition",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4217,
        "comment": "   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4227,
        "comment": "// The attrs elements can be null (trac-14894)",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4243,
        "comment": "// Sets multiple values",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4253,
        "comment": "// The calling jQuery object (element matches) is not empty",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4254,
        "comment": "// (and therefore has an element appears at this[ 0 ]) and the",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4256,
        "comment": "\t * Get the data from the JSON data source to use for drawing a table. Using",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4257,
        "comment": "\t * `_fnGetObjectDataFn` allows the data to be sourced from a property of the",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4260,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4261,
        "comment": "   * Class definition",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4267,
        "comment": "// Attempt to \"discover\" the data in",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4268,
        "comment": "// Could in inside a `dataSrc` object, or not!",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4281,
        "comment": "// We always store the camelCased key",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4303,
        "comment": "// Speed up dequeue by getting out quickly if this is just a lookup",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4326,
        "comment": "// If the fx queue is dequeued, always remove the progress sentinel",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4334,
        "comment": "\t * Filter the table using both the global filter and column based filtering",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4335,
        "comment": "\t *  @param {object} settings dataTables settings object",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4380,
        "comment": "// Ensure a hooks for this queue",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4444,
        "comment": "// Support: IE 9 - 11+, Edge 12 - 18+, iOS 10.0 - 10.2 only",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4445,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4457,
        "comment": "// isHiddenWithinTree might be called from jQuery#filter function;",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4458,
        "comment": "// in that case, element will be second argument",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 4461,
        "comment": "// Inline style trumps all",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 4466,
        "comment": "// Support: Firefox <=43 - 45",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4467,
        "comment": "// Static",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4489,
        "comment": "// Starting value computation is required for potential unit mismatches",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4521,
        "comment": "   * Bootstrap offcanvas.js",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4583,
        "comment": "// Since we force visibility upon cascade-hidden elements, an immediate (and slow)",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4599,
        "comment": "// Remember what we're overwriting",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4651,
        "comment": "// Support: Windows Web Apps (WWA)",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4663,
        "comment": "// Support: IE <=11 only",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4759,
        "comment": "// Convert non-html into a text node",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4763,
        "comment": "// Convert html into DOM nodes",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4767,
        "comment": "// Deserialize a standard representation",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4772,
        "comment": "// Descend through wrappers to the right content",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4778,
        "comment": "// Support: Android <=4.0 only, PhantomJS 1 only",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4810,
        "comment": "// Preserve script evaluation history",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4843,
        "comment": "// Different positioning depending on if scrolling is enabled or not",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 4846,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 4849,
        "comment": "   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 4916,
        "comment": "\t\t */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4921,
        "comment": "// Caller can pass in an object of custom data in lieu of the handler",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 4975,
        "comment": "// handleObj is passed to all event handlers",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5010,
        "comment": "// Add to the element's handler list, delegates in front",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5017,
        "comment": "// Keep track of which events have ever been used, for event optimization",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5023,
        "comment": "\t *",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5057,
        "comment": "// for the scrollbar",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5079,
        "comment": "// (avoids potential for endless recursion during removal of special event handlers)",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5091,
        "comment": "// of the indexes out.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 5102,
        "comment": "// Make a writable jQuery.Event from the native event object",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 5110,
        "comment": "// Use the fix-ed jQuery.Event rather than the (read-only) native event",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5124,
        "comment": "// Determine handlers",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5127,
        "comment": "// \"Hide\" the header and footer that we used for the sizing. We need to keep",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5136,
        "comment": "// If the event is namespaced, then each handler is only invoked if it is",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 5157,
        "comment": "// Call the postDispatch hook for the mapped type",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5174,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5178,
        "comment": "\t */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5179,
        "comment": "// Suppress spec-violating clicks indicating a non-primary pointer button (trac-3861)",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5180,
        "comment": "// https://www.w3.org/TR/DOM-Level-3-Events/#event-type-click",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5181,
        "comment": "// Not interested in doing column width calculation if auto-width is disabled",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5182,
        "comment": "// ...but not arrow key \"clicks\" of radio inputs, which can have `button` -1 (gh-2343)",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5187,
        "comment": "// Don't check non-elements (trac-13208)",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5188,
        "comment": "// If this is a touch-enabled device we remove the extra",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5195,
        "comment": "// Don't conflict with Object.prototype properties (trac-13203)",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5214,
        "comment": "// node in the data, assign any user defined widths, then insert it into",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5272,
        "comment": "// Claim the first handler",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5276,
        "comment": "// dataPriv.set( el, \"click\", ... )",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5300,
        "comment": "// For cross-browser consistency, suppress native .click() on links",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5301,
        "comment": "// Also prevent it if we're currently inside a leveraged native-event stack",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5314,
        "comment": "// collapse",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5315,
        "comment": "// Firefox doesn't alert if the returnValue field is not set.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5324,
        "comment": "// Ensure the presence of an event listener that handles manually-triggered",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5326,
        "comment": "// Get the width of each column in the constructed table",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5327,
        "comment": "// already occurred before other listeners are invoked.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5330,
        "comment": "// Missing `isSetup` indicates a trigger call, which must force setup through jQuery.event.add",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5351,
        "comment": "// Store arguments for use when handling the inner native event",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5352,
        "comment": "// There will always be at least one argument (an event object), so this array",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5353,
        "comment": "// will not be confused with a leftover capture object.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5357,
        "comment": "// Trigger the native event and capture its result",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5364,
        "comment": "// Cancel the outer synthetic event",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5371,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5372,
        "comment": "\t * Get the maximum strlen for each data column",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5373,
        "comment": "\t *  @param {object} settings dataTables settings object",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5374,
        "comment": "\t *  @param {int} colIdx column of interest",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5375,
        "comment": "\t *  @returns {string} string of the max length",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5376,
        "comment": "\t *  @memberof DataTable#oApi",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5381,
        "comment": "// If this is a native event triggered above, everything is now in order",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5382,
        "comment": "// DO NOT USE IT. Is only for backwards compatibility",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5385,
        "comment": "// ...and capture the result",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5392,
        "comment": "// Abort handling of the native event by all jQuery handlers while allowing",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5393,
        "comment": "// Remove id / name attributes from elements so they",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5394,
        "comment": "// don't interfere with existing elements",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5395,
        "comment": "// the native event is re-wrapped by a jQuery one on each level of the",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5396,
        "comment": "// propagation so the only way to stop it for jQuery is to stop it for",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5397,
        "comment": "// everyone via native `stopPropagation()`. This is not a problem for",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5398,
        "comment": "// focus/blur which don't bubble, but it does also stop click on checkboxes",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5399,
        "comment": "// and radios. We accept this limitation.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5409,
        "comment": "// This \"if\" is needed for plain objects",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5417,
        "comment": "/**",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5422,
        "comment": "\t */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5427,
        "comment": "// Events bubbling up the document may have been marked as prevented",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5428,
        "comment": "// by a handler lower down the tree; reflect the correct value.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5432,
        "comment": "// Support: Android <=2.3 only",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5437,
        "comment": "// Create target properties",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5438,
        "comment": "// Support: Safari <=6 - 7 only",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5439,
        "comment": "// Target should not be a text node (trac-504, trac-13143)",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5447,
        "comment": "// Event type",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5452,
        "comment": "// Put explicitly provided properties onto the event object",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5457,
        "comment": "// In the future can be replaced with:",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5460,
        "comment": "// Mark it as fixed",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5464,
        "comment": "// jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5465,
        "comment": "// Legacy support for `orderCellsTop`",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5504,
        "comment": "   */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 5544,
        "comment": "// Support: IE 11+",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 5545,
        "comment": "// Attach a single focusin/focusout handler on the document while someone wants",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 5546,
        "comment": "// focus/blur. This is because the former are synchronous in IE while the latter",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 5547,
        "comment": "// Rather than needing an `indexOf` on master array, we can create a map",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 5549,
        "comment": "// `handle` from private data would already wrap the event, but we need",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 5550,
        "comment": "// to change the `type` here.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 5559,
        "comment": "// ...then, handle focus/blur",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 5561,
        "comment": "// focus/blur don't bubble while focusin/focusout do; simulate the former by only",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5566,
        "comment": "// `jQuery.event.add`, so event handle will already have been set",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5581,
        "comment": "// Utilize native event if possible so blur/focus sequence is correct",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5586,
        "comment": "// Claim the first handler",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5587,
        "comment": "// dataPriv.set( this, \"focus\", ... )",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5588,
        "comment": "// Object",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5593,
        "comment": "// Support: IE 9 - 11+",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5594,
        "comment": "// We use the same native handler for focusin & focus (and focusout & blur)",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5610,
        "comment": "// Force setup before trigger",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5613,
        "comment": "// Return non-false to allow normal event-path propagation",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5635,
        "comment": "// Suppress native focus or blur if we're currently inside",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5636,
        "comment": "// a leveraged native-event stack",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5644,
        "comment": "// Support: Firefox <=44",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5645,
        "comment": "// Firefox doesn't have focus(in | out) events",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5646,
        "comment": "// Related ticket - https://bugzilla.mozilla.org/show_bug.cgi?id=687787",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5647,
        "comment": "//",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5648,
        "comment": "// Support: Chrome <=48 - 49, Safari <=9.0 - 9.1",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5649,
        "comment": "// focus(in | out) events fire after focus & blur events,",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5650,
        "comment": "// which is spec violation - http://www.w3.org/TR/DOM-Level-3-Events/#events-focusevent-event-order",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5651,
        "comment": "// Related ticket - https://bugs.chromium.org/p/chromium/issues/detail?id=449857",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5654,
        "comment": "// Public",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5659,
        "comment": "// Handle: regular nodes (via `this.ownerDocument`), window",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5665,
        "comment": "// Support: IE 9 - 11+",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5667,
        "comment": "// so we need to coordinate setup & teardown parts between those events.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5668,
        "comment": "// Use `delegateType` as the key as `type` is already used by `leverageNative`.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5701,
        "comment": "// Support: Safari 7 only",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5721,
        "comment": "// For mouseenter/leave call the handler if related is outside the target.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5722,
        "comment": "// NB: No relatedTarget if the mouse left/entered the browser window",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5782,
        "comment": "// Support: IE <=10 - 11, Edge 12 - 13 only",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5858,
        "comment": "// Fails to return the selected option to the default selected state when cloning options",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 5866,
        "comment": "// add it as itself",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 5946,
        "comment": "// Use / populate cache",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 6177,
        "comment": "// If using innerHTML throws an exception, use the fallback method",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 6224,
        "comment": "// Support: Android <=4.0 only, PhantomJS 1 only",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 6225,
        "comment": "// .get() because push.apply(_, arraylike) throws on ancient WebKit",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 6240,
        "comment": "\t * able to override them, but we do want to deep copy arrays.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 6310,
        "comment": "\t * Register a callback function. Easily allows a callback function to be added to",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 6319,
        "comment": "// Nullify the div so it wouldn't be stored in the memory and",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 6320,
        "comment": "// it will also be a sign that checks already performed",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 6333,
        "comment": "\t *  @param {string} eventName Name of the jQuery custom event to trigger. If",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 6338,
        "comment": "\t *  @memberof DataTable#oApi",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 6339,
        "comment": "\t */",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 6422,
        "comment": "\t *  @param {object} settings dataTables settings object",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 6441,
        "comment": "\t * @param {*} str String with values to replace",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 6449,
        "comment": "// Firefox only trims leading whitespace. Chrome just collapses",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 6450,
        "comment": "// both leading & trailing whitespace to a single space.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 6451,
        "comment": "//",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 6602,
        "comment": "\t *     api.draw();",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 6605,
        "comment": "\t *     api.row.add( {...} ).draw();",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 6609,
        "comment": "\t *   used to define which DataTables enhanced tables this API will operate on.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 6614,
        "comment": "\t *   * `node` - `TABLE` node which has already been formed into a DataTable.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 6686,
        "comment": "// Fall back to offsetWidth/offsetHeight when value is \"auto\"",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 6768,
        "comment": "// SVG-related",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 6783,
        "comment": "// Don't set styles on text and comment nodes",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 6909,
        "comment": "// getBoundingClientRect().width unless display is changed.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 6910,
        "comment": "// Support: IE <=11 only",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 6911,
        "comment": "// Running getBoundingClientRect on a disconnected node",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 6912,
        "comment": "// in IE throws an error.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 6981,
        "comment": "// These hooks are used by animate to expand properties",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 6992,
        "comment": "// Assumes a single number if not a string",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 7056,
        "comment": "// Perform a jQuery selector on the table nodes",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 7057,
        "comment": "// Default value for a checkbox should be \"on\"",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 7060,
        "comment": "// Support: IE <=11 only",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 7061,
        "comment": "// Must access selectedIndex to make default options select",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 7064,
        "comment": "// Need to translate back from the table node to the settings",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 7065,
        "comment": "// An input loses its value after becoming a radio",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 7425,
        "comment": "\t *",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 7431,
        "comment": "// Only assign if different to avoid unneeded rendering.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 7485,
        "comment": "// Store className if set",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 7491,
        "comment": "// Otherwise bring back whatever was previously saved (if anything),",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 7492,
        "comment": "// falling back to the empty string if nothing was stored.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 7639,
        "comment": "// Get the specific value for the option",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 7642,
        "comment": "// applied | removed",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 7647,
        "comment": "// Multi-Selects return an array",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 7854,
        "comment": "// For server-side processing tables - subtract the deleted row from the count",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 7861,
        "comment": "// Prevent re-triggering of the same event, since we already bubbled it above",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 7886,
        "comment": "// Piggyback on a donor event to simulate a different one",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 7934,
        "comment": "// Treat each array item as a scalar.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 7939,
        "comment": "// Item is non-scalar (array or object), encode its numeric index.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 8000,
        "comment": "// Return the resulting serialization",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 8234,
        "comment": "// offset() relates an element's border box to the document origin",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 8237,
        "comment": "// only when `child()` was called with parameters (without",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 8284,
        "comment": "// Assume position:fixed implies availability of getBoundingClientRect",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 8290,
        "comment": "// Account for the *real* offset parent, which can be the document or its root element",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 8291,
        "comment": "// when a statically positioned element is identified",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-05-25 15:39:36+02:00"
    },
    {
        "file": "datatables.js",
        "line": 8302,
        "comment": "// Incorporate borders into its offset, since they are outside its content origin",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 8316,
        "comment": "// Selector - all",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 8317,
        "comment": "// 1) For the element inside the iframe without offsetParent, this method will return",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 8346,
        "comment": "// Coalesce documents and windows",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 8373,
        "comment": "// Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 8374,
        "comment": "// Blink bug: https://bugs.chromium.org/p/chromium/issues/detail?id=589347",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 8375,
        "comment": "// getComputedStyle returns percent when specified for top/left/bottom/right;",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 8376,
        "comment": "// rather than make the css module depend on the offset module, just check for it here",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 8393,
        "comment": "// Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 8411,
        "comment": "// $( window ).outerWidth/Height return w/h including scrollbars (gh-1729)",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 8417,
        "comment": "// Get document width or height",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 8421,
        "comment": "// Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height],",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 8422,
        "comment": "// whichever is greatest",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 8432,
        "comment": "// Get width or height on the element, requesting but not forcing parseFloat",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 8435,
        "comment": "// Insert column",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 8488,
        "comment": "// Support: Android <=4.0 only",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 8489,
        "comment": "// Make sure we trim BOM and NBSP",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 8490,
        "comment": "// Require that the \"whitespace run\" starts from a non-whitespace",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 8491,
        "comment": "// to avoid O(N^2) behavior when the engine would try matching \"\\s+$\" at each space position.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 8494,
        "comment": "// Bind a function to a context, optionally partially applying any",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 8495,
        "comment": "// arguments.",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 8496,
        "comment": "// jQuery.proxy is deprecated to promote standards (specifically Function#bind)",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "datatables.js",
        "line": 8497,
        "comment": "// However, it is not slated for removal any time soon",
        "comment_time": "2024-07-12 22:59:48+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "global_domains.py",
        "line": 21,
        "comment": "// Reload the page by setting the exact same href",
        "comment_time": "2024-06-23 21:31:02+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "global_domains.py",
        "line": 23,
        "comment": "// Check if the output is a valid IP",
        "comment_time": "2024-06-23 21:31:02+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "global_domains.py",
        "line": 13,
        "comment": "   * --------------------------------------------------------------------------",
        "comment_time": "2024-06-23 21:31:02+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "global_domains.py",
        "line": 14,
        "comment": "   * Bootstrap dom/data.js",
        "comment_time": "2024-06-23 21:31:02+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "global_domains.py",
        "line": 21,
        "comment": "// Reload the page by setting the exact same href",
        "comment_time": "2024-06-23 21:31:02+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "global_domains.py",
        "line": 13,
        "comment": "   * --------------------------------------------------------------------------",
        "comment_time": "2024-06-23 21:31:02+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "global_domains.py",
        "line": 14,
        "comment": "   * Bootstrap dom/data.js",
        "comment_time": "2024-06-23 21:31:02+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "global_domains.py",
        "line": 21,
        "comment": "// Reload the page by setting the exact same href",
        "comment_time": "2024-06-23 21:31:02+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "global_domains.py",
        "line": 23,
        "comment": "// Check if the output is a valid IP",
        "comment_time": "2024-06-23 21:31:02+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "global_domains.py",
        "line": 24,
        "comment": " *",
        "comment_time": "2024-06-23 21:31:02+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "global_domains.py",
        "line": 25,
        "comment": " * This source file is free software, available under the following license:",
        "comment_time": "2024-06-23 21:31:02+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "global_domains.py",
        "line": 80,
        "comment": "// This is for backwards compatibility",
        "comment_time": "2024-06-23 21:31:02+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "global_domains.py",
        "line": 13,
        "comment": "   * --------------------------------------------------------------------------",
        "comment_time": "2024-06-23 21:31:02+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "global_domains.py",
        "line": 14,
        "comment": "   * Bootstrap dom/data.js",
        "comment_time": "2024-06-23 21:31:02+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "global_domains.py",
        "line": 21,
        "comment": "// Reload the page by setting the exact same href",
        "comment_time": "2024-06-23 21:31:02+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "global_domains.py",
        "line": 23,
        "comment": "// Check if the output is a valid IP",
        "comment_time": "2024-06-23 21:31:02+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "global_domains.py",
        "line": 24,
        "comment": " *",
        "comment_time": "2024-06-23 21:31:02+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "global_domains.py",
        "line": 25,
        "comment": " * This source file is free software, available under the following license:",
        "comment_time": "2024-06-23 21:31:02+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "global_domains.py",
        "line": 21,
        "comment": "// Reload the page by setting the exact same href",
        "comment_time": "2024-06-23 21:31:02+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "global_domains.py",
        "line": 23,
        "comment": "// Check if the output is a valid IP",
        "comment_time": "2024-06-23 21:31:02+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "global_domains.py",
        "line": 80,
        "comment": "// This is for backwards compatibility",
        "comment_time": "2024-06-23 21:31:02+02:00",
        "last_code_change_time": "2024-02-25 23:26:46+01:00"
    },
    {
        "file": "admin.js",
        "line": 110,
        "comment": "// object that can be bashed around",
        "comment_time": "2024-08-18 21:04:22+02:00",
        "last_code_change_time": "2024-07-12 22:59:48+02:00"
    }
]