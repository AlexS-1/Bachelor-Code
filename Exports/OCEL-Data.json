{
  "objectTypes": [
    {
      "attributes": [
        {
          "name": "username",
          "type": "string"
        },
        {
          "name": "rank",
          "type": "string"
        },
        {
          "name": "is-bot",
          "type": "boolean"
        }
      ],
      "name": "user"
    },
    {
      "attributes": [
        {
          "name": "message",
          "type": "string"
        },
        {
          "name": "description",
          "type": "string"
        },
        {
          "name": "to",
          "type": "string"
        }
      ],
      "name": "commit"
    },
    {
      "attributes": [
        {
          "name": "title",
          "type": "string"
        },
        {
          "name": "description",
          "type": "string"
        },
        {
          "name": "state",
          "type": "string"
        }
      ],
      "name": "pull_request"
    },
    {
      "attributes": [
        {
          "name": "filename",
          "type": "string"
        },
        {
          "name": "method_count",
          "type": "int"
        },
        {
          "name": "theta_1",
          "type": "int"
        },
        {
          "name": "theta_2",
          "type": "int"
        },
        {
          "name": "N_1",
          "type": "int"
        },
        {
          "name": "N_2",
          "type": "int"
        },
        {
          "name": "loc",
          "type": "int"
        },
        {
          "name": "lloc",
          "type": "int"
        },
        {
          "name": "sloc",
          "type": "int"
        },
        {
          "name": "cloc",
          "type": "int"
        },
        {
          "name": "dloc",
          "type": "int"
        },
        {
          "name": "blank_lines",
          "type": "int"
        },
        {
          "name": "pylint_score",
          "type": "float"
        }
      ],
      "name": "file"
    }
  ],
  "eventTypes": [
    {
      "attributes": [],
      "name": "commit"
    },
    {
      "attributes": [],
      "name": "change_file"
    },
    {
      "attributes": [],
      "name": "rereopen_pull_request"
    },
    {
      "attributes": [],
      "name": "add_label"
    },
    {
      "attributes": [],
      "name": "remove_label"
    },
    {
      "attributes": [],
      "name": "open_pull_request"
    },
    {
      "attributes": [],
      "name": "close_pull_request"
    },
    {
      "attributes": [],
      "name": "merge_pull_request"
    },
    {
      "attributes": [],
      "name": "rename_pull_request"
    },
    {
      "attributes": [],
      "name": "comment_pull_request"
    },
    {
      "attributes": [],
      "name": "mark_ready_for_review"
    },
    {
      "attributes": [],
      "name": "add_review_request"
    },
    {
      "attributes": [],
      "name": "remove_review_request"
    },
    {
      "attributes": [],
      "name": "comment_review"
    },
    {
      "attributes": [],
      "name": "suggest_changes_as_review"
    },
    {
      "attributes": [],
      "name": "approve_review"
    },
    {
      "attributes": [],
      "name": "dismiss_review"
    }
  ],
  "objects": [
    {
      "type": "user",
      "attributes": [
        {
          "name": "username",
          "value": "JustinXre2020",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "rank",
          "value": "CONTRIBUTOR",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "is-bot",
          "value": "False",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "rank",
          "value": "NONE",
          "time": "2025-05-26T02:23:47Z"
        }
      ],
      "relationships": [
        {
          "objectId": "Xulong Xiao",
          "qualifier": "name"
        }
      ],
      "id": "Xulong Xiao"
    },
    {
      "type": "pull_request",
      "attributes": [
        {
          "name": "title",
          "value": "fix: the application showing 404 after successfully uploading resume",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "description",
          "value": "## Pull Request Title\r\n<!-- Provide a concise and descriptive title for the pull request -->\r\nFix a bug that the application showing 404 after successfully uploading resume\r\n\r\n## Related Issue\r\n<!-- If this pull request is related to an issue, please link it here using the \"#\" symbol followed by the issue number (e.g., #123) -->\r\n[#372](https://github.com/srbhr/Resume-Matcher/issues/372)\r\n\r\n\r\n## Description\r\n<!-- Describe the changes made in this pull request. What problem does it solve or what feature does it add/modify? -->\r\nUpdated the correct routing address\r\n\r\n## Type\r\n<!-- Check the relevant options by putting an \"x\" in the brackets -->\r\n\r\n- [x] Bug Fix\r\n- [ ] Feature Enhancement\r\n- [ ] Documentation Update\r\n- [ ] Code Refactoring\r\n- [ ] Other (please specify): \r\n\r\n## Proposed Changes\r\n<!-- List the specific changes made in this pull request -->\r\n\r\n- Remove the `uploads/` from the original routing address \r\n\r\n## Screenshots / Code Snippets (if applicable)\r\n<!-- Include any relevant screenshots or code snippets that help visualize the changes made -->\r\n![image](https://github.com/user-attachments/assets/07583e85-7d8a-4059-9693-cc43b0d2a778)\r\n\r\n\r\n## How to Test\r\n<!-- Provide step-by-step instructions or a checklist for testing the changes in this pull request -->\r\n\r\n1. Open up application with `npm run dev`\r\n2. Upload a resume\r\n3. Check if the application shows 404\r\n\r\n## Checklist\r\n<!-- Put an \"x\" in the brackets for the items that apply to this pull request -->\r\n\r\n- [x] The code compiles successfully without any errors or warnings\r\n- [x] The changes have been tested and verified\r\n- [ ] The documentation has been updated (if applicable)\r\n- [x] The changes follow the project's coding guidelines and best practices\r\n- [x] The commit messages are descriptive and follow the project's guidelines\r\n- [ ] All tests (if applicable) pass successfully\r\n- [x] This pull request has been linked to the related issue (if applicable)\r\n\r\n## Additional Information\r\n<!-- Add any other information about the pull request that you think might be helpful -->\r\n\r\n\n\n<!-- This is an auto-generated comment: release notes by coderabbit.ai -->\n\n## Summary by CodeRabbit\n\n- **Bug Fixes**\n  - Updated the redirect URL after a successful file upload to point to the jobs page instead of the upload page.\n\n<!-- end of auto-generated comment: release notes by coderabbit.ai -->",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "state",
          "value": "open",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": "apps/frontend/components/common/file-upload.tsx",
          "qualifier": "files"
        },
        {
          "objectId": "Xulong Xiao",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "apps/frontend/components/common/file-upload.tsx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Xulong Xiao",
          "qualifier": "has-participant"
        },
        {
          "objectId": "d012fb3aab85a0b2722a875e7bc3398f578733b7",
          "qualifier": "commits"
        },
        {
          "objectId": "fc46d27bd7997896534bc6dda369c25ee2314287",
          "qualifier": "is-merged-with"
        },
        {
          "objectId": "d012fb3aab85a0b2722a875e7bc3398f578733b7",
          "qualifier": "formalises"
        }
      ],
      "id": "376"
    },
    {
      "type": "user",
      "attributes": [
        {
          "name": "username",
          "value": "coderabbitai[bot]",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "rank",
          "value": "NONE",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "is-bot",
          "value": "True",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": "coderabbitai[bot]",
          "qualifier": "name"
        }
      ],
      "id": "coderabbitai[bot]"
    },
    {
      "type": "user",
      "attributes": [
        {
          "name": "username",
          "value": "srbhr",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "rank",
          "value": "NONE",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "is-bot",
          "value": "False",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "rank",
          "value": "OWNER",
          "time": "2025-05-28T12:21:22Z"
        }
      ],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "name"
        }
      ],
      "id": "Saurabh Rai"
    },
    {
      "type": "user",
      "attributes": [
        {
          "name": "username",
          "value": "rrvrs",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "rank",
          "value": "NONE",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "is-bot",
          "value": "False",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "rank",
          "value": "CONTRIBUTOR",
          "time": "2025-05-28T12:11:57Z"
        }
      ],
      "relationships": [
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "name"
        }
      ],
      "id": "Rahul Veer Singh"
    },
    {
      "type": "user",
      "attributes": [
        {
          "name": "username",
          "value": "coderabbitai",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "rank",
          "value": "NONE",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "is-bot",
          "value": "True",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": "CodeRabbit",
          "qualifier": "name"
        }
      ],
      "id": "CodeRabbit"
    },
    {
      "type": "user",
      "attributes": [
        {
          "name": "username",
          "value": "SoorajSNBlaze333",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "rank",
          "value": "NONE",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "is-bot",
          "value": "False",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "rank",
          "value": "CONTRIBUTOR",
          "time": "2025-03-26T19:53:14Z"
        }
      ],
      "relationships": [
        {
          "objectId": "Sooraj Sivadasan Nair",
          "qualifier": "name"
        }
      ],
      "id": "Sooraj Sivadasan Nair"
    },
    {
      "type": "user",
      "attributes": [
        {
          "name": "username",
          "value": "dependabot[bot]",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "rank",
          "value": "NONE",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "is-bot",
          "value": "True",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "rank",
          "value": "CONTRIBUTOR",
          "time": "2019-05-23T08:22:16Z"
        }
      ],
      "relationships": [
        {
          "objectId": "dependabot[bot]",
          "qualifier": "name"
        }
      ],
      "id": "dependabot[bot]"
    },
    {
      "type": "user",
      "attributes": [
        {
          "name": "username",
          "value": "Nawajish10",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "rank",
          "value": "NONE",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "is-bot",
          "value": "False",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": "Nawajish10",
          "qualifier": "name"
        }
      ],
      "id": "Nawajish10"
    },
    {
      "type": "pull_request",
      "attributes": [
        {
          "name": "title",
          "value": "fix: Eslint checks and Format using Prettier",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "description",
          "value": "## Pull Request Title\r\nEslint checks and Format using Prettier\r\n\r\n## Description\r\n- This PR adds the ability for formatting using Prettier using the prettier config. (Best when used with format on save with IDE enabled - Added steps in `SETUP.md`).\r\n- Also adds `.editorconfig` to keep consistency between multiple user systems.\r\n- Also fixes the `css` directory to be moved to correct location. (was moved outside).\r\n\r\n## Type\r\n- [x] Bug Fix\r\n- [ ] Feature Enhancement\r\n- [x] Documentation Update\r\n- [x] Code Refactoring\r\n- [ ] Other (please specify): \r\n\r\n## Checklist\r\n- [x] The code compiles successfully without any errors or warnings\r\n- [x] The changes have been tested and verified\r\n- [x] The documentation has been updated (if applicable)\r\n- [x] The changes follow the project's coding guidelines and best practices\r\n- [x] The commit messages are descriptive and follow the project's guidelines\r\n- [ ] All tests (if applicable) pass successfully\r\n- [ ] This pull request has been linked to the related issue (if applicable)\n\n<!-- This is an auto-generated comment: release notes by coderabbit.ai -->\n## Summary by CodeRabbit\n\n- **Chores**\n  - Introduced Prettier and EditorConfig configuration files to standardize code formatting across the project.\n  - Updated ESLint configuration to enforce Prettier formatting rules as errors.\n  - Added and updated scripts in the frontend package for separate linting and formatting commands.\n  - Added documentation on formatting practices and improved readability in the setup guide.\n  - Expanded backend `.gitignore` to exclude additional database files.\n- **Style**\n  - Reformatted code and documentation for consistent indentation, spacing, and styling without altering functionality.\n  - Updated frontend layout components for simplified structure and refined font and styling usage.\n<!-- end of auto-generated comment: release notes by coderabbit.ai -->",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "state",
          "value": "open",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": ".editorconfig",
          "qualifier": "files"
        },
        {
          "objectId": "SETUP.md",
          "qualifier": "files"
        },
        {
          "objectId": "apps/backend/.gitignore",
          "qualifier": "files"
        },
        {
          "objectId": "apps/frontend/.prettierrc",
          "qualifier": "files"
        },
        {
          "objectId": "apps/frontend/app/(default)/css/globals.css",
          "qualifier": "files"
        },
        {
          "objectId": "apps/frontend/app/(default)/layout.tsx",
          "qualifier": "files"
        },
        {
          "objectId": "apps/frontend/app/layout.tsx",
          "qualifier": "files"
        },
        {
          "objectId": "apps/frontend/eslint.config.mjs",
          "qualifier": "files"
        },
        {
          "objectId": "apps/frontend/package-lock.json",
          "qualifier": "files"
        },
        {
          "objectId": "apps/frontend/package.json",
          "qualifier": "files"
        },
        {
          "objectId": "Sooraj Sivadasan Nair",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": ".editorconfig",
          "qualifier": "aggregates"
        },
        {
          "objectId": "SETUP.md",
          "qualifier": "aggregates"
        },
        {
          "objectId": "apps/backend/.gitignore",
          "qualifier": "aggregates"
        },
        {
          "objectId": "apps/frontend/.prettierrc",
          "qualifier": "aggregates"
        },
        {
          "objectId": "apps/frontend/app/(default)/css/globals.css",
          "qualifier": "aggregates"
        },
        {
          "objectId": "apps/frontend/app/(default)/layout.tsx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "apps/frontend/app/layout.tsx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "apps/frontend/eslint.config.mjs",
          "qualifier": "aggregates"
        },
        {
          "objectId": "apps/frontend/package-lock.json",
          "qualifier": "aggregates"
        },
        {
          "objectId": "apps/frontend/package.json",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Sooraj Sivadasan Nair",
          "qualifier": "has-participant"
        },
        {
          "objectId": "6bdac93c8704008fd42ad9a8bd037463518b3516",
          "qualifier": "commits"
        },
        {
          "objectId": "24bf1eb8818112fb0a0ecb0511fee667672bd29f",
          "qualifier": "commits"
        },
        {
          "objectId": "99e422ac9dc2c24396ada9a68c1ef8a59e2ffba8",
          "qualifier": "commits"
        },
        {
          "objectId": "a2eaaeb75c9ec715463ef3ea0fcd30f2dc9ded54",
          "qualifier": "commits"
        },
        {
          "objectId": "ac764b813928fcdc728e447a2021029b905afb77",
          "qualifier": "commits"
        },
        {
          "objectId": "89ae7607dd6983fa9226b4b005e337f9520ad0b8",
          "qualifier": "commits"
        },
        {
          "objectId": "26450d172bed387a6f401b47f8ea658c45580483",
          "qualifier": "commits"
        },
        {
          "objectId": "024e9ff4776318313008c5873fa3bd5cb073b52e",
          "qualifier": "commits"
        },
        {
          "objectId": "0e7ddd3064548edc69f9be84ec9158c1301cb244",
          "qualifier": "commits"
        },
        {
          "objectId": "d2a4654fd46a45a0730b0e417836b1e35f16524e",
          "qualifier": "is-merged-with"
        },
        {
          "objectId": "6bdac93c8704008fd42ad9a8bd037463518b3516",
          "qualifier": "formalises"
        },
        {
          "objectId": "24bf1eb8818112fb0a0ecb0511fee667672bd29f",
          "qualifier": "formalises"
        },
        {
          "objectId": "99e422ac9dc2c24396ada9a68c1ef8a59e2ffba8",
          "qualifier": "formalises"
        },
        {
          "objectId": "a2eaaeb75c9ec715463ef3ea0fcd30f2dc9ded54",
          "qualifier": "formalises"
        },
        {
          "objectId": "ac764b813928fcdc728e447a2021029b905afb77",
          "qualifier": "formalises"
        },
        {
          "objectId": "89ae7607dd6983fa9226b4b005e337f9520ad0b8",
          "qualifier": "formalises"
        },
        {
          "objectId": "26450d172bed387a6f401b47f8ea658c45580483",
          "qualifier": "formalises"
        },
        {
          "objectId": "024e9ff4776318313008c5873fa3bd5cb073b52e",
          "qualifier": "formalises"
        },
        {
          "objectId": "0e7ddd3064548edc69f9be84ec9158c1301cb244",
          "qualifier": "formalises"
        }
      ],
      "id": "375"
    },
    {
      "type": "pull_request",
      "attributes": [
        {
          "name": "title",
          "value": "Resume dashboard Previewer Wiring",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "description",
          "value": "## Pull Request Title\r\n<!-- Provide a concise and descriptive title for the pull request -->\r\n\r\n## Related Issue\r\n<!-- If this pull request is related to an issue, please link it here using the \"#\" symbol followed by the issue number (e.g., #123) -->\r\n\r\n## Description\r\n<!-- Describe the changes made in this pull request. What problem does it solve or what feature does it add/modify? -->\r\n\r\n## Type\r\n<!-- Check the relevant options by putting an \"x\" in the brackets -->\r\n\r\n- [ ] Bug Fix\r\n- [ ] Feature Enhancement\r\n- [ ] Documentation Update\r\n- [ ] Code Refactoring\r\n- [ ] Other (please specify): \r\n\r\n## Proposed Changes\r\n<!-- List the specific changes made in this pull request -->\r\n\r\n- \r\n- \r\n- \r\n\r\n## Screenshots / Code Snippets (if applicable)\r\n<!-- Include any relevant screenshots or code snippets that help visualize the changes made -->\r\n\r\n## How to Test\r\n<!-- Provide step-by-step instructions or a checklist for testing the changes in this pull request -->\r\n\r\n1. \r\n2. \r\n3. \r\n\r\n## Checklist\r\n<!-- Put an \"x\" in the brackets for the items that apply to this pull request -->\r\n\r\n- [ ] The code compiles successfully without any errors or warnings\r\n- [ ] The changes have been tested and verified\r\n- [ ] The documentation has been updated (if applicable)\r\n- [ ] The changes follow the project's coding guidelines and best practices\r\n- [ ] The commit messages are descriptive and follow the project's guidelines\r\n- [ ] All tests (if applicable) pass successfully\r\n- [ ] This pull request has been linked to the related issue (if applicable)\r\n\r\n## Additional Information\r\n<!-- Add any other information about the pull request that you think might be helpful -->\r\n\r\n\n\n<!-- This is an auto-generated comment: release notes by coderabbit.ai -->\n\n## Summary by CodeRabbit\n\n- **New Features**\n  - Introduced a context provider for sharing resume preview data across frontend components.\n  - Added API integration for uploading job descriptions and improving resumes, enabling a two-step flow: upload job description, then improve the resume.\n  - Dashboard now displays improved resume previews and analysis results, updating dynamically from context.\n\n- **Improvements**\n  - Enhanced user feedback with clearer success and error messages during job description upload and resume improvement.\n  - Redesigned dashboard layout for better separation of job listings, analysis, and resume display.\n  - Improved resume analysis and preview components to accept dynamic data via props.\n\n- **Refactor**\n  - Streamlined backend resume score improvement logic for efficiency and reliability.\n  - Updated frontend layout and component structures for consistency and maintainability.\n\n- **Bug Fixes**\n  - Made the city field in resume location data optional to prevent validation errors.\n\n<!-- end of auto-generated comment: release notes by coderabbit.ai -->",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "state",
          "value": "open",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": "apps/backend/app/schemas/pydantic/structured_job.py",
          "qualifier": "files"
        },
        {
          "objectId": "apps/backend/app/services/score_improvement_service.py",
          "qualifier": "files"
        },
        {
          "objectId": "apps/frontend/app/(default)/dashboard/page.tsx",
          "qualifier": "files"
        },
        {
          "objectId": "apps/frontend/app/(default)/layout.tsx",
          "qualifier": "files"
        },
        {
          "objectId": "apps/frontend/components/common/resume_previewer_context.tsx",
          "qualifier": "files"
        },
        {
          "objectId": "apps/frontend/components/dashboard/resume-analysis.tsx",
          "qualifier": "files"
        },
        {
          "objectId": "apps/frontend/components/dashboard/resume-component.tsx",
          "qualifier": "files"
        },
        {
          "objectId": "apps/frontend/components/jd-upload/text-area.tsx",
          "qualifier": "files"
        },
        {
          "objectId": "apps/frontend/lib/api/resume.ts",
          "qualifier": "files"
        },
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "apps/backend/app/schemas/pydantic/structured_job.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "apps/backend/app/services/score_improvement_service.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "apps/frontend/app/(default)/dashboard/page.tsx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "apps/frontend/app/(default)/layout.tsx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "apps/frontend/components/common/resume_previewer_context.tsx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "apps/frontend/components/dashboard/resume-analysis.tsx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "apps/frontend/components/dashboard/resume-component.tsx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "apps/frontend/components/jd-upload/text-area.tsx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "apps/frontend/lib/api/resume.ts",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "has-participant"
        },
        {
          "objectId": "cab845e52531a83a4c6c36a95444436f2500cd53",
          "qualifier": "commits"
        },
        {
          "objectId": "1e6b84731eeea8f2e31e4f83f8607ed48639fcfe",
          "qualifier": "is-merged-with"
        },
        {
          "objectId": "cab845e52531a83a4c6c36a95444436f2500cd53",
          "qualifier": "formalises"
        }
      ],
      "id": "373"
    },
    {
      "type": "pull_request",
      "attributes": [
        {
          "name": "title",
          "value": "Resume dashboard Previewer",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "description",
          "value": "## Pull Request Title\r\n<!-- Provide a concise and descriptive title for the pull request -->\r\n\r\n## Related Issue\r\n<!-- If this pull request is related to an issue, please link it here using the \"#\" symbol followed by the issue number (e.g., #123) -->\r\n\r\n## Description\r\n<!-- Describe the changes made in this pull request. What problem does it solve or what feature does it add/modify? -->\r\n\r\n## Type\r\n<!-- Check the relevant options by putting an \"x\" in the brackets -->\r\n\r\n- [ ] Bug Fix\r\n- [ ] Feature Enhancement\r\n- [ ] Documentation Update\r\n- [ ] Code Refactoring\r\n- [ ] Other (please specify): \r\n\r\n## Proposed Changes\r\n<!-- List the specific changes made in this pull request -->\r\n\r\n- \r\n- \r\n- \r\n\r\n## Screenshots / Code Snippets (if applicable)\r\n<!-- Include any relevant screenshots or code snippets that help visualize the changes made -->\r\n\r\n## How to Test\r\n<!-- Provide step-by-step instructions or a checklist for testing the changes in this pull request -->\r\n\r\n1. \r\n2. \r\n3. \r\n\r\n## Checklist\r\n<!-- Put an \"x\" in the brackets for the items that apply to this pull request -->\r\n\r\n- [ ] The code compiles successfully without any errors or warnings\r\n- [ ] The changes have been tested and verified\r\n- [ ] The documentation has been updated (if applicable)\r\n- [ ] The changes follow the project's coding guidelines and best practices\r\n- [ ] The commit messages are descriptive and follow the project's guidelines\r\n- [ ] All tests (if applicable) pass successfully\r\n- [ ] This pull request has been linked to the related issue (if applicable)\r\n\r\n## Additional Information\r\n<!-- Add any other information about the pull request that you think might be helpful -->\r\n\r\n\n\n<!-- This is an auto-generated comment: release notes by coderabbit.ai -->\n\n## Summary by CodeRabbit\n\n- **New Features**\n  - Introduced structured resume previews, providing a clear summary of personal info, experience, education, and skills for dashboard display.\n  - Resume previews are now included in the results after resume improvement.\n\n- **Bug Fixes**\n  - Adjusted package dependencies to improve compatibility.\n\n- **Chores**\n  - Updated the `h11` package version for backend dependencies.\n\n<!-- end of auto-generated comment: release notes by coderabbit.ai -->",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "state",
          "value": "open",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": "apps/backend/app/schemas/json/resume_preview.py",
          "qualifier": "files"
        },
        {
          "objectId": "apps/backend/app/schemas/pydantic/__init__.py",
          "qualifier": "files"
        },
        {
          "objectId": "apps/backend/app/schemas/pydantic/resume_preview.py",
          "qualifier": "files"
        },
        {
          "objectId": "apps/backend/app/services/score_improvement_service.py",
          "qualifier": "files"
        },
        {
          "objectId": "apps/backend/requirements.txt",
          "qualifier": "files"
        },
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "apps/backend/app/schemas/json/resume_preview.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "apps/backend/app/schemas/pydantic/__init__.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "apps/backend/app/schemas/pydantic/resume_preview.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "apps/backend/app/services/score_improvement_service.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "apps/backend/requirements.txt",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "has-participant"
        },
        {
          "objectId": "732a920c7e900d90355f99f1add2d55173819e41",
          "qualifier": "commits"
        },
        {
          "objectId": "c87c81a311e99fcab722a0a7a8db5ec9f01228d9",
          "qualifier": "is-merged-with"
        },
        {
          "objectId": "732a920c7e900d90355f99f1add2d55173819e41",
          "qualifier": "formalises"
        }
      ],
      "id": "371"
    },
    {
      "type": "pull_request",
      "attributes": [
        {
          "name": "title",
          "value": "Fix links in README and update section title for clarity",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "description",
          "value": "## Pull Request Title\r\n<!-- Provide a concise and descriptive title for the pull request -->\r\n\r\n## Related Issue\r\n<!-- If this pull request is related to an issue, please link it here using the \"#\" symbol followed by the issue number (e.g., #123) -->\r\n\r\n## Description\r\n<!-- Describe the changes made in this pull request. What problem does it solve or what feature does it add/modify? -->\r\n\r\n## Type\r\n<!-- Check the relevant options by putting an \"x\" in the brackets -->\r\n\r\n- [ ] Bug Fix\r\n- [ ] Feature Enhancement\r\n- [ ] Documentation Update\r\n- [ ] Code Refactoring\r\n- [ ] Other (please specify): \r\n\r\n## Proposed Changes\r\n<!-- List the specific changes made in this pull request -->\r\n\r\n- \r\n- \r\n- \r\n\r\n## Screenshots / Code Snippets (if applicable)\r\n<!-- Include any relevant screenshots or code snippets that help visualize the changes made -->\r\n\r\n## How to Test\r\n<!-- Provide step-by-step instructions or a checklist for testing the changes in this pull request -->\r\n\r\n1. \r\n2. \r\n3. \r\n\r\n## Checklist\r\n<!-- Put an \"x\" in the brackets for the items that apply to this pull request -->\r\n\r\n- [ ] The code compiles successfully without any errors or warnings\r\n- [ ] The changes have been tested and verified\r\n- [ ] The documentation has been updated (if applicable)\r\n- [ ] The changes follow the project's coding guidelines and best practices\r\n- [ ] The commit messages are descriptive and follow the project's guidelines\r\n- [ ] All tests (if applicable) pass successfully\r\n- [ ] This pull request has been linked to the related issue (if applicable)\r\n\r\n## Additional Information\r\n<!-- Add any other information about the pull request that you think might be helpful -->\r\n\r\n\n\n<!-- This is an auto-generated comment: release notes by coderabbit.ai -->\n\n## Summary by CodeRabbit\n\n- **Documentation**\n  - Improved contribution and support sections in the README for greater clarity and user engagement.\n  - Updated community invitation wording and expanded details on how to contribute.\n  - Added clearer instructions and more prominent links for supporting development, including new donation options and badges.\n\n<!-- end of auto-generated comment: release notes by coderabbit.ai -->",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "state",
          "value": "open",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": "README.md",
          "qualifier": "files"
        },
        {
          "objectId": "Saurabh Rai",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "README.md",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Saurabh Rai",
          "qualifier": "has-participant"
        },
        {
          "objectId": "d2de9324c17c1a037af820fe267fc36209e6f613",
          "qualifier": "commits"
        },
        {
          "objectId": "3748cf831770a689c4bd16a26f34a48ff6a704fa",
          "qualifier": "is-merged-with"
        },
        {
          "objectId": "d2de9324c17c1a037af820fe267fc36209e6f613",
          "qualifier": "formalises"
        }
      ],
      "id": "370"
    },
    {
      "type": "pull_request",
      "attributes": [
        {
          "name": "title",
          "value": "Update backend dependency of h11 to 0.16",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "description",
          "value": "## Pull Request Title\r\n<!-- Provide a concise and descriptive title for the pull request -->\r\n\r\n## Related Issue\r\n<!-- If this pull request is related to an issue, please link it here using the \"#\" symbol followed by the issue number (e.g., #123) -->\r\n\r\n## Description\r\n<!-- Describe the changes made in this pull request. What problem does it solve or what feature does it add/modify? -->\r\n\r\n## Type\r\n<!-- Check the relevant options by putting an \"x\" in the brackets -->\r\n\r\n- [ ] Bug Fix\r\n- [ ] Feature Enhancement\r\n- [ ] Documentation Update\r\n- [ ] Code Refactoring\r\n- [ ] Other (please specify): \r\n\r\n## Proposed Changes\r\n<!-- List the specific changes made in this pull request -->\r\n\r\n- \r\n- \r\n- \r\n\r\n## Screenshots / Code Snippets (if applicable)\r\n<!-- Include any relevant screenshots or code snippets that help visualize the changes made -->\r\n\r\n## How to Test\r\n<!-- Provide step-by-step instructions or a checklist for testing the changes in this pull request -->\r\n\r\n1. \r\n2. \r\n3. \r\n\r\n## Checklist\r\n<!-- Put an \"x\" in the brackets for the items that apply to this pull request -->\r\n\r\n- [ ] The code compiles successfully without any errors or warnings\r\n- [ ] The changes have been tested and verified\r\n- [ ] The documentation has been updated (if applicable)\r\n- [ ] The changes follow the project's coding guidelines and best practices\r\n- [ ] The commit messages are descriptive and follow the project's guidelines\r\n- [ ] All tests (if applicable) pass successfully\r\n- [ ] This pull request has been linked to the related issue (if applicable)\r\n\r\n## Additional Information\r\n<!-- Add any other information about the pull request that you think might be helpful -->\r\n\r\n\n\n<!-- This is an auto-generated comment: release notes by coderabbit.ai -->\n\n## Summary by CodeRabbit\n\n- **Chores**\n  - Updated the backend dependency for `h11` to version 0.16.0.\n\n<!-- end of auto-generated comment: release notes by coderabbit.ai -->",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "state",
          "value": "open",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": "apps/backend/requirements.txt",
          "qualifier": "files"
        },
        {
          "objectId": "Saurabh Rai",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "apps/backend/requirements.txt",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Saurabh Rai",
          "qualifier": "has-participant"
        },
        {
          "objectId": "542206e0fd30cf32769a9ba5c9fd06c2404f282f",
          "qualifier": "commits"
        },
        {
          "objectId": "f2ae4f00836484f7d9f48589a9fa4c5ebc20c3e3",
          "qualifier": "is-merged-with"
        },
        {
          "objectId": "542206e0fd30cf32769a9ba5c9fd06c2404f282f",
          "qualifier": "formalises"
        }
      ],
      "id": "369"
    },
    {
      "type": "pull_request",
      "attributes": [
        {
          "name": "title",
          "value": "Chore(deps): Bump h11 from 0.14.0 to 0.16.0",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "description",
          "value": "Bumps [h11](https://github.com/python-hyper/h11) from 0.14.0 to 0.16.0.\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/python-hyper/h11/commit/1c5b07581f058886c8bdd87adababd7d959dc7ca\"><code>1c5b075</code></a> this time for surer</li>\n<li><a href=\"https://github.com/python-hyper/h11/commit/d9c369935e853a7ee1aeb7e481f6dddf9b9c9b8a\"><code>d9c3699</code></a> this time for sure...</li>\n<li><a href=\"https://github.com/python-hyper/h11/commit/d91b9dd2290a25c8c3f5ec15feb57de5873e6e39\"><code>d91b9dd</code></a> blacken</li>\n<li><a href=\"https://github.com/python-hyper/h11/commit/5a4683ca466b59bbab9b19cfea20ee157b31cee0\"><code>5a4683c</code></a> Soothe mypy</li>\n<li><a href=\"https://github.com/python-hyper/h11/commit/9c9567f0a92d13a83a8d8ebdbc757c8c2d384536\"><code>9c9567f</code></a> Bump version to 0.16.0</li>\n<li><a href=\"https://github.com/python-hyper/h11/commit/114803a29ce50116dc47951c690ad4892b1a36ed\"><code>114803a</code></a> Merge commit from fork</li>\n<li><a href=\"https://github.com/python-hyper/h11/commit/9462006f6ce4941661888228cbd4ac1ea80689b0\"><code>9462006</code></a> Bump version to 0.15.0</li>\n<li><a href=\"https://github.com/python-hyper/h11/commit/70a96bea8e55403e5d92db14c111432c6d7a8685\"><code>70a96be</code></a> Merge pull request <a href=\"https://redirect.github.com/python-hyper/h11/issues/181\">#181</a> from Julien00859/Julien00859/get_int_max_str_digits</li>\n<li><a href=\"https://github.com/python-hyper/h11/commit/60782ad107e538b9312aac7e1c119c8358bf797c\"><code>60782ad</code></a> Reject Content-Length longer 1 billion TB</li>\n<li><a href=\"https://github.com/python-hyper/h11/commit/dff7cc397a26ed4acdedd92d1bda6c8f18a6ed9f\"><code>dff7cc3</code></a> Validate Chunked-Encoding chunk footer</li>\n<li>Additional commits viewable in <a href=\"https://github.com/python-hyper/h11/compare/v0.14.0...v0.16.0\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=h11&package-manager=pip&previous-version=0.14.0&new-version=0.16.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/srbhr/Resume-Matcher/network/alerts).\n\n</details>",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "state",
          "value": "open",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": "requirements.txt",
          "qualifier": "files"
        },
        {
          "objectId": "dependabot[bot]",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "requirements.txt",
          "qualifier": "aggregates"
        },
        {
          "objectId": "dependabot[bot]",
          "qualifier": "has-participant"
        },
        {
          "objectId": "82cd46a4ccc1c559151825055fd45b610d4bb6f5",
          "qualifier": "commits"
        },
        {
          "objectId": "None",
          "qualifier": "is-merged-with"
        },
        {
          "objectId": "82cd46a4ccc1c559151825055fd45b610d4bb6f5",
          "qualifier": "formalises"
        }
      ],
      "id": "368"
    },
    {
      "type": "pull_request",
      "attributes": [
        {
          "name": "title",
          "value": "Veridis quo",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "description",
          "value": "## Updating Resume Matcher\r\n<!-- Provide a concise and descriptive title for the pull request -->\r\n\r\n## Related Issues\r\n#326 #334 #329 #335\r\n\r\n## Description\r\n<!-- Describe the changes made in this pull request. What problem does it solve or what feature does it add/modify? -->\r\n- This updates the resume matcher with a newer version\r\n\r\n## Type\r\n<!-- Check the relevant options by putting an \"x\" in the brackets -->\r\n\r\n- [ ] Bug Fix\r\n- [x] Feature Enhancement\r\n- [x] Documentation Update\r\n- [ ] Code Refactoring\r\n- [ ] Other (please specify): \r\n\r\n## Proposed Changes\r\n<!-- List the specific changes made in this pull request -->\r\n\r\n- Updated the code-base\r\n- Create a new frondend and backed with Next & FastAPI\r\n- Building resume matcher as the vscode for making resumes\r\n\r\n## Screenshots / Code Snippets (if applicable)\r\n<!-- Include any relevant screenshots or code snippets that help visualize the changes made -->\r\n\r\n## How to Test\r\n<!-- Provide step-by-step instructions or a checklist for testing the changes in this pull request -->\r\n\r\n1. Instructions are in the readme file.\r\n2. Check `setup.md`\r\n\r\n## Checklist\r\n<!-- Put an \"x\" in the brackets for the items that apply to this pull request -->\r\n\r\n- [ ] The code compiles successfully without any errors or warnings\r\n- [ ] The changes have been tested and verified\r\n- [ ] The documentation has been updated (if applicable)\r\n- [ ] The changes follow the project's coding guidelines and best practices\r\n- [ ] The commit messages are descriptive and follow the project's guidelines\r\n- [ ] All tests (if applicable) pass successfully\r\n- [ ] This pull request has been linked to the related issue (if applicable)\r\n\r\n## Additional Information\r\n<!-- Add any other information about the pull request that you think might be helpful -->\r\n\r\n\n\n<!-- This is an auto-generated comment: release notes by coderabbit.ai -->\n\n## Summary by CodeRabbit\n\n- **New Features**\n  - Introduced a new backend and frontend architecture with a modular FastAPI backend and a modern React/Next.js frontend.\n  - Added resume upload, job description upload, and AI-powered resume improvement features.\n  - Implemented dashboards for resume analysis and job matching.\n  - Provided interactive UI components for file uploads, job input, and resume display.\n  - Included health check and API endpoints for managing resumes and jobs.\n  - Added streaming and non-streaming AI resume improvement options.\n\n- **Documentation**\n  - Completely revamped and streamlined README files for both backend and frontend.\n  - Added comprehensive setup instructions in a new SETUP.md.\n  - Provided sample environment variable files for configuration.\n\n- **Chores**\n  - Added project-level and per-app configuration files for environment, dependencies, and code style.\n  - Introduced Makefile and scripts for local development and build automation.\n  - Added and updated .gitignore files for better environment and build artifact management.\n\n- **Removals**\n  - Removed legacy scripts, data extraction utilities, and old main application files.\n  - Deleted Docker and legacy requirements files to streamline the project structure.\n  - Eliminated old test/demo data and pre-commit configuration.\n\n<!-- end of auto-generated comment: release notes by coderabbit.ai -->",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "state",
          "value": "open",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": ".github/CODE_OF_CONDUCT.md",
          "qualifier": "files"
        },
        {
          "objectId": ".github/CONTRIBUTING.md",
          "qualifier": "files"
        },
        {
          "objectId": ".github/SECURITY.md",
          "qualifier": "files"
        },
        {
          "objectId": ".gitignore",
          "qualifier": "files"
        },
        {
          "objectId": ".pre-commit-config.yaml",
          "qualifier": "files"
        },
        {
          "objectId": "Assets/img/Resume_Matcher_Gif.gif",
          "qualifier": "files"
        },
        {
          "objectId": "Assets/img/Resume_Matcher_GitHub_Banner.jpg",
          "qualifier": "files"
        },
        {
          "objectId": "Assets/img/Resume_Matcher_GitHub_Banner.png",
          "qualifier": "files"
        },
        {
          "objectId": "Assets/img/backend_fastapi_demo.gif",
          "qualifier": "files"
        },
        {
          "objectId": "Assets/img/favicon.ico",
          "qualifier": "files"
        },
        {
          "objectId": "Assets/img/header.png",
          "qualifier": "files"
        },
        {
          "objectId": "Assets/img/header_image.png",
          "qualifier": "files"
        },
        {
          "objectId": "Assets/img/quadrant_cloud.png",
          "qualifier": "files"
        },
        {
          "objectId": "Assets/img/webapp_demo.gif",
          "qualifier": "files"
        },
        {
          "objectId": "Data/JobDescription/job_desc_front_end_engineer.pdf",
          "qualifier": "files"
        },
        {
          "objectId": "Data/JobDescription/job_desc_full_stack_engineer.pdf",
          "qualifier": "files"
        },
        {
          "objectId": "Data/JobDescription/job_desc_java_developer.pdf",
          "qualifier": "files"
        },
        {
          "objectId": "Data/JobDescription/job_desc_product_manager.pdf",
          "qualifier": "files"
        },
        {
          "objectId": "Data/Resumes/alfred_pennyworth_pm.pdf",
          "qualifier": "files"
        },
        {
          "objectId": "Data/Resumes/barry_allen_fe.pdf",
          "qualifier": "files"
        },
        {
          "objectId": "Data/Resumes/bruce_wayne_fullstack.pdf",
          "qualifier": "files"
        },
        {
          "objectId": "Data/Resumes/harvey_dent_mle.pdf",
          "qualifier": "files"
        },
        {
          "objectId": "Data/Resumes/john_doe.pdf",
          "qualifier": "files"
        },
        {
          "objectId": "Demo/DemoData.py",
          "qualifier": "files"
        },
        {
          "objectId": "Makefile",
          "qualifier": "files"
        },
        {
          "objectId": "README.md",
          "qualifier": "files"
        },
        {
          "objectId": "SETUP.md",
          "qualifier": "files"
        },
        {
          "objectId": "UI-Mockup/Footer UI Mockup.png",
          "qualifier": "files"
        },
        {
          "objectId": "UI-Mockup/mockup_1.1.png",
          "qualifier": "files"
        },
        {
          "objectId": "__init__.py",
          "qualifier": "files"
        },
        {
          "objectId": "Saurabh Rai",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": ".github/CODE_OF_CONDUCT.md",
          "qualifier": "aggregates"
        },
        {
          "objectId": ".github/CONTRIBUTING.md",
          "qualifier": "aggregates"
        },
        {
          "objectId": ".github/SECURITY.md",
          "qualifier": "aggregates"
        },
        {
          "objectId": ".gitignore",
          "qualifier": "aggregates"
        },
        {
          "objectId": ".pre-commit-config.yaml",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Assets/img/Resume_Matcher_Gif.gif",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Assets/img/Resume_Matcher_GitHub_Banner.jpg",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Assets/img/Resume_Matcher_GitHub_Banner.png",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Assets/img/backend_fastapi_demo.gif",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Assets/img/favicon.ico",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Assets/img/header.png",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Assets/img/header_image.png",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Assets/img/quadrant_cloud.png",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Assets/img/webapp_demo.gif",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/JobDescription/job_desc_front_end_engineer.pdf",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/JobDescription/job_desc_full_stack_engineer.pdf",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/JobDescription/job_desc_java_developer.pdf",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/JobDescription/job_desc_product_manager.pdf",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/alfred_pennyworth_pm.pdf",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/barry_allen_fe.pdf",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/bruce_wayne_fullstack.pdf",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/harvey_dent_mle.pdf",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/john_doe.pdf",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Demo/DemoData.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Makefile",
          "qualifier": "aggregates"
        },
        {
          "objectId": "README.md",
          "qualifier": "aggregates"
        },
        {
          "objectId": "SETUP.md",
          "qualifier": "aggregates"
        },
        {
          "objectId": "UI-Mockup/Footer UI Mockup.png",
          "qualifier": "aggregates"
        },
        {
          "objectId": "UI-Mockup/mockup_1.1.png",
          "qualifier": "aggregates"
        },
        {
          "objectId": "__init__.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Saurabh Rai",
          "qualifier": "has-participant"
        },
        {
          "objectId": "ff4d7e9f78f7a74538d3ade7e850f7416a770ce9",
          "qualifier": "commits"
        },
        {
          "objectId": "cebefe928fd23e0461fcf998dca749f2aec25d8c",
          "qualifier": "commits"
        },
        {
          "objectId": "e2156c2115b04eb91d445f5283482a8f81cec7bd",
          "qualifier": "commits"
        },
        {
          "objectId": "f415013aeeac86ddd5fb97c7a8e39b3a77ba12ec",
          "qualifier": "commits"
        },
        {
          "objectId": "c8b0d00a5469a7702a3ce968c69e40535cfcfdb9",
          "qualifier": "commits"
        },
        {
          "objectId": "48d058d29c7b6db98e196832137c69cd61e98968",
          "qualifier": "commits"
        },
        {
          "objectId": "894985747aae8c72c989822c1acae3cca8ae3683",
          "qualifier": "commits"
        },
        {
          "objectId": "fd104cc26df1420ac2707e5db27f93cd950bb8ef",
          "qualifier": "commits"
        },
        {
          "objectId": "c747e8208f42f226ef3ea0f0430416b89b020e8d",
          "qualifier": "commits"
        },
        {
          "objectId": "078b93cae58db0da361f33d6a4e62c61477f0fef",
          "qualifier": "commits"
        },
        {
          "objectId": "a84809acc42454f84d3b7fb1a62180e8141cd185",
          "qualifier": "commits"
        },
        {
          "objectId": "64045941650aeed8386e039757e63df6d19f5f6f",
          "qualifier": "commits"
        },
        {
          "objectId": "4e1616ac12b126c77761a47cf70c517a4adeb0f5",
          "qualifier": "commits"
        },
        {
          "objectId": "3670c6ce485967fd099a5862a5d7eca0ab5bde01",
          "qualifier": "commits"
        },
        {
          "objectId": "2b60122a85fe8fa29514882e12af006f6cc4ceb5",
          "qualifier": "commits"
        },
        {
          "objectId": "638c41f37930637a8f891eb13c59a224906805fe",
          "qualifier": "commits"
        },
        {
          "objectId": "12848699494a28f76c34982ef872a824fb32036d",
          "qualifier": "commits"
        },
        {
          "objectId": "8eea5e0838e87f843ee2617b39917e06e0050d26",
          "qualifier": "commits"
        },
        {
          "objectId": "b8b1bb497e266f586e8b0ad50a324d9704b0be9f",
          "qualifier": "commits"
        },
        {
          "objectId": "6816ac238638f06e3234c53192a1a0d71ef85877",
          "qualifier": "commits"
        },
        {
          "objectId": "fa2c02df0acf2d4fb807161b683970c2c9d38d26",
          "qualifier": "commits"
        },
        {
          "objectId": "b3af62273e0a9bb9fa1dfcdd5132006a22dbd36e",
          "qualifier": "commits"
        },
        {
          "objectId": "4b483740be309b68e842397b0cbb69753a0dea7b",
          "qualifier": "commits"
        },
        {
          "objectId": "7ea5b50aa41ef40d111fc9260e11d50e4b5e8930",
          "qualifier": "commits"
        },
        {
          "objectId": "d835b4614bfe1516dc188eee0d30ec3ff2978d41",
          "qualifier": "commits"
        },
        {
          "objectId": "f72b58eb67965d5b4610c5b21f1a4ae9d59c1efb",
          "qualifier": "commits"
        },
        {
          "objectId": "6d443bd9d2c50337b50b38226ba27728586d955c",
          "qualifier": "commits"
        },
        {
          "objectId": "5455337a6909c7db1d2b2313ebd9ceafbf509d93",
          "qualifier": "commits"
        },
        {
          "objectId": "bc37099b67868a928132f63b6e2ad0e56e5c9b47",
          "qualifier": "commits"
        },
        {
          "objectId": "bc5004c96a45b00850aad311678665e7b7576427",
          "qualifier": "commits"
        },
        {
          "objectId": "794f5a58026c3fa65d4f3f9a7fdee537dafa0ef8",
          "qualifier": "is-merged-with"
        },
        {
          "objectId": "ff4d7e9f78f7a74538d3ade7e850f7416a770ce9",
          "qualifier": "formalises"
        },
        {
          "objectId": "cebefe928fd23e0461fcf998dca749f2aec25d8c",
          "qualifier": "formalises"
        },
        {
          "objectId": "e2156c2115b04eb91d445f5283482a8f81cec7bd",
          "qualifier": "formalises"
        },
        {
          "objectId": "f415013aeeac86ddd5fb97c7a8e39b3a77ba12ec",
          "qualifier": "formalises"
        },
        {
          "objectId": "c8b0d00a5469a7702a3ce968c69e40535cfcfdb9",
          "qualifier": "formalises"
        },
        {
          "objectId": "48d058d29c7b6db98e196832137c69cd61e98968",
          "qualifier": "formalises"
        },
        {
          "objectId": "894985747aae8c72c989822c1acae3cca8ae3683",
          "qualifier": "formalises"
        },
        {
          "objectId": "fd104cc26df1420ac2707e5db27f93cd950bb8ef",
          "qualifier": "formalises"
        },
        {
          "objectId": "c747e8208f42f226ef3ea0f0430416b89b020e8d",
          "qualifier": "formalises"
        },
        {
          "objectId": "078b93cae58db0da361f33d6a4e62c61477f0fef",
          "qualifier": "formalises"
        },
        {
          "objectId": "a84809acc42454f84d3b7fb1a62180e8141cd185",
          "qualifier": "formalises"
        },
        {
          "objectId": "64045941650aeed8386e039757e63df6d19f5f6f",
          "qualifier": "formalises"
        },
        {
          "objectId": "4e1616ac12b126c77761a47cf70c517a4adeb0f5",
          "qualifier": "formalises"
        },
        {
          "objectId": "3670c6ce485967fd099a5862a5d7eca0ab5bde01",
          "qualifier": "formalises"
        },
        {
          "objectId": "2b60122a85fe8fa29514882e12af006f6cc4ceb5",
          "qualifier": "formalises"
        },
        {
          "objectId": "638c41f37930637a8f891eb13c59a224906805fe",
          "qualifier": "formalises"
        },
        {
          "objectId": "12848699494a28f76c34982ef872a824fb32036d",
          "qualifier": "formalises"
        },
        {
          "objectId": "8eea5e0838e87f843ee2617b39917e06e0050d26",
          "qualifier": "formalises"
        },
        {
          "objectId": "b8b1bb497e266f586e8b0ad50a324d9704b0be9f",
          "qualifier": "formalises"
        },
        {
          "objectId": "6816ac238638f06e3234c53192a1a0d71ef85877",
          "qualifier": "formalises"
        },
        {
          "objectId": "fa2c02df0acf2d4fb807161b683970c2c9d38d26",
          "qualifier": "formalises"
        },
        {
          "objectId": "b3af62273e0a9bb9fa1dfcdd5132006a22dbd36e",
          "qualifier": "formalises"
        },
        {
          "objectId": "4b483740be309b68e842397b0cbb69753a0dea7b",
          "qualifier": "formalises"
        },
        {
          "objectId": "7ea5b50aa41ef40d111fc9260e11d50e4b5e8930",
          "qualifier": "formalises"
        },
        {
          "objectId": "d835b4614bfe1516dc188eee0d30ec3ff2978d41",
          "qualifier": "formalises"
        },
        {
          "objectId": "f72b58eb67965d5b4610c5b21f1a4ae9d59c1efb",
          "qualifier": "formalises"
        },
        {
          "objectId": "6d443bd9d2c50337b50b38226ba27728586d955c",
          "qualifier": "formalises"
        },
        {
          "objectId": "5455337a6909c7db1d2b2313ebd9ceafbf509d93",
          "qualifier": "formalises"
        },
        {
          "objectId": "bc37099b67868a928132f63b6e2ad0e56e5c9b47",
          "qualifier": "formalises"
        },
        {
          "objectId": "bc5004c96a45b00850aad311678665e7b7576427",
          "qualifier": "formalises"
        }
      ],
      "id": "367"
    },
    {
      "type": "pull_request",
      "attributes": [
        {
          "name": "title",
          "value": "Update README and SETUP documentation; add installation instructions \u2026",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "description",
          "value": "\u2026and donation support\r\n\r\n## Pull Request Title\r\n<!-- Provide a concise and descriptive title for the pull request -->\r\n\r\n## Related Issue\r\n<!-- If this pull request is related to an issue, please link it here using the \"#\" symbol followed by the issue number (e.g., #123) -->\r\n\r\n## Description\r\n<!-- Describe the changes made in this pull request. What problem does it solve or what feature does it add/modify? -->\r\n\r\n## Type\r\n<!-- Check the relevant options by putting an \"x\" in the brackets -->\r\n\r\n- [ ] Bug Fix\r\n- [ ] Feature Enhancement\r\n- [ ] Documentation Update\r\n- [ ] Code Refactoring\r\n- [ ] Other (please specify): \r\n\r\n## Proposed Changes\r\n<!-- List the specific changes made in this pull request -->\r\n\r\n- \r\n- \r\n- \r\n\r\n## Screenshots / Code Snippets (if applicable)\r\n<!-- Include any relevant screenshots or code snippets that help visualize the changes made -->\r\n\r\n## How to Test\r\n<!-- Provide step-by-step instructions or a checklist for testing the changes in this pull request -->\r\n\r\n1. \r\n2. \r\n3. \r\n\r\n## Checklist\r\n<!-- Put an \"x\" in the brackets for the items that apply to this pull request -->\r\n\r\n- [ ] The code compiles successfully without any errors or warnings\r\n- [ ] The changes have been tested and verified\r\n- [ ] The documentation has been updated (if applicable)\r\n- [ ] The changes follow the project's coding guidelines and best practices\r\n- [ ] The commit messages are descriptive and follow the project's guidelines\r\n- [ ] All tests (if applicable) pass successfully\r\n- [ ] This pull request has been linked to the related issue (if applicable)\r\n\r\n## Additional Information\r\n<!-- Add any other information about the pull request that you think might be helpful -->\r\n\r\n",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "state",
          "value": "open",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": "README.md",
          "qualifier": "files"
        },
        {
          "objectId": "SETUP.md",
          "qualifier": "files"
        },
        {
          "objectId": "assets/contributors.png",
          "qualifier": "files"
        },
        {
          "objectId": "assets/how_to_contribute.png",
          "qualifier": "files"
        },
        {
          "objectId": "assets/how_to_install_resumematcher.png",
          "qualifier": "files"
        },
        {
          "objectId": "assets/supporting_resume_matcher.png",
          "qualifier": "files"
        },
        {
          "objectId": "Saurabh Rai",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "README.md",
          "qualifier": "aggregates"
        },
        {
          "objectId": "SETUP.md",
          "qualifier": "aggregates"
        },
        {
          "objectId": "assets/contributors.png",
          "qualifier": "aggregates"
        },
        {
          "objectId": "assets/how_to_contribute.png",
          "qualifier": "aggregates"
        },
        {
          "objectId": "assets/how_to_install_resumematcher.png",
          "qualifier": "aggregates"
        },
        {
          "objectId": "assets/supporting_resume_matcher.png",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Saurabh Rai",
          "qualifier": "has-participant"
        },
        {
          "objectId": "90db53d231094a5be07f2115d14cee78b1f35f51",
          "qualifier": "commits"
        },
        {
          "objectId": "cc9f0405aaec1939c1d32e32d5ee08500cdd19d2",
          "qualifier": "is-merged-with"
        },
        {
          "objectId": "90db53d231094a5be07f2115d14cee78b1f35f51",
          "qualifier": "formalises"
        }
      ],
      "id": "365"
    },
    {
      "type": "pull_request",
      "attributes": [
        {
          "name": "title",
          "value": "Veridis-quo Setup",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "description",
          "value": "## Pull Request Title\r\n<!-- Provide a concise and descriptive title for the pull request -->\r\n\r\n## Related Issue\r\n<!-- If this pull request is related to an issue, please link it here using the \"#\" symbol followed by the issue number (e.g., #123) -->\r\n\r\n## Description\r\n<!-- Describe the changes made in this pull request. What problem does it solve or what feature does it add/modify? -->\r\n\r\n## Type\r\n<!-- Check the relevant options by putting an \"x\" in the brackets -->\r\n\r\n- [ ] Bug Fix\r\n- [ ] Feature Enhancement\r\n- [ ] Documentation Update\r\n- [ ] Code Refactoring\r\n- [ ] Other (please specify): \r\n\r\n## Proposed Changes\r\n<!-- List the specific changes made in this pull request -->\r\n\r\n- \r\n- \r\n- \r\n\r\n## Screenshots / Code Snippets (if applicable)\r\n<!-- Include any relevant screenshots or code snippets that help visualize the changes made -->\r\n\r\n## How to Test\r\n<!-- Provide step-by-step instructions or a checklist for testing the changes in this pull request -->\r\n\r\n1. \r\n2. \r\n3. \r\n\r\n## Checklist\r\n<!-- Put an \"x\" in the brackets for the items that apply to this pull request -->\r\n\r\n- [ ] The code compiles successfully without any errors or warnings\r\n- [ ] The changes have been tested and verified\r\n- [ ] The documentation has been updated (if applicable)\r\n- [ ] The changes follow the project's coding guidelines and best practices\r\n- [ ] The commit messages are descriptive and follow the project's guidelines\r\n- [ ] All tests (if applicable) pass successfully\r\n- [ ] This pull request has been linked to the related issue (if applicable)\r\n\r\n## Additional Information\r\n<!-- Add any other information about the pull request that you think might be helpful -->\r\n\r\n",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "state",
          "value": "open",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": ".gitignore",
          "qualifier": "files"
        },
        {
          "objectId": "Makefile",
          "qualifier": "files"
        },
        {
          "objectId": "SETUP.md",
          "qualifier": "files"
        },
        {
          "objectId": "apps/backend/.env.sample",
          "qualifier": "files"
        },
        {
          "objectId": "apps/backend/app.db-shm",
          "qualifier": "files"
        },
        {
          "objectId": "apps/backend/app.db-wal",
          "qualifier": "files"
        },
        {
          "objectId": "apps/backend/app/core/config.py",
          "qualifier": "files"
        },
        {
          "objectId": "apps/frontend/.env.sample",
          "qualifier": "files"
        },
        {
          "objectId": "apps/frontend/components/common/file-upload.tsx",
          "qualifier": "files"
        },
        {
          "objectId": "apps/frontend/components/jd-upload/text-area.tsx",
          "qualifier": "files"
        },
        {
          "objectId": "package.json",
          "qualifier": "files"
        },
        {
          "objectId": "setup.sh",
          "qualifier": "files"
        },
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": ".gitignore",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Makefile",
          "qualifier": "aggregates"
        },
        {
          "objectId": "SETUP.md",
          "qualifier": "aggregates"
        },
        {
          "objectId": "apps/backend/.env.sample",
          "qualifier": "aggregates"
        },
        {
          "objectId": "apps/backend/app.db-shm",
          "qualifier": "aggregates"
        },
        {
          "objectId": "apps/backend/app.db-wal",
          "qualifier": "aggregates"
        },
        {
          "objectId": "apps/backend/app/core/config.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "apps/frontend/.env.sample",
          "qualifier": "aggregates"
        },
        {
          "objectId": "apps/frontend/components/common/file-upload.tsx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "apps/frontend/components/jd-upload/text-area.tsx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "package.json",
          "qualifier": "aggregates"
        },
        {
          "objectId": "setup.sh",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "has-participant"
        },
        {
          "objectId": "10201b889a2282e57f59678263ca57b45b552f8a",
          "qualifier": "commits"
        },
        {
          "objectId": "25eb49f4bd3d7a4d36ca1bf3a1e09e4fb9eb5d21",
          "qualifier": "commits"
        },
        {
          "objectId": "83b246fab6c509d94a92d73a1a8fd7a90f323e51",
          "qualifier": "commits"
        },
        {
          "objectId": "3fc8dc15d02b35228b148544519722fd2542310d",
          "qualifier": "commits"
        },
        {
          "objectId": "b5566d0ddecf6981b76aeb838b2a3921b06be352",
          "qualifier": "commits"
        },
        {
          "objectId": "a96defcea7a67bbcabc5186c8460c84c85df899b",
          "qualifier": "commits"
        },
        {
          "objectId": "8621b7f355f78097e1d62a28c67c4dd321daeb12",
          "qualifier": "commits"
        },
        {
          "objectId": "520183383ec6fcf0f2541011bca9403c6af4c6a9",
          "qualifier": "commits"
        },
        {
          "objectId": "b220c6a978e47b216cc38a199a1100452f26bd31",
          "qualifier": "is-merged-with"
        },
        {
          "objectId": "10201b889a2282e57f59678263ca57b45b552f8a",
          "qualifier": "formalises"
        },
        {
          "objectId": "25eb49f4bd3d7a4d36ca1bf3a1e09e4fb9eb5d21",
          "qualifier": "formalises"
        },
        {
          "objectId": "83b246fab6c509d94a92d73a1a8fd7a90f323e51",
          "qualifier": "formalises"
        },
        {
          "objectId": "3fc8dc15d02b35228b148544519722fd2542310d",
          "qualifier": "formalises"
        },
        {
          "objectId": "b5566d0ddecf6981b76aeb838b2a3921b06be352",
          "qualifier": "formalises"
        },
        {
          "objectId": "a96defcea7a67bbcabc5186c8460c84c85df899b",
          "qualifier": "formalises"
        },
        {
          "objectId": "8621b7f355f78097e1d62a28c67c4dd321daeb12",
          "qualifier": "formalises"
        },
        {
          "objectId": "520183383ec6fcf0f2541011bca9403c6af4c6a9",
          "qualifier": "formalises"
        }
      ],
      "id": "364"
    },
    {
      "type": "pull_request",
      "attributes": [
        {
          "name": "title",
          "value": "Updated the file structure to include",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "description",
          "value": "## Pull Request Title\r\n<!-- Provide a concise and descriptive title for the pull request -->\r\n\r\n## Related Issue\r\n<!-- If this pull request is related to an issue, please link it here using the \"#\" symbol followed by the issue number (e.g., #123) -->\r\n\r\n## Description\r\n<!-- Describe the changes made in this pull request. What problem does it solve or what feature does it add/modify? -->\r\n\r\n## Type\r\n<!-- Check the relevant options by putting an \"x\" in the brackets -->\r\n\r\n- [ ] Bug Fix\r\n- [ ] Feature Enhancement\r\n- [ ] Documentation Update\r\n- [ ] Code Refactoring\r\n- [ ] Other (please specify): \r\n\r\n## Proposed Changes\r\n<!-- List the specific changes made in this pull request -->\r\n\r\n- \r\n- \r\n- \r\n\r\n## Screenshots / Code Snippets (if applicable)\r\n<!-- Include any relevant screenshots or code snippets that help visualize the changes made -->\r\n\r\n## How to Test\r\n<!-- Provide step-by-step instructions or a checklist for testing the changes in this pull request -->\r\n\r\n1. \r\n2. \r\n3. \r\n\r\n## Checklist\r\n<!-- Put an \"x\" in the brackets for the items that apply to this pull request -->\r\n\r\n- [ ] The code compiles successfully without any errors or warnings\r\n- [ ] The changes have been tested and verified\r\n- [ ] The documentation has been updated (if applicable)\r\n- [ ] The changes follow the project's coding guidelines and best practices\r\n- [ ] The commit messages are descriptive and follow the project's guidelines\r\n- [ ] All tests (if applicable) pass successfully\r\n- [ ] This pull request has been linked to the related issue (if applicable)\r\n\r\n## Additional Information\r\n<!-- Add any other information about the pull request that you think might be helpful -->\r\n\r\n",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "state",
          "value": "open",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": ".github/CODE_OF_CONDUCT.md",
          "qualifier": "files"
        },
        {
          "objectId": ".github/CONTRIBUTING.md",
          "qualifier": "files"
        },
        {
          "objectId": ".github/SECURITY.md",
          "qualifier": "files"
        },
        {
          "objectId": ".gitignore",
          "qualifier": "files"
        },
        {
          "objectId": "app.db",
          "qualifier": "files"
        },
        {
          "objectId": "apps/backend/.gitignore",
          "qualifier": "files"
        },
        {
          "objectId": "apps/backend/app.db-shm",
          "qualifier": "files"
        },
        {
          "objectId": "apps/backend/app.db-wal",
          "qualifier": "files"
        },
        {
          "objectId": "apps/backend/app/agent/__init__.py",
          "qualifier": "files"
        },
        {
          "objectId": "apps/backend/app/agent/exceptions.py",
          "qualifier": "files"
        },
        {
          "objectId": "apps/backend/app/agent/manager.py",
          "qualifier": "files"
        },
        {
          "objectId": "apps/backend/app/agent/providers/base.py",
          "qualifier": "files"
        },
        {
          "objectId": "apps/backend/app/agent/providers/ollama.py",
          "qualifier": "files"
        },
        {
          "objectId": "apps/backend/app/agent/providers/openai.py",
          "qualifier": "files"
        },
        {
          "objectId": "apps/backend/app/agent/strategies/base.py",
          "qualifier": "files"
        },
        {
          "objectId": "apps/backend/app/agent/strategies/wrapper.py",
          "qualifier": "files"
        },
        {
          "objectId": "apps/backend/app/api/__init__.py",
          "qualifier": "files"
        },
        {
          "objectId": "apps/backend/app/api/middleware.py",
          "qualifier": "files"
        },
        {
          "objectId": "apps/backend/app/api/router/health.py",
          "qualifier": "files"
        },
        {
          "objectId": "apps/backend/app/api/router/v1/__init__.py",
          "qualifier": "files"
        },
        {
          "objectId": "apps/backend/app/api/router/v1/job.py",
          "qualifier": "files"
        },
        {
          "objectId": "apps/backend/app/api/router/v1/resume.py",
          "qualifier": "files"
        },
        {
          "objectId": "apps/backend/app/base.py",
          "qualifier": "files"
        },
        {
          "objectId": "apps/backend/app/core/__init__.py",
          "qualifier": "files"
        },
        {
          "objectId": "apps/backend/app/core/config.py",
          "qualifier": "files"
        },
        {
          "objectId": "apps/backend/app/core/database.py",
          "qualifier": "files"
        },
        {
          "objectId": "apps/backend/app/core/exceptions.py",
          "qualifier": "files"
        },
        {
          "objectId": "apps/backend/app/main.py",
          "qualifier": "files"
        },
        {
          "objectId": "apps/backend/app/models/__init__.py",
          "qualifier": "files"
        },
        {
          "objectId": "apps/backend/app/models/association.py",
          "qualifier": "files"
        },
        {
          "objectId": "Saurabh Rai",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": ".github/CODE_OF_CONDUCT.md",
          "qualifier": "aggregates"
        },
        {
          "objectId": ".github/CONTRIBUTING.md",
          "qualifier": "aggregates"
        },
        {
          "objectId": ".github/SECURITY.md",
          "qualifier": "aggregates"
        },
        {
          "objectId": ".gitignore",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app.db",
          "qualifier": "aggregates"
        },
        {
          "objectId": "apps/backend/.gitignore",
          "qualifier": "aggregates"
        },
        {
          "objectId": "apps/backend/app.db-shm",
          "qualifier": "aggregates"
        },
        {
          "objectId": "apps/backend/app.db-wal",
          "qualifier": "aggregates"
        },
        {
          "objectId": "apps/backend/app/agent/__init__.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "apps/backend/app/agent/exceptions.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "apps/backend/app/agent/manager.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "apps/backend/app/agent/providers/base.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "apps/backend/app/agent/providers/ollama.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "apps/backend/app/agent/providers/openai.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "apps/backend/app/agent/strategies/base.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "apps/backend/app/agent/strategies/wrapper.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "apps/backend/app/api/__init__.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "apps/backend/app/api/middleware.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "apps/backend/app/api/router/health.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "apps/backend/app/api/router/v1/__init__.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "apps/backend/app/api/router/v1/job.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "apps/backend/app/api/router/v1/resume.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "apps/backend/app/base.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "apps/backend/app/core/__init__.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "apps/backend/app/core/config.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "apps/backend/app/core/database.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "apps/backend/app/core/exceptions.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "apps/backend/app/main.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "apps/backend/app/models/__init__.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "apps/backend/app/models/association.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Saurabh Rai",
          "qualifier": "has-participant"
        },
        {
          "objectId": "2311e9e5120602821baa535ec58becde914b256e",
          "qualifier": "commits"
        },
        {
          "objectId": "03218f6c0f05f65d73e4e6d9f6ef9c3f5ee7ac71",
          "qualifier": "commits"
        },
        {
          "objectId": "0abce8261e045201d698a703dcd0ba71c13b42ca",
          "qualifier": "commits"
        },
        {
          "objectId": "a57edfc31283f34f41474a47e7aea24328268f6a",
          "qualifier": "commits"
        },
        {
          "objectId": "ee4c6b8e4e37c8bb41b707636891e914889fc0e2",
          "qualifier": "commits"
        },
        {
          "objectId": "0bf0a99fcb9c21526528013fcd567c05a0617a5d",
          "qualifier": "commits"
        },
        {
          "objectId": "ed67f828f334e97c61d4b313bcf49c5f501a905b",
          "qualifier": "is-merged-with"
        },
        {
          "objectId": "2311e9e5120602821baa535ec58becde914b256e",
          "qualifier": "formalises"
        },
        {
          "objectId": "03218f6c0f05f65d73e4e6d9f6ef9c3f5ee7ac71",
          "qualifier": "formalises"
        },
        {
          "objectId": "0abce8261e045201d698a703dcd0ba71c13b42ca",
          "qualifier": "formalises"
        },
        {
          "objectId": "a57edfc31283f34f41474a47e7aea24328268f6a",
          "qualifier": "formalises"
        },
        {
          "objectId": "ee4c6b8e4e37c8bb41b707636891e914889fc0e2",
          "qualifier": "formalises"
        },
        {
          "objectId": "0bf0a99fcb9c21526528013fcd567c05a0617a5d",
          "qualifier": "formalises"
        }
      ],
      "id": "361"
    },
    {
      "type": "pull_request",
      "attributes": [
        {
          "name": "title",
          "value": "Chore(deps): Bump tornado from 6.4.2 to 6.5.1",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "description",
          "value": "Bumps [tornado](https://github.com/tornadoweb/tornado) from 6.4.2 to 6.5.1.\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/tornadoweb/tornado/blob/master/docs/releases.rst\">tornado's changelog</a>.</em></p>\n<blockquote>\n<h1>Release notes</h1>\n<p>.. toctree::\n:maxdepth: 2</p>\n<p>releases/v6.5.1\nreleases/v6.5.0\nreleases/v6.4.2\nreleases/v6.4.1\nreleases/v6.4.0\nreleases/v6.3.3\nreleases/v6.3.2\nreleases/v6.3.1\nreleases/v6.3.0\nreleases/v6.2.0\nreleases/v6.1.0\nreleases/v6.0.4\nreleases/v6.0.3\nreleases/v6.0.2\nreleases/v6.0.1\nreleases/v6.0.0\nreleases/v5.1.1\nreleases/v5.1.0\nreleases/v5.0.2\nreleases/v5.0.1\nreleases/v5.0.0\nreleases/v4.5.3\nreleases/v4.5.2\nreleases/v4.5.1\nreleases/v4.5.0\nreleases/v4.4.3\nreleases/v4.4.2\nreleases/v4.4.1\nreleases/v4.4.0\nreleases/v4.3.0\nreleases/v4.2.1\nreleases/v4.2.0\nreleases/v4.1.0\nreleases/v4.0.2\nreleases/v4.0.1\nreleases/v4.0.0\nreleases/v3.2.2\nreleases/v3.2.1\nreleases/v3.2.0\nreleases/v3.1.1\nreleases/v3.1.0\nreleases/v3.0.2\nreleases/v3.0.1\nreleases/v3.0.0</p>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/tornadoweb/tornado/commit/b5586f3f2956308a9dff1fba2c3ddbbbe1ab29d0\"><code>b5586f3</code></a> Merge pull request <a href=\"https://redirect.github.com/tornadoweb/tornado/issues/3503\">#3503</a> from bdarnell/multipart-utf8</li>\n<li><a href=\"https://github.com/tornadoweb/tornado/commit/62c276434dc5b13e10336666348408bf8c062391\"><code>62c2764</code></a> Release notes for v6.5.1</li>\n<li><a href=\"https://github.com/tornadoweb/tornado/commit/170a58af2c1708c22529daf37536b6ba63403fd0\"><code>170a58a</code></a> httputil: Fix support for non-latin1 filenames in multipart uploads</li>\n<li><a href=\"https://github.com/tornadoweb/tornado/commit/ab5f35431242f95a5ef0a2ac228e54e89ab511f0\"><code>ab5f354</code></a> Merge pull request <a href=\"https://redirect.github.com/tornadoweb/tornado/issues/3498\">#3498</a> from bdarnell/final-6.5</li>\n<li><a href=\"https://github.com/tornadoweb/tornado/commit/3623024dfc36ea4955ba06c41dd1e63487e65473\"><code>3623024</code></a> Final release notes for 6.5.0</li>\n<li><a href=\"https://github.com/tornadoweb/tornado/commit/b39b892bf78fe8fea01dd45199aa88307e7162f3\"><code>b39b892</code></a> Merge pull request <a href=\"https://redirect.github.com/tornadoweb/tornado/issues/3497\">#3497</a> from bdarnell/multipart-log-spam</li>\n<li><a href=\"https://github.com/tornadoweb/tornado/commit/cc61050e8f26697463142d99864b562e8470b41d\"><code>cc61050</code></a> httputil: Raise errors instead of logging in multipart/form-data parsing</li>\n<li><a href=\"https://github.com/tornadoweb/tornado/commit/ae4a4e4feafc631c3dba64c3fbe185d05c37e356\"><code>ae4a4e4</code></a> asyncio: Preserve contextvars across SelectorThread on Windows (<a href=\"https://redirect.github.com/tornadoweb/tornado/issues/3479\">#3479</a>)</li>\n<li><a href=\"https://github.com/tornadoweb/tornado/commit/197ff13f768b9abd26b0ecb97989bdd40283c345\"><code>197ff13</code></a> Merge pull request <a href=\"https://redirect.github.com/tornadoweb/tornado/issues/3496\">#3496</a> from bdarnell/undeprecate-set-event-loop</li>\n<li><a href=\"https://github.com/tornadoweb/tornado/commit/c3d906c4ad05c2719f9e9c7a1f103e925b4bbc3a\"><code>c3d906c</code></a> requirements: Upgrade tox to 4.26.0</li>\n<li>Additional commits viewable in <a href=\"https://github.com/tornadoweb/tornado/compare/v6.4.2...v6.5.1\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=tornado&package-manager=pip&previous-version=6.4.2&new-version=6.5.1)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/srbhr/Resume-Matcher/network/alerts).\n\n</details>",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "state",
          "value": "open",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": "requirements.txt",
          "qualifier": "files"
        },
        {
          "objectId": "dependabot[bot]",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "requirements.txt",
          "qualifier": "aggregates"
        },
        {
          "objectId": "dependabot[bot]",
          "qualifier": "has-participant"
        },
        {
          "objectId": "6647b598aaa9cc78d94a63dd69c112a270e78595",
          "qualifier": "commits"
        },
        {
          "objectId": "41e1d0eaf7ef1d8879c191c2574ace8db223923f",
          "qualifier": "is-merged-with"
        },
        {
          "objectId": "6647b598aaa9cc78d94a63dd69c112a270e78595",
          "qualifier": "formalises"
        }
      ],
      "id": "360"
    },
    {
      "type": "pull_request",
      "attributes": [
        {
          "name": "title",
          "value": "feat: update dashboard layout and enhance UI components with new styl\u2026",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "description",
          "value": "\u2026es and background container## Pull Request Title\r\n<!-- Provide a concise and descriptive title for the pull request -->\r\n\r\n## Related Issue\r\n<!-- If this pull request is related to an issue, please link it here using the \"#\" symbol followed by the issue number (e.g., #123) -->\r\n\r\n## Description\r\n<!-- Describe the changes made in this pull request. What problem does it solve or what feature does it add/modify? -->\r\n\r\n## Type\r\n<!-- Check the relevant options by putting an \"x\" in the brackets -->\r\n\r\n- [ ] Bug Fix\r\n- [ ] Feature Enhancement\r\n- [ ] Documentation Update\r\n- [ ] Code Refactoring\r\n- [ ] Other (please specify): \r\n\r\n## Proposed Changes\r\n<!-- List the specific changes made in this pull request -->\r\n\r\n- \r\n- \r\n- \r\n\r\n## Screenshots / Code Snippets (if applicable)\r\n<!-- Include any relevant screenshots or code snippets that help visualize the changes made -->\r\n\r\n## How to Test\r\n<!-- Provide step-by-step instructions or a checklist for testing the changes in this pull request -->\r\n\r\n1. \r\n2. \r\n3. \r\n\r\n## Checklist\r\n<!-- Put an \"x\" in the brackets for the items that apply to this pull request -->\r\n\r\n- [ ] The code compiles successfully without any errors or warnings\r\n- [ ] The changes have been tested and verified\r\n- [ ] The documentation has been updated (if applicable)\r\n- [ ] The changes follow the project's coding guidelines and best practices\r\n- [ ] The commit messages are descriptive and follow the project's guidelines\r\n- [ ] All tests (if applicable) pass successfully\r\n- [ ] This pull request has been linked to the related issue (if applicable)\r\n\r\n## Additional Information\r\n<!-- Add any other information about the pull request that you think might be helpful -->\r\n\r\n",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "state",
          "value": "open",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": "README.md",
          "qualifier": "files"
        },
        {
          "objectId": "Star Resume Matcher.png",
          "qualifier": "files"
        },
        {
          "objectId": "assets/Star Resume Matcher.png",
          "qualifier": "files"
        },
        {
          "objectId": "assets/features.png",
          "qualifier": "files"
        },
        {
          "objectId": "assets/page_2.png",
          "qualifier": "files"
        },
        {
          "objectId": "features.png",
          "qualifier": "files"
        },
        {
          "objectId": "page_2.png",
          "qualifier": "files"
        },
        {
          "objectId": "ui/app/(default)/dashboard/page.tsx",
          "qualifier": "files"
        },
        {
          "objectId": "ui/app/layout.tsx",
          "qualifier": "files"
        },
        {
          "objectId": "ui/components/common/background-container.tsx",
          "qualifier": "files"
        },
        {
          "objectId": "ui/components/dashboard/job-listings.tsx",
          "qualifier": "files"
        },
        {
          "objectId": "ui/components/dashboard/resume-analysis.tsx",
          "qualifier": "files"
        },
        {
          "objectId": "ui/components/home/hero.tsx",
          "qualifier": "files"
        },
        {
          "objectId": "ui/tailwind.config.js",
          "qualifier": "files"
        },
        {
          "objectId": "Saurabh Rai",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "README.md",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Star Resume Matcher.png",
          "qualifier": "aggregates"
        },
        {
          "objectId": "assets/Star Resume Matcher.png",
          "qualifier": "aggregates"
        },
        {
          "objectId": "assets/features.png",
          "qualifier": "aggregates"
        },
        {
          "objectId": "assets/page_2.png",
          "qualifier": "aggregates"
        },
        {
          "objectId": "features.png",
          "qualifier": "aggregates"
        },
        {
          "objectId": "page_2.png",
          "qualifier": "aggregates"
        },
        {
          "objectId": "ui/app/(default)/dashboard/page.tsx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "ui/app/layout.tsx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "ui/components/common/background-container.tsx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "ui/components/dashboard/job-listings.tsx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "ui/components/dashboard/resume-analysis.tsx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "ui/components/home/hero.tsx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "ui/tailwind.config.js",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Saurabh Rai",
          "qualifier": "has-participant"
        },
        {
          "objectId": "0cc2a755ba313633e6e9c429e3d962130de4a63f",
          "qualifier": "commits"
        },
        {
          "objectId": "c3a8f9e1db3208f617b17a0b72e14ebcf6e286ff",
          "qualifier": "commits"
        },
        {
          "objectId": "602e02db1eaf1127953321237f7a67c9fdb77860",
          "qualifier": "is-merged-with"
        },
        {
          "objectId": "0cc2a755ba313633e6e9c429e3d962130de4a63f",
          "qualifier": "formalises"
        },
        {
          "objectId": "c3a8f9e1db3208f617b17a0b72e14ebcf6e286ff",
          "qualifier": "formalises"
        }
      ],
      "id": "359"
    },
    {
      "type": "pull_request",
      "attributes": [
        {
          "name": "title",
          "value": "Added ui",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "description",
          "value": "## Pull Request Title\n<!-- Provide a concise and descriptive title for the pull request -->\n\n## Related Issue\n<!-- If this pull request is related to an issue, please link it here using the \"#\" symbol followed by the issue number (e.g., #123) -->\n\n## Description\n<!-- Describe the changes made in this pull request. What problem does it solve or what feature does it add/modify? -->\n\n## Type\n<!-- Check the relevant options by putting an \"x\" in the brackets -->\n\n- [ ] Bug Fix\n- [ ] Feature Enhancement\n- [ ] Documentation Update\n- [ ] Code Refactoring\n- [ ] Other (please specify): \n\n## Proposed Changes\n<!-- List the specific changes made in this pull request -->\n\n- \n- \n- \n\n## Screenshots / Code Snippets (if applicable)\n<!-- Include any relevant screenshots or code snippets that help visualize the changes made -->\n\n## How to Test\n<!-- Provide step-by-step instructions or a checklist for testing the changes in this pull request -->\n\n1. \n2. \n3. \n\n## Checklist\n<!-- Put an \"x\" in the brackets for the items that apply to this pull request -->\n\n- [ ] The code compiles successfully without any errors or warnings\n- [ ] The changes have been tested and verified\n- [ ] The documentation has been updated (if applicable)\n- [ ] The changes follow the project's coding guidelines and best practices\n- [ ] The commit messages are descriptive and follow the project's guidelines\n- [ ] All tests (if applicable) pass successfully\n- [ ] This pull request has been linked to the related issue (if applicable)\n\n## Additional Information\n<!-- Add any other information about the pull request that you think might be helpful -->\n\n",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "state",
          "value": "open",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": "ui/app/(default)/(onboarding)/jobs/page.tsx",
          "qualifier": "files"
        },
        {
          "objectId": "ui/app/(default)/(onboarding)/resume/page.tsx",
          "qualifier": "files"
        },
        {
          "objectId": "ui/app/(default)/dashboard/page.tsx",
          "qualifier": "files"
        },
        {
          "objectId": "ui/components/common/background-container.tsx",
          "qualifier": "files"
        },
        {
          "objectId": "ui/components/common/comp-71.tsx",
          "qualifier": "files"
        },
        {
          "objectId": "ui/components/common/file-upload.tsx",
          "qualifier": "files"
        },
        {
          "objectId": "ui/components/common/github-star-badge.tsx",
          "qualifier": "files"
        },
        {
          "objectId": "ui/components/dashboard/job-listings.tsx",
          "qualifier": "files"
        },
        {
          "objectId": "ui/components/dashboard/paste-job-description.tsx",
          "qualifier": "files"
        },
        {
          "objectId": "ui/components/dashboard/resume-analysis.tsx",
          "qualifier": "files"
        },
        {
          "objectId": "ui/components/dashboard/resume-component.tsx",
          "qualifier": "files"
        },
        {
          "objectId": "ui/components/file-upload.tsx",
          "qualifier": "files"
        },
        {
          "objectId": "ui/components/jd-upload/text-area.tsx",
          "qualifier": "files"
        },
        {
          "objectId": "ui/components/ui/button.tsx",
          "qualifier": "files"
        },
        {
          "objectId": "ui/components/ui/dialog.tsx",
          "qualifier": "files"
        },
        {
          "objectId": "ui/hooks/use-file-upload.ts",
          "qualifier": "files"
        },
        {
          "objectId": "ui/package-lock.json",
          "qualifier": "files"
        },
        {
          "objectId": "ui/package.json",
          "qualifier": "files"
        },
        {
          "objectId": "Saurabh Rai",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "ui/app/(default)/(onboarding)/jobs/page.tsx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "ui/app/(default)/(onboarding)/resume/page.tsx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "ui/app/(default)/dashboard/page.tsx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "ui/components/common/background-container.tsx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "ui/components/common/comp-71.tsx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "ui/components/common/file-upload.tsx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "ui/components/common/github-star-badge.tsx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "ui/components/dashboard/job-listings.tsx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "ui/components/dashboard/paste-job-description.tsx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "ui/components/dashboard/resume-analysis.tsx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "ui/components/dashboard/resume-component.tsx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "ui/components/file-upload.tsx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "ui/components/jd-upload/text-area.tsx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "ui/components/ui/button.tsx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "ui/components/ui/dialog.tsx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "ui/hooks/use-file-upload.ts",
          "qualifier": "aggregates"
        },
        {
          "objectId": "ui/package-lock.json",
          "qualifier": "aggregates"
        },
        {
          "objectId": "ui/package.json",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Saurabh Rai",
          "qualifier": "has-participant"
        },
        {
          "objectId": "c14d8153cba9cb6f32cec54605969be473ee4707",
          "qualifier": "commits"
        },
        {
          "objectId": "23f84afafea1ebafcc748c095e1fe9072c338540",
          "qualifier": "commits"
        },
        {
          "objectId": "ffa06101b453b41645aa5c4b6747dd0d459101a1",
          "qualifier": "commits"
        },
        {
          "objectId": "5f7ec45668cf0d85493b0c50677da049b63bd117",
          "qualifier": "commits"
        },
        {
          "objectId": "86d271ec9edd7d7445d6a8eadda79769ad28db28",
          "qualifier": "is-merged-with"
        },
        {
          "objectId": "c14d8153cba9cb6f32cec54605969be473ee4707",
          "qualifier": "formalises"
        },
        {
          "objectId": "23f84afafea1ebafcc748c095e1fe9072c338540",
          "qualifier": "formalises"
        },
        {
          "objectId": "ffa06101b453b41645aa5c4b6747dd0d459101a1",
          "qualifier": "formalises"
        },
        {
          "objectId": "5f7ec45668cf0d85493b0c50677da049b63bd117",
          "qualifier": "formalises"
        }
      ],
      "id": "358"
    },
    {
      "type": "pull_request",
      "attributes": [
        {
          "name": "title",
          "value": "ISSUE-335 | streaming response endpoint",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "description",
          "value": "## Pull Request Title\r\n<!-- Provide a concise and descriptive title for the pull request -->\r\n\r\n## Related Issue\r\n<!-- If this pull request is related to an issue, please link it here using the \"#\" symbol followed by the issue number (e.g., #123) -->\r\n#335 \r\n## Description\r\n<!-- Describe the changes made in this pull request. What problem does it solve or what feature does it add/modify? -->\r\n\r\n## Type\r\n<!-- Check the relevant options by putting an \"x\" in the brackets -->\r\n\r\n- [ ] Bug Fix\r\n- [ ] Feature Enhancement\r\n- [ ] Documentation Update\r\n- [ ] Code Refactoring\r\n- [ ] Other (please specify): \r\n\r\n## Proposed Changes\r\n<!-- List the specific changes made in this pull request -->\r\n\r\n- \r\n- \r\n- \r\n\r\n## Screenshots / Code Snippets (if applicable)\r\n<!-- Include any relevant screenshots or code snippets that help visualize the changes made -->\r\n\r\n## How to Test\r\n<!-- Provide step-by-step instructions or a checklist for testing the changes in this pull request -->\r\n\r\n1. \r\n2. \r\n3. \r\n\r\n## Checklist\r\n<!-- Put an \"x\" in the brackets for the items that apply to this pull request -->\r\n\r\n- [ ] The code compiles successfully without any errors or warnings\r\n- [ ] The changes have been tested and verified\r\n- [ ] The documentation has been updated (if applicable)\r\n- [ ] The changes follow the project's coding guidelines and best practices\r\n- [ ] The commit messages are descriptive and follow the project's guidelines\r\n- [ ] All tests (if applicable) pass successfully\r\n- [ ] This pull request has been linked to the related issue (if applicable)\r\n\r\n## Additional Information\r\n<!-- Add any other information about the pull request that you think might be helpful -->\r\n\r\n\n\n<!-- This is an auto-generated comment: release notes by coderabbit.ai -->\n\n## Summary by CodeRabbit\n\n- **New Features**\n  - Introduced a modern web API for resume and job management using FastAPI, with endpoints for uploading resumes, jobs, and improving resume-job matches.\n  - Added support for extracting, structuring, and improving resumes and job descriptions using AI-powered agents and embedding-based similarity scoring.\n  - Implemented robust health checks, error handling, and request tracing via unique request IDs.\n\n- **Refactor**\n  - Replaced the previous Streamlit-based UI and all legacy scripts with a new backend architecture focused on APIs, database models, and modular services.\n  - Overhauled the dependency stack, updating and replacing libraries to support the new backend and async workflows.\n\n- **Chores**\n  - Removed obsolete scripts, data extractors, and Streamlit apps.\n  - Updated documentation and configuration files to reflect the new project structure.\n\n<!-- end of auto-generated comment: release notes by coderabbit.ai -->",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "state",
          "value": "open",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": "app.db",
          "qualifier": "files"
        },
        {
          "objectId": "app/api/router/v1/resume.py",
          "qualifier": "files"
        },
        {
          "objectId": "app/services/score_improvement_service.py",
          "qualifier": "files"
        },
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "app.db",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/api/router/v1/resume.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/services/score_improvement_service.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "has-participant"
        },
        {
          "objectId": "3621cf8f138b26adf8d28ad8326b148017ce701c",
          "qualifier": "commits"
        },
        {
          "objectId": "c3edf8ccb8108350fc91d7baf3fbeeaa0b458a7f",
          "qualifier": "commits"
        },
        {
          "objectId": "e4a901dc687e5dd16e7d6e845ab478e651560560",
          "qualifier": "is-merged-with"
        },
        {
          "objectId": "3621cf8f138b26adf8d28ad8326b148017ce701c",
          "qualifier": "formalises"
        },
        {
          "objectId": "c3edf8ccb8108350fc91d7baf3fbeeaa0b458a7f",
          "qualifier": "formalises"
        }
      ],
      "id": "356"
    },
    {
      "type": "pull_request",
      "attributes": [
        {
          "name": "title",
          "value": "Issue 325 |  emailstr -> str for contact email in jobs",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "description",
          "value": "## Pull Request Title\r\n<!-- Provide a concise and descriptive title for the pull request -->\r\n\r\n## Related Issue\r\n<!-- If this pull request is related to an issue, please link it here using the \"#\" symbol followed by the issue number (e.g., #123) -->\r\n#325 \r\n## Description\r\n<!-- Describe the changes made in this pull request. What problem does it solve or what feature does it add/modify? -->\r\n\r\n## Type\r\n<!-- Check the relevant options by putting an \"x\" in the brackets -->\r\n\r\n- [ ] Bug Fix\r\n- [ ] Feature Enhancement\r\n- [ ] Documentation Update\r\n- [ ] Code Refactoring\r\n- [ ] Other (please specify): \r\n\r\n## Proposed Changes\r\n<!-- List the specific changes made in this pull request -->\r\n\r\n- \r\n- \r\n- \r\n\r\n## Screenshots / Code Snippets (if applicable)\r\n<!-- Include any relevant screenshots or code snippets that help visualize the changes made -->\r\n\r\n## How to Test\r\n<!-- Provide step-by-step instructions or a checklist for testing the changes in this pull request -->\r\n\r\n1. \r\n2. \r\n3. \r\n\r\n## Checklist\r\n<!-- Put an \"x\" in the brackets for the items that apply to this pull request -->\r\n\r\n- [ ] The code compiles successfully without any errors or warnings\r\n- [ ] The changes have been tested and verified\r\n- [ ] The documentation has been updated (if applicable)\r\n- [ ] The changes follow the project's coding guidelines and best practices\r\n- [ ] The commit messages are descriptive and follow the project's guidelines\r\n- [ ] All tests (if applicable) pass successfully\r\n- [ ] This pull request has been linked to the related issue (if applicable)\r\n\r\n## Additional Information\r\n<!-- Add any other information about the pull request that you think might be helpful -->\r\n\r\n\n\n<!-- This is an auto-generated comment: release notes by coderabbit.ai -->\n\n## Summary by CodeRabbit\n\n- **New Features**\n  - Introduced a modern FastAPI-based backend with endpoints for uploading resumes and job descriptions, health checks, and resume improvement suggestions.\n  - Added robust database models for structured storage of resumes, jobs, and user data.\n  - Implemented automated extraction and structuring of resume and job data using language models and embedding services.\n  - Provided API-based scoring and iterative improvement of resumes against job descriptions.\n\n- **Bug Fixes**\n  - Not applicable.\n\n- **Documentation**\n  - Replaced the README with a minimal placeholder.\n\n- **Chores**\n  - Overhauled dependency list to focus on FastAPI, async support, and modern libraries.\n  - Removed legacy scripts, Streamlit apps, and related data science dependencies.\n  - Deleted Docker and pre-commit configuration files.\n\n- **Refactor**\n  - Migrated from a script-based architecture to a modular, service-oriented backend API.\n\n<!-- end of auto-generated comment: release notes by coderabbit.ai -->",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "state",
          "value": "open",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": "app/schemas/pydantic/structured_job.py",
          "qualifier": "files"
        },
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "app/schemas/pydantic/structured_job.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "has-participant"
        },
        {
          "objectId": "6a4161d1cd73ac976c7542dc97997a7cef6beef0",
          "qualifier": "commits"
        },
        {
          "objectId": "474f47280b1aacd9c705891e1bc313a80da953fb",
          "qualifier": "is-merged-with"
        },
        {
          "objectId": "6a4161d1cd73ac976c7542dc97997a7cef6beef0",
          "qualifier": "formalises"
        }
      ],
      "id": "355"
    },
    {
      "type": "pull_request",
      "attributes": [
        {
          "name": "title",
          "value": "ISSUE-325 | enum validation fixed in structured job pydantic schema",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "description",
          "value": "## Pull Request Title\r\n<!-- Provide a concise and descriptive title for the pull request -->\r\n\r\n## Related Issue\r\n<!-- If this pull request is related to an issue, please link it here using the \"#\" symbol followed by the issue number (e.g., #123) -->\r\n#325 \r\n## Description\r\n<!-- Describe the changes made in this pull request. What problem does it solve or what feature does it add/modify? -->\r\n\r\n## Type\r\n<!-- Check the relevant options by putting an \"x\" in the brackets -->\r\n\r\n- [ ] Bug Fix\r\n- [ ] Feature Enhancement\r\n- [ ] Documentation Update\r\n- [ ] Code Refactoring\r\n- [ ] Other (please specify): \r\n\r\n## Proposed Changes\r\n<!-- List the specific changes made in this pull request -->\r\n\r\n- \r\n- \r\n- \r\n\r\n## Screenshots / Code Snippets (if applicable)\r\n<!-- Include any relevant screenshots or code snippets that help visualize the changes made -->\r\n\r\n## How to Test\r\n<!-- Provide step-by-step instructions or a checklist for testing the changes in this pull request -->\r\n\r\n1. \r\n2. \r\n3. \r\n\r\n## Checklist\r\n<!-- Put an \"x\" in the brackets for the items that apply to this pull request -->\r\n\r\n- [ ] The code compiles successfully without any errors or warnings\r\n- [ ] The changes have been tested and verified\r\n- [ ] The documentation has been updated (if applicable)\r\n- [ ] The changes follow the project's coding guidelines and best practices\r\n- [ ] The commit messages are descriptive and follow the project's guidelines\r\n- [ ] All tests (if applicable) pass successfully\r\n- [ ] This pull request has been linked to the related issue (if applicable)\r\n\r\n## Additional Information\r\n<!-- Add any other information about the pull request that you think might be helpful -->\r\n\r\n\n\n<!-- This is an auto-generated comment: release notes by coderabbit.ai -->\n\n## Summary by CodeRabbit\n\n- **New Features**\n  - Introduced a modern web API for resume and job management, including endpoints for uploading resumes and job descriptions, and for improving resume-job matches.\n  - Added support for automated resume improvement and scoring using large language models and embeddings.\n  - Provided health check and request tracking via API.\n\n- **Bug Fixes**\n  - Improved error handling and validation in API endpoints for more robust user interactions.\n\n- **Documentation**\n  - Replaced the README content with a placeholder.\n\n- **Chores**\n  - Updated and streamlined dependencies for a modern, async Python web stack.\n  - Removed legacy scripts, data extraction utilities, and Streamlit-based applications.\n  - Deleted Docker and pre-commit configuration files.\n\n- **Refactor**\n  - Migrated from legacy script-based processing to a modular, service-oriented backend architecture.\n  - Reorganized project structure for maintainability and scalability.\n\n<!-- end of auto-generated comment: release notes by coderabbit.ai -->",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "state",
          "value": "open",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": "app/schemas/pydantic/structured_job.py",
          "qualifier": "files"
        },
        {
          "objectId": "app/services/job_service.py",
          "qualifier": "files"
        },
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "app/schemas/pydantic/structured_job.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/services/job_service.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "has-participant"
        },
        {
          "objectId": "615354ecada74e48925ea7f89bc1652e7d06b008",
          "qualifier": "commits"
        },
        {
          "objectId": "5c2728f7a635282dbde1f9dfdb1bd9b3ea83378e",
          "qualifier": "is-merged-with"
        },
        {
          "objectId": "615354ecada74e48925ea7f89bc1652e7d06b008",
          "qualifier": "formalises"
        }
      ],
      "id": "354"
    },
    {
      "type": "pull_request",
      "attributes": [
        {
          "name": "title",
          "value": "Issue 325 | await added before async db commit",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "description",
          "value": "## Pull Request Title\r\n<!-- Provide a concise and descriptive title for the pull request -->\r\n\r\n## Related Issue\r\n<!-- If this pull request is related to an issue, please link it here using the \"#\" symbol followed by the issue number (e.g., #123) -->\r\n#325 \r\n## Description\r\n<!-- Describe the changes made in this pull request. What problem does it solve or what feature does it add/modify? -->\r\n\r\n## Type\r\n<!-- Check the relevant options by putting an \"x\" in the brackets -->\r\n\r\n- [ ] Bug Fix\r\n- [ ] Feature Enhancement\r\n- [ ] Documentation Update\r\n- [ ] Code Refactoring\r\n- [ ] Other (please specify): \r\n\r\n## Proposed Changes\r\n<!-- List the specific changes made in this pull request -->\r\n\r\n- \r\n- \r\n- \r\n\r\n## Screenshots / Code Snippets (if applicable)\r\n<!-- Include any relevant screenshots or code snippets that help visualize the changes made -->\r\n\r\n## How to Test\r\n<!-- Provide step-by-step instructions or a checklist for testing the changes in this pull request -->\r\n\r\n1. \r\n2. \r\n3. \r\n\r\n## Checklist\r\n<!-- Put an \"x\" in the brackets for the items that apply to this pull request -->\r\n\r\n- [ ] The code compiles successfully without any errors or warnings\r\n- [ ] The changes have been tested and verified\r\n- [ ] The documentation has been updated (if applicable)\r\n- [ ] The changes follow the project's coding guidelines and best practices\r\n- [ ] The commit messages are descriptive and follow the project's guidelines\r\n- [ ] All tests (if applicable) pass successfully\r\n- [ ] This pull request has been linked to the related issue (if applicable)\r\n\r\n## Additional Information\r\n<!-- Add any other information about the pull request that you think might be helpful -->\r\n\r\n\n\n<!-- This is an auto-generated comment: release notes by coderabbit.ai -->\n\n## Summary by CodeRabbit\n\n- **New Features**\n  - Introduced a new FastAPI-based backend with endpoints for uploading and processing resumes and job descriptions, as well as scoring and improving resume-job matches.\n  - Added support for both local and OpenAI-based language model and embedding providers, with automatic provider selection.\n  - Implemented robust database models for resumes, jobs, and their relationships.\n  - Provided health check and request tracking via API middleware.\n\n- **Bug Fixes**\n  - Not applicable.\n\n- **Documentation**\n  - Replaced the README with a new placeholder; previous detailed documentation was removed.\n\n- **Chores**\n  - Overhauled dependencies to use modern async web and ML libraries.\n  - Removed legacy scripts, data extractors, and Streamlit-based UI in favor of the new backend architecture.\n  - Deleted Docker and pre-commit configuration files.\n\n<!-- end of auto-generated comment: release notes by coderabbit.ai -->",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "state",
          "value": "open",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": "app/services/job_service.py",
          "qualifier": "files"
        },
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "app/services/job_service.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "has-participant"
        },
        {
          "objectId": "cb963e61d6f17f72f928267632be78933e29c039",
          "qualifier": "commits"
        },
        {
          "objectId": "69c92cc249ebbae5065af5787a02d56e4004e207",
          "qualifier": "is-merged-with"
        },
        {
          "objectId": "cb963e61d6f17f72f928267632be78933e29c039",
          "qualifier": "formalises"
        }
      ],
      "id": "353"
    },
    {
      "type": "pull_request",
      "attributes": [
        {
          "name": "title",
          "value": "Issue 325 v2 | rename file for improvements service",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "description",
          "value": "## Pull Request Title\r\n<!-- Provide a concise and descriptive title for the pull request -->\r\n\r\n## Related Issue\r\n<!-- If this pull request is related to an issue, please link it here using the \"#\" symbol followed by the issue number (e.g., #123) -->\r\n#325 \r\n## Description\r\n<!-- Describe the changes made in this pull request. What problem does it solve or what feature does it add/modify? -->\r\n\r\n## Type\r\n<!-- Check the relevant options by putting an \"x\" in the brackets -->\r\n\r\n- [ ] Bug Fix\r\n- [ ] Feature Enhancement\r\n- [ ] Documentation Update\r\n- [ ] Code Refactoring\r\n- [ ] Other (please specify): \r\n\r\n## Proposed Changes\r\n<!-- List the specific changes made in this pull request -->\r\n\r\n- \r\n- \r\n- \r\n\r\n## Screenshots / Code Snippets (if applicable)\r\n<!-- Include any relevant screenshots or code snippets that help visualize the changes made -->\r\n\r\n## How to Test\r\n<!-- Provide step-by-step instructions or a checklist for testing the changes in this pull request -->\r\n\r\n1. \r\n2. \r\n3. \r\n\r\n## Checklist\r\n<!-- Put an \"x\" in the brackets for the items that apply to this pull request -->\r\n\r\n- [ ] The code compiles successfully without any errors or warnings\r\n- [ ] The changes have been tested and verified\r\n- [ ] The documentation has been updated (if applicable)\r\n- [ ] The changes follow the project's coding guidelines and best practices\r\n- [ ] The commit messages are descriptive and follow the project's guidelines\r\n- [ ] All tests (if applicable) pass successfully\r\n- [ ] This pull request has been linked to the related issue (if applicable)\r\n\r\n## Additional Information\r\n<!-- Add any other information about the pull request that you think might be helpful -->\r\n\r\n",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "state",
          "value": "open",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": "app/services/__init__.py",
          "qualifier": "files"
        },
        {
          "objectId": "app/services/score_improvement_service.py",
          "qualifier": "files"
        },
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "app/services/__init__.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/services/score_improvement_service.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "has-participant"
        },
        {
          "objectId": "cc6ef2a0d469f840109183e5d2454a24949cafb5",
          "qualifier": "commits"
        },
        {
          "objectId": "3317979a253b7af731df094d22a4b6ef69342f4e",
          "qualifier": "is-merged-with"
        },
        {
          "objectId": "cc6ef2a0d469f840109183e5d2454a24949cafb5",
          "qualifier": "formalises"
        }
      ],
      "id": "352"
    },
    {
      "type": "pull_request",
      "attributes": [
        {
          "name": "title",
          "value": "Issue 325 | embedding and scoring implementation",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "description",
          "value": "## Pull Request Title\r\n<!-- Provide a concise and descriptive title for the pull request -->\r\n\r\n## Related Issue\r\n<!-- If this pull request is related to an issue, please link it here using the \"#\" symbol followed by the issue number (e.g., #123) -->\r\n#325 \r\n## Description\r\n<!-- Describe the changes made in this pull request. What problem does it solve or what feature does it add/modify? -->\r\n\r\n## Type\r\n<!-- Check the relevant options by putting an \"x\" in the brackets -->\r\n\r\n- [ ] Bug Fix\r\n- [ ] Feature Enhancement\r\n- [ ] Documentation Update\r\n- [ ] Code Refactoring\r\n- [ ] Other (please specify): \r\n\r\n## Proposed Changes\r\n<!-- List the specific changes made in this pull request -->\r\n\r\n- \r\n- \r\n- \r\n\r\n## Screenshots / Code Snippets (if applicable)\r\n<!-- Include any relevant screenshots or code snippets that help visualize the changes made -->\r\n\r\n## How to Test\r\n<!-- Provide step-by-step instructions or a checklist for testing the changes in this pull request -->\r\n\r\n1. \r\n2. \r\n3. \r\n\r\n## Checklist\r\n<!-- Put an \"x\" in the brackets for the items that apply to this pull request -->\r\n\r\n- [ ] The code compiles successfully without any errors or warnings\r\n- [ ] The changes have been tested and verified\r\n- [ ] The documentation has been updated (if applicable)\r\n- [ ] The changes follow the project's coding guidelines and best practices\r\n- [ ] The commit messages are descriptive and follow the project's guidelines\r\n- [ ] All tests (if applicable) pass successfully\r\n- [ ] This pull request has been linked to the related issue (if applicable)\r\n\r\n## Additional Information\r\n<!-- Add any other information about the pull request that you think might be helpful -->\r\n\r\n",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "state",
          "value": "open",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": "app.db",
          "qualifier": "files"
        },
        {
          "objectId": "app/agent/__init__.py",
          "qualifier": "files"
        },
        {
          "objectId": "app/agent/manager.py",
          "qualifier": "files"
        },
        {
          "objectId": "app/agent/providers/base.py",
          "qualifier": "files"
        },
        {
          "objectId": "app/agent/providers/ollama.py",
          "qualifier": "files"
        },
        {
          "objectId": "app/agent/providers/openai.py",
          "qualifier": "files"
        },
        {
          "objectId": "app/agent/strategies/wrapper.py",
          "qualifier": "files"
        },
        {
          "objectId": "app/api/router/v1/resume.py",
          "qualifier": "files"
        },
        {
          "objectId": "app/core/exceptions.py",
          "qualifier": "files"
        },
        {
          "objectId": "app/prompt/resume_improvement.py",
          "qualifier": "files"
        },
        {
          "objectId": "app/schemas/pydantic/__init__.py",
          "qualifier": "files"
        },
        {
          "objectId": "app/schemas/pydantic/resume_improvement.py",
          "qualifier": "files"
        },
        {
          "objectId": "app/schemas/pydantic/structured_job.py",
          "qualifier": "files"
        },
        {
          "objectId": "app/services/__init__.py",
          "qualifier": "files"
        },
        {
          "objectId": "app/services/exceptions.py",
          "qualifier": "files"
        },
        {
          "objectId": "app/services/job_service.py",
          "qualifier": "files"
        },
        {
          "objectId": "app/services/scoring_improvement_service.py",
          "qualifier": "files"
        },
        {
          "objectId": "requirements.txt",
          "qualifier": "files"
        },
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "app.db",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/agent/__init__.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/agent/manager.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/agent/providers/base.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/agent/providers/ollama.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/agent/providers/openai.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/agent/strategies/wrapper.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/api/router/v1/resume.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/core/exceptions.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/prompt/resume_improvement.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/schemas/pydantic/__init__.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/schemas/pydantic/resume_improvement.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/schemas/pydantic/structured_job.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/services/__init__.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/services/exceptions.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/services/job_service.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/services/scoring_improvement_service.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "requirements.txt",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "has-participant"
        },
        {
          "objectId": "1b09afcf548e2783fe0635093c39f0e675e684a8",
          "qualifier": "commits"
        },
        {
          "objectId": "0224dec3a44db45105035a2cf48cf7302a138d89",
          "qualifier": "commits"
        },
        {
          "objectId": "8ac9c1298baf3508dbf99126c3e27d1e3b7e45da",
          "qualifier": "commits"
        },
        {
          "objectId": "a6c58e0dc4daeb36bc2d410cfc26ad2786a591bd",
          "qualifier": "commits"
        },
        {
          "objectId": "e1b750448af329eb35fb355640af0f82e4e56486",
          "qualifier": "commits"
        },
        {
          "objectId": "6f615ecb7b71b478036191c50b6aa2d7aa0c6932",
          "qualifier": "commits"
        },
        {
          "objectId": "1ceac982530edaa86bdc3b3e0dca08f916fae950",
          "qualifier": "is-merged-with"
        },
        {
          "objectId": "1b09afcf548e2783fe0635093c39f0e675e684a8",
          "qualifier": "formalises"
        },
        {
          "objectId": "0224dec3a44db45105035a2cf48cf7302a138d89",
          "qualifier": "formalises"
        },
        {
          "objectId": "8ac9c1298baf3508dbf99126c3e27d1e3b7e45da",
          "qualifier": "formalises"
        },
        {
          "objectId": "a6c58e0dc4daeb36bc2d410cfc26ad2786a591bd",
          "qualifier": "formalises"
        },
        {
          "objectId": "e1b750448af329eb35fb355640af0f82e4e56486",
          "qualifier": "formalises"
        },
        {
          "objectId": "6f615ecb7b71b478036191c50b6aa2d7aa0c6932",
          "qualifier": "formalises"
        }
      ],
      "id": "351"
    },
    {
      "type": "pull_request",
      "attributes": [
        {
          "name": "title",
          "value": "Issue 322 | async DB layer",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "description",
          "value": "## Pull Request Title\r\n<!-- Provide a concise and descriptive title for the pull request -->\r\n\r\n## Related Issue\r\n<!-- If this pull request is related to an issue, please link it here using the \"#\" symbol followed by the issue number (e.g., #123) -->\r\n#322 \r\n## Description\r\n<!-- Describe the changes made in this pull request. What problem does it solve or what feature does it add/modify? -->\r\n\r\n## Type\r\n<!-- Check the relevant options by putting an \"x\" in the brackets -->\r\n\r\n- [ ] Bug Fix\r\n- [ ] Feature Enhancement\r\n- [ ] Documentation Update\r\n- [ ] Code Refactoring\r\n- [ ] Other (please specify): \r\n\r\n## Proposed Changes\r\n<!-- List the specific changes made in this pull request -->\r\n\r\n- \r\n- \r\n- \r\n\r\n## Screenshots / Code Snippets (if applicable)\r\n<!-- Include any relevant screenshots or code snippets that help visualize the changes made -->\r\n\r\n## How to Test\r\n<!-- Provide step-by-step instructions or a checklist for testing the changes in this pull request -->\r\n\r\n1. \r\n2. \r\n3. \r\n\r\n## Checklist\r\n<!-- Put an \"x\" in the brackets for the items that apply to this pull request -->\r\n\r\n- [ ] The code compiles successfully without any errors or warnings\r\n- [ ] The changes have been tested and verified\r\n- [ ] The documentation has been updated (if applicable)\r\n- [ ] The changes follow the project's coding guidelines and best practices\r\n- [ ] The commit messages are descriptive and follow the project's guidelines\r\n- [ ] All tests (if applicable) pass successfully\r\n- [ ] This pull request has been linked to the related issue (if applicable)\r\n\r\n## Additional Information\r\n<!-- Add any other information about the pull request that you think might be helpful -->\r\n\r\n\n\n<!-- This is an auto-generated comment: release notes by coderabbit.ai -->\n\n## Summary by CodeRabbit\n\n- **New Features**\n  - Introduced a modern web API for uploading and processing resumes and job descriptions, with endpoints for file upload and health checks.\n  - Added asynchronous support for language model providers, enabling extraction and structuring of resume and job data.\n  - Implemented robust database models for storing raw and processed resumes and job descriptions, including relationships and structured JSON fields.\n  - Integrated dynamic prompt and schema factories for flexible data extraction and validation.\n\n- **Bug Fixes**\n  - Improved error handling and validation for file uploads and API requests.\n\n- **Chores**\n  - Overhauled project dependencies, removing legacy data science and Streamlit packages in favor of FastAPI, async support, and modern libraries.\n  - Cleaned up and removed obsolete scripts, notebooks, and legacy UI files.\n  - Updated documentation and configuration files for clarity and maintainability.\n\n- **Refactor**\n  - Replaced the legacy Streamlit-based interface and monolithic scripts with a modular, service-oriented backend architecture.\n\n- **Style**\n  - Standardized logging, exception handling, and API responses for consistency across the application.\n\n- **Documentation**\n  - Simplified the README to reflect the new project direction.\n\n<!-- end of auto-generated comment: release notes by coderabbit.ai -->",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "state",
          "value": "open",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": "app.db",
          "qualifier": "files"
        },
        {
          "objectId": "app/agent/strategies/wrapper.py",
          "qualifier": "files"
        },
        {
          "objectId": "app/api/__init__.py",
          "qualifier": "files"
        },
        {
          "objectId": "app/api/middleware.py",
          "qualifier": "files"
        },
        {
          "objectId": "app/api/router/health.py",
          "qualifier": "files"
        },
        {
          "objectId": "app/api/router/v1/__init__.py",
          "qualifier": "files"
        },
        {
          "objectId": "app/api/router/v1/job.py",
          "qualifier": "files"
        },
        {
          "objectId": "app/api/router/v1/resume.py",
          "qualifier": "files"
        },
        {
          "objectId": "app/base.py",
          "qualifier": "files"
        },
        {
          "objectId": "app/core/__init__.py",
          "qualifier": "files"
        },
        {
          "objectId": "app/core/config.py",
          "qualifier": "files"
        },
        {
          "objectId": "app/core/database.py",
          "qualifier": "files"
        },
        {
          "objectId": "app/main.py",
          "qualifier": "files"
        },
        {
          "objectId": "app/models/job.py",
          "qualifier": "files"
        },
        {
          "objectId": "app/models/resume.py",
          "qualifier": "files"
        },
        {
          "objectId": "app/schemas/pydantic/job.py",
          "qualifier": "files"
        },
        {
          "objectId": "app/schemas/pydantic/structured_job.py",
          "qualifier": "files"
        },
        {
          "objectId": "app/services/job_service.py",
          "qualifier": "files"
        },
        {
          "objectId": "app/services/resume_service.py",
          "qualifier": "files"
        },
        {
          "objectId": "app/utils/utils.py",
          "qualifier": "files"
        },
        {
          "objectId": "requirements.txt",
          "qualifier": "files"
        },
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "app.db",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/agent/strategies/wrapper.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/api/__init__.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/api/middleware.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/api/router/health.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/api/router/v1/__init__.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/api/router/v1/job.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/api/router/v1/resume.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/base.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/core/__init__.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/core/config.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/core/database.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/main.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/models/job.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/models/resume.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/schemas/pydantic/job.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/schemas/pydantic/structured_job.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/services/job_service.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/services/resume_service.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/utils/utils.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "requirements.txt",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "has-participant"
        },
        {
          "objectId": "282aff8daa3dd6e509ea6592c2eef87376801ef7",
          "qualifier": "commits"
        },
        {
          "objectId": "aaca47af7534970c1d20e7b19a5ec493172e5a2d",
          "qualifier": "commits"
        },
        {
          "objectId": "b252b3f927f45feda72b68386471c38334d07400",
          "qualifier": "is-merged-with"
        },
        {
          "objectId": "282aff8daa3dd6e509ea6592c2eef87376801ef7",
          "qualifier": "formalises"
        },
        {
          "objectId": "aaca47af7534970c1d20e7b19a5ec493172e5a2d",
          "qualifier": "formalises"
        }
      ],
      "id": "350"
    },
    {
      "type": "pull_request",
      "attributes": [
        {
          "name": "title",
          "value": "Issue 324 v3",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "description",
          "value": "## Pull Request Title\r\n<!-- Provide a concise and descriptive title for the pull request -->\r\n\r\n## Related Issue\r\n<!-- If this pull request is related to an issue, please link it here using the \"#\" symbol followed by the issue number (e.g., #123) -->\r\n\r\n## Description\r\n<!-- Describe the changes made in this pull request. What problem does it solve or what feature does it add/modify? -->\r\n#324 \r\n#327 \r\n\r\n## Type\r\n<!-- Check the relevant options by putting an \"x\" in the brackets -->\r\n\r\n- [ ] Bug Fix\r\n- [ ] Feature Enhancement\r\n- [ ] Documentation Update\r\n- [ ] Code Refactoring\r\n- [ ] Other (please specify): \r\n\r\n## Proposed Changes\r\n<!-- List the specific changes made in this pull request -->\r\n\r\n- \r\n- \r\n- \r\n\r\n## Screenshots / Code Snippets (if applicable)\r\n<!-- Include any relevant screenshots or code snippets that help visualize the changes made -->\r\n\r\n## How to Test\r\n<!-- Provide step-by-step instructions or a checklist for testing the changes in this pull request -->\r\n\r\n1. \r\n2. \r\n3. \r\n\r\n## Checklist\r\n<!-- Put an \"x\" in the brackets for the items that apply to this pull request -->\r\n\r\n- [ ] The code compiles successfully without any errors or warnings\r\n- [ ] The changes have been tested and verified\r\n- [ ] The documentation has been updated (if applicable)\r\n- [ ] The changes follow the project's coding guidelines and best practices\r\n- [ ] The commit messages are descriptive and follow the project's guidelines\r\n- [ ] All tests (if applicable) pass successfully\r\n- [ ] This pull request has been linked to the related issue (if applicable)\r\n\r\n## Additional Information\r\n<!-- Add any other information about the pull request that you think might be helpful -->\r\n\r\n\r\n\r\n<!-- This is an auto-generated comment: release notes by coderabbit.ai -->\r\n\r\n## Summary by CodeRabbit\r\n\r\n- **New Features**\r\n  - Introduced a modern backend API with endpoints for uploading and processing resumes and job descriptions.\r\n  - Added health check endpoint to verify server and database connectivity.\r\n  - Implemented asynchronous AI agent selection with support for OpenAI and local models.\r\n  - Provided structured JSON schema validation for resumes and jobs.\r\n  - Enabled automatic extraction and storage of structured data from uploaded files.\r\n\r\n- **Bug Fixes**\r\n  - Improved error handling and validation for file uploads and API requests.\r\n\r\n- **Refactor**\r\n  - Replaced legacy data science scripts and Streamlit apps with a modular FastAPI backend.\r\n  - Migrated from custom NLP and scoring utilities to a service-oriented architecture.\r\n\r\n- **Chores**\r\n  - Updated dependencies to focus on backend and API development.\r\n  - Removed obsolete scripts, notebooks, and Docker-related files.\r\n  - Simplified and modernized documentation.\r\n\r\n- **Documentation**\r\n  - Replaced the README with a placeholder.\r\n  - Removed outdated and redundant documentation and comments.\r\n\r\n<!-- end of auto-generated comment: release notes by coderabbit.ai -->",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "state",
          "value": "open",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": "app.db",
          "qualifier": "files"
        },
        {
          "objectId": "app/api/router/v1/job.py",
          "qualifier": "files"
        },
        {
          "objectId": "app/models/__init__.py",
          "qualifier": "files"
        },
        {
          "objectId": "app/models/job.py",
          "qualifier": "files"
        },
        {
          "objectId": "app/prompt/structured_job.py",
          "qualifier": "files"
        },
        {
          "objectId": "app/schemas/json/structured_job.py",
          "qualifier": "files"
        },
        {
          "objectId": "app/schemas/pydantic/__init__.py",
          "qualifier": "files"
        },
        {
          "objectId": "app/schemas/pydantic/structured_job.py",
          "qualifier": "files"
        },
        {
          "objectId": "app/services/job_service.py",
          "qualifier": "files"
        },
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "app.db",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/api/router/v1/job.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/models/__init__.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/models/job.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/prompt/structured_job.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/schemas/json/structured_job.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/schemas/pydantic/__init__.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/schemas/pydantic/structured_job.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/services/job_service.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "has-participant"
        },
        {
          "objectId": "a8a0935bb1bc93441fd8153cbb8960a0e79a400a",
          "qualifier": "commits"
        },
        {
          "objectId": "9f69d00f3b4fd436a9ca072ee9a050b991f80c05",
          "qualifier": "is-merged-with"
        },
        {
          "objectId": "a8a0935bb1bc93441fd8153cbb8960a0e79a400a",
          "qualifier": "formalises"
        }
      ],
      "id": "349"
    },
    {
      "type": "pull_request",
      "attributes": [
        {
          "name": "title",
          "value": "Issue 324 v2",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "description",
          "value": "## Pull Request Title\r\n<!-- Provide a concise and descriptive title for the pull request -->\r\n\r\n## Related Issue\r\n<!-- If this pull request is related to an issue, please link it here using the \"#\" symbol followed by the issue number (e.g., #123) -->\r\n#324 \r\n## Description\r\n<!-- Describe the changes made in this pull request. What problem does it solve or what feature does it add/modify? -->\r\n\r\n## Type\r\n<!-- Check the relevant options by putting an \"x\" in the brackets -->\r\n\r\n- [ ] Bug Fix\r\n- [ ] Feature Enhancement\r\n- [ ] Documentation Update\r\n- [ ] Code Refactoring\r\n- [ ] Other (please specify): \r\n\r\n## Proposed Changes\r\n<!-- List the specific changes made in this pull request -->\r\n\r\n- \r\n- \r\n- \r\n\r\n## Screenshots / Code Snippets (if applicable)\r\n<!-- Include any relevant screenshots or code snippets that help visualize the changes made -->\r\n\r\n## How to Test\r\n<!-- Provide step-by-step instructions or a checklist for testing the changes in this pull request -->\r\n\r\n1. \r\n2. \r\n3. \r\n\r\n## Checklist\r\n<!-- Put an \"x\" in the brackets for the items that apply to this pull request -->\r\n\r\n- [ ] The code compiles successfully without any errors or warnings\r\n- [ ] The changes have been tested and verified\r\n- [ ] The documentation has been updated (if applicable)\r\n- [ ] The changes follow the project's coding guidelines and best practices\r\n- [ ] The commit messages are descriptive and follow the project's guidelines\r\n- [ ] All tests (if applicable) pass successfully\r\n- [ ] This pull request has been linked to the related issue (if applicable)\r\n\r\n## Additional Information\r\n<!-- Add any other information about the pull request that you think might be helpful -->\r\n\r\n",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "state",
          "value": "open",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": "app.db",
          "qualifier": "files"
        },
        {
          "objectId": "app/agent/providers/ollama.py",
          "qualifier": "files"
        },
        {
          "objectId": "app/agent/strategies/wrapper.py",
          "qualifier": "files"
        },
        {
          "objectId": "app/api/router/v1/job.py",
          "qualifier": "files"
        },
        {
          "objectId": "app/api/router/v1/resume.py",
          "qualifier": "files"
        },
        {
          "objectId": "app/base.py",
          "qualifier": "files"
        },
        {
          "objectId": "app/core/__init__.py",
          "qualifier": "files"
        },
        {
          "objectId": "app/core/config.py",
          "qualifier": "files"
        },
        {
          "objectId": "app/models/job.py",
          "qualifier": "files"
        },
        {
          "objectId": "app/models/resume.py",
          "qualifier": "files"
        },
        {
          "objectId": "app/models/user.py",
          "qualifier": "files"
        },
        {
          "objectId": "app/prompt/__init__.py",
          "qualifier": "files"
        },
        {
          "objectId": "app/prompt/base.py",
          "qualifier": "files"
        },
        {
          "objectId": "app/prompt/structured_resume.py",
          "qualifier": "files"
        },
        {
          "objectId": "app/schemas/json/__init__.py",
          "qualifier": "files"
        },
        {
          "objectId": "app/schemas/json/base.py",
          "qualifier": "files"
        },
        {
          "objectId": "app/schemas/json/structured_resume.py",
          "qualifier": "files"
        },
        {
          "objectId": "app/schemas/pydantic/__init__.py",
          "qualifier": "files"
        },
        {
          "objectId": "app/schemas/pydantic/job.py",
          "qualifier": "files"
        },
        {
          "objectId": "app/schemas/pydantic/structured_resume.py",
          "qualifier": "files"
        },
        {
          "objectId": "app/services/resume_service.py",
          "qualifier": "files"
        },
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "app.db",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/agent/providers/ollama.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/agent/strategies/wrapper.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/api/router/v1/job.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/api/router/v1/resume.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/base.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/core/__init__.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/core/config.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/models/job.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/models/resume.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/models/user.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/prompt/__init__.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/prompt/base.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/prompt/structured_resume.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/schemas/json/__init__.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/schemas/json/base.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/schemas/json/structured_resume.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/schemas/pydantic/__init__.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/schemas/pydantic/job.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/schemas/pydantic/structured_resume.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/services/resume_service.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "has-participant"
        },
        {
          "objectId": "bc37099b67868a928132f63b6e2ad0e56e5c9b47",
          "qualifier": "commits"
        },
        {
          "objectId": "bc5004c96a45b00850aad311678665e7b7576427",
          "qualifier": "commits"
        },
        {
          "objectId": "1195251d62964abdd5fa8c23d95f3729fb6e57d6",
          "qualifier": "is-merged-with"
        },
        {
          "objectId": "bc37099b67868a928132f63b6e2ad0e56e5c9b47",
          "qualifier": "formalises"
        },
        {
          "objectId": "bc5004c96a45b00850aad311678665e7b7576427",
          "qualifier": "formalises"
        }
      ],
      "id": "348"
    },
    {
      "type": "pull_request",
      "attributes": [
        {
          "name": "title",
          "value": "requirements.txt",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "description",
          "value": "Updated All the libraries to their updated version\r\n\r\n## Pull Request Title\r\n<!-- Provide a concise and descriptive title for the pull request -->\r\n\r\n## Related Issue\r\n<!-- If this pull request is related to an issue, please link it here using the \"#\" symbol followed by the issue number (e.g., #123) -->\r\n\r\n## Description\r\n<!-- Describe the changes made in this pull request. What problem does it solve or what feature does it add/modify? -->\r\n\r\n## Type\r\n<!-- Check the relevant options by putting an \"x\" in the brackets -->\r\n\r\n- [ ] Bug Fix\r\n- [ ] Feature Enhancement\r\n- [ ] Documentation Update\r\n- [ ] Code Refactoring\r\n- [ ] Other (please specify): \r\n\r\n## Proposed Changes\r\n<!-- List the specific changes made in this pull request -->\r\n\r\n- \r\n- \r\n- \r\n\r\n## Screenshots / Code Snippets (if applicable)\r\n<!-- Include any relevant screenshots or code snippets that help visualize the changes made -->\r\n\r\n## How to Test\r\n<!-- Provide step-by-step instructions or a checklist for testing the changes in this pull request -->\r\n\r\n1. \r\n2. \r\n3. \r\n\r\n## Checklist\r\n<!-- Put an \"x\" in the brackets for the items that apply to this pull request -->\r\n\r\n- [ ] The code compiles successfully without any errors or warnings\r\n- [ ] The changes have been tested and verified\r\n- [ ] The documentation has been updated (if applicable)\r\n- [ ] The changes follow the project's coding guidelines and best practices\r\n- [ ] The commit messages are descriptive and follow the project's guidelines\r\n- [ ] All tests (if applicable) pass successfully\r\n- [ ] This pull request has been linked to the related issue (if applicable)\r\n\r\n## Additional Information\r\n<!-- Add any other information about the pull request that you think might be helpful -->\r\n\r\n\n\n<!-- This is an auto-generated comment: release notes by coderabbit.ai -->\n\n## Summary by CodeRabbit\n\n- **Chores**\n  - Upgraded nearly all Python package dependencies to newer versions for improved compatibility and performance.\n  - Updated Spacy language model URLs and versions.\n  - No packages were added or removed; only version numbers and some URLs were changed.\n\n<!-- end of auto-generated comment: release notes by coderabbit.ai -->",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "state",
          "value": "open",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": "requirements.txt",
          "qualifier": "files"
        },
        {
          "objectId": "Nawajish10",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "requirements.txt",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Nawajish10",
          "qualifier": "has-participant"
        },
        {
          "objectId": "1bf36b27d6f1f9996c5fc6fbffde03f700b313a7",
          "qualifier": "commits"
        },
        {
          "objectId": "66fe4b6510160e926f7c6c608c098cdab1f4a2d9",
          "qualifier": "is-merged-with"
        },
        {
          "objectId": "1bf36b27d6f1f9996c5fc6fbffde03f700b313a7",
          "qualifier": "formalises"
        }
      ],
      "id": "347"
    },
    {
      "type": "pull_request",
      "attributes": [
        {
          "name": "title",
          "value": "Issue-324 | agent and llm call implementation",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "description",
          "value": "## Pull Request Title\r\n<!-- Provide a concise and descriptive title for the pull request -->\r\n\r\n## Related Issue\r\n<!-- If this pull request is related to an issue, please link it here using the \"#\" symbol followed by the issue number (e.g., #123) -->\r\n#324 \r\n## Description\r\n<!-- Describe the changes made in this pull request. What problem does it solve or what feature does it add/modify? -->\r\n\r\n## Type\r\n<!-- Check the relevant options by putting an \"x\" in the brackets -->\r\n\r\n- [ ] Bug Fix\r\n- [ ] Feature Enhancement\r\n- [ ] Documentation Update\r\n- [ ] Code Refactoring\r\n- [ ] Other (please specify): \r\n\r\n## Proposed Changes\r\n<!-- List the specific changes made in this pull request -->\r\n\r\n- \r\n- \r\n- \r\n\r\n## Screenshots / Code Snippets (if applicable)\r\n<!-- Include any relevant screenshots or code snippets that help visualize the changes made -->\r\n\r\n## How to Test\r\n<!-- Provide step-by-step instructions or a checklist for testing the changes in this pull request -->\r\n\r\n1. \r\n2. \r\n3. \r\n\r\n## Checklist\r\n<!-- Put an \"x\" in the brackets for the items that apply to this pull request -->\r\n\r\n- [ ] The code compiles successfully without any errors or warnings\r\n- [ ] The changes have been tested and verified\r\n- [ ] The documentation has been updated (if applicable)\r\n- [ ] The changes follow the project's coding guidelines and best practices\r\n- [ ] The commit messages are descriptive and follow the project's guidelines\r\n- [ ] All tests (if applicable) pass successfully\r\n- [ ] This pull request has been linked to the related issue (if applicable)\r\n\r\n## Additional Information\r\n<!-- Add any other information about the pull request that you think might be helpful -->\r\n\r\n",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "state",
          "value": "open",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": "app/agent/__init__.py",
          "qualifier": "files"
        },
        {
          "objectId": "app/agent/exceptions.py",
          "qualifier": "files"
        },
        {
          "objectId": "app/agent/manager.py",
          "qualifier": "files"
        },
        {
          "objectId": "app/agent/providers/base.py",
          "qualifier": "files"
        },
        {
          "objectId": "app/agent/providers/ollama.py",
          "qualifier": "files"
        },
        {
          "objectId": "app/agent/providers/openai.py",
          "qualifier": "files"
        },
        {
          "objectId": "app/agent/strategies/base.py",
          "qualifier": "files"
        },
        {
          "objectId": "app/agent/strategies/wrapper.py",
          "qualifier": "files"
        },
        {
          "objectId": "requirements.txt",
          "qualifier": "files"
        },
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "app/agent/__init__.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/agent/exceptions.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/agent/manager.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/agent/providers/base.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/agent/providers/ollama.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/agent/providers/openai.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/agent/strategies/base.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/agent/strategies/wrapper.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "requirements.txt",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "has-participant"
        },
        {
          "objectId": "f72b58eb67965d5b4610c5b21f1a4ae9d59c1efb",
          "qualifier": "commits"
        },
        {
          "objectId": "6d443bd9d2c50337b50b38226ba27728586d955c",
          "qualifier": "commits"
        },
        {
          "objectId": "5455337a6909c7db1d2b2313ebd9ceafbf509d93",
          "qualifier": "is-merged-with"
        },
        {
          "objectId": "f72b58eb67965d5b4610c5b21f1a4ae9d59c1efb",
          "qualifier": "formalises"
        },
        {
          "objectId": "6d443bd9d2c50337b50b38226ba27728586d955c",
          "qualifier": "formalises"
        }
      ],
      "id": "345"
    },
    {
      "type": "pull_request",
      "attributes": [
        {
          "name": "title",
          "value": "Issue 332 | Job processing API implementation",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "description",
          "value": "## Pull Request Title\r\n<!-- Provide a concise and descriptive title for the pull request -->\r\nJob processing API implementation\r\n## Related Issue\r\n<!-- If this pull request is related to an issue, please link it here using the \"#\" symbol followed by the issue number (e.g., #123) -->\r\n#332 \r\n## Description\r\n<!-- Describe the changes made in this pull request. What problem does it solve or what feature does it add/modify? -->\r\n\r\n## Type\r\n<!-- Check the relevant options by putting an \"x\" in the brackets -->\r\n\r\n- [ ] Bug Fix\r\n- [ ] Feature Enhancement\r\n- [ ] Documentation Update\r\n- [ ] Code Refactoring\r\n- [ ] Other (please specify): \r\n\r\n## Proposed Changes\r\n<!-- List the specific changes made in this pull request -->\r\n\r\n- \r\n- \r\n- \r\n\r\n## Screenshots / Code Snippets (if applicable)\r\n<!-- Include any relevant screenshots or code snippets that help visualize the changes made -->\r\n\r\n## How to Test\r\n<!-- Provide step-by-step instructions or a checklist for testing the changes in this pull request -->\r\n\r\n1. \r\n2. \r\n3. \r\n\r\n## Checklist\r\n<!-- Put an \"x\" in the brackets for the items that apply to this pull request -->\r\n\r\n- [ ] The code compiles successfully without any errors or warnings\r\n- [ ] The changes have been tested and verified\r\n- [ ] The documentation has been updated (if applicable)\r\n- [ ] The changes follow the project's coding guidelines and best practices\r\n- [ ] The commit messages are descriptive and follow the project's guidelines\r\n- [ ] All tests (if applicable) pass successfully\r\n- [ ] This pull request has been linked to the related issue (if applicable)\r\n\r\n## Additional Information\r\n<!-- Add any other information about the pull request that you think might be helpful -->\r\n\r\n",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "state",
          "value": "open",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": "app.db",
          "qualifier": "files"
        },
        {
          "objectId": "app/api/router/v1/__init__.py",
          "qualifier": "files"
        },
        {
          "objectId": "app/api/router/v1/job.py",
          "qualifier": "files"
        },
        {
          "objectId": "app/api/router/v1/resume.py",
          "qualifier": "files"
        },
        {
          "objectId": "app/models/association.py",
          "qualifier": "files"
        },
        {
          "objectId": "app/models/job.py",
          "qualifier": "files"
        },
        {
          "objectId": "app/models/resume.py",
          "qualifier": "files"
        },
        {
          "objectId": "app/models/user.py",
          "qualifier": "files"
        },
        {
          "objectId": "app/schemas/job.py",
          "qualifier": "files"
        },
        {
          "objectId": "app/services/__init__.py",
          "qualifier": "files"
        },
        {
          "objectId": "app/services/job_service.py",
          "qualifier": "files"
        },
        {
          "objectId": "app/services/resume_service.py",
          "qualifier": "files"
        },
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "app.db",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/api/router/v1/__init__.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/api/router/v1/job.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/api/router/v1/resume.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/models/association.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/models/job.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/models/resume.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/models/user.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/schemas/job.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/services/__init__.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/services/job_service.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/services/resume_service.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "has-participant"
        },
        {
          "objectId": "fa2c02df0acf2d4fb807161b683970c2c9d38d26",
          "qualifier": "commits"
        },
        {
          "objectId": "b3af62273e0a9bb9fa1dfcdd5132006a22dbd36e",
          "qualifier": "commits"
        },
        {
          "objectId": "4b483740be309b68e842397b0cbb69753a0dea7b",
          "qualifier": "commits"
        },
        {
          "objectId": "7ea5b50aa41ef40d111fc9260e11d50e4b5e8930",
          "qualifier": "commits"
        },
        {
          "objectId": "d835b4614bfe1516dc188eee0d30ec3ff2978d41",
          "qualifier": "is-merged-with"
        },
        {
          "objectId": "fa2c02df0acf2d4fb807161b683970c2c9d38d26",
          "qualifier": "formalises"
        },
        {
          "objectId": "b3af62273e0a9bb9fa1dfcdd5132006a22dbd36e",
          "qualifier": "formalises"
        },
        {
          "objectId": "4b483740be309b68e842397b0cbb69753a0dea7b",
          "qualifier": "formalises"
        },
        {
          "objectId": "7ea5b50aa41ef40d111fc9260e11d50e4b5e8930",
          "qualifier": "formalises"
        }
      ],
      "id": "344"
    },
    {
      "type": "pull_request",
      "attributes": [
        {
          "name": "title",
          "value": "Issue 332 | ruff refactoring and requirements.txt update",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "description",
          "value": "## Pull Request Title\r\n<!-- Provide a concise and descriptive title for the pull request -->\r\n\r\n## Related Issue\r\n<!-- If this pull request is related to an issue, please link it here using the \"#\" symbol followed by the issue number (e.g., #123) -->\r\n#332 \r\n## Description\r\n<!-- Describe the changes made in this pull request. What problem does it solve or what feature does it add/modify? -->\r\n\r\n## Type\r\n<!-- Check the relevant options by putting an \"x\" in the brackets -->\r\n\r\n- [ ] Bug Fix\r\n- [ ] Feature Enhancement\r\n- [ ] Documentation Update\r\n- [ ] Code Refactoring\r\n- [ ] Other (please specify): \r\n\r\n## Proposed Changes\r\n<!-- List the specific changes made in this pull request -->\r\n\r\n- \r\n- \r\n- \r\n\r\n## Screenshots / Code Snippets (if applicable)\r\n<!-- Include any relevant screenshots or code snippets that help visualize the changes made -->\r\n\r\n## How to Test\r\n<!-- Provide step-by-step instructions or a checklist for testing the changes in this pull request -->\r\n\r\n1. \r\n2. \r\n3. \r\n\r\n## Checklist\r\n<!-- Put an \"x\" in the brackets for the items that apply to this pull request -->\r\n\r\n- [ ] The code compiles successfully without any errors or warnings\r\n- [ ] The changes have been tested and verified\r\n- [ ] The documentation has been updated (if applicable)\r\n- [ ] The changes follow the project's coding guidelines and best practices\r\n- [ ] The commit messages are descriptive and follow the project's guidelines\r\n- [ ] All tests (if applicable) pass successfully\r\n- [ ] This pull request has been linked to the related issue (if applicable)\r\n\r\n## Additional Information\r\n<!-- Add any other information about the pull request that you think might be helpful -->\r\n\r\n\n\n<!-- This is an auto-generated comment: release notes by coderabbit.ai -->\n\n## Summary by CodeRabbit\n\n- **New Features**\n  - Introduced a new API with endpoints for health checks and resume uploads (PDF/DOCX), including resume conversion and storage.\n  - Added robust database schema and models for users, jobs, and resumes with relationships.\n  - Implemented middleware for request tracking and custom error handling.\n\n- **Bug Fixes**\n  - Improved error handling for file uploads and database connectivity in API endpoints.\n\n- **Chores**\n  - Major cleanup: removed legacy scripts, Streamlit apps, and old data processing utilities.\n  - Updated and modernized dependencies, focusing on FastAPI and related libraries.\n  - Simplified project documentation and configuration files.\n\n<!-- end of auto-generated comment: release notes by coderabbit.ai -->",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "state",
          "value": "open",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": "app/api/__init__.py",
          "qualifier": "files"
        },
        {
          "objectId": "app/api/router/health.py",
          "qualifier": "files"
        },
        {
          "objectId": "app/api/router/v1/__init__.py",
          "qualifier": "files"
        },
        {
          "objectId": "app/base.py",
          "qualifier": "files"
        },
        {
          "objectId": "app/core/__init__.py",
          "qualifier": "files"
        },
        {
          "objectId": "app/core/config.py",
          "qualifier": "files"
        },
        {
          "objectId": "app/core/database.py",
          "qualifier": "files"
        },
        {
          "objectId": "app/core/exceptions.py",
          "qualifier": "files"
        },
        {
          "objectId": "app/models/__init__.py",
          "qualifier": "files"
        },
        {
          "objectId": "app/models/user.py",
          "qualifier": "files"
        },
        {
          "objectId": "app/utils/utils.py",
          "qualifier": "files"
        },
        {
          "objectId": "requirements.txt",
          "qualifier": "files"
        },
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "app/api/__init__.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/api/router/health.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/api/router/v1/__init__.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/base.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/core/__init__.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/core/config.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/core/database.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/core/exceptions.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/models/__init__.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/models/user.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/utils/utils.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "requirements.txt",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "has-participant"
        },
        {
          "objectId": "12848699494a28f76c34982ef872a824fb32036d",
          "qualifier": "commits"
        },
        {
          "objectId": "8eea5e0838e87f843ee2617b39917e06e0050d26",
          "qualifier": "commits"
        },
        {
          "objectId": "b8b1bb497e266f586e8b0ad50a324d9704b0be9f",
          "qualifier": "commits"
        },
        {
          "objectId": "6816ac238638f06e3234c53192a1a0d71ef85877",
          "qualifier": "is-merged-with"
        },
        {
          "objectId": "12848699494a28f76c34982ef872a824fb32036d",
          "qualifier": "formalises"
        },
        {
          "objectId": "8eea5e0838e87f843ee2617b39917e06e0050d26",
          "qualifier": "formalises"
        },
        {
          "objectId": "b8b1bb497e266f586e8b0ad50a324d9704b0be9f",
          "qualifier": "formalises"
        }
      ],
      "id": "343"
    },
    {
      "type": "pull_request",
      "attributes": [
        {
          "name": "title",
          "value": "Add pdf parser to markdown capability",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "description",
          "value": "# Add pdf parser to markdown capability\r\n\r\n## Related Issue\r\n#323 \r\n\r\n## Description\r\nAdds a PDF Parser\r\n\r\n## Type\r\n<!-- Check the relevant options by putting an \"x\" in the brackets -->\r\n\r\n- [ ] Bug Fix\r\n- [x] Feature Enhancement\r\n- [ ] Documentation Update\r\n- [ ] Code Refactoring\r\n- [ ] Other (please specify)\r\n\r\n",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "state",
          "value": "open",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": "app/api/middleware.py",
          "qualifier": "files"
        },
        {
          "objectId": "app/api/router/v1/resume.py",
          "qualifier": "files"
        },
        {
          "objectId": "app/models/association.py",
          "qualifier": "files"
        },
        {
          "objectId": "app/models/base.py",
          "qualifier": "files"
        },
        {
          "objectId": "app/models/job.py",
          "qualifier": "files"
        },
        {
          "objectId": "app/models/resume.py",
          "qualifier": "files"
        },
        {
          "objectId": "app/services/resume_service.py",
          "qualifier": "files"
        },
        {
          "objectId": "Saurabh Rai",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "app/api/middleware.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/api/router/v1/resume.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/models/association.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/models/base.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/models/job.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/models/resume.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/services/resume_service.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Saurabh Rai",
          "qualifier": "has-participant"
        },
        {
          "objectId": "3670c6ce485967fd099a5862a5d7eca0ab5bde01",
          "qualifier": "commits"
        },
        {
          "objectId": "2b60122a85fe8fa29514882e12af006f6cc4ceb5",
          "qualifier": "commits"
        },
        {
          "objectId": "638c41f37930637a8f891eb13c59a224906805fe",
          "qualifier": "is-merged-with"
        },
        {
          "objectId": "3670c6ce485967fd099a5862a5d7eca0ab5bde01",
          "qualifier": "formalises"
        },
        {
          "objectId": "2b60122a85fe8fa29514882e12af006f6cc4ceb5",
          "qualifier": "formalises"
        }
      ],
      "id": "342"
    },
    {
      "type": "pull_request",
      "attributes": [
        {
          "name": "title",
          "value": "update gitignore",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "description",
          "value": "## Pull Request Title\r\n<!-- Provide a concise and descriptive title for the pull request -->\r\n\r\n## Related Issue\r\n<!-- If this pull request is related to an issue, please link it here using the \"#\" symbol followed by the issue number (e.g., #123) -->\r\n\r\n## Description\r\n<!-- Describe the changes made in this pull request. What problem does it solve or what feature does it add/modify? -->\r\n\r\n## Type\r\n<!-- Check the relevant options by putting an \"x\" in the brackets -->\r\n\r\n- [ ] Bug Fix\r\n- [ ] Feature Enhancement\r\n- [ ] Documentation Update\r\n- [ ] Code Refactoring\r\n- [ ] Other (please specify): \r\n\r\n## Proposed Changes\r\n<!-- List the specific changes made in this pull request -->\r\n\r\n- \r\n- \r\n- \r\n\r\n## Screenshots / Code Snippets (if applicable)\r\n<!-- Include any relevant screenshots or code snippets that help visualize the changes made -->\r\n\r\n## How to Test\r\n<!-- Provide step-by-step instructions or a checklist for testing the changes in this pull request -->\r\n\r\n1. \r\n2. \r\n3. \r\n\r\n## Checklist\r\n<!-- Put an \"x\" in the brackets for the items that apply to this pull request -->\r\n\r\n- [ ] The code compiles successfully without any errors or warnings\r\n- [ ] The changes have been tested and verified\r\n- [ ] The documentation has been updated (if applicable)\r\n- [ ] The changes follow the project's coding guidelines and best practices\r\n- [ ] The commit messages are descriptive and follow the project's guidelines\r\n- [ ] All tests (if applicable) pass successfully\r\n- [ ] This pull request has been linked to the related issue (if applicable)\r\n\r\n## Additional Information\r\n<!-- Add any other information about the pull request that you think might be helpful -->\r\n\r\n",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "state",
          "value": "open",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": ".gitignore",
          "qualifier": "files"
        },
        {
          "objectId": "Saurabh Rai",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": ".gitignore",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Saurabh Rai",
          "qualifier": "has-participant"
        },
        {
          "objectId": "64045941650aeed8386e039757e63df6d19f5f6f",
          "qualifier": "commits"
        },
        {
          "objectId": "4e1616ac12b126c77761a47cf70c517a4adeb0f5",
          "qualifier": "is-merged-with"
        },
        {
          "objectId": "64045941650aeed8386e039757e63df6d19f5f6f",
          "qualifier": "formalises"
        }
      ],
      "id": "341"
    },
    {
      "type": "pull_request",
      "attributes": [
        {
          "name": "title",
          "value": "issue-332 | add API routes and resume processor",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "description",
          "value": "## Pull Request Title\r\n<!-- Provide a concise and descriptive title for the pull request -->\r\nissue-332 | add API routes and resume processor\r\n## Related Issue\r\n<!-- If this pull request is related to an issue, please link it here using the \"#\" symbol followed by the issue number (e.g., #123) -->\r\n#332 \r\n## Description\r\n<!-- Describe the changes made in this pull request. What problem does it solve or what feature does it add/modify? -->\r\nTitle: Integrate frontend with backend APIs\r\n\r\nDescription\r\n\r\n    Implement API calls to backend services\r\n    Handle request/response cycle and error states\r\n    Create loading states for asynchronous operations\r\n    Implement retry logic for failed API calls\r\n\r\nAcceptance Criteria\r\n\r\n    API calls successfully communicate with backend\r\n    Error states are handled gracefully\r\n    Loading states provide feedback to users\r\n    Retry logic works as expected\r\n\r\n## Type\r\n<!-- Check the relevant options by putting an \"x\" in the brackets -->\r\n\r\n- [ ] Bug Fix\r\n- [ ] Feature Enhancement\r\n- [ ] Documentation Update\r\n- [ ] Code Refactoring\r\n- [ ] Other (please specify): \r\n\r\n## Proposed Changes\r\n<!-- List the specific changes made in this pull request -->\r\n\r\n- \r\n- \r\n- \r\n\r\n## Screenshots / Code Snippets (if applicable)\r\n<!-- Include any relevant screenshots or code snippets that help visualize the changes made -->\r\n\r\n## How to Test\r\n<!-- Provide step-by-step instructions or a checklist for testing the changes in this pull request -->\r\n\r\n1. \r\n2. \r\n3. \r\n\r\n## Checklist\r\n<!-- Put an \"x\" in the brackets for the items that apply to this pull request -->\r\n\r\n- [ ] The code compiles successfully without any errors or warnings\r\n- [ ] The changes have been tested and verified\r\n- [ ] The documentation has been updated (if applicable)\r\n- [ ] The changes follow the project's coding guidelines and best practices\r\n- [ ] The commit messages are descriptive and follow the project's guidelines\r\n- [ ] All tests (if applicable) pass successfully\r\n- [ ] This pull request has been linked to the related issue (if applicable)\r\n\r\n## Additional Information\r\n<!-- Add any other information about the pull request that you think might be helpful -->\r\n\r\n",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "state",
          "value": "open",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": "app.db",
          "qualifier": "files"
        },
        {
          "objectId": "app/api/__init__.py",
          "qualifier": "files"
        },
        {
          "objectId": "app/api/middleware.py",
          "qualifier": "files"
        },
        {
          "objectId": "app/api/router/v1/__init__.py",
          "qualifier": "files"
        },
        {
          "objectId": "app/api/router/v1/resume.py",
          "qualifier": "files"
        },
        {
          "objectId": "app/base.py",
          "qualifier": "files"
        },
        {
          "objectId": "app/core/__init__.py",
          "qualifier": "files"
        },
        {
          "objectId": "app/core/database.py",
          "qualifier": "files"
        },
        {
          "objectId": "app/core/exceptions.py",
          "qualifier": "files"
        },
        {
          "objectId": "app/models/__init__.py",
          "qualifier": "files"
        },
        {
          "objectId": "app/models/job.py",
          "qualifier": "files"
        },
        {
          "objectId": "app/models/resume.py",
          "qualifier": "files"
        },
        {
          "objectId": "app/models/user.py",
          "qualifier": "files"
        },
        {
          "objectId": "app/services/resume_service.py",
          "qualifier": "files"
        },
        {
          "objectId": "requirements.txt",
          "qualifier": "files"
        },
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "app.db",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/api/__init__.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/api/middleware.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/api/router/v1/__init__.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/api/router/v1/resume.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/base.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/core/__init__.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/core/database.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/core/exceptions.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/models/__init__.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/models/job.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/models/resume.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/models/user.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/services/resume_service.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "requirements.txt",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "has-participant"
        },
        {
          "objectId": "078b93cae58db0da361f33d6a4e62c61477f0fef",
          "qualifier": "commits"
        },
        {
          "objectId": "a84809acc42454f84d3b7fb1a62180e8141cd185",
          "qualifier": "is-merged-with"
        },
        {
          "objectId": "078b93cae58db0da361f33d6a4e62c61477f0fef",
          "qualifier": "formalises"
        }
      ],
      "id": "340"
    },
    {
      "type": "pull_request",
      "attributes": [
        {
          "name": "title",
          "value": "Issue 133 v4",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "description",
          "value": "## Pull Request Title\r\n<!-- Provide a concise and descriptive title for the pull request -->\r\n\r\n## Related Issue\r\n<!-- If this pull request is related to an issue, please link it here using the \"#\" symbol followed by the issue number (e.g., #123) -->\r\n#322 \r\n\r\n## Description\r\n<!-- Describe the changes made in this pull request. What problem does it solve or what feature does it add/modify? -->\r\n\r\n## Type\r\n<!-- Check the relevant options by putting an \"x\" in the brackets -->\r\n\r\n- [ ] Bug Fix\r\n- [ ] Feature Enhancement\r\n- [ ] Documentation Update\r\n- [ ] Code Refactoring\r\n- [ ] Other (please specify): \r\n\r\n## Proposed Changes\r\n<!-- List the specific changes made in this pull request -->\r\n\r\n- \r\n- \r\n- \r\n\r\n## Screenshots / Code Snippets (if applicable)\r\n<!-- Include any relevant screenshots or code snippets that help visualize the changes made -->\r\n\r\n## How to Test\r\n<!-- Provide step-by-step instructions or a checklist for testing the changes in this pull request -->\r\n\r\n1. \r\n2. \r\n3. \r\n\r\n## Checklist\r\n<!-- Put an \"x\" in the brackets for the items that apply to this pull request -->\r\n\r\n- [ ] The code compiles successfully without any errors or warnings\r\n- [ ] The changes have been tested and verified\r\n- [ ] The documentation has been updated (if applicable)\r\n- [ ] The changes follow the project's coding guidelines and best practices\r\n- [ ] The commit messages are descriptive and follow the project's guidelines\r\n- [ ] All tests (if applicable) pass successfully\r\n- [ ] This pull request has been linked to the related issue (if applicable)\r\n\r\n## Additional Information\r\n<!-- Add any other information about the pull request that you think might be helpful -->\r\n\r\n",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "state",
          "value": "open",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": "app/core/config.py",
          "qualifier": "files"
        },
        {
          "objectId": "requirements.txt",
          "qualifier": "files"
        },
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "app/core/config.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "requirements.txt",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "has-participant"
        },
        {
          "objectId": "fd104cc26df1420ac2707e5db27f93cd950bb8ef",
          "qualifier": "commits"
        },
        {
          "objectId": "c747e8208f42f226ef3ea0f0430416b89b020e8d",
          "qualifier": "is-merged-with"
        },
        {
          "objectId": "fd104cc26df1420ac2707e5db27f93cd950bb8ef",
          "qualifier": "formalises"
        }
      ],
      "id": "339"
    },
    {
      "type": "user",
      "attributes": [
        {
          "name": "username",
          "value": "athulsivan",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "rank",
          "value": "NONE",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "is-bot",
          "value": "False",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": "athulsivan",
          "qualifier": "name"
        }
      ],
      "id": "athulsivan"
    },
    {
      "type": "user",
      "attributes": [
        {
          "name": "username",
          "value": "aslafy-z",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "rank",
          "value": "NONE",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "is-bot",
          "value": "False",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "rank",
          "value": "CONTRIBUTOR",
          "time": "2025-05-28T16:07:48Z"
        }
      ],
      "relationships": [
        {
          "objectId": "Zadkiel AHARONIAN",
          "qualifier": "name"
        }
      ],
      "id": "Zadkiel AHARONIAN"
    },
    {
      "type": "user",
      "attributes": [
        {
          "name": "username",
          "value": "atarora",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "rank",
          "value": "NONE",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "is-bot",
          "value": "False",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "rank",
          "value": "CONTRIBUTOR",
          "time": "2025-05-16T19:07:18Z"
        }
      ],
      "relationships": [
        {
          "objectId": "Atita Arora",
          "qualifier": "name"
        }
      ],
      "id": "Atita Arora"
    },
    {
      "type": "user",
      "attributes": [
        {
          "name": "username",
          "value": "KetanM94",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "rank",
          "value": "NONE",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "is-bot",
          "value": "False",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": "Ketan Mate",
          "qualifier": "name"
        }
      ],
      "id": "Ketan Mate"
    },
    {
      "type": "user",
      "attributes": [
        {
          "name": "username",
          "value": "Hemanth-Thaluru",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "rank",
          "value": "NONE",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "is-bot",
          "value": "False",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "rank",
          "value": "CONTRIBUTOR",
          "time": "2025-05-30T15:48:22Z"
        }
      ],
      "relationships": [
        {
          "objectId": "Hemanth",
          "qualifier": "name"
        }
      ],
      "id": "Hemanth"
    },
    {
      "type": "user",
      "attributes": [
        {
          "name": "username",
          "value": "SubramanyamChalla24",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "rank",
          "value": "NONE",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "is-bot",
          "value": "False",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "rank",
          "value": "CONTRIBUTOR",
          "time": "2025-05-30T11:35:18Z"
        }
      ],
      "relationships": [
        {
          "objectId": "Subramanyam Challa",
          "qualifier": "name"
        }
      ],
      "id": "Subramanyam Challa"
    },
    {
      "type": "pull_request",
      "attributes": [
        {
          "name": "title",
          "value": "Issue 133 v3",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "description",
          "value": "## Pull Request Title\r\n<!-- Provide a concise and descriptive title for the pull request -->\r\n\r\n## Related Issue\r\n<!-- If this pull request is related to an issue, please link it here using the \"#\" symbol followed by the issue number (e.g., #123) -->\r\n#322 \r\n\r\n## Description\r\n<!-- Describe the changes made in this pull request. What problem does it solve or what feature does it add/modify? -->\r\n\r\n## Type\r\n<!-- Check the relevant options by putting an \"x\" in the brackets -->\r\n\r\n- [ ] Bug Fix\r\n- [ ] Feature Enhancement\r\n- [ ] Documentation Update\r\n- [ ] Code Refactoring\r\n- [ ] Other (please specify): \r\n\r\n## Proposed Changes\r\n<!-- List the specific changes made in this pull request -->\r\n\r\n- \r\n- \r\n- \r\n\r\n## Screenshots / Code Snippets (if applicable)\r\n<!-- Include any relevant screenshots or code snippets that help visualize the changes made -->\r\n\r\n## How to Test\r\n<!-- Provide step-by-step instructions or a checklist for testing the changes in this pull request -->\r\n\r\n1. \r\n2. \r\n3. \r\n\r\n## Checklist\r\n<!-- Put an \"x\" in the brackets for the items that apply to this pull request -->\r\n\r\n- [ ] The code compiles successfully without any errors or warnings\r\n- [ ] The changes have been tested and verified\r\n- [ ] The documentation has been updated (if applicable)\r\n- [ ] The changes follow the project's coding guidelines and best practices\r\n- [ ] The commit messages are descriptive and follow the project's guidelines\r\n- [ ] All tests (if applicable) pass successfully\r\n- [ ] This pull request has been linked to the related issue (if applicable)\r\n\r\n## Additional Information\r\n<!-- Add any other information about the pull request that you think might be helpful -->\r\n\r\n",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "state",
          "value": "open",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": "app/api/__init__.py",
          "qualifier": "files"
        },
        {
          "objectId": "app/api/router/health.py",
          "qualifier": "files"
        },
        {
          "objectId": "app/core/config.py",
          "qualifier": "files"
        },
        {
          "objectId": "app/main.py",
          "qualifier": "files"
        },
        {
          "objectId": "app/models/__init__.py",
          "qualifier": "files"
        },
        {
          "objectId": "app/models/association.py",
          "qualifier": "files"
        },
        {
          "objectId": "app/models/base.py",
          "qualifier": "files"
        },
        {
          "objectId": "app/models/job.py",
          "qualifier": "files"
        },
        {
          "objectId": "app/models/resume.py",
          "qualifier": "files"
        },
        {
          "objectId": "app/models/user.py",
          "qualifier": "files"
        },
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "app/api/__init__.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/api/router/health.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/core/config.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/main.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/models/__init__.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/models/association.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/models/base.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/models/job.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/models/resume.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/models/user.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "has-participant"
        },
        {
          "objectId": "48d058d29c7b6db98e196832137c69cd61e98968",
          "qualifier": "commits"
        },
        {
          "objectId": "894985747aae8c72c989822c1acae3cca8ae3683",
          "qualifier": "is-merged-with"
        },
        {
          "objectId": "48d058d29c7b6db98e196832137c69cd61e98968",
          "qualifier": "formalises"
        }
      ],
      "id": "338"
    },
    {
      "type": "pull_request",
      "attributes": [
        {
          "name": "title",
          "value": "ISSUE-133-v2 | sqlite and working app",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "description",
          "value": "## Pull Request Title\r\n<!-- Provide a concise and descriptive title for the pull request -->\r\nSet up FastAPI application with SQLite database\r\n\r\n## Related Issue\r\n<!-- If this pull request is related to an issue, please link it here using the \"#\" symbol followed by the issue number (e.g., #123) -->\r\n#322 \r\nBootstrap FastAPI application\r\nConfigure SQLite database with separate tables for jobs and resumes\r\nCreate database schemas and connection logic\r\nImplement basic CRUD operations for jobs and resumes\r\n\r\n## Description\r\n<!-- Describe the changes made in this pull request. What problem does it solve or what feature does it add/modify? -->\r\n\r\n## Type\r\n<!-- Check the relevant options by putting an \"x\" in the brackets -->\r\n\r\n- [ ] Bug Fix\r\n- [ ] Feature Enhancement\r\n- [ ] Documentation Update\r\n- [x] Code Refactoring\r\n- [ ] Other (please specify): \r\n\r\n## Proposed Changes\r\n<!-- List the specific changes made in this pull request -->\r\n\r\n- sqlite init\r\n- working application with ping api\r\n- \r\n\r\n## Screenshots / Code Snippets (if applicable)\r\n<!-- Include any relevant screenshots or code snippets that help visualize the changes made -->\r\n\r\n## How to Test\r\n<!-- Provide step-by-step instructions or a checklist for testing the changes in this pull request -->\r\n\r\n1. uvicorn app.main:app \r\n2. \r\n3. \r\n\r\n## Checklist\r\n<!-- Put an \"x\" in the brackets for the items that apply to this pull request -->\r\n\r\n- [x] The code compiles successfully without any errors or warnings\r\n- [x] The changes have been tested and verified\r\n- [ ] The documentation has been updated (if applicable)\r\n- [ ] The changes follow the project's coding guidelines and best practices\r\n- [ ] The commit messages are descriptive and follow the project's guidelines\r\n- [ ] All tests (if applicable) pass successfully\r\n- [ ] This pull request has been linked to the related issue (if applicable)\r\n\r\n## Additional Information\r\n<!-- Add any other information about the pull request that you think might be helpful -->\r\n\r\n",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "state",
          "value": "open",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": "app.db",
          "qualifier": "files"
        },
        {
          "objectId": "app/api/__init__.py",
          "qualifier": "files"
        },
        {
          "objectId": "app/api/router/health.py",
          "qualifier": "files"
        },
        {
          "objectId": "app/api/v1/__init__.py",
          "qualifier": "files"
        },
        {
          "objectId": "app/base.py",
          "qualifier": "files"
        },
        {
          "objectId": "app/core/config.py",
          "qualifier": "files"
        },
        {
          "objectId": "app/core/database.py",
          "qualifier": "files"
        },
        {
          "objectId": "app/models/__init__.py",
          "qualifier": "files"
        },
        {
          "objectId": "app/models/association.py",
          "qualifier": "files"
        },
        {
          "objectId": "app/models/job.py",
          "qualifier": "files"
        },
        {
          "objectId": "app/utils/utils.py",
          "qualifier": "files"
        },
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "app.db",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/api/__init__.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/api/router/health.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/api/v1/__init__.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/base.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/core/config.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/core/database.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/models/__init__.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/models/association.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/models/job.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/utils/utils.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "has-participant"
        },
        {
          "objectId": "f415013aeeac86ddd5fb97c7a8e39b3a77ba12ec",
          "qualifier": "commits"
        },
        {
          "objectId": "c8b0d00a5469a7702a3ce968c69e40535cfcfdb9",
          "qualifier": "is-merged-with"
        },
        {
          "objectId": "f415013aeeac86ddd5fb97c7a8e39b3a77ba12ec",
          "qualifier": "formalises"
        }
      ],
      "id": "337"
    },
    {
      "type": "pull_request",
      "attributes": [
        {
          "name": "title",
          "value": "ISSUE-133 | Set up FastAPI application with SQLite database",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "description",
          "value": "## Pull Request Title\r\n<!-- Provide a concise and descriptive title for the pull request -->\r\nSet up FastAPI application with SQLite database\r\n\r\n## Related Issue\r\n<!-- If this pull request is related to an issue, please link it here using the \"#\" symbol followed by the issue number (e.g., #123) -->\r\n#322 \r\n\r\n## Description\r\n<!-- Describe the changes made in this pull request. What problem does it solve or what feature does it add/modify? -->\r\nBootstrap FastAPI application\r\nConfigure SQLite database with separate tables for jobs and resumes\r\nCreate database schemas and connection logic\r\nImplement basic CRUD operations for jobs and resumes\r\n\r\n\r\n## Type\r\n<!-- Check the relevant options by putting an \"x\" in the brackets -->\r\n\r\n- [ ] Bug Fix\r\n- [x] Feature Enhancement\r\n- [ ] Documentation Update\r\n- [ ] Code Refactoring\r\n- [ ] Other (please specify): \r\n\r\n## Proposed Changes\r\n<!-- List the specific changes made in this pull request -->\r\n- DB connection Singleton,\r\n- FastAPI app\r\n- Base Code\r\n- \r\n\r\n## Screenshots / Code Snippets (if applicable)\r\n<!-- Include any relevant screenshots or code snippets that help visualize the changes made -->\r\n\r\n## How to Test\r\n<!-- Provide step-by-step instructions or a checklist for testing the changes in this pull request -->\r\n\r\n1. \r\n2. \r\n3. \r\n\r\n## Checklist\r\n<!-- Put an \"x\" in the brackets for the items that apply to this pull request -->\r\n\r\n- [ ] The code compiles successfully without any errors or warnings\r\n- [ ] The changes have been tested and verified\r\n- [ ] The documentation has been updated (if applicable)\r\n- [ ] The changes follow the project's coding guidelines and best practices\r\n- [ ] The commit messages are descriptive and follow the project's guidelines\r\n- [ ] All tests (if applicable) pass successfully\r\n- [ ] This pull request has been linked to the related issue (if applicable)\r\n\r\n## Additional Information\r\n<!-- Add any other information about the pull request that you think might be helpful -->\r\n\r\n",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "state",
          "value": "open",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": "app/api/__init__.py",
          "qualifier": "files"
        },
        {
          "objectId": "app/api/v1/__init__.py",
          "qualifier": "files"
        },
        {
          "objectId": "app/base.py",
          "qualifier": "files"
        },
        {
          "objectId": "app/core/config.py",
          "qualifier": "files"
        },
        {
          "objectId": "app/core/database.py",
          "qualifier": "files"
        },
        {
          "objectId": "app/main.py",
          "qualifier": "files"
        },
        {
          "objectId": "app/models/__init__.py",
          "qualifier": "files"
        },
        {
          "objectId": "app/models/association.py",
          "qualifier": "files"
        },
        {
          "objectId": "app/models/base.py",
          "qualifier": "files"
        },
        {
          "objectId": "app/models/job.py",
          "qualifier": "files"
        },
        {
          "objectId": "app/models/resume.py",
          "qualifier": "files"
        },
        {
          "objectId": "app/models/user.py",
          "qualifier": "files"
        },
        {
          "objectId": "requirements.txt",
          "qualifier": "files"
        },
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "app/api/__init__.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/api/v1/__init__.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/base.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/core/config.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/core/database.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/main.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/models/__init__.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/models/association.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/models/base.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/models/job.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/models/resume.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/models/user.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "requirements.txt",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "has-participant"
        },
        {
          "objectId": "cebefe928fd23e0461fcf998dca749f2aec25d8c",
          "qualifier": "commits"
        },
        {
          "objectId": "e2156c2115b04eb91d445f5283482a8f81cec7bd",
          "qualifier": "is-merged-with"
        },
        {
          "objectId": "cebefe928fd23e0461fcf998dca749f2aec25d8c",
          "qualifier": "formalises"
        }
      ],
      "id": "336"
    },
    {
      "type": "pull_request",
      "attributes": [
        {
          "name": "title",
          "value": "As resume cheker test",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "description",
          "value": "This commit fixes two compatibility issues related to Plotly's API in the `create_star_graph` function:\r\n\r\n- Replaced deprecated `titlefont_size` in `go.Layout` with the updated nested format:\r\n    title=dict(text=title, font=dict(size=16))\r\n\r\n- Removed invalid `titleside` from `colorbar` configuration and replaced with:\r\n    title=dict(text=\"Node Connections\", side=\"right\")\r\n\r\nThese changes resolve runtime errors due to outdated Plotly syntax and ensure consistent rendering of network graphs in Streamlit.\r\n\r\nCloses #<issue-number> (if applicable)\r\n\r\n\r\nDeprecated titlefont_size in go.Layout\r\nThe Plotly API no longer supports titlefont_size as a top-level property in the layout configuration. Attempting to use it raises a ValueError. This has been replaced with a nested dictionary structure using:\r\n\r\n```python\r\ntitle=dict(text=title, font=dict(size=16))\r\n\r\n\r\nThis change ensures proper rendering of the graph title with custom font size using the currently supported API.\r\n\r\nInvalid titleside in marker.colorbar\r\nThe titleside property is no longer valid in the colorbar dictionary under marker. Including it also triggers a ValueError. The correct way to set both the colorbar title and its position is now through a nested title object:\r\n\r\n```python\r\ntitle=dict(text=\"Node Connections\", side=\"right\")\r\n``` \r\nThis ensures the colorbar label displays correctly and avoids breaking the app.\r\n\r\nThese updates bring the create_star_graph function in line with the latest Plotly schema, preventing runtime crashes and ensuring compatibility going forward.",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "state",
          "value": "open",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": "Data/JobDescriptionArchive/job_desc_front_end_engineer.pdf",
          "qualifier": "files"
        },
        {
          "objectId": "Data/JobDescriptionArchive/job_desc_full_stack_engineer.pdf",
          "qualifier": "files"
        },
        {
          "objectId": "Data/JobDescriptionArchive/job_desc_java_developer.pdf",
          "qualifier": "files"
        },
        {
          "objectId": "Data/JobDescriptionArchive/job_desc_product_manager.pdf",
          "qualifier": "files"
        },
        {
          "objectId": "Data/Resume_archive/alfred_pennyworth_pm.pdf",
          "qualifier": "files"
        },
        {
          "objectId": "Data/Resume_archive/barry_allen_fe.pdf",
          "qualifier": "files"
        },
        {
          "objectId": "Data/Resume_archive/bruce_wayne_fullstack.pdf",
          "qualifier": "files"
        },
        {
          "objectId": "Data/Resume_archive/harvey_dent_mle.pdf",
          "qualifier": "files"
        },
        {
          "objectId": "Data/Resume_archive/john_doe.pdf",
          "qualifier": "files"
        },
        {
          "objectId": "Data/Resumes/CV_Athul_Sivan.pdf",
          "qualifier": "files"
        },
        {
          "objectId": "requirements.txt",
          "qualifier": "files"
        },
        {
          "objectId": "streamlit_app.py",
          "qualifier": "files"
        },
        {
          "objectId": "athulsivan",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "Data/JobDescriptionArchive/job_desc_front_end_engineer.pdf",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/JobDescriptionArchive/job_desc_full_stack_engineer.pdf",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/JobDescriptionArchive/job_desc_java_developer.pdf",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/JobDescriptionArchive/job_desc_product_manager.pdf",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resume_archive/alfred_pennyworth_pm.pdf",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resume_archive/barry_allen_fe.pdf",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resume_archive/bruce_wayne_fullstack.pdf",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resume_archive/harvey_dent_mle.pdf",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resume_archive/john_doe.pdf",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/CV_Athul_Sivan.pdf",
          "qualifier": "aggregates"
        },
        {
          "objectId": "requirements.txt",
          "qualifier": "aggregates"
        },
        {
          "objectId": "streamlit_app.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "athulsivan",
          "qualifier": "has-participant"
        },
        {
          "objectId": "287d524e1eee74048528e69a828036e516fda3af",
          "qualifier": "commits"
        },
        {
          "objectId": "6dbe84b28e5a332b6f07df341334fc1440c0f818",
          "qualifier": "commits"
        },
        {
          "objectId": "5f465ec18ae131a94c3ab9b3396eca526410a9e6",
          "qualifier": "commits"
        },
        {
          "objectId": "53a07dce725c21459b24b719f95a8b647d075a0c",
          "qualifier": "commits"
        },
        {
          "objectId": "72880201b4cbf773409fc2eda233b3e5bda3d2f2",
          "qualifier": "is-merged-with"
        },
        {
          "objectId": "287d524e1eee74048528e69a828036e516fda3af",
          "qualifier": "formalises"
        },
        {
          "objectId": "6dbe84b28e5a332b6f07df341334fc1440c0f818",
          "qualifier": "formalises"
        },
        {
          "objectId": "5f465ec18ae131a94c3ab9b3396eca526410a9e6",
          "qualifier": "formalises"
        },
        {
          "objectId": "53a07dce725c21459b24b719f95a8b647d075a0c",
          "qualifier": "formalises"
        }
      ],
      "id": "321"
    },
    {
      "type": "pull_request",
      "attributes": [
        {
          "name": "title",
          "value": "Chore(deps): Bump jinja2 from 3.1.5 to 3.1.6",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "description",
          "value": "Bumps [jinja2](https://github.com/pallets/jinja) from 3.1.5 to 3.1.6.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/pallets/jinja/releases\">jinja2's releases</a>.</em></p>\n<blockquote>\n<h2>3.1.6</h2>\n<p>This is the Jinja 3.1.6 security release, which fixes security issues but does not otherwise change behavior and should not result in breaking changes compared to the latest feature release.</p>\n<p>PyPI: <a href=\"https://pypi.org/project/Jinja2/3.1.6/\">https://pypi.org/project/Jinja2/3.1.6/</a>\nChanges: <a href=\"https://jinja.palletsprojects.com/en/stable/changes/#version-3-1-6\">https://jinja.palletsprojects.com/en/stable/changes/#version-3-1-6</a></p>\n<ul>\n<li>The <code>|attr</code> filter does not bypass the environment's attribute lookup, allowing the sandbox to apply its checks. <a href=\"https://github.com/pallets/jinja/security/advisories/GHSA-cpwx-vrp4-4pq7\">https://github.com/pallets/jinja/security/advisories/GHSA-cpwx-vrp4-4pq7</a></li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/pallets/jinja/blob/main/CHANGES.rst\">jinja2's changelog</a>.</em></p>\n<blockquote>\n<h2>Version 3.1.6</h2>\n<p>Released 2025-03-05</p>\n<ul>\n<li>The <code>|attr</code> filter does not bypass the environment's attribute lookup,\nallowing the sandbox to apply its checks. :ghsa:<code>cpwx-vrp4-4pq7</code></li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/pallets/jinja/commit/15206881c006c79667fe5154fe80c01c65410679\"><code>1520688</code></a> release version 3.1.6</li>\n<li><a href=\"https://github.com/pallets/jinja/commit/90457bbf33b8662926ae65cdde4c4c32e756e403\"><code>90457bb</code></a> Merge commit from fork</li>\n<li><a href=\"https://github.com/pallets/jinja/commit/065334d1ee5b7210e1a0a93c37238c86858f2af7\"><code>065334d</code></a> attr filter uses env.getattr</li>\n<li><a href=\"https://github.com/pallets/jinja/commit/033c20015c7ca899ab52eb921bb0f08e6d3dd145\"><code>033c200</code></a> start version 3.1.6</li>\n<li><a href=\"https://github.com/pallets/jinja/commit/bc68d4efa99c5f77334f0e519628558059ae8c35\"><code>bc68d4e</code></a> use global contributing guide (<a href=\"https://redirect.github.com/pallets/jinja/issues/2070\">#2070</a>)</li>\n<li><a href=\"https://github.com/pallets/jinja/commit/247de5e0c5062a792eb378e50e13e692885ee486\"><code>247de5e</code></a> use global contributing guide</li>\n<li><a href=\"https://github.com/pallets/jinja/commit/ab8218c7a1b66b62e0ad6b941bd514e3a64a358f\"><code>ab8218c</code></a> use project advisory link instead of global</li>\n<li><a href=\"https://github.com/pallets/jinja/commit/b4ffc8ff299dfd360064bea4cd2f862364601ad2\"><code>b4ffc8f</code></a> release version 3.1.5 (<a href=\"https://redirect.github.com/pallets/jinja/issues/2066\">#2066</a>)</li>\n<li>See full diff in <a href=\"https://github.com/pallets/jinja/compare/3.1.5...3.1.6\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=jinja2&package-manager=pip&previous-version=3.1.5&new-version=3.1.6)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/srbhr/Resume-Matcher/network/alerts).\n\n</details>",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "state",
          "value": "open",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": "requirements.txt",
          "qualifier": "files"
        },
        {
          "objectId": "dependabot[bot]",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "requirements.txt",
          "qualifier": "aggregates"
        },
        {
          "objectId": "dependabot[bot]",
          "qualifier": "has-participant"
        },
        {
          "objectId": "a85b3f0391962d08fb56c4ce7351f2d72dbd5815",
          "qualifier": "commits"
        },
        {
          "objectId": "9b6b3452d38dcd5aa4c1fbeb53bf8a203c3a10f2",
          "qualifier": "is-merged-with"
        },
        {
          "objectId": "a85b3f0391962d08fb56c4ce7351f2d72dbd5815",
          "qualifier": "formalises"
        }
      ],
      "id": "319"
    },
    {
      "type": "pull_request",
      "attributes": [
        {
          "name": "title",
          "value": "Chore(deps): Bump jinja2 from 3.1.4 to 3.1.5",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "description",
          "value": "Bumps [jinja2](https://github.com/pallets/jinja) from 3.1.4 to 3.1.5.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/pallets/jinja/releases\">jinja2's releases</a>.</em></p>\n<blockquote>\n<h2>3.1.5</h2>\n<p>This is the Jinja 3.1.5 security fix release, which fixes security issues and bugs but does not otherwise change behavior and should not result in breaking changes compared to the latest feature release.</p>\n<p>PyPI: <a href=\"https://pypi.org/project/Jinja2/3.1.5/\">https://pypi.org/project/Jinja2/3.1.5/</a>\nChanges: <a href=\"https://jinja.palletsprojects.com/changes/#version-3-1-5\">https://jinja.palletsprojects.com/changes/#version-3-1-5</a>\nMilestone: <a href=\"https://github.com/pallets/jinja/milestone/16?closed=1\">https://github.com/pallets/jinja/milestone/16?closed=1</a></p>\n<ul>\n<li>The sandboxed environment handles indirect calls to <code>str.format</code>, such as by passing a stored reference to a filter that calls its argument. <a href=\"https://github.com/pallets/jinja/security/advisories/GHSA-q2x7-8rv6-6q7h\">GHSA-q2x7-8rv6-6q7h</a></li>\n<li>Escape template name before formatting it into error messages, to avoid issues with names that contain f-string syntax. <a href=\"https://redirect.github.com/pallets/jinja/issues/1792\">#1792</a>, <a href=\"https://github.com/pallets/jinja/security/advisories/GHSA-gmj6-6f8f-6699\">GHSA-gmj6-6f8f-6699</a></li>\n<li>Sandbox does not allow <code>clear</code> and <code>pop</code> on known mutable sequence types. <a href=\"https://redirect.github.com/pallets/jinja/issues/2032\">#2032</a></li>\n<li>Calling sync <code>render</code> for an async template uses <code>asyncio.run</code>. <a href=\"https://redirect.github.com/pallets/jinja/issues/1952\">#1952</a></li>\n<li>Avoid unclosed <code>auto_aiter</code> warnings. <a href=\"https://redirect.github.com/pallets/jinja/issues/1960\">#1960</a></li>\n<li>Return an <code>aclose</code>-able <code>AsyncGenerator</code> from <code>Template.generate_async</code>. <a href=\"https://redirect.github.com/pallets/jinja/issues/1960\">#1960</a></li>\n<li>Avoid leaving <code>root_render_func()</code> unclosed in <code>Template.generate_async</code>. <a href=\"https://redirect.github.com/pallets/jinja/issues/1960\">#1960</a></li>\n<li>Avoid leaving async generators unclosed in blocks, includes and extends. <a href=\"https://redirect.github.com/pallets/jinja/issues/1960\">#1960</a></li>\n<li>The runtime uses the correct <code>concat</code> function for the current environment when calling block references. <a href=\"https://redirect.github.com/pallets/jinja/issues/1701\">#1701</a></li>\n<li>Make <code>|unique</code> async-aware, allowing it to be used after another async-aware filter. <a href=\"https://redirect.github.com/pallets/jinja/issues/1781\">#1781</a></li>\n<li><code>|int</code> filter handles <code>OverflowError</code> from scientific notation. <a href=\"https://redirect.github.com/pallets/jinja/issues/1921\">#1921</a></li>\n<li>Make compiling deterministic for tuple unpacking in a <code>{% set ... %}</code> call. <a href=\"https://redirect.github.com/pallets/jinja/issues/2021\">#2021</a></li>\n<li>Fix dunder protocol (<code>copy</code>/<code>pickle</code>/etc) interaction with <code>Undefined</code> objects. <a href=\"https://redirect.github.com/pallets/jinja/issues/2025\">#2025</a></li>\n<li>Fix <code>copy</code>/<code>pickle</code> support for the internal <code>missing</code> object. <a href=\"https://redirect.github.com/pallets/jinja/issues/2027\">#2027</a></li>\n<li><code>Environment.overlay(enable_async)</code> is applied correctly. <a href=\"https://redirect.github.com/pallets/jinja/issues/2061\">#2061</a></li>\n<li>The error message from <code>FileSystemLoader</code> includes the paths that were searched. <a href=\"https://redirect.github.com/pallets/jinja/issues/1661\">#1661</a></li>\n<li><code>PackageLoader</code> shows a clearer error message when the package does not contain the templates directory. <a href=\"https://redirect.github.com/pallets/jinja/issues/1705\">#1705</a></li>\n<li>Improve annotations for methods returning copies. <a href=\"https://redirect.github.com/pallets/jinja/issues/1880\">#1880</a></li>\n<li><code>urlize</code> does not add <code>mailto:</code> to values like <code>@a@b</code>. <a href=\"https://redirect.github.com/pallets/jinja/issues/1870\">#1870</a></li>\n<li>Tests decorated with <code>@pass_context</code> can be used with the <code>|select</code> filter. <a href=\"https://redirect.github.com/pallets/jinja/issues/1624\">#1624</a></li>\n<li>Using <code>set</code> for multiple assignment (<code>a, b = 1, 2</code>) does not fail when the target is a namespace attribute. <a href=\"https://redirect.github.com/pallets/jinja/issues/1413\">#1413</a></li>\n<li>Using <code>set</code> in all branches of <code>{% if %}{% elif %}{% else %}</code> blocks does not cause the variable to be considered initially undefined. <a href=\"https://redirect.github.com/pallets/jinja/issues/1253\">#1253</a></li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/pallets/jinja/blob/main/CHANGES.rst\">jinja2's changelog</a>.</em></p>\n<blockquote>\n<h2>Version 3.1.5</h2>\n<p>Released 2024-12-21</p>\n<ul>\n<li>The sandboxed environment handles indirect calls to <code>str.format</code>, such as\nby passing a stored reference to a filter that calls its argument.\n:ghsa:<code>q2x7-8rv6-6q7h</code></li>\n<li>Escape template name before formatting it into error messages, to avoid\nissues with names that contain f-string syntax.\n:issue:<code>1792</code>, :ghsa:<code>gmj6-6f8f-6699</code></li>\n<li>Sandbox does not allow <code>clear</code> and <code>pop</code> on known mutable sequence\ntypes. :issue:<code>2032</code></li>\n<li>Calling sync <code>render</code> for an async template uses <code>asyncio.run</code>.\n:pr:<code>1952</code></li>\n<li>Avoid unclosed <code>auto_aiter</code> warnings. :pr:<code>1960</code></li>\n<li>Return an <code>aclose</code>-able <code>AsyncGenerator</code> from\n<code>Template.generate_async</code>. :pr:<code>1960</code></li>\n<li>Avoid leaving <code>root_render_func()</code> unclosed in\n<code>Template.generate_async</code>. :pr:<code>1960</code></li>\n<li>Avoid leaving async generators unclosed in blocks, includes and extends.\n:pr:<code>1960</code></li>\n<li>The runtime uses the correct <code>concat</code> function for the current environment\nwhen calling block references. :issue:<code>1701</code></li>\n<li>Make <code>|unique</code> async-aware, allowing it to be used after another\nasync-aware filter. :issue:<code>1781</code></li>\n<li><code>|int</code> filter handles <code>OverflowError</code> from scientific notation.\n:issue:<code>1921</code></li>\n<li>Make compiling deterministic for tuple unpacking in a <code>{% set ... %}</code>\ncall. :issue:<code>2021</code></li>\n<li>Fix dunder protocol (<code>copy</code>/<code>pickle</code>/etc) interaction with <code>Undefined</code>\nobjects. :issue:<code>2025</code></li>\n<li>Fix <code>copy</code>/<code>pickle</code> support for the internal <code>missing</code> object.\n:issue:<code>2027</code></li>\n<li><code>Environment.overlay(enable_async)</code> is applied correctly. :pr:<code>2061</code></li>\n<li>The error message from <code>FileSystemLoader</code> includes the paths that were\nsearched. :issue:<code>1661</code></li>\n<li><code>PackageLoader</code> shows a clearer error message when the package does not\ncontain the templates directory. :issue:<code>1705</code></li>\n<li>Improve annotations for methods returning copies. :pr:<code>1880</code></li>\n<li><code>urlize</code> does not add <code>mailto:</code> to values like <code>@a@b</code>. :pr:<code>1870</code></li>\n<li>Tests decorated with <code>@pass_context`` can be used with the ``|select`` filter. :issue:</code>1624`</li>\n<li>Using <code>set</code> for multiple assignment (<code>a, b = 1, 2</code>) does not fail when the\ntarget is a namespace attribute. :issue:<code>1413</code></li>\n<li>Using <code>set</code> in all branches of <code>{% if %}{% elif %}{% else %}</code> blocks\ndoes not cause the variable to be considered initially undefined.\n:issue:<code>1253</code></li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/pallets/jinja/commit/877f6e51be8e1765b06d911cfaa9033775f051d1\"><code>877f6e5</code></a> release version 3.1.5</li>\n<li><a href=\"https://github.com/pallets/jinja/commit/8d588592653b052f957b720e1fc93196e06f207f\"><code>8d58859</code></a> remove test pypi</li>\n<li><a href=\"https://github.com/pallets/jinja/commit/eda8fe86fd716dfce24910294e9f1fc81fbc740c\"><code>eda8fe8</code></a> update dev dependencies</li>\n<li><a href=\"https://github.com/pallets/jinja/commit/c8fdce1e0333f1122b244b03a48535fdd7b03d91\"><code>c8fdce1</code></a> Fix bug involving calling set on a template parameter within all branches of ...</li>\n<li><a href=\"https://github.com/pallets/jinja/commit/66587ce989e5a478e0bb165371fa2b9d42b7040f\"><code>66587ce</code></a> Fix bug where set would sometimes fail within if</li>\n<li><a href=\"https://github.com/pallets/jinja/commit/fbc3a696c729d177340cc089531de7e2e5b6f065\"><code>fbc3a69</code></a> Add support for namespaces in tuple parsing (<a href=\"https://redirect.github.com/pallets/jinja/issues/1664\">#1664</a>)</li>\n<li><a href=\"https://github.com/pallets/jinja/commit/b8f4831d41e6a7cb5c40d42f074ffd92d2daccfc\"><code>b8f4831</code></a> more comments about nsref assignment</li>\n<li><a href=\"https://github.com/pallets/jinja/commit/ee832194cd9f55f75e5a51359b709d535efe957f\"><code>ee83219</code></a> Add support for namespaces in tuple assignment</li>\n<li><a href=\"https://github.com/pallets/jinja/commit/1d55cddbb28e433779511f28f13a2d8c4ec45826\"><code>1d55cdd</code></a> Triple quotes in docs (<a href=\"https://redirect.github.com/pallets/jinja/issues/2064\">#2064</a>)</li>\n<li><a href=\"https://github.com/pallets/jinja/commit/8a8eafc6b992ba177f1d3dd483f8465f18a11116\"><code>8a8eafc</code></a> edit block assignment section</li>\n<li>Additional commits viewable in <a href=\"https://github.com/pallets/jinja/compare/3.1.4...3.1.5\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=jinja2&package-manager=pip&previous-version=3.1.4&new-version=3.1.5)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/srbhr/Resume-Matcher/network/alerts).\n\n</details>",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "state",
          "value": "open",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": "requirements.txt",
          "qualifier": "files"
        },
        {
          "objectId": "dependabot[bot]",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "requirements.txt",
          "qualifier": "aggregates"
        },
        {
          "objectId": "dependabot[bot]",
          "qualifier": "has-participant"
        },
        {
          "objectId": "7f6dc2688437269f7812310a5ce2c9dcc7b02d85",
          "qualifier": "commits"
        },
        {
          "objectId": "17965651f4506159f9e8c0da0a4df41fe6692e42",
          "qualifier": "is-merged-with"
        },
        {
          "objectId": "7f6dc2688437269f7812310a5ce2c9dcc7b02d85",
          "qualifier": "formalises"
        }
      ],
      "id": "301"
    },
    {
      "type": "pull_request",
      "attributes": [
        {
          "name": "title",
          "value": "fix: upgrading nltk dependency to fix wordnet/punkt download",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "description",
          "value": "## Pull Request Title\r\n<!-- Provide a concise and descriptive title for the pull request -->\r\n\r\n## Related Issue\r\n<!-- If this pull request is related to an issue, please link it here using the \"#\" symbol followed by the issue number (e.g., #123) -->\r\nFixes #298 \r\n\r\n## Description\r\n<!-- Describe the changes made in this pull request. What problem does it solve or what feature does it add/modify? -->\r\n\r\n## Type\r\n<!-- Check the relevant options by putting an \"x\" in the brackets -->\r\n\r\n- [x] Bug Fix\r\n- [ ] Feature Enhancement\r\n- [ ] Documentation Update\r\n- [ ] Code Refactoring\r\n- [ ] Other (please specify): \r\n\r\n## Proposed Changes\r\n<!-- List the specific changes made in this pull request -->\r\n\r\n- Upgrade NLTK dependency to 3.9.1. See https://github.com/nltk/nltk/issues/3308\r\n- Fix breaking change https://github.com/nltk/nltk/issues/3293\r\n\r\n## Screenshots / Code Snippets (if applicable)\r\n<!-- Include any relevant screenshots or code snippets that help visualize the changes made -->\r\n\r\n## How to Test\r\n<!-- Provide step-by-step instructions or a checklist for testing the changes in this pull request -->\r\n\r\n1. `docker compose up`\r\n2. Check that the app starts correctly\r\n\r\n## Checklist\r\n<!-- Put an \"x\" in the brackets for the items that apply to this pull request -->\r\n\r\n- [x] The code compiles successfully without any errors or warnings\r\n- [x] The changes have been tested and verified\r\n- [ ] The documentation has been updated (if applicable)\r\n- [x] The changes follow the project's coding guidelines and best practices\r\n- [x] The commit messages are descriptive and follow the project's guidelines\r\n- [ ] All tests (if applicable) pass successfully\r\n- [x] This pull request has been linked to the related issue (if applicable)\r\n\r\n## Additional Information\r\n<!-- Add any other information about the pull request that you think might be helpful -->\r\n\r\n",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "state",
          "value": "open",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": "requirements.txt",
          "qualifier": "files"
        },
        {
          "objectId": "streamlit_app.py",
          "qualifier": "files"
        },
        {
          "objectId": "streamlit_interactive.py",
          "qualifier": "files"
        },
        {
          "objectId": "streamlit_second.py",
          "qualifier": "files"
        },
        {
          "objectId": "Zadkiel AHARONIAN",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "requirements.txt",
          "qualifier": "aggregates"
        },
        {
          "objectId": "streamlit_app.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "streamlit_interactive.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "streamlit_second.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Zadkiel AHARONIAN",
          "qualifier": "has-participant"
        },
        {
          "objectId": "f53791888d7d31ee14716e590dc49bc33b7d49cb",
          "qualifier": "commits"
        },
        {
          "objectId": "731201ab4fd1c4ff30b0010460f9979ab5505a29",
          "qualifier": "commits"
        },
        {
          "objectId": "88f14b8b121337a82c5c70d68e03d28bb3ddac4d",
          "qualifier": "commits"
        },
        {
          "objectId": "7e60d1a1fae2b8387a90c7474209a61e83503376",
          "qualifier": "commits"
        },
        {
          "objectId": "367b9dd133c6da7a42c14d94e2e4ce2505eb1e05",
          "qualifier": "is-merged-with"
        },
        {
          "objectId": "f53791888d7d31ee14716e590dc49bc33b7d49cb",
          "qualifier": "formalises"
        },
        {
          "objectId": "731201ab4fd1c4ff30b0010460f9979ab5505a29",
          "qualifier": "formalises"
        },
        {
          "objectId": "88f14b8b121337a82c5c70d68e03d28bb3ddac4d",
          "qualifier": "formalises"
        },
        {
          "objectId": "7e60d1a1fae2b8387a90c7474209a61e83503376",
          "qualifier": "formalises"
        }
      ],
      "id": "300"
    },
    {
      "type": "pull_request",
      "attributes": [
        {
          "name": "title",
          "value": "Conduct comprehensive code audit and architectural planning",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "description",
          "value": "\n\n---\n\nFor more details, open the [Copilot Workspace session](https://copilot-workspace.githubnext.com/srbhr/Resume-Matcher/pull/299?shareId=a5e756ea-74cc-403d-b23b-298b42eb409a).",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "state",
          "value": "open",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": "README.md",
          "qualifier": "files"
        },
        {
          "objectId": "docs/Architectural_Design_Document.md",
          "qualifier": "files"
        },
        {
          "objectId": "docs/Code_Quality_Assessment_Report.md",
          "qualifier": "files"
        },
        {
          "objectId": "docs/Current_System_Analysis_Report.md",
          "qualifier": "files"
        },
        {
          "objectId": "docs/Migration_Strategy_Document.md",
          "qualifier": "files"
        },
        {
          "objectId": "docs/Risk_Assessment_and_Mitigation_Plan.md",
          "qualifier": "files"
        },
        {
          "objectId": "Saurabh Rai",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "README.md",
          "qualifier": "aggregates"
        },
        {
          "objectId": "docs/Architectural_Design_Document.md",
          "qualifier": "aggregates"
        },
        {
          "objectId": "docs/Code_Quality_Assessment_Report.md",
          "qualifier": "aggregates"
        },
        {
          "objectId": "docs/Current_System_Analysis_Report.md",
          "qualifier": "aggregates"
        },
        {
          "objectId": "docs/Migration_Strategy_Document.md",
          "qualifier": "aggregates"
        },
        {
          "objectId": "docs/Risk_Assessment_and_Mitigation_Plan.md",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Saurabh Rai",
          "qualifier": "has-participant"
        },
        {
          "objectId": "689f35d9c88c756617bda804f9fdfbf24101dcee",
          "qualifier": "commits"
        },
        {
          "objectId": "b58d4bebe0b016b21e7f9911fd03ec24da17c348",
          "qualifier": "is-merged-with"
        },
        {
          "objectId": "689f35d9c88c756617bda804f9fdfbf24101dcee",
          "qualifier": "formalises"
        }
      ],
      "id": "299"
    },
    {
      "type": "pull_request",
      "attributes": [
        {
          "name": "title",
          "value": "Chore(deps): Bump tornado from 6.3.3 to 6.4.2",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "description",
          "value": "Bumps [tornado](https://github.com/tornadoweb/tornado) from 6.3.3 to 6.4.2.\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/tornadoweb/tornado/blob/v6.4.2/docs/releases.rst\">tornado's changelog</a>.</em></p>\n<blockquote>\n<h1>Release notes</h1>\n<p>.. toctree::\n:maxdepth: 2</p>\n<p>releases/v6.4.2\nreleases/v6.4.1\nreleases/v6.4.0\nreleases/v6.3.3\nreleases/v6.3.2\nreleases/v6.3.1\nreleases/v6.3.0\nreleases/v6.2.0\nreleases/v6.1.0\nreleases/v6.0.4\nreleases/v6.0.3\nreleases/v6.0.2\nreleases/v6.0.1\nreleases/v6.0.0\nreleases/v5.1.1\nreleases/v5.1.0\nreleases/v5.0.2\nreleases/v5.0.1\nreleases/v5.0.0\nreleases/v4.5.3\nreleases/v4.5.2\nreleases/v4.5.1\nreleases/v4.5.0\nreleases/v4.4.3\nreleases/v4.4.2\nreleases/v4.4.1\nreleases/v4.4.0\nreleases/v4.3.0\nreleases/v4.2.1\nreleases/v4.2.0\nreleases/v4.1.0\nreleases/v4.0.2\nreleases/v4.0.1\nreleases/v4.0.0\nreleases/v3.2.2\nreleases/v3.2.1\nreleases/v3.2.0\nreleases/v3.1.1\nreleases/v3.1.0\nreleases/v3.0.2\nreleases/v3.0.1\nreleases/v3.0.0\nreleases/v2.4.1\nreleases/v2.4.0</p>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/tornadoweb/tornado/commit/a5ecfab15e52202a46d34638aad93cddca86d87b\"><code>a5ecfab</code></a> Bump version to 6.4.2</li>\n<li><a href=\"https://github.com/tornadoweb/tornado/commit/bc7df6bafdec61155e7bf385081feb205463857d\"><code>bc7df6b</code></a> Fix tests with Twisted 24.7.0</li>\n<li><a href=\"https://github.com/tornadoweb/tornado/commit/d5ba4a1695fbf7c6a3e54313262639b198291533\"><code>d5ba4a1</code></a> httputil: Fix quadratic performance of cookie parsing</li>\n<li><a href=\"https://github.com/tornadoweb/tornado/commit/2a0e1d13b5222dca4388c0ec8a4bb74ea6fa4af2\"><code>2a0e1d1</code></a> Merge pull request <a href=\"https://redirect.github.com/tornadoweb/tornado/issues/3388\">#3388</a> from bdarnell/release-641</li>\n<li><a href=\"https://github.com/tornadoweb/tornado/commit/b7af4e8f5ee578b78e1be5ade43fdb1103659a0e\"><code>b7af4e8</code></a> Release notes and version bump for version 6.4.1</li>\n<li><a href=\"https://github.com/tornadoweb/tornado/commit/d65f6e71a77f53a1ff0a0dc55704be13f04eb572\"><code>d65f6e7</code></a> Merge pull request <a href=\"https://redirect.github.com/tornadoweb/tornado/issues/3387\">#3387</a> from bdarnell/chunked-parsing</li>\n<li><a href=\"https://github.com/tornadoweb/tornado/commit/8d721a877dd5c2bc0693d9c4d3954eb11fbd404b\"><code>8d721a8</code></a> httputil: Only strip tabs and spaces from header values</li>\n<li><a href=\"https://github.com/tornadoweb/tornado/commit/7786f09f84c9f3f2012c4cf3878417cb9f053669\"><code>7786f09</code></a> Merge pull request <a href=\"https://redirect.github.com/tornadoweb/tornado/issues/3386\">#3386</a> from bdarnell/curl-crlf</li>\n<li><a href=\"https://github.com/tornadoweb/tornado/commit/fb119c767e9c43e71ea823311b0d53f566d86b73\"><code>fb119c7</code></a> http1connection: Stricter handling of transfer-encoding</li>\n<li><a href=\"https://github.com/tornadoweb/tornado/commit/b0ffc58e02f33f6aa480f008b74495601d988ce1\"><code>b0ffc58</code></a> curl_httpclient,http1connection: Prohibit CR and LF in headers</li>\n<li>Additional commits viewable in <a href=\"https://github.com/tornadoweb/tornado/compare/v6.3.3...v6.4.2\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=tornado&package-manager=pip&previous-version=6.3.3&new-version=6.4.2)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/srbhr/Resume-Matcher/network/alerts).\n\n</details>",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "state",
          "value": "open",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": "requirements.txt",
          "qualifier": "files"
        },
        {
          "objectId": "dependabot[bot]",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "requirements.txt",
          "qualifier": "aggregates"
        },
        {
          "objectId": "dependabot[bot]",
          "qualifier": "has-participant"
        },
        {
          "objectId": "9628cf5199e7aed607f57a84811172b3ff1c8c91",
          "qualifier": "commits"
        },
        {
          "objectId": "b2b43064ac152dfddcda285529d34e19fd385b45",
          "qualifier": "is-merged-with"
        },
        {
          "objectId": "9628cf5199e7aed607f57a84811172b3ff1c8c91",
          "qualifier": "formalises"
        }
      ],
      "id": "297"
    },
    {
      "type": "pull_request",
      "attributes": [
        {
          "name": "title",
          "value": "Chore(deps): Bump streamlit from 1.30.0 to 1.37.0",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "description",
          "value": "Bumps [streamlit](https://github.com/streamlit/streamlit) from 1.30.0 to 1.37.0.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/streamlit/streamlit/releases\">streamlit's releases</a>.</em></p>\n<blockquote>\n<h2>1.37.0</h2>\n<!-- raw HTML omitted -->\n<h2>What's Changed</h2>\n<h3>New Features \ud83c\udf89</h3>\n<ul>\n<li>Stacking options - <code>st.bar_chart</code> by <a href=\"https://github.com/mayagbarnes\"><code>@\u200bmayagbarnes</code></a> in <a href=\"https://redirect.github.com/streamlit/streamlit/pull/8945\">streamlit/streamlit#8945</a></li>\n<li>Support <code>graphviz.sources.Source</code> object for <code>st.graphviz_chart</code> by <a href=\"https://github.com/sfc-gh-kbregula\"><code>@\u200bsfc-gh-kbregula</code></a> in <a href=\"https://redirect.github.com/streamlit/streamlit/pull/8993\">streamlit/streamlit#8993</a></li>\n<li>Add support for material icons in markdown by <a href=\"https://github.com/LukasMasuch\"><code>@\u200bLukasMasuch</code></a> in <a href=\"https://redirect.github.com/streamlit/streamlit/pull/8889\">streamlit/streamlit#8889</a></li>\n<li>Fix lag when closing dialog by <a href=\"https://github.com/raethlein\"><code>@\u200braethlein</code></a> in <a href=\"https://redirect.github.com/streamlit/streamlit/pull/9023\">streamlit/streamlit#9023</a></li>\n<li>Stacking options - <code>st.area_chart</code> by <a href=\"https://github.com/mayagbarnes\"><code>@\u200bmayagbarnes</code></a> in <a href=\"https://redirect.github.com/streamlit/streamlit/pull/8992\">streamlit/streamlit#8992</a></li>\n<li>Add feedback widget by <a href=\"https://github.com/raethlein\"><code>@\u200braethlein</code></a> in <a href=\"https://redirect.github.com/streamlit/streamlit/pull/8915\">streamlit/streamlit#8915</a></li>\n<li>READ only headers and cookies by <a href=\"https://github.com/kajarenc\"><code>@\u200bkajarenc</code></a> in <a href=\"https://redirect.github.com/streamlit/streamlit/pull/8976\">streamlit/streamlit#8976</a></li>\n<li>De-experimentalize st.fragment by <a href=\"https://github.com/vdonato\"><code>@\u200bvdonato</code></a> in <a href=\"https://redirect.github.com/streamlit/streamlit/pull/9019\">streamlit/streamlit#9019</a></li>\n<li>De-experimentalize st.dialog by <a href=\"https://github.com/raethlein\"><code>@\u200braethlein</code></a> in <a href=\"https://redirect.github.com/streamlit/streamlit/pull/9020\">streamlit/streamlit#9020</a></li>\n</ul>\n<h3>Bug Fixes \ud83d\udc1b</h3>\n<ul>\n<li>Show fragment errors in fragment-path for main app runs by <a href=\"https://github.com/raethlein\"><code>@\u200braethlein</code></a> in <a href=\"https://redirect.github.com/streamlit/streamlit/pull/8868\">streamlit/streamlit#8868</a></li>\n<li>Fix st.rerun fragment thread reuse issue by <a href=\"https://github.com/raethlein\"><code>@\u200braethlein</code></a> in <a href=\"https://redirect.github.com/streamlit/streamlit/pull/8798\">streamlit/streamlit#8798</a></li>\n<li>Support non-unix style paths for MPA loading by <a href=\"https://github.com/kmcgrady\"><code>@\u200bkmcgrady</code></a> in <a href=\"https://redirect.github.com/streamlit/streamlit/pull/8988\">streamlit/streamlit#8988</a></li>\n<li>Set theme hash properly on load if a custom theme is active to start by <a href=\"https://github.com/kmcgrady\"><code>@\u200bkmcgrady</code></a> in <a href=\"https://redirect.github.com/streamlit/streamlit/pull/8989\">streamlit/streamlit#8989</a></li>\n<li>Don't remove session refs on fragment runs by <a href=\"https://github.com/vdonato\"><code>@\u200bvdonato</code></a> in <a href=\"https://redirect.github.com/streamlit/streamlit/pull/9010\">streamlit/streamlit#9010</a></li>\n<li>Improvements to NumberInput formatting by <a href=\"https://github.com/sfc-gh-nbellante\"><code>@\u200bsfc-gh-nbellante</code></a> in <a href=\"https://redirect.github.com/streamlit/streamlit/pull/9035\">streamlit/streamlit#9035</a></li>\n<li>Hide all Particles upon printing by <a href=\"https://github.com/sfc-gh-nbellante\"><code>@\u200bsfc-gh-nbellante</code></a> in <a href=\"https://redirect.github.com/streamlit/streamlit/pull/9053\">streamlit/streamlit#9053</a></li>\n<li>Fix: MPA support of custom themes by <a href=\"https://github.com/mayagbarnes\"><code>@\u200bmayagbarnes</code></a> in <a href=\"https://redirect.github.com/streamlit/streamlit/pull/8994\">streamlit/streamlit#8994</a></li>\n<li><code>st.switch_page</code> clears non-embed query params  by <a href=\"https://github.com/mayagbarnes\"><code>@\u200bmayagbarnes</code></a> in <a href=\"https://redirect.github.com/streamlit/streamlit/pull/9059\">streamlit/streamlit#9059</a></li>\n<li>Fix secrets.toml Windows Path Bug by <a href=\"https://github.com/sfc-gh-nbellante\"><code>@\u200bsfc-gh-nbellante</code></a> in <a href=\"https://redirect.github.com/streamlit/streamlit/pull/9061\">streamlit/streamlit#9061</a></li>\n<li>Bugfix: Fixes two st.map width bugs by <a href=\"https://github.com/sfc-gh-nbellante\"><code>@\u200bsfc-gh-nbellante</code></a> in <a href=\"https://redirect.github.com/streamlit/streamlit/pull/9070\">streamlit/streamlit#9070</a></li>\n<li>Validate the path using Tornado before performing checks by <a href=\"https://github.com/kmcgrady\"><code>@\u200bkmcgrady</code></a> in <a href=\"https://redirect.github.com/streamlit/streamlit/pull/8990\">streamlit/streamlit#8990</a></li>\n<li>Reset ctx.current_fragment_id to last ID instead of None by <a href=\"https://github.com/vdonato\"><code>@\u200bvdonato</code></a> in <a href=\"https://redirect.github.com/streamlit/streamlit/pull/9114\">streamlit/streamlit#9114</a></li>\n</ul>\n<h3>Other Changes</h3>\n<ul>\n<li>Update emojis used for validation by <a href=\"https://github.com/LukasMasuch\"><code>@\u200bLukasMasuch</code></a> in <a href=\"https://redirect.github.com/streamlit/streamlit/pull/8923\">streamlit/streamlit#8923</a></li>\n<li>Add support for numpy 2.x by <a href=\"https://github.com/LukasMasuch\"><code>@\u200bLukasMasuch</code></a> in <a href=\"https://redirect.github.com/streamlit/streamlit/pull/8940\">streamlit/streamlit#8940</a></li>\n<li>Remove a bunch of deprecated experimental features by <a href=\"https://github.com/vdonato\"><code>@\u200bvdonato</code></a> in <a href=\"https://redirect.github.com/streamlit/streamlit/pull/8943\">streamlit/streamlit#8943</a></li>\n<li>Migrate custom icons from material outlined to rounded by <a href=\"https://github.com/LukasMasuch\"><code>@\u200bLukasMasuch</code></a> in <a href=\"https://redirect.github.com/streamlit/streamlit/pull/8998\">streamlit/streamlit#8998</a></li>\n<li>Remove old config options - part 1 by <a href=\"https://github.com/mayagbarnes\"><code>@\u200bmayagbarnes</code></a> in <a href=\"https://redirect.github.com/streamlit/streamlit/pull/9005\">streamlit/streamlit#9005</a></li>\n<li>Remove old config options - part 2 by <a href=\"https://github.com/mayagbarnes\"><code>@\u200bmayagbarnes</code></a> in <a href=\"https://redirect.github.com/streamlit/streamlit/pull/9013\">streamlit/streamlit#9013</a></li>\n<li>Remove <code>deprecation.showPyplotGlobalUse</code> config option by <a href=\"https://github.com/LukasMasuch\"><code>@\u200bLukasMasuch</code></a> in <a href=\"https://redirect.github.com/streamlit/streamlit/pull/9018\">streamlit/streamlit#9018</a></li>\n<li>Fix broken <code>st.navigation</code> docstring by <a href=\"https://github.com/mahotd\"><code>@\u200bmahotd</code></a> in <a href=\"https://redirect.github.com/streamlit/streamlit/pull/9027\">streamlit/streamlit#9027</a></li>\n<li>Update the feedback widget design by <a href=\"https://github.com/raethlein\"><code>@\u200braethlein</code></a> in <a href=\"https://redirect.github.com/streamlit/streamlit/pull/9094\">streamlit/streamlit#9094</a></li>\n</ul>\n<h2>New Contributors</h2>\n<ul>\n<li><a href=\"https://github.com/Dev-iL\"><code>@\u200bDev-iL</code></a> made their first contribution in <a href=\"https://redirect.github.com/streamlit/streamlit/pull/8947\">streamlit/streamlit#8947</a></li>\n<li><a href=\"https://github.com/quant12345\"><code>@\u200bquant12345</code></a> made their first contribution in <a href=\"https://redirect.github.com/streamlit/streamlit/pull/8968\">streamlit/streamlit#8968</a></li>\n<li><a href=\"https://github.com/mahotd\"><code>@\u200bmahotd</code></a> made their first contribution in <a href=\"https://redirect.github.com/streamlit/streamlit/pull/9027\">streamlit/streamlit#9027</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/streamlit/streamlit/compare/1.36.0...1.37.0\">https://github.com/streamlit/streamlit/compare/1.36.0...1.37.0</a></p>\n<h2>1.36.0</h2>\n<!-- raw HTML omitted -->\n<h2>What's Changed</h2>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/streamlit/streamlit/commit/e2c3c93e89fdf22039bcce18295eaa15a566d772\"><code>e2c3c93</code></a> Up version to 1.37.0</li>\n<li><a href=\"https://github.com/streamlit/streamlit/commit/88389e37f87864134b4bae9f00bb04afac78f214\"><code>88389e3</code></a> Docstrings for 1.37.0 (<a href=\"https://redirect.github.com/streamlit/streamlit/issues/9115\">#9115</a>)</li>\n<li><a href=\"https://github.com/streamlit/streamlit/commit/898fd8094f4ceb004c3eb929bcc88a5b6b72593f\"><code>898fd80</code></a> Temp solution to fix invalid material icon error rendering (<a href=\"https://redirect.github.com/streamlit/streamlit/issues/9113\">#9113</a>)</li>\n<li><a href=\"https://github.com/streamlit/streamlit/commit/b2c88c608a6bb6c497c132b724a2315877c9ea4a\"><code>b2c88c6</code></a> Reset ctx.current_fragment_id to last ID instead of None (<a href=\"https://redirect.github.com/streamlit/streamlit/issues/9114\">#9114</a>)</li>\n<li><a href=\"https://github.com/streamlit/streamlit/commit/3a639859cfdfba2187c81897d44a3e33825eb0a3\"><code>3a63985</code></a> Validate the path using Tornado before performing checks (<a href=\"https://redirect.github.com/streamlit/streamlit/issues/8990\">#8990</a>)</li>\n<li><a href=\"https://github.com/streamlit/streamlit/commit/40303e18123071595ae66fd7ee36d47ff743dbde\"><code>40303e1</code></a> Move the filled star icon for feedback widget from python code to web app (<a href=\"https://redirect.github.com/streamlit/streamlit/issues/9\">#9</a>...</li>\n<li><a href=\"https://github.com/streamlit/streamlit/commit/6296baf627f262bd2d75bdc480932f5f0e735d6a\"><code>6296baf</code></a> Update the feedback widget design (<a href=\"https://redirect.github.com/streamlit/streamlit/issues/9094\">#9094</a>)</li>\n<li><a href=\"https://github.com/streamlit/streamlit/commit/b9c352104bd3e0f15296772d539a71703d5826db\"><code>b9c3521</code></a> Fixes two st.map width bugs (<a href=\"https://redirect.github.com/streamlit/streamlit/issues/9070\">#9070</a>)</li>\n<li><a href=\"https://github.com/streamlit/streamlit/commit/a2ae47a6a1bbc0fd2a035af3dadd5cbeb4ee5a79\"><code>a2ae47a</code></a> Only expose selected objects in <code>components</code> module (<a href=\"https://redirect.github.com/streamlit/streamlit/issues/8873\">#8873</a>)</li>\n<li><a href=\"https://github.com/streamlit/streamlit/commit/340f3f7e95d7ac21a98e681551a4f6ad5b36fd06\"><code>340f3f7</code></a> De-experimentalize st.dialog (<a href=\"https://redirect.github.com/streamlit/streamlit/issues/9020\">#9020</a>)</li>\n<li>Additional commits viewable in <a href=\"https://github.com/streamlit/streamlit/compare/1.30.0...1.37.0\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=streamlit&package-manager=pip&previous-version=1.30.0&new-version=1.37.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/srbhr/Resume-Matcher/network/alerts).\n\n</details>",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "state",
          "value": "open",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": "requirements.txt",
          "qualifier": "files"
        },
        {
          "objectId": "dependabot[bot]",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "requirements.txt",
          "qualifier": "aggregates"
        },
        {
          "objectId": "dependabot[bot]",
          "qualifier": "has-participant"
        },
        {
          "objectId": "88c33b5054ac196fb3fa95159b403e04a9db0b15",
          "qualifier": "commits"
        },
        {
          "objectId": "dd85181f7ada07769f69a49a1d4ef54efd60cde2",
          "qualifier": "is-merged-with"
        },
        {
          "objectId": "88c33b5054ac196fb3fa95159b403e04a9db0b15",
          "qualifier": "formalises"
        }
      ],
      "id": "296"
    },
    {
      "type": "pull_request",
      "attributes": [
        {
          "name": "title",
          "value": "Chore(deps): Bump python-multipart from 0.0.7 to 0.0.18",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "description",
          "value": "Bumps [python-multipart](https://github.com/Kludex/python-multipart) from 0.0.7 to 0.0.18.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/Kludex/python-multipart/releases\">python-multipart's releases</a>.</em></p>\n<blockquote>\n<h2>Version 0.0.18</h2>\n<h2>What's Changed</h2>\n<ul>\n<li>Hard break if found data after last boundary on <code>MultipartParser</code> by <a href=\"https://github.com/Kludex\"><code>@\u200bKludex</code></a> in <a href=\"https://redirect.github.com/Kludex/python-multipart/pull/189\">Kludex/python-multipart#189</a></li>\n</ul>\n<hr />\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/Kludex/python-multipart/compare/0.0.17...0.0.18\">https://github.com/Kludex/python-multipart/compare/0.0.17...0.0.18</a></p>\n<h2>Version 0.0.17</h2>\n<h2>What's Changed</h2>\n<ul>\n<li>Handle PermissionError in fallback code for old import name by <a href=\"https://github.com/defnull\"><code>@\u200bdefnull</code></a> in <a href=\"https://redirect.github.com/Kludex/python-multipart/pull/182\">Kludex/python-multipart#182</a></li>\n</ul>\n<hr />\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/Kludex/python-multipart/compare/0.0.16...0.0.17\">https://github.com/Kludex/python-multipart/compare/0.0.16...0.0.17</a></p>\n<h2>Version 0.0.16</h2>\n<h2>What's Changed</h2>\n<ul>\n<li>Add dunder attributes to <code>multipart</code> package by <a href=\"https://github.com/Kludex\"><code>@\u200bKludex</code></a> in <a href=\"https://redirect.github.com/Kludex/python-multipart/pull/177\">Kludex/python-multipart#177</a></li>\n</ul>\n<hr />\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/Kludex/python-multipart/compare/0.0.15...0.0.16\">https://github.com/Kludex/python-multipart/compare/0.0.15...0.0.16</a></p>\n<h2>Version 0.0.15</h2>\n<h2>What's Changed</h2>\n<ul>\n<li>Replace <code>FutureWarning</code> to <code>PendingDeprecationWarning</code> <a href=\"https://redirect.github.com/Kludex/python-multipart/pull/174\">#174</a>.</li>\n<li>Add missing files to SDist <a href=\"https://redirect.github.com/Kludex/python-multipart/pull/171\">#171</a>.</li>\n</ul>\n<hr />\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/Kludex/python-multipart/compare/0.0.14...0.0.15\">https://github.com/Kludex/python-multipart/compare/0.0.14...0.0.15</a></p>\n<h2>Version 0.0.14</h2>\n<h2>What's Changed</h2>\n<ul>\n<li>fix: use alternate scheme for importing multipart by <a href=\"https://github.com/henryiii\"><code>@\u200bhenryiii</code></a> in <a href=\"https://redirect.github.com/Kludex/python-multipart/pull/168\">Kludex/python-multipart#168</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/Kludex/python-multipart/compare/0.0.13...0.0.14\">https://github.com/Kludex/python-multipart/compare/0.0.13...0.0.14</a></p>\n<h2>Version 0.0.13</h2>\n<h2>What's Changed</h2>\n<ul>\n<li>Rename import to python_multipart by <a href=\"https://github.com/henryiii\"><code>@\u200bhenryiii</code></a> in <a href=\"https://redirect.github.com/Kludex/python-multipart/pull/166\">Kludex/python-multipart#166</a></li>\n</ul>\n<h2>New Contributors</h2>\n<ul>\n<li><a href=\"https://github.com/henryiii\"><code>@\u200bhenryiii</code></a> made their first contribution in <a href=\"https://redirect.github.com/Kludex/python-multipart/pull/166\">Kludex/python-multipart#166</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/Kludex/python-multipart/compare/0.0.12...0.0.13\">https://github.com/Kludex/python-multipart/compare/0.0.12...0.0.13</a></p>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/Kludex/python-multipart/blob/master/CHANGELOG.md\">python-multipart's changelog</a>.</em></p>\n<blockquote>\n<h2>0.0.18 (2024-11-28)</h2>\n<ul>\n<li>Hard break if found data after last boundary on <code>MultipartParser</code> <a href=\"https://redirect.github.com/Kludex/python-multipart/pull/189\">#189</a>.</li>\n</ul>\n<h2>0.0.17 (2024-10-31)</h2>\n<ul>\n<li>Handle PermissionError in fallback code for old import name <a href=\"https://redirect.github.com/Kludex/python-multipart/pull/182\">#182</a>.</li>\n</ul>\n<h2>0.0.16 (2024-10-27)</h2>\n<ul>\n<li>Add dunder attributes to <code>multipart</code> package <a href=\"https://redirect.github.com/Kludex/python-multipart/pull/177\">#177</a>.</li>\n</ul>\n<h2>0.0.15 (2024-10-27)</h2>\n<ul>\n<li>Replace <code>FutureWarning</code> to <code>PendingDeprecationWarning</code> <a href=\"https://redirect.github.com/Kludex/python-multipart/pull/174\">#174</a>.</li>\n<li>Add missing files to SDist <a href=\"https://redirect.github.com/Kludex/python-multipart/pull/171\">#171</a>.</li>\n</ul>\n<h2>0.0.14 (2024-10-24)</h2>\n<ul>\n<li>Fix import scheme for <code>multipart</code> module (<a href=\"https://redirect.github.com/Kludex/python-multipart/pull/168\">#168</a>).</li>\n</ul>\n<h2>0.0.13 (2024-10-20)</h2>\n<ul>\n<li>Rename import to <code>python_multipart</code> <a href=\"https://redirect.github.com/Kludex/python-multipart/pull/166\">#166</a>.</li>\n</ul>\n<h2>0.0.12 (2024-09-29)</h2>\n<ul>\n<li>Improve error message when boundary character does not match <a href=\"https://redirect.github.com/Kludex/python-multipart/pull/124\">#124</a>.</li>\n<li>Add mypy strict typing <a href=\"https://redirect.github.com/Kludex/python-multipart/pull/140\">#140</a>.</li>\n<li>Enforce 100% coverage <a href=\"https://redirect.github.com/Kludex/python-multipart/pull/159\">#159</a>.</li>\n</ul>\n<h2>0.0.11 (2024-09-28)</h2>\n<ul>\n<li>Improve performance, especially in data with many CR-LF <a href=\"https://redirect.github.com/Kludex/python-multipart/pull/137\">#137</a>.</li>\n<li>Handle invalid CRLF in header name <a href=\"https://redirect.github.com/Kludex/python-multipart/pull/141\">#141</a>.</li>\n</ul>\n<h2>0.0.10 (2024-09-21)</h2>\n<ul>\n<li>Support <code>on_header_begin</code> <a href=\"https://redirect.github.com/Kludex/python-multipart/pull/103\">#103</a>.</li>\n<li>Improve type hints on <code>FormParser</code> <a href=\"https://redirect.github.com/Kludex/python-multipart/pull/104\">#104</a>.</li>\n<li>Fix <code>OnFileCallback</code> type <a href=\"https://redirect.github.com/Kludex/python-multipart/pull/106\">#106</a>.</li>\n<li>Improve type hints <a href=\"https://redirect.github.com/Kludex/python-multipart/pull/110\">#110</a>.</li>\n<li>Improve type hints on <code>File</code> <a href=\"https://redirect.github.com/Kludex/python-multipart/pull/111\">#111</a>.</li>\n<li>Add type hint to helper functions <a href=\"https://redirect.github.com/Kludex/python-multipart/pull/112\">#112</a>.</li>\n<li>Minor fix for Field.<strong>repr</strong> <a href=\"https://redirect.github.com/Kludex/python-multipart/pull/114\">#114</a>.</li>\n<li>Fix use of chunk_size parameter <a href=\"https://redirect.github.com/Kludex/python-multipart/pull/136\">#136</a>.</li>\n<li>Allow digits and valid token chars in headers <a href=\"https://redirect.github.com/Kludex/python-multipart/pull/134\">#134</a>.</li>\n<li>Fix headers being carried between parts <a href=\"https://redirect.github.com/Kludex/python-multipart/pull/135\">#135</a>.</li>\n</ul>\n<h2>0.0.9 (2024-02-10)</h2>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/Kludex/python-multipart/commit/5b1aed83adadbff1677779cd0df53723cd80a0d6\"><code>5b1aed8</code></a> Version 0.0.18 (<a href=\"https://redirect.github.com/Kludex/python-multipart/issues/191\">#191</a>)</li>\n<li><a href=\"https://github.com/Kludex/python-multipart/commit/9205a0ec8c646b9f705430a6bfb52bd957b76c19\"><code>9205a0e</code></a> Hard break if found data after last boundary on <code>MultipartParser</code> (<a href=\"https://redirect.github.com/Kludex/python-multipart/issues/189\">#189</a>)</li>\n<li><a href=\"https://github.com/Kludex/python-multipart/commit/170e6043ffeb8f9fb6ad622729f3eda3f45b98cb\"><code>170e604</code></a> Update ruff &amp; mypy (<a href=\"https://redirect.github.com/Kludex/python-multipart/issues/188\">#188</a>)</li>\n<li><a href=\"https://github.com/Kludex/python-multipart/commit/e53b541356981b2353914ef5dbf6a1b0605f31c5\"><code>e53b541</code></a> Create SECURITY.md (<a href=\"https://redirect.github.com/Kludex/python-multipart/issues/187\">#187</a>)</li>\n<li><a href=\"https://github.com/Kludex/python-multipart/commit/02d1ec148b40470b8bbb25dd833c1e1aace51a8b\"><code>02d1ec1</code></a> fuzz: fix boundary error (<a href=\"https://redirect.github.com/Kludex/python-multipart/issues/179\">#179</a>)</li>\n<li><a href=\"https://github.com/Kludex/python-multipart/commit/616b81e72fe67ce67e332c446513ef89b9d816dc\"><code>616b81e</code></a> Version 0.0.17 (<a href=\"https://redirect.github.com/Kludex/python-multipart/issues/183\">#183</a>)</li>\n<li><a href=\"https://github.com/Kludex/python-multipart/commit/ca52662eda368bd61fbb9508bfaffb0fc4af6028\"><code>ca52662</code></a> Handle PermissionError in fallback code for old import name (<a href=\"https://redirect.github.com/Kludex/python-multipart/issues/182\">#182</a>)</li>\n<li><a href=\"https://github.com/Kludex/python-multipart/commit/876406774d9b98c7b3afa24c3a0c901215f87029\"><code>8764067</code></a> Version 0.0.16 (<a href=\"https://redirect.github.com/Kludex/python-multipart/issues/177\">#177</a>)</li>\n<li><a href=\"https://github.com/Kludex/python-multipart/commit/ce85154ff138227654e19d5a47eea6b316bba427\"><code>ce85154</code></a> Version 0.0.15 (<a href=\"https://redirect.github.com/Kludex/python-multipart/issues/175\">#175</a>)</li>\n<li><a href=\"https://github.com/Kludex/python-multipart/commit/73fb55d1f8fec576759fcc3c11cc0807d246af00\"><code>73fb55d</code></a> ci: check-sdist (<a href=\"https://redirect.github.com/Kludex/python-multipart/issues/172\">#172</a>)</li>\n<li>Additional commits viewable in <a href=\"https://github.com/Kludex/python-multipart/compare/0.0.7...0.0.18\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=python-multipart&package-manager=pip&previous-version=0.0.7&new-version=0.0.18)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/srbhr/Resume-Matcher/network/alerts).\n\n</details>",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "state",
          "value": "open",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": "requirements.txt",
          "qualifier": "files"
        },
        {
          "objectId": "dependabot[bot]",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "requirements.txt",
          "qualifier": "aggregates"
        },
        {
          "objectId": "dependabot[bot]",
          "qualifier": "has-participant"
        },
        {
          "objectId": "9e12f3cf1aeae8636db38bfe230df4f31aa336a0",
          "qualifier": "commits"
        },
        {
          "objectId": "42b552774bedeec7562e15c78d17eeb99ee13d90",
          "qualifier": "is-merged-with"
        },
        {
          "objectId": "9e12f3cf1aeae8636db38bfe230df4f31aa336a0",
          "qualifier": "formalises"
        }
      ],
      "id": "295"
    },
    {
      "type": "pull_request",
      "attributes": [
        {
          "name": "title",
          "value": "Chore(deps): Bump nltk from 3.8.1 to 3.9",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "description",
          "value": "Bumps [nltk](https://github.com/nltk/nltk) from 3.8.1 to 3.9.\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/nltk/nltk/blob/develop/ChangeLog\">nltk's changelog</a>.</em></p>\n<blockquote>\n<p>Version 3.9.1 2024-08-19</p>\n<ul>\n<li>Fixed bug that prevented wordnet from loading</li>\n</ul>\n<p>Version 3.9 2024-08-18</p>\n<ul>\n<li>Fix security vulnerability CVE-2024-39705 (breaking change)</li>\n<li>Replace pickled models (punkt, chunker, taggers) by new pickle-free &quot;_tab&quot; packages</li>\n<li>No longer sort Wordnet synsets and relations (sort in calling function when required)</li>\n<li>Only strip the last suffix in Wordnet Morphy, thus restricting synsets() results</li>\n<li>Add Python 3.12 support</li>\n<li>Many other minor fixes</li>\n</ul>\n<p>Thanks to the following contributors to 3.8.2:\nTom Aarsen, Cat Lee Ball, Veralara Bernhard, Carlos Brandt, Konstantin Chernyshev, Michael Higgins,\nEric Kafe, Vivek Kalyan, David Lukes, Rob Malouf, purificant, Alex Rudnick, Liling Tan, Akihiro Yamazaki.</p>\n<p>Version 3.8.1 2023-01-02</p>\n<ul>\n<li>Resolve RCE vulnerability in localhost WordNet Browser (<a href=\"https://redirect.github.com/nltk/nltk/issues/3100\">#3100</a>)</li>\n<li>Remove unused tool scripts (<a href=\"https://redirect.github.com/nltk/nltk/issues/3099\">#3099</a>)</li>\n<li>Resolve XSS vulnerability in localhost WordNet Browser (<a href=\"https://redirect.github.com/nltk/nltk/issues/3096\">#3096</a>)</li>\n<li>Add Python 3.11 support (<a href=\"https://redirect.github.com/nltk/nltk/issues/3090\">#3090</a>)</li>\n</ul>\n<p>Thanks to the following contributors to 3.8.1:\nFrancis Bond, John Vandenberg, Tom Aarsen</p>\n<p>Version 3.8 2022-12-12</p>\n<ul>\n<li>Refactor dispersion plot (<a href=\"https://redirect.github.com/nltk/nltk/issues/3082\">#3082</a>)</li>\n<li>Provide type hints for LazyCorpusLoader variables (<a href=\"https://redirect.github.com/nltk/nltk/issues/3081\">#3081</a>)</li>\n<li>Throw warning when LanguageModel is initialized with incorrect vocabulary (<a href=\"https://redirect.github.com/nltk/nltk/issues/3080\">#3080</a>)</li>\n<li>Fix WordNet's all_synsets() function (<a href=\"https://redirect.github.com/nltk/nltk/issues/3078\">#3078</a>)</li>\n<li>Resolve TreebankWordDetokenizer inconsistency with end-of-string contractions (<a href=\"https://redirect.github.com/nltk/nltk/issues/3070\">#3070</a>)</li>\n<li>Support both iso639-3 codes and BCP-47 language tags (<a href=\"https://redirect.github.com/nltk/nltk/issues/3060\">#3060</a>)</li>\n<li>Avoid DeprecationWarning in Regexp tokenizer (<a href=\"https://redirect.github.com/nltk/nltk/issues/3055\">#3055</a>)</li>\n<li>Fix many doctests, add doctests to CI (<a href=\"https://redirect.github.com/nltk/nltk/issues/3054\">#3054</a>, <a href=\"https://redirect.github.com/nltk/nltk/issues/3050\">#3050</a>, <a href=\"https://redirect.github.com/nltk/nltk/issues/3048\">#3048</a>)</li>\n<li>Fix bool field not being read in VerbNet (<a href=\"https://redirect.github.com/nltk/nltk/issues/3044\">#3044</a>)</li>\n<li>Greatly improve time efficiency of SyllableTokenizer when tokenizing numbers (<a href=\"https://redirect.github.com/nltk/nltk/issues/3042\">#3042</a>)</li>\n<li>Fix encodings of Polish udhr corpus reader (<a href=\"https://redirect.github.com/nltk/nltk/issues/3038\">#3038</a>)</li>\n<li>Allow TweetTokenizer to tokenize emoji flag sequences (<a href=\"https://redirect.github.com/nltk/nltk/issues/3034\">#3034</a>)</li>\n<li>Prevent LazyModule from increasing the size of nltk.<strong>dict</strong> (<a href=\"https://redirect.github.com/nltk/nltk/issues/3033\">#3033</a>)</li>\n<li>Fix CoreNLPServer non-default port issue (<a href=\"https://redirect.github.com/nltk/nltk/issues/3031\">#3031</a>)</li>\n<li>Add &quot;acion&quot; suffix to the Spanish SnowballStemmer (<a href=\"https://redirect.github.com/nltk/nltk/issues/3030\">#3030</a>)</li>\n<li>Allow loading WordNet without OMW (<a href=\"https://redirect.github.com/nltk/nltk/issues/3026\">#3026</a>)</li>\n<li>Use input() in nltk.chat.chatbot() for Jupyter support (<a href=\"https://redirect.github.com/nltk/nltk/issues/3022\">#3022</a>)</li>\n<li>Fix edit_distance_align() in distance.py (<a href=\"https://redirect.github.com/nltk/nltk/issues/3017\">#3017</a>)</li>\n<li>Tackle performance and accuracy regression of sentence tokenizer since NLTK 3.6.6 (<a href=\"https://redirect.github.com/nltk/nltk/issues/3014\">#3014</a>)</li>\n<li>Add the Iota operator to semantic logic (<a href=\"https://redirect.github.com/nltk/nltk/issues/3010\">#3010</a>)</li>\n<li>Resolve critical errors in WordNet app (<a href=\"https://redirect.github.com/nltk/nltk/issues/3008\">#3008</a>)</li>\n<li>Resolve critical error in CHILDES Corpus (<a href=\"https://redirect.github.com/nltk/nltk/issues/2998\">#2998</a>)</li>\n<li>Make WordNet information_content() accept adjective satellites (<a href=\"https://redirect.github.com/nltk/nltk/issues/2995\">#2995</a>)</li>\n</ul>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/nltk/nltk/commit/24936a2d0c2ef1f4eed22de30aa72754e4cc30e7\"><code>24936a2</code></a> Bump version to 3.9</li>\n<li><a href=\"https://github.com/nltk/nltk/commit/c2228974033d7e378c7500f6554bbe8e6312d7a2\"><code>c222897</code></a> Merge branch 'develop' of <a href=\"https://github.com/nltk/nltk\">https://github.com/nltk/nltk</a> into develop</li>\n<li><a href=\"https://github.com/nltk/nltk/commit/34c3a4ad4e25c17e70e50c740e59388589a529fc\"><code>34c3a4a</code></a> Merge branch 'develop' of <a href=\"https://github.com/nltk/nltk\">https://github.com/nltk/nltk</a> into develop</li>\n<li><a href=\"https://github.com/nltk/nltk/commit/253dd3acd1de2d77b2c9df60a2a1ac28de02aa9b\"><code>253dd3a</code></a> add black</li>\n<li><a href=\"https://github.com/nltk/nltk/commit/c43727fad66487cdfd4ade7b96960f43564c9972\"><code>c43727f</code></a> Update version</li>\n<li><a href=\"https://github.com/nltk/nltk/commit/7137405da3e146d20503750e4f4efb81989105db\"><code>7137405</code></a> Merge pull request <a href=\"https://redirect.github.com/nltk/nltk/issues/3066\">#3066</a> from asishm/bugfix-lambda-closure-leak</li>\n<li><a href=\"https://github.com/nltk/nltk/commit/369cb9f85df3f450d6b33ca46f3ae42f5cbac942\"><code>369cb9f</code></a> Merge pull request <a href=\"https://redirect.github.com/nltk/nltk/issues/3245\">#3245</a> from ekaf/hotfix-closuredup</li>\n<li><a href=\"https://github.com/nltk/nltk/commit/501c70e20a7c210e53d64ca6b3898203ed0ea879\"><code>501c70e</code></a> Merge branch 'develop' into hotfix-closuredup</li>\n<li><a href=\"https://github.com/nltk/nltk/commit/bf05dc4cf25b568aaa68b224cefdd54916be8efc\"><code>bf05dc4</code></a> Merge pull request <a href=\"https://redirect.github.com/nltk/nltk/issues/3306\">#3306</a> from ekaf/py3_compat</li>\n<li><a href=\"https://github.com/nltk/nltk/commit/66539c7cc773bed00fe1211b4a64cf07dd57233c\"><code>66539c7</code></a> Sorted output in unit/test_wordnet.py</li>\n<li>Additional commits viewable in <a href=\"https://github.com/nltk/nltk/compare/3.8.1...3.9\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=nltk&package-manager=pip&previous-version=3.8.1&new-version=3.9)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/srbhr/Resume-Matcher/network/alerts).\n\n</details>",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "state",
          "value": "open",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": "requirements.txt",
          "qualifier": "files"
        },
        {
          "objectId": "dependabot[bot]",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "requirements.txt",
          "qualifier": "aggregates"
        },
        {
          "objectId": "dependabot[bot]",
          "qualifier": "has-participant"
        },
        {
          "objectId": "0b852b4c8d55108c1771cf56cf90a93d36bf9fc1",
          "qualifier": "commits"
        },
        {
          "objectId": "5bf078509cecc9a3166ce5e1c2ed6cfe5464e5b6",
          "qualifier": "is-merged-with"
        },
        {
          "objectId": "0b852b4c8d55108c1771cf56cf90a93d36bf9fc1",
          "qualifier": "formalises"
        }
      ],
      "id": "294"
    },
    {
      "type": "pull_request",
      "attributes": [
        {
          "name": "title",
          "value": "Fixing typo of fastembed in Readme.md",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "description",
          "value": "## Pull Request Title\r\nFixing typo of fastembed in Readme.md\r\n<!-- Provide a concise and descriptive title for the pull request -->\r\n\r\n## Related Issue\r\nNone\r\n<!-- If this pull request is related to an issue, please link it here using the \"#\" symbol followed by the issue number (e.g., #123) -->\r\n\r\n## Description\r\nFixing typo of fastembed in Readme.md\r\n<!-- Describe the changes made in this pull request. What problem does it solve or what feature does it add/modify? -->\r\n\r\n## Type\r\n<!-- Check the relevant options by putting an \"x\" in the brackets -->\r\n\r\n- [ ] Bug Fix\r\n- [ ] Feature Enhancement\r\n- [x] Documentation Update\r\n- [ ] Code Refactoring\r\n- [ ] Other (please specify): \r\n\r\n## Proposed Changes\r\n<!-- List the specific changes made in this pull request -->\r\n\r\n- Fixed the typo\r\n\r\n## Screenshots / Code Snippets (if applicable)\r\n<!-- Include any relevant screenshots or code snippets that help visualize the changes made -->\r\n\r\n## How to Test\r\n<!-- Provide step-by-step instructions or a checklist for testing the changes in this pull request -->\r\n\r\n1. Can be seen on the Readme.md \r\n\r\n## Checklist\r\n<!-- Put an \"x\" in the brackets for the items that apply to this pull request -->\r\n\r\n- [ ] The code compiles successfully without any errors or warnings\r\n- [ ] The changes have been tested and verified\r\n- [x] The documentation has been updated (if applicable)\r\n- [ ] The changes follow the project's coding guidelines and best practices\r\n- [ ] The commit messages are descriptive and follow the project's guidelines\r\n- [ ] All tests (if applicable) pass successfully\r\n- [ ] This pull request has been linked to the related issue (if applicable)\r\n\r\n## Additional Information\r\n<!-- Add any other information about the pull request that you think might be helpful -->\r\n\r\n",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "state",
          "value": "open",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": "README.md",
          "qualifier": "files"
        },
        {
          "objectId": "Atita Arora",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "README.md",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Atita Arora",
          "qualifier": "has-participant"
        },
        {
          "objectId": "d390587bcbf6f5e489ff8cf0c39bf4af15228505",
          "qualifier": "commits"
        },
        {
          "objectId": "4f1ffb01d49ca947097d03216b95024bec527822",
          "qualifier": "is-merged-with"
        },
        {
          "objectId": "d390587bcbf6f5e489ff8cf0c39bf4af15228505",
          "qualifier": "formalises"
        }
      ],
      "id": "292"
    },
    {
      "type": "user",
      "attributes": [
        {
          "name": "username",
          "value": "Abdulkhalek-1",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "rank",
          "value": "CONTRIBUTOR",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "is-bot",
          "value": "False",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "rank",
          "value": "NONE",
          "time": "2025-05-26T00:19:35Z"
        }
      ],
      "relationships": [
        {
          "objectId": "Abdulkhalek Muhammad",
          "qualifier": "name"
        }
      ],
      "id": "Abdulkhalek Muhammad"
    },
    {
      "type": "pull_request",
      "attributes": [
        {
          "name": "title",
          "value": "Fix directory existence check in `remove_old_files` function",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "description",
          "value": "## Pull Request Title:\r\nFix directory existence check in `remove_old_files` function\r\n\r\n## Related Issue:\r\n<!-- If applicable, link the issue number (e.g., #123) -->\r\n\r\n## Description:\r\nThis pull request fixes a bug in the ATS model where the `remove_old_files` function assumed the existence of the directory, which caused an error when the directory was missing. If the directory does not exist, it is now created to prevent errors during file removal.\r\n\r\n## Type:\r\n- [x] Bug Fix\r\n- [ ] Feature Enhancement\r\n- [ ] Documentation Update\r\n- [ ] Code Refactoring\r\n- [ ] Other (please specify):\r\n\r\n## Proposed Changes:\r\n- Added a check to verify if the directory exists before attempting to list its contents.\r\n- If the directory does not exist, it is created to prevent errors during file removal.\r\n\r\n## Screenshots / Code Snippets (if applicable):\r\n```python\r\ndef remove_old_files(files_path):\r\n    if not os.path.exists(files_path):\r\n        os.makedirs(files_path)\r\n\r\n    for filename in os.listdir(files_path):\r\n        try:\r\n            file_path = os.path.join(files_path, filename)\r\n\r\n            if os.path.isfile(file_path):\r\n                os.remove(file_path)\r\n        except Exception as e:\r\n            logging.error(f\"Error deleting {file_path}:\\n{e}\")\r\n\r\n    logging.info(\"Deleted old files from \" + files_path)\r\n```\r\n\r\n## How to Test:\r\n1. Run the application with an empty or missing target directory to verify it creates the directory and continues without errors.\r\n2. Ensure that files are properly deleted when the directory exists.\r\n3. Verify that logs are appropriately generated for each operation.\r\n\r\n## Checklist:\r\n- [x] The code compiles successfully without any errors or warnings.\r\n- [x] The changes have been tested and verified.\r\n- [x] The documentation has been updated (if applicable).\r\n- [x] The changes follow the project's coding guidelines and best practices.\r\n- [x] The commit messages are descriptive and follow the project's guidelines.\r\n- [x] All tests (if applicable) pass successfully.\r\n- [ ] This pull request has been linked to the related issue (if applicable).\r\n\r\n## Additional Information:\r\nNo additional information at this time. Please review and merge.\r\n",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "state",
          "value": "open",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": "run_first.py",
          "qualifier": "files"
        },
        {
          "objectId": "Abdulkhalek Muhammad",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "run_first.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Abdulkhalek Muhammad",
          "qualifier": "has-participant"
        },
        {
          "objectId": "7b6a44b8c8b9297bcaf5ee2e0fc7d8b44f8bdc1f",
          "qualifier": "commits"
        },
        {
          "objectId": "973e3674daab1ccb6dfbd94d5b13c131f8a258bc",
          "qualifier": "is-merged-with"
        },
        {
          "objectId": "7b6a44b8c8b9297bcaf5ee2e0fc7d8b44f8bdc1f",
          "qualifier": "formalises"
        }
      ],
      "id": "290"
    },
    {
      "type": "pull_request",
      "attributes": [
        {
          "name": "title",
          "value": "Reduces build time by 6x",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "description",
          "value": "## Pull Request Title\r\nRefactor Dockerfile: Reorder COPY and Install Steps for Optimized Layer Caching\r\n\r\n## Related Issue\r\nNo specific issue linked.\r\n\r\n## Description\r\nThis PR refactors the Dockerfile to optimize the layer caching by changing the order of COPY and installation steps. \r\nThis will reduce unnecessary rebuilds when only the application code is modified, improving build efficiency.\r\n\r\nChanges Building Time : 150s ->  23s\r\n\r\n## Type\r\n<!-- Check the relevant options by putting an \"x\" in the brackets -->\r\n\r\n- [ ] Bug Fix\r\n- [x] Feature Enhancement\r\n- [ ] Documentation Update\r\n- [ ] Code Refactoring\r\n- [ ] Other (please specify): \r\n\r\n## Proposed Changes\r\n\r\n```bash\r\n- COPY . .\r\nRUN apt-get update\r\nRUN apt-get install -y build-essential python-dev git\r\nRUN pip install -U pip setuptools wheel\r\n- RUN pip install -r requirements.txt\r\n+ COPY requirements.txt requirements.txt\r\n+ RUN pip install -r requirements.txt\r\n+ COPY . .\r\nEXPOSE 8501\r\nRUN python run_first.py\r\nENTRYPOINT [ \"streamlit\", \"run\", \"streamlit_app.py\"]\r\n\r\n```\r\n\r\n## Screenshots / Code Snippets (if applicable)\r\n![Build Time](https://github.com/user-attachments/assets/84b552dc-9e17-4af5-b6c3-92ae1567b82a)\r\n\r\n\r\n## Checklist\r\n\r\n- [x] The code compiles successfully without any errors or warnings\r\n- [x] The changes have been tested and verified\r\n- [ ] The documentation has been updated (if applicable)\r\n- [x] The changes follow the project's coding guidelines and best practices\r\n- [x] The commit messages are descriptive and follow the project's guidelines\r\n- [x] All tests (if applicable) pass successfully\r\n- [ ] This pull request has been linked to the related issue (if applicable)\r\n\r\n\r\n",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "state",
          "value": "open",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": "build.dockerfile",
          "qualifier": "files"
        },
        {
          "objectId": "Hemanth",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "build.dockerfile",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Hemanth",
          "qualifier": "has-participant"
        },
        {
          "objectId": "4af34e01b303c1ff337cf443aea44887d185e047",
          "qualifier": "commits"
        },
        {
          "objectId": "1332ee59cce95a2c5d65a6200e41f0a0d113171d",
          "qualifier": "is-merged-with"
        },
        {
          "objectId": "4af34e01b303c1ff337cf443aea44887d185e047",
          "qualifier": "formalises"
        }
      ],
      "id": "288"
    },
    {
      "type": "pull_request",
      "attributes": [
        {
          "name": "title",
          "value": "Solves #272 and #286 by creating Processed folder if not present already",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "description",
          "value": "## Pull Request Title\r\nSolves #272 by creating creates Processed folder if not present already\r\n\r\n## Related Issue\r\n- Solves #272 \r\n- Solves #286 \r\n\r\n## Description\r\nThis pull request ensures that the Processed folder is created if it does not already exist while running run_first.py.\r\n\r\nPreviously, the absence of the Processed folder was causing errors, particularly when attempting to delete files within the folder. This PR adds a check to create the Processed folder if it hasn't been created before attempting to delete files inside it.\r\n\r\n## Type\r\n\r\n- [x] Bug Fix\r\n- [ ] Feature Enhancement\r\n- [ ] Documentation Update\r\n- [ ] Code Refactoring\r\n- [ ] Other (please specify): \r\n\r\n## Proposed Changes\r\n\r\n-  Added logic in run_first.py to check if the Processed folder exists.\r\n-  Automatically creates the Processed folder if it's missing before attempting any operations on its contents.\r\n\r\n\r\n## Checklist\r\n\r\n- [x] The code compiles successfully without any errors or warnings\r\n- [x] The changes have been tested and verified\r\n- [ ] The documentation has been updated (if applicable)\r\n- [ ] The changes follow the project's coding guidelines and best practices\r\n- [x] The commit messages are descriptive and follow the project's guidelines\r\n- [ ] All tests (if applicable) pass successfully\r\n- [x] This pull request has been linked to the related issue (if applicable)\r\n\r\n\r\n",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "state",
          "value": "open",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": "run_first.py",
          "qualifier": "files"
        },
        {
          "objectId": "Hemanth",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "run_first.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Hemanth",
          "qualifier": "has-participant"
        },
        {
          "objectId": "aaf90a58fbbc6b1b1a2373cf5a54878778c49c2d",
          "qualifier": "commits"
        },
        {
          "objectId": "2e426346ad523ec9af6dbf75a1d74be30d3908ca",
          "qualifier": "is-merged-with"
        },
        {
          "objectId": "aaf90a58fbbc6b1b1a2373cf5a54878778c49c2d",
          "qualifier": "formalises"
        }
      ],
      "id": "287"
    },
    {
      "type": "user",
      "attributes": [
        {
          "name": "username",
          "value": "KamalMahanna",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "rank",
          "value": "CONTRIBUTOR",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "is-bot",
          "value": "False",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "rank",
          "value": "NONE",
          "time": "2025-04-20T07:40:16Z"
        }
      ],
      "relationships": [
        {
          "objectId": "Kamal Kiran Mahanna",
          "qualifier": "name"
        }
      ],
      "id": "Kamal Kiran Mahanna"
    },
    {
      "type": "pull_request",
      "attributes": [
        {
          "name": "title",
          "value": "fixing #272 folder not found error",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "description",
          "value": "## Pull Request Title\r\n<!-- Provide a concise and descriptive title for the pull request -->\r\n\r\n## Related Issue\r\n#272 \r\n\r\n## Description\r\n<!-- Describe the changes made in this pull request. What problem does it solve or what feature does it add/modify? -->\r\n- \r\n- \r\n## Type\r\n<!-- Check the relevant options by putting an \"x\" in the brackets -->\r\n\r\n- [x] Bug Fix\r\n- [ ] Feature Enhancement\r\n- [ ] Documentation Update\r\n- [ ] Code Refactoring\r\n- [ ] Other (please specify): \r\n\r\n## Proposed Changes\r\n<!-- List the specific changes made in this pull request -->\r\n\r\n- Added a conditional statement to check if `processed` directory exist or not. If not then create /Data/Processed, /Data/Processed/Resumes and  /Data/Processed/JobDescription directories\r\n- Replaced bare `except:` with `except Exception:` to ensure consistency with project style guidelines.\r\n\r\n## Screenshots / Code Snippets (if applicable)\r\n<!-- Include any relevant screenshots or code snippets that help visualize the changes made -->\r\n\r\n## How to Test\r\n<!-- Provide step-by-step instructions or a checklist for testing the changes in this pull request -->\r\n\r\n1. \r\n2. \r\n3. \r\n\r\n## Checklist\r\n<!-- Put an \"x\" in the brackets for the items that apply to this pull request -->\r\n\r\n- [x] The code compiles successfully without any errors or warnings\r\n- [x] The changes have been tested and verified\r\n- [ ] The documentation has been updated (if applicable)\r\n- [x] The changes follow the project's coding guidelines and best practices\r\n- [ ] The commit messages are descriptive and follow the project's guidelines\r\n- [ ] All tests (if applicable) pass successfully\r\n- [x] This pull request has been linked to the related issue (if applicable)\r\n\r\n## Additional Information\r\n<!-- Add any other information about the pull request that you think might be helpful -->\r\n\r\n",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "state",
          "value": "open",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": "run_first.py",
          "qualifier": "files"
        },
        {
          "objectId": "Kamal Kiran Mahanna",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "run_first.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Kamal Kiran Mahanna",
          "qualifier": "has-participant"
        },
        {
          "objectId": "70722b57a9bd13193593b37f53242936d94431cc",
          "qualifier": "commits"
        },
        {
          "objectId": "6bff891300b4aa59dc4935775984ae28ed843ee3",
          "qualifier": "is-merged-with"
        },
        {
          "objectId": "70722b57a9bd13193593b37f53242936d94431cc",
          "qualifier": "formalises"
        }
      ],
      "id": "284"
    },
    {
      "type": "user",
      "attributes": [
        {
          "name": "username",
          "value": "kxchourouk",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "rank",
          "value": "NONE",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "is-bot",
          "value": "False",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": "Chourouk",
          "qualifier": "name"
        }
      ],
      "id": "Chourouk"
    },
    {
      "type": "pull_request",
      "attributes": [
        {
          "name": "title",
          "value": "Astrolab",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "description",
          "value": "## Pull Request Title\r\n<!-- Provide a concise and descriptive title for the pull request -->\r\n\r\n## Related Issue\r\n<!-- If this pull request is related to an issue, please link it here using the \"#\" symbol followed by the issue number (e.g., #123) -->\r\n\r\n## Description\r\n<!-- Describe the changes made in this pull request. What problem does it solve or what feature does it add/modify? -->\r\n\r\n## Type\r\n<!-- Check the relevant options by putting an \"x\" in the brackets -->\r\n\r\n- [ ] Bug Fix\r\n- [ ] Feature Enhancement\r\n- [ ] Documentation Update\r\n- [ ] Code Refactoring\r\n- [ ] Other (please specify): \r\n\r\n## Proposed Changes\r\n<!-- List the specific changes made in this pull request -->\r\n\r\n- \r\n- \r\n- \r\n\r\n## Screenshots / Code Snippets (if applicable)\r\n<!-- Include any relevant screenshots or code snippets that help visualize the changes made -->\r\n\r\n## How to Test\r\n<!-- Provide step-by-step instructions or a checklist for testing the changes in this pull request -->\r\n\r\n1. \r\n2. \r\n3. \r\n\r\n## Checklist\r\n<!-- Put an \"x\" in the brackets for the items that apply to this pull request -->\r\n\r\n- [ ] The code compiles successfully without any errors or warnings\r\n- [ ] The changes have been tested and verified\r\n- [ ] The documentation has been updated (if applicable)\r\n- [ ] The changes follow the project's coding guidelines and best practices\r\n- [ ] The commit messages are descriptive and follow the project's guidelines\r\n- [ ] All tests (if applicable) pass successfully\r\n- [ ] This pull request has been linked to the related issue (if applicable)\r\n\r\n## Additional Information\r\n<!-- Add any other information about the pull request that you think might be helpful -->\r\n\r\n",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "state",
          "value": "open",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": ".github/workflows/django.yml",
          "qualifier": "files"
        },
        {
          "objectId": ".gitignore",
          "qualifier": "files"
        },
        {
          "objectId": "Assets/img/SwaggerUi.png",
          "qualifier": "files"
        },
        {
          "objectId": "Assets/img/resume_matcher_giff.gif",
          "qualifier": "files"
        },
        {
          "objectId": "Data/temp_ResumeToProcesss/alfred_pennyworth_pm.pdf",
          "qualifier": "files"
        },
        {
          "objectId": "Data/temp_ResumeToProcesss/barry_allen_fe.pdf",
          "qualifier": "files"
        },
        {
          "objectId": "Data/temp_ResumeToProcesss/bruce_wayne_fullstack.pdf",
          "qualifier": "files"
        },
        {
          "objectId": "Data/temp_ResumeToProcesss/harvey_dent_mle.pdf",
          "qualifier": "files"
        },
        {
          "objectId": "Data/temp_ResumeToProcesss/john_doe.pdf",
          "qualifier": "files"
        },
        {
          "objectId": "PostMan_app.py",
          "qualifier": "files"
        },
        {
          "objectId": "README.md",
          "qualifier": "files"
        },
        {
          "objectId": "REST_API_setup.py",
          "qualifier": "files"
        },
        {
          "objectId": "resume_matcher/main.py",
          "qualifier": "files"
        },
        {
          "objectId": "resume_matcher/run_first.py",
          "qualifier": "files"
        },
        {
          "objectId": "run_first.py",
          "qualifier": "files"
        },
        {
          "objectId": "scripts/Extractor.py",
          "qualifier": "files"
        },
        {
          "objectId": "scripts/JobDescriptionProcessor.py",
          "qualifier": "files"
        },
        {
          "objectId": "scripts/JobDescriptionProcessor1.py",
          "qualifier": "files"
        },
        {
          "objectId": "scripts/KeytermsExtraction.py",
          "qualifier": "files"
        },
        {
          "objectId": "scripts/LinkedinJobToPDF.py",
          "qualifier": "files"
        },
        {
          "objectId": "scripts/ReadPdf.py",
          "qualifier": "files"
        },
        {
          "objectId": "scripts/ResumeProcessor.py",
          "qualifier": "files"
        },
        {
          "objectId": "scripts/TextCleaner.py",
          "qualifier": "files"
        },
        {
          "objectId": "scripts/parsers/ParseJobDescToJson.py",
          "qualifier": "files"
        },
        {
          "objectId": "scripts/parsers/ParseResumeToJson.py",
          "qualifier": "files"
        },
        {
          "objectId": "scripts/similarity/get_score.ipynb",
          "qualifier": "files"
        },
        {
          "objectId": "streamlit_app.py",
          "qualifier": "files"
        },
        {
          "objectId": "streamlit_interactive.py",
          "qualifier": "files"
        },
        {
          "objectId": "swagger.json",
          "qualifier": "files"
        },
        {
          "objectId": "swagger_app.py",
          "qualifier": "files"
        },
        {
          "objectId": "Chourouk",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": ".github/workflows/django.yml",
          "qualifier": "aggregates"
        },
        {
          "objectId": ".gitignore",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Assets/img/SwaggerUi.png",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Assets/img/resume_matcher_giff.gif",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/temp_ResumeToProcesss/alfred_pennyworth_pm.pdf",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/temp_ResumeToProcesss/barry_allen_fe.pdf",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/temp_ResumeToProcesss/bruce_wayne_fullstack.pdf",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/temp_ResumeToProcesss/harvey_dent_mle.pdf",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/temp_ResumeToProcesss/john_doe.pdf",
          "qualifier": "aggregates"
        },
        {
          "objectId": "PostMan_app.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "README.md",
          "qualifier": "aggregates"
        },
        {
          "objectId": "REST_API_setup.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "resume_matcher/main.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "resume_matcher/run_first.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "run_first.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "scripts/Extractor.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "scripts/JobDescriptionProcessor.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "scripts/JobDescriptionProcessor1.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "scripts/KeytermsExtraction.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "scripts/LinkedinJobToPDF.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "scripts/ReadPdf.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "scripts/ResumeProcessor.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "scripts/TextCleaner.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "scripts/parsers/ParseJobDescToJson.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "scripts/parsers/ParseResumeToJson.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "scripts/similarity/get_score.ipynb",
          "qualifier": "aggregates"
        },
        {
          "objectId": "streamlit_app.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "streamlit_interactive.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "swagger.json",
          "qualifier": "aggregates"
        },
        {
          "objectId": "swagger_app.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Chourouk",
          "qualifier": "has-participant"
        },
        {
          "objectId": "bdee44bdd74cd7bcaf09b44b1c57d1e56b7df189",
          "qualifier": "commits"
        },
        {
          "objectId": "e779f9940870ca1abaefb3d0430207cfe6d72ace",
          "qualifier": "commits"
        },
        {
          "objectId": "0704c9101ef2171c43a33584ff84e3f22b39f704",
          "qualifier": "commits"
        },
        {
          "objectId": "e46de5c228a6cb5b439d80a05190fbff6a921c18",
          "qualifier": "commits"
        },
        {
          "objectId": "1c865bc5212d32be5f6fb68971d640ff67bf4aa9",
          "qualifier": "commits"
        },
        {
          "objectId": "024b450c0d704b466a20359702ce00bd6d49e273",
          "qualifier": "commits"
        },
        {
          "objectId": "5aa984c51192aa8229d54836944a20b9d1870cc0",
          "qualifier": "commits"
        },
        {
          "objectId": "b567ce8de21fbcf7451529db5b321a02079fee0f",
          "qualifier": "commits"
        },
        {
          "objectId": "1fdd9b626e1e21b7969020848c9d2fecd0c13d06",
          "qualifier": "commits"
        },
        {
          "objectId": "944e87c16d8aac212c56e33a36981f0e7446c551",
          "qualifier": "commits"
        },
        {
          "objectId": "1c5d3b5c9af34c95e19a6a462e1f75287c571aab",
          "qualifier": "commits"
        },
        {
          "objectId": "a7266224724bc23f4b5473365c93f48b53c57c45",
          "qualifier": "commits"
        },
        {
          "objectId": "b0e196e0425135a4a950d66457f045448cafade4",
          "qualifier": "commits"
        },
        {
          "objectId": "69eafbf80156ea5dd2124d570f0be6add84fad29",
          "qualifier": "commits"
        },
        {
          "objectId": "d3dbd7bcce861895473ca5d132144841c8b6ff99",
          "qualifier": "commits"
        },
        {
          "objectId": "ec3b8c4b1d650a349c52ae1aba0efdedc3d59ba3",
          "qualifier": "commits"
        },
        {
          "objectId": "625696e21ab7c430b6ab26cb539b3f94578bd125",
          "qualifier": "commits"
        },
        {
          "objectId": "97fd0ce51f9ca5b016c05c88603df53ec527aa5c",
          "qualifier": "commits"
        },
        {
          "objectId": "6e4795ff5089ea30bc6807cdebdf1f1c799caa9d",
          "qualifier": "commits"
        },
        {
          "objectId": "00790e7a6416eec42f2e89e44e7a9197d58e6645",
          "qualifier": "commits"
        },
        {
          "objectId": "6c0f9d1f25f95fc0e00a90768b55027a16950fb8",
          "qualifier": "commits"
        },
        {
          "objectId": "3034944d46ae7a36df5c26d046b8ce9e64749005",
          "qualifier": "commits"
        },
        {
          "objectId": "e537a5860b96f89cbd126f2af4ae1235239a1f8e",
          "qualifier": "commits"
        },
        {
          "objectId": "8f2b43b55ad75decb96d140d6eb16ec10e23c2d3",
          "qualifier": "commits"
        },
        {
          "objectId": "c6476b6dc6cd7b12d0ab2229c1324b65c6edd1a7",
          "qualifier": "commits"
        },
        {
          "objectId": "ab67d529ad2944c638be72f96568ffe3e5526fce",
          "qualifier": "commits"
        },
        {
          "objectId": "546b7959ba9ded7bc8096330a9a8147ec61f07bf",
          "qualifier": "commits"
        },
        {
          "objectId": "c876227a7a644c090b3eb9a38c60ec92686bfc1e",
          "qualifier": "commits"
        },
        {
          "objectId": "531ced7b4663ba8896d3dc13d728f7e2666a9ebe",
          "qualifier": "commits"
        },
        {
          "objectId": "3baa3aaae2e7e9a8cdbfa6c04a6d523d7b8f5819",
          "qualifier": "commits"
        },
        {
          "objectId": "c97d3c821cb817790caaaac5c1ce07261968ddb1",
          "qualifier": "is-merged-with"
        },
        {
          "objectId": "bdee44bdd74cd7bcaf09b44b1c57d1e56b7df189",
          "qualifier": "formalises"
        },
        {
          "objectId": "e779f9940870ca1abaefb3d0430207cfe6d72ace",
          "qualifier": "formalises"
        },
        {
          "objectId": "0704c9101ef2171c43a33584ff84e3f22b39f704",
          "qualifier": "formalises"
        },
        {
          "objectId": "e46de5c228a6cb5b439d80a05190fbff6a921c18",
          "qualifier": "formalises"
        },
        {
          "objectId": "1c865bc5212d32be5f6fb68971d640ff67bf4aa9",
          "qualifier": "formalises"
        },
        {
          "objectId": "024b450c0d704b466a20359702ce00bd6d49e273",
          "qualifier": "formalises"
        },
        {
          "objectId": "5aa984c51192aa8229d54836944a20b9d1870cc0",
          "qualifier": "formalises"
        },
        {
          "objectId": "b567ce8de21fbcf7451529db5b321a02079fee0f",
          "qualifier": "formalises"
        },
        {
          "objectId": "1fdd9b626e1e21b7969020848c9d2fecd0c13d06",
          "qualifier": "formalises"
        },
        {
          "objectId": "944e87c16d8aac212c56e33a36981f0e7446c551",
          "qualifier": "formalises"
        },
        {
          "objectId": "1c5d3b5c9af34c95e19a6a462e1f75287c571aab",
          "qualifier": "formalises"
        },
        {
          "objectId": "a7266224724bc23f4b5473365c93f48b53c57c45",
          "qualifier": "formalises"
        },
        {
          "objectId": "b0e196e0425135a4a950d66457f045448cafade4",
          "qualifier": "formalises"
        },
        {
          "objectId": "69eafbf80156ea5dd2124d570f0be6add84fad29",
          "qualifier": "formalises"
        },
        {
          "objectId": "d3dbd7bcce861895473ca5d132144841c8b6ff99",
          "qualifier": "formalises"
        },
        {
          "objectId": "ec3b8c4b1d650a349c52ae1aba0efdedc3d59ba3",
          "qualifier": "formalises"
        },
        {
          "objectId": "625696e21ab7c430b6ab26cb539b3f94578bd125",
          "qualifier": "formalises"
        },
        {
          "objectId": "97fd0ce51f9ca5b016c05c88603df53ec527aa5c",
          "qualifier": "formalises"
        },
        {
          "objectId": "6e4795ff5089ea30bc6807cdebdf1f1c799caa9d",
          "qualifier": "formalises"
        },
        {
          "objectId": "00790e7a6416eec42f2e89e44e7a9197d58e6645",
          "qualifier": "formalises"
        },
        {
          "objectId": "6c0f9d1f25f95fc0e00a90768b55027a16950fb8",
          "qualifier": "formalises"
        },
        {
          "objectId": "3034944d46ae7a36df5c26d046b8ce9e64749005",
          "qualifier": "formalises"
        },
        {
          "objectId": "e537a5860b96f89cbd126f2af4ae1235239a1f8e",
          "qualifier": "formalises"
        },
        {
          "objectId": "8f2b43b55ad75decb96d140d6eb16ec10e23c2d3",
          "qualifier": "formalises"
        },
        {
          "objectId": "c6476b6dc6cd7b12d0ab2229c1324b65c6edd1a7",
          "qualifier": "formalises"
        },
        {
          "objectId": "ab67d529ad2944c638be72f96568ffe3e5526fce",
          "qualifier": "formalises"
        },
        {
          "objectId": "546b7959ba9ded7bc8096330a9a8147ec61f07bf",
          "qualifier": "formalises"
        },
        {
          "objectId": "c876227a7a644c090b3eb9a38c60ec92686bfc1e",
          "qualifier": "formalises"
        },
        {
          "objectId": "531ced7b4663ba8896d3dc13d728f7e2666a9ebe",
          "qualifier": "formalises"
        },
        {
          "objectId": "3baa3aaae2e7e9a8cdbfa6c04a6d523d7b8f5819",
          "qualifier": "formalises"
        }
      ],
      "id": "282"
    },
    {
      "type": "pull_request",
      "attributes": [
        {
          "name": "title",
          "value": "sorry",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "description",
          "value": "sorry wrong",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "state",
          "value": "open",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": ".gitignore",
          "qualifier": "files"
        },
        {
          "objectId": "Data/temp_ResumeToProcesss/barry_allen_fe.pdf",
          "qualifier": "files"
        },
        {
          "objectId": "Data/temp_ResumeToProcesss/bruce_wayne_fullstack.pdf",
          "qualifier": "files"
        },
        {
          "objectId": "Data/temp_ResumeToProcesss/john_doe.pdf",
          "qualifier": "files"
        },
        {
          "objectId": "PostMan_app.py",
          "qualifier": "files"
        },
        {
          "objectId": "REST_API_setup.py",
          "qualifier": "files"
        },
        {
          "objectId": "resume_matcher/main.py",
          "qualifier": "files"
        },
        {
          "objectId": "resume_matcher/run_first.py",
          "qualifier": "files"
        },
        {
          "objectId": "run_first.py",
          "qualifier": "files"
        },
        {
          "objectId": "scripts/Extractor.py",
          "qualifier": "files"
        },
        {
          "objectId": "scripts/JobDescriptionProcessor.py",
          "qualifier": "files"
        },
        {
          "objectId": "scripts/JobDescriptionProcessor1.py",
          "qualifier": "files"
        },
        {
          "objectId": "scripts/KeytermsExtraction.py",
          "qualifier": "files"
        },
        {
          "objectId": "scripts/LinkedinJobToPDF.py",
          "qualifier": "files"
        },
        {
          "objectId": "scripts/ReadPdf.py",
          "qualifier": "files"
        },
        {
          "objectId": "scripts/ResumeProcessor.py",
          "qualifier": "files"
        },
        {
          "objectId": "scripts/TextCleaner.py",
          "qualifier": "files"
        },
        {
          "objectId": "scripts/parsers/ParseJobDescToJson.py",
          "qualifier": "files"
        },
        {
          "objectId": "scripts/parsers/ParseResumeToJson.py",
          "qualifier": "files"
        },
        {
          "objectId": "scripts/similarity/get_score.ipynb",
          "qualifier": "files"
        },
        {
          "objectId": "streamlit_app.py",
          "qualifier": "files"
        },
        {
          "objectId": "streamlit_interactive.py",
          "qualifier": "files"
        },
        {
          "objectId": "swagger.json",
          "qualifier": "files"
        },
        {
          "objectId": "swagger_app.py",
          "qualifier": "files"
        },
        {
          "objectId": "Chourouk",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": ".gitignore",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/temp_ResumeToProcesss/barry_allen_fe.pdf",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/temp_ResumeToProcesss/bruce_wayne_fullstack.pdf",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/temp_ResumeToProcesss/john_doe.pdf",
          "qualifier": "aggregates"
        },
        {
          "objectId": "PostMan_app.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "REST_API_setup.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "resume_matcher/main.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "resume_matcher/run_first.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "run_first.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "scripts/Extractor.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "scripts/JobDescriptionProcessor.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "scripts/JobDescriptionProcessor1.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "scripts/KeytermsExtraction.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "scripts/LinkedinJobToPDF.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "scripts/ReadPdf.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "scripts/ResumeProcessor.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "scripts/TextCleaner.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "scripts/parsers/ParseJobDescToJson.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "scripts/parsers/ParseResumeToJson.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "scripts/similarity/get_score.ipynb",
          "qualifier": "aggregates"
        },
        {
          "objectId": "streamlit_app.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "streamlit_interactive.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "swagger.json",
          "qualifier": "aggregates"
        },
        {
          "objectId": "swagger_app.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Chourouk",
          "qualifier": "has-participant"
        },
        {
          "objectId": "bdee44bdd74cd7bcaf09b44b1c57d1e56b7df189",
          "qualifier": "commits"
        },
        {
          "objectId": "e779f9940870ca1abaefb3d0430207cfe6d72ace",
          "qualifier": "commits"
        },
        {
          "objectId": "0704c9101ef2171c43a33584ff84e3f22b39f704",
          "qualifier": "commits"
        },
        {
          "objectId": "e46de5c228a6cb5b439d80a05190fbff6a921c18",
          "qualifier": "commits"
        },
        {
          "objectId": "1c865bc5212d32be5f6fb68971d640ff67bf4aa9",
          "qualifier": "commits"
        },
        {
          "objectId": "024b450c0d704b466a20359702ce00bd6d49e273",
          "qualifier": "commits"
        },
        {
          "objectId": "5aa984c51192aa8229d54836944a20b9d1870cc0",
          "qualifier": "commits"
        },
        {
          "objectId": "b567ce8de21fbcf7451529db5b321a02079fee0f",
          "qualifier": "commits"
        },
        {
          "objectId": "1fdd9b626e1e21b7969020848c9d2fecd0c13d06",
          "qualifier": "commits"
        },
        {
          "objectId": "944e87c16d8aac212c56e33a36981f0e7446c551",
          "qualifier": "commits"
        },
        {
          "objectId": "1c5d3b5c9af34c95e19a6a462e1f75287c571aab",
          "qualifier": "commits"
        },
        {
          "objectId": "a7266224724bc23f4b5473365c93f48b53c57c45",
          "qualifier": "commits"
        },
        {
          "objectId": "b0e196e0425135a4a950d66457f045448cafade4",
          "qualifier": "commits"
        },
        {
          "objectId": "69eafbf80156ea5dd2124d570f0be6add84fad29",
          "qualifier": "commits"
        },
        {
          "objectId": "d3dbd7bcce861895473ca5d132144841c8b6ff99",
          "qualifier": "commits"
        },
        {
          "objectId": "ec3b8c4b1d650a349c52ae1aba0efdedc3d59ba3",
          "qualifier": "commits"
        },
        {
          "objectId": "625696e21ab7c430b6ab26cb539b3f94578bd125",
          "qualifier": "commits"
        },
        {
          "objectId": "97fd0ce51f9ca5b016c05c88603df53ec527aa5c",
          "qualifier": "commits"
        },
        {
          "objectId": "6e4795ff5089ea30bc6807cdebdf1f1c799caa9d",
          "qualifier": "commits"
        },
        {
          "objectId": "00790e7a6416eec42f2e89e44e7a9197d58e6645",
          "qualifier": "commits"
        },
        {
          "objectId": "6c0f9d1f25f95fc0e00a90768b55027a16950fb8",
          "qualifier": "commits"
        },
        {
          "objectId": "3034944d46ae7a36df5c26d046b8ce9e64749005",
          "qualifier": "commits"
        },
        {
          "objectId": "e537a5860b96f89cbd126f2af4ae1235239a1f8e",
          "qualifier": "commits"
        },
        {
          "objectId": "8f2b43b55ad75decb96d140d6eb16ec10e23c2d3",
          "qualifier": "commits"
        },
        {
          "objectId": "c6476b6dc6cd7b12d0ab2229c1324b65c6edd1a7",
          "qualifier": "commits"
        },
        {
          "objectId": "ab67d529ad2944c638be72f96568ffe3e5526fce",
          "qualifier": "commits"
        },
        {
          "objectId": "546b7959ba9ded7bc8096330a9a8147ec61f07bf",
          "qualifier": "commits"
        },
        {
          "objectId": "c876227a7a644c090b3eb9a38c60ec92686bfc1e",
          "qualifier": "commits"
        },
        {
          "objectId": "531ced7b4663ba8896d3dc13d728f7e2666a9ebe",
          "qualifier": "commits"
        },
        {
          "objectId": "3baa3aaae2e7e9a8cdbfa6c04a6d523d7b8f5819",
          "qualifier": "commits"
        },
        {
          "objectId": "029be6f44f7373882bd2edf0bb68b7ad5d651b96",
          "qualifier": "is-merged-with"
        },
        {
          "objectId": "bdee44bdd74cd7bcaf09b44b1c57d1e56b7df189",
          "qualifier": "formalises"
        },
        {
          "objectId": "e779f9940870ca1abaefb3d0430207cfe6d72ace",
          "qualifier": "formalises"
        },
        {
          "objectId": "0704c9101ef2171c43a33584ff84e3f22b39f704",
          "qualifier": "formalises"
        },
        {
          "objectId": "e46de5c228a6cb5b439d80a05190fbff6a921c18",
          "qualifier": "formalises"
        },
        {
          "objectId": "1c865bc5212d32be5f6fb68971d640ff67bf4aa9",
          "qualifier": "formalises"
        },
        {
          "objectId": "024b450c0d704b466a20359702ce00bd6d49e273",
          "qualifier": "formalises"
        },
        {
          "objectId": "5aa984c51192aa8229d54836944a20b9d1870cc0",
          "qualifier": "formalises"
        },
        {
          "objectId": "b567ce8de21fbcf7451529db5b321a02079fee0f",
          "qualifier": "formalises"
        },
        {
          "objectId": "1fdd9b626e1e21b7969020848c9d2fecd0c13d06",
          "qualifier": "formalises"
        },
        {
          "objectId": "944e87c16d8aac212c56e33a36981f0e7446c551",
          "qualifier": "formalises"
        },
        {
          "objectId": "1c5d3b5c9af34c95e19a6a462e1f75287c571aab",
          "qualifier": "formalises"
        },
        {
          "objectId": "a7266224724bc23f4b5473365c93f48b53c57c45",
          "qualifier": "formalises"
        },
        {
          "objectId": "b0e196e0425135a4a950d66457f045448cafade4",
          "qualifier": "formalises"
        },
        {
          "objectId": "69eafbf80156ea5dd2124d570f0be6add84fad29",
          "qualifier": "formalises"
        },
        {
          "objectId": "d3dbd7bcce861895473ca5d132144841c8b6ff99",
          "qualifier": "formalises"
        },
        {
          "objectId": "ec3b8c4b1d650a349c52ae1aba0efdedc3d59ba3",
          "qualifier": "formalises"
        },
        {
          "objectId": "625696e21ab7c430b6ab26cb539b3f94578bd125",
          "qualifier": "formalises"
        },
        {
          "objectId": "97fd0ce51f9ca5b016c05c88603df53ec527aa5c",
          "qualifier": "formalises"
        },
        {
          "objectId": "6e4795ff5089ea30bc6807cdebdf1f1c799caa9d",
          "qualifier": "formalises"
        },
        {
          "objectId": "00790e7a6416eec42f2e89e44e7a9197d58e6645",
          "qualifier": "formalises"
        },
        {
          "objectId": "6c0f9d1f25f95fc0e00a90768b55027a16950fb8",
          "qualifier": "formalises"
        },
        {
          "objectId": "3034944d46ae7a36df5c26d046b8ce9e64749005",
          "qualifier": "formalises"
        },
        {
          "objectId": "e537a5860b96f89cbd126f2af4ae1235239a1f8e",
          "qualifier": "formalises"
        },
        {
          "objectId": "8f2b43b55ad75decb96d140d6eb16ec10e23c2d3",
          "qualifier": "formalises"
        },
        {
          "objectId": "c6476b6dc6cd7b12d0ab2229c1324b65c6edd1a7",
          "qualifier": "formalises"
        },
        {
          "objectId": "ab67d529ad2944c638be72f96568ffe3e5526fce",
          "qualifier": "formalises"
        },
        {
          "objectId": "546b7959ba9ded7bc8096330a9a8147ec61f07bf",
          "qualifier": "formalises"
        },
        {
          "objectId": "c876227a7a644c090b3eb9a38c60ec92686bfc1e",
          "qualifier": "formalises"
        },
        {
          "objectId": "531ced7b4663ba8896d3dc13d728f7e2666a9ebe",
          "qualifier": "formalises"
        },
        {
          "objectId": "3baa3aaae2e7e9a8cdbfa6c04a6d523d7b8f5819",
          "qualifier": "formalises"
        }
      ],
      "id": "281"
    },
    {
      "type": "pull_request",
      "attributes": [
        {
          "name": "title",
          "value": "Chore(deps): Bump zipp from 3.16.2 to 3.19.1",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "description",
          "value": "Bumps [zipp](https://github.com/jaraco/zipp) from 3.16.2 to 3.19.1.\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/jaraco/zipp/blob/main/NEWS.rst\">zipp's changelog</a>.</em></p>\n<blockquote>\n<h1>v3.19.1</h1>\n<h2>Bugfixes</h2>\n<ul>\n<li>Improved handling of malformed zip files. (<a href=\"https://redirect.github.com/jaraco/zipp/issues/119\">#119</a>)</li>\n</ul>\n<h1>v3.19.0</h1>\n<h2>Features</h2>\n<ul>\n<li>Implement is_symlink. (<a href=\"https://redirect.github.com/jaraco/zipp/issues/117\">#117</a>)</li>\n</ul>\n<h1>v3.18.2</h1>\n<p>No significant changes.</p>\n<h1>v3.18.1</h1>\n<p>No significant changes.</p>\n<h1>v3.18.0</h1>\n<h2>Features</h2>\n<ul>\n<li>Bypass ZipFile.namelist in glob for better performance. (<a href=\"https://redirect.github.com/jaraco/zipp/issues/106\">#106</a>)</li>\n<li>Refactored glob functionality to support a more generalized solution with support for platform-specific path separators. (<a href=\"https://redirect.github.com/jaraco/zipp/issues/108\">#108</a>)</li>\n</ul>\n<h2>Bugfixes</h2>\n<ul>\n<li>Add special accounting for pypy when computing the stack level for text encoding warnings. (<a href=\"https://redirect.github.com/jaraco/zipp/issues/114\">#114</a>)</li>\n</ul>\n<h1>v3.17.0</h1>\n<p>Features</p>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/jaraco/zipp/commit/6d1cb72aa55e0536f35d2af128994b5a61ca4c1a\"><code>6d1cb72</code></a> Finalize</li>\n<li><a href=\"https://github.com/jaraco/zipp/commit/fd604bd34f0343472521a36da1fbd22e793e14fd\"><code>fd604bd</code></a> Merge pull request <a href=\"https://redirect.github.com/jaraco/zipp/issues/120\">#120</a> from jaraco/bugfix/119-malformed-paths</li>\n<li><a href=\"https://github.com/jaraco/zipp/commit/c18417ed2953e181728a7dac07bff88a2190abf7\"><code>c18417e</code></a> Add news fragment.</li>\n<li><a href=\"https://github.com/jaraco/zipp/commit/58115d2be968644ce71ce6bcc9b79826c82a1806\"><code>58115d2</code></a> Employ SanitizedNames in CompleteDirs. Fixes broken test.</li>\n<li><a href=\"https://github.com/jaraco/zipp/commit/564fcc10cdbfdaecdb33688e149827465931c9e0\"><code>564fcc1</code></a> Add SanitizedNames mixin.</li>\n<li><a href=\"https://github.com/jaraco/zipp/commit/79a309fe54dc6b7934fb72e9f31bcb58f2e9f547\"><code>79a309f</code></a> Add some assertions about malformed paths.</li>\n<li><a href=\"https://github.com/jaraco/zipp/commit/2d015c22348fab46ca765339f55f84fe9d6e8115\"><code>2d015c2</code></a> Merge <a href=\"https://github.com/jaraco/skeleton\">https://github.com/jaraco/skeleton</a></li>\n<li><a href=\"https://github.com/jaraco/zipp/commit/a595a0fad054cd20b69d3e954c99174e3a548938\"><code>a595a0f</code></a> Rename extras to align with core metadata spec.</li>\n<li><a href=\"https://github.com/jaraco/zipp/commit/608f90a6e74919501577a1312dc5c7d8e1d391d7\"><code>608f90a</code></a> Finalize</li>\n<li><a href=\"https://github.com/jaraco/zipp/commit/3a22d724acf874111b43f87f7110225122ec3de5\"><code>3a22d72</code></a> Merge pull request <a href=\"https://redirect.github.com/jaraco/zipp/issues/118\">#118</a> from jaraco/feature/is-symlink</li>\n<li>Additional commits viewable in <a href=\"https://github.com/jaraco/zipp/compare/v3.16.2...v3.19.1\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=zipp&package-manager=pip&previous-version=3.16.2&new-version=3.19.1)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/srbhr/Resume-Matcher/network/alerts).\n\n</details>",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "state",
          "value": "open",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": "requirements.txt",
          "qualifier": "files"
        },
        {
          "objectId": "dependabot[bot]",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "requirements.txt",
          "qualifier": "aggregates"
        },
        {
          "objectId": "dependabot[bot]",
          "qualifier": "has-participant"
        },
        {
          "objectId": "d3f51d5415b5003994b6a2a967f8cda469b7cd17",
          "qualifier": "commits"
        },
        {
          "objectId": "8717b66c9ca0b173c98ef00fb4d319c9a637b395",
          "qualifier": "is-merged-with"
        },
        {
          "objectId": "d3f51d5415b5003994b6a2a967f8cda469b7cd17",
          "qualifier": "formalises"
        }
      ],
      "id": "280"
    },
    {
      "type": "pull_request",
      "attributes": [
        {
          "name": "title",
          "value": "Chore(deps): Bump certifi from 2023.7.22 to 2024.7.4",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "description",
          "value": "Bumps [certifi](https://github.com/certifi/python-certifi) from 2023.7.22 to 2024.7.4.\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/certifi/python-certifi/commit/bd8153872e9c6fc98f4023df9c2deaffea2fa463\"><code>bd81538</code></a> 2024.07.04 (<a href=\"https://redirect.github.com/certifi/python-certifi/issues/295\">#295</a>)</li>\n<li><a href=\"https://github.com/certifi/python-certifi/commit/06a2cbf21f345563dde6c28b60e29d57e9b210b3\"><code>06a2cbf</code></a> Bump peter-evans/create-pull-request from 6.0.5 to 6.1.0 (<a href=\"https://redirect.github.com/certifi/python-certifi/issues/294\">#294</a>)</li>\n<li><a href=\"https://github.com/certifi/python-certifi/commit/13bba02b72bac97c432c277158bc04b4d2a6bc23\"><code>13bba02</code></a> Bump actions/checkout from 4.1.6 to 4.1.7 (<a href=\"https://redirect.github.com/certifi/python-certifi/issues/293\">#293</a>)</li>\n<li><a href=\"https://github.com/certifi/python-certifi/commit/e8abcd0e62b334c164b95d49fcabdc9ecbca0554\"><code>e8abcd0</code></a> Bump pypa/gh-action-pypi-publish from 1.8.14 to 1.9.0 (<a href=\"https://redirect.github.com/certifi/python-certifi/issues/292\">#292</a>)</li>\n<li><a href=\"https://github.com/certifi/python-certifi/commit/124f4adf171e15cd9a91a8b6e0325ecc97be8fe1\"><code>124f4ad</code></a> 2024.06.02 (<a href=\"https://redirect.github.com/certifi/python-certifi/issues/291\">#291</a>)</li>\n<li><a href=\"https://github.com/certifi/python-certifi/commit/c2196ce5d6ee675b27755a19948480a7823e2c6a\"><code>c2196ce</code></a> --- (<a href=\"https://redirect.github.com/certifi/python-certifi/issues/290\">#290</a>)</li>\n<li><a href=\"https://github.com/certifi/python-certifi/commit/fefdeec7588ff1c05214b85a552afcad5fdb51b2\"><code>fefdeec</code></a> Bump actions/checkout from 4.1.4 to 4.1.5 (<a href=\"https://redirect.github.com/certifi/python-certifi/issues/289\">#289</a>)</li>\n<li><a href=\"https://github.com/certifi/python-certifi/commit/3c5fb1560b826a7f83f1f9750173ff766492c9cf\"><code>3c5fb15</code></a> Bump actions/download-artifact from 4.1.6 to 4.1.7 (<a href=\"https://redirect.github.com/certifi/python-certifi/issues/286\">#286</a>)</li>\n<li><a href=\"https://github.com/certifi/python-certifi/commit/4a9569a3eb58db8548536fc16c5c5c7af946a5b1\"><code>4a9569a</code></a> Bump actions/checkout from 4.1.2 to 4.1.4 (<a href=\"https://redirect.github.com/certifi/python-certifi/issues/287\">#287</a>)</li>\n<li><a href=\"https://github.com/certifi/python-certifi/commit/1fc808626a895a916b1e4c2b63abae6c5eafdbe3\"><code>1fc8086</code></a> Bump peter-evans/create-pull-request from 6.0.4 to 6.0.5 (<a href=\"https://redirect.github.com/certifi/python-certifi/issues/288\">#288</a>)</li>\n<li>Additional commits viewable in <a href=\"https://github.com/certifi/python-certifi/compare/2023.07.22...2024.07.04\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=certifi&package-manager=pip&previous-version=2023.7.22&new-version=2024.7.4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nYou can trigger a rebase of this PR by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/srbhr/Resume-Matcher/network/alerts).\n\n</details>\n\n> **Note**\n> Automatic rebases have been disabled on this pull request as it has been open for over 30 days.\n",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "state",
          "value": "open",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": "requirements.txt",
          "qualifier": "files"
        },
        {
          "objectId": "dependabot[bot]",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "requirements.txt",
          "qualifier": "aggregates"
        },
        {
          "objectId": "dependabot[bot]",
          "qualifier": "has-participant"
        },
        {
          "objectId": "5cd04c693df2c14cc5367f22dd5c61659e8f087c",
          "qualifier": "commits"
        },
        {
          "objectId": "c356f36c6d499d66832e89fe44573877845f3a46",
          "qualifier": "is-merged-with"
        },
        {
          "objectId": "5cd04c693df2c14cc5367f22dd5c61659e8f087c",
          "qualifier": "formalises"
        }
      ],
      "id": "279"
    },
    {
      "type": "pull_request",
      "attributes": [
        {
          "name": "title",
          "value": "Chore(deps): Bump scikit-learn from 1.3.0 to 1.5.0",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "description",
          "value": "Bumps [scikit-learn](https://github.com/scikit-learn/scikit-learn) from 1.3.0 to 1.5.0.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/scikit-learn/scikit-learn/releases\">scikit-learn's releases</a>.</em></p>\n<blockquote>\n<h2>Scikit-learn 1.5.0</h2>\n<p>We're happy to announce the 1.5.0 release.</p>\n<p>You can read the release highlights under <a href=\"https://scikit-learn.org/stable/auto_examples/release_highlights/plot_release_highlights_1_5_0.html\">https://scikit-learn.org/stable/auto_examples/release_highlights/plot_release_highlights_1_5_0.html</a> and the long version of the change log under <a href=\"https://scikit-learn.org/stable/whats_new/v1.5.html\">https://scikit-learn.org/stable/whats_new/v1.5.html</a></p>\n<p>This version supports Python versions 3.9 to 3.12.</p>\n<p>You can upgrade with pip as usual:</p>\n<pre><code>pip install -U scikit-learn\n</code></pre>\n<p>The conda-forge builds can be installed using:</p>\n<pre><code>conda install -c conda-forge scikit-learn\n</code></pre>\n<h2>Scikit-learn 1.4.2</h2>\n<p>We're happy to announce the 1.4.2 release.</p>\n<p>This release only includes support for numpy 2.</p>\n<p>This version supports Python versions 3.9 to 3.12.</p>\n<p>You can upgrade with pip as usual:</p>\n<pre><code>pip install -U scikit-learn\n</code></pre>\n<h2>Scikit-learn 1.4.1.post1</h2>\n<p>We're happy to announce the 1.4.1.post1 release.</p>\n<p>You can see the changelog here: <a href=\"https://scikit-learn.org/stable/whats_new/v1.4.html#version-1-4-1-post1\">https://scikit-learn.org/stable/whats_new/v1.4.html#version-1-4-1-post1</a></p>\n<p>This version supports Python versions 3.9 to 3.12.</p>\n<p>You can upgrade with pip as usual:</p>\n<pre><code>pip install -U scikit-learn\n</code></pre>\n<p>The conda-forge builds can be installed using:</p>\n<pre><code>conda install -c conda-forge scikit-learn\n</code></pre>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/scikit-learn/scikit-learn/commit/b51d0c9648241d1fd53dc9151689f62a61633a3d\"><code>b51d0c9</code></a> trigger whell builder [cd build]</li>\n<li><a href=\"https://github.com/scikit-learn/scikit-learn/commit/919ae9bf72554a180baa3d8f4537b49c730b7580\"><code>919ae9b</code></a> MAINT Reoder what's new for 1.5 (<a href=\"https://redirect.github.com/scikit-learn/scikit-learn/issues/29039\">#29039</a>)</li>\n<li><a href=\"https://github.com/scikit-learn/scikit-learn/commit/0ac28ade871ca71a89a71c834a7b47829b075829\"><code>0ac28ad</code></a> DOC Release highlights 1.5 (<a href=\"https://redirect.github.com/scikit-learn/scikit-learn/issues/29007\">#29007</a>)</li>\n<li><a href=\"https://github.com/scikit-learn/scikit-learn/commit/729b54d5af208432f788ae7945842f0cf597bd36\"><code>729b54d</code></a> test py3.12 against numpy 2 [cd build]</li>\n<li><a href=\"https://github.com/scikit-learn/scikit-learn/commit/1e50434f18275bb8727c2a2e24cb953db143d8a5\"><code>1e50434</code></a> set version</li>\n<li><a href=\"https://github.com/scikit-learn/scikit-learn/commit/ffbe4ab45bd9a113737231721fa2f55a70f3d0ab\"><code>ffbe4ab</code></a> DOC remove obsolete SVM example (<a href=\"https://redirect.github.com/scikit-learn/scikit-learn/issues/27108\">#27108</a>)</li>\n<li><a href=\"https://github.com/scikit-learn/scikit-learn/commit/4647729e5ee8c46e4fedace2d3c50c37f0a6693d\"><code>4647729</code></a> DOC Fix time complexity of MLP (<a href=\"https://redirect.github.com/scikit-learn/scikit-learn/issues/28592\">#28592</a>)</li>\n<li><a href=\"https://github.com/scikit-learn/scikit-learn/commit/9bd7047b4a6c673bcfd2911997f124e265f8ad57\"><code>9bd7047</code></a> FIX convergence criterion of MeanShift (<a href=\"https://redirect.github.com/scikit-learn/scikit-learn/issues/28951\">#28951</a>)</li>\n<li><a href=\"https://github.com/scikit-learn/scikit-learn/commit/b79420f1c2e82d814dec8026e96421751bfc9c96\"><code>b79420f</code></a> FIX add long long for int32/int64 windows compat in NumPy 2.0 (<a href=\"https://redirect.github.com/scikit-learn/scikit-learn/issues/29029\">#29029</a>)</li>\n<li><a href=\"https://github.com/scikit-learn/scikit-learn/commit/37f544db78503ed1a50da02cbb4f1a4e466fb0a7\"><code>37f544d</code></a> DOC replace pandas with Polars in examples/gaussian_process/plot_gpr_co2.py (...</li>\n<li>Additional commits viewable in <a href=\"https://github.com/scikit-learn/scikit-learn/compare/1.3.0...1.5.0\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=scikit-learn&package-manager=pip&previous-version=1.3.0&new-version=1.5.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nYou can trigger a rebase of this PR by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/srbhr/Resume-Matcher/network/alerts).\n\n</details>\n\n> **Note**\n> Automatic rebases have been disabled on this pull request as it has been open for over 30 days.\n",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "state",
          "value": "open",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": "requirements.txt",
          "qualifier": "files"
        },
        {
          "objectId": "dependabot[bot]",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "requirements.txt",
          "qualifier": "aggregates"
        },
        {
          "objectId": "dependabot[bot]",
          "qualifier": "has-participant"
        },
        {
          "objectId": "d6260e9e9b0cf5646fff1de8c18f58cead8a8dbf",
          "qualifier": "commits"
        },
        {
          "objectId": "72efa596b13054dd408083df5a6333f8dbed3fd4",
          "qualifier": "is-merged-with"
        },
        {
          "objectId": "d6260e9e9b0cf5646fff1de8c18f58cead8a8dbf",
          "qualifier": "formalises"
        }
      ],
      "id": "274"
    },
    {
      "type": "pull_request",
      "attributes": [
        {
          "name": "title",
          "value": "Chore(deps): Bump tornado from 6.3.3 to 6.4.1",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "description",
          "value": "Bumps [tornado](https://github.com/tornadoweb/tornado) from 6.3.3 to 6.4.1.\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/tornadoweb/tornado/blob/master/docs/releases.rst\">tornado's changelog</a>.</em></p>\n<blockquote>\n<h1>Release notes</h1>\n<p>.. toctree::\n:maxdepth: 2</p>\n<p>releases/v6.4.1\nreleases/v6.4.0\nreleases/v6.3.3\nreleases/v6.3.2\nreleases/v6.3.1\nreleases/v6.3.0\nreleases/v6.2.0\nreleases/v6.1.0\nreleases/v6.0.4\nreleases/v6.0.3\nreleases/v6.0.2\nreleases/v6.0.1\nreleases/v6.0.0\nreleases/v5.1.1\nreleases/v5.1.0\nreleases/v5.0.2\nreleases/v5.0.1\nreleases/v5.0.0\nreleases/v4.5.3\nreleases/v4.5.2\nreleases/v4.5.1\nreleases/v4.5.0\nreleases/v4.4.3\nreleases/v4.4.2\nreleases/v4.4.1\nreleases/v4.4.0\nreleases/v4.3.0\nreleases/v4.2.1\nreleases/v4.2.0\nreleases/v4.1.0\nreleases/v4.0.2\nreleases/v4.0.1\nreleases/v4.0.0\nreleases/v3.2.2\nreleases/v3.2.1\nreleases/v3.2.0\nreleases/v3.1.1\nreleases/v3.1.0\nreleases/v3.0.2\nreleases/v3.0.1\nreleases/v3.0.0\nreleases/v2.4.1\nreleases/v2.4.0\nreleases/v2.3.0</p>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/tornadoweb/tornado/commit/2a0e1d13b5222dca4388c0ec8a4bb74ea6fa4af2\"><code>2a0e1d1</code></a> Merge pull request <a href=\"https://redirect.github.com/tornadoweb/tornado/issues/3388\">#3388</a> from bdarnell/release-641</li>\n<li><a href=\"https://github.com/tornadoweb/tornado/commit/b7af4e8f5ee578b78e1be5ade43fdb1103659a0e\"><code>b7af4e8</code></a> Release notes and version bump for version 6.4.1</li>\n<li><a href=\"https://github.com/tornadoweb/tornado/commit/d65f6e71a77f53a1ff0a0dc55704be13f04eb572\"><code>d65f6e7</code></a> Merge pull request <a href=\"https://redirect.github.com/tornadoweb/tornado/issues/3387\">#3387</a> from bdarnell/chunked-parsing</li>\n<li><a href=\"https://github.com/tornadoweb/tornado/commit/8d721a877dd5c2bc0693d9c4d3954eb11fbd404b\"><code>8d721a8</code></a> httputil: Only strip tabs and spaces from header values</li>\n<li><a href=\"https://github.com/tornadoweb/tornado/commit/7786f09f84c9f3f2012c4cf3878417cb9f053669\"><code>7786f09</code></a> Merge pull request <a href=\"https://redirect.github.com/tornadoweb/tornado/issues/3386\">#3386</a> from bdarnell/curl-crlf</li>\n<li><a href=\"https://github.com/tornadoweb/tornado/commit/fb119c767e9c43e71ea823311b0d53f566d86b73\"><code>fb119c7</code></a> http1connection: Stricter handling of transfer-encoding</li>\n<li><a href=\"https://github.com/tornadoweb/tornado/commit/b0ffc58e02f33f6aa480f008b74495601d988ce1\"><code>b0ffc58</code></a> curl_httpclient,http1connection: Prohibit CR and LF in headers</li>\n<li><a href=\"https://github.com/tornadoweb/tornado/commit/0efa9a42b4c94ee98549d86992c68227f83efd4e\"><code>0efa9a4</code></a> Merge pull request <a href=\"https://redirect.github.com/tornadoweb/tornado/issues/3385\">#3385</a> from bdarnell/update-black</li>\n<li><a href=\"https://github.com/tornadoweb/tornado/commit/2757c6e4874968dd2f74a4d08b450da795de5b6c\"><code>2757c6e</code></a> Merge pull request <a href=\"https://redirect.github.com/tornadoweb/tornado/issues/3384\">#3384</a> from tornadoweb/dependabot/pip/requests-2.32.2</li>\n<li><a href=\"https://github.com/tornadoweb/tornado/commit/291d1b661be273b86792e965ac65f9bced8d4ebe\"><code>291d1b6</code></a> *: Update black</li>\n<li>Additional commits viewable in <a href=\"https://github.com/tornadoweb/tornado/compare/v6.3.3...v6.4.1\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=tornado&package-manager=pip&previous-version=6.3.3&new-version=6.4.1)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nYou can trigger a rebase of this PR by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/srbhr/Resume-Matcher/network/alerts).\n\n</details>\n\n> **Note**\n> Automatic rebases have been disabled on this pull request as it has been open for over 30 days.\n",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "state",
          "value": "open",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": "requirements.txt",
          "qualifier": "files"
        },
        {
          "objectId": "dependabot[bot]",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "requirements.txt",
          "qualifier": "aggregates"
        },
        {
          "objectId": "dependabot[bot]",
          "qualifier": "has-participant"
        },
        {
          "objectId": "54c134e26616ef1d7118881cacfae21bfe19ac65",
          "qualifier": "commits"
        },
        {
          "objectId": "e24112bf5024c785e85c5b0245757e38c8266188",
          "qualifier": "is-merged-with"
        },
        {
          "objectId": "54c134e26616ef1d7118881cacfae21bfe19ac65",
          "qualifier": "formalises"
        }
      ],
      "id": "268"
    },
    {
      "type": "pull_request",
      "attributes": [
        {
          "name": "title",
          "value": "Chore(deps): Bump qdrant-client from 1.8.2 to 1.9.0",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "description",
          "value": "Bumps [qdrant-client](https://github.com/qdrant/qdrant-client) from 1.8.2 to 1.9.0.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/qdrant/qdrant-client/releases\">qdrant-client's releases</a>.</em></p>\n<blockquote>\n<h2>v1.9.0</h2>\n<h1>Changelog</h1>\n<h2>Features \ud83e\ude84</h2>\n<ul>\n<li><a href=\"https://redirect.github.com/qdrant/qdrant-client/issues/571\">#571</a> add discovery and recommendations api support for sparse vectors in local mode</li>\n<li><a href=\"https://redirect.github.com/qdrant/qdrant-client/issues/594\">#594</a> restrict access to the methods on a closed instance in local mode</li>\n<li><a href=\"https://redirect.github.com/qdrant/qdrant-client/issues/591\">#591</a> add a possibility to use auth token providers</li>\n<li><a href=\"https://redirect.github.com/qdrant/qdrant-client/issues/608\">#608</a> introduce support for uint8 vectors</li>\n<li><a href=\"https://redirect.github.com/qdrant/qdrant-client/issues/603\">#603</a> allow having nan values in payload in local mode</li>\n</ul>\n<hr />\n<h2>Fixes \ud83e\ude9b</h2>\n<ul>\n<li><a href=\"https://redirect.github.com/qdrant/qdrant-client/issues/559\">#559</a> - fix update_vectors in local mode with sparse vectors</li>\n<li><a href=\"https://redirect.github.com/qdrant/qdrant-client/issues/562\">#562</a> - fix handling of wrong types in search in local mode</li>\n<li><a href=\"https://redirect.github.com/qdrant/qdrant-client/issues/560\">#560</a> - check vectors for nan values</li>\n<li><a href=\"https://redirect.github.com/qdrant/qdrant-client/issues/569\">#569</a> - fix grpc sparse vector conversion</li>\n<li><a href=\"https://redirect.github.com/qdrant/qdrant-client/issues/575\">#575</a> <a href=\"https://redirect.github.com/qdrant/qdrant-client/issues/576\">#576</a> <a href=\"https://redirect.github.com/qdrant/qdrant-client/issues/580\">#580</a> - fix datetime and date comparison</li>\n<li><a href=\"https://redirect.github.com/qdrant/qdrant-client/issues/581\">#581</a> <a href=\"https://redirect.github.com/qdrant/qdrant-client/issues/583\">#583</a> fix sparse vectors async api</li>\n<li><a href=\"https://redirect.github.com/qdrant/qdrant-client/issues/584\">#584</a> fix data-parallelism with sparse models</li>\n<li><a href=\"https://redirect.github.com/qdrant/qdrant-client/issues/587\">#587</a> fix read consistency with grpc in batch search</li>\n<li><a href=\"https://redirect.github.com/qdrant/qdrant-client/issues/588\">#588</a> fix migrate vector count</li>\n<li><a href=\"https://redirect.github.com/qdrant/qdrant-client/issues/605\">#605</a> fix grpc field schema type conversion for datetime index</li>\n</ul>\n<hr />\n<h2>Deprecations \u23f3</h2>\n<ul>\n<li><a href=\"https://redirect.github.com/qdrant/qdrant-client/issues/608\">#608</a> deprecate recreate collection method</li>\n<li><a href=\"https://redirect.github.com/qdrant/qdrant-client/issues/608\">#608</a> remove vectors count</li>\n</ul>\n<hr />\n<p>Thanks everyone who contributed to the release <a href=\"https://github.com/coszio\"><code>@\u200bcoszio</code></a> <a href=\"https://github.com/yasyf\"><code>@\u200byasyf</code></a> <a href=\"https://github.com/Apmats\"><code>@\u200bApmats</code></a> <a href=\"https://github.com/skvark\"><code>@\u200bskvark</code></a> <a href=\"https://github.com/generall\"><code>@\u200bgenerall</code></a> <a href=\"https://github.com/joein\"><code>@\u200bjoein</code></a> <a href=\"https://github.com/agourlay\"><code>@\u200bagourlay</code></a></p>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/qdrant/qdrant-client/commit/16fb1f6a94eef00b80332db66341b82eacbe05ef\"><code>16fb1f6</code></a> bump version to v1.9.0</li>\n<li><a href=\"https://github.com/qdrant/qdrant-client/commit/6b001b881904e16eb3f713bbd2b473afd9244821\"><code>6b001b8</code></a> V1.9.x (<a href=\"https://redirect.github.com/qdrant/qdrant-client/issues/608\">#608</a>)</li>\n<li><a href=\"https://github.com/qdrant/qdrant-client/commit/e0820e08ff683cc0a55cbb25d33f52c93d4abc07\"><code>e0820e0</code></a> fix: align formatters versions (<a href=\"https://redirect.github.com/qdrant/qdrant-client/issues/602\">#602</a>)</li>\n<li><a href=\"https://github.com/qdrant/qdrant-client/commit/93a2c2da2f84c51f605ce6adf0019f1e266a5cff\"><code>93a2c2d</code></a> new: convert nan and inf in local mode to none (<a href=\"https://redirect.github.com/qdrant/qdrant-client/issues/603\">#603</a>)</li>\n<li><a href=\"https://github.com/qdrant/qdrant-client/commit/1983900abba980c31521c4debd72b7f1643e2a64\"><code>1983900</code></a> docs: typo fix of extra word in quickstart</li>\n<li><a href=\"https://github.com/qdrant/qdrant-client/commit/eee34e8b6e220f596c1cc7cffe3452401f471909\"><code>eee34e8</code></a> deprecate recreate_collection (<a href=\"https://redirect.github.com/qdrant/qdrant-client/issues/601\">#601</a>)</li>\n<li><a href=\"https://github.com/qdrant/qdrant-client/commit/0ce5ca022d20701db7bb7856287cba1e282f6a37\"><code>0ce5ca0</code></a> do not use vectors_count in test and in local mode (<a href=\"https://redirect.github.com/qdrant/qdrant-client/issues/600\">#600</a>)</li>\n<li><a href=\"https://github.com/qdrant/qdrant-client/commit/a7a798c694811c10f98f519851fdce15a9d8e6c6\"><code>a7a798c</code></a> fix: fix field schema type conversion (<a href=\"https://redirect.github.com/qdrant/qdrant-client/issues/605\">#605</a>)</li>\n<li><a href=\"https://github.com/qdrant/qdrant-client/commit/bbe013182ef401e54d5f87e00935bbdb0d285869\"><code>bbe0131</code></a> Remove warning for scalar divide with inf</li>\n<li><a href=\"https://github.com/qdrant/qdrant-client/commit/ef8e772542093609a343c460c2f0db1ef2d3ae49\"><code>ef8e772</code></a> Feat: bearer token authentication support (<a href=\"https://redirect.github.com/qdrant/qdrant-client/issues/591\">#591</a>)</li>\n<li>Additional commits viewable in <a href=\"https://github.com/qdrant/qdrant-client/compare/v1.8.2...v1.9.0\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=qdrant-client&package-manager=pip&previous-version=1.8.2&new-version=1.9.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nYou can trigger a rebase of this PR by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/srbhr/Resume-Matcher/network/alerts).\n\n</details>\n\n> **Note**\n> Automatic rebases have been disabled on this pull request as it has been open for over 30 days.\n",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "state",
          "value": "open",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": "requirements.txt",
          "qualifier": "files"
        },
        {
          "objectId": "dependabot[bot]",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "requirements.txt",
          "qualifier": "aggregates"
        },
        {
          "objectId": "dependabot[bot]",
          "qualifier": "has-participant"
        },
        {
          "objectId": "696168e09a30c656c555db03937441f9adef9adf",
          "qualifier": "commits"
        },
        {
          "objectId": "6a57ec01ffa74bf661b3ae46b0207ff3a5e8276f",
          "qualifier": "is-merged-with"
        },
        {
          "objectId": "696168e09a30c656c555db03937441f9adef9adf",
          "qualifier": "formalises"
        }
      ],
      "id": "267"
    },
    {
      "type": "pull_request",
      "attributes": [
        {
          "name": "title",
          "value": "Chore(deps): Bump requests from 2.31.0 to 2.32.0",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "description",
          "value": "Bumps [requests](https://github.com/psf/requests) from 2.31.0 to 2.32.0.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/psf/requests/releases\">requests's releases</a>.</em></p>\n<blockquote>\n<h2>v2.32.0</h2>\n<h2>2.32.0 (2024-05-20)</h2>\n<h2>\ud83d\udc0d PYCON US 2024 EDITION \ud83d\udc0d</h2>\n<p><strong>Security</strong></p>\n<ul>\n<li>Fixed an issue where setting <code>verify=False</code> on the first request from a\nSession will cause subsequent requests to the <em>same origin</em> to also ignore\ncert verification, regardless of the value of <code>verify</code>.\n(<a href=\"https://github.com/psf/requests/security/advisories/GHSA-9wx4-h78v-vm56\">https://github.com/psf/requests/security/advisories/GHSA-9wx4-h78v-vm56</a>)</li>\n</ul>\n<p><strong>Improvements</strong></p>\n<ul>\n<li><code>verify=True</code> now reuses a global SSLContext which should improve\nrequest time variance between first and subsequent requests. It should\nalso minimize certificate load time on Windows systems when using a Python\nversion built with OpenSSL 3.x. (<a href=\"https://redirect.github.com/psf/requests/issues/6667\">#6667</a>)</li>\n<li>Requests now supports optional use of character detection\n(<code>chardet</code> or <code>charset_normalizer</code>) when repackaged or vendored.\nThis enables <code>pip</code> and other projects to minimize their vendoring\nsurface area. The <code>Response.text()</code> and <code>apparent_encoding</code> APIs\nwill default to <code>utf-8</code> if neither library is present. (<a href=\"https://redirect.github.com/psf/requests/issues/6702\">#6702</a>)</li>\n</ul>\n<p><strong>Bugfixes</strong></p>\n<ul>\n<li>Fixed bug in length detection where emoji length was incorrectly\ncalculated in the request content-length. (<a href=\"https://redirect.github.com/psf/requests/issues/6589\">#6589</a>)</li>\n<li>Fixed deserialization bug in JSONDecodeError. (<a href=\"https://redirect.github.com/psf/requests/issues/6629\">#6629</a>)</li>\n<li>Fixed bug where an extra leading <code>/</code> (path separator) could lead\nurllib3 to unnecessarily reparse the request URI. (<a href=\"https://redirect.github.com/psf/requests/issues/6644\">#6644</a>)</li>\n</ul>\n<p><strong>Deprecations</strong></p>\n<ul>\n<li>Requests has officially added support for CPython 3.12 (<a href=\"https://redirect.github.com/psf/requests/issues/6503\">#6503</a>)</li>\n<li>Requests has officially added support for PyPy 3.9 and 3.10 (<a href=\"https://redirect.github.com/psf/requests/issues/6641\">#6641</a>)</li>\n<li>Requests has officially dropped support for CPython 3.7 (<a href=\"https://redirect.github.com/psf/requests/issues/6642\">#6642</a>)</li>\n<li>Requests has officially dropped support for PyPy 3.7 and 3.8 (<a href=\"https://redirect.github.com/psf/requests/issues/6641\">#6641</a>)</li>\n</ul>\n<p><strong>Documentation</strong></p>\n<ul>\n<li>Various typo fixes and doc improvements.</li>\n</ul>\n<p><strong>Packaging</strong></p>\n<ul>\n<li>Requests has started adopting some modern packaging practices.\nThe source files for the projects (formerly <code>requests</code>) is now located\nin <code>src/requests</code> in the Requests sdist. (<a href=\"https://redirect.github.com/psf/requests/issues/6506\">#6506</a>)</li>\n<li>Starting in Requests 2.33.0, Requests will migrate to a PEP 517 build system\nusing <code>hatchling</code>. This should not impact the average user, but extremely old\nversions of packaging utilities may have issues with the new packaging format.</li>\n</ul>\n<h2>New Contributors</h2>\n<ul>\n<li><a href=\"https://github.com/matthewarmand\"><code>@\u200bmatthewarmand</code></a> made their first contribution in <a href=\"https://redirect.github.com/psf/requests/pull/6258\">psf/requests#6258</a></li>\n<li><a href=\"https://github.com/cpzt\"><code>@\u200bcpzt</code></a> made their first contribution in <a href=\"https://redirect.github.com/psf/requests/pull/6456\">psf/requests#6456</a></li>\n</ul>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/psf/requests/blob/main/HISTORY.md\">requests's changelog</a>.</em></p>\n<blockquote>\n<h2>2.32.0 (2024-05-20)</h2>\n<p><strong>Security</strong></p>\n<ul>\n<li>Fixed an issue where setting <code>verify=False</code> on the first request from a\nSession will cause subsequent requests to the <em>same origin</em> to also ignore\ncert verification, regardless of the value of <code>verify</code>.\n(<a href=\"https://github.com/psf/requests/security/advisories/GHSA-9wx4-h78v-vm56\">https://github.com/psf/requests/security/advisories/GHSA-9wx4-h78v-vm56</a>)</li>\n</ul>\n<p><strong>Improvements</strong></p>\n<ul>\n<li><code>verify=True</code> now reuses a global SSLContext which should improve\nrequest time variance between first and subsequent requests. It should\nalso minimize certificate load time on Windows systems when using a Python\nversion built with OpenSSL 3.x. (<a href=\"https://redirect.github.com/psf/requests/issues/6667\">#6667</a>)</li>\n<li>Requests now supports optional use of character detection\n(<code>chardet</code> or <code>charset_normalizer</code>) when repackaged or vendored.\nThis enables <code>pip</code> and other projects to minimize their vendoring\nsurface area. The <code>Response.text()</code> and <code>apparent_encoding</code> APIs\nwill default to <code>utf-8</code> if neither library is present. (<a href=\"https://redirect.github.com/psf/requests/issues/6702\">#6702</a>)</li>\n</ul>\n<p><strong>Bugfixes</strong></p>\n<ul>\n<li>Fixed bug in length detection where emoji length was incorrectly\ncalculated in the request content-length. (<a href=\"https://redirect.github.com/psf/requests/issues/6589\">#6589</a>)</li>\n<li>Fixed deserialization bug in JSONDecodeError. (<a href=\"https://redirect.github.com/psf/requests/issues/6629\">#6629</a>)</li>\n<li>Fixed bug where an extra leading <code>/</code> (path separator) could lead\nurllib3 to unnecessarily reparse the request URI. (<a href=\"https://redirect.github.com/psf/requests/issues/6644\">#6644</a>)</li>\n</ul>\n<p><strong>Deprecations</strong></p>\n<ul>\n<li>Requests has officially added support for CPython 3.12 (<a href=\"https://redirect.github.com/psf/requests/issues/6503\">#6503</a>)</li>\n<li>Requests has officially added support for PyPy 3.9 and 3.10 (<a href=\"https://redirect.github.com/psf/requests/issues/6641\">#6641</a>)</li>\n<li>Requests has officially dropped support for CPython 3.7 (<a href=\"https://redirect.github.com/psf/requests/issues/6642\">#6642</a>)</li>\n<li>Requests has officially dropped support for PyPy 3.7 and 3.8 (<a href=\"https://redirect.github.com/psf/requests/issues/6641\">#6641</a>)</li>\n</ul>\n<p><strong>Documentation</strong></p>\n<ul>\n<li>Various typo fixes and doc improvements.</li>\n</ul>\n<p><strong>Packaging</strong></p>\n<ul>\n<li>Requests has started adopting some modern packaging practices.\nThe source files for the projects (formerly <code>requests</code>) is now located\nin <code>src/requests</code> in the Requests sdist. (<a href=\"https://redirect.github.com/psf/requests/issues/6506\">#6506</a>)</li>\n<li>Starting in Requests 2.33.0, Requests will migrate to a PEP 517 build system\nusing <code>hatchling</code>. This should not impact the average user, but extremely old\nversions of packaging utilities may have issues with the new packaging format.</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/psf/requests/commit/d6ebc4a2f1f68b7e355fb7e4dd5ffc0845547f9f\"><code>d6ebc4a</code></a> v2.32.0</li>\n<li><a href=\"https://github.com/psf/requests/commit/9a40d1277807f0a4f26c9a37eea8ec90faa8aadc\"><code>9a40d12</code></a> Avoid reloading root certificates to improve concurrent performance (<a href=\"https://redirect.github.com/psf/requests/issues/6667\">#6667</a>)</li>\n<li><a href=\"https://github.com/psf/requests/commit/0c030f78d24f29a459dbf39b28b4cc765e2153d7\"><code>0c030f7</code></a> Merge pull request <a href=\"https://redirect.github.com/psf/requests/issues/6702\">#6702</a> from nateprewitt/no_char_detection</li>\n<li><a href=\"https://github.com/psf/requests/commit/555b870eb19d497ddb67042645420083ec8efb02\"><code>555b870</code></a> Allow character detection dependencies to be optional in post-packaging steps</li>\n<li><a href=\"https://github.com/psf/requests/commit/d6dded3f00afcf56a7e866cb0732799045301eb0\"><code>d6dded3</code></a> Merge pull request <a href=\"https://redirect.github.com/psf/requests/issues/6700\">#6700</a> from franekmagiera/update-redirect-to-invalid-uri-test</li>\n<li><a href=\"https://github.com/psf/requests/commit/bf24b7d8d17da34be720c19e5978b2d3bf94a53b\"><code>bf24b7d</code></a> Use an invalid URI that will not cause httpbin to throw 500</li>\n<li><a href=\"https://github.com/psf/requests/commit/2d5f54779ad174035c5437b3b3c1146b0eaf60fe\"><code>2d5f547</code></a> Pin 3.8 and 3.9 runners back to macos-13 (<a href=\"https://redirect.github.com/psf/requests/issues/6688\">#6688</a>)</li>\n<li><a href=\"https://github.com/psf/requests/commit/f1bb07d39b74d6444e333879f8b8a3d9dd4d2311\"><code>f1bb07d</code></a> Merge pull request <a href=\"https://redirect.github.com/psf/requests/issues/6687\">#6687</a> from psf/dependabot/github_actions/github/codeql-act...</li>\n<li><a href=\"https://github.com/psf/requests/commit/60047ade64b0b882cbc94e047198818ab580911e\"><code>60047ad</code></a> Bump github/codeql-action from 3.24.0 to 3.25.0</li>\n<li><a href=\"https://github.com/psf/requests/commit/31ebb8102c00f8cf8b396a6356743cca4362e07b\"><code>31ebb81</code></a> Merge pull request <a href=\"https://redirect.github.com/psf/requests/issues/6682\">#6682</a> from frenzymadness/pytest8</li>\n<li>Additional commits viewable in <a href=\"https://github.com/psf/requests/compare/v2.31.0...v2.32.0\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=requests&package-manager=pip&previous-version=2.31.0&new-version=2.32.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nYou can trigger a rebase of this PR by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/srbhr/Resume-Matcher/network/alerts).\n\n</details>\n\n> **Note**\n> Automatic rebases have been disabled on this pull request as it has been open for over 30 days.\n",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "state",
          "value": "open",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": "requirements.txt",
          "qualifier": "files"
        },
        {
          "objectId": "dependabot[bot]",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "requirements.txt",
          "qualifier": "aggregates"
        },
        {
          "objectId": "dependabot[bot]",
          "qualifier": "has-participant"
        },
        {
          "objectId": "eee24bb97da2f5c30ff4be22b03fb3162a857fc0",
          "qualifier": "commits"
        },
        {
          "objectId": "baa9e027283db35672895d7629810612a0b54362",
          "qualifier": "is-merged-with"
        },
        {
          "objectId": "eee24bb97da2f5c30ff4be22b03fb3162a857fc0",
          "qualifier": "formalises"
        }
      ],
      "id": "265"
    },
    {
      "type": "pull_request",
      "attributes": [
        {
          "name": "title",
          "value": "Updated version",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "description",
          "value": "## Pull Request Title\r\n<!-- Provide a concise and descriptive title for the pull request -->\r\nUpdated and removed redundant codes\r\n## Related Issue\r\n<!-- If this pull request is related to an issue, please link it here using the \"#\" symbol followed by the issue number (e.g., #123) -->\r\n\r\n## Description\r\n<!-- Describe the changes made in this pull request. What problem does it solve or what feature does it add/modify? -->\r\n\r\n## Type\r\n<!-- Check the relevant options by putting an \"x\" in the brackets -->\r\n\r\n- [ ] Bug Fix\r\n- [x] Feature Enhancement\r\n- [x] Documentation Update\r\n- [x] Code Refactoring\r\n- [ ] Other (please specify): \r\n\r\n## Proposed Changes\r\n<!-- List the specific changes made in this pull request -->\r\n\r\n- \r\n- \r\n- \r\n\r\n## Screenshots / Code Snippets (if applicable)\r\n<!-- Include any relevant screenshots or code snippets that help visualize the changes made -->\r\n\r\n## How to Test\r\n<!-- Provide step-by-step instructions or a checklist for testing the changes in this pull request -->\r\n\r\n1. \r\n2. \r\n3. \r\n\r\n## Checklist\r\n<!-- Put an \"x\" in the brackets for the items that apply to this pull request -->\r\n\r\n- [x] The code compiles successfully without any errors or warnings\r\n- [x] The changes have been tested and verified\r\n- [x] The documentation has been updated (if applicable)\r\n- [ ] The changes follow the project's coding guidelines and best practices\r\n- [ ] The commit messages are descriptive and follow the project's guidelines\r\n- [ ] All tests (if applicable) pass successfully\r\n- [ ] This pull request has been linked to the related issue (if applicable)\r\n\r\n## Additional Information\r\n<!-- Add any other information about the pull request that you think might be helpful -->\r\n\r\n",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "state",
          "value": "open",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": "Data/Processed/JobDescription/JobDescription-job_desc_front_end_engineer.pdf9e508eff-a083-4e2d-8b1e-577cbc8f50fc.json",
          "qualifier": "files"
        },
        {
          "objectId": "Data/Processed/JobDescription/JobDescription-job_desc_full_stack_engineer.pdfcccf72e0-5f20-4aa8-8679-d91b720b7247.json",
          "qualifier": "files"
        },
        {
          "objectId": "Data/Processed/JobDescription/JobDescription-job_desc_java_developer.pdf1fb6435c-531a-4f04-84c2-c4e73e1f1a3f.json",
          "qualifier": "files"
        },
        {
          "objectId": "Data/Processed/JobDescription/JobDescription-job_desc_product_manager.pdf0b613898-1183-49c5-ad07-e03bd9af72e5.json",
          "qualifier": "files"
        },
        {
          "objectId": "Data/Processed/Resumes/Resume-alfred_pennyworth_pm.pdfb36fac00-1d60-49ba-a9e4-33477c928e98.json",
          "qualifier": "files"
        },
        {
          "objectId": "Data/Processed/Resumes/Resume-barry_allen_fe.pdfbef9d9b1-fa14-4aa0-8111-6033cceacb5a.json",
          "qualifier": "files"
        },
        {
          "objectId": "Data/Processed/Resumes/Resume-bruce_wayne_fullstack.pdf04c228e3-04a4-4970-a149-a3cffc92aee8.json",
          "qualifier": "files"
        },
        {
          "objectId": "Data/Processed/Resumes/Resume-harvey_dent_mle.pdf5dde9183-5af4-4107-91e1-7b2d66fec490.json",
          "qualifier": "files"
        },
        {
          "objectId": "Data/Processed/Resumes/Resume-john_doe.pdf817fb796-14b9-4819-a224-7eed66b3ce04.json",
          "qualifier": "files"
        },
        {
          "objectId": "resume_matcher/__init__.py",
          "qualifier": "files"
        },
        {
          "objectId": "resume_matcher/dataextractor/DataExtractor.py",
          "qualifier": "files"
        },
        {
          "objectId": "resume_matcher/dataextractor/KeyTermExtractor.py",
          "qualifier": "files"
        },
        {
          "objectId": "resume_matcher/dataextractor/TextCleaner.py",
          "qualifier": "files"
        },
        {
          "objectId": "resume_matcher/dataextractor/__init__.py",
          "qualifier": "files"
        },
        {
          "objectId": "resume_matcher/main.py",
          "qualifier": "files"
        },
        {
          "objectId": "resume_matcher/run_first.py",
          "qualifier": "files"
        },
        {
          "objectId": "resume_matcher/scripts/__init__.py",
          "qualifier": "files"
        },
        {
          "objectId": "resume_matcher/scripts/get_score.py",
          "qualifier": "files"
        },
        {
          "objectId": "resume_matcher/scripts/logger.py",
          "qualifier": "files"
        },
        {
          "objectId": "resume_matcher/scripts/parser.py",
          "qualifier": "files"
        },
        {
          "objectId": "resume_matcher/scripts/processor.py",
          "qualifier": "files"
        },
        {
          "objectId": "resume_matcher/scripts/utils.py",
          "qualifier": "files"
        },
        {
          "objectId": "scripts/similarity/get_similarity_score.py",
          "qualifier": "files"
        },
        {
          "objectId": "Subramanyam Challa",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "Data/Processed/JobDescription/JobDescription-job_desc_front_end_engineer.pdf9e508eff-a083-4e2d-8b1e-577cbc8f50fc.json",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Processed/JobDescription/JobDescription-job_desc_full_stack_engineer.pdfcccf72e0-5f20-4aa8-8679-d91b720b7247.json",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Processed/JobDescription/JobDescription-job_desc_java_developer.pdf1fb6435c-531a-4f04-84c2-c4e73e1f1a3f.json",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Processed/JobDescription/JobDescription-job_desc_product_manager.pdf0b613898-1183-49c5-ad07-e03bd9af72e5.json",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Processed/Resumes/Resume-alfred_pennyworth_pm.pdfb36fac00-1d60-49ba-a9e4-33477c928e98.json",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Processed/Resumes/Resume-barry_allen_fe.pdfbef9d9b1-fa14-4aa0-8111-6033cceacb5a.json",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Processed/Resumes/Resume-bruce_wayne_fullstack.pdf04c228e3-04a4-4970-a149-a3cffc92aee8.json",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Processed/Resumes/Resume-harvey_dent_mle.pdf5dde9183-5af4-4107-91e1-7b2d66fec490.json",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Processed/Resumes/Resume-john_doe.pdf817fb796-14b9-4819-a224-7eed66b3ce04.json",
          "qualifier": "aggregates"
        },
        {
          "objectId": "resume_matcher/__init__.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "resume_matcher/dataextractor/DataExtractor.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "resume_matcher/dataextractor/KeyTermExtractor.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "resume_matcher/dataextractor/TextCleaner.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "resume_matcher/dataextractor/__init__.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "resume_matcher/main.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "resume_matcher/run_first.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "resume_matcher/scripts/__init__.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "resume_matcher/scripts/get_score.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "resume_matcher/scripts/logger.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "resume_matcher/scripts/parser.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "resume_matcher/scripts/processor.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "resume_matcher/scripts/utils.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "scripts/similarity/get_similarity_score.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Subramanyam Challa",
          "qualifier": "has-participant"
        },
        {
          "objectId": "58eb00c082424cf82eedade9098cd153f9aa7413",
          "qualifier": "commits"
        },
        {
          "objectId": "dd43cf007c34ad2492132528bc18b41e39d26b61",
          "qualifier": "commits"
        },
        {
          "objectId": "13f830fb30a7f14fe53aa4d6b8480a361de01a71",
          "qualifier": "commits"
        },
        {
          "objectId": "82e544004b71085327baf2723d70dbaec415246d",
          "qualifier": "commits"
        },
        {
          "objectId": "66c5242fb027a8f4f9d6e5b13d04a2489ccbb980",
          "qualifier": "commits"
        },
        {
          "objectId": "9482c40ae142a2000e4d84d5f98e5e1a0e711b45",
          "qualifier": "commits"
        },
        {
          "objectId": "488e3fc52909b24b1b5fc1c1bad9820cc0e1cf6f",
          "qualifier": "commits"
        },
        {
          "objectId": "2e0af6a28219298fd81a959763d40fa2237d2c15",
          "qualifier": "commits"
        },
        {
          "objectId": "3bd2b60dbe1269daf45b44cc434a13be609fc50e",
          "qualifier": "commits"
        },
        {
          "objectId": "0b39f8c616f8cfb149572a3f15e470b313415271",
          "qualifier": "is-merged-with"
        },
        {
          "objectId": "58eb00c082424cf82eedade9098cd153f9aa7413",
          "qualifier": "formalises"
        },
        {
          "objectId": "dd43cf007c34ad2492132528bc18b41e39d26b61",
          "qualifier": "formalises"
        },
        {
          "objectId": "13f830fb30a7f14fe53aa4d6b8480a361de01a71",
          "qualifier": "formalises"
        },
        {
          "objectId": "82e544004b71085327baf2723d70dbaec415246d",
          "qualifier": "formalises"
        },
        {
          "objectId": "66c5242fb027a8f4f9d6e5b13d04a2489ccbb980",
          "qualifier": "formalises"
        },
        {
          "objectId": "9482c40ae142a2000e4d84d5f98e5e1a0e711b45",
          "qualifier": "formalises"
        },
        {
          "objectId": "488e3fc52909b24b1b5fc1c1bad9820cc0e1cf6f",
          "qualifier": "formalises"
        },
        {
          "objectId": "2e0af6a28219298fd81a959763d40fa2237d2c15",
          "qualifier": "formalises"
        },
        {
          "objectId": "3bd2b60dbe1269daf45b44cc434a13be609fc50e",
          "qualifier": "formalises"
        }
      ],
      "id": "264"
    },
    {
      "type": "pull_request",
      "attributes": [
        {
          "name": "title",
          "value": "removed cohere dependency , api codes . ",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "description",
          "value": "## Pull Request Title\r\n<!-- Provide a concise and descriptive title for the pull request -->\r\nRemoved cohere dependency , added a sample colab script . \r\n## Related Issue\r\n<!-- If this pull request is related to an issue, please link it here using the \"#\" symbol followed by the issue number (e.g., #123) -->\r\n#257 \r\n## Description\r\n<!-- Describe the changes made in this pull request. What problem does it solve or what feature does it add/modify? -->\r\n\r\n## Type\r\n<!-- Check the relevant options by putting an \"x\" in the brackets -->\r\n\r\n- [x] Bug Fix\r\n- [x] Feature Enhancement\r\n- [x] Documentation Update\r\n- [x] Code Refactoring\r\n- [ ] Other (please specify): \r\n\r\n## Proposed Changes\r\n<!-- List the specific changes made in this pull request -->\r\n\r\n- \r\n- \r\n- \r\n\r\n## Screenshots / Code Snippets (if applicable)\r\n<!-- Include any relevant screenshots or code snippets that help visualize the changes made -->\r\n\r\n## How to Test\r\n<!-- Provide step-by-step instructions or a checklist for testing the changes in this pull request -->\r\n\r\n1. \r\n2. \r\n3. \r\n\r\n## Checklist\r\n<!-- Put an \"x\" in the brackets for the items that apply to this pull request -->\r\n\r\n- [x] The code compiles successfully without any errors or warnings\r\n- [x] The changes have been tested and verified\r\n- [x] The documentation has been updated (if applicable)\r\n- [x] The changes follow the project's coding guidelines and best practices\r\n- [x] The commit messages are descriptive and follow the project's guidelines\r\n- [x] All tests (if applicable) pass successfully\r\n- [x] This pull request has been linked to the related issue (if applicable)\r\n\r\n## Additional Information\r\n<!-- Add any other information about the pull request that you think might be helpful -->\r\n\r\n",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "state",
          "value": "open",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": "CONTRIBUTING.md",
          "qualifier": "files"
        },
        {
          "objectId": "README.md",
          "qualifier": "files"
        },
        {
          "objectId": "requirements.txt",
          "qualifier": "files"
        },
        {
          "objectId": "scripts/similarity/get_score.ipynb",
          "qualifier": "files"
        },
        {
          "objectId": "Subramanyam Challa",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "CONTRIBUTING.md",
          "qualifier": "aggregates"
        },
        {
          "objectId": "README.md",
          "qualifier": "aggregates"
        },
        {
          "objectId": "requirements.txt",
          "qualifier": "aggregates"
        },
        {
          "objectId": "scripts/similarity/get_score.ipynb",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Subramanyam Challa",
          "qualifier": "has-participant"
        },
        {
          "objectId": "3c59fd55d404a1d0ede195493b4d7f9dcca0ebc4",
          "qualifier": "commits"
        },
        {
          "objectId": "a1cc1706ffab7d2527a49d4061b20ae792ba9cc3",
          "qualifier": "is-merged-with"
        },
        {
          "objectId": "3c59fd55d404a1d0ede195493b4d7f9dcca0ebc4",
          "qualifier": "formalises"
        }
      ],
      "id": "261"
    },
    {
      "type": "pull_request",
      "attributes": [
        {
          "name": "title",
          "value": "Chore(deps): Bump jinja2 from 3.1.3 to 3.1.4",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "description",
          "value": "Bumps [jinja2](https://github.com/pallets/jinja) from 3.1.3 to 3.1.4.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/pallets/jinja/releases\">jinja2's releases</a>.</em></p>\n<blockquote>\n<h2>3.1.4</h2>\n<p>This is the Jinja 3.1.4 security release, which fixes security issues and bugs but does not otherwise change behavior and should not result in breaking changes.</p>\n<p>PyPI: <a href=\"https://pypi.org/project/Jinja2/3.1.4/\">https://pypi.org/project/Jinja2/3.1.4/</a>\nChanges: <a href=\"https://jinja.palletsprojects.com/en/3.1.x/changes/#version-3-1-4\">https://jinja.palletsprojects.com/en/3.1.x/changes/#version-3-1-4</a></p>\n<ul>\n<li>The <code>xmlattr</code> filter does not allow keys with <code>/</code> solidus, <code>&gt;</code> greater-than sign, or <code>=</code> equals sign, in addition to disallowing spaces. Regardless of any validation done by Jinja, user input should never be used as keys to this filter, or must be separately validated first. GHSA-h75v-3vvj-5mfj</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/pallets/jinja/blob/main/CHANGES.rst\">jinja2's changelog</a>.</em></p>\n<blockquote>\n<h2>Version 3.1.4</h2>\n<p>Released 2024-05-05</p>\n<ul>\n<li>The <code>xmlattr</code> filter does not allow keys with <code>/</code> solidus, <code>&gt;</code>\ngreater-than sign, or <code>=</code> equals sign, in addition to disallowing spaces.\nRegardless of any validation done by Jinja, user input should never be used\nas keys to this filter, or must be separately validated first.\n:ghsa:<code>h75v-3vvj-5mfj</code></li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/pallets/jinja/commit/dd4a8b5466d8790540c181590b14db4d4d889d57\"><code>dd4a8b5</code></a> release version 3.1.4</li>\n<li><a href=\"https://github.com/pallets/jinja/commit/0668239dc6b44ef38e7a6c9f91f312fd4ca581cb\"><code>0668239</code></a> Merge pull request from GHSA-h75v-3vvj-5mfj</li>\n<li><a href=\"https://github.com/pallets/jinja/commit/d655030770081e2dfe46f90e27620472a502289d\"><code>d655030</code></a> disallow invalid characters in keys to xmlattr filter</li>\n<li><a href=\"https://github.com/pallets/jinja/commit/a7863ba9d3521f1450f821119c50d19d7ecea329\"><code>a7863ba</code></a> add ghsa links</li>\n<li><a href=\"https://github.com/pallets/jinja/commit/b5c98e78c2ee7d2bf0aa06d29ed9bf7082de9cf4\"><code>b5c98e7</code></a> start version 3.1.4</li>\n<li><a href=\"https://github.com/pallets/jinja/commit/da3a9f0b804199845fcb76f2e08748bdaeba93ee\"><code>da3a9f0</code></a> update project files (<a href=\"https://redirect.github.com/pallets/jinja/issues/1968\">#1968</a>)</li>\n<li><a href=\"https://github.com/pallets/jinja/commit/0ee5eb41d1a2d7d9a05a02dc26dd70e63aaaeeb1\"><code>0ee5eb4</code></a> satisfy formatter, linter, and strict mypy</li>\n<li><a href=\"https://github.com/pallets/jinja/commit/20477c63575175196bfc8103f223cc9f5642595d\"><code>20477c6</code></a> update project files (<a href=\"https://redirect.github.com/pallets/jinja/issues/5457\">#5457</a>)</li>\n<li><a href=\"https://github.com/pallets/jinja/commit/e491223739dedbb1f4fc6a71340c1484e149d947\"><code>e491223</code></a> update pyyaml dev dependency</li>\n<li><a href=\"https://github.com/pallets/jinja/commit/36f98854c721f98ba103f97f65a8a098da5af0d7\"><code>36f9885</code></a> fix pr link</li>\n<li>Additional commits viewable in <a href=\"https://github.com/pallets/jinja/compare/3.1.3...3.1.4\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=jinja2&package-manager=pip&previous-version=3.1.3&new-version=3.1.4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nYou can trigger a rebase of this PR by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/srbhr/Resume-Matcher/network/alerts).\n\n</details>\n\n> **Note**\n> Automatic rebases have been disabled on this pull request as it has been open for over 30 days.\n",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "state",
          "value": "open",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": "requirements.txt",
          "qualifier": "files"
        },
        {
          "objectId": "dependabot[bot]",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "requirements.txt",
          "qualifier": "aggregates"
        },
        {
          "objectId": "dependabot[bot]",
          "qualifier": "has-participant"
        },
        {
          "objectId": "d9c4ad5103ab36d0a16886a88fefc7b73ed8369b",
          "qualifier": "commits"
        },
        {
          "objectId": "d2e6d16936b263c8b87d25f402424eb44c3e546b",
          "qualifier": "is-merged-with"
        },
        {
          "objectId": "d9c4ad5103ab36d0a16886a88fefc7b73ed8369b",
          "qualifier": "formalises"
        }
      ],
      "id": "258"
    },
    {
      "type": "pull_request",
      "attributes": [
        {
          "name": "title",
          "value": "Fix the alignment of the header image",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "description",
          "value": "None",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "state",
          "value": "open",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": "Assets/img/Resume_Matcher_GitHub_Banner.png",
          "qualifier": "files"
        },
        {
          "objectId": "README.md",
          "qualifier": "files"
        },
        {
          "objectId": "Saurabh Rai",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "Assets/img/Resume_Matcher_GitHub_Banner.png",
          "qualifier": "aggregates"
        },
        {
          "objectId": "README.md",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Saurabh Rai",
          "qualifier": "has-participant"
        },
        {
          "objectId": "706ca0935dabfb3bd0ac6af83a382d6b46ca3f8f",
          "qualifier": "commits"
        },
        {
          "objectId": "00342431a43a97a53722a1392c722ed5678f3d8a",
          "qualifier": "is-merged-with"
        },
        {
          "objectId": "706ca0935dabfb3bd0ac6af83a382d6b46ca3f8f",
          "qualifier": "formalises"
        }
      ],
      "id": "256"
    },
    {
      "type": "pull_request",
      "attributes": [
        {
          "name": "title",
          "value": "Minimal update to the readme",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "description",
          "value": "None",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "state",
          "value": "open",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": "Assets/img/Resume_Matcher_GitHub_Banner.jpg",
          "qualifier": "files"
        },
        {
          "objectId": "CODE_OF_CONDUCT.md",
          "qualifier": "files"
        },
        {
          "objectId": "README.md",
          "qualifier": "files"
        },
        {
          "objectId": "Saurabh Rai",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "Assets/img/Resume_Matcher_GitHub_Banner.jpg",
          "qualifier": "aggregates"
        },
        {
          "objectId": "CODE_OF_CONDUCT.md",
          "qualifier": "aggregates"
        },
        {
          "objectId": "README.md",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Saurabh Rai",
          "qualifier": "has-participant"
        },
        {
          "objectId": "75d1b56c7dd7856961c990d582cb7f126f851fbb",
          "qualifier": "commits"
        },
        {
          "objectId": "3a58ca1edcd990881f8773e93df26975a4c1ccc5",
          "qualifier": "is-merged-with"
        },
        {
          "objectId": "75d1b56c7dd7856961c990d582cb7f126f851fbb",
          "qualifier": "formalises"
        }
      ],
      "id": "255"
    },
    {
      "type": "user",
      "attributes": [
        {
          "name": "username",
          "value": "AJeschor",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "rank",
          "value": "NONE",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "is-bot",
          "value": "False",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": "AJeschor",
          "qualifier": "name"
        }
      ],
      "id": "AJeschor"
    },
    {
      "type": "user",
      "attributes": [
        {
          "name": "username",
          "value": "Devasy23",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "rank",
          "value": "NONE",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "is-bot",
          "value": "False",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "rank",
          "value": "CONTRIBUTOR",
          "time": "2025-05-31T11:47:43Z"
        }
      ],
      "relationships": [
        {
          "objectId": "Devasy Patel",
          "qualifier": "name"
        }
      ],
      "id": "Devasy Patel"
    },
    {
      "type": "user",
      "attributes": [
        {
          "name": "username",
          "value": "Sayvai",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "rank",
          "value": "NONE",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "is-bot",
          "value": "False",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "rank",
          "value": "CONTRIBUTOR",
          "time": "2025-05-04T08:23:02Z"
        }
      ],
      "relationships": [
        {
          "objectId": "Sayvai",
          "qualifier": "name"
        }
      ],
      "id": "Sayvai"
    },
    {
      "type": "user",
      "attributes": [
        {
          "name": "username",
          "value": "imhalcyon",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "rank",
          "value": "NONE",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "is-bot",
          "value": "False",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "rank",
          "value": "CONTRIBUTOR",
          "time": "2025-05-10T11:38:23Z"
        }
      ],
      "relationships": [
        {
          "objectId": "Abhishek Mathur",
          "qualifier": "name"
        }
      ],
      "id": "Abhishek Mathur"
    },
    {
      "type": "user",
      "attributes": [
        {
          "name": "username",
          "value": "katherineceline",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "rank",
          "value": "NONE",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "is-bot",
          "value": "False",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": "Katherine Ambrocio",
          "qualifier": "name"
        }
      ],
      "id": "Katherine Ambrocio"
    },
    {
      "type": "user",
      "attributes": [
        {
          "name": "username",
          "value": "bgelfius",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "rank",
          "value": "NONE",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "is-bot",
          "value": "False",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": "Bryan Gelfius",
          "qualifier": "name"
        }
      ],
      "id": "Bryan Gelfius"
    },
    {
      "type": "user",
      "attributes": [
        {
          "name": "username",
          "value": "gazo123",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "rank",
          "value": "NONE",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "is-bot",
          "value": "False",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": "Pushan Karmakar",
          "qualifier": "name"
        }
      ],
      "id": "Pushan Karmakar"
    },
    {
      "type": "user",
      "attributes": [
        {
          "name": "username",
          "value": "BAndresen",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "rank",
          "value": "CONTRIBUTOR",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "is-bot",
          "value": "False",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "rank",
          "value": "NONE",
          "time": "2025-05-24T05:53:17Z"
        }
      ],
      "relationships": [
        {
          "objectId": "Brendan Andresen",
          "qualifier": "name"
        }
      ],
      "id": "Brendan Andresen"
    },
    {
      "type": "pull_request",
      "attributes": [
        {
          "name": "title",
          "value": "added cohere and qdrant-client to requirements.txt (#244)",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "description",
          "value": "## Pull Request Title\r\nAdded the cohere and qdrant-client libraries to the requirements.txt\r\n\r\n## Related Issue\r\n(#244)\r\n\r\n## Description\r\nFix missing module error when installing\r\n\r\n## Type\r\n<!-- Check the relevant options by putting an \"x\" in the brackets -->\r\n\r\n- [X ] Bug Fix\r\n- [ ] Feature Enhancement\r\n- [ ] Documentation Update\r\n- [ ] Code Refactoring\r\n- [ ] Other (please specify): \r\n\r\n## Proposed Changes\r\n<!-- List the specific changes made in this pull request -->\r\nadded: \r\nqdrant-client==1.8.2\r\ncohere==5.3.2\r\n- \r\n- \r\n- \r\n\r\n## Screenshots / Code Snippets (if applicable)\r\n<!-- Include any relevant screenshots or code snippets that help visualize the changes made -->\r\n\r\n## How to Test\r\n<!-- Provide step-by-step instructions or a checklist for testing the changes in this pull request -->\r\n\r\n1.  cloned fresh github repo\r\n2.  added missing modules to requirements.txt and followed install instructions \r\n3.  didn't get any errors when running streamlit command \r\n\r\n## Checklist\r\n<!-- Put an \"x\" in the brackets for the items that apply to this pull request -->\r\n\r\n- [x] The code compiles successfully without any errors or warnings\r\n- [ ] The changes have been tested and verified\r\n- [ ] The documentation has been updated (if applicable)\r\n- [ ] The changes follow the project's coding guidelines and best practices\r\n- [x] The commit messages are descriptive and follow the project's guidelines\r\n- [ ] All tests (if applicable) pass successfully\r\n- [x] This pull request has been linked to the related issue (if applicable)\r\n\r\n## Additional Information\r\n<!-- Add any other information about the pull request that you think might be helpful -->\r\n\r\n",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "state",
          "value": "open",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": "requirements.txt",
          "qualifier": "files"
        },
        {
          "objectId": "Brendan Andresen",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "requirements.txt",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Brendan Andresen",
          "qualifier": "has-participant"
        },
        {
          "objectId": "99ee39905dce42b2546f4e5f93f270057d19b297",
          "qualifier": "commits"
        },
        {
          "objectId": "7a203aeef8ff81273c37201326a1d405f95fd9f2",
          "qualifier": "is-merged-with"
        },
        {
          "objectId": "99ee39905dce42b2546f4e5f93f270057d19b297",
          "qualifier": "formalises"
        }
      ],
      "id": "254"
    },
    {
      "type": "pull_request",
      "attributes": [
        {
          "name": "title",
          "value": "Chore(deps): Bump idna from 3.4 to 3.7",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "description",
          "value": "Bumps [idna](https://github.com/kjd/idna) from 3.4 to 3.7.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/kjd/idna/releases\">idna's releases</a>.</em></p>\n<blockquote>\n<h2>v3.7</h2>\n<h2>What's Changed</h2>\n<ul>\n<li>Fix issue where specially crafted inputs to encode() could take exceptionally long amount of time to process. [CVE-2024-3651]</li>\n</ul>\n<p>Thanks to Guido Vranken for reporting the issue.</p>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/kjd/idna/compare/v3.6...v3.7\">https://github.com/kjd/idna/compare/v3.6...v3.7</a></p>\n</blockquote>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/kjd/idna/blob/master/HISTORY.rst\">idna's changelog</a>.</em></p>\n<blockquote>\n<p>3.7 (2024-04-11)\n++++++++++++++++</p>\n<ul>\n<li>Fix issue where specially crafted inputs to encode() could\ntake exceptionally long amount of time to process. [CVE-2024-3651]</li>\n</ul>\n<p>Thanks to Guido Vranken for reporting the issue.</p>\n<p>3.6 (2023-11-25)\n++++++++++++++++</p>\n<ul>\n<li>Fix regression to include tests in source distribution.</li>\n</ul>\n<p>3.5 (2023-11-24)\n++++++++++++++++</p>\n<ul>\n<li>Update to Unicode 15.1.0</li>\n<li>String codec name is now &quot;idna2008&quot; as overriding the system codec\n&quot;idna&quot; was not working.</li>\n<li>Fix typing error for codec encoding</li>\n<li>&quot;setup.cfg&quot; has been added for this release due to some downstream\nlack of adherence to PEP 517. Should be removed in a future release\nso please prepare accordingly.</li>\n<li>Removed reliance on a symlink for the &quot;idna-data&quot; tool to comport\nwith PEP 517 and the Python Packaging User Guide for sdist archives.</li>\n<li>Added security reporting protocol for project</li>\n</ul>\n<p>Thanks Jon Ribbens, Diogo Teles Sant'Anna, Wu Tingfeng for contributions\nto this release.</p>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/kjd/idna/commit/1d365e17e10d72d0b7876316fc7b9ca0eebdd38d\"><code>1d365e1</code></a> Release v3.7</li>\n<li><a href=\"https://github.com/kjd/idna/commit/c1b3154939907fab67c5754346afaebe165ce8e6\"><code>c1b3154</code></a> Merge pull request <a href=\"https://redirect.github.com/kjd/idna/issues/172\">#172</a> from kjd/optimize-contextj</li>\n<li><a href=\"https://github.com/kjd/idna/commit/0394ec76ff022813e770ba1fd89658790ea35623\"><code>0394ec7</code></a> Merge branch 'master' into optimize-contextj</li>\n<li><a href=\"https://github.com/kjd/idna/commit/cd58a23173d2b0a40b95ee680baf3e59e8d33966\"><code>cd58a23</code></a> Merge pull request <a href=\"https://redirect.github.com/kjd/idna/issues/152\">#152</a> from elliotwutingfeng/dev</li>\n<li><a href=\"https://github.com/kjd/idna/commit/5beb28b9dd77912c0dd656d8b0fdba3eb80222e7\"><code>5beb28b</code></a> More efficient resolution of joiner contexts</li>\n<li><a href=\"https://github.com/kjd/idna/commit/1b121483ed04d9576a1291758f537e1318cddc8b\"><code>1b12148</code></a> Update ossf/scorecard-action to v2.3.1</li>\n<li><a href=\"https://github.com/kjd/idna/commit/d516b874c3388047934938a500c7488d52c4e067\"><code>d516b87</code></a> Update Github actions/checkout to v4</li>\n<li><a href=\"https://github.com/kjd/idna/commit/c095c75943413c75ebf8ac74179757031b7f80b7\"><code>c095c75</code></a> Merge branch 'master' into dev</li>\n<li><a href=\"https://github.com/kjd/idna/commit/60a0a4cb61ec6834d74306bd8a1fa46daac94c98\"><code>60a0a4c</code></a> Fix typo in GitHub Actions workflow key</li>\n<li><a href=\"https://github.com/kjd/idna/commit/5918a0ef8034379c2e409ae93ee11d24295bb201\"><code>5918a0e</code></a> Merge branch 'master' into dev</li>\n<li>Additional commits viewable in <a href=\"https://github.com/kjd/idna/compare/v3.4...v3.7\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=idna&package-manager=pip&previous-version=3.4&new-version=3.7)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/srbhr/Resume-Matcher/network/alerts).\n\n</details>",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "state",
          "value": "open",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": "requirements.txt",
          "qualifier": "files"
        },
        {
          "objectId": "dependabot[bot]",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "requirements.txt",
          "qualifier": "aggregates"
        },
        {
          "objectId": "dependabot[bot]",
          "qualifier": "has-participant"
        },
        {
          "objectId": "cf7a78affa171ea722b029461aeb099755907b44",
          "qualifier": "commits"
        },
        {
          "objectId": "0a6ea3e2c7ee3c0d42b52b97c7fd96e5c94171bd",
          "qualifier": "is-merged-with"
        },
        {
          "objectId": "cf7a78affa171ea722b029461aeb099755907b44",
          "qualifier": "formalises"
        }
      ],
      "id": "253"
    },
    {
      "type": "pull_request",
      "attributes": [
        {
          "name": "title",
          "value": "Chore(deps): Bump pillow from 10.2.0 to 10.3.0",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "description",
          "value": "Bumps [pillow](https://github.com/python-pillow/Pillow) from 10.2.0 to 10.3.0.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/python-pillow/Pillow/releases\">pillow's releases</a>.</em></p>\n<blockquote>\n<h2>10.3.0</h2>\n<p><a href=\"https://pillow.readthedocs.io/en/stable/releasenotes/10.3.0.html\">https://pillow.readthedocs.io/en/stable/releasenotes/10.3.0.html</a></p>\n<h2>Changes</h2>\n<ul>\n<li>CVE-2024-28219: Use strncpy to avoid buffer overflow <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7928\">#7928</a> [<a href=\"https://github.com/hugovk\"><code>@\u200bhugovk</code></a>]</li>\n<li>Use <code>functools.lru_cache</code> for <code>hopper()</code> <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7912\">#7912</a> [<a href=\"https://github.com/hugovk\"><code>@\u200bhugovk</code></a>]</li>\n<li>Raise ValueError if seeking to greater than offset-sized integer in TIFF <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7883\">#7883</a> [<a href=\"https://github.com/radarhere\"><code>@\u200bradarhere</code></a>]</li>\n<li>Improve speed of loading QOI images <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7925\">#7925</a> [<a href=\"https://github.com/radarhere\"><code>@\u200bradarhere</code></a>]</li>\n<li>Added RGB to I;16N conversion <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7920\">#7920</a> [<a href=\"https://github.com/radarhere\"><code>@\u200bradarhere</code></a>]</li>\n<li>Add --report argument to <strong>main</strong>.py to omit supported formats <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7818\">#7818</a> [<a href=\"https://github.com/nulano\"><code>@\u200bnulano</code></a>]</li>\n<li>Added RGB to I;16, I;16L and I;16B conversion <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7918\">#7918</a> [<a href=\"https://github.com/radarhere\"><code>@\u200bradarhere</code></a>]</li>\n<li>Fix editable installation with custom build backend and configuration options <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7658\">#7658</a> [<a href=\"https://github.com/nulano\"><code>@\u200bnulano</code></a>]</li>\n<li>Fix putdata() for I;16N on big-endian <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7209\">#7209</a> [<a href=\"https://github.com/Yay295\"><code>@\u200bYay295</code></a>]</li>\n<li>Determine MPO size from markers, not EXIF data <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7884\">#7884</a> [<a href=\"https://github.com/radarhere\"><code>@\u200bradarhere</code></a>]</li>\n<li>Improved conversion from RGB to RGBa, LA and La <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7888\">#7888</a> [<a href=\"https://github.com/radarhere\"><code>@\u200bradarhere</code></a>]</li>\n<li>Support FITS images with GZIP_1 compression <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7894\">#7894</a> [<a href=\"https://github.com/radarhere\"><code>@\u200bradarhere</code></a>]</li>\n<li>Use I;16 mode for 9-bit JPEG 2000 images <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7900\">#7900</a> [<a href=\"https://github.com/scaramallion\"><code>@\u200bscaramallion</code></a>]</li>\n<li>Raise ValueError if kmeans is negative <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7891\">#7891</a> [<a href=\"https://github.com/radarhere\"><code>@\u200bradarhere</code></a>]</li>\n<li>Remove TIFF tag OSUBFILETYPE when saving using libtiff <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7893\">#7893</a> [<a href=\"https://github.com/radarhere\"><code>@\u200bradarhere</code></a>]</li>\n<li>Raise ValueError for negative values when loading P1-P3 PPM images <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7882\">#7882</a> [<a href=\"https://github.com/radarhere\"><code>@\u200bradarhere</code></a>]</li>\n<li>Added reading of JPEG2000 palettes <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7870\">#7870</a> [<a href=\"https://github.com/radarhere\"><code>@\u200bradarhere</code></a>]</li>\n<li>Added alpha_quality argument when saving WebP images <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7872\">#7872</a> [<a href=\"https://github.com/radarhere\"><code>@\u200bradarhere</code></a>]</li>\n<li>Fixed joined corners for ImageDraw rounded_rectangle() non-integer dimensions <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7881\">#7881</a> [<a href=\"https://github.com/radarhere\"><code>@\u200bradarhere</code></a>]</li>\n<li>Removed Python and NumPy pinning on Cygwin <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7880\">#7880</a> [<a href=\"https://github.com/radarhere\"><code>@\u200bradarhere</code></a>]</li>\n<li>Update UnidentifiedImageError and <strong>version</strong> imports <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7644\">#7644</a> [<a href=\"https://github.com/radarhere\"><code>@\u200bradarhere</code></a>]</li>\n<li>Stop reading EPS image at EOF marker <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7753\">#7753</a> [<a href=\"https://github.com/radarhere\"><code>@\u200bradarhere</code></a>]</li>\n<li>PSD layer co-ordinates may be negative <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7706\">#7706</a> [<a href=\"https://github.com/radarhere\"><code>@\u200bradarhere</code></a>]</li>\n<li>Use subprocess with CREATE_NO_WINDOW flag in ImageShow WindowsViewer <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7791\">#7791</a> [<a href=\"https://github.com/radarhere\"><code>@\u200bradarhere</code></a>]</li>\n<li>When saving GIF frame that restores to background color, do not fill identical pixels <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7788\">#7788</a> [<a href=\"https://github.com/radarhere\"><code>@\u200bradarhere</code></a>]</li>\n<li>Fixed reading PNG iCCP compression method <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7823\">#7823</a> [<a href=\"https://github.com/radarhere\"><code>@\u200bradarhere</code></a>]</li>\n<li>Allow writing IFDRational to UNDEFINED tag <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7840\">#7840</a> [<a href=\"https://github.com/radarhere\"><code>@\u200bradarhere</code></a>]</li>\n<li>Fix logged tag name when loading Exif data <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7842\">#7842</a> [<a href=\"https://github.com/radarhere\"><code>@\u200bradarhere</code></a>]</li>\n<li>Use maximum frame size in IHDR chunk when saving APNG images <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7821\">#7821</a> [<a href=\"https://github.com/radarhere\"><code>@\u200bradarhere</code></a>]</li>\n<li>Prevent opening P TGA images without a palette <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7797\">#7797</a> [<a href=\"https://github.com/radarhere\"><code>@\u200bradarhere</code></a>]</li>\n<li>Use palette when loading ICO images <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7798\">#7798</a> [<a href=\"https://github.com/radarhere\"><code>@\u200bradarhere</code></a>]</li>\n<li>Use consistent arguments for load_read and load_seek <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7713\">#7713</a> [<a href=\"https://github.com/radarhere\"><code>@\u200bradarhere</code></a>]</li>\n<li>Turn off nullability warnings for macOS SDK <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7827\">#7827</a> [<a href=\"https://github.com/radarhere\"><code>@\u200bradarhere</code></a>]</li>\n<li>Fix shift-sign issue in Convert.c <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7838\">#7838</a> [<a href=\"https://github.com/r-barnes\"><code>@\u200br-barnes</code></a>]</li>\n<li>winbuild: Refactor dependency versions into constants <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7843\">#7843</a> [<a href=\"https://github.com/hugovk\"><code>@\u200bhugovk</code></a>]</li>\n<li>Build macOS arm64 wheels natively <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7852\">#7852</a> [<a href=\"https://github.com/radarhere\"><code>@\u200bradarhere</code></a>]</li>\n<li>Fixed typo <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7855\">#7855</a> [<a href=\"https://github.com/radarhere\"><code>@\u200bradarhere</code></a>]</li>\n<li>Open 16-bit grayscale PNGs as I;16 <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7849\">#7849</a> [<a href=\"https://github.com/radarhere\"><code>@\u200bradarhere</code></a>]</li>\n<li>Handle truncated chunks at the end of PNG images <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7709\">#7709</a> [<a href=\"https://github.com/lajiyuan\"><code>@\u200blajiyuan</code></a>]</li>\n<li>Match mask size to pasted image size in GifImagePlugin <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7779\">#7779</a> [<a href=\"https://github.com/radarhere\"><code>@\u200bradarhere</code></a>]</li>\n<li>Changed SupportsGetMesh protocol to be public <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7841\">#7841</a> [<a href=\"https://github.com/radarhere\"><code>@\u200bradarhere</code></a>]</li>\n<li>Release GIL while calling <code>WebPAnimDecoderGetNext</code> <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7782\">#7782</a> [<a href=\"https://github.com/evanmiller\"><code>@\u200bevanmiller</code></a>]</li>\n<li>Fixed reading FLI/FLC images with a prefix chunk <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7804\">#7804</a> [<a href=\"https://github.com/twolife\"><code>@\u200btwolife</code></a>]</li>\n<li>Updated package name for Tidelift <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7810\">#7810</a> [<a href=\"https://github.com/radarhere\"><code>@\u200bradarhere</code></a>]</li>\n<li>Removed unused code <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7744\">#7744</a> [<a href=\"https://github.com/radarhere\"><code>@\u200bradarhere</code></a>]</li>\n</ul>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/python-pillow/Pillow/blob/main/CHANGES.rst\">pillow's changelog</a>.</em></p>\n<blockquote>\n<h2>10.3.0 (2024-04-01)</h2>\n<ul>\n<li>\n<p>CVE-2024-28219: Use <code>strncpy</code> to avoid buffer overflow <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7928\">#7928</a>\n[radarhere, hugovk]</p>\n</li>\n<li>\n<p>Deprecate <code>eval()</code>, replacing it with <code>lambda_eval()</code> and <code>unsafe_eval()</code> <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7927\">#7927</a>\n[radarhere, hugovk]</p>\n</li>\n<li>\n<p>Raise <code>ValueError</code> if seeking to greater than offset-sized integer in TIFF <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7883\">#7883</a>\n[radarhere]</p>\n</li>\n<li>\n<p>Add <code>--report</code> argument to <code>__main__.py</code> to omit supported formats <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7818\">#7818</a>\n[nulano, radarhere, hugovk]</p>\n</li>\n<li>\n<p>Added RGB to I;16, I;16L, I;16B and I;16N conversion <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7918\">#7918</a>, <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7920\">#7920</a>\n[radarhere]</p>\n</li>\n<li>\n<p>Fix editable installation with custom build backend and configuration options <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7658\">#7658</a>\n[nulano, radarhere]</p>\n</li>\n<li>\n<p>Fix putdata() for I;16N on big-endian <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7209\">#7209</a>\n[Yay295, hugovk, radarhere]</p>\n</li>\n<li>\n<p>Determine MPO size from markers, not EXIF data <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7884\">#7884</a>\n[radarhere]</p>\n</li>\n<li>\n<p>Improved conversion from RGB to RGBa, LA and La <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7888\">#7888</a>\n[radarhere]</p>\n</li>\n<li>\n<p>Support FITS images with GZIP_1 compression <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7894\">#7894</a>\n[radarhere]</p>\n</li>\n<li>\n<p>Use I;16 mode for 9-bit JPEG 2000 images <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7900\">#7900</a>\n[scaramallion, radarhere]</p>\n</li>\n<li>\n<p>Raise ValueError if kmeans is negative <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7891\">#7891</a>\n[radarhere]</p>\n</li>\n<li>\n<p>Remove TIFF tag OSUBFILETYPE when saving using libtiff <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7893\">#7893</a>\n[radarhere]</p>\n</li>\n<li>\n<p>Raise ValueError for negative values when loading P1-P3 PPM images <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7882\">#7882</a>\n[radarhere]</p>\n</li>\n<li>\n<p>Added reading of JPEG2000 palettes <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7870\">#7870</a>\n[radarhere]</p>\n</li>\n<li>\n<p>Added alpha_quality argument when saving WebP images <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7872\">#7872</a>\n[radarhere]</p>\n</li>\n</ul>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/python-pillow/Pillow/commit/5c89d88eee199ba53f64581ea39b6a1bc52feb1a\"><code>5c89d88</code></a> 10.3.0 version bump</li>\n<li><a href=\"https://github.com/python-pillow/Pillow/commit/63cbfcfdea2d163ec93bae8d283fcfe4b73b5dc7\"><code>63cbfcf</code></a> Update CHANGES.rst [ci skip]</li>\n<li><a href=\"https://github.com/python-pillow/Pillow/commit/2776126aa9af322b416eaca247f4f8ebefd08128\"><code>2776126</code></a> Merge pull request <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7928\">#7928</a> from python-pillow/lcms</li>\n<li><a href=\"https://github.com/python-pillow/Pillow/commit/aeb51cbb169eb3285818ba1390ddf2771d897e6e\"><code>aeb51cb</code></a> Merge branch 'main' into lcms</li>\n<li><a href=\"https://github.com/python-pillow/Pillow/commit/5beb0b66648db8b542bb5260eed79b25e33d643b\"><code>5beb0b6</code></a> Update CHANGES.rst [ci skip]</li>\n<li><a href=\"https://github.com/python-pillow/Pillow/commit/cac6ffa7b399ea79b6239984d1307056a0b19af2\"><code>cac6ffa</code></a> Merge pull request <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7927\">#7927</a> from python-pillow/imagemath</li>\n<li><a href=\"https://github.com/python-pillow/Pillow/commit/f5eeeacf7539eaa0d93a677d7666bc7c142c8d1c\"><code>f5eeeac</code></a> Name as 'options' in lambda_eval and unsafe_eval, but '_dict' in deprecated eval</li>\n<li><a href=\"https://github.com/python-pillow/Pillow/commit/facf3af93dabcbdd8cdbda8c3b50eefafa3bb04c\"><code>facf3af</code></a> Added release notes</li>\n<li><a href=\"https://github.com/python-pillow/Pillow/commit/2a93aba5cfcf6e241ab4f9392c13e3b74032c061\"><code>2a93aba</code></a> Use strncpy to avoid buffer overflow</li>\n<li><a href=\"https://github.com/python-pillow/Pillow/commit/a670597bc30e9d489656fc9d807170b8f3d7ca57\"><code>a670597</code></a> Update CHANGES.rst [ci skip]</li>\n<li>Additional commits viewable in <a href=\"https://github.com/python-pillow/Pillow/compare/10.2.0...10.3.0\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pillow&package-manager=pip&previous-version=10.2.0&new-version=10.3.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/srbhr/Resume-Matcher/network/alerts).\n\n</details>",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "state",
          "value": "open",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": "requirements.txt",
          "qualifier": "files"
        },
        {
          "objectId": "dependabot[bot]",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "requirements.txt",
          "qualifier": "aggregates"
        },
        {
          "objectId": "dependabot[bot]",
          "qualifier": "has-participant"
        },
        {
          "objectId": "528d7df2b315b94742fe7c20e02868431c112f56",
          "qualifier": "commits"
        },
        {
          "objectId": "8d38bee96328a15197baaff00fb178d593ec0fa6",
          "qualifier": "is-merged-with"
        },
        {
          "objectId": "528d7df2b315b94742fe7c20e02868431c112f56",
          "qualifier": "formalises"
        }
      ],
      "id": "252"
    },
    {
      "type": "user",
      "attributes": [
        {
          "name": "username",
          "value": "Jmorgan-123",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "rank",
          "value": "NONE",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "is-bot",
          "value": "False",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": "Gamer Jzs",
          "qualifier": "name"
        }
      ],
      "id": "Gamer Jzs"
    },
    {
      "type": "pull_request",
      "attributes": [
        {
          "name": "title",
          "value": "Update Resume-Belam_pm..json",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "description",
          "value": "## Pull Request Title\r\n<!-- Provide a concise and descriptive title for the pull request -->\r\n\r\n## Related Issue\r\n<!-- If this pull request is related to an issue, please link it here using the \"#\" symbol followed by the issue number (e.g., #123) -->\r\n\r\n## Description\r\n<!-- Describe the changes made in this pull request. What problem does it solve or what feature does it add/modify? -->\r\n\r\n## Type\r\n<!-- Check the relevant options by putting an \"x\" in the brackets -->\r\n\r\n- [ ] Bug Fix\r\n- [ ] Feature Enhancement\r\n- [ ] Documentation Update\r\n- [ ] Code Refactoring\r\n- [ ] Other (please specify): \r\n\r\n## Proposed Changes\r\n<!-- List the specific changes made in this pull request -->\r\n\r\n- \r\n- \r\n- \r\n\r\n## Screenshots / Code Snippets (if applicable)\r\n<!-- Include any relevant screenshots or code snippets that help visualize the changes made -->\r\n\r\n## How to Test\r\n<!-- Provide step-by-step instructions or a checklist for testing the changes in this pull request -->\r\n\r\n1. \r\n2. \r\n3. \r\n\r\n## Checklist\r\n<!-- Put an \"x\" in the brackets for the items that apply to this pull request -->\r\n\r\n- [ ] The code compiles successfully without any errors or warnings\r\n- [ ] The changes have been tested and verified\r\n- [ ] The documentation has been updated (if applicable)\r\n- [ ] The changes follow the project's coding guidelines and best practices\r\n- [ ] The commit messages are descriptive and follow the project's guidelines\r\n- [ ] All tests (if applicable) pass successfully\r\n- [ ] This pull request has been linked to the related issue (if applicable)\r\n\r\n## Additional Information\r\n<!-- Add any other information about the pull request that you think might be helpful -->\r\n\r\n",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "state",
          "value": "open",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": "Data/Processed/Resumes/Resume-alfred_pennyworth_pm.pdfb36fac00-1d60-49ba-a9e4-33477c928e98.json",
          "qualifier": "files"
        },
        {
          "objectId": "Gamer Jzs",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "Data/Processed/Resumes/Resume-alfred_pennyworth_pm.pdfb36fac00-1d60-49ba-a9e4-33477c928e98.json",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Gamer Jzs",
          "qualifier": "has-participant"
        },
        {
          "objectId": "af806baa48852c4cf352c05dc19a9060b9a8b867",
          "qualifier": "commits"
        },
        {
          "objectId": "e9d4bcedd8b164b68ae7c2e0e57c26b598b3739d",
          "qualifier": "is-merged-with"
        },
        {
          "objectId": "af806baa48852c4cf352c05dc19a9060b9a8b867",
          "qualifier": "formalises"
        }
      ],
      "id": "251"
    },
    {
      "type": "pull_request",
      "attributes": [
        {
          "name": "title",
          "value": "Add pre-commit hooks and code formatting guidelines",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "description",
          "value": "## Pull Request Title\nImplementation of Pre-commit Hooks and Code Formatting Guidelines\n\n## Related Issue\nN/A\n\n## Description\nThis pull request introduces pre-commit hooks and code formatting guidelines to enhance code consistency and maintainability. It includes updates to the `contributing.md` and `readme.md` files to provide guidance on using these new features.\n\n## Type\n- [ ] Bug Fix\n- [x] Feature Enhancement\n- [ ] Documentation Update\n- [ ] Code Refactoring\n- [ ] Other (please specify):\n\n## Proposed Changes\n- Added pre-commit hooks to automate code formatting and linting before each commit.\n- Included code formatting guidelines in `contributing.md` and `readme.md`.\n- Updated instructions on how to set up and use pre-commit hooks in the project.\n\n## Screenshots / Code Snippets (if applicable)\nN/A\n\n## How to Test\n1. Pull the latest changes from this branch.\n2. Ensure that pre-commit hooks are properly configured by attempting to commit changes.\n3. Verify that code formatting and linting are automatically applied before each commit.\n4. Check `contributing.md` and `readme.md` for updated guidelines on code formatting.\n\n## Checklist\n- [x] The code compiles successfully without any errors or warnings\n- [ ] The changes have been tested and verified\n- [x] The documentation has been updated (if applicable)\n- [x] The changes follow the project's coding guidelines and best practices\n- [x] The commit messages are descriptive and follow the project's guidelines\n- [ ] All tests (if applicable) pass successfully\n- [ ] This pull request has been linked to the related issue (if applicable)\n\n## Additional Information\nThe addition of pre-commit hooks and code formatting guidelines aims to streamline the development process and maintain consistency within the codebase. Feedback and suggestions are appreciated.",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "state",
          "value": "open",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": ".pre-commit-config.yaml",
          "qualifier": "files"
        },
        {
          "objectId": "CONTRIBUTING.md",
          "qualifier": "files"
        },
        {
          "objectId": "README.md",
          "qualifier": "files"
        },
        {
          "objectId": "Devasy Patel",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": ".pre-commit-config.yaml",
          "qualifier": "aggregates"
        },
        {
          "objectId": "CONTRIBUTING.md",
          "qualifier": "aggregates"
        },
        {
          "objectId": "README.md",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Devasy Patel",
          "qualifier": "has-participant"
        },
        {
          "objectId": "3442bf5c34738d3ef4ad2551dffd272ae5e4160d",
          "qualifier": "commits"
        },
        {
          "objectId": "13ecfba350b7c7f1ce28d4729b59056a7b464548",
          "qualifier": "commits"
        },
        {
          "objectId": "2843afa2a644911df1ea93d6f8c1395c965e951e",
          "qualifier": "commits"
        },
        {
          "objectId": "cc1d6ec0ae1e34c583bafe39fea1f3a4a79ad1f1",
          "qualifier": "commits"
        },
        {
          "objectId": "62b6ec3e3062f97bc3160b48e29f9517fe2a15a0",
          "qualifier": "is-merged-with"
        },
        {
          "objectId": "3442bf5c34738d3ef4ad2551dffd272ae5e4160d",
          "qualifier": "formalises"
        },
        {
          "objectId": "13ecfba350b7c7f1ce28d4729b59056a7b464548",
          "qualifier": "formalises"
        },
        {
          "objectId": "2843afa2a644911df1ea93d6f8c1395c965e951e",
          "qualifier": "formalises"
        },
        {
          "objectId": "cc1d6ec0ae1e34c583bafe39fea1f3a4a79ad1f1",
          "qualifier": "formalises"
        }
      ],
      "id": "250"
    },
    {
      "type": "pull_request",
      "attributes": [
        {
          "name": "title",
          "value": "Fix requirements conflict",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "description",
          "value": "None",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "state",
          "value": "open",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": "requirements.txt",
          "qualifier": "files"
        },
        {
          "objectId": "Saurabh Rai",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "requirements.txt",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Saurabh Rai",
          "qualifier": "has-participant"
        },
        {
          "objectId": "18a19b5f7759279e2b867e2fe5d628f6f9b33879",
          "qualifier": "commits"
        },
        {
          "objectId": "bdee68cf9abcd30d8cbeecda473178fc5a10ca94",
          "qualifier": "commits"
        },
        {
          "objectId": "None",
          "qualifier": "is-merged-with"
        },
        {
          "objectId": "18a19b5f7759279e2b867e2fe5d628f6f9b33879",
          "qualifier": "formalises"
        },
        {
          "objectId": "bdee68cf9abcd30d8cbeecda473178fc5a10ca94",
          "qualifier": "formalises"
        }
      ],
      "id": "249"
    },
    {
      "type": "pull_request",
      "attributes": [
        {
          "name": "title",
          "value": "Fix the requirements conflict #246",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "description",
          "value": "## Pull Request Title\r\n<!-- Provide a concise and descriptive title for the pull request -->\r\nFixes the requirements conflict #246 \r\n\r\n## Related Issue\r\n<!-- If this pull request is related to an issue, please link it here using the \"#\" symbol followed by the issue number (e.g., #123) -->\r\n\r\n## Description\r\n<!-- Describe the changes made in this pull request. What problem does it solve or what feature does it add/modify? -->\r\n\r\n## Type\r\n<!-- Check the relevant options by putting an \"x\" in the brackets -->\r\n\r\n- [x] Bug Fix\r\n- [ ] Feature Enhancement\r\n- [ ] Documentation Update\r\n- [ ] Code Refactoring\r\n- [ ] Other (please specify): \r\n\r\n## Proposed Changes\r\n<!-- List the specific changes made in this pull request -->\r\n\r\n- \r\n- \r\n- \r\n\r\n## Screenshots / Code Snippets (if applicable)\r\n<!-- Include any relevant screenshots or code snippets that help visualize the changes made -->\r\n\r\n## How to Test\r\n<!-- Provide step-by-step instructions or a checklist for testing the changes in this pull request -->\r\n\r\n1. \r\n2. \r\n3. \r\n\r\n## Checklist\r\n<!-- Put an \"x\" in the brackets for the items that apply to this pull request -->\r\n\r\n- [ ] The code compiles successfully without any errors or warnings\r\n- [ ] The changes have been tested and verified\r\n- [ ] The documentation has been updated (if applicable)\r\n- [ ] The changes follow the project's coding guidelines and best practices\r\n- [ ] The commit messages are descriptive and follow the project's guidelines\r\n- [ ] All tests (if applicable) pass successfully\r\n- [ ] This pull request has been linked to the related issue (if applicable)\r\n\r\n## Additional Information\r\n<!-- Add any other information about the pull request that you think might be helpful -->\r\n\r\n",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "state",
          "value": "open",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": "requirements.txt",
          "qualifier": "files"
        },
        {
          "objectId": "Saurabh Rai",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "requirements.txt",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Saurabh Rai",
          "qualifier": "has-participant"
        },
        {
          "objectId": "18a19b5f7759279e2b867e2fe5d628f6f9b33879",
          "qualifier": "commits"
        },
        {
          "objectId": "0c5323f284e322d00928b5a4949e8001c25a8984",
          "qualifier": "is-merged-with"
        },
        {
          "objectId": "18a19b5f7759279e2b867e2fe5d628f6f9b33879",
          "qualifier": "formalises"
        }
      ],
      "id": "248"
    },
    {
      "type": "pull_request",
      "attributes": [
        {
          "name": "title",
          "value": "Removed the archive folder",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "description",
          "value": "## Pull Request Title\r\n<!-- Provide a concise and descriptive title for the pull request -->\r\nThis PR removes the `/archive` folder. \r\n\r\n## Related Issue\r\n<!-- If this pull request is related to an issue, please link it here using the \"#\" symbol followed by the issue number (e.g., #123) -->\r\nNone\r\n\r\n## Description\r\n<!-- Describe the changes made in this pull request. What problem does it solve or what feature does it add/modify? -->\r\nRemoves the`/archive` folder, that's all. It's not required anymore. \r\n\r\n## Type\r\n<!-- Check the relevant options by putting an \"x\" in the brackets -->\r\n\r\n- [ ] Bug Fix\r\n- [ ] Feature Enhancement\r\n- [ ] Documentation Update\r\n- [x] Code Refactoring\r\n- [ ] Other (please specify): \r\n\r\n## Proposed Changes\r\n<!-- List the specific changes made in this pull request -->\r\n\r\n- \r\n- \r\n- \r\n\r\n## Screenshots / Code Snippets (if applicable)\r\n<!-- Include any relevant screenshots or code snippets that help visualize the changes made -->\r\n\r\n## How to Test\r\n<!-- Provide step-by-step instructions or a checklist for testing the changes in this pull request -->\r\n\r\n1. \r\n2. \r\n3. \r\n\r\n## Checklist\r\n<!-- Put an \"x\" in the brackets for the items that apply to this pull request -->\r\n\r\n- [ ] The code compiles successfully without any errors or warnings\r\n- [ ] The changes have been tested and verified\r\n- [ ] The documentation has been updated (if applicable)\r\n- [ ] The changes follow the project's coding guidelines and best practices\r\n- [ ] The commit messages are descriptive and follow the project's guidelines\r\n- [ ] All tests (if applicable) pass successfully\r\n- [ ] This pull request has been linked to the related issue (if applicable)\r\n\r\n## Additional Information\r\n<!-- Add any other information about the pull request that you think might be helpful -->\r\n\r\n",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "state",
          "value": "open",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": "archive/Data.py",
          "qualifier": "files"
        },
        {
          "objectId": "archive/ExtraScripts.py",
          "qualifier": "files"
        },
        {
          "objectId": "archive/output_jobs.txt",
          "qualifier": "files"
        },
        {
          "objectId": "archive/output_resume.txt",
          "qualifier": "files"
        },
        {
          "objectId": "archive/requirements_colab.txt",
          "qualifier": "files"
        },
        {
          "objectId": "archive/resume_matcher.ipynb",
          "qualifier": "files"
        },
        {
          "objectId": "archive/resume_matcher_colab.ipynb",
          "qualifier": "files"
        },
        {
          "objectId": "archive/run.py",
          "qualifier": "files"
        },
        {
          "objectId": "archive/streamlit_app.py",
          "qualifier": "files"
        },
        {
          "objectId": "archive/test_notebook.ipynb",
          "qualifier": "files"
        },
        {
          "objectId": "Saurabh Rai",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "archive/Data.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "archive/ExtraScripts.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "archive/output_jobs.txt",
          "qualifier": "aggregates"
        },
        {
          "objectId": "archive/output_resume.txt",
          "qualifier": "aggregates"
        },
        {
          "objectId": "archive/requirements_colab.txt",
          "qualifier": "aggregates"
        },
        {
          "objectId": "archive/resume_matcher.ipynb",
          "qualifier": "aggregates"
        },
        {
          "objectId": "archive/resume_matcher_colab.ipynb",
          "qualifier": "aggregates"
        },
        {
          "objectId": "archive/run.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "archive/streamlit_app.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "archive/test_notebook.ipynb",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Saurabh Rai",
          "qualifier": "has-participant"
        },
        {
          "objectId": "453d93c1ff2c1dd09dbbfd50e5e63628a958c643",
          "qualifier": "commits"
        },
        {
          "objectId": "71dcaef35f288c04e083f59f3df2fa7814579363",
          "qualifier": "is-merged-with"
        },
        {
          "objectId": "453d93c1ff2c1dd09dbbfd50e5e63628a958c643",
          "qualifier": "formalises"
        }
      ],
      "id": "247"
    },
    {
      "type": "pull_request",
      "attributes": [
        {
          "name": "title",
          "value": "Add logging configuration and update similarity score display",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "description",
          "value": "## Pull Request Title\r\nEnhancements and Improvements to Workspace Information Handling\r\n\r\n## Related Issue\r\nN/A\r\n\r\n## Description\r\nThis pull request introduces several enhancements and improvements to the workspace information handling process. It includes updates to documentation, logger improvements, logging integration into the Streamlit app, and an alternative method for calculating similarity scores.\r\n\r\n## Type\r\n- [ ] Bug Fix\r\n- [x] Feature Enhancement\r\n- [x] Documentation Update\r\n- [x] Code Refactoring\r\n- [ ] Other (please specify): \r\n\r\n## Proposed Changes\r\n- Comprehensive documentation added to the `get_score` and `get_similarity_score` files.\r\n- Updates made to the `logger.py` file for improved modularity.\r\n- Logging integrated into the `streamlit_app.py` file.\r\n- Feature added to calculate similarity scores without using an API in `streamlit_interactive.py`.\r\n\r\n## Screenshots / Code Snippets (if applicable)\r\n![image](https://github.com/srbhr/Resume-Matcher/assets/110348311/9048365a-d2e6-419d-8457-8852e9556fe6)\r\n\r\n\r\n## How to Test\r\n1. Pull the latest changes from this branch.\r\n2. Verify that documentation has been updated and is comprehensive.\r\n3. Ensure the `logger.py` file functions as expected in different scenarios.\r\n4. Test logging functionality in the Streamlit app by triggering various events.\r\n5. Verify the alternative similarity score calculation method in `streamlit_interactive.py`.\r\n\r\n## Checklist\r\n- [x] The code compiles successfully without any errors or warnings\r\n- [x] The changes have been tested and verified\r\n- [x] The documentation has been updated (if applicable)\r\n- [x] The changes follow the project's coding guidelines and best practices\r\n- [x] The commit messages are descriptive and follow the project's guidelines\r\n- [ ] All tests (if applicable) pass successfully\r\n- [ ] This pull request has been linked to the related issue (if applicable)\r\n\r\n## Additional Information\r\nThese changes aim to improve the maintainability and functionality of the workspace information handling process. Feedback and further suggestions are welcomed.",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "state",
          "value": "open",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": "Demo/DemoData.py",
          "qualifier": "files"
        },
        {
          "objectId": "archive/Data.py",
          "qualifier": "files"
        },
        {
          "objectId": "archive/ExtraScripts.py",
          "qualifier": "files"
        },
        {
          "objectId": "archive/run.py",
          "qualifier": "files"
        },
        {
          "objectId": "archive/streamlit_app.py",
          "qualifier": "files"
        },
        {
          "objectId": "run_first.py",
          "qualifier": "files"
        },
        {
          "objectId": "scripts/Extractor.py",
          "qualifier": "files"
        },
        {
          "objectId": "scripts/JobDescriptionProcessor.py",
          "qualifier": "files"
        },
        {
          "objectId": "scripts/KeytermsExtraction.py",
          "qualifier": "files"
        },
        {
          "objectId": "scripts/LinkedinJobToPDF.py",
          "qualifier": "files"
        },
        {
          "objectId": "scripts/ReadPdf.py",
          "qualifier": "files"
        },
        {
          "objectId": "scripts/ResumeProcessor.py",
          "qualifier": "files"
        },
        {
          "objectId": "scripts/TextCleaner.py",
          "qualifier": "files"
        },
        {
          "objectId": "scripts/__init__.py",
          "qualifier": "files"
        },
        {
          "objectId": "scripts/parsers/ParseJobDescToJson.py",
          "qualifier": "files"
        },
        {
          "objectId": "scripts/parsers/ParseResumeToJson.py",
          "qualifier": "files"
        },
        {
          "objectId": "scripts/parsers/__init__.py",
          "qualifier": "files"
        },
        {
          "objectId": "scripts/similarity/__init__.py",
          "qualifier": "files"
        },
        {
          "objectId": "scripts/similarity/get_score.py",
          "qualifier": "files"
        },
        {
          "objectId": "scripts/similarity/get_similarity_score.py",
          "qualifier": "files"
        },
        {
          "objectId": "scripts/utils/ReadFiles.py",
          "qualifier": "files"
        },
        {
          "objectId": "scripts/utils/Similar.py",
          "qualifier": "files"
        },
        {
          "objectId": "scripts/utils/Utils.py",
          "qualifier": "files"
        },
        {
          "objectId": "scripts/utils/__init__.py",
          "qualifier": "files"
        },
        {
          "objectId": "scripts/utils/logger.py",
          "qualifier": "files"
        },
        {
          "objectId": "streamlit_app.py",
          "qualifier": "files"
        },
        {
          "objectId": "streamlit_interactive.py",
          "qualifier": "files"
        },
        {
          "objectId": "streamlit_second.py",
          "qualifier": "files"
        },
        {
          "objectId": "Devasy Patel",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "Demo/DemoData.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "archive/Data.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "archive/ExtraScripts.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "archive/run.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "archive/streamlit_app.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "run_first.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "scripts/Extractor.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "scripts/JobDescriptionProcessor.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "scripts/KeytermsExtraction.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "scripts/LinkedinJobToPDF.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "scripts/ReadPdf.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "scripts/ResumeProcessor.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "scripts/TextCleaner.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "scripts/__init__.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "scripts/parsers/ParseJobDescToJson.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "scripts/parsers/ParseResumeToJson.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "scripts/parsers/__init__.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "scripts/similarity/__init__.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "scripts/similarity/get_score.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "scripts/similarity/get_similarity_score.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "scripts/utils/ReadFiles.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "scripts/utils/Similar.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "scripts/utils/Utils.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "scripts/utils/__init__.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "scripts/utils/logger.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "streamlit_app.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "streamlit_interactive.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "streamlit_second.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Devasy Patel",
          "qualifier": "has-participant"
        },
        {
          "objectId": "73f7ef3f87c4cc5b2db22c151416980069eaf928",
          "qualifier": "commits"
        },
        {
          "objectId": "6aff3e93ce76662d3e465dd18664e3dd9a45601a",
          "qualifier": "commits"
        },
        {
          "objectId": "5ce05a743d9585f3cde8537ad2f6b63bf134fbc2",
          "qualifier": "commits"
        },
        {
          "objectId": "76062e92fddf37c0daa0aee3f06ef4b05409ae78",
          "qualifier": "is-merged-with"
        },
        {
          "objectId": "73f7ef3f87c4cc5b2db22c151416980069eaf928",
          "qualifier": "formalises"
        },
        {
          "objectId": "6aff3e93ce76662d3e465dd18664e3dd9a45601a",
          "qualifier": "formalises"
        },
        {
          "objectId": "5ce05a743d9585f3cde8537ad2f6b63bf134fbc2",
          "qualifier": "formalises"
        }
      ],
      "id": "245"
    },
    {
      "type": "pull_request",
      "attributes": [
        {
          "name": "title",
          "value": "No Api Keys",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "description",
          "value": "## Pull Request Title\r\n<!-- Provide a concise and descriptive title for the pull request -->\r\nRemoved  Vector Databases\r\n## Related Issue\r\n<!-- If this pull request is related to an issue, please link it here using the \"#\" symbol followed by the issue number (e.g., #123) -->\r\n\r\n## Description\r\n<!-- Describe the changes made in this pull request. What problem does it solve or what feature does it add/modify? -->\r\n\r\n## Type\r\n<!-- Check the relevant options by putting an \"x\" in the brackets -->\r\n\r\n- [x] Bug Fix\r\n- [x] Feature Enhancement\r\n- [ ] Documentation Update\r\n- [x] Code Refactoring\r\n- [ ] Other (please specify): \r\n\r\n## Proposed Changes\r\n<!-- List the specific changes made in this pull request -->\r\n\r\n- \r\n- \r\n- \r\n\r\n## Screenshots / Code Snippets (if applicable)\r\n<!-- Include any relevant screenshots or code snippets that help visualize the changes made -->\r\n\r\n## How to Test\r\n<!-- Provide step-by-step instructions or a checklist for testing the changes in this pull request -->\r\n\r\n1. \r\n2. \r\n3. \r\n\r\n## Checklist\r\n<!-- Put an \"x\" in the brackets for the items that apply to this pull request -->\r\n\r\n- [x] The code compiles successfully without any errors or warnings\r\n- [x] The changes have been tested and verified\r\n- [ ] The documentation has been updated (if applicable)\r\n- [x] The changes follow the project's coding guidelines and best practices\r\n- [ ] The commit messages are descriptive and follow the project's guidelines\r\n- [ ] All tests (if applicable) pass successfully\r\n- [ ] This pull request has been linked to the related issue (if applicable)\r\n\r\n## Additional Information\r\n<!-- Add any other information about the pull request that you think might be helpful -->\r\n\r\n",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "state",
          "value": "open",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": "requirements.txt",
          "qualifier": "files"
        },
        {
          "objectId": "scripts/similarity/get_score.py",
          "qualifier": "files"
        },
        {
          "objectId": "streamlit_app.py",
          "qualifier": "files"
        },
        {
          "objectId": "Subramanyam Challa",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "requirements.txt",
          "qualifier": "aggregates"
        },
        {
          "objectId": "scripts/similarity/get_score.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "streamlit_app.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Subramanyam Challa",
          "qualifier": "has-participant"
        },
        {
          "objectId": "115eaaeb1cdc119cc46104dcf5dee248c52de416",
          "qualifier": "commits"
        },
        {
          "objectId": "028681ebc52584c4f9847bd012d68180db1037f4",
          "qualifier": "commits"
        },
        {
          "objectId": "9110f31db6d1b143e4570dd0f1ffb2dea3504c48",
          "qualifier": "commits"
        },
        {
          "objectId": "145003f170044db2a40168d1d9ba1d95bdaab9d5",
          "qualifier": "commits"
        },
        {
          "objectId": "f4db040fffaee03e153c95b5c54430bc30da9b7e",
          "qualifier": "commits"
        },
        {
          "objectId": "f668ffc26a19409416bcc206823baac616e2bbf3",
          "qualifier": "is-merged-with"
        },
        {
          "objectId": "115eaaeb1cdc119cc46104dcf5dee248c52de416",
          "qualifier": "formalises"
        },
        {
          "objectId": "028681ebc52584c4f9847bd012d68180db1037f4",
          "qualifier": "formalises"
        },
        {
          "objectId": "9110f31db6d1b143e4570dd0f1ffb2dea3504c48",
          "qualifier": "formalises"
        },
        {
          "objectId": "145003f170044db2a40168d1d9ba1d95bdaab9d5",
          "qualifier": "formalises"
        },
        {
          "objectId": "f4db040fffaee03e153c95b5c54430bc30da9b7e",
          "qualifier": "formalises"
        }
      ],
      "id": "243"
    },
    {
      "type": "pull_request",
      "attributes": [
        {
          "name": "title",
          "value": "Actualizaci\u00f3n",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "description",
          "value": "## Pull Request Title\r\n<!-- Provide a concise and descriptive title for the pull request -->\r\n\r\n## Related Issue\r\n<!-- If this pull request is related to an issue, please link it here using the \"#\" symbol followed by the issue number (e.g., #123) -->\r\n\r\n## Description\r\n<!-- Describe the changes made in this pull request. What problem does it solve or what feature does it add/modify? -->\r\n\r\n## Type\r\n<!-- Check the relevant options by putting an \"x\" in the brackets -->\r\n\r\n- [ ] Bug Fix\r\n- [ ] Feature Enhancement\r\n- [ ] Documentation Update\r\n- [ ] Code Refactoring\r\n- [ ] Other (please specify): \r\n\r\n## Proposed Changes\r\n<!-- List the specific changes made in this pull request -->\r\n\r\n- \r\n- \r\n- \r\n\r\n## Screenshots / Code Snippets (if applicable)\r\n<!-- Include any relevant screenshots or code snippets that help visualize the changes made -->\r\n\r\n## How to Test\r\n<!-- Provide step-by-step instructions or a checklist for testing the changes in this pull request -->\r\n\r\n1. \r\n2. \r\n3. \r\n\r\n## Checklist\r\n<!-- Put an \"x\" in the brackets for the items that apply to this pull request -->\r\n\r\n- [ ] The code compiles successfully without any errors or warnings\r\n- [ ] The changes have been tested and verified\r\n- [ ] The documentation has been updated (if applicable)\r\n- [ ] The changes follow the project's coding guidelines and best practices\r\n- [ ] The commit messages are descriptive and follow the project's guidelines\r\n- [ ] All tests (if applicable) pass successfully\r\n- [ ] This pull request has been linked to the related issue (if applicable)\r\n\r\n## Additional Information\r\n<!-- Add any other information about the pull request that you think might be helpful -->\r\n\r\n",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "state",
          "value": "open",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": "Assets/img/C1.png",
          "qualifier": "files"
        },
        {
          "objectId": "Assets/img/C2.png",
          "qualifier": "files"
        },
        {
          "objectId": "Assets/img/C3.png",
          "qualifier": "files"
        },
        {
          "objectId": "Assets/img/C4.png",
          "qualifier": "files"
        },
        {
          "objectId": "Assets/img/C5.png",
          "qualifier": "files"
        },
        {
          "objectId": "Assets/img/C6.png",
          "qualifier": "files"
        },
        {
          "objectId": "Assets/img/img105.jpg",
          "qualifier": "files"
        },
        {
          "objectId": "Assets/img/img106.jpg",
          "qualifier": "files"
        },
        {
          "objectId": "Assets/img/img138.jpg",
          "qualifier": "files"
        },
        {
          "objectId": "Assets/img/img139.jpg",
          "qualifier": "files"
        },
        {
          "objectId": "Assets/img/img140.jpg",
          "qualifier": "files"
        },
        {
          "objectId": "Assets/img/img84.jpg",
          "qualifier": "files"
        },
        {
          "objectId": "Assets/img/img96.jpg",
          "qualifier": "files"
        },
        {
          "objectId": "Assets/img/img97.jpg",
          "qualifier": "files"
        },
        {
          "objectId": "Data/JobDescription/job_desc_front_end_engineer.pdf",
          "qualifier": "files"
        },
        {
          "objectId": "Data/JobDescription/job_desc_full_stack_engineer.pdf",
          "qualifier": "files"
        },
        {
          "objectId": "Data/JobDescription/job_desc_java_developer.pdf",
          "qualifier": "files"
        },
        {
          "objectId": "Data/JobDescription/job_desc_product_manager.pdf",
          "qualifier": "files"
        },
        {
          "objectId": "Data/Processed/JobDescription/JobDescription-job_desc_front_end_engineer.pdf9e508eff-a083-4e2d-8b1e-577cbc8f50fc.json",
          "qualifier": "files"
        },
        {
          "objectId": "Data/Processed/JobDescription/JobDescription-job_desc_full_stack_engineer.pdfcccf72e0-5f20-4aa8-8679-d91b720b7247.json",
          "qualifier": "files"
        },
        {
          "objectId": "Data/Processed/JobDescription/JobDescription-job_desc_java_developer.pdf1fb6435c-531a-4f04-84c2-c4e73e1f1a3f.json",
          "qualifier": "files"
        },
        {
          "objectId": "Data/Processed/JobDescription/JobDescription-job_desc_product_manager.pdf0b613898-1183-49c5-ad07-e03bd9af72e5.json",
          "qualifier": "files"
        },
        {
          "objectId": "Data/Processed/Resumes/Resume-alfred_pennyworth_pm.pdfb36fac00-1d60-49ba-a9e4-33477c928e98.json",
          "qualifier": "files"
        },
        {
          "objectId": "Data/Processed/Resumes/Resume-barry_allen_fe.pdfbef9d9b1-fa14-4aa0-8111-6033cceacb5a.json",
          "qualifier": "files"
        },
        {
          "objectId": "Data/Processed/Resumes/Resume-bruce_wayne_fullstack.pdf04c228e3-04a4-4970-a149-a3cffc92aee8.json",
          "qualifier": "files"
        },
        {
          "objectId": "Data/Processed/Resumes/Resume-harvey_dent_mle.pdf5dde9183-5af4-4107-91e1-7b2d66fec490.json",
          "qualifier": "files"
        },
        {
          "objectId": "Data/Processed/Resumes/Resume-john_doe.pdf817fb796-14b9-4819-a224-7eed66b3ce04.json",
          "qualifier": "files"
        },
        {
          "objectId": "Data/Resumes/alfred_pennyworth_pm.pdf",
          "qualifier": "files"
        },
        {
          "objectId": "Data/Resumes/barry_allen_fe.pdf",
          "qualifier": "files"
        },
        {
          "objectId": "Data/Resumes/bruce_wayne_fullstack.pdf",
          "qualifier": "files"
        },
        {
          "objectId": "Katherine Ambrocio",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "Assets/img/C1.png",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Assets/img/C2.png",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Assets/img/C3.png",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Assets/img/C4.png",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Assets/img/C5.png",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Assets/img/C6.png",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Assets/img/img105.jpg",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Assets/img/img106.jpg",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Assets/img/img138.jpg",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Assets/img/img139.jpg",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Assets/img/img140.jpg",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Assets/img/img84.jpg",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Assets/img/img96.jpg",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Assets/img/img97.jpg",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/JobDescription/job_desc_front_end_engineer.pdf",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/JobDescription/job_desc_full_stack_engineer.pdf",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/JobDescription/job_desc_java_developer.pdf",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/JobDescription/job_desc_product_manager.pdf",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Processed/JobDescription/JobDescription-job_desc_front_end_engineer.pdf9e508eff-a083-4e2d-8b1e-577cbc8f50fc.json",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Processed/JobDescription/JobDescription-job_desc_full_stack_engineer.pdfcccf72e0-5f20-4aa8-8679-d91b720b7247.json",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Processed/JobDescription/JobDescription-job_desc_java_developer.pdf1fb6435c-531a-4f04-84c2-c4e73e1f1a3f.json",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Processed/JobDescription/JobDescription-job_desc_product_manager.pdf0b613898-1183-49c5-ad07-e03bd9af72e5.json",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Processed/Resumes/Resume-alfred_pennyworth_pm.pdfb36fac00-1d60-49ba-a9e4-33477c928e98.json",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Processed/Resumes/Resume-barry_allen_fe.pdfbef9d9b1-fa14-4aa0-8111-6033cceacb5a.json",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Processed/Resumes/Resume-bruce_wayne_fullstack.pdf04c228e3-04a4-4970-a149-a3cffc92aee8.json",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Processed/Resumes/Resume-harvey_dent_mle.pdf5dde9183-5af4-4107-91e1-7b2d66fec490.json",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Processed/Resumes/Resume-john_doe.pdf817fb796-14b9-4819-a224-7eed66b3ce04.json",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/alfred_pennyworth_pm.pdf",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/barry_allen_fe.pdf",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/bruce_wayne_fullstack.pdf",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Katherine Ambrocio",
          "qualifier": "has-participant"
        },
        {
          "objectId": "2d68aa0ee567394a4cb124c9ef8fbbac638ea1d7",
          "qualifier": "commits"
        },
        {
          "objectId": "5fef66176a3010a0db94dcd4b14307ad75cf88e6",
          "qualifier": "commits"
        },
        {
          "objectId": "a7e24218873210d0c51963e2af7eb8c7a9635752",
          "qualifier": "commits"
        },
        {
          "objectId": "a50fd09010ff032734ed60c9feefb9a5882b66cb",
          "qualifier": "commits"
        },
        {
          "objectId": "774eeec5416c4dbe2cef2eb34b4b07bb0ffcd220",
          "qualifier": "commits"
        },
        {
          "objectId": "7f79e15de1448bf2517da8fab583273a60bd3be6",
          "qualifier": "commits"
        },
        {
          "objectId": "631db7a36b30e944497de0fdf5f52af11b63413b",
          "qualifier": "commits"
        },
        {
          "objectId": "fabb5488b493ad4ac67dfb2c38f12cfc53750ab1",
          "qualifier": "commits"
        },
        {
          "objectId": "9ac26772865f6733c8093a50122a6d4e03ee5ea8",
          "qualifier": "commits"
        },
        {
          "objectId": "6275b97943da56fdbcbd4433998463ce0d5d6a9f",
          "qualifier": "commits"
        },
        {
          "objectId": "6c5fa1f7fea5c8a0d5df3281368749fec4bde45d",
          "qualifier": "commits"
        },
        {
          "objectId": "47c90951038745a4ee1cf9e9aa551598d344c43e",
          "qualifier": "commits"
        },
        {
          "objectId": "ad701813712c00a2583539d8f192c4aa7313b656",
          "qualifier": "commits"
        },
        {
          "objectId": "9eeeca23cac0566a07b2e6ca445281ccda5f0832",
          "qualifier": "commits"
        },
        {
          "objectId": "fe2bb7924f2b001bd7919bf4949f13c50780b5fd",
          "qualifier": "commits"
        },
        {
          "objectId": "0afb3fa965c0e8d4cc76d6a04735fa9b43bf667f",
          "qualifier": "commits"
        },
        {
          "objectId": "45d6861b20dbef1fcd8ef4fe5b0d3c81cc2f5e8a",
          "qualifier": "commits"
        },
        {
          "objectId": "9569d2dc299264630a506b5a9024bd7c019866f4",
          "qualifier": "commits"
        },
        {
          "objectId": "d71e528cd25a05d5385aa4d39128185299321e74",
          "qualifier": "commits"
        },
        {
          "objectId": "44c69f1ee73d4bc10b778a13a1aedb39425cc9f3",
          "qualifier": "commits"
        },
        {
          "objectId": "94b571b1d07b91fd68946b5743d5d503cbc58312",
          "qualifier": "commits"
        },
        {
          "objectId": "66f5e8eaaa25d812d2f3528003c425c861f609e5",
          "qualifier": "commits"
        },
        {
          "objectId": "004c88ba302cc13e1b67c19d793a5100660df1bb",
          "qualifier": "commits"
        },
        {
          "objectId": "None",
          "qualifier": "is-merged-with"
        },
        {
          "objectId": "2d68aa0ee567394a4cb124c9ef8fbbac638ea1d7",
          "qualifier": "formalises"
        },
        {
          "objectId": "5fef66176a3010a0db94dcd4b14307ad75cf88e6",
          "qualifier": "formalises"
        },
        {
          "objectId": "a7e24218873210d0c51963e2af7eb8c7a9635752",
          "qualifier": "formalises"
        },
        {
          "objectId": "a50fd09010ff032734ed60c9feefb9a5882b66cb",
          "qualifier": "formalises"
        },
        {
          "objectId": "774eeec5416c4dbe2cef2eb34b4b07bb0ffcd220",
          "qualifier": "formalises"
        },
        {
          "objectId": "7f79e15de1448bf2517da8fab583273a60bd3be6",
          "qualifier": "formalises"
        },
        {
          "objectId": "631db7a36b30e944497de0fdf5f52af11b63413b",
          "qualifier": "formalises"
        },
        {
          "objectId": "fabb5488b493ad4ac67dfb2c38f12cfc53750ab1",
          "qualifier": "formalises"
        },
        {
          "objectId": "9ac26772865f6733c8093a50122a6d4e03ee5ea8",
          "qualifier": "formalises"
        },
        {
          "objectId": "6275b97943da56fdbcbd4433998463ce0d5d6a9f",
          "qualifier": "formalises"
        },
        {
          "objectId": "6c5fa1f7fea5c8a0d5df3281368749fec4bde45d",
          "qualifier": "formalises"
        },
        {
          "objectId": "47c90951038745a4ee1cf9e9aa551598d344c43e",
          "qualifier": "formalises"
        },
        {
          "objectId": "ad701813712c00a2583539d8f192c4aa7313b656",
          "qualifier": "formalises"
        },
        {
          "objectId": "9eeeca23cac0566a07b2e6ca445281ccda5f0832",
          "qualifier": "formalises"
        },
        {
          "objectId": "fe2bb7924f2b001bd7919bf4949f13c50780b5fd",
          "qualifier": "formalises"
        },
        {
          "objectId": "0afb3fa965c0e8d4cc76d6a04735fa9b43bf667f",
          "qualifier": "formalises"
        },
        {
          "objectId": "45d6861b20dbef1fcd8ef4fe5b0d3c81cc2f5e8a",
          "qualifier": "formalises"
        },
        {
          "objectId": "9569d2dc299264630a506b5a9024bd7c019866f4",
          "qualifier": "formalises"
        },
        {
          "objectId": "d71e528cd25a05d5385aa4d39128185299321e74",
          "qualifier": "formalises"
        },
        {
          "objectId": "44c69f1ee73d4bc10b778a13a1aedb39425cc9f3",
          "qualifier": "formalises"
        },
        {
          "objectId": "94b571b1d07b91fd68946b5743d5d503cbc58312",
          "qualifier": "formalises"
        },
        {
          "objectId": "66f5e8eaaa25d812d2f3528003c425c861f609e5",
          "qualifier": "formalises"
        },
        {
          "objectId": "004c88ba302cc13e1b67c19d793a5100660df1bb",
          "qualifier": "formalises"
        }
      ],
      "id": "240"
    },
    {
      "type": "pull_request",
      "attributes": [
        {
          "name": "title",
          "value": "Shifted the WebApp to a web-app branch",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "description",
          "value": "None",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "state",
          "value": "open",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": "README.md",
          "qualifier": "files"
        },
        {
          "objectId": "webapp/.eslintrc.json",
          "qualifier": "files"
        },
        {
          "objectId": "webapp/.gitignore",
          "qualifier": "files"
        },
        {
          "objectId": "webapp/README.md",
          "qualifier": "files"
        },
        {
          "objectId": "webapp/app/(routes)/layout.tsx",
          "qualifier": "files"
        },
        {
          "objectId": "webapp/app/(routes)/page.tsx",
          "qualifier": "files"
        },
        {
          "objectId": "webapp/app/_components/button/button.tsx",
          "qualifier": "files"
        },
        {
          "objectId": "webapp/app/_components/common-words/common-words.tsx",
          "qualifier": "files"
        },
        {
          "objectId": "webapp/app/_components/footer/footer.tsx",
          "qualifier": "files"
        },
        {
          "objectId": "webapp/app/_components/footer/footerLinks.ts",
          "qualifier": "files"
        },
        {
          "objectId": "webapp/app/_components/header/header.tsx",
          "qualifier": "files"
        },
        {
          "objectId": "webapp/app/_components/hero/hero.tsx",
          "qualifier": "files"
        },
        {
          "objectId": "webapp/app/_components/job-descriptions/add-jobs/add-jobs.tsx",
          "qualifier": "files"
        },
        {
          "objectId": "webapp/app/_components/job-descriptions/job-descriptions.tsx",
          "qualifier": "files"
        },
        {
          "objectId": "webapp/app/_components/processing-error/processing-error.tsx",
          "qualifier": "files"
        },
        {
          "objectId": "webapp/app/_components/resume/file-upload/file-upload.tsx",
          "qualifier": "files"
        },
        {
          "objectId": "webapp/app/_components/resume/pdf-viewer/pdf-viewer.tsx",
          "qualifier": "files"
        },
        {
          "objectId": "webapp/app/_components/resume/resume-glance/resume-glance.tsx",
          "qualifier": "files"
        },
        {
          "objectId": "webapp/app/_components/suggestions/suggestions.tsx",
          "qualifier": "files"
        },
        {
          "objectId": "webapp/app/_components/third-party-services/reducer.ts",
          "qualifier": "files"
        },
        {
          "objectId": "webapp/app/_components/third-party-services/saved-keys.tsx",
          "qualifier": "files"
        },
        {
          "objectId": "webapp/app/_components/third-party-services/third-party-services.tsx",
          "qualifier": "files"
        },
        {
          "objectId": "webapp/app/_components/vector-scores/vector-scores.tsx",
          "qualifier": "files"
        },
        {
          "objectId": "webapp/app/_stores/useGlobalStore.ts",
          "qualifier": "files"
        },
        {
          "objectId": "webapp/app/_types/job-descriptions.ts",
          "qualifier": "files"
        },
        {
          "objectId": "webapp/app/_types/resume-processor.ts",
          "qualifier": "files"
        },
        {
          "objectId": "webapp/app/_types/service-keys.ts",
          "qualifier": "files"
        },
        {
          "objectId": "webapp/app/_utils/environment.ts",
          "qualifier": "files"
        },
        {
          "objectId": "webapp/app/_utils/errors.ts",
          "qualifier": "files"
        },
        {
          "objectId": "webapp/app/globals.css",
          "qualifier": "files"
        },
        {
          "objectId": "Saurabh Rai",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "README.md",
          "qualifier": "aggregates"
        },
        {
          "objectId": "webapp/.eslintrc.json",
          "qualifier": "aggregates"
        },
        {
          "objectId": "webapp/.gitignore",
          "qualifier": "aggregates"
        },
        {
          "objectId": "webapp/README.md",
          "qualifier": "aggregates"
        },
        {
          "objectId": "webapp/app/(routes)/layout.tsx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "webapp/app/(routes)/page.tsx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "webapp/app/_components/button/button.tsx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "webapp/app/_components/common-words/common-words.tsx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "webapp/app/_components/footer/footer.tsx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "webapp/app/_components/footer/footerLinks.ts",
          "qualifier": "aggregates"
        },
        {
          "objectId": "webapp/app/_components/header/header.tsx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "webapp/app/_components/hero/hero.tsx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "webapp/app/_components/job-descriptions/add-jobs/add-jobs.tsx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "webapp/app/_components/job-descriptions/job-descriptions.tsx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "webapp/app/_components/processing-error/processing-error.tsx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "webapp/app/_components/resume/file-upload/file-upload.tsx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "webapp/app/_components/resume/pdf-viewer/pdf-viewer.tsx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "webapp/app/_components/resume/resume-glance/resume-glance.tsx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "webapp/app/_components/suggestions/suggestions.tsx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "webapp/app/_components/third-party-services/reducer.ts",
          "qualifier": "aggregates"
        },
        {
          "objectId": "webapp/app/_components/third-party-services/saved-keys.tsx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "webapp/app/_components/third-party-services/third-party-services.tsx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "webapp/app/_components/vector-scores/vector-scores.tsx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "webapp/app/_stores/useGlobalStore.ts",
          "qualifier": "aggregates"
        },
        {
          "objectId": "webapp/app/_types/job-descriptions.ts",
          "qualifier": "aggregates"
        },
        {
          "objectId": "webapp/app/_types/resume-processor.ts",
          "qualifier": "aggregates"
        },
        {
          "objectId": "webapp/app/_types/service-keys.ts",
          "qualifier": "aggregates"
        },
        {
          "objectId": "webapp/app/_utils/environment.ts",
          "qualifier": "aggregates"
        },
        {
          "objectId": "webapp/app/_utils/errors.ts",
          "qualifier": "aggregates"
        },
        {
          "objectId": "webapp/app/globals.css",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Saurabh Rai",
          "qualifier": "has-participant"
        },
        {
          "objectId": "bee706eba82fc5de19f2a0112f5db7e201202ec1",
          "qualifier": "commits"
        },
        {
          "objectId": "f2c28b4b4bff4070582fdd1c87563e4a68601a69",
          "qualifier": "is-merged-with"
        },
        {
          "objectId": "bee706eba82fc5de19f2a0112f5db7e201202ec1",
          "qualifier": "formalises"
        }
      ],
      "id": "238"
    },
    {
      "type": "pull_request",
      "attributes": [
        {
          "name": "title",
          "value": "Chore(deps): Bump python-multipart from 0.0.6 to 0.0.7 in /archive",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "description",
          "value": "Bumps [python-multipart](https://github.com/andrew-d/python-multipart) from 0.0.6 to 0.0.7.\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/Kludex/python-multipart/blob/master/CHANGELOG.md\">python-multipart's changelog</a>.</em></p>\n<blockquote>\n<h2>0.0.7 (2024-02-03)</h2>\n<ul>\n<li>Refactor header option parser to use the standard library instead of a custom RegEx <a href=\"https://redirect.github.com/andrew-d/python-multipart/pull/75\">#75</a>.</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/Kludex/python-multipart/commit/c83e6da1a3a6ed002ebb22138baa1664134d540c\"><code>c83e6da</code></a> Version 0.0.7 (<a href=\"https://redirect.github.com/andrew-d/python-multipart/issues/77\">#77</a>)</li>\n<li><a href=\"https://github.com/Kludex/python-multipart/commit/fb7d3c92dd07d63e6f02a2a2d0350cebdf356e3a\"><code>fb7d3c9</code></a> Bump pygments from 2.7.4 to 2.15.0 (<a href=\"https://redirect.github.com/andrew-d/python-multipart/issues/66\">#66</a>)</li>\n<li><a href=\"https://github.com/Kludex/python-multipart/commit/20f0ef6b4e4caf7d69a667c54dff57fe467109a4\"><code>20f0ef6</code></a> \u267b\ufe0f Refactor header option parser to use the standard library instead of a cus...</li>\n<li><a href=\"https://github.com/Kludex/python-multipart/commit/d3d16dae4b061c34fe9d3c9081d9800c49fc1f7a\"><code>d3d16da</code></a> Use latest invoke version (2.2.0) (<a href=\"https://redirect.github.com/andrew-d/python-multipart/issues/73\">#73</a>)</li>\n<li><a href=\"https://github.com/Kludex/python-multipart/commit/8e59febf3ad42f2b09a42bb06b19cfdb05dd1656\"><code>8e59feb</code></a> Use single quotes to avoid special zsh chars '[' and ']' (<a href=\"https://redirect.github.com/andrew-d/python-multipart/issues/71\">#71</a>)</li>\n<li><a href=\"https://github.com/Kludex/python-multipart/commit/86d422ca6f070f5af8c7ba2cafd218408fa6c58b\"><code>86d422c</code></a> Update changelog URL (<a href=\"https://redirect.github.com/andrew-d/python-multipart/issues/68\">#68</a>)</li>\n<li><a href=\"https://github.com/Kludex/python-multipart/commit/3929f8e5018c3c0ab60737734d0a0e64a1c2536d\"><code>3929f8e</code></a> Move tests folder to root folder (<a href=\"https://redirect.github.com/andrew-d/python-multipart/issues/61\">#61</a>)</li>\n<li>See full diff in <a href=\"https://github.com/andrew-d/python-multipart/compare/0.0.6...0.0.7\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=python-multipart&package-manager=pip&previous-version=0.0.6&new-version=0.0.7)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/srbhr/Resume-Matcher/network/alerts).\n\n</details>",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "state",
          "value": "open",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": "archive/requirements_colab.txt",
          "qualifier": "files"
        },
        {
          "objectId": "dependabot[bot]",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "archive/requirements_colab.txt",
          "qualifier": "aggregates"
        },
        {
          "objectId": "dependabot[bot]",
          "qualifier": "has-participant"
        },
        {
          "objectId": "861270fe9d126d8dfc1c3d38f0f54f68d8143003",
          "qualifier": "commits"
        },
        {
          "objectId": "081bace62221f213f57f2f7d5e09db419bce3718",
          "qualifier": "is-merged-with"
        },
        {
          "objectId": "861270fe9d126d8dfc1c3d38f0f54f68d8143003",
          "qualifier": "formalises"
        }
      ],
      "id": "237"
    },
    {
      "type": "pull_request",
      "attributes": [
        {
          "name": "title",
          "value": "Chore(deps): Bump python-multipart from 0.0.6 to 0.0.7",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "description",
          "value": "Bumps [python-multipart](https://github.com/andrew-d/python-multipart) from 0.0.6 to 0.0.7.\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/Kludex/python-multipart/blob/master/CHANGELOG.md\">python-multipart's changelog</a>.</em></p>\n<blockquote>\n<h2>0.0.7 (2024-02-03)</h2>\n<ul>\n<li>Refactor header option parser to use the standard library instead of a custom RegEx <a href=\"https://redirect.github.com/andrew-d/python-multipart/pull/75\">#75</a>.</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/Kludex/python-multipart/commit/c83e6da1a3a6ed002ebb22138baa1664134d540c\"><code>c83e6da</code></a> Version 0.0.7 (<a href=\"https://redirect.github.com/andrew-d/python-multipart/issues/77\">#77</a>)</li>\n<li><a href=\"https://github.com/Kludex/python-multipart/commit/fb7d3c92dd07d63e6f02a2a2d0350cebdf356e3a\"><code>fb7d3c9</code></a> Bump pygments from 2.7.4 to 2.15.0 (<a href=\"https://redirect.github.com/andrew-d/python-multipart/issues/66\">#66</a>)</li>\n<li><a href=\"https://github.com/Kludex/python-multipart/commit/20f0ef6b4e4caf7d69a667c54dff57fe467109a4\"><code>20f0ef6</code></a> \u267b\ufe0f Refactor header option parser to use the standard library instead of a cus...</li>\n<li><a href=\"https://github.com/Kludex/python-multipart/commit/d3d16dae4b061c34fe9d3c9081d9800c49fc1f7a\"><code>d3d16da</code></a> Use latest invoke version (2.2.0) (<a href=\"https://redirect.github.com/andrew-d/python-multipart/issues/73\">#73</a>)</li>\n<li><a href=\"https://github.com/Kludex/python-multipart/commit/8e59febf3ad42f2b09a42bb06b19cfdb05dd1656\"><code>8e59feb</code></a> Use single quotes to avoid special zsh chars '[' and ']' (<a href=\"https://redirect.github.com/andrew-d/python-multipart/issues/71\">#71</a>)</li>\n<li><a href=\"https://github.com/Kludex/python-multipart/commit/86d422ca6f070f5af8c7ba2cafd218408fa6c58b\"><code>86d422c</code></a> Update changelog URL (<a href=\"https://redirect.github.com/andrew-d/python-multipart/issues/68\">#68</a>)</li>\n<li><a href=\"https://github.com/Kludex/python-multipart/commit/3929f8e5018c3c0ab60737734d0a0e64a1c2536d\"><code>3929f8e</code></a> Move tests folder to root folder (<a href=\"https://redirect.github.com/andrew-d/python-multipart/issues/61\">#61</a>)</li>\n<li>See full diff in <a href=\"https://github.com/andrew-d/python-multipart/compare/0.0.6...0.0.7\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=python-multipart&package-manager=pip&previous-version=0.0.6&new-version=0.0.7)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/srbhr/Resume-Matcher/network/alerts).\n\n</details>",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "state",
          "value": "open",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": "requirements.txt",
          "qualifier": "files"
        },
        {
          "objectId": "dependabot[bot]",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "requirements.txt",
          "qualifier": "aggregates"
        },
        {
          "objectId": "dependabot[bot]",
          "qualifier": "has-participant"
        },
        {
          "objectId": "8f73177340b422aa483f702a3a3ceb524892e05f",
          "qualifier": "commits"
        },
        {
          "objectId": "1f4b1ac617d7efaff7cf3a3bbd0e0f895f5ef358",
          "qualifier": "is-merged-with"
        },
        {
          "objectId": "8f73177340b422aa483f702a3a3ceb524892e05f",
          "qualifier": "formalises"
        }
      ],
      "id": "236"
    },
    {
      "type": "pull_request",
      "attributes": [
        {
          "name": "title",
          "value": "Chore(deps): Bump fastapi from 0.101.1 to 0.109.1 in /archive",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "description",
          "value": "Bumps [fastapi](https://github.com/tiangolo/fastapi) from 0.101.1 to 0.109.1.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/tiangolo/fastapi/releases\">fastapi's releases</a>.</em></p>\n<blockquote>\n<h2>0.109.1</h2>\n<h3>Security fixes</h3>\n<ul>\n<li>\u2b06\ufe0f Upgrade minimum version of <code>python-multipart</code> to <code>&gt;=0.0.7</code> to fix a vulnerability when using form data with a ReDos attack. You can also simply upgrade <code>python-multipart</code>.</li>\n</ul>\n<p>Read more in the <a href=\"https://github.com/tiangolo/fastapi/security/advisories/GHSA-qf9m-vfgh-m389\">advisory: Content-Type Header ReDoS</a>.</p>\n<h3>Features</h3>\n<ul>\n<li>\u2728  Include HTTP 205 in status codes with no body. PR <a href=\"https://redirect.github.com/tiangolo/fastapi/pull/10969\">#10969</a> by <a href=\"https://github.com/tiangolo\"><code>@\u200btiangolo</code></a>.</li>\n</ul>\n<h3>Refactors</h3>\n<ul>\n<li>\u2705 Refactor tests for duplicate operation ID generation for compatibility with other tools running the FastAPI test suite. PR <a href=\"https://redirect.github.com/tiangolo/fastapi/pull/10876\">#10876</a> by <a href=\"https://github.com/emmettbutler\"><code>@\u200bemmettbutler</code></a>.</li>\n<li>\u267b\ufe0f Simplify string format with f-strings in <code>fastapi/utils.py</code>. PR <a href=\"https://redirect.github.com/tiangolo/fastapi/pull/10576\">#10576</a> by <a href=\"https://github.com/eukub\"><code>@\u200beukub</code></a>.</li>\n<li>\ud83d\udd27 Fix Ruff configuration unintentionally enabling and re-disabling mccabe complexity check. PR <a href=\"https://redirect.github.com/tiangolo/fastapi/pull/10893\">#10893</a> by <a href=\"https://github.com/jiridanek\"><code>@\u200bjiridanek</code></a>.</li>\n<li>\u2705 Re-enable test in <code>tests/test_tutorial/test_header_params/test_tutorial003.py</code> after fix in Starlette. PR <a href=\"https://redirect.github.com/tiangolo/fastapi/pull/10904\">#10904</a> by <a href=\"https://github.com/ooknimm\"><code>@\u200booknimm</code></a>.</li>\n</ul>\n<h3>Docs</h3>\n<ul>\n<li>\ud83d\udcdd Tweak wording in <code>help-fastapi.md</code>. PR <a href=\"https://redirect.github.com/tiangolo/fastapi/pull/11040\">#11040</a> by <a href=\"https://github.com/tiangolo\"><code>@\u200btiangolo</code></a>.</li>\n<li>\ud83d\udcdd Tweak docs for Behind a Proxy. PR <a href=\"https://redirect.github.com/tiangolo/fastapi/pull/11038\">#11038</a> by <a href=\"https://github.com/tiangolo\"><code>@\u200btiangolo</code></a>.</li>\n<li>\ud83d\udcdd Add External Link: 10 Tips for adding SQLAlchemy to FastAPI. PR <a href=\"https://redirect.github.com/tiangolo/fastapi/pull/11036\">#11036</a> by <a href=\"https://github.com/Donnype\"><code>@\u200bDonnype</code></a>.</li>\n<li>\ud83d\udcdd Add External Link: Tips on migrating from Flask to FastAPI and vice-versa. PR <a href=\"https://redirect.github.com/tiangolo/fastapi/pull/11029\">#11029</a> by <a href=\"https://github.com/jtemporal\"><code>@\u200bjtemporal</code></a>.</li>\n<li>\ud83d\udcdd Deprecate old tutorials: Peewee, Couchbase, encode/databases. PR <a href=\"https://redirect.github.com/tiangolo/fastapi/pull/10979\">#10979</a> by <a href=\"https://github.com/tiangolo\"><code>@\u200btiangolo</code></a>.</li>\n<li>\u270f\ufe0f Fix typo in <code>fastapi/security/oauth2.py</code>. PR <a href=\"https://redirect.github.com/tiangolo/fastapi/pull/10972\">#10972</a> by <a href=\"https://github.com/RafalSkolasinski\"><code>@\u200bRafalSkolasinski</code></a>.</li>\n<li>\ud83d\udcdd Update <code>HTTPException</code> details in <code>docs/en/docs/tutorial/handling-errors.md</code>. PR <a href=\"https://redirect.github.com/tiangolo/fastapi/pull/5418\">#5418</a> by <a href=\"https://github.com/papb\"><code>@\u200bpapb</code></a>.</li>\n<li>\u270f\ufe0f A few tweaks in <code>docs/de/docs/tutorial/first-steps.md</code>. PR <a href=\"https://redirect.github.com/tiangolo/fastapi/pull/10959\">#10959</a> by <a href=\"https://github.com/nilslindemann\"><code>@\u200bnilslindemann</code></a>.</li>\n<li>\u270f\ufe0f Fix link in <code>docs/en/docs/advanced/async-tests.md</code>. PR <a href=\"https://redirect.github.com/tiangolo/fastapi/pull/10960\">#10960</a> by <a href=\"https://github.com/nilslindemann\"><code>@\u200bnilslindemann</code></a>.</li>\n<li>\u270f\ufe0f Fix typos for Spanish documentation. PR <a href=\"https://redirect.github.com/tiangolo/fastapi/pull/10957\">#10957</a> by <a href=\"https://github.com/jlopezlira\"><code>@\u200bjlopezlira</code></a>.</li>\n<li>\ud83d\udcdd Add warning about lifespan functions and backwards compatibility with events. PR <a href=\"https://redirect.github.com/tiangolo/fastapi/pull/10734\">#10734</a> by <a href=\"https://github.com/jacob-indigo\"><code>@\u200bjacob-indigo</code></a>.</li>\n<li>\u270f\ufe0f Fix broken link in <code>docs/tutorial/sql-databases.md</code> in several languages. PR <a href=\"https://redirect.github.com/tiangolo/fastapi/pull/10716\">#10716</a> by <a href=\"https://github.com/theoohoho\"><code>@\u200btheoohoho</code></a>.</li>\n<li>\u270f\ufe0f Remove broken links from <code>external_links.yml</code>. PR <a href=\"https://redirect.github.com/tiangolo/fastapi/pull/10943\">#10943</a> by <a href=\"https://github.com/Torabek\"><code>@\u200bTorabek</code></a>.</li>\n<li>\ud83d\udcdd Update template docs with more info about <code>url_for</code>. PR <a href=\"https://redirect.github.com/tiangolo/fastapi/pull/5937\">#5937</a> by <a href=\"https://github.com/EzzEddin\"><code>@\u200bEzzEddin</code></a>.</li>\n<li>\ud83d\udcdd Update usage of Token model in security docs. PR <a href=\"https://redirect.github.com/tiangolo/fastapi/pull/9313\">#9313</a> by <a href=\"https://github.com/piotrszacilowski\"><code>@\u200bpiotrszacilowski</code></a>.</li>\n<li>\u270f\ufe0f Update highlighted line in <code>docs/en/docs/tutorial/bigger-applications.md</code>. PR <a href=\"https://redirect.github.com/tiangolo/fastapi/pull/5490\">#5490</a> by <a href=\"https://github.com/papb\"><code>@\u200bpapb</code></a>.</li>\n<li>\ud83d\udcdd Add External Link: Explore How to Effectively Use JWT With FastAPI. PR <a href=\"https://redirect.github.com/tiangolo/fastapi/pull/10212\">#10212</a> by <a href=\"https://github.com/aanchlia\"><code>@\u200baanchlia</code></a>.</li>\n<li>\ud83d\udcdd Add hyperlink to <code>docs/en/docs/tutorial/static-files.md</code>. PR <a href=\"https://redirect.github.com/tiangolo/fastapi/pull/10243\">#10243</a> by <a href=\"https://github.com/hungtsetse\"><code>@\u200bhungtsetse</code></a>.</li>\n<li>\ud83d\udcdd Add External Link: Instrument a FastAPI service adding tracing with OpenTelemetry and send/show traces in Grafana Tempo. PR <a href=\"https://redirect.github.com/tiangolo/fastapi/pull/9440\">#9440</a> by <a href=\"https://github.com/softwarebloat\"><code>@\u200bsoftwarebloat</code></a>.</li>\n<li>\ud83d\udcdd Review and rewording of <code>en/docs/contributing.md</code>. PR <a href=\"https://redirect.github.com/tiangolo/fastapi/pull/10480\">#10480</a> by <a href=\"https://github.com/nilslindemann\"><code>@\u200bnilslindemann</code></a>.</li>\n<li>\ud83d\udcdd Add External Link: ML serving and monitoring with FastAPI and Evidently. PR <a href=\"https://redirect.github.com/tiangolo/fastapi/pull/9701\">#9701</a> by <a href=\"https://github.com/mnrozhkov\"><code>@\u200bmnrozhkov</code></a>.</li>\n<li>\ud83d\udcdd Reword in docs, from &quot;have in mind&quot; to &quot;keep in mind&quot;. PR <a href=\"https://redirect.github.com/tiangolo/fastapi/pull/10376\">#10376</a> by <a href=\"https://github.com/malicious\"><code>@\u200bmalicious</code></a>.</li>\n<li>\ud83d\udcdd Add External Link: Talk by Jeny Sadadia. PR <a href=\"https://redirect.github.com/tiangolo/fastapi/pull/10265\">#10265</a> by <a href=\"https://github.com/JenySadadia\"><code>@\u200bJenySadadia</code></a>.</li>\n<li>\ud83d\udcdd Add location info to <code>tutorial/bigger-applications.md</code>. PR <a href=\"https://redirect.github.com/tiangolo/fastapi/pull/10552\">#10552</a> by <a href=\"https://github.com/nilslindemann\"><code>@\u200bnilslindemann</code></a>.</li>\n<li>\u270f\ufe0f Fix Pydantic method name in <code>docs/en/docs/advanced/path-operation-advanced-configuration.md</code>. PR <a href=\"https://redirect.github.com/tiangolo/fastapi/pull/10826\">#10826</a> by <a href=\"https://github.com/ahmedabdou14\"><code>@\u200bahmedabdou14</code></a>.</li>\n</ul>\n<h3>Translations</h3>\n<ul>\n<li>\ud83c\udf10 Add Spanish translation for <code>docs/es/docs/external-links.md</code>. PR <a href=\"https://redirect.github.com/tiangolo/fastapi/pull/10933\">#10933</a> by <a href=\"https://github.com/pablocm83\"><code>@\u200bpablocm83</code></a>.</li>\n<li>\ud83c\udf10 Update Korean translation for <code>docs/ko/docs/tutorial/first-steps.md</code>, <code>docs/ko/docs/tutorial/index.md</code>, <code>docs/ko/docs/tutorial/path-params.md</code>, and <code>docs/ko/docs/tutorial/query-params.md</code>. PR <a href=\"https://redirect.github.com/tiangolo/fastapi/pull/4218\">#4218</a> by <a href=\"https://github.com/SnowSuno\"><code>@\u200bSnowSuno</code></a>.</li>\n</ul>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/tiangolo/fastapi/commit/7633d1571cc0c2792b766f67172edb9427c66899\"><code>7633d15</code></a> \ud83d\udd16 Release version 0.109.1</li>\n<li><a href=\"https://github.com/tiangolo/fastapi/commit/a4de147521bf1546f700aa494d99fce1bed0741b\"><code>a4de147</code></a> \ud83d\udcdd Update release notes</li>\n<li><a href=\"https://github.com/tiangolo/fastapi/commit/9d34ad0ee8a0dfbbcce06f76c2d5d851085024fc\"><code>9d34ad0</code></a> Merge pull request from GHSA-qf9m-vfgh-m389</li>\n<li><a href=\"https://github.com/tiangolo/fastapi/commit/ebf972349431043170c1f6a4550bd29642f09cd2\"><code>ebf9723</code></a> \ud83d\udcdd Update release notes</li>\n<li><a href=\"https://github.com/tiangolo/fastapi/commit/8590d0c2ec301d01da68ad3032f9b119d616a644\"><code>8590d0c</code></a> \ud83d\udc65 Update FastAPI People (<a href=\"https://redirect.github.com/tiangolo/fastapi/issues/11074\">#11074</a>)</li>\n<li><a href=\"https://github.com/tiangolo/fastapi/commit/063d7ffb15c4d1fe88745a8d2d2c9202d44046c5\"><code>063d7ff</code></a> \ud83d\udcdd Update release notes</li>\n<li><a href=\"https://github.com/tiangolo/fastapi/commit/3c81e622f3783920ef3e3d4ecfae12c5511747bf\"><code>3c81e62</code></a> \ud83c\udf10 Add Spanish translation for <code>docs/es/docs/external-links.md</code> (<a href=\"https://redirect.github.com/tiangolo/fastapi/issues/10933\">#10933</a>)</li>\n<li><a href=\"https://github.com/tiangolo/fastapi/commit/6c4a143fd0fb2a9963ca60938c4a2bf69573aeca\"><code>6c4a143</code></a> \ud83d\udcdd Update release notes</li>\n<li><a href=\"https://github.com/tiangolo/fastapi/commit/d254e2f6ad773cf6694b7c1917c5792e9f805fd0\"><code>d254e2f</code></a> \ud83c\udf10 Update Korean translation for <code>docs/ko/docs/tutorial/first-steps.md</code>, `docs...</li>\n<li><a href=\"https://github.com/tiangolo/fastapi/commit/6f6e786979eb3156b85e7c2f44d0b8af5cf0af17\"><code>6f6e786</code></a> \ud83d\udcdd Update release notes</li>\n<li>Additional commits viewable in <a href=\"https://github.com/tiangolo/fastapi/compare/0.101.1...0.109.1\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=fastapi&package-manager=pip&previous-version=0.101.1&new-version=0.109.1)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/srbhr/Resume-Matcher/network/alerts).\n\n</details>",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "state",
          "value": "open",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": "archive/requirements_colab.txt",
          "qualifier": "files"
        },
        {
          "objectId": "dependabot[bot]",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "archive/requirements_colab.txt",
          "qualifier": "aggregates"
        },
        {
          "objectId": "dependabot[bot]",
          "qualifier": "has-participant"
        },
        {
          "objectId": "f7894b207634827605205ccfaec06d6fc69cbf2b",
          "qualifier": "commits"
        },
        {
          "objectId": "620043f68a02fca9543f225147415913350c2a01",
          "qualifier": "is-merged-with"
        },
        {
          "objectId": "f7894b207634827605205ccfaec06d6fc69cbf2b",
          "qualifier": "formalises"
        }
      ],
      "id": "235"
    },
    {
      "type": "pull_request",
      "attributes": [
        {
          "name": "title",
          "value": "Chore(deps): Bump fastapi from 0.101.1 to 0.109.1",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "description",
          "value": "Bumps [fastapi](https://github.com/tiangolo/fastapi) from 0.101.1 to 0.109.1.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/tiangolo/fastapi/releases\">fastapi's releases</a>.</em></p>\n<blockquote>\n<h2>0.109.1</h2>\n<h3>Security fixes</h3>\n<ul>\n<li>\u2b06\ufe0f Upgrade minimum version of <code>python-multipart</code> to <code>&gt;=0.0.7</code> to fix a vulnerability when using form data with a ReDos attack. You can also simply upgrade <code>python-multipart</code>.</li>\n</ul>\n<p>Read more in the <a href=\"https://github.com/tiangolo/fastapi/security/advisories/GHSA-qf9m-vfgh-m389\">advisory: Content-Type Header ReDoS</a>.</p>\n<h3>Features</h3>\n<ul>\n<li>\u2728  Include HTTP 205 in status codes with no body. PR <a href=\"https://redirect.github.com/tiangolo/fastapi/pull/10969\">#10969</a> by <a href=\"https://github.com/tiangolo\"><code>@\u200btiangolo</code></a>.</li>\n</ul>\n<h3>Refactors</h3>\n<ul>\n<li>\u2705 Refactor tests for duplicate operation ID generation for compatibility with other tools running the FastAPI test suite. PR <a href=\"https://redirect.github.com/tiangolo/fastapi/pull/10876\">#10876</a> by <a href=\"https://github.com/emmettbutler\"><code>@\u200bemmettbutler</code></a>.</li>\n<li>\u267b\ufe0f Simplify string format with f-strings in <code>fastapi/utils.py</code>. PR <a href=\"https://redirect.github.com/tiangolo/fastapi/pull/10576\">#10576</a> by <a href=\"https://github.com/eukub\"><code>@\u200beukub</code></a>.</li>\n<li>\ud83d\udd27 Fix Ruff configuration unintentionally enabling and re-disabling mccabe complexity check. PR <a href=\"https://redirect.github.com/tiangolo/fastapi/pull/10893\">#10893</a> by <a href=\"https://github.com/jiridanek\"><code>@\u200bjiridanek</code></a>.</li>\n<li>\u2705 Re-enable test in <code>tests/test_tutorial/test_header_params/test_tutorial003.py</code> after fix in Starlette. PR <a href=\"https://redirect.github.com/tiangolo/fastapi/pull/10904\">#10904</a> by <a href=\"https://github.com/ooknimm\"><code>@\u200booknimm</code></a>.</li>\n</ul>\n<h3>Docs</h3>\n<ul>\n<li>\ud83d\udcdd Tweak wording in <code>help-fastapi.md</code>. PR <a href=\"https://redirect.github.com/tiangolo/fastapi/pull/11040\">#11040</a> by <a href=\"https://github.com/tiangolo\"><code>@\u200btiangolo</code></a>.</li>\n<li>\ud83d\udcdd Tweak docs for Behind a Proxy. PR <a href=\"https://redirect.github.com/tiangolo/fastapi/pull/11038\">#11038</a> by <a href=\"https://github.com/tiangolo\"><code>@\u200btiangolo</code></a>.</li>\n<li>\ud83d\udcdd Add External Link: 10 Tips for adding SQLAlchemy to FastAPI. PR <a href=\"https://redirect.github.com/tiangolo/fastapi/pull/11036\">#11036</a> by <a href=\"https://github.com/Donnype\"><code>@\u200bDonnype</code></a>.</li>\n<li>\ud83d\udcdd Add External Link: Tips on migrating from Flask to FastAPI and vice-versa. PR <a href=\"https://redirect.github.com/tiangolo/fastapi/pull/11029\">#11029</a> by <a href=\"https://github.com/jtemporal\"><code>@\u200bjtemporal</code></a>.</li>\n<li>\ud83d\udcdd Deprecate old tutorials: Peewee, Couchbase, encode/databases. PR <a href=\"https://redirect.github.com/tiangolo/fastapi/pull/10979\">#10979</a> by <a href=\"https://github.com/tiangolo\"><code>@\u200btiangolo</code></a>.</li>\n<li>\u270f\ufe0f Fix typo in <code>fastapi/security/oauth2.py</code>. PR <a href=\"https://redirect.github.com/tiangolo/fastapi/pull/10972\">#10972</a> by <a href=\"https://github.com/RafalSkolasinski\"><code>@\u200bRafalSkolasinski</code></a>.</li>\n<li>\ud83d\udcdd Update <code>HTTPException</code> details in <code>docs/en/docs/tutorial/handling-errors.md</code>. PR <a href=\"https://redirect.github.com/tiangolo/fastapi/pull/5418\">#5418</a> by <a href=\"https://github.com/papb\"><code>@\u200bpapb</code></a>.</li>\n<li>\u270f\ufe0f A few tweaks in <code>docs/de/docs/tutorial/first-steps.md</code>. PR <a href=\"https://redirect.github.com/tiangolo/fastapi/pull/10959\">#10959</a> by <a href=\"https://github.com/nilslindemann\"><code>@\u200bnilslindemann</code></a>.</li>\n<li>\u270f\ufe0f Fix link in <code>docs/en/docs/advanced/async-tests.md</code>. PR <a href=\"https://redirect.github.com/tiangolo/fastapi/pull/10960\">#10960</a> by <a href=\"https://github.com/nilslindemann\"><code>@\u200bnilslindemann</code></a>.</li>\n<li>\u270f\ufe0f Fix typos for Spanish documentation. PR <a href=\"https://redirect.github.com/tiangolo/fastapi/pull/10957\">#10957</a> by <a href=\"https://github.com/jlopezlira\"><code>@\u200bjlopezlira</code></a>.</li>\n<li>\ud83d\udcdd Add warning about lifespan functions and backwards compatibility with events. PR <a href=\"https://redirect.github.com/tiangolo/fastapi/pull/10734\">#10734</a> by <a href=\"https://github.com/jacob-indigo\"><code>@\u200bjacob-indigo</code></a>.</li>\n<li>\u270f\ufe0f Fix broken link in <code>docs/tutorial/sql-databases.md</code> in several languages. PR <a href=\"https://redirect.github.com/tiangolo/fastapi/pull/10716\">#10716</a> by <a href=\"https://github.com/theoohoho\"><code>@\u200btheoohoho</code></a>.</li>\n<li>\u270f\ufe0f Remove broken links from <code>external_links.yml</code>. PR <a href=\"https://redirect.github.com/tiangolo/fastapi/pull/10943\">#10943</a> by <a href=\"https://github.com/Torabek\"><code>@\u200bTorabek</code></a>.</li>\n<li>\ud83d\udcdd Update template docs with more info about <code>url_for</code>. PR <a href=\"https://redirect.github.com/tiangolo/fastapi/pull/5937\">#5937</a> by <a href=\"https://github.com/EzzEddin\"><code>@\u200bEzzEddin</code></a>.</li>\n<li>\ud83d\udcdd Update usage of Token model in security docs. PR <a href=\"https://redirect.github.com/tiangolo/fastapi/pull/9313\">#9313</a> by <a href=\"https://github.com/piotrszacilowski\"><code>@\u200bpiotrszacilowski</code></a>.</li>\n<li>\u270f\ufe0f Update highlighted line in <code>docs/en/docs/tutorial/bigger-applications.md</code>. PR <a href=\"https://redirect.github.com/tiangolo/fastapi/pull/5490\">#5490</a> by <a href=\"https://github.com/papb\"><code>@\u200bpapb</code></a>.</li>\n<li>\ud83d\udcdd Add External Link: Explore How to Effectively Use JWT With FastAPI. PR <a href=\"https://redirect.github.com/tiangolo/fastapi/pull/10212\">#10212</a> by <a href=\"https://github.com/aanchlia\"><code>@\u200baanchlia</code></a>.</li>\n<li>\ud83d\udcdd Add hyperlink to <code>docs/en/docs/tutorial/static-files.md</code>. PR <a href=\"https://redirect.github.com/tiangolo/fastapi/pull/10243\">#10243</a> by <a href=\"https://github.com/hungtsetse\"><code>@\u200bhungtsetse</code></a>.</li>\n<li>\ud83d\udcdd Add External Link: Instrument a FastAPI service adding tracing with OpenTelemetry and send/show traces in Grafana Tempo. PR <a href=\"https://redirect.github.com/tiangolo/fastapi/pull/9440\">#9440</a> by <a href=\"https://github.com/softwarebloat\"><code>@\u200bsoftwarebloat</code></a>.</li>\n<li>\ud83d\udcdd Review and rewording of <code>en/docs/contributing.md</code>. PR <a href=\"https://redirect.github.com/tiangolo/fastapi/pull/10480\">#10480</a> by <a href=\"https://github.com/nilslindemann\"><code>@\u200bnilslindemann</code></a>.</li>\n<li>\ud83d\udcdd Add External Link: ML serving and monitoring with FastAPI and Evidently. PR <a href=\"https://redirect.github.com/tiangolo/fastapi/pull/9701\">#9701</a> by <a href=\"https://github.com/mnrozhkov\"><code>@\u200bmnrozhkov</code></a>.</li>\n<li>\ud83d\udcdd Reword in docs, from &quot;have in mind&quot; to &quot;keep in mind&quot;. PR <a href=\"https://redirect.github.com/tiangolo/fastapi/pull/10376\">#10376</a> by <a href=\"https://github.com/malicious\"><code>@\u200bmalicious</code></a>.</li>\n<li>\ud83d\udcdd Add External Link: Talk by Jeny Sadadia. PR <a href=\"https://redirect.github.com/tiangolo/fastapi/pull/10265\">#10265</a> by <a href=\"https://github.com/JenySadadia\"><code>@\u200bJenySadadia</code></a>.</li>\n<li>\ud83d\udcdd Add location info to <code>tutorial/bigger-applications.md</code>. PR <a href=\"https://redirect.github.com/tiangolo/fastapi/pull/10552\">#10552</a> by <a href=\"https://github.com/nilslindemann\"><code>@\u200bnilslindemann</code></a>.</li>\n<li>\u270f\ufe0f Fix Pydantic method name in <code>docs/en/docs/advanced/path-operation-advanced-configuration.md</code>. PR <a href=\"https://redirect.github.com/tiangolo/fastapi/pull/10826\">#10826</a> by <a href=\"https://github.com/ahmedabdou14\"><code>@\u200bahmedabdou14</code></a>.</li>\n</ul>\n<h3>Translations</h3>\n<ul>\n<li>\ud83c\udf10 Add Spanish translation for <code>docs/es/docs/external-links.md</code>. PR <a href=\"https://redirect.github.com/tiangolo/fastapi/pull/10933\">#10933</a> by <a href=\"https://github.com/pablocm83\"><code>@\u200bpablocm83</code></a>.</li>\n<li>\ud83c\udf10 Update Korean translation for <code>docs/ko/docs/tutorial/first-steps.md</code>, <code>docs/ko/docs/tutorial/index.md</code>, <code>docs/ko/docs/tutorial/path-params.md</code>, and <code>docs/ko/docs/tutorial/query-params.md</code>. PR <a href=\"https://redirect.github.com/tiangolo/fastapi/pull/4218\">#4218</a> by <a href=\"https://github.com/SnowSuno\"><code>@\u200bSnowSuno</code></a>.</li>\n</ul>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/tiangolo/fastapi/commit/7633d1571cc0c2792b766f67172edb9427c66899\"><code>7633d15</code></a> \ud83d\udd16 Release version 0.109.1</li>\n<li><a href=\"https://github.com/tiangolo/fastapi/commit/a4de147521bf1546f700aa494d99fce1bed0741b\"><code>a4de147</code></a> \ud83d\udcdd Update release notes</li>\n<li><a href=\"https://github.com/tiangolo/fastapi/commit/9d34ad0ee8a0dfbbcce06f76c2d5d851085024fc\"><code>9d34ad0</code></a> Merge pull request from GHSA-qf9m-vfgh-m389</li>\n<li><a href=\"https://github.com/tiangolo/fastapi/commit/ebf972349431043170c1f6a4550bd29642f09cd2\"><code>ebf9723</code></a> \ud83d\udcdd Update release notes</li>\n<li><a href=\"https://github.com/tiangolo/fastapi/commit/8590d0c2ec301d01da68ad3032f9b119d616a644\"><code>8590d0c</code></a> \ud83d\udc65 Update FastAPI People (<a href=\"https://redirect.github.com/tiangolo/fastapi/issues/11074\">#11074</a>)</li>\n<li><a href=\"https://github.com/tiangolo/fastapi/commit/063d7ffb15c4d1fe88745a8d2d2c9202d44046c5\"><code>063d7ff</code></a> \ud83d\udcdd Update release notes</li>\n<li><a href=\"https://github.com/tiangolo/fastapi/commit/3c81e622f3783920ef3e3d4ecfae12c5511747bf\"><code>3c81e62</code></a> \ud83c\udf10 Add Spanish translation for <code>docs/es/docs/external-links.md</code> (<a href=\"https://redirect.github.com/tiangolo/fastapi/issues/10933\">#10933</a>)</li>\n<li><a href=\"https://github.com/tiangolo/fastapi/commit/6c4a143fd0fb2a9963ca60938c4a2bf69573aeca\"><code>6c4a143</code></a> \ud83d\udcdd Update release notes</li>\n<li><a href=\"https://github.com/tiangolo/fastapi/commit/d254e2f6ad773cf6694b7c1917c5792e9f805fd0\"><code>d254e2f</code></a> \ud83c\udf10 Update Korean translation for <code>docs/ko/docs/tutorial/first-steps.md</code>, `docs...</li>\n<li><a href=\"https://github.com/tiangolo/fastapi/commit/6f6e786979eb3156b85e7c2f44d0b8af5cf0af17\"><code>6f6e786</code></a> \ud83d\udcdd Update release notes</li>\n<li>Additional commits viewable in <a href=\"https://github.com/tiangolo/fastapi/compare/0.101.1...0.109.1\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=fastapi&package-manager=pip&previous-version=0.101.1&new-version=0.109.1)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nYou can trigger a rebase of this PR by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/srbhr/Resume-Matcher/network/alerts).\n\n</details>\n\n> **Note**\n> Automatic rebases have been disabled on this pull request as it has been open for over 30 days.\n",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "state",
          "value": "open",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": "requirements.txt",
          "qualifier": "files"
        },
        {
          "objectId": "dependabot[bot]",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "requirements.txt",
          "qualifier": "aggregates"
        },
        {
          "objectId": "dependabot[bot]",
          "qualifier": "has-participant"
        },
        {
          "objectId": "0f2ed22fc92382f7b152a06851bfbc2139a33190",
          "qualifier": "commits"
        },
        {
          "objectId": "9ba100d28eab35969420846085c0cdf517dbf801",
          "qualifier": "is-merged-with"
        },
        {
          "objectId": "0f2ed22fc92382f7b152a06851bfbc2139a33190",
          "qualifier": "formalises"
        }
      ],
      "id": "234"
    },
    {
      "type": "pull_request",
      "attributes": [
        {
          "name": "title",
          "value": "Chore(deps): Bump pillow from 9.5.0 to 10.2.0 in /archive",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "description",
          "value": "Bumps [pillow](https://github.com/python-pillow/Pillow) from 9.5.0 to 10.2.0.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/python-pillow/Pillow/releases\">pillow's releases</a>.</em></p>\n<blockquote>\n<h2>10.2.0</h2>\n<p><a href=\"https://pillow.readthedocs.io/en/stable/releasenotes/10.2.0.html\">https://pillow.readthedocs.io/en/stable/releasenotes/10.2.0.html</a></p>\n<h2>Changes</h2>\n<ul>\n<li>Add <code>keep_rgb</code> option when saving JPEG to prevent conversion of RGB colorspace <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7553\">#7553</a> [<a href=\"https://github.com/bgilbert\"><code>@\u200bbgilbert</code></a>]</li>\n<li>Trim negative glyph offsets in ImageFont.getmask() <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7672\">#7672</a> [<a href=\"https://github.com/nulano\"><code>@\u200bnulano</code></a>]</li>\n<li>Removed unnecessary &quot;pragma: no cover&quot; <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7668\">#7668</a> [<a href=\"https://github.com/radarhere\"><code>@\u200bradarhere</code></a>]</li>\n<li>Trim glyph size in ImageFont.getmask() <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7669\">#7669</a> [<a href=\"https://github.com/radarhere\"><code>@\u200bradarhere</code></a>]</li>\n<li>Fix loading IPTC images and update test <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7667\">#7667</a> [<a href=\"https://github.com/nulano\"><code>@\u200bnulano</code></a>]</li>\n<li>Allow uncompressed TIFF images to be saved in chunks <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7650\">#7650</a> [<a href=\"https://github.com/radarhere\"><code>@\u200bradarhere</code></a>]</li>\n<li>Concatenate multiple JPEG EXIF markers <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7496\">#7496</a> [<a href=\"https://github.com/radarhere\"><code>@\u200bradarhere</code></a>]</li>\n<li>Changed IPTC tile tuple to match other plugins <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7661\">#7661</a> [<a href=\"https://github.com/radarhere\"><code>@\u200bradarhere</code></a>]</li>\n<li>Do not assign new fp attribute when exiting context manager <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7566\">#7566</a> [<a href=\"https://github.com/radarhere\"><code>@\u200bradarhere</code></a>]</li>\n<li>Support arbitrary masks for uncompressed RGB DDS images <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7589\">#7589</a> [<a href=\"https://github.com/radarhere\"><code>@\u200bradarhere</code></a>]</li>\n<li>Support setting ROWSPERSTRIP tag <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7654\">#7654</a> [<a href=\"https://github.com/radarhere\"><code>@\u200bradarhere</code></a>]</li>\n<li>Apply ImageFont.MAX_STRING_LENGTH to ImageFont.getmask() <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7662\">#7662</a> [<a href=\"https://github.com/radarhere\"><code>@\u200bradarhere</code></a>]</li>\n<li>Optimise <code>ImageColor</code> using <code>functools.lru_cache</code> <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7657\">#7657</a> [<a href=\"https://github.com/hugovk\"><code>@\u200bhugovk</code></a>]</li>\n<li>Restricted environment keys for ImageMath.eval() <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7655\">#7655</a> [<a href=\"https://github.com/radarhere\"><code>@\u200bradarhere</code></a>]</li>\n<li>Optimise <code>ImageMode.getmode</code> using <code>functools.lru_cache</code> <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7641\">#7641</a> [<a href=\"https://github.com/hugovk\"><code>@\u200bhugovk</code></a>]</li>\n<li>Added trusted PyPI publishing <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7616\">#7616</a> [<a href=\"https://github.com/radarhere\"><code>@\u200bradarhere</code></a>]</li>\n<li>Compile FriBiDi for Windows ARM64 <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7629\">#7629</a> [<a href=\"https://github.com/nulano\"><code>@\u200bnulano</code></a>]</li>\n<li>Fix incorrect color blending for overlapping glyphs <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7497\">#7497</a> [<a href=\"https://github.com/ZachNagengast\"><code>@\u200bZachNagengast</code></a>]</li>\n<li>Add .git-blame-ignore-revs file <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7528\">#7528</a> [<a href=\"https://github.com/akx\"><code>@\u200bakx</code></a>]</li>\n<li>Attempt memory mapping when tile args is a string <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7565\">#7565</a> [<a href=\"https://github.com/radarhere\"><code>@\u200bradarhere</code></a>]</li>\n<li>Fill identical pixels with transparency in subsequent frames when saving GIF <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7568\">#7568</a> [<a href=\"https://github.com/radarhere\"><code>@\u200bradarhere</code></a>]</li>\n<li>Removed unnecessary string length check <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7560\">#7560</a> [<a href=\"https://github.com/radarhere\"><code>@\u200bradarhere</code></a>]</li>\n<li>Determine mask mode in Python instead of C <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7548\">#7548</a> [<a href=\"https://github.com/radarhere\"><code>@\u200bradarhere</code></a>]</li>\n<li>Corrected duration when combining multiple GIF frames into single frame <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7521\">#7521</a> [<a href=\"https://github.com/radarhere\"><code>@\u200bradarhere</code></a>]</li>\n<li>Handle disposing GIF background from outside palette <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7515\">#7515</a> [<a href=\"https://github.com/radarhere\"><code>@\u200bradarhere</code></a>]</li>\n<li>Seek past the data when skipping a PSD layer <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7483\">#7483</a> [<a href=\"https://github.com/radarhere\"><code>@\u200bradarhere</code></a>]</li>\n<li>ImageMath: Inline <code>isinstance</code> check <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7623\">#7623</a> [<a href=\"https://github.com/hugovk\"><code>@\u200bhugovk</code></a>]</li>\n<li>Update actions/upload-artifact action to v4 <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7619\">#7619</a> [<a href=\"https://github.com/radarhere\"><code>@\u200bradarhere</code></a>]</li>\n<li>Import plugins relative to the module <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7576\">#7576</a> [<a href=\"https://github.com/deliangyang\"><code>@\u200bdeliangyang</code></a>]</li>\n<li>Translate encoder error codes to strings; deprecate <code>ImageFile.raise_oserror()</code> <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7609\">#7609</a> [<a href=\"https://github.com/bgilbert\"><code>@\u200bbgilbert</code></a>]</li>\n<li>Updated readthedocs to latest version of Python <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7611\">#7611</a> [<a href=\"https://github.com/radarhere\"><code>@\u200bradarhere</code></a>]</li>\n<li>Support reading BC4U and DX10 BC1 images <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/6486\">#6486</a> [<a href=\"https://github.com/REDxEYE\"><code>@\u200bREDxEYE</code></a>]</li>\n<li>Optimize ImageStat.Stat.extrema <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7593\">#7593</a> [<a href=\"https://github.com/florath\"><code>@\u200bflorath</code></a>]</li>\n<li>Handle pathlib.Path in FreeTypeFont <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7578\">#7578</a> [<a href=\"https://github.com/radarhere\"><code>@\u200bradarhere</code></a>]</li>\n<li>Use list comprehensions to create transformed lists <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7597\">#7597</a> [<a href=\"https://github.com/hugovk\"><code>@\u200bhugovk</code></a>]</li>\n<li>Added support for reading DX10 BC4 DDS images <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7603\">#7603</a> [<a href=\"https://github.com/sambvfx\"><code>@\u200bsambvfx</code></a>]</li>\n<li>Optimized ImageStat.Stat.count <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7599\">#7599</a> [<a href=\"https://github.com/florath\"><code>@\u200bflorath</code></a>]</li>\n<li>Moved error from truetype() to FreeTypeFont <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7587\">#7587</a> [<a href=\"https://github.com/radarhere\"><code>@\u200bradarhere</code></a>]</li>\n<li>Correct PDF palette size when saving <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7555\">#7555</a> [<a href=\"https://github.com/radarhere\"><code>@\u200bradarhere</code></a>]</li>\n<li>Fixed closing file pointer with olefile 0.47 <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7594\">#7594</a> [<a href=\"https://github.com/radarhere\"><code>@\u200bradarhere</code></a>]</li>\n<li>ruff: Minor optimizations of list comprehensions, x in set, etc. <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7524\">#7524</a> [<a href=\"https://github.com/cclauss\"><code>@\u200bcclauss</code></a>]</li>\n<li>Build Windows wheels using cibuildwheel <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7580\">#7580</a> [<a href=\"https://github.com/nulano\"><code>@\u200bnulano</code></a>]</li>\n<li>Raise ValueError when TrueType font size is zero or less <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7584\">#7584</a> [<a href=\"https://github.com/akx\"><code>@\u200bakx</code></a>]</li>\n<li>Install cibuildwheel from requirements file <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7581\">#7581</a> [<a href=\"https://github.com/hugovk\"><code>@\u200bhugovk</code></a>]</li>\n</ul>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/python-pillow/Pillow/blob/main/CHANGES.rst\">pillow's changelog</a>.</em></p>\n<blockquote>\n<h2>10.2.0 (2024-01-02)</h2>\n<ul>\n<li>\n<p>Add <code>keep_rgb</code> option when saving JPEG to prevent conversion of RGB colorspace <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7553\">#7553</a>\n[bgilbert, radarhere]</p>\n</li>\n<li>\n<p>Trim glyph size in ImageFont.getmask() <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7669\">#7669</a>, <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7672\">#7672</a>\n[radarhere, nulano]</p>\n</li>\n<li>\n<p>Deprecate IptcImagePlugin helpers <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7664\">#7664</a>\n[nulano, hugovk, radarhere]</p>\n</li>\n<li>\n<p>Allow uncompressed TIFF images to be saved in chunks <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7650\">#7650</a>\n[radarhere]</p>\n</li>\n<li>\n<p>Concatenate multiple JPEG EXIF markers <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7496\">#7496</a>\n[radarhere]</p>\n</li>\n<li>\n<p>Changed IPTC tile tuple to match other plugins <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7661\">#7661</a>\n[radarhere]</p>\n</li>\n<li>\n<p>Do not assign new fp attribute when exiting context manager <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7566\">#7566</a>\n[radarhere]</p>\n</li>\n<li>\n<p>Support arbitrary masks for uncompressed RGB DDS images <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7589\">#7589</a>\n[radarhere, akx]</p>\n</li>\n<li>\n<p>Support setting ROWSPERSTRIP tag <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7654\">#7654</a>\n[radarhere]</p>\n</li>\n<li>\n<p>Apply ImageFont.MAX_STRING_LENGTH to ImageFont.getmask() <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7662\">#7662</a>\n[radarhere]</p>\n</li>\n<li>\n<p>Optimise <code>ImageColor</code> using <code>functools.lru_cache</code> <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7657\">#7657</a>\n[hugovk]</p>\n</li>\n<li>\n<p>Restricted environment keys for ImageMath.eval() <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7655\">#7655</a>\n[wiredfool, radarhere]</p>\n</li>\n<li>\n<p>Optimise <code>ImageMode.getmode</code> using <code>functools.lru_cache</code> <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7641\">#7641</a>\n[hugovk, radarhere]</p>\n</li>\n<li>\n<p>Fix incorrect color blending for overlapping glyphs <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7497\">#7497</a>\n[ZachNagengast, nulano, radarhere]</p>\n</li>\n<li>\n<p>Attempt memory mapping when tile args is a string <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7565\">#7565</a>\n[radarhere]</p>\n</li>\n<li>\n<p>Fill identical pixels with transparency in subsequent frames when saving GIF <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7568\">#7568</a>\n[radarhere]</p>\n</li>\n</ul>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/python-pillow/Pillow/commit/6956d0b2853f5c7ec5f6ec4c60725c5a7ee73aeb\"><code>6956d0b</code></a> 10.2.0 version bump</li>\n<li><a href=\"https://github.com/python-pillow/Pillow/commit/31c8dacdc727673e9099f1ac86019714cdccec67\"><code>31c8dac</code></a> Merge pull request <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7675\">#7675</a> from python-pillow/pre-commit-ci-update-config</li>\n<li><a href=\"https://github.com/python-pillow/Pillow/commit/40a3f91af2c78870676a13629b5902bab4ab4cf0\"><code>40a3f91</code></a> Merge pull request <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7674\">#7674</a> from nulano/url-example</li>\n<li><a href=\"https://github.com/python-pillow/Pillow/commit/cb41b0cc78eeefbd9ed2ce8c10f8d6d4c405a706\"><code>cb41b0c</code></a> [pre-commit.ci] pre-commit autoupdate</li>\n<li><a href=\"https://github.com/python-pillow/Pillow/commit/de62b25ed318f1604aa4ccd6f942a04c6b2c8b59\"><code>de62b25</code></a> fix image url in &quot;Reading from URL&quot; example</li>\n<li><a href=\"https://github.com/python-pillow/Pillow/commit/7c526a6c6bdc7cb947f0aee1d1ee17c266ff6c61\"><code>7c526a6</code></a> Update CHANGES.rst [ci skip]</li>\n<li><a href=\"https://github.com/python-pillow/Pillow/commit/d93a5ad70bf94dbb63bdbfb19491a02976574d6d\"><code>d93a5ad</code></a> Merge pull request <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7553\">#7553</a> from bgilbert/jpeg-rgb</li>\n<li><a href=\"https://github.com/python-pillow/Pillow/commit/aed764fe8404926472499208a39e5bf90d861b2a\"><code>aed764f</code></a> Update CHANGES.rst [ci skip]</li>\n<li><a href=\"https://github.com/python-pillow/Pillow/commit/f8df5303fa9daf40cf8bfe232403cb40389d8f8f\"><code>f8df530</code></a> Merge pull request <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7672\">#7672</a> from nulano/imagefont-negative-crop</li>\n<li><a href=\"https://github.com/python-pillow/Pillow/commit/24e9485e6bb733a1a816f228dc75fd0086a93e19\"><code>24e9485</code></a> Merge pull request <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7671\">#7671</a> from radarhere/imagetransform</li>\n<li>Additional commits viewable in <a href=\"https://github.com/python-pillow/Pillow/compare/9.5.0...10.2.0\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pillow&package-manager=pip&previous-version=9.5.0&new-version=10.2.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/srbhr/Resume-Matcher/network/alerts).\n\n</details>",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "state",
          "value": "open",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": "archive/requirements_colab.txt",
          "qualifier": "files"
        },
        {
          "objectId": "dependabot[bot]",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "archive/requirements_colab.txt",
          "qualifier": "aggregates"
        },
        {
          "objectId": "dependabot[bot]",
          "qualifier": "has-participant"
        },
        {
          "objectId": "3ce2989d0619c6092bf690e1236d9ab6bbe30845",
          "qualifier": "commits"
        },
        {
          "objectId": "bcda4f85a82e5f64b9edc537947e05539c409067",
          "qualifier": "is-merged-with"
        },
        {
          "objectId": "3ce2989d0619c6092bf690e1236d9ab6bbe30845",
          "qualifier": "formalises"
        }
      ],
      "id": "233"
    },
    {
      "type": "pull_request",
      "attributes": [
        {
          "name": "title",
          "value": "Chore(deps): Bump pillow from 9.5.0 to 10.2.0",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "description",
          "value": "Bumps [pillow](https://github.com/python-pillow/Pillow) from 9.5.0 to 10.2.0.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/python-pillow/Pillow/releases\">pillow's releases</a>.</em></p>\n<blockquote>\n<h2>10.2.0</h2>\n<p><a href=\"https://pillow.readthedocs.io/en/stable/releasenotes/10.2.0.html\">https://pillow.readthedocs.io/en/stable/releasenotes/10.2.0.html</a></p>\n<h2>Changes</h2>\n<ul>\n<li>Add <code>keep_rgb</code> option when saving JPEG to prevent conversion of RGB colorspace <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7553\">#7553</a> [<a href=\"https://github.com/bgilbert\"><code>@\u200bbgilbert</code></a>]</li>\n<li>Trim negative glyph offsets in ImageFont.getmask() <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7672\">#7672</a> [<a href=\"https://github.com/nulano\"><code>@\u200bnulano</code></a>]</li>\n<li>Removed unnecessary &quot;pragma: no cover&quot; <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7668\">#7668</a> [<a href=\"https://github.com/radarhere\"><code>@\u200bradarhere</code></a>]</li>\n<li>Trim glyph size in ImageFont.getmask() <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7669\">#7669</a> [<a href=\"https://github.com/radarhere\"><code>@\u200bradarhere</code></a>]</li>\n<li>Fix loading IPTC images and update test <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7667\">#7667</a> [<a href=\"https://github.com/nulano\"><code>@\u200bnulano</code></a>]</li>\n<li>Allow uncompressed TIFF images to be saved in chunks <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7650\">#7650</a> [<a href=\"https://github.com/radarhere\"><code>@\u200bradarhere</code></a>]</li>\n<li>Concatenate multiple JPEG EXIF markers <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7496\">#7496</a> [<a href=\"https://github.com/radarhere\"><code>@\u200bradarhere</code></a>]</li>\n<li>Changed IPTC tile tuple to match other plugins <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7661\">#7661</a> [<a href=\"https://github.com/radarhere\"><code>@\u200bradarhere</code></a>]</li>\n<li>Do not assign new fp attribute when exiting context manager <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7566\">#7566</a> [<a href=\"https://github.com/radarhere\"><code>@\u200bradarhere</code></a>]</li>\n<li>Support arbitrary masks for uncompressed RGB DDS images <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7589\">#7589</a> [<a href=\"https://github.com/radarhere\"><code>@\u200bradarhere</code></a>]</li>\n<li>Support setting ROWSPERSTRIP tag <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7654\">#7654</a> [<a href=\"https://github.com/radarhere\"><code>@\u200bradarhere</code></a>]</li>\n<li>Apply ImageFont.MAX_STRING_LENGTH to ImageFont.getmask() <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7662\">#7662</a> [<a href=\"https://github.com/radarhere\"><code>@\u200bradarhere</code></a>]</li>\n<li>Optimise <code>ImageColor</code> using <code>functools.lru_cache</code> <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7657\">#7657</a> [<a href=\"https://github.com/hugovk\"><code>@\u200bhugovk</code></a>]</li>\n<li>Restricted environment keys for ImageMath.eval() <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7655\">#7655</a> [<a href=\"https://github.com/radarhere\"><code>@\u200bradarhere</code></a>]</li>\n<li>Optimise <code>ImageMode.getmode</code> using <code>functools.lru_cache</code> <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7641\">#7641</a> [<a href=\"https://github.com/hugovk\"><code>@\u200bhugovk</code></a>]</li>\n<li>Added trusted PyPI publishing <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7616\">#7616</a> [<a href=\"https://github.com/radarhere\"><code>@\u200bradarhere</code></a>]</li>\n<li>Compile FriBiDi for Windows ARM64 <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7629\">#7629</a> [<a href=\"https://github.com/nulano\"><code>@\u200bnulano</code></a>]</li>\n<li>Fix incorrect color blending for overlapping glyphs <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7497\">#7497</a> [<a href=\"https://github.com/ZachNagengast\"><code>@\u200bZachNagengast</code></a>]</li>\n<li>Add .git-blame-ignore-revs file <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7528\">#7528</a> [<a href=\"https://github.com/akx\"><code>@\u200bakx</code></a>]</li>\n<li>Attempt memory mapping when tile args is a string <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7565\">#7565</a> [<a href=\"https://github.com/radarhere\"><code>@\u200bradarhere</code></a>]</li>\n<li>Fill identical pixels with transparency in subsequent frames when saving GIF <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7568\">#7568</a> [<a href=\"https://github.com/radarhere\"><code>@\u200bradarhere</code></a>]</li>\n<li>Removed unnecessary string length check <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7560\">#7560</a> [<a href=\"https://github.com/radarhere\"><code>@\u200bradarhere</code></a>]</li>\n<li>Determine mask mode in Python instead of C <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7548\">#7548</a> [<a href=\"https://github.com/radarhere\"><code>@\u200bradarhere</code></a>]</li>\n<li>Corrected duration when combining multiple GIF frames into single frame <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7521\">#7521</a> [<a href=\"https://github.com/radarhere\"><code>@\u200bradarhere</code></a>]</li>\n<li>Handle disposing GIF background from outside palette <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7515\">#7515</a> [<a href=\"https://github.com/radarhere\"><code>@\u200bradarhere</code></a>]</li>\n<li>Seek past the data when skipping a PSD layer <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7483\">#7483</a> [<a href=\"https://github.com/radarhere\"><code>@\u200bradarhere</code></a>]</li>\n<li>ImageMath: Inline <code>isinstance</code> check <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7623\">#7623</a> [<a href=\"https://github.com/hugovk\"><code>@\u200bhugovk</code></a>]</li>\n<li>Update actions/upload-artifact action to v4 <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7619\">#7619</a> [<a href=\"https://github.com/radarhere\"><code>@\u200bradarhere</code></a>]</li>\n<li>Import plugins relative to the module <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7576\">#7576</a> [<a href=\"https://github.com/deliangyang\"><code>@\u200bdeliangyang</code></a>]</li>\n<li>Translate encoder error codes to strings; deprecate <code>ImageFile.raise_oserror()</code> <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7609\">#7609</a> [<a href=\"https://github.com/bgilbert\"><code>@\u200bbgilbert</code></a>]</li>\n<li>Updated readthedocs to latest version of Python <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7611\">#7611</a> [<a href=\"https://github.com/radarhere\"><code>@\u200bradarhere</code></a>]</li>\n<li>Support reading BC4U and DX10 BC1 images <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/6486\">#6486</a> [<a href=\"https://github.com/REDxEYE\"><code>@\u200bREDxEYE</code></a>]</li>\n<li>Optimize ImageStat.Stat.extrema <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7593\">#7593</a> [<a href=\"https://github.com/florath\"><code>@\u200bflorath</code></a>]</li>\n<li>Handle pathlib.Path in FreeTypeFont <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7578\">#7578</a> [<a href=\"https://github.com/radarhere\"><code>@\u200bradarhere</code></a>]</li>\n<li>Use list comprehensions to create transformed lists <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7597\">#7597</a> [<a href=\"https://github.com/hugovk\"><code>@\u200bhugovk</code></a>]</li>\n<li>Added support for reading DX10 BC4 DDS images <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7603\">#7603</a> [<a href=\"https://github.com/sambvfx\"><code>@\u200bsambvfx</code></a>]</li>\n<li>Optimized ImageStat.Stat.count <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7599\">#7599</a> [<a href=\"https://github.com/florath\"><code>@\u200bflorath</code></a>]</li>\n<li>Moved error from truetype() to FreeTypeFont <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7587\">#7587</a> [<a href=\"https://github.com/radarhere\"><code>@\u200bradarhere</code></a>]</li>\n<li>Correct PDF palette size when saving <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7555\">#7555</a> [<a href=\"https://github.com/radarhere\"><code>@\u200bradarhere</code></a>]</li>\n<li>Fixed closing file pointer with olefile 0.47 <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7594\">#7594</a> [<a href=\"https://github.com/radarhere\"><code>@\u200bradarhere</code></a>]</li>\n<li>ruff: Minor optimizations of list comprehensions, x in set, etc. <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7524\">#7524</a> [<a href=\"https://github.com/cclauss\"><code>@\u200bcclauss</code></a>]</li>\n<li>Build Windows wheels using cibuildwheel <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7580\">#7580</a> [<a href=\"https://github.com/nulano\"><code>@\u200bnulano</code></a>]</li>\n<li>Raise ValueError when TrueType font size is zero or less <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7584\">#7584</a> [<a href=\"https://github.com/akx\"><code>@\u200bakx</code></a>]</li>\n<li>Install cibuildwheel from requirements file <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7581\">#7581</a> [<a href=\"https://github.com/hugovk\"><code>@\u200bhugovk</code></a>]</li>\n</ul>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/python-pillow/Pillow/blob/main/CHANGES.rst\">pillow's changelog</a>.</em></p>\n<blockquote>\n<h2>10.2.0 (2024-01-02)</h2>\n<ul>\n<li>\n<p>Add <code>keep_rgb</code> option when saving JPEG to prevent conversion of RGB colorspace <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7553\">#7553</a>\n[bgilbert, radarhere]</p>\n</li>\n<li>\n<p>Trim glyph size in ImageFont.getmask() <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7669\">#7669</a>, <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7672\">#7672</a>\n[radarhere, nulano]</p>\n</li>\n<li>\n<p>Deprecate IptcImagePlugin helpers <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7664\">#7664</a>\n[nulano, hugovk, radarhere]</p>\n</li>\n<li>\n<p>Allow uncompressed TIFF images to be saved in chunks <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7650\">#7650</a>\n[radarhere]</p>\n</li>\n<li>\n<p>Concatenate multiple JPEG EXIF markers <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7496\">#7496</a>\n[radarhere]</p>\n</li>\n<li>\n<p>Changed IPTC tile tuple to match other plugins <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7661\">#7661</a>\n[radarhere]</p>\n</li>\n<li>\n<p>Do not assign new fp attribute when exiting context manager <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7566\">#7566</a>\n[radarhere]</p>\n</li>\n<li>\n<p>Support arbitrary masks for uncompressed RGB DDS images <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7589\">#7589</a>\n[radarhere, akx]</p>\n</li>\n<li>\n<p>Support setting ROWSPERSTRIP tag <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7654\">#7654</a>\n[radarhere]</p>\n</li>\n<li>\n<p>Apply ImageFont.MAX_STRING_LENGTH to ImageFont.getmask() <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7662\">#7662</a>\n[radarhere]</p>\n</li>\n<li>\n<p>Optimise <code>ImageColor</code> using <code>functools.lru_cache</code> <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7657\">#7657</a>\n[hugovk]</p>\n</li>\n<li>\n<p>Restricted environment keys for ImageMath.eval() <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7655\">#7655</a>\n[wiredfool, radarhere]</p>\n</li>\n<li>\n<p>Optimise <code>ImageMode.getmode</code> using <code>functools.lru_cache</code> <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7641\">#7641</a>\n[hugovk, radarhere]</p>\n</li>\n<li>\n<p>Fix incorrect color blending for overlapping glyphs <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7497\">#7497</a>\n[ZachNagengast, nulano, radarhere]</p>\n</li>\n<li>\n<p>Attempt memory mapping when tile args is a string <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7565\">#7565</a>\n[radarhere]</p>\n</li>\n<li>\n<p>Fill identical pixels with transparency in subsequent frames when saving GIF <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7568\">#7568</a>\n[radarhere]</p>\n</li>\n</ul>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/python-pillow/Pillow/commit/6956d0b2853f5c7ec5f6ec4c60725c5a7ee73aeb\"><code>6956d0b</code></a> 10.2.0 version bump</li>\n<li><a href=\"https://github.com/python-pillow/Pillow/commit/31c8dacdc727673e9099f1ac86019714cdccec67\"><code>31c8dac</code></a> Merge pull request <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7675\">#7675</a> from python-pillow/pre-commit-ci-update-config</li>\n<li><a href=\"https://github.com/python-pillow/Pillow/commit/40a3f91af2c78870676a13629b5902bab4ab4cf0\"><code>40a3f91</code></a> Merge pull request <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7674\">#7674</a> from nulano/url-example</li>\n<li><a href=\"https://github.com/python-pillow/Pillow/commit/cb41b0cc78eeefbd9ed2ce8c10f8d6d4c405a706\"><code>cb41b0c</code></a> [pre-commit.ci] pre-commit autoupdate</li>\n<li><a href=\"https://github.com/python-pillow/Pillow/commit/de62b25ed318f1604aa4ccd6f942a04c6b2c8b59\"><code>de62b25</code></a> fix image url in &quot;Reading from URL&quot; example</li>\n<li><a href=\"https://github.com/python-pillow/Pillow/commit/7c526a6c6bdc7cb947f0aee1d1ee17c266ff6c61\"><code>7c526a6</code></a> Update CHANGES.rst [ci skip]</li>\n<li><a href=\"https://github.com/python-pillow/Pillow/commit/d93a5ad70bf94dbb63bdbfb19491a02976574d6d\"><code>d93a5ad</code></a> Merge pull request <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7553\">#7553</a> from bgilbert/jpeg-rgb</li>\n<li><a href=\"https://github.com/python-pillow/Pillow/commit/aed764fe8404926472499208a39e5bf90d861b2a\"><code>aed764f</code></a> Update CHANGES.rst [ci skip]</li>\n<li><a href=\"https://github.com/python-pillow/Pillow/commit/f8df5303fa9daf40cf8bfe232403cb40389d8f8f\"><code>f8df530</code></a> Merge pull request <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7672\">#7672</a> from nulano/imagefont-negative-crop</li>\n<li><a href=\"https://github.com/python-pillow/Pillow/commit/24e9485e6bb733a1a816f228dc75fd0086a93e19\"><code>24e9485</code></a> Merge pull request <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7671\">#7671</a> from radarhere/imagetransform</li>\n<li>Additional commits viewable in <a href=\"https://github.com/python-pillow/Pillow/compare/9.5.0...10.2.0\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pillow&package-manager=pip&previous-version=9.5.0&new-version=10.2.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/srbhr/Resume-Matcher/network/alerts).\n\n</details>",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "state",
          "value": "open",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": "archive/requirements_colab.txt",
          "qualifier": "files"
        },
        {
          "objectId": "requirements.txt",
          "qualifier": "files"
        },
        {
          "objectId": "dependabot[bot]",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "archive/requirements_colab.txt",
          "qualifier": "aggregates"
        },
        {
          "objectId": "requirements.txt",
          "qualifier": "aggregates"
        },
        {
          "objectId": "dependabot[bot]",
          "qualifier": "has-participant"
        },
        {
          "objectId": "1a5985108d82ff52916e23e8f593bab0f080be3f",
          "qualifier": "commits"
        },
        {
          "objectId": "6727c336f3d67ba2c15bd83c2213abe3c07bc3d2",
          "qualifier": "is-merged-with"
        },
        {
          "objectId": "1a5985108d82ff52916e23e8f593bab0f080be3f",
          "qualifier": "formalises"
        }
      ],
      "id": "232"
    },
    {
      "type": "pull_request",
      "attributes": [
        {
          "name": "title",
          "value": "Chore(deps): Bump streamlit from 1.24.1 to 1.30.0",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "description",
          "value": "Bumps [streamlit](https://github.com/streamlit/streamlit) from 1.24.1 to 1.30.0.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/streamlit/streamlit/releases\">streamlit's releases</a>.</em></p>\n<blockquote>\n<h2>1.30.0</h2>\n<!-- raw HTML omitted -->\n<h2>What's Changed</h2>\n<h3>New Features \ud83c\udf89</h3>\n<ul>\n<li>Add support for scroll container via the <code>height</code> parameter by <a href=\"https://github.com/LukasMasuch\"><code>@\u200bLukasMasuch</code></a> in <a href=\"https://redirect.github.com/streamlit/streamlit/pull/7697\">streamlit/streamlit#7697</a></li>\n<li>Add display_text to LinkColumn by <a href=\"https://github.com/sfc-gh-bhay\"><code>@\u200bsfc-gh-bhay</code></a> in <a href=\"https://redirect.github.com/streamlit/streamlit/pull/7741\">streamlit/streamlit#7741</a></li>\n<li>st.query_params by <a href=\"https://github.com/willhuang1997\"><code>@\u200bwillhuang1997</code></a> in <a href=\"https://redirect.github.com/streamlit/streamlit/pull/7774\">streamlit/streamlit#7774</a></li>\n<li>Add Pandas styler support to <code>LinkColumn</code> by <a href=\"https://github.com/LukasMasuch\"><code>@\u200bLukasMasuch</code></a> in <a href=\"https://redirect.github.com/streamlit/streamlit/pull/7784\">streamlit/streamlit#7784</a></li>\n<li>Config - MPA Sidebar Page Navigation by <a href=\"https://github.com/mayagbarnes\"><code>@\u200bmayagbarnes</code></a> in <a href=\"https://redirect.github.com/streamlit/streamlit/pull/7852\">streamlit/streamlit#7852</a></li>\n<li>Feature - <code>st.switch_page</code> by <a href=\"https://github.com/mayagbarnes\"><code>@\u200bmayagbarnes</code></a> in <a href=\"https://redirect.github.com/streamlit/streamlit/pull/7853\">streamlit/streamlit#7853</a></li>\n</ul>\n<h3>Bug Fixes \ud83d\udc1b</h3>\n<ul>\n<li>Fix handling of ordinal columns for builtin-charts by <a href=\"https://github.com/LukasMasuch\"><code>@\u200bLukasMasuch</code></a> in <a href=\"https://redirect.github.com/streamlit/streamlit/pull/7771\">streamlit/streamlit#7771</a></li>\n<li>Fix <code>st.toggle</code> background color by <a href=\"https://github.com/sfc-gh-jgarcia\"><code>@\u200bsfc-gh-jgarcia</code></a> in <a href=\"https://redirect.github.com/streamlit/streamlit/pull/7788\">streamlit/streamlit#7788</a></li>\n<li>Don't send command used to start streamlit to frontend by <a href=\"https://github.com/vdonato\"><code>@\u200bvdonato</code></a> in <a href=\"https://redirect.github.com/streamlit/streamlit/pull/7787\">streamlit/streamlit#7787</a></li>\n<li>Fix iframe background for dark color scheme by <a href=\"https://github.com/LukasMasuch\"><code>@\u200bLukasMasuch</code></a> in <a href=\"https://redirect.github.com/streamlit/streamlit/pull/7821\">streamlit/streamlit#7821</a></li>\n<li>Prevent incompatible column config serialization by <a href=\"https://github.com/LukasMasuch\"><code>@\u200bLukasMasuch</code></a> in <a href=\"https://redirect.github.com/streamlit/streamlit/pull/7887\">streamlit/streamlit#7887</a></li>\n<li>Prevent hiding required editable columns  by <a href=\"https://github.com/LukasMasuch\"><code>@\u200bLukasMasuch</code></a> in <a href=\"https://redirect.github.com/streamlit/streamlit/pull/7888\">streamlit/streamlit#7888</a></li>\n<li>Disable the ability to submit form if a submit button is disabled by <a href=\"https://github.com/willhuang1997\"><code>@\u200bwillhuang1997</code></a> in <a href=\"https://redirect.github.com/streamlit/streamlit/pull/7827\">streamlit/streamlit#7827</a></li>\n<li>Fix flickering effect when changing tabs by <a href=\"https://github.com/LukasMasuch\"><code>@\u200bLukasMasuch</code></a> in <a href=\"https://redirect.github.com/streamlit/streamlit/pull/7904\">streamlit/streamlit#7904</a></li>\n<li>Fix shrunk icon size in st.expander by <a href=\"https://github.com/matiboux\"><code>@\u200bmatiboux</code></a> in <a href=\"https://redirect.github.com/streamlit/streamlit/pull/7596\">streamlit/streamlit#7596</a></li>\n<li>Add check that individual elements are &quot;python comparable&quot; by <a href=\"https://github.com/kajarenc\"><code>@\u200bkajarenc</code></a> in <a href=\"https://redirect.github.com/streamlit/streamlit/pull/7840\">streamlit/streamlit#7840</a></li>\n<li>Use commonpath rather than common prefix for more secure access by <a href=\"https://github.com/kmcgrady\"><code>@\u200bkmcgrady</code></a> in <a href=\"https://redirect.github.com/streamlit/streamlit/pull/7901\">streamlit/streamlit#7901</a></li>\n<li>Don't disable tab on stale flag by <a href=\"https://github.com/LukasMasuch\"><code>@\u200bLukasMasuch</code></a> in <a href=\"https://redirect.github.com/streamlit/streamlit/pull/7905\">streamlit/streamlit#7905</a></li>\n<li>Fix embed params being dropped in page swaps by <a href=\"https://github.com/sfc-gh-wihuang\"><code>@\u200bsfc-gh-wihuang</code></a> in <a href=\"https://redirect.github.com/streamlit/streamlit/pull/7918\">streamlit/streamlit#7918</a></li>\n</ul>\n<h3>Other Changes</h3>\n<ul>\n<li>Fix parenthesis error messaging by <a href=\"https://github.com/willhuang1997\"><code>@\u200bwillhuang1997</code></a> in <a href=\"https://redirect.github.com/streamlit/streamlit/pull/7770\">streamlit/streamlit#7770</a></li>\n<li>Update SECURITY.md by <a href=\"https://github.com/sfc-gh-hpathak\"><code>@\u200bsfc-gh-hpathak</code></a> in <a href=\"https://redirect.github.com/streamlit/streamlit/pull/7783\">streamlit/streamlit#7783</a></li>\n<li>Speed up plotly figures by 8x for users with &quot;orjson&quot; by <a href=\"https://github.com/eric-skydio\"><code>@\u200beric-skydio</code></a> in <a href=\"https://redirect.github.com/streamlit/streamlit/pull/7860\">streamlit/streamlit#7860</a></li>\n</ul>\n<h2>New Contributors</h2>\n<ul>\n<li><a href=\"https://github.com/sfc-gh-bhay\"><code>@\u200bsfc-gh-bhay</code></a> made their first contribution in <a href=\"https://redirect.github.com/streamlit/streamlit/pull/7741\">streamlit/streamlit#7741</a></li>\n<li><a href=\"https://github.com/sfc-gh-jkinkead\"><code>@\u200bsfc-gh-jkinkead</code></a> made their first contribution in <a href=\"https://redirect.github.com/streamlit/streamlit/pull/7843\">streamlit/streamlit#7843</a></li>\n<li><a href=\"https://github.com/sfc-gh-jdaly\"><code>@\u200bsfc-gh-jdaly</code></a> made their first contribution in <a href=\"https://redirect.github.com/streamlit/streamlit/pull/7842\">streamlit/streamlit#7842</a></li>\n<li><a href=\"https://github.com/matiboux\"><code>@\u200bmatiboux</code></a> made their first contribution in <a href=\"https://redirect.github.com/streamlit/streamlit/pull/7596\">streamlit/streamlit#7596</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/streamlit/streamlit/compare/1.29.0...1.30.0\">https://github.com/streamlit/streamlit/compare/1.29.0...1.30.0</a></p>\n<h2>1.29.0</h2>\n<!-- raw HTML omitted -->\n<h2>What's Changed</h2>\n<h3>Breaking Changes \ud83d\udee0</h3>\n<ul>\n<li>Remove old app test api by <a href=\"https://github.com/AnOctopus\"><code>@\u200bAnOctopus</code></a> in <a href=\"https://redirect.github.com/streamlit/streamlit/pull/7657\">streamlit/streamlit#7657</a></li>\n</ul>\n<h3>New Features \ud83c\udf89</h3>\n<ul>\n<li>Add ability to add empty query params by <a href=\"https://github.com/willhuang1997\"><code>@\u200bwillhuang1997</code></a> in <a href=\"https://redirect.github.com/streamlit/streamlit/pull/7601\">streamlit/streamlit#7601</a></li>\n<li>Add Enum coercion to options elements, if input Enum classes &quot;identical&quot; but redefined on script run by <a href=\"https://github.com/Asaurus1\"><code>@\u200bAsaurus1</code></a> in <a href=\"https://redirect.github.com/streamlit/streamlit/pull/7408\">streamlit/streamlit#7408</a></li>\n<li>Remove Recording Feature Menu Item when unsupported by <a href=\"https://github.com/kmcgrady\"><code>@\u200bkmcgrady</code></a> in <a href=\"https://redirect.github.com/streamlit/streamlit/pull/7604\">streamlit/streamlit#7604</a></li>\n<li>Improved AppTest/ElementTree formatting by <a href=\"https://github.com/AnOctopus\"><code>@\u200bAnOctopus</code></a> in <a href=\"https://redirect.github.com/streamlit/streamlit/pull/7658\">streamlit/streamlit#7658</a></li>\n<li>Add support for timedelta type to <code>st.dataframe</code>, <code>st.data_editor</code> and <code>st.table</code>. by <a href=\"https://github.com/LukasMasuch\"><code>@\u200bLukasMasuch</code></a> in <a href=\"https://redirect.github.com/streamlit/streamlit/pull/7689\">streamlit/streamlit#7689</a></li>\n</ul>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/streamlit/streamlit/commit/2c39710e2e45479b8c8414a9a329bc35cd18441f\"><code>2c39710</code></a> Support latest importlib-metadata v7 (<a href=\"https://redirect.github.com/streamlit/streamlit/issues/7925\">#7925</a>)</li>\n<li><a href=\"https://github.com/streamlit/streamlit/commit/005d62a1c0fba7f8e0318dde7a6be9ea1c28019e\"><code>005d62a</code></a> Up version to 1.30.0</li>\n<li><a href=\"https://github.com/streamlit/streamlit/commit/33e347af5afc84e68c6bc5db0583a74f9f0227c7\"><code>33e347a</code></a> Fix embed params being dropped in page swaps (<a href=\"https://redirect.github.com/streamlit/streamlit/issues/7918\">#7918</a>)</li>\n<li><a href=\"https://github.com/streamlit/streamlit/commit/899cbbdabb1d57c1e35d195a63a180557bb54876\"><code>899cbbd</code></a> Docstrings for release 1.30.0 (<a href=\"https://redirect.github.com/streamlit/streamlit/issues/7916\">#7916</a>)</li>\n<li><a href=\"https://github.com/streamlit/streamlit/commit/02022e7f03d5643022448a0bdee6fdbcab924dcb\"><code>02022e7</code></a> Reduce e2e test flakiness by using waiting methods (<a href=\"https://redirect.github.com/streamlit/streamlit/issues/7907\">#7907</a>)</li>\n<li><a href=\"https://github.com/streamlit/streamlit/commit/7ee8f2bec2e7bb9bdad53d5672d0563d972e5760\"><code>7ee8f2b</code></a> Update the frontend audit exceptions (<a href=\"https://redirect.github.com/streamlit/streamlit/issues/7909\">#7909</a>)</li>\n<li><a href=\"https://github.com/streamlit/streamlit/commit/adb236baf400fe29ad2687e855b4bab4f0bc17e5\"><code>adb236b</code></a> Don't disable tab on stale flag (<a href=\"https://redirect.github.com/streamlit/streamlit/issues/7905\">#7905</a>)</li>\n<li><a href=\"https://github.com/streamlit/streamlit/commit/bd0a8996c4c7ec55b9c6557e7b168b0c13a25b90\"><code>bd0a899</code></a> Use commonpath rather than common prefix for more secure access (<a href=\"https://redirect.github.com/streamlit/streamlit/issues/7901\">#7901</a>)</li>\n<li><a href=\"https://github.com/streamlit/streamlit/commit/ee41c844fbc2577973eebb98689ea2c3340e9400\"><code>ee41c84</code></a> Add check that individual elements are &quot;python comparable&quot; (<a href=\"https://redirect.github.com/streamlit/streamlit/issues/7840\">#7840</a>)</li>\n<li><a href=\"https://github.com/streamlit/streamlit/commit/d428d910e54198da0c16ba1daffb88c0de1594fb\"><code>d428d91</code></a> Fix shrunk icon size in st.expander (<a href=\"https://redirect.github.com/streamlit/streamlit/issues/7596\">#7596</a>)</li>\n<li>Additional commits viewable in <a href=\"https://github.com/streamlit/streamlit/compare/1.24.1...1.30.0\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=streamlit&package-manager=pip&previous-version=1.24.1&new-version=1.30.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nYou can trigger a rebase of this PR by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/srbhr/Resume-Matcher/network/alerts).\n\n</details>\n\n> **Note**\n> Automatic rebases have been disabled on this pull request as it has been open for over 30 days.\n",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "state",
          "value": "open",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": "archive/requirements_colab.txt",
          "qualifier": "files"
        },
        {
          "objectId": "requirements.txt",
          "qualifier": "files"
        },
        {
          "objectId": "dependabot[bot]",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "archive/requirements_colab.txt",
          "qualifier": "aggregates"
        },
        {
          "objectId": "requirements.txt",
          "qualifier": "aggregates"
        },
        {
          "objectId": "dependabot[bot]",
          "qualifier": "has-participant"
        },
        {
          "objectId": "ce8681edd00d54848c0707557d2e7bd70d7b1e29",
          "qualifier": "commits"
        },
        {
          "objectId": "bcbe49d8c2b6ae2c7352c7d8779c9b19c8eae89c",
          "qualifier": "is-merged-with"
        },
        {
          "objectId": "ce8681edd00d54848c0707557d2e7bd70d7b1e29",
          "qualifier": "formalises"
        }
      ],
      "id": "231"
    },
    {
      "type": "pull_request",
      "attributes": [
        {
          "name": "title",
          "value": "Chore(deps): Bump streamlit from 1.24.1 to 1.30.0 in /archive",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "description",
          "value": "Bumps [streamlit](https://github.com/streamlit/streamlit) from 1.24.1 to 1.30.0.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/streamlit/streamlit/releases\">streamlit's releases</a>.</em></p>\n<blockquote>\n<h2>1.30.0</h2>\n<!-- raw HTML omitted -->\n<h2>What's Changed</h2>\n<h3>New Features \ud83c\udf89</h3>\n<ul>\n<li>Add support for scroll container via the <code>height</code> parameter by <a href=\"https://github.com/LukasMasuch\"><code>@\u200bLukasMasuch</code></a> in <a href=\"https://redirect.github.com/streamlit/streamlit/pull/7697\">streamlit/streamlit#7697</a></li>\n<li>Add display_text to LinkColumn by <a href=\"https://github.com/sfc-gh-bhay\"><code>@\u200bsfc-gh-bhay</code></a> in <a href=\"https://redirect.github.com/streamlit/streamlit/pull/7741\">streamlit/streamlit#7741</a></li>\n<li>st.query_params by <a href=\"https://github.com/willhuang1997\"><code>@\u200bwillhuang1997</code></a> in <a href=\"https://redirect.github.com/streamlit/streamlit/pull/7774\">streamlit/streamlit#7774</a></li>\n<li>Add Pandas styler support to <code>LinkColumn</code> by <a href=\"https://github.com/LukasMasuch\"><code>@\u200bLukasMasuch</code></a> in <a href=\"https://redirect.github.com/streamlit/streamlit/pull/7784\">streamlit/streamlit#7784</a></li>\n<li>Config - MPA Sidebar Page Navigation by <a href=\"https://github.com/mayagbarnes\"><code>@\u200bmayagbarnes</code></a> in <a href=\"https://redirect.github.com/streamlit/streamlit/pull/7852\">streamlit/streamlit#7852</a></li>\n<li>Feature - <code>st.switch_page</code> by <a href=\"https://github.com/mayagbarnes\"><code>@\u200bmayagbarnes</code></a> in <a href=\"https://redirect.github.com/streamlit/streamlit/pull/7853\">streamlit/streamlit#7853</a></li>\n</ul>\n<h3>Bug Fixes \ud83d\udc1b</h3>\n<ul>\n<li>Fix handling of ordinal columns for builtin-charts by <a href=\"https://github.com/LukasMasuch\"><code>@\u200bLukasMasuch</code></a> in <a href=\"https://redirect.github.com/streamlit/streamlit/pull/7771\">streamlit/streamlit#7771</a></li>\n<li>Fix <code>st.toggle</code> background color by <a href=\"https://github.com/sfc-gh-jgarcia\"><code>@\u200bsfc-gh-jgarcia</code></a> in <a href=\"https://redirect.github.com/streamlit/streamlit/pull/7788\">streamlit/streamlit#7788</a></li>\n<li>Don't send command used to start streamlit to frontend by <a href=\"https://github.com/vdonato\"><code>@\u200bvdonato</code></a> in <a href=\"https://redirect.github.com/streamlit/streamlit/pull/7787\">streamlit/streamlit#7787</a></li>\n<li>Fix iframe background for dark color scheme by <a href=\"https://github.com/LukasMasuch\"><code>@\u200bLukasMasuch</code></a> in <a href=\"https://redirect.github.com/streamlit/streamlit/pull/7821\">streamlit/streamlit#7821</a></li>\n<li>Prevent incompatible column config serialization by <a href=\"https://github.com/LukasMasuch\"><code>@\u200bLukasMasuch</code></a> in <a href=\"https://redirect.github.com/streamlit/streamlit/pull/7887\">streamlit/streamlit#7887</a></li>\n<li>Prevent hiding required editable columns  by <a href=\"https://github.com/LukasMasuch\"><code>@\u200bLukasMasuch</code></a> in <a href=\"https://redirect.github.com/streamlit/streamlit/pull/7888\">streamlit/streamlit#7888</a></li>\n<li>Disable the ability to submit form if a submit button is disabled by <a href=\"https://github.com/willhuang1997\"><code>@\u200bwillhuang1997</code></a> in <a href=\"https://redirect.github.com/streamlit/streamlit/pull/7827\">streamlit/streamlit#7827</a></li>\n<li>Fix flickering effect when changing tabs by <a href=\"https://github.com/LukasMasuch\"><code>@\u200bLukasMasuch</code></a> in <a href=\"https://redirect.github.com/streamlit/streamlit/pull/7904\">streamlit/streamlit#7904</a></li>\n<li>Fix shrunk icon size in st.expander by <a href=\"https://github.com/matiboux\"><code>@\u200bmatiboux</code></a> in <a href=\"https://redirect.github.com/streamlit/streamlit/pull/7596\">streamlit/streamlit#7596</a></li>\n<li>Add check that individual elements are &quot;python comparable&quot; by <a href=\"https://github.com/kajarenc\"><code>@\u200bkajarenc</code></a> in <a href=\"https://redirect.github.com/streamlit/streamlit/pull/7840\">streamlit/streamlit#7840</a></li>\n<li>Use commonpath rather than common prefix for more secure access by <a href=\"https://github.com/kmcgrady\"><code>@\u200bkmcgrady</code></a> in <a href=\"https://redirect.github.com/streamlit/streamlit/pull/7901\">streamlit/streamlit#7901</a></li>\n<li>Don't disable tab on stale flag by <a href=\"https://github.com/LukasMasuch\"><code>@\u200bLukasMasuch</code></a> in <a href=\"https://redirect.github.com/streamlit/streamlit/pull/7905\">streamlit/streamlit#7905</a></li>\n<li>Fix embed params being dropped in page swaps by <a href=\"https://github.com/sfc-gh-wihuang\"><code>@\u200bsfc-gh-wihuang</code></a> in <a href=\"https://redirect.github.com/streamlit/streamlit/pull/7918\">streamlit/streamlit#7918</a></li>\n</ul>\n<h3>Other Changes</h3>\n<ul>\n<li>Fix parenthesis error messaging by <a href=\"https://github.com/willhuang1997\"><code>@\u200bwillhuang1997</code></a> in <a href=\"https://redirect.github.com/streamlit/streamlit/pull/7770\">streamlit/streamlit#7770</a></li>\n<li>Update SECURITY.md by <a href=\"https://github.com/sfc-gh-hpathak\"><code>@\u200bsfc-gh-hpathak</code></a> in <a href=\"https://redirect.github.com/streamlit/streamlit/pull/7783\">streamlit/streamlit#7783</a></li>\n<li>Speed up plotly figures by 8x for users with &quot;orjson&quot; by <a href=\"https://github.com/eric-skydio\"><code>@\u200beric-skydio</code></a> in <a href=\"https://redirect.github.com/streamlit/streamlit/pull/7860\">streamlit/streamlit#7860</a></li>\n</ul>\n<h2>New Contributors</h2>\n<ul>\n<li><a href=\"https://github.com/sfc-gh-bhay\"><code>@\u200bsfc-gh-bhay</code></a> made their first contribution in <a href=\"https://redirect.github.com/streamlit/streamlit/pull/7741\">streamlit/streamlit#7741</a></li>\n<li><a href=\"https://github.com/sfc-gh-jkinkead\"><code>@\u200bsfc-gh-jkinkead</code></a> made their first contribution in <a href=\"https://redirect.github.com/streamlit/streamlit/pull/7843\">streamlit/streamlit#7843</a></li>\n<li><a href=\"https://github.com/sfc-gh-jdaly\"><code>@\u200bsfc-gh-jdaly</code></a> made their first contribution in <a href=\"https://redirect.github.com/streamlit/streamlit/pull/7842\">streamlit/streamlit#7842</a></li>\n<li><a href=\"https://github.com/matiboux\"><code>@\u200bmatiboux</code></a> made their first contribution in <a href=\"https://redirect.github.com/streamlit/streamlit/pull/7596\">streamlit/streamlit#7596</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/streamlit/streamlit/compare/1.29.0...1.30.0\">https://github.com/streamlit/streamlit/compare/1.29.0...1.30.0</a></p>\n<h2>1.29.0</h2>\n<!-- raw HTML omitted -->\n<h2>What's Changed</h2>\n<h3>Breaking Changes \ud83d\udee0</h3>\n<ul>\n<li>Remove old app test api by <a href=\"https://github.com/AnOctopus\"><code>@\u200bAnOctopus</code></a> in <a href=\"https://redirect.github.com/streamlit/streamlit/pull/7657\">streamlit/streamlit#7657</a></li>\n</ul>\n<h3>New Features \ud83c\udf89</h3>\n<ul>\n<li>Add ability to add empty query params by <a href=\"https://github.com/willhuang1997\"><code>@\u200bwillhuang1997</code></a> in <a href=\"https://redirect.github.com/streamlit/streamlit/pull/7601\">streamlit/streamlit#7601</a></li>\n<li>Add Enum coercion to options elements, if input Enum classes &quot;identical&quot; but redefined on script run by <a href=\"https://github.com/Asaurus1\"><code>@\u200bAsaurus1</code></a> in <a href=\"https://redirect.github.com/streamlit/streamlit/pull/7408\">streamlit/streamlit#7408</a></li>\n<li>Remove Recording Feature Menu Item when unsupported by <a href=\"https://github.com/kmcgrady\"><code>@\u200bkmcgrady</code></a> in <a href=\"https://redirect.github.com/streamlit/streamlit/pull/7604\">streamlit/streamlit#7604</a></li>\n<li>Improved AppTest/ElementTree formatting by <a href=\"https://github.com/AnOctopus\"><code>@\u200bAnOctopus</code></a> in <a href=\"https://redirect.github.com/streamlit/streamlit/pull/7658\">streamlit/streamlit#7658</a></li>\n<li>Add support for timedelta type to <code>st.dataframe</code>, <code>st.data_editor</code> and <code>st.table</code>. by <a href=\"https://github.com/LukasMasuch\"><code>@\u200bLukasMasuch</code></a> in <a href=\"https://redirect.github.com/streamlit/streamlit/pull/7689\">streamlit/streamlit#7689</a></li>\n</ul>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/streamlit/streamlit/commit/2c39710e2e45479b8c8414a9a329bc35cd18441f\"><code>2c39710</code></a> Support latest importlib-metadata v7 (<a href=\"https://redirect.github.com/streamlit/streamlit/issues/7925\">#7925</a>)</li>\n<li><a href=\"https://github.com/streamlit/streamlit/commit/005d62a1c0fba7f8e0318dde7a6be9ea1c28019e\"><code>005d62a</code></a> Up version to 1.30.0</li>\n<li><a href=\"https://github.com/streamlit/streamlit/commit/33e347af5afc84e68c6bc5db0583a74f9f0227c7\"><code>33e347a</code></a> Fix embed params being dropped in page swaps (<a href=\"https://redirect.github.com/streamlit/streamlit/issues/7918\">#7918</a>)</li>\n<li><a href=\"https://github.com/streamlit/streamlit/commit/899cbbdabb1d57c1e35d195a63a180557bb54876\"><code>899cbbd</code></a> Docstrings for release 1.30.0 (<a href=\"https://redirect.github.com/streamlit/streamlit/issues/7916\">#7916</a>)</li>\n<li><a href=\"https://github.com/streamlit/streamlit/commit/02022e7f03d5643022448a0bdee6fdbcab924dcb\"><code>02022e7</code></a> Reduce e2e test flakiness by using waiting methods (<a href=\"https://redirect.github.com/streamlit/streamlit/issues/7907\">#7907</a>)</li>\n<li><a href=\"https://github.com/streamlit/streamlit/commit/7ee8f2bec2e7bb9bdad53d5672d0563d972e5760\"><code>7ee8f2b</code></a> Update the frontend audit exceptions (<a href=\"https://redirect.github.com/streamlit/streamlit/issues/7909\">#7909</a>)</li>\n<li><a href=\"https://github.com/streamlit/streamlit/commit/adb236baf400fe29ad2687e855b4bab4f0bc17e5\"><code>adb236b</code></a> Don't disable tab on stale flag (<a href=\"https://redirect.github.com/streamlit/streamlit/issues/7905\">#7905</a>)</li>\n<li><a href=\"https://github.com/streamlit/streamlit/commit/bd0a8996c4c7ec55b9c6557e7b168b0c13a25b90\"><code>bd0a899</code></a> Use commonpath rather than common prefix for more secure access (<a href=\"https://redirect.github.com/streamlit/streamlit/issues/7901\">#7901</a>)</li>\n<li><a href=\"https://github.com/streamlit/streamlit/commit/ee41c844fbc2577973eebb98689ea2c3340e9400\"><code>ee41c84</code></a> Add check that individual elements are &quot;python comparable&quot; (<a href=\"https://redirect.github.com/streamlit/streamlit/issues/7840\">#7840</a>)</li>\n<li><a href=\"https://github.com/streamlit/streamlit/commit/d428d910e54198da0c16ba1daffb88c0de1594fb\"><code>d428d91</code></a> Fix shrunk icon size in st.expander (<a href=\"https://redirect.github.com/streamlit/streamlit/issues/7596\">#7596</a>)</li>\n<li>Additional commits viewable in <a href=\"https://github.com/streamlit/streamlit/compare/1.24.1...1.30.0\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=streamlit&package-manager=pip&previous-version=1.24.1&new-version=1.30.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nYou can trigger a rebase of this PR by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/srbhr/Resume-Matcher/network/alerts).\n\n</details>\n\n> **Note**\n> Automatic rebases have been disabled on this pull request as it has been open for over 30 days.\n",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "state",
          "value": "open",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": "archive/requirements_colab.txt",
          "qualifier": "files"
        },
        {
          "objectId": "dependabot[bot]",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "archive/requirements_colab.txt",
          "qualifier": "aggregates"
        },
        {
          "objectId": "dependabot[bot]",
          "qualifier": "has-participant"
        },
        {
          "objectId": "b9fa266be4dda734533d22b6e05c40213160f611",
          "qualifier": "commits"
        },
        {
          "objectId": "5616cdc591cd36b712883084bedae5d2220263d9",
          "qualifier": "is-merged-with"
        },
        {
          "objectId": "b9fa266be4dda734533d22b6e05c40213160f611",
          "qualifier": "formalises"
        }
      ],
      "id": "230"
    },
    {
      "type": "pull_request",
      "attributes": [
        {
          "name": "title",
          "value": "Chore(deps): Bump jinja2 from 3.1.2 to 3.1.3 in /archive",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "description",
          "value": "Bumps [jinja2](https://github.com/pallets/jinja) from 3.1.2 to 3.1.3.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/pallets/jinja/releases\">jinja2's releases</a>.</em></p>\n<blockquote>\n<h2>3.1.3</h2>\n<p>This is a fix release for the 3.1.x feature branch.</p>\n<ul>\n<li>Fix for <a href=\"https://github.com/pallets/jinja/security/advisories/GHSA-h5c8-rqwp-cp95\">GHSA-h5c8-rqwp-cp95</a>. You are affected if you are using <code>xmlattr</code> and passing user input as attribute keys.</li>\n<li>Changes: <a href=\"https://jinja.palletsprojects.com/en/3.1.x/changes/#version-3-1-3\">https://jinja.palletsprojects.com/en/3.1.x/changes/#version-3-1-3</a></li>\n<li>Milestone: <a href=\"https://github.com/pallets/jinja/milestone/15?closed=1\">https://github.com/pallets/jinja/milestone/15?closed=1</a></li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/pallets/jinja/blob/main/CHANGES.rst\">jinja2's changelog</a>.</em></p>\n<blockquote>\n<h2>Version 3.1.3</h2>\n<p>Released 2024-01-10</p>\n<ul>\n<li>Fix compiler error when checking if required blocks in parent templates are\nempty. :pr:<code>1858</code></li>\n<li><code>xmlattr</code> filter does not allow keys with spaces. GHSA-h5c8-rqwp-cp95</li>\n<li>Make error messages stemming from invalid nesting of <code>{% trans %}</code> blocks\nmore helpful. :pr:<code>1918</code></li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/pallets/jinja/commit/d9de4bb215fd1cc8092a410fb834c7c4060b1fc1\"><code>d9de4bb</code></a> release version 3.1.3</li>\n<li><a href=\"https://github.com/pallets/jinja/commit/50124e16561f17f6c1ec85a692f6551418971cdc\"><code>50124e1</code></a> skip test pypi</li>\n<li><a href=\"https://github.com/pallets/jinja/commit/9ea7222ef3f184480be0d0884e30ccfb4172b17b\"><code>9ea7222</code></a> use trusted publishing</li>\n<li><a href=\"https://github.com/pallets/jinja/commit/da703f7aae36b1e88baaa20de334d7ff6378fdde\"><code>da703f7</code></a> use trusted publishing</li>\n<li><a href=\"https://github.com/pallets/jinja/commit/bce174692547464512383ec40e0f8338b8811983\"><code>bce1746</code></a> use trusted publishing</li>\n<li><a href=\"https://github.com/pallets/jinja/commit/7277d8068be593deab3555c7c14f974ada373af1\"><code>7277d80</code></a> update pre-commit hooks</li>\n<li><a href=\"https://github.com/pallets/jinja/commit/5c8a10522421270f66376a24ec8e0d6812bc4b14\"><code>5c8a105</code></a> Make nested-trans-block exceptions nicer (<a href=\"https://redirect.github.com/pallets/jinja/issues/1918\">#1918</a>)</li>\n<li><a href=\"https://github.com/pallets/jinja/commit/19a55db3b411343309f2faaffaedbb089e841895\"><code>19a55db</code></a> Make nested-trans-block exceptions nicer</li>\n<li><a href=\"https://github.com/pallets/jinja/commit/716795349a41d4983a9a4771f7d883c96ea17be7\"><code>7167953</code></a> Merge pull request from GHSA-h5c8-rqwp-cp95</li>\n<li><a href=\"https://github.com/pallets/jinja/commit/7dd3680e6eea0d77fde024763657aa4d884ddb23\"><code>7dd3680</code></a> xmlattr filter disallows keys with spaces</li>\n<li>Additional commits viewable in <a href=\"https://github.com/pallets/jinja/compare/3.1.2...3.1.3\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=jinja2&package-manager=pip&previous-version=3.1.2&new-version=3.1.3)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nYou can trigger a rebase of this PR by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/srbhr/Resume-Matcher/network/alerts).\n\n</details>\n\n> **Note**\n> Automatic rebases have been disabled on this pull request as it has been open for over 30 days.\n",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "state",
          "value": "open",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": "archive/requirements_colab.txt",
          "qualifier": "files"
        },
        {
          "objectId": "dependabot[bot]",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "archive/requirements_colab.txt",
          "qualifier": "aggregates"
        },
        {
          "objectId": "dependabot[bot]",
          "qualifier": "has-participant"
        },
        {
          "objectId": "7f483620347a98c1466b26e6c0b6c2d3d9769159",
          "qualifier": "commits"
        },
        {
          "objectId": "7685292ea3cbfe3446b540b63f1d35d1cd4fb92a",
          "qualifier": "is-merged-with"
        },
        {
          "objectId": "7f483620347a98c1466b26e6c0b6c2d3d9769159",
          "qualifier": "formalises"
        }
      ],
      "id": "229"
    },
    {
      "type": "pull_request",
      "attributes": [
        {
          "name": "title",
          "value": "Chore(deps): Bump jinja2 from 3.1.2 to 3.1.3",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "description",
          "value": "Bumps [jinja2](https://github.com/pallets/jinja) from 3.1.2 to 3.1.3.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/pallets/jinja/releases\">jinja2's releases</a>.</em></p>\n<blockquote>\n<h2>3.1.3</h2>\n<p>This is a fix release for the 3.1.x feature branch.</p>\n<ul>\n<li>Fix for <a href=\"https://github.com/pallets/jinja/security/advisories/GHSA-h5c8-rqwp-cp95\">GHSA-h5c8-rqwp-cp95</a>. You are affected if you are using <code>xmlattr</code> and passing user input as attribute keys.</li>\n<li>Changes: <a href=\"https://jinja.palletsprojects.com/en/3.1.x/changes/#version-3-1-3\">https://jinja.palletsprojects.com/en/3.1.x/changes/#version-3-1-3</a></li>\n<li>Milestone: <a href=\"https://github.com/pallets/jinja/milestone/15?closed=1\">https://github.com/pallets/jinja/milestone/15?closed=1</a></li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/pallets/jinja/blob/main/CHANGES.rst\">jinja2's changelog</a>.</em></p>\n<blockquote>\n<h2>Version 3.1.3</h2>\n<p>Released 2024-01-10</p>\n<ul>\n<li>Fix compiler error when checking if required blocks in parent templates are\nempty. :pr:<code>1858</code></li>\n<li><code>xmlattr</code> filter does not allow keys with spaces. GHSA-h5c8-rqwp-cp95</li>\n<li>Make error messages stemming from invalid nesting of <code>{% trans %}</code> blocks\nmore helpful. :pr:<code>1918</code></li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/pallets/jinja/commit/d9de4bb215fd1cc8092a410fb834c7c4060b1fc1\"><code>d9de4bb</code></a> release version 3.1.3</li>\n<li><a href=\"https://github.com/pallets/jinja/commit/50124e16561f17f6c1ec85a692f6551418971cdc\"><code>50124e1</code></a> skip test pypi</li>\n<li><a href=\"https://github.com/pallets/jinja/commit/9ea7222ef3f184480be0d0884e30ccfb4172b17b\"><code>9ea7222</code></a> use trusted publishing</li>\n<li><a href=\"https://github.com/pallets/jinja/commit/da703f7aae36b1e88baaa20de334d7ff6378fdde\"><code>da703f7</code></a> use trusted publishing</li>\n<li><a href=\"https://github.com/pallets/jinja/commit/bce174692547464512383ec40e0f8338b8811983\"><code>bce1746</code></a> use trusted publishing</li>\n<li><a href=\"https://github.com/pallets/jinja/commit/7277d8068be593deab3555c7c14f974ada373af1\"><code>7277d80</code></a> update pre-commit hooks</li>\n<li><a href=\"https://github.com/pallets/jinja/commit/5c8a10522421270f66376a24ec8e0d6812bc4b14\"><code>5c8a105</code></a> Make nested-trans-block exceptions nicer (<a href=\"https://redirect.github.com/pallets/jinja/issues/1918\">#1918</a>)</li>\n<li><a href=\"https://github.com/pallets/jinja/commit/19a55db3b411343309f2faaffaedbb089e841895\"><code>19a55db</code></a> Make nested-trans-block exceptions nicer</li>\n<li><a href=\"https://github.com/pallets/jinja/commit/716795349a41d4983a9a4771f7d883c96ea17be7\"><code>7167953</code></a> Merge pull request from GHSA-h5c8-rqwp-cp95</li>\n<li><a href=\"https://github.com/pallets/jinja/commit/7dd3680e6eea0d77fde024763657aa4d884ddb23\"><code>7dd3680</code></a> xmlattr filter disallows keys with spaces</li>\n<li>Additional commits viewable in <a href=\"https://github.com/pallets/jinja/compare/3.1.2...3.1.3\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=jinja2&package-manager=pip&previous-version=3.1.2&new-version=3.1.3)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nYou can trigger a rebase of this PR by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/srbhr/Resume-Matcher/network/alerts).\n\n</details>\n\n> **Note**\n> Automatic rebases have been disabled on this pull request as it has been open for over 30 days.\n",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "state",
          "value": "open",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": "archive/requirements_colab.txt",
          "qualifier": "files"
        },
        {
          "objectId": "requirements.txt",
          "qualifier": "files"
        },
        {
          "objectId": "dependabot[bot]",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "archive/requirements_colab.txt",
          "qualifier": "aggregates"
        },
        {
          "objectId": "requirements.txt",
          "qualifier": "aggregates"
        },
        {
          "objectId": "dependabot[bot]",
          "qualifier": "has-participant"
        },
        {
          "objectId": "ddd0b20510cbe517ebbdf2cd0fc0c157c8e0208e",
          "qualifier": "commits"
        },
        {
          "objectId": "59f40aef383d0f5f7e33a61cd2c1c0fd3e41057c",
          "qualifier": "is-merged-with"
        },
        {
          "objectId": "ddd0b20510cbe517ebbdf2cd0fc0c157c8e0208e",
          "qualifier": "formalises"
        }
      ],
      "id": "228"
    },
    {
      "type": "pull_request",
      "attributes": [
        {
          "name": "title",
          "value": "Chore(deps): Bump gitpython from 3.1.32 to 3.1.41 in /archive",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "description",
          "value": "Bumps [gitpython](https://github.com/gitpython-developers/GitPython) from 3.1.32 to 3.1.41.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/gitpython-developers/GitPython/releases\">gitpython's releases</a>.</em></p>\n<blockquote>\n<h2>3.1.41 - fix Windows security issue</h2>\n<p>The details about the Windows security issue <a href=\"https://github.com/gitpython-developers/GitPython/security/advisories/GHSA-2mqj-m65w-jghx\">can be found in this advisory</a>.</p>\n<p>Special thanks go to <a href=\"https://github.com/EliahKagan\"><code>@\u200bEliahKagan</code></a> who reported the issue and fixed it in a single stroke, while being responsible for an incredible amount of improvements that he contributed over the last couple of months \u2764\ufe0f.</p>\n<h2>What's Changed</h2>\n<ul>\n<li>Add <code>__all__</code> in git.exc by <a href=\"https://github.com/EliahKagan\"><code>@\u200bEliahKagan</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1719\">gitpython-developers/GitPython#1719</a></li>\n<li>Set submodule update cadence to weekly by <a href=\"https://github.com/EliahKagan\"><code>@\u200bEliahKagan</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1721\">gitpython-developers/GitPython#1721</a></li>\n<li>Never modify sys.path by <a href=\"https://github.com/EliahKagan\"><code>@\u200bEliahKagan</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1720\">gitpython-developers/GitPython#1720</a></li>\n<li>Bump git/ext/gitdb from <code>8ec2390</code> to <code>ec58b7e</code> by <a href=\"https://github.com/dependabot\"><code>@\u200bdependabot</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1722\">gitpython-developers/GitPython#1722</a></li>\n<li>Revise comments, docstrings, some messages, and a bit of code by <a href=\"https://github.com/EliahKagan\"><code>@\u200bEliahKagan</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1725\">gitpython-developers/GitPython#1725</a></li>\n<li>Use zero-argument super() by <a href=\"https://github.com/EliahKagan\"><code>@\u200bEliahKagan</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1726\">gitpython-developers/GitPython#1726</a></li>\n<li>Remove obsolete note in _iter_packed_refs by <a href=\"https://github.com/EliahKagan\"><code>@\u200bEliahKagan</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1727\">gitpython-developers/GitPython#1727</a></li>\n<li>Reorganize test_util and make xfail marks precise by <a href=\"https://github.com/EliahKagan\"><code>@\u200bEliahKagan</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1729\">gitpython-developers/GitPython#1729</a></li>\n<li>Clarify license and make module top comments more consistent by <a href=\"https://github.com/EliahKagan\"><code>@\u200bEliahKagan</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1730\">gitpython-developers/GitPython#1730</a></li>\n<li>Deprecate compat.is_<!-- raw HTML omitted -->, rewriting all uses by <a href=\"https://github.com/EliahKagan\"><code>@\u200bEliahKagan</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1732\">gitpython-developers/GitPython#1732</a></li>\n<li>Revise and restore some module docstrings by <a href=\"https://github.com/EliahKagan\"><code>@\u200bEliahKagan</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1735\">gitpython-developers/GitPython#1735</a></li>\n<li>Make the rmtree callback Windows-only by <a href=\"https://github.com/EliahKagan\"><code>@\u200bEliahKagan</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1739\">gitpython-developers/GitPython#1739</a></li>\n<li>List all non-passing tests in test summaries by <a href=\"https://github.com/EliahKagan\"><code>@\u200bEliahKagan</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1740\">gitpython-developers/GitPython#1740</a></li>\n<li>Document some minor subtleties in test_util.py by <a href=\"https://github.com/EliahKagan\"><code>@\u200bEliahKagan</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1749\">gitpython-developers/GitPython#1749</a></li>\n<li>Always read metadata files as UTF-8 in setup.py by <a href=\"https://github.com/EliahKagan\"><code>@\u200bEliahKagan</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1748\">gitpython-developers/GitPython#1748</a></li>\n<li>Test native Windows on CI by <a href=\"https://github.com/EliahKagan\"><code>@\u200bEliahKagan</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1745\">gitpython-developers/GitPython#1745</a></li>\n<li>Test macOS on CI by <a href=\"https://github.com/EliahKagan\"><code>@\u200bEliahKagan</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1752\">gitpython-developers/GitPython#1752</a></li>\n<li>Let close_fds be True on all platforms by <a href=\"https://github.com/EliahKagan\"><code>@\u200bEliahKagan</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1753\">gitpython-developers/GitPython#1753</a></li>\n<li>Fix IndexFile.from_tree on Windows by <a href=\"https://github.com/EliahKagan\"><code>@\u200bEliahKagan</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1751\">gitpython-developers/GitPython#1751</a></li>\n<li>Remove unused TASKKILL fallback in AutoInterrupt by <a href=\"https://github.com/EliahKagan\"><code>@\u200bEliahKagan</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1754\">gitpython-developers/GitPython#1754</a></li>\n<li>Don't return with operand when conceptually void by <a href=\"https://github.com/EliahKagan\"><code>@\u200bEliahKagan</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1755\">gitpython-developers/GitPython#1755</a></li>\n<li>Group .gitignore entries by purpose by <a href=\"https://github.com/EliahKagan\"><code>@\u200bEliahKagan</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1758\">gitpython-developers/GitPython#1758</a></li>\n<li>Adding dubious ownership handling by <a href=\"https://github.com/marioaag\"><code>@\u200bmarioaag</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1746\">gitpython-developers/GitPython#1746</a></li>\n<li>Avoid brittle assumptions about preexisting temporary files in tests by <a href=\"https://github.com/EliahKagan\"><code>@\u200bEliahKagan</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1759\">gitpython-developers/GitPython#1759</a></li>\n<li>Overhaul noqa directives by <a href=\"https://github.com/EliahKagan\"><code>@\u200bEliahKagan</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1760\">gitpython-developers/GitPython#1760</a></li>\n<li>Clarify some Git.execute kill_after_timeout limitations by <a href=\"https://github.com/EliahKagan\"><code>@\u200bEliahKagan</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1761\">gitpython-developers/GitPython#1761</a></li>\n<li>Bump actions/setup-python from 4 to 5 by <a href=\"https://github.com/dependabot\"><code>@\u200bdependabot</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1763\">gitpython-developers/GitPython#1763</a></li>\n<li>Don't install black on Cygwin by <a href=\"https://github.com/EliahKagan\"><code>@\u200bEliahKagan</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1766\">gitpython-developers/GitPython#1766</a></li>\n<li>Extract all &quot;import gc&quot; to module level by <a href=\"https://github.com/EliahKagan\"><code>@\u200bEliahKagan</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1765\">gitpython-developers/GitPython#1765</a></li>\n<li>Extract remaining local &quot;import gc&quot; to module level by <a href=\"https://github.com/EliahKagan\"><code>@\u200bEliahKagan</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1768\">gitpython-developers/GitPython#1768</a></li>\n<li>Replace xfail with gc.collect in TestSubmodule.test_rename by <a href=\"https://github.com/EliahKagan\"><code>@\u200bEliahKagan</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1767\">gitpython-developers/GitPython#1767</a></li>\n<li>Enable CodeQL by <a href=\"https://github.com/EliahKagan\"><code>@\u200bEliahKagan</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1769\">gitpython-developers/GitPython#1769</a></li>\n<li>Replace some uses of the deprecated mktemp function by <a href=\"https://github.com/EliahKagan\"><code>@\u200bEliahKagan</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1770\">gitpython-developers/GitPython#1770</a></li>\n<li>Bump github/codeql-action from 2 to 3 by <a href=\"https://github.com/dependabot\"><code>@\u200bdependabot</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1773\">gitpython-developers/GitPython#1773</a></li>\n<li>Run some Windows environment variable tests only on Windows by <a href=\"https://github.com/EliahKagan\"><code>@\u200bEliahKagan</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1774\">gitpython-developers/GitPython#1774</a></li>\n<li>Fix TemporaryFileSwap regression where file_path could not be Path by <a href=\"https://github.com/EliahKagan\"><code>@\u200bEliahKagan</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1776\">gitpython-developers/GitPython#1776</a></li>\n<li>Improve hooks tests by <a href=\"https://github.com/EliahKagan\"><code>@\u200bEliahKagan</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1777\">gitpython-developers/GitPython#1777</a></li>\n<li>Fix if items of Index is of type PathLike by <a href=\"https://github.com/stegm\"><code>@\u200bstegm</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1778\">gitpython-developers/GitPython#1778</a></li>\n<li>Better document IterableObj.iter_items and improve some subclasses by <a href=\"https://github.com/EliahKagan\"><code>@\u200bEliahKagan</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1780\">gitpython-developers/GitPython#1780</a></li>\n<li>Revert &quot;Don't install black on Cygwin&quot; by <a href=\"https://github.com/EliahKagan\"><code>@\u200bEliahKagan</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1783\">gitpython-developers/GitPython#1783</a></li>\n<li>Add missing pip in $PATH on Cygwin CI by <a href=\"https://github.com/EliahKagan\"><code>@\u200bEliahKagan</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1784\">gitpython-developers/GitPython#1784</a></li>\n<li>Shorten Iterable docstrings and put IterableObj first by <a href=\"https://github.com/EliahKagan\"><code>@\u200bEliahKagan</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1785\">gitpython-developers/GitPython#1785</a></li>\n<li>Fix incompletely revised Iterable/IterableObj docstrings by <a href=\"https://github.com/EliahKagan\"><code>@\u200bEliahKagan</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1786\">gitpython-developers/GitPython#1786</a></li>\n<li>Pre-deprecate setting Git.USE_SHELL by <a href=\"https://github.com/EliahKagan\"><code>@\u200bEliahKagan</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1782\">gitpython-developers/GitPython#1782</a></li>\n</ul>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/gitpython-developers/GitPython/commit/f28873828496a6632b3a99101e3582ad164e9bb9\"><code>f288738</code></a> bump patch level</li>\n<li><a href=\"https://github.com/gitpython-developers/GitPython/commit/ef3192cc414f2fd9978908454f6fd95243784c7f\"><code>ef3192c</code></a> Merge pull request <a href=\"https://redirect.github.com/gitpython-developers/GitPython/issues/1792\">#1792</a> from EliahKagan/popen</li>\n<li><a href=\"https://github.com/gitpython-developers/GitPython/commit/1f3caa31f1b63908235e341418a0804ed37a320a\"><code>1f3caa3</code></a> Further clarify comment in test_hook_uses_shell_not_from_cwd</li>\n<li><a href=\"https://github.com/gitpython-developers/GitPython/commit/3eb7c2ab82e6dbe101ff916fca29d539cc2793af\"><code>3eb7c2a</code></a> Move safer_popen from git.util to git.cmd</li>\n<li><a href=\"https://github.com/gitpython-developers/GitPython/commit/c551e916c7b9e2d623b9d76f3352849a707d9bbe\"><code>c551e91</code></a> Extract shared logic for using Popen safely on Windows</li>\n<li><a href=\"https://github.com/gitpython-developers/GitPython/commit/15ebb258d4eebd9bf0f38780570d57e0b968b8de\"><code>15ebb25</code></a> Clarify comment in test_hook_uses_shell_not_from_cwd</li>\n<li><a href=\"https://github.com/gitpython-developers/GitPython/commit/f44524a9a9c8122b9b98d6e5797e1dfc3211c0b7\"><code>f44524a</code></a> Avoid spurious &quot;location may have moved&quot; on Windows</li>\n<li><a href=\"https://github.com/gitpython-developers/GitPython/commit/a42ea0a38c489caf9969836141120d760d3754b4\"><code>a42ea0a</code></a> Cover absent/no-distro bash.exe in hooks &quot;not from cwd&quot; test</li>\n<li><a href=\"https://github.com/gitpython-developers/GitPython/commit/7751436b94d96ce0978b301681b851edd6efed63\"><code>7751436</code></a> Extract venv management from test_installation</li>\n<li><a href=\"https://github.com/gitpython-developers/GitPython/commit/66ff4c177accfb4f21d3eb476381d248d99fd8b5\"><code>66ff4c1</code></a> Omit CWD in search for bash.exe to run hooks on Windows</li>\n<li>Additional commits viewable in <a href=\"https://github.com/gitpython-developers/GitPython/compare/3.1.32...3.1.41\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=gitpython&package-manager=pip&previous-version=3.1.32&new-version=3.1.41)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nYou can trigger a rebase of this PR by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/srbhr/Resume-Matcher/network/alerts).\n\n</details>\n\n> **Note**\n> Automatic rebases have been disabled on this pull request as it has been open for over 30 days.\n",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "state",
          "value": "open",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": "archive/requirements_colab.txt",
          "qualifier": "files"
        },
        {
          "objectId": "dependabot[bot]",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "archive/requirements_colab.txt",
          "qualifier": "aggregates"
        },
        {
          "objectId": "dependabot[bot]",
          "qualifier": "has-participant"
        },
        {
          "objectId": "ee182756bfb2cbaf6a2c003a9d24b6ddcd440e30",
          "qualifier": "commits"
        },
        {
          "objectId": "6ed99ab14f0980dba0a57bd13b0e63f5c9c4f4ae",
          "qualifier": "is-merged-with"
        },
        {
          "objectId": "ee182756bfb2cbaf6a2c003a9d24b6ddcd440e30",
          "qualifier": "formalises"
        }
      ],
      "id": "227"
    },
    {
      "type": "pull_request",
      "attributes": [
        {
          "name": "title",
          "value": "Chore(deps): Bump gitpython from 3.1.32 to 3.1.41",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "description",
          "value": "Bumps [gitpython](https://github.com/gitpython-developers/GitPython) from 3.1.32 to 3.1.41.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/gitpython-developers/GitPython/releases\">gitpython's releases</a>.</em></p>\n<blockquote>\n<h2>3.1.41 - fix Windows security issue</h2>\n<p>The details about the Windows security issue <a href=\"https://github.com/gitpython-developers/GitPython/security/advisories/GHSA-2mqj-m65w-jghx\">can be found in this advisory</a>.</p>\n<p>Special thanks go to <a href=\"https://github.com/EliahKagan\"><code>@\u200bEliahKagan</code></a> who reported the issue and fixed it in a single stroke, while being responsible for an incredible amount of improvements that he contributed over the last couple of months \u2764\ufe0f.</p>\n<h2>What's Changed</h2>\n<ul>\n<li>Add <code>__all__</code> in git.exc by <a href=\"https://github.com/EliahKagan\"><code>@\u200bEliahKagan</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1719\">gitpython-developers/GitPython#1719</a></li>\n<li>Set submodule update cadence to weekly by <a href=\"https://github.com/EliahKagan\"><code>@\u200bEliahKagan</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1721\">gitpython-developers/GitPython#1721</a></li>\n<li>Never modify sys.path by <a href=\"https://github.com/EliahKagan\"><code>@\u200bEliahKagan</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1720\">gitpython-developers/GitPython#1720</a></li>\n<li>Bump git/ext/gitdb from <code>8ec2390</code> to <code>ec58b7e</code> by <a href=\"https://github.com/dependabot\"><code>@\u200bdependabot</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1722\">gitpython-developers/GitPython#1722</a></li>\n<li>Revise comments, docstrings, some messages, and a bit of code by <a href=\"https://github.com/EliahKagan\"><code>@\u200bEliahKagan</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1725\">gitpython-developers/GitPython#1725</a></li>\n<li>Use zero-argument super() by <a href=\"https://github.com/EliahKagan\"><code>@\u200bEliahKagan</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1726\">gitpython-developers/GitPython#1726</a></li>\n<li>Remove obsolete note in _iter_packed_refs by <a href=\"https://github.com/EliahKagan\"><code>@\u200bEliahKagan</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1727\">gitpython-developers/GitPython#1727</a></li>\n<li>Reorganize test_util and make xfail marks precise by <a href=\"https://github.com/EliahKagan\"><code>@\u200bEliahKagan</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1729\">gitpython-developers/GitPython#1729</a></li>\n<li>Clarify license and make module top comments more consistent by <a href=\"https://github.com/EliahKagan\"><code>@\u200bEliahKagan</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1730\">gitpython-developers/GitPython#1730</a></li>\n<li>Deprecate compat.is_<!-- raw HTML omitted -->, rewriting all uses by <a href=\"https://github.com/EliahKagan\"><code>@\u200bEliahKagan</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1732\">gitpython-developers/GitPython#1732</a></li>\n<li>Revise and restore some module docstrings by <a href=\"https://github.com/EliahKagan\"><code>@\u200bEliahKagan</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1735\">gitpython-developers/GitPython#1735</a></li>\n<li>Make the rmtree callback Windows-only by <a href=\"https://github.com/EliahKagan\"><code>@\u200bEliahKagan</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1739\">gitpython-developers/GitPython#1739</a></li>\n<li>List all non-passing tests in test summaries by <a href=\"https://github.com/EliahKagan\"><code>@\u200bEliahKagan</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1740\">gitpython-developers/GitPython#1740</a></li>\n<li>Document some minor subtleties in test_util.py by <a href=\"https://github.com/EliahKagan\"><code>@\u200bEliahKagan</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1749\">gitpython-developers/GitPython#1749</a></li>\n<li>Always read metadata files as UTF-8 in setup.py by <a href=\"https://github.com/EliahKagan\"><code>@\u200bEliahKagan</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1748\">gitpython-developers/GitPython#1748</a></li>\n<li>Test native Windows on CI by <a href=\"https://github.com/EliahKagan\"><code>@\u200bEliahKagan</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1745\">gitpython-developers/GitPython#1745</a></li>\n<li>Test macOS on CI by <a href=\"https://github.com/EliahKagan\"><code>@\u200bEliahKagan</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1752\">gitpython-developers/GitPython#1752</a></li>\n<li>Let close_fds be True on all platforms by <a href=\"https://github.com/EliahKagan\"><code>@\u200bEliahKagan</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1753\">gitpython-developers/GitPython#1753</a></li>\n<li>Fix IndexFile.from_tree on Windows by <a href=\"https://github.com/EliahKagan\"><code>@\u200bEliahKagan</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1751\">gitpython-developers/GitPython#1751</a></li>\n<li>Remove unused TASKKILL fallback in AutoInterrupt by <a href=\"https://github.com/EliahKagan\"><code>@\u200bEliahKagan</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1754\">gitpython-developers/GitPython#1754</a></li>\n<li>Don't return with operand when conceptually void by <a href=\"https://github.com/EliahKagan\"><code>@\u200bEliahKagan</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1755\">gitpython-developers/GitPython#1755</a></li>\n<li>Group .gitignore entries by purpose by <a href=\"https://github.com/EliahKagan\"><code>@\u200bEliahKagan</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1758\">gitpython-developers/GitPython#1758</a></li>\n<li>Adding dubious ownership handling by <a href=\"https://github.com/marioaag\"><code>@\u200bmarioaag</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1746\">gitpython-developers/GitPython#1746</a></li>\n<li>Avoid brittle assumptions about preexisting temporary files in tests by <a href=\"https://github.com/EliahKagan\"><code>@\u200bEliahKagan</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1759\">gitpython-developers/GitPython#1759</a></li>\n<li>Overhaul noqa directives by <a href=\"https://github.com/EliahKagan\"><code>@\u200bEliahKagan</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1760\">gitpython-developers/GitPython#1760</a></li>\n<li>Clarify some Git.execute kill_after_timeout limitations by <a href=\"https://github.com/EliahKagan\"><code>@\u200bEliahKagan</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1761\">gitpython-developers/GitPython#1761</a></li>\n<li>Bump actions/setup-python from 4 to 5 by <a href=\"https://github.com/dependabot\"><code>@\u200bdependabot</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1763\">gitpython-developers/GitPython#1763</a></li>\n<li>Don't install black on Cygwin by <a href=\"https://github.com/EliahKagan\"><code>@\u200bEliahKagan</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1766\">gitpython-developers/GitPython#1766</a></li>\n<li>Extract all &quot;import gc&quot; to module level by <a href=\"https://github.com/EliahKagan\"><code>@\u200bEliahKagan</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1765\">gitpython-developers/GitPython#1765</a></li>\n<li>Extract remaining local &quot;import gc&quot; to module level by <a href=\"https://github.com/EliahKagan\"><code>@\u200bEliahKagan</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1768\">gitpython-developers/GitPython#1768</a></li>\n<li>Replace xfail with gc.collect in TestSubmodule.test_rename by <a href=\"https://github.com/EliahKagan\"><code>@\u200bEliahKagan</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1767\">gitpython-developers/GitPython#1767</a></li>\n<li>Enable CodeQL by <a href=\"https://github.com/EliahKagan\"><code>@\u200bEliahKagan</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1769\">gitpython-developers/GitPython#1769</a></li>\n<li>Replace some uses of the deprecated mktemp function by <a href=\"https://github.com/EliahKagan\"><code>@\u200bEliahKagan</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1770\">gitpython-developers/GitPython#1770</a></li>\n<li>Bump github/codeql-action from 2 to 3 by <a href=\"https://github.com/dependabot\"><code>@\u200bdependabot</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1773\">gitpython-developers/GitPython#1773</a></li>\n<li>Run some Windows environment variable tests only on Windows by <a href=\"https://github.com/EliahKagan\"><code>@\u200bEliahKagan</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1774\">gitpython-developers/GitPython#1774</a></li>\n<li>Fix TemporaryFileSwap regression where file_path could not be Path by <a href=\"https://github.com/EliahKagan\"><code>@\u200bEliahKagan</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1776\">gitpython-developers/GitPython#1776</a></li>\n<li>Improve hooks tests by <a href=\"https://github.com/EliahKagan\"><code>@\u200bEliahKagan</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1777\">gitpython-developers/GitPython#1777</a></li>\n<li>Fix if items of Index is of type PathLike by <a href=\"https://github.com/stegm\"><code>@\u200bstegm</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1778\">gitpython-developers/GitPython#1778</a></li>\n<li>Better document IterableObj.iter_items and improve some subclasses by <a href=\"https://github.com/EliahKagan\"><code>@\u200bEliahKagan</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1780\">gitpython-developers/GitPython#1780</a></li>\n<li>Revert &quot;Don't install black on Cygwin&quot; by <a href=\"https://github.com/EliahKagan\"><code>@\u200bEliahKagan</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1783\">gitpython-developers/GitPython#1783</a></li>\n<li>Add missing pip in $PATH on Cygwin CI by <a href=\"https://github.com/EliahKagan\"><code>@\u200bEliahKagan</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1784\">gitpython-developers/GitPython#1784</a></li>\n<li>Shorten Iterable docstrings and put IterableObj first by <a href=\"https://github.com/EliahKagan\"><code>@\u200bEliahKagan</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1785\">gitpython-developers/GitPython#1785</a></li>\n<li>Fix incompletely revised Iterable/IterableObj docstrings by <a href=\"https://github.com/EliahKagan\"><code>@\u200bEliahKagan</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1786\">gitpython-developers/GitPython#1786</a></li>\n<li>Pre-deprecate setting Git.USE_SHELL by <a href=\"https://github.com/EliahKagan\"><code>@\u200bEliahKagan</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1782\">gitpython-developers/GitPython#1782</a></li>\n</ul>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/gitpython-developers/GitPython/commit/f28873828496a6632b3a99101e3582ad164e9bb9\"><code>f288738</code></a> bump patch level</li>\n<li><a href=\"https://github.com/gitpython-developers/GitPython/commit/ef3192cc414f2fd9978908454f6fd95243784c7f\"><code>ef3192c</code></a> Merge pull request <a href=\"https://redirect.github.com/gitpython-developers/GitPython/issues/1792\">#1792</a> from EliahKagan/popen</li>\n<li><a href=\"https://github.com/gitpython-developers/GitPython/commit/1f3caa31f1b63908235e341418a0804ed37a320a\"><code>1f3caa3</code></a> Further clarify comment in test_hook_uses_shell_not_from_cwd</li>\n<li><a href=\"https://github.com/gitpython-developers/GitPython/commit/3eb7c2ab82e6dbe101ff916fca29d539cc2793af\"><code>3eb7c2a</code></a> Move safer_popen from git.util to git.cmd</li>\n<li><a href=\"https://github.com/gitpython-developers/GitPython/commit/c551e916c7b9e2d623b9d76f3352849a707d9bbe\"><code>c551e91</code></a> Extract shared logic for using Popen safely on Windows</li>\n<li><a href=\"https://github.com/gitpython-developers/GitPython/commit/15ebb258d4eebd9bf0f38780570d57e0b968b8de\"><code>15ebb25</code></a> Clarify comment in test_hook_uses_shell_not_from_cwd</li>\n<li><a href=\"https://github.com/gitpython-developers/GitPython/commit/f44524a9a9c8122b9b98d6e5797e1dfc3211c0b7\"><code>f44524a</code></a> Avoid spurious &quot;location may have moved&quot; on Windows</li>\n<li><a href=\"https://github.com/gitpython-developers/GitPython/commit/a42ea0a38c489caf9969836141120d760d3754b4\"><code>a42ea0a</code></a> Cover absent/no-distro bash.exe in hooks &quot;not from cwd&quot; test</li>\n<li><a href=\"https://github.com/gitpython-developers/GitPython/commit/7751436b94d96ce0978b301681b851edd6efed63\"><code>7751436</code></a> Extract venv management from test_installation</li>\n<li><a href=\"https://github.com/gitpython-developers/GitPython/commit/66ff4c177accfb4f21d3eb476381d248d99fd8b5\"><code>66ff4c1</code></a> Omit CWD in search for bash.exe to run hooks on Windows</li>\n<li>Additional commits viewable in <a href=\"https://github.com/gitpython-developers/GitPython/compare/3.1.32...3.1.41\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=gitpython&package-manager=pip&previous-version=3.1.32&new-version=3.1.41)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nYou can trigger a rebase of this PR by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/srbhr/Resume-Matcher/network/alerts).\n\n</details>\n\n> **Note**\n> Automatic rebases have been disabled on this pull request as it has been open for over 30 days.\n",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "state",
          "value": "open",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": "archive/requirements_colab.txt",
          "qualifier": "files"
        },
        {
          "objectId": "requirements.txt",
          "qualifier": "files"
        },
        {
          "objectId": "dependabot[bot]",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "archive/requirements_colab.txt",
          "qualifier": "aggregates"
        },
        {
          "objectId": "requirements.txt",
          "qualifier": "aggregates"
        },
        {
          "objectId": "dependabot[bot]",
          "qualifier": "has-participant"
        },
        {
          "objectId": "bef9d9023cfc3fa2baa65e50e2a4239f36b5acfa",
          "qualifier": "commits"
        },
        {
          "objectId": "3a68c9370aae6c562789cd673899488adce205a3",
          "qualifier": "is-merged-with"
        },
        {
          "objectId": "bef9d9023cfc3fa2baa65e50e2a4239f36b5acfa",
          "qualifier": "formalises"
        }
      ],
      "id": "226"
    },
    {
      "type": "pull_request",
      "attributes": [
        {
          "name": "title",
          "value": "Chore(deps): Bump fonttools from 4.41.0 to 4.43.0 in /archive",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "description",
          "value": "Bumps [fonttools](https://github.com/fonttools/fonttools) from 4.41.0 to 4.43.0.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/fonttools/fonttools/releases\">fonttools's releases</a>.</em></p>\n<blockquote>\n<h2>4.43.0</h2>\n<ul>\n<li>[subset] Set up lxml <code>XMLParser(resolve_entities=False)</code> when parsing OT-SVG documents to prevent XML External Entity (XXE) attacks (9f61271dc): <a href=\"https://codeql.github.com/codeql-query-help/python/py-xxe/\">https://codeql.github.com/codeql-query-help/python/py-xxe/</a></li>\n<li>[varLib.iup] Added workaround for a Cython bug in <code>iup_delta_optimize</code> that was leading to IUP tolerance being incorrectly initialised, resulting in sub-optimal deltas (60126435d, <a href=\"https://redirect.github.com/cython/cython/issues/5732\">cython/cython#5732</a>).</li>\n<li>[varLib] Added new command-line entry point <code>fonttools varLib.avar</code> to add an <code>avar</code> table to an existing VF from axes mappings in a .designspace file (0a3360e52).</li>\n<li>[instancer] Fixed bug whereby no longer used variation regions were not correctly pruned after VarData optimization (<a href=\"https://redirect.github.com/fonttools/fonttools/issues/3268\">#3268</a>).</li>\n<li>Added support for Python 3.12 (<a href=\"https://redirect.github.com/fonttools/fonttools/issues/3283\">#3283</a>).</li>\n</ul>\n<h2>4.42.1</h2>\n<ul>\n<li>[t1Lib] Fixed several Type 1 issues (<a href=\"https://redirect.github.com/fonttools/fonttools/issues/3238\">#3238</a>, <a href=\"https://redirect.github.com/fonttools/fonttools/issues/3240\">#3240</a>).</li>\n<li>[otBase/packer] Allow sharing tables reached by different offset sizes (<a href=\"https://redirect.github.com/fonttools/fonttools/issues/3241\">#3241</a>, <a href=\"https://redirect.github.com/fonttools/fonttools/issues/3236\">#3236</a>, 457f11c2).</li>\n<li>[varLib/merger] Fix Cursive attachment merging error when all anchors are NULL (<a href=\"https://redirect.github.com/fonttools/fonttools/issues/3248\">#3248</a>, <a href=\"https://redirect.github.com/fonttools/fonttools/issues/3247\">#3247</a>).</li>\n<li>[ttLib] Fixed warning when calling <code>addMultilingualName</code> and <code>ttFont</code> parameter was not passed on to <code>findMultilingualName</code> (<a href=\"https://redirect.github.com/fonttools/fonttools/issues/3253\">#3253</a>).</li>\n</ul>\n<h2>4.42.0</h2>\n<ul>\n<li>[varLib] Use sentinel value 0xFFFF to mark a glyph advance in hmtx/vmtx as non participating, allowing sparse masters to contain glyphs for variation purposes other than {H,V}VAR (<a href=\"https://redirect.github.com/fonttools/fonttools/issues/3235\">#3235</a>).</li>\n<li>[varLib/cff] Treat empty glyphs in non-default masters as missing, thus not participating in CFF2 delta computation, similarly to how varLib already treats them for gvar (<a href=\"https://redirect.github.com/fonttools/fonttools/issues/3234\">#3234</a>).</li>\n<li>Added varLib.avarPlanner script to deduce 'correct' avar v1 axis mappings based on glyph average weights (<a href=\"https://redirect.github.com/fonttools/fonttools/issues/3223\">#3223</a>).</li>\n</ul>\n<h2>4.41.1</h2>\n<ul>\n<li>[subset] Fixed perf regression in v4.41.0 by making <code>NameRecordVisitor</code> only visit tables that do contain nameID references (<a href=\"https://redirect.github.com/fonttools/fonttools/issues/3213\">#3213</a>, <a href=\"https://redirect.github.com/fonttools/fonttools/issues/3214\">#3214</a>).</li>\n<li>[varLib.instancer] Support instancing fonts containing null ConditionSet offsets in FeatureVariationRecords (<a href=\"https://redirect.github.com/fonttools/fonttools/issues/3211\">#3211</a>, <a href=\"https://redirect.github.com/fonttools/fonttools/issues/3212\">#3212</a>).</li>\n<li>[statisticsPen] Report font glyph-average weight/width and font-wide slant.</li>\n<li>[fontBuilder] Fixed head.created date incorrectly set to 0 instead of the current timestamp, regression introduced in v4.40.0 (<a href=\"https://redirect.github.com/fonttools/fonttools/issues/3210\">#3210</a>).</li>\n<li>[varLib.merger] Support sparse <code>CursivePos</code> masters (<a href=\"https://redirect.github.com/fonttools/fonttools/issues/3209\">#3209</a>).</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/fonttools/fonttools/blob/main/NEWS.rst\">fonttools's changelog</a>.</em></p>\n<blockquote>\n<h2>4.43.0 (released 2023-09-29)</h2>\n<ul>\n<li>[subset] Set up lxml <code>XMLParser(resolve_entities=False)</code> when parsing OT-SVG documents\nto prevent XML External Entity (XXE) attacks (9f61271dc):\n<a href=\"https://codeql.github.com/codeql-query-help/python/py-xxe/\">https://codeql.github.com/codeql-query-help/python/py-xxe/</a></li>\n<li>[varLib.iup] Added workaround for a Cython bug in <code>iup_delta_optimize</code> that was\nleading to IUP tolerance being incorrectly initialised, resulting in sub-optimal deltas\n(60126435d, <a href=\"https://redirect.github.com/cython/cython/issues/5732\">cython/cython#5732</a>).</li>\n<li>[varLib] Added new command-line entry point <code>fonttools varLib.avar</code> to add an\n<code>avar</code> table to an existing VF from axes mappings in a .designspace file (0a3360e52).</li>\n<li>[instancer] Fixed bug whereby no longer used variation regions were not correctly pruned\nafter VarData optimization (<a href=\"https://redirect.github.com/fonttools/fonttools/issues/3268\">#3268</a>).</li>\n<li>Added support for Python 3.12 (<a href=\"https://redirect.github.com/fonttools/fonttools/issues/3283\">#3283</a>).</li>\n</ul>\n<h2>4.42.1 (released 2023-08-20)</h2>\n<ul>\n<li>[t1Lib] Fixed several Type 1 issues (<a href=\"https://redirect.github.com/fonttools/fonttools/issues/3238\">#3238</a>, <a href=\"https://redirect.github.com/fonttools/fonttools/issues/3240\">#3240</a>).</li>\n<li>[otBase/packer] Allow sharing tables reached by different offset sizes (<a href=\"https://redirect.github.com/fonttools/fonttools/issues/3241\">#3241</a>, <a href=\"https://redirect.github.com/fonttools/fonttools/issues/3236\">#3236</a>).</li>\n<li>[varLib/merger] Fix Cursive attachment merging error when all anchors are NULL (<a href=\"https://redirect.github.com/fonttools/fonttools/issues/3248\">#3248</a>, <a href=\"https://redirect.github.com/fonttools/fonttools/issues/3247\">#3247</a>).</li>\n<li>[ttLib] Fixed warning when calling <code>addMultilingualName</code> and <code>ttFont</code> parameter was not\npassed on to <code>findMultilingualName</code> (<a href=\"https://redirect.github.com/fonttools/fonttools/issues/3253\">#3253</a>).</li>\n</ul>\n<h2>4.42.0 (released 2023-08-02)</h2>\n<ul>\n<li>[varLib] Use sentinel value 0xFFFF to mark a glyph advance in hmtx/vmtx as non\nparticipating, allowing sparse masters to contain glyphs for variation purposes other\nthan {H,V}VAR (<a href=\"https://redirect.github.com/fonttools/fonttools/issues/3235\">#3235</a>).</li>\n<li>[varLib/cff] Treat empty glyphs in non-default masters as missing, thus not participating\nin CFF2 delta computation, similarly to how varLib already treats them for gvar (<a href=\"https://redirect.github.com/fonttools/fonttools/issues/3234\">#3234</a>).</li>\n<li>Added varLib.avarPlanner script to deduce 'correct' avar v1 axis mappings based on\nglyph average weights (<a href=\"https://redirect.github.com/fonttools/fonttools/issues/3223\">#3223</a>).</li>\n</ul>\n<h2>4.41.1 (released 2023-07-21)</h2>\n<ul>\n<li>[subset] Fixed perf regression in v4.41.0 by making <code>NameRecordVisitor</code> only visit\ntables that do contain nameID references (<a href=\"https://redirect.github.com/fonttools/fonttools/issues/3213\">#3213</a>, <a href=\"https://redirect.github.com/fonttools/fonttools/issues/3214\">#3214</a>).</li>\n<li>[varLib.instancer] Support instancing fonts containing null ConditionSet offsets in\nFeatureVariationRecords (<a href=\"https://redirect.github.com/fonttools/fonttools/issues/3211\">#3211</a>, <a href=\"https://redirect.github.com/fonttools/fonttools/issues/3212\">#3212</a>).</li>\n<li>[statisticsPen] Report font glyph-average weight/width and font-wide slant.</li>\n<li>[fontBuilder] Fixed head.created date incorrectly set to 0 instead of the current\ntimestamp, regression introduced in v4.40.0 (<a href=\"https://redirect.github.com/fonttools/fonttools/issues/3210\">#3210</a>).</li>\n<li>[varLib.merger] Support sparse <code>CursivePos</code> masters (<a href=\"https://redirect.github.com/fonttools/fonttools/issues/3209\">#3209</a>).</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/fonttools/fonttools/commit/145460e77f772767608e677737f2d00147152620\"><code>145460e</code></a> Release 4.43.0</li>\n<li><a href=\"https://github.com/fonttools/fonttools/commit/64f3fd83d901f2da882cca5efc38ebdfd2718ab7\"><code>64f3fd8</code></a> Update changelog [skip ci]</li>\n<li><a href=\"https://github.com/fonttools/fonttools/commit/7aea49e88cf997b3e0bdfd7f6330a16578c9ce5a\"><code>7aea49e</code></a> Merge pull request <a href=\"https://redirect.github.com/fonttools/fonttools/issues/3283\">#3283</a> from hugovk/main</li>\n<li><a href=\"https://github.com/fonttools/fonttools/commit/4470c4401d628f273d79bf4bd0df42f1217fcc53\"><code>4470c44</code></a> Bump requirements.txt to support Python 3.12</li>\n<li><a href=\"https://github.com/fonttools/fonttools/commit/0c87cbad6e21c0f2511cdfc70ad7e1a572e84017\"><code>0c87cba</code></a> Bump scipy for Python 3.12 support</li>\n<li><a href=\"https://github.com/fonttools/fonttools/commit/eda6fa5cfbdfaf1d54cf391ed9c86b72288882a2\"><code>eda6fa5</code></a> Add support for Python 3.12</li>\n<li><a href=\"https://github.com/fonttools/fonttools/commit/0e033b0e5cd771f520bbf7346dedb7751677bd24\"><code>0e033b0</code></a> Bump reportlab from 3.6.12 to 3.6.13 in /Doc</li>\n<li><a href=\"https://github.com/fonttools/fonttools/commit/60126435dff31b489a9ea1a8dcc260101e5b1c20\"><code>6012643</code></a> [iup] Work around cython bug</li>\n<li><a href=\"https://github.com/fonttools/fonttools/commit/b14268a23c5a0dd644d2479064e4018a6b084b23\"><code>b14268a</code></a> [iup] Remove copy/pasta</li>\n<li><a href=\"https://github.com/fonttools/fonttools/commit/0a3360e52727cdefce2e9b28286b074faf99033c\"><code>0a3360e</code></a> [varLib.avar] New module to compile avar from .designspace file</li>\n<li>Additional commits viewable in <a href=\"https://github.com/fonttools/fonttools/compare/4.41.0...4.43.0\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=fonttools&package-manager=pip&previous-version=4.41.0&new-version=4.43.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nYou can trigger a rebase of this PR by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/srbhr/Resume-Matcher/network/alerts).\n\n</details>\n\n> **Note**\n> Automatic rebases have been disabled on this pull request as it has been open for over 30 days.\n",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "state",
          "value": "open",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": "archive/requirements_colab.txt",
          "qualifier": "files"
        },
        {
          "objectId": "dependabot[bot]",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "archive/requirements_colab.txt",
          "qualifier": "aggregates"
        },
        {
          "objectId": "dependabot[bot]",
          "qualifier": "has-participant"
        },
        {
          "objectId": "b927bb3359bfcac9039823fca7ac6cb3d8c95938",
          "qualifier": "commits"
        },
        {
          "objectId": "8b14b6a6f811fba7df0611cfbae064a4445529a4",
          "qualifier": "is-merged-with"
        },
        {
          "objectId": "b927bb3359bfcac9039823fca7ac6cb3d8c95938",
          "qualifier": "formalises"
        }
      ],
      "id": "225"
    },
    {
      "type": "pull_request",
      "attributes": [
        {
          "name": "title",
          "value": "Chore(deps): Bump fonttools from 4.41.0 to 4.43.0",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "description",
          "value": "Bumps [fonttools](https://github.com/fonttools/fonttools) from 4.41.0 to 4.43.0.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/fonttools/fonttools/releases\">fonttools's releases</a>.</em></p>\n<blockquote>\n<h2>4.43.0</h2>\n<ul>\n<li>[subset] Set up lxml <code>XMLParser(resolve_entities=False)</code> when parsing OT-SVG documents to prevent XML External Entity (XXE) attacks (9f61271dc): <a href=\"https://codeql.github.com/codeql-query-help/python/py-xxe/\">https://codeql.github.com/codeql-query-help/python/py-xxe/</a></li>\n<li>[varLib.iup] Added workaround for a Cython bug in <code>iup_delta_optimize</code> that was leading to IUP tolerance being incorrectly initialised, resulting in sub-optimal deltas (60126435d, <a href=\"https://redirect.github.com/cython/cython/issues/5732\">cython/cython#5732</a>).</li>\n<li>[varLib] Added new command-line entry point <code>fonttools varLib.avar</code> to add an <code>avar</code> table to an existing VF from axes mappings in a .designspace file (0a3360e52).</li>\n<li>[instancer] Fixed bug whereby no longer used variation regions were not correctly pruned after VarData optimization (<a href=\"https://redirect.github.com/fonttools/fonttools/issues/3268\">#3268</a>).</li>\n<li>Added support for Python 3.12 (<a href=\"https://redirect.github.com/fonttools/fonttools/issues/3283\">#3283</a>).</li>\n</ul>\n<h2>4.42.1</h2>\n<ul>\n<li>[t1Lib] Fixed several Type 1 issues (<a href=\"https://redirect.github.com/fonttools/fonttools/issues/3238\">#3238</a>, <a href=\"https://redirect.github.com/fonttools/fonttools/issues/3240\">#3240</a>).</li>\n<li>[otBase/packer] Allow sharing tables reached by different offset sizes (<a href=\"https://redirect.github.com/fonttools/fonttools/issues/3241\">#3241</a>, <a href=\"https://redirect.github.com/fonttools/fonttools/issues/3236\">#3236</a>, 457f11c2).</li>\n<li>[varLib/merger] Fix Cursive attachment merging error when all anchors are NULL (<a href=\"https://redirect.github.com/fonttools/fonttools/issues/3248\">#3248</a>, <a href=\"https://redirect.github.com/fonttools/fonttools/issues/3247\">#3247</a>).</li>\n<li>[ttLib] Fixed warning when calling <code>addMultilingualName</code> and <code>ttFont</code> parameter was not passed on to <code>findMultilingualName</code> (<a href=\"https://redirect.github.com/fonttools/fonttools/issues/3253\">#3253</a>).</li>\n</ul>\n<h2>4.42.0</h2>\n<ul>\n<li>[varLib] Use sentinel value 0xFFFF to mark a glyph advance in hmtx/vmtx as non participating, allowing sparse masters to contain glyphs for variation purposes other than {H,V}VAR (<a href=\"https://redirect.github.com/fonttools/fonttools/issues/3235\">#3235</a>).</li>\n<li>[varLib/cff] Treat empty glyphs in non-default masters as missing, thus not participating in CFF2 delta computation, similarly to how varLib already treats them for gvar (<a href=\"https://redirect.github.com/fonttools/fonttools/issues/3234\">#3234</a>).</li>\n<li>Added varLib.avarPlanner script to deduce 'correct' avar v1 axis mappings based on glyph average weights (<a href=\"https://redirect.github.com/fonttools/fonttools/issues/3223\">#3223</a>).</li>\n</ul>\n<h2>4.41.1</h2>\n<ul>\n<li>[subset] Fixed perf regression in v4.41.0 by making <code>NameRecordVisitor</code> only visit tables that do contain nameID references (<a href=\"https://redirect.github.com/fonttools/fonttools/issues/3213\">#3213</a>, <a href=\"https://redirect.github.com/fonttools/fonttools/issues/3214\">#3214</a>).</li>\n<li>[varLib.instancer] Support instancing fonts containing null ConditionSet offsets in FeatureVariationRecords (<a href=\"https://redirect.github.com/fonttools/fonttools/issues/3211\">#3211</a>, <a href=\"https://redirect.github.com/fonttools/fonttools/issues/3212\">#3212</a>).</li>\n<li>[statisticsPen] Report font glyph-average weight/width and font-wide slant.</li>\n<li>[fontBuilder] Fixed head.created date incorrectly set to 0 instead of the current timestamp, regression introduced in v4.40.0 (<a href=\"https://redirect.github.com/fonttools/fonttools/issues/3210\">#3210</a>).</li>\n<li>[varLib.merger] Support sparse <code>CursivePos</code> masters (<a href=\"https://redirect.github.com/fonttools/fonttools/issues/3209\">#3209</a>).</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/fonttools/fonttools/blob/main/NEWS.rst\">fonttools's changelog</a>.</em></p>\n<blockquote>\n<h2>4.43.0 (released 2023-09-29)</h2>\n<ul>\n<li>[subset] Set up lxml <code>XMLParser(resolve_entities=False)</code> when parsing OT-SVG documents\nto prevent XML External Entity (XXE) attacks (9f61271dc):\n<a href=\"https://codeql.github.com/codeql-query-help/python/py-xxe/\">https://codeql.github.com/codeql-query-help/python/py-xxe/</a></li>\n<li>[varLib.iup] Added workaround for a Cython bug in <code>iup_delta_optimize</code> that was\nleading to IUP tolerance being incorrectly initialised, resulting in sub-optimal deltas\n(60126435d, <a href=\"https://redirect.github.com/cython/cython/issues/5732\">cython/cython#5732</a>).</li>\n<li>[varLib] Added new command-line entry point <code>fonttools varLib.avar</code> to add an\n<code>avar</code> table to an existing VF from axes mappings in a .designspace file (0a3360e52).</li>\n<li>[instancer] Fixed bug whereby no longer used variation regions were not correctly pruned\nafter VarData optimization (<a href=\"https://redirect.github.com/fonttools/fonttools/issues/3268\">#3268</a>).</li>\n<li>Added support for Python 3.12 (<a href=\"https://redirect.github.com/fonttools/fonttools/issues/3283\">#3283</a>).</li>\n</ul>\n<h2>4.42.1 (released 2023-08-20)</h2>\n<ul>\n<li>[t1Lib] Fixed several Type 1 issues (<a href=\"https://redirect.github.com/fonttools/fonttools/issues/3238\">#3238</a>, <a href=\"https://redirect.github.com/fonttools/fonttools/issues/3240\">#3240</a>).</li>\n<li>[otBase/packer] Allow sharing tables reached by different offset sizes (<a href=\"https://redirect.github.com/fonttools/fonttools/issues/3241\">#3241</a>, <a href=\"https://redirect.github.com/fonttools/fonttools/issues/3236\">#3236</a>).</li>\n<li>[varLib/merger] Fix Cursive attachment merging error when all anchors are NULL (<a href=\"https://redirect.github.com/fonttools/fonttools/issues/3248\">#3248</a>, <a href=\"https://redirect.github.com/fonttools/fonttools/issues/3247\">#3247</a>).</li>\n<li>[ttLib] Fixed warning when calling <code>addMultilingualName</code> and <code>ttFont</code> parameter was not\npassed on to <code>findMultilingualName</code> (<a href=\"https://redirect.github.com/fonttools/fonttools/issues/3253\">#3253</a>).</li>\n</ul>\n<h2>4.42.0 (released 2023-08-02)</h2>\n<ul>\n<li>[varLib] Use sentinel value 0xFFFF to mark a glyph advance in hmtx/vmtx as non\nparticipating, allowing sparse masters to contain glyphs for variation purposes other\nthan {H,V}VAR (<a href=\"https://redirect.github.com/fonttools/fonttools/issues/3235\">#3235</a>).</li>\n<li>[varLib/cff] Treat empty glyphs in non-default masters as missing, thus not participating\nin CFF2 delta computation, similarly to how varLib already treats them for gvar (<a href=\"https://redirect.github.com/fonttools/fonttools/issues/3234\">#3234</a>).</li>\n<li>Added varLib.avarPlanner script to deduce 'correct' avar v1 axis mappings based on\nglyph average weights (<a href=\"https://redirect.github.com/fonttools/fonttools/issues/3223\">#3223</a>).</li>\n</ul>\n<h2>4.41.1 (released 2023-07-21)</h2>\n<ul>\n<li>[subset] Fixed perf regression in v4.41.0 by making <code>NameRecordVisitor</code> only visit\ntables that do contain nameID references (<a href=\"https://redirect.github.com/fonttools/fonttools/issues/3213\">#3213</a>, <a href=\"https://redirect.github.com/fonttools/fonttools/issues/3214\">#3214</a>).</li>\n<li>[varLib.instancer] Support instancing fonts containing null ConditionSet offsets in\nFeatureVariationRecords (<a href=\"https://redirect.github.com/fonttools/fonttools/issues/3211\">#3211</a>, <a href=\"https://redirect.github.com/fonttools/fonttools/issues/3212\">#3212</a>).</li>\n<li>[statisticsPen] Report font glyph-average weight/width and font-wide slant.</li>\n<li>[fontBuilder] Fixed head.created date incorrectly set to 0 instead of the current\ntimestamp, regression introduced in v4.40.0 (<a href=\"https://redirect.github.com/fonttools/fonttools/issues/3210\">#3210</a>).</li>\n<li>[varLib.merger] Support sparse <code>CursivePos</code> masters (<a href=\"https://redirect.github.com/fonttools/fonttools/issues/3209\">#3209</a>).</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/fonttools/fonttools/commit/145460e77f772767608e677737f2d00147152620\"><code>145460e</code></a> Release 4.43.0</li>\n<li><a href=\"https://github.com/fonttools/fonttools/commit/64f3fd83d901f2da882cca5efc38ebdfd2718ab7\"><code>64f3fd8</code></a> Update changelog [skip ci]</li>\n<li><a href=\"https://github.com/fonttools/fonttools/commit/7aea49e88cf997b3e0bdfd7f6330a16578c9ce5a\"><code>7aea49e</code></a> Merge pull request <a href=\"https://redirect.github.com/fonttools/fonttools/issues/3283\">#3283</a> from hugovk/main</li>\n<li><a href=\"https://github.com/fonttools/fonttools/commit/4470c4401d628f273d79bf4bd0df42f1217fcc53\"><code>4470c44</code></a> Bump requirements.txt to support Python 3.12</li>\n<li><a href=\"https://github.com/fonttools/fonttools/commit/0c87cbad6e21c0f2511cdfc70ad7e1a572e84017\"><code>0c87cba</code></a> Bump scipy for Python 3.12 support</li>\n<li><a href=\"https://github.com/fonttools/fonttools/commit/eda6fa5cfbdfaf1d54cf391ed9c86b72288882a2\"><code>eda6fa5</code></a> Add support for Python 3.12</li>\n<li><a href=\"https://github.com/fonttools/fonttools/commit/0e033b0e5cd771f520bbf7346dedb7751677bd24\"><code>0e033b0</code></a> Bump reportlab from 3.6.12 to 3.6.13 in /Doc</li>\n<li><a href=\"https://github.com/fonttools/fonttools/commit/60126435dff31b489a9ea1a8dcc260101e5b1c20\"><code>6012643</code></a> [iup] Work around cython bug</li>\n<li><a href=\"https://github.com/fonttools/fonttools/commit/b14268a23c5a0dd644d2479064e4018a6b084b23\"><code>b14268a</code></a> [iup] Remove copy/pasta</li>\n<li><a href=\"https://github.com/fonttools/fonttools/commit/0a3360e52727cdefce2e9b28286b074faf99033c\"><code>0a3360e</code></a> [varLib.avar] New module to compile avar from .designspace file</li>\n<li>Additional commits viewable in <a href=\"https://github.com/fonttools/fonttools/compare/4.41.0...4.43.0\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=fonttools&package-manager=pip&previous-version=4.41.0&new-version=4.43.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nYou can trigger a rebase of this PR by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/srbhr/Resume-Matcher/network/alerts).\n\n</details>\n\n> **Note**\n> Automatic rebases have been disabled on this pull request as it has been open for over 30 days.\n",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "state",
          "value": "open",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": "archive/requirements_colab.txt",
          "qualifier": "files"
        },
        {
          "objectId": "requirements.txt",
          "qualifier": "files"
        },
        {
          "objectId": "dependabot[bot]",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "archive/requirements_colab.txt",
          "qualifier": "aggregates"
        },
        {
          "objectId": "requirements.txt",
          "qualifier": "aggregates"
        },
        {
          "objectId": "dependabot[bot]",
          "qualifier": "has-participant"
        },
        {
          "objectId": "608f62f60140b986236eae6a3085a1dfb5d47d98",
          "qualifier": "commits"
        },
        {
          "objectId": "bd3372a6b4005995e179c1895d9d1b9027552453",
          "qualifier": "is-merged-with"
        },
        {
          "objectId": "608f62f60140b986236eae6a3085a1dfb5d47d98",
          "qualifier": "formalises"
        }
      ],
      "id": "224"
    },
    {
      "type": "pull_request",
      "attributes": [
        {
          "name": "title",
          "value": "Chore(deps): Bump pyarrow from 12.0.1 to 14.0.1",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "description",
          "value": "Bumps [pyarrow](https://github.com/apache/arrow) from 12.0.1 to 14.0.1.\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/apache/arrow/commit/ba537483618196f50c67a90a473039e4d5dc35e0\"><code>ba53748</code></a> MINOR: [Release] Update versions for 14.0.1</li>\n<li><a href=\"https://github.com/apache/arrow/commit/529f3768fa4fce80781cd1a3cbdcf3a826281b14\"><code>529f376</code></a> MINOR: [Release] Update .deb/.rpm changelogs for 14.0.1</li>\n<li><a href=\"https://github.com/apache/arrow/commit/b84bbcac64e184a2b58661385506cff23006cc10\"><code>b84bbca</code></a> MINOR: [Release] Update CHANGELOG.md for 14.0.1</li>\n<li><a href=\"https://github.com/apache/arrow/commit/f14170976372436ec1d03a724d8d3f3925484ecf\"><code>f141709</code></a> <a href=\"https://redirect.github.com/apache/arrow/issues/38607\">GH-38607</a>: [Python] Disable PyExtensionType autoload (<a href=\"https://redirect.github.com/apache/arrow/issues/38608\">#38608</a>)</li>\n<li><a href=\"https://github.com/apache/arrow/commit/5a37e741987e4cba41dfdad2331a308c95b62083\"><code>5a37e74</code></a> <a href=\"https://redirect.github.com/apache/arrow/issues/38431\">GH-38431</a>: [Python][CI] Update fs.type_name checks for s3fs tests (<a href=\"https://redirect.github.com/apache/arrow/issues/38455\">#38455</a>)</li>\n<li><a href=\"https://github.com/apache/arrow/commit/2dcee3f82c6cf54b53a64729fd81840efa583244\"><code>2dcee3f</code></a> MINOR: [Release] Update versions for 14.0.0</li>\n<li><a href=\"https://github.com/apache/arrow/commit/297428cbf2fc84a224654eb0b336614e6543d1aa\"><code>297428c</code></a> MINOR: [Release] Update .deb/.rpm changelogs for 14.0.0</li>\n<li><a href=\"https://github.com/apache/arrow/commit/3e9734f8830797fe09b883f00d349116d95c51f9\"><code>3e9734f</code></a> MINOR: [Release] Update CHANGELOG.md for 14.0.0</li>\n<li><a href=\"https://github.com/apache/arrow/commit/9f90995c8cee0d9906349f421f2445ab9adcb7ac\"><code>9f90995</code></a> <a href=\"https://redirect.github.com/apache/arrow/issues/38332\">GH-38332</a>: [CI][Release] Resolve symlinks in RAT lint (<a href=\"https://redirect.github.com/apache/arrow/issues/38337\">#38337</a>)</li>\n<li><a href=\"https://github.com/apache/arrow/commit/bd61239a32c94e37b9510071c0ffacad455798c0\"><code>bd61239</code></a> <a href=\"https://redirect.github.com/apache/arrow/issues/35531\">GH-35531</a>: [Python] C Data Interface PyCapsule Protocol (<a href=\"https://redirect.github.com/apache/arrow/issues/37797\">#37797</a>)</li>\n<li>Additional commits viewable in <a href=\"https://github.com/apache/arrow/compare/go/v12.0.1...apache-arrow-14.0.1\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pyarrow&package-manager=pip&previous-version=12.0.1&new-version=14.0.1)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/srbhr/Resume-Matcher/network/alerts).\n\n</details>",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "state",
          "value": "open",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": "requirements.txt",
          "qualifier": "files"
        },
        {
          "objectId": "dependabot[bot]",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "requirements.txt",
          "qualifier": "aggregates"
        },
        {
          "objectId": "dependabot[bot]",
          "qualifier": "has-participant"
        },
        {
          "objectId": "377a02320e44485f372c223b617b037c4686adb6",
          "qualifier": "commits"
        },
        {
          "objectId": "e61c95371459898c40504e6b962b0de7601466af",
          "qualifier": "is-merged-with"
        },
        {
          "objectId": "377a02320e44485f372c223b617b037c4686adb6",
          "qualifier": "formalises"
        }
      ],
      "id": "220"
    },
    {
      "type": "user",
      "attributes": [
        {
          "name": "username",
          "value": "sandipkarmokar",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "rank",
          "value": "CONTRIBUTOR",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "is-bot",
          "value": "False",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "rank",
          "value": "NONE",
          "time": "2025-05-27T05:11:03Z"
        }
      ],
      "relationships": [
        {
          "objectId": "Sandip Karmokar",
          "qualifier": "name"
        }
      ],
      "id": "Sandip Karmokar"
    },
    {
      "type": "pull_request",
      "attributes": [
        {
          "name": "title",
          "value": "HacktoberFest banner removal",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "description",
          "value": "changes made:\r\n\r\n- Remove hacktoberfest banner from README.MD\r\n- deleted the banner image\r\n",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "state",
          "value": "open",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": "Assets/img/Hacktoberfest_banner.png",
          "qualifier": "files"
        },
        {
          "objectId": "README.md",
          "qualifier": "files"
        },
        {
          "objectId": "Sandip Karmokar",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "Assets/img/Hacktoberfest_banner.png",
          "qualifier": "aggregates"
        },
        {
          "objectId": "README.md",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Sandip Karmokar",
          "qualifier": "has-participant"
        },
        {
          "objectId": "f75143052e29841f819060b178dbdf906fae6082",
          "qualifier": "commits"
        },
        {
          "objectId": "c0ec5b51ceee10aaadc9f54461bf88d6977ae31b",
          "qualifier": "is-merged-with"
        },
        {
          "objectId": "f75143052e29841f819060b178dbdf906fae6082",
          "qualifier": "formalises"
        }
      ],
      "id": "219"
    },
    {
      "type": "pull_request",
      "attributes": [
        {
          "name": "title",
          "value": "Chore(deps): Bump pypdf from 3.12.2 to 3.17.0 in /archive",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "description",
          "value": "Bumps [pypdf](https://github.com/py-pdf/pypdf) from 3.12.2 to 3.17.0.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/py-pdf/pypdf/releases\">pypdf's releases</a>.</em></p>\n<blockquote>\n<h2>Version 3.17.0, 2023-10-29</h2>\n<h2>What's new</h2>\n<h3>Security (SEC)</h3>\n<ul>\n<li>Infinite recursion when using PdfWriter(clone_from=reader) (<a href=\"https://redirect.github.com/py-pdf/pypdf/issues/2264\">#2264</a>) by <a href=\"https://github.com/Alexhuszagh\"><code>@\u200bAlexhuszagh</code></a></li>\n</ul>\n<h3>New Features (ENH)</h3>\n<ul>\n<li>Add parameter to select images to be removed (<a href=\"https://redirect.github.com/py-pdf/pypdf/issues/2214\">#2214</a>) by <a href=\"https://github.com/pubpub-zz\"><code>@\u200bpubpub-zz</code></a></li>\n</ul>\n<h3>Bug Fixes (BUG)</h3>\n<ul>\n<li>Correctly handle image mode 1 with FlateDecode (<a href=\"https://redirect.github.com/py-pdf/pypdf/issues/2249\">#2249</a>) by <a href=\"https://github.com/stefan6419846\"><code>@\u200bstefan6419846</code></a></li>\n<li>Error when filling a value with parentheses <a href=\"https://redirect.github.com/py-pdf/pypdf/issues/2268\">#2268</a> (<a href=\"https://redirect.github.com/py-pdf/pypdf/issues/2269\">#2269</a>) by <a href=\"https://github.com/KanorUbu\"><code>@\u200bKanorUbu</code></a></li>\n<li>Handle empty root outline (<a href=\"https://redirect.github.com/py-pdf/pypdf/issues/2239\">#2239</a>) by <a href=\"https://github.com/pubpub-zz\"><code>@\u200bpubpub-zz</code></a></li>\n</ul>\n<h3>Documentation (DOC)</h3>\n<ul>\n<li>Improve merging docs (<a href=\"https://redirect.github.com/py-pdf/pypdf/issues/2247\">#2247</a>) by <a href=\"https://github.com/stefan6419846\"><code>@\u200bstefan6419846</code></a></li>\n</ul>\n<h3>Developer Experience (DEV)</h3>\n<ul>\n<li>Test Python 3.7 with cryptopgraphy provider as well (<a href=\"https://redirect.github.com/py-pdf/pypdf/issues/2276\">#2276</a>) by <a href=\"https://github.com/stefan6419846\"><code>@\u200bstefan6419846</code></a></li>\n<li>Run CI with windows-latest (<a href=\"https://redirect.github.com/py-pdf/pypdf/issues/2258\">#2258</a>) by <a href=\"https://github.com/MartinThoma\"><code>@\u200bMartinThoma</code></a></li>\n<li>Use pytest-xdist (<a href=\"https://redirect.github.com/py-pdf/pypdf/issues/2254\">#2254</a>) by <a href=\"https://github.com/MartinThoma\"><code>@\u200bMartinThoma</code></a></li>\n<li>Attribute correct authors in the release notes (<a href=\"https://redirect.github.com/py-pdf/pypdf/issues/2246\">#2246</a>) by <a href=\"https://github.com/stefan6419846\"><code>@\u200bstefan6419846</code></a></li>\n</ul>\n<h3>Maintenance (MAINT)</h3>\n<ul>\n<li>Apply pre-commit hooks (<a href=\"https://redirect.github.com/py-pdf/pypdf/issues/2277\">#2277</a>) by <a href=\"https://github.com/MartinThoma\"><code>@\u200bMartinThoma</code></a></li>\n<li>Update requirements + mypy fixes (<a href=\"https://redirect.github.com/py-pdf/pypdf/issues/2275\">#2275</a>) by <a href=\"https://github.com/MartinThoma\"><code>@\u200bMartinThoma</code></a></li>\n<li>Explicitly provide Any for IO generic argument (<a href=\"https://redirect.github.com/py-pdf/pypdf/issues/2272\">#2272</a>) by <a href=\"https://github.com/nilehmann\"><code>@\u200bnilehmann</code></a></li>\n</ul>\n<h3>Testing (TST)</h3>\n<ul>\n<li>Fix test_image_without_pillow in windows environment (<a href=\"https://redirect.github.com/py-pdf/pypdf/issues/2257\">#2257</a>) by <a href=\"https://github.com/pubpub-zz\"><code>@\u200bpubpub-zz</code></a></li>\n</ul>\n<h3>Code Style (STY)</h3>\n<ul>\n<li>Remove unused import by <a href=\"https://github.com/MartinThoma\"><code>@\u200bMartinThoma</code></a></li>\n</ul>\n<p><a href=\"https://github.com/py-pdf/pypdf/compare/3.16.4...3.17.0\">Full Changelog</a></p>\n<h2>Version 3.16.4, 2023-10-10</h2>\n<h2>What's new</h2>\n<h3>Bug Fixes (BUG)</h3>\n<ul>\n<li>Avoid exceeding recursion depth when retrieving image mode (<a href=\"https://redirect.github.com/py-pdf/pypdf/issues/2251\">#2251</a>) by <a href=\"https://github.com/stefan6419846\"><code>@\u200bstefan6419846</code></a></li>\n</ul>\n<h3>Maintenance (MAINT)</h3>\n<ul>\n<li>Bump sample-files by <a href=\"https://github.com/MartinThoma\"><code>@\u200bMartinThoma</code></a></li>\n</ul>\n<p><a href=\"https://github.com/py-pdf/pypdf/compare/3.16.3...3.16.4\">Full Changelog</a></p>\n<h2>Version 3.16.3, 2023-10-08</h2>\n<h2>What's new</h2>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/py-pdf/pypdf/blob/main/CHANGELOG.md\">pypdf's changelog</a>.</em></p>\n<blockquote>\n<h2>Version 3.17.0, 2023-10-29</h2>\n<h3>Security (SEC)</h3>\n<ul>\n<li>Infinite recursion when using PdfWriter(clone_from=reader) (<a href=\"https://redirect.github.com/py-pdf/pypdf/issues/2264\">#2264</a>)</li>\n</ul>\n<h3>New Features (ENH)</h3>\n<ul>\n<li>Add parameter to select images to be removed (<a href=\"https://redirect.github.com/py-pdf/pypdf/issues/2214\">#2214</a>)</li>\n</ul>\n<h3>Bug Fixes (BUG)</h3>\n<ul>\n<li>Correctly handle image mode 1 with FlateDecode (<a href=\"https://redirect.github.com/py-pdf/pypdf/issues/2249\">#2249</a>)</li>\n<li>Error when filling a value with parentheses <a href=\"https://redirect.github.com/py-pdf/pypdf/issues/2268\">#2268</a> (<a href=\"https://redirect.github.com/py-pdf/pypdf/issues/2269\">#2269</a>)</li>\n<li>Handle empty root outline (<a href=\"https://redirect.github.com/py-pdf/pypdf/issues/2239\">#2239</a>)</li>\n</ul>\n<p><a href=\"https://github.com/py-pdf/pypdf/compare/3.16.4...3.17.0\">Full Changelog</a></p>\n<h2>Version 3.16.4, 2023-10-10</h2>\n<h3>Bug Fixes (BUG)</h3>\n<ul>\n<li>Avoid exceeding recursion depth when retrieving image mode (<a href=\"https://redirect.github.com/py-pdf/pypdf/issues/2251\">#2251</a>)</li>\n</ul>\n<p><a href=\"https://github.com/py-pdf/pypdf/compare/3.16.3...3.16.4\">Full Changelog</a></p>\n<h2>Version 3.16.3, 2023-10-08</h2>\n<h3>Bug Fixes (BUG)</h3>\n<ul>\n<li>Invalid cm/tm in visitor functions (<a href=\"https://redirect.github.com/py-pdf/pypdf/issues/2206\">#2206</a>)</li>\n<li>Encrypt / decrypt Stream object dictionaries (<a href=\"https://redirect.github.com/py-pdf/pypdf/issues/2228\">#2228</a>)</li>\n<li>Support nested color spaces for the /DeviceN color space (<a href=\"https://redirect.github.com/py-pdf/pypdf/issues/2241\">#2241</a>)</li>\n<li>Images property fails if NullObject in list (<a href=\"https://redirect.github.com/py-pdf/pypdf/issues/2215\">#2215</a>)</li>\n</ul>\n<h3>Developer Experience (DEV)</h3>\n<ul>\n<li>Unify mypy options and warn redundant workarounds (<a href=\"https://redirect.github.com/py-pdf/pypdf/issues/2223\">#2223</a>)</li>\n</ul>\n<p><a href=\"https://github.com/py-pdf/pypdf/compare/3.16.2...3.16.3\">Full Changelog</a></p>\n<h2>Version 3.16.2, 2023-09-24</h2>\n<h3>Bug Fixes (BUG)</h3>\n<ul>\n<li>PDF size increases because of too high float writing precision (<a href=\"https://redirect.github.com/py-pdf/pypdf/issues/2213\">#2213</a>)</li>\n<li>Fix test_watermarking_reportlab_rendering() (<a href=\"https://redirect.github.com/py-pdf/pypdf/issues/2203\">#2203</a>)</li>\n</ul>\n<p><a href=\"https://github.com/py-pdf/pypdf/compare/3.16.1...3.16.2\">Full Changelog</a></p>\n<h2>Version 3.16.1, 2023-09-17</h2>\n<p>\u26a0\ufe0f The 'rename PdfWriter.create_viewer_preference to\nPdfWriter.create_viewer_preferences (<a href=\"https://redirect.github.com/py-pdf/pypdf/issues/2190\">#2190</a>)' could be a breaking change for you,\nif you use it. As it was only introduced last week I'm confident enough that\nnobody will be affected though. Hence only the patch update.</p>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/py-pdf/pypdf/commit/5a2dd757e14229899e3f48e9891e6d9a63c7963b\"><code>5a2dd75</code></a> REL: 3.17.0</li>\n<li><a href=\"https://github.com/py-pdf/pypdf/commit/cb90320a58ab9923c2bfae9dcd64f431290873eb\"><code>cb90320</code></a> MAINT: Apply pre-commit hooks (<a href=\"https://redirect.github.com/py-pdf/pypdf/issues/2277\">#2277</a>)</li>\n<li><a href=\"https://github.com/py-pdf/pypdf/commit/9afda0afdf7fe8662ded959e9866f2e94fad66cd\"><code>9afda0a</code></a> ENH: Add parameter to select images to be removed (<a href=\"https://redirect.github.com/py-pdf/pypdf/issues/2214\">#2214</a>)</li>\n<li><a href=\"https://github.com/py-pdf/pypdf/commit/9b23ac3c9619492570011d551d521690de9a3e2d\"><code>9b23ac3</code></a> SEC: Infinite recursion when using PdfWriter(clone_from=reader) (<a href=\"https://redirect.github.com/py-pdf/pypdf/issues/2264\">#2264</a>)</li>\n<li><a href=\"https://github.com/py-pdf/pypdf/commit/56e191db4268f6ceb41401f5236e24c1ac4a2bdd\"><code>56e191d</code></a> DEV: Test Python 3.7 with cryptopgraphy provider as well (<a href=\"https://redirect.github.com/py-pdf/pypdf/issues/2276\">#2276</a>)</li>\n<li><a href=\"https://github.com/py-pdf/pypdf/commit/e9241ac795cea9b93f82741c57b1036de456d330\"><code>e9241ac</code></a> BUG: Correctly handle image mode 1 with FlateDecode (<a href=\"https://redirect.github.com/py-pdf/pypdf/issues/2249\">#2249</a>)</li>\n<li><a href=\"https://github.com/py-pdf/pypdf/commit/faa8c68caf361861d35d8719429103ddd7d5a1e5\"><code>faa8c68</code></a> MAINT: Update requirements + mypy fixes (<a href=\"https://redirect.github.com/py-pdf/pypdf/issues/2275\">#2275</a>)</li>\n<li><a href=\"https://github.com/py-pdf/pypdf/commit/06c1a194acf488bb5c45097d7b7d345369b5b006\"><code>06c1a19</code></a> BUG: Error when filling a value with parentheses <a href=\"https://redirect.github.com/py-pdf/pypdf/issues/2268\">#2268</a> (<a href=\"https://redirect.github.com/py-pdf/pypdf/issues/2269\">#2269</a>)</li>\n<li><a href=\"https://github.com/py-pdf/pypdf/commit/e5871579496aa5158f00322ebe270240c302e326\"><code>e587157</code></a> MAINT: Explicitly provide Any for IO generic argument (<a href=\"https://redirect.github.com/py-pdf/pypdf/issues/2272\">#2272</a>)</li>\n<li><a href=\"https://github.com/py-pdf/pypdf/commit/9047079045742f09df1a2f5ff40d4b316ec35f7a\"><code>9047079</code></a> STY: Remove unused import</li>\n<li>Additional commits viewable in <a href=\"https://github.com/py-pdf/pypdf/compare/3.12.2...3.17.0\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pypdf&package-manager=pip&previous-version=3.12.2&new-version=3.17.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nYou can trigger a rebase of this PR by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/srbhr/Resume-Matcher/network/alerts).\n\n</details>\n\n> **Note**\n> Automatic rebases have been disabled on this pull request as it has been open for over 30 days.\n",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "state",
          "value": "open",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": "archive/requirements_colab.txt",
          "qualifier": "files"
        },
        {
          "objectId": "dependabot[bot]",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "archive/requirements_colab.txt",
          "qualifier": "aggregates"
        },
        {
          "objectId": "dependabot[bot]",
          "qualifier": "has-participant"
        },
        {
          "objectId": "661057b3b7535e6eae75ea83a0cd70204585d956",
          "qualifier": "commits"
        },
        {
          "objectId": "d672b247faa56d59b61655d8129ae149bbfb47e1",
          "qualifier": "is-merged-with"
        },
        {
          "objectId": "661057b3b7535e6eae75ea83a0cd70204585d956",
          "qualifier": "formalises"
        }
      ],
      "id": "218"
    },
    {
      "type": "pull_request",
      "attributes": [
        {
          "name": "title",
          "value": "Chore(deps): Bump pypdf from 3.12.2 to 3.17.0",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "description",
          "value": "Bumps [pypdf](https://github.com/py-pdf/pypdf) from 3.12.2 to 3.17.0.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/py-pdf/pypdf/releases\">pypdf's releases</a>.</em></p>\n<blockquote>\n<h2>Version 3.17.0, 2023-10-29</h2>\n<h2>What's new</h2>\n<h3>Security (SEC)</h3>\n<ul>\n<li>Infinite recursion when using PdfWriter(clone_from=reader) (<a href=\"https://redirect.github.com/py-pdf/pypdf/issues/2264\">#2264</a>) by <a href=\"https://github.com/Alexhuszagh\"><code>@\u200bAlexhuszagh</code></a></li>\n</ul>\n<h3>New Features (ENH)</h3>\n<ul>\n<li>Add parameter to select images to be removed (<a href=\"https://redirect.github.com/py-pdf/pypdf/issues/2214\">#2214</a>) by <a href=\"https://github.com/pubpub-zz\"><code>@\u200bpubpub-zz</code></a></li>\n</ul>\n<h3>Bug Fixes (BUG)</h3>\n<ul>\n<li>Correctly handle image mode 1 with FlateDecode (<a href=\"https://redirect.github.com/py-pdf/pypdf/issues/2249\">#2249</a>) by <a href=\"https://github.com/stefan6419846\"><code>@\u200bstefan6419846</code></a></li>\n<li>Error when filling a value with parentheses <a href=\"https://redirect.github.com/py-pdf/pypdf/issues/2268\">#2268</a> (<a href=\"https://redirect.github.com/py-pdf/pypdf/issues/2269\">#2269</a>) by <a href=\"https://github.com/KanorUbu\"><code>@\u200bKanorUbu</code></a></li>\n<li>Handle empty root outline (<a href=\"https://redirect.github.com/py-pdf/pypdf/issues/2239\">#2239</a>) by <a href=\"https://github.com/pubpub-zz\"><code>@\u200bpubpub-zz</code></a></li>\n</ul>\n<h3>Documentation (DOC)</h3>\n<ul>\n<li>Improve merging docs (<a href=\"https://redirect.github.com/py-pdf/pypdf/issues/2247\">#2247</a>) by <a href=\"https://github.com/stefan6419846\"><code>@\u200bstefan6419846</code></a></li>\n</ul>\n<h3>Developer Experience (DEV)</h3>\n<ul>\n<li>Test Python 3.7 with cryptopgraphy provider as well (<a href=\"https://redirect.github.com/py-pdf/pypdf/issues/2276\">#2276</a>) by <a href=\"https://github.com/stefan6419846\"><code>@\u200bstefan6419846</code></a></li>\n<li>Run CI with windows-latest (<a href=\"https://redirect.github.com/py-pdf/pypdf/issues/2258\">#2258</a>) by <a href=\"https://github.com/MartinThoma\"><code>@\u200bMartinThoma</code></a></li>\n<li>Use pytest-xdist (<a href=\"https://redirect.github.com/py-pdf/pypdf/issues/2254\">#2254</a>) by <a href=\"https://github.com/MartinThoma\"><code>@\u200bMartinThoma</code></a></li>\n<li>Attribute correct authors in the release notes (<a href=\"https://redirect.github.com/py-pdf/pypdf/issues/2246\">#2246</a>) by <a href=\"https://github.com/stefan6419846\"><code>@\u200bstefan6419846</code></a></li>\n</ul>\n<h3>Maintenance (MAINT)</h3>\n<ul>\n<li>Apply pre-commit hooks (<a href=\"https://redirect.github.com/py-pdf/pypdf/issues/2277\">#2277</a>) by <a href=\"https://github.com/MartinThoma\"><code>@\u200bMartinThoma</code></a></li>\n<li>Update requirements + mypy fixes (<a href=\"https://redirect.github.com/py-pdf/pypdf/issues/2275\">#2275</a>) by <a href=\"https://github.com/MartinThoma\"><code>@\u200bMartinThoma</code></a></li>\n<li>Explicitly provide Any for IO generic argument (<a href=\"https://redirect.github.com/py-pdf/pypdf/issues/2272\">#2272</a>) by <a href=\"https://github.com/nilehmann\"><code>@\u200bnilehmann</code></a></li>\n</ul>\n<h3>Testing (TST)</h3>\n<ul>\n<li>Fix test_image_without_pillow in windows environment (<a href=\"https://redirect.github.com/py-pdf/pypdf/issues/2257\">#2257</a>) by <a href=\"https://github.com/pubpub-zz\"><code>@\u200bpubpub-zz</code></a></li>\n</ul>\n<h3>Code Style (STY)</h3>\n<ul>\n<li>Remove unused import by <a href=\"https://github.com/MartinThoma\"><code>@\u200bMartinThoma</code></a></li>\n</ul>\n<p><a href=\"https://github.com/py-pdf/pypdf/compare/3.16.4...3.17.0\">Full Changelog</a></p>\n<h2>Version 3.16.4, 2023-10-10</h2>\n<h2>What's new</h2>\n<h3>Bug Fixes (BUG)</h3>\n<ul>\n<li>Avoid exceeding recursion depth when retrieving image mode (<a href=\"https://redirect.github.com/py-pdf/pypdf/issues/2251\">#2251</a>) by <a href=\"https://github.com/stefan6419846\"><code>@\u200bstefan6419846</code></a></li>\n</ul>\n<h3>Maintenance (MAINT)</h3>\n<ul>\n<li>Bump sample-files by <a href=\"https://github.com/MartinThoma\"><code>@\u200bMartinThoma</code></a></li>\n</ul>\n<p><a href=\"https://github.com/py-pdf/pypdf/compare/3.16.3...3.16.4\">Full Changelog</a></p>\n<h2>Version 3.16.3, 2023-10-08</h2>\n<h2>What's new</h2>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/py-pdf/pypdf/blob/main/CHANGELOG.md\">pypdf's changelog</a>.</em></p>\n<blockquote>\n<h2>Version 3.17.0, 2023-10-29</h2>\n<h3>Security (SEC)</h3>\n<ul>\n<li>Infinite recursion when using PdfWriter(clone_from=reader) (<a href=\"https://redirect.github.com/py-pdf/pypdf/issues/2264\">#2264</a>)</li>\n</ul>\n<h3>New Features (ENH)</h3>\n<ul>\n<li>Add parameter to select images to be removed (<a href=\"https://redirect.github.com/py-pdf/pypdf/issues/2214\">#2214</a>)</li>\n</ul>\n<h3>Bug Fixes (BUG)</h3>\n<ul>\n<li>Correctly handle image mode 1 with FlateDecode (<a href=\"https://redirect.github.com/py-pdf/pypdf/issues/2249\">#2249</a>)</li>\n<li>Error when filling a value with parentheses <a href=\"https://redirect.github.com/py-pdf/pypdf/issues/2268\">#2268</a> (<a href=\"https://redirect.github.com/py-pdf/pypdf/issues/2269\">#2269</a>)</li>\n<li>Handle empty root outline (<a href=\"https://redirect.github.com/py-pdf/pypdf/issues/2239\">#2239</a>)</li>\n</ul>\n<p><a href=\"https://github.com/py-pdf/pypdf/compare/3.16.4...3.17.0\">Full Changelog</a></p>\n<h2>Version 3.16.4, 2023-10-10</h2>\n<h3>Bug Fixes (BUG)</h3>\n<ul>\n<li>Avoid exceeding recursion depth when retrieving image mode (<a href=\"https://redirect.github.com/py-pdf/pypdf/issues/2251\">#2251</a>)</li>\n</ul>\n<p><a href=\"https://github.com/py-pdf/pypdf/compare/3.16.3...3.16.4\">Full Changelog</a></p>\n<h2>Version 3.16.3, 2023-10-08</h2>\n<h3>Bug Fixes (BUG)</h3>\n<ul>\n<li>Invalid cm/tm in visitor functions (<a href=\"https://redirect.github.com/py-pdf/pypdf/issues/2206\">#2206</a>)</li>\n<li>Encrypt / decrypt Stream object dictionaries (<a href=\"https://redirect.github.com/py-pdf/pypdf/issues/2228\">#2228</a>)</li>\n<li>Support nested color spaces for the /DeviceN color space (<a href=\"https://redirect.github.com/py-pdf/pypdf/issues/2241\">#2241</a>)</li>\n<li>Images property fails if NullObject in list (<a href=\"https://redirect.github.com/py-pdf/pypdf/issues/2215\">#2215</a>)</li>\n</ul>\n<h3>Developer Experience (DEV)</h3>\n<ul>\n<li>Unify mypy options and warn redundant workarounds (<a href=\"https://redirect.github.com/py-pdf/pypdf/issues/2223\">#2223</a>)</li>\n</ul>\n<p><a href=\"https://github.com/py-pdf/pypdf/compare/3.16.2...3.16.3\">Full Changelog</a></p>\n<h2>Version 3.16.2, 2023-09-24</h2>\n<h3>Bug Fixes (BUG)</h3>\n<ul>\n<li>PDF size increases because of too high float writing precision (<a href=\"https://redirect.github.com/py-pdf/pypdf/issues/2213\">#2213</a>)</li>\n<li>Fix test_watermarking_reportlab_rendering() (<a href=\"https://redirect.github.com/py-pdf/pypdf/issues/2203\">#2203</a>)</li>\n</ul>\n<p><a href=\"https://github.com/py-pdf/pypdf/compare/3.16.1...3.16.2\">Full Changelog</a></p>\n<h2>Version 3.16.1, 2023-09-17</h2>\n<p>\u26a0\ufe0f The 'rename PdfWriter.create_viewer_preference to\nPdfWriter.create_viewer_preferences (<a href=\"https://redirect.github.com/py-pdf/pypdf/issues/2190\">#2190</a>)' could be a breaking change for you,\nif you use it. As it was only introduced last week I'm confident enough that\nnobody will be affected though. Hence only the patch update.</p>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/py-pdf/pypdf/commit/5a2dd757e14229899e3f48e9891e6d9a63c7963b\"><code>5a2dd75</code></a> REL: 3.17.0</li>\n<li><a href=\"https://github.com/py-pdf/pypdf/commit/cb90320a58ab9923c2bfae9dcd64f431290873eb\"><code>cb90320</code></a> MAINT: Apply pre-commit hooks (<a href=\"https://redirect.github.com/py-pdf/pypdf/issues/2277\">#2277</a>)</li>\n<li><a href=\"https://github.com/py-pdf/pypdf/commit/9afda0afdf7fe8662ded959e9866f2e94fad66cd\"><code>9afda0a</code></a> ENH: Add parameter to select images to be removed (<a href=\"https://redirect.github.com/py-pdf/pypdf/issues/2214\">#2214</a>)</li>\n<li><a href=\"https://github.com/py-pdf/pypdf/commit/9b23ac3c9619492570011d551d521690de9a3e2d\"><code>9b23ac3</code></a> SEC: Infinite recursion when using PdfWriter(clone_from=reader) (<a href=\"https://redirect.github.com/py-pdf/pypdf/issues/2264\">#2264</a>)</li>\n<li><a href=\"https://github.com/py-pdf/pypdf/commit/56e191db4268f6ceb41401f5236e24c1ac4a2bdd\"><code>56e191d</code></a> DEV: Test Python 3.7 with cryptopgraphy provider as well (<a href=\"https://redirect.github.com/py-pdf/pypdf/issues/2276\">#2276</a>)</li>\n<li><a href=\"https://github.com/py-pdf/pypdf/commit/e9241ac795cea9b93f82741c57b1036de456d330\"><code>e9241ac</code></a> BUG: Correctly handle image mode 1 with FlateDecode (<a href=\"https://redirect.github.com/py-pdf/pypdf/issues/2249\">#2249</a>)</li>\n<li><a href=\"https://github.com/py-pdf/pypdf/commit/faa8c68caf361861d35d8719429103ddd7d5a1e5\"><code>faa8c68</code></a> MAINT: Update requirements + mypy fixes (<a href=\"https://redirect.github.com/py-pdf/pypdf/issues/2275\">#2275</a>)</li>\n<li><a href=\"https://github.com/py-pdf/pypdf/commit/06c1a194acf488bb5c45097d7b7d345369b5b006\"><code>06c1a19</code></a> BUG: Error when filling a value with parentheses <a href=\"https://redirect.github.com/py-pdf/pypdf/issues/2268\">#2268</a> (<a href=\"https://redirect.github.com/py-pdf/pypdf/issues/2269\">#2269</a>)</li>\n<li><a href=\"https://github.com/py-pdf/pypdf/commit/e5871579496aa5158f00322ebe270240c302e326\"><code>e587157</code></a> MAINT: Explicitly provide Any for IO generic argument (<a href=\"https://redirect.github.com/py-pdf/pypdf/issues/2272\">#2272</a>)</li>\n<li><a href=\"https://github.com/py-pdf/pypdf/commit/9047079045742f09df1a2f5ff40d4b316ec35f7a\"><code>9047079</code></a> STY: Remove unused import</li>\n<li>Additional commits viewable in <a href=\"https://github.com/py-pdf/pypdf/compare/3.12.2...3.17.0\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pypdf&package-manager=pip&previous-version=3.12.2&new-version=3.17.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nYou can trigger a rebase of this PR by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/srbhr/Resume-Matcher/network/alerts).\n\n</details>\n\n> **Note**\n> Automatic rebases have been disabled on this pull request as it has been open for over 30 days.\n",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "state",
          "value": "open",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": "archive/requirements_colab.txt",
          "qualifier": "files"
        },
        {
          "objectId": "requirements.txt",
          "qualifier": "files"
        },
        {
          "objectId": "dependabot[bot]",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "archive/requirements_colab.txt",
          "qualifier": "aggregates"
        },
        {
          "objectId": "requirements.txt",
          "qualifier": "aggregates"
        },
        {
          "objectId": "dependabot[bot]",
          "qualifier": "has-participant"
        },
        {
          "objectId": "1fa5592604f95787408b02b74cd1b26030bd2f03",
          "qualifier": "commits"
        },
        {
          "objectId": "d1929f9b8b0e6fc93c5a75ac9ea2499c2a722346",
          "qualifier": "is-merged-with"
        },
        {
          "objectId": "1fa5592604f95787408b02b74cd1b26030bd2f03",
          "qualifier": "formalises"
        }
      ],
      "id": "217"
    },
    {
      "type": "user",
      "attributes": [
        {
          "name": "username",
          "value": "vimode",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "rank",
          "value": "NONE",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "is-bot",
          "value": "False",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": "vimode",
          "qualifier": "name"
        }
      ],
      "id": "vimode"
    },
    {
      "type": "user",
      "attributes": [
        {
          "name": "username",
          "value": "vivekBoii",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "rank",
          "value": "NONE",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "is-bot",
          "value": "False",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": "Vivek Kumar",
          "qualifier": "name"
        }
      ],
      "id": "Vivek Kumar"
    },
    {
      "type": "user",
      "attributes": [
        {
          "name": "username",
          "value": "Markkimotho",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "rank",
          "value": "NONE",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "is-bot",
          "value": "False",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "rank",
          "value": "CONTRIBUTOR",
          "time": "2025-05-17T08:49:32Z"
        }
      ],
      "relationships": [
        {
          "objectId": "Tinega",
          "qualifier": "name"
        }
      ],
      "id": "Tinega"
    },
    {
      "type": "user",
      "attributes": [
        {
          "name": "username",
          "value": "thlau21",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "rank",
          "value": "NONE",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "is-bot",
          "value": "False",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": "Thomas Lau",
          "qualifier": "name"
        }
      ],
      "id": "Thomas Lau"
    },
    {
      "type": "user",
      "attributes": [
        {
          "name": "username",
          "value": "kemkartanya",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "rank",
          "value": "NONE",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "is-bot",
          "value": "False",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": "Tanya Kemkar",
          "qualifier": "name"
        }
      ],
      "id": "Tanya Kemkar"
    },
    {
      "type": "pull_request",
      "attributes": [
        {
          "name": "title",
          "value": "Fix typos and grammatical errors in README.md",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "description",
          "value": "## Description\r\nThis PR fixes some typos, spelling mistakes and grammatical errors.\r\n\r\n## Type\r\n\r\n- [x] Documentation Update\r\n\r\n## Proposed Changes\r\nREADME.md updated\r\n\r\n## Checklist\r\n\r\n- [x] The documentation has been updated (if applicable)\r\n- [x] The commit messages are descriptive and follow the project's guidelines\r\n\r\n",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "state",
          "value": "open",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": "README.md",
          "qualifier": "files"
        },
        {
          "objectId": "vimode",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "README.md",
          "qualifier": "aggregates"
        },
        {
          "objectId": "vimode",
          "qualifier": "has-participant"
        },
        {
          "objectId": "56b5e57150c0523f1f62d716508277c85e7c2214",
          "qualifier": "commits"
        },
        {
          "objectId": "23c9ecd5cb36c09ecb3ce36bc3a97e316368dd55",
          "qualifier": "is-merged-with"
        },
        {
          "objectId": "56b5e57150c0523f1f62d716508277c85e7c2214",
          "qualifier": "formalises"
        }
      ],
      "id": "216"
    },
    {
      "type": "pull_request",
      "attributes": [
        {
          "name": "title",
          "value": "Added Footer UI design",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "description",
          "value": "Added the current footer UI Design to the Mockup folder",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "state",
          "value": "open",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": "UI-Mockup/Footer UI Mockup.png",
          "qualifier": "files"
        },
        {
          "objectId": "Sandip Karmokar",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "UI-Mockup/Footer UI Mockup.png",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Sandip Karmokar",
          "qualifier": "has-participant"
        },
        {
          "objectId": "d367b33a5bd62b51dbb1a414c61692fc07695194",
          "qualifier": "commits"
        },
        {
          "objectId": "3bd12835602f0528921e28bbce4735b6d3202339",
          "qualifier": "is-merged-with"
        },
        {
          "objectId": "d367b33a5bd62b51dbb1a414c61692fc07695194",
          "qualifier": "formalises"
        }
      ],
      "id": "215"
    },
    {
      "type": "pull_request",
      "attributes": [
        {
          "name": "title",
          "value": "Chore(deps): Bump pillow from 9.5.0 to 10.0.1 in /archive",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "description",
          "value": "Bumps [pillow](https://github.com/python-pillow/Pillow) from 9.5.0 to 10.0.1.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/python-pillow/Pillow/releases\">pillow's releases</a>.</em></p>\n<blockquote>\n<h2>10.0.1</h2>\n<p><a href=\"https://pillow.readthedocs.io/en/stable/releasenotes/10.0.1.html\">https://pillow.readthedocs.io/en/stable/releasenotes/10.0.1.html</a></p>\n<h2>Changes</h2>\n<ul>\n<li>Updated libwebp to 1.3.2 <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7395\">#7395</a> [<a href=\"https://github.com/radarhere\"><code>@\u200bradarhere</code></a>]</li>\n<li>Updated zlib to 1.3 <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7344\">#7344</a> [<a href=\"https://github.com/radarhere\"><code>@\u200bradarhere</code></a>]</li>\n</ul>\n<h2>10.0.0</h2>\n<p><a href=\"https://pillow.readthedocs.io/en/stable/releasenotes/10.0.0.html\">https://pillow.readthedocs.io/en/stable/releasenotes/10.0.0.html</a></p>\n<h2>Changes</h2>\n<ul>\n<li>Fixed deallocating mask images <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7246\">#7246</a> [<a href=\"https://github.com/radarhere\"><code>@\u200bradarhere</code></a>]</li>\n<li>Added ImageFont.MAX_STRING_LENGTH <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7244\">#7244</a> [<a href=\"https://github.com/radarhere\"><code>@\u200bradarhere</code></a>]</li>\n<li>Fix Windows build with pyproject.toml <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7230\">#7230</a> [<a href=\"https://github.com/nulano\"><code>@\u200bnulano</code></a>]</li>\n<li>Do not close provided file handles with libtiff <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7199\">#7199</a> [<a href=\"https://github.com/radarhere\"><code>@\u200bradarhere</code></a>]</li>\n<li>Convert to HSV if mode is HSV in getcolor() <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7226\">#7226</a> [<a href=\"https://github.com/radarhere\"><code>@\u200bradarhere</code></a>]</li>\n<li>Added alpha_only argument to getbbox() <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7123\">#7123</a> [<a href=\"https://github.com/radarhere\"><code>@\u200bradarhere</code></a>]</li>\n<li>Prioritise speed in <em>repr_png</em> <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7242\">#7242</a> [<a href=\"https://github.com/radarhere\"><code>@\u200bradarhere</code></a>]</li>\n<li>Limit size even if one dimension is zero in decompression bomb check <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7235\">#7235</a> [<a href=\"https://github.com/radarhere\"><code>@\u200bradarhere</code></a>]</li>\n<li>Restored 32-bit support <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7234\">#7234</a> [<a href=\"https://github.com/radarhere\"><code>@\u200bradarhere</code></a>]</li>\n<li>Removed deleted file from codecov.yml and increased coverage threshold <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7232\">#7232</a> [<a href=\"https://github.com/radarhere\"><code>@\u200bradarhere</code></a>]</li>\n<li>Removed support for 32-bit <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7228\">#7228</a> [<a href=\"https://github.com/radarhere\"><code>@\u200bradarhere</code></a>]</li>\n<li>Use --config-settings instead of deprecated --global-option <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7171\">#7171</a> [<a href=\"https://github.com/radarhere\"><code>@\u200bradarhere</code></a>]</li>\n<li>Better C integer definitions <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/6645\">#6645</a> [<a href=\"https://github.com/Yay295\"><code>@\u200bYay295</code></a>]</li>\n<li>Fixed finding dependencies on Cygwin <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7175\">#7175</a> [<a href=\"https://github.com/radarhere\"><code>@\u200bradarhere</code></a>]</li>\n<li>Improved checks in font_render <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7218\">#7218</a> [<a href=\"https://github.com/radarhere\"><code>@\u200bradarhere</code></a>]</li>\n<li>Change <code>grabclipboard()</code> to use PNG compression on macOS <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7219\">#7219</a> [<a href=\"https://github.com/abey79\"><code>@\u200babey79</code></a>]</li>\n<li>Added PyPy 3.10 and removed PyPy 3.8 <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7216\">#7216</a> [<a href=\"https://github.com/radarhere\"><code>@\u200bradarhere</code></a>]</li>\n<li>Added in_place argument to ImageOps.exif_transpose() <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7092\">#7092</a> [<a href=\"https://github.com/radarhere\"><code>@\u200bradarhere</code></a>]</li>\n<li>Corrected error code <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7177\">#7177</a> [<a href=\"https://github.com/radarhere\"><code>@\u200bradarhere</code></a>]</li>\n<li>Use &quot;not in&quot; <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7174\">#7174</a> [<a href=\"https://github.com/radarhere\"><code>@\u200bradarhere</code></a>]</li>\n<li>Only call text_layout once in getmask2 <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7206\">#7206</a> [<a href=\"https://github.com/radarhere\"><code>@\u200bradarhere</code></a>]</li>\n<li>Fixed calling putpalette() on L and LA images before load() <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7187\">#7187</a> [<a href=\"https://github.com/radarhere\"><code>@\u200bradarhere</code></a>]</li>\n<li>Removed unused INT64 definition <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7180\">#7180</a> [<a href=\"https://github.com/radarhere\"><code>@\u200bradarhere</code></a>]</li>\n<li>Updated xz to 5.4.3 <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7136\">#7136</a> [<a href=\"https://github.com/radarhere\"><code>@\u200bradarhere</code></a>]</li>\n<li>Fixed saving TIFF multiframe images with LONG8 tag types <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7078\">#7078</a> [<a href=\"https://github.com/radarhere\"><code>@\u200bradarhere</code></a>]</li>\n<li>Do not set size unnecessarily if image fails to open <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7056\">#7056</a> [<a href=\"https://github.com/radarhere\"><code>@\u200bradarhere</code></a>]</li>\n<li>Removed unused code <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7210\">#7210</a> [<a href=\"https://github.com/radarhere\"><code>@\u200bradarhere</code></a>]</li>\n<li>Removed unused variables <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7205\">#7205</a> [<a href=\"https://github.com/radarhere\"><code>@\u200bradarhere</code></a>]</li>\n<li>Fixed signedness comparison warning <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7203\">#7203</a> [<a href=\"https://github.com/radarhere\"><code>@\u200bradarhere</code></a>]</li>\n<li>Fixed combining single duration across duplicate APNG frames <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7146\">#7146</a> [<a href=\"https://github.com/radarhere\"><code>@\u200bradarhere</code></a>]</li>\n<li>Remove temporary file when error is raised <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7148\">#7148</a> [<a href=\"https://github.com/radarhere\"><code>@\u200bradarhere</code></a>]</li>\n<li>Do not use temporary file when grabbing clipboard on Linux <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7200\">#7200</a> [<a href=\"https://github.com/radarhere\"><code>@\u200bradarhere</code></a>]</li>\n<li>If the clipboard fails to open on Windows, wait and try again <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7141\">#7141</a> [<a href=\"https://github.com/radarhere\"><code>@\u200bradarhere</code></a>]</li>\n<li>Fixed saving multiple 1 mode frames to GIF <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7181\">#7181</a> [<a href=\"https://github.com/radarhere\"><code>@\u200bradarhere</code></a>]</li>\n<li>Replaced absolute PIL import with relative import <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7173\">#7173</a> [<a href=\"https://github.com/radarhere\"><code>@\u200bradarhere</code></a>]</li>\n<li>Removed files and types override <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7194\">#7194</a> [<a href=\"https://github.com/radarhere\"><code>@\u200bradarhere</code></a>]</li>\n</ul>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/python-pillow/Pillow/blob/main/CHANGES.rst\">pillow's changelog</a>.</em></p>\n<blockquote>\n<h2>10.0.1 (2023-09-15)</h2>\n<ul>\n<li>\n<p>Updated libwebp to 1.3.2 <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7395\">#7395</a>\n[radarhere]</p>\n</li>\n<li>\n<p>Updated zlib to 1.3 <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7344\">#7344</a>\n[radarhere]</p>\n</li>\n</ul>\n<h2>10.0.0 (2023-07-01)</h2>\n<ul>\n<li>\n<p>Fixed deallocating mask images <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7246\">#7246</a>\n[radarhere]</p>\n</li>\n<li>\n<p>Added ImageFont.MAX_STRING_LENGTH <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7244\">#7244</a>\n[radarhere, hugovk]</p>\n</li>\n<li>\n<p>Fix Windows build with pyproject.toml <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7230\">#7230</a>\n[hugovk, nulano, radarhere]</p>\n</li>\n<li>\n<p>Do not close provided file handles with libtiff <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7199\">#7199</a>\n[radarhere]</p>\n</li>\n<li>\n<p>Convert to HSV if mode is HSV in getcolor() <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7226\">#7226</a>\n[radarhere]</p>\n</li>\n<li>\n<p>Added alpha_only argument to getbbox() <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7123\">#7123</a>\n[radarhere. hugovk]</p>\n</li>\n<li>\n<p>Prioritise speed in <em>repr_png</em> <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7242\">#7242</a>\n[radarhere]</p>\n</li>\n<li>\n<p>Do not use CFFI access by default on PyPy <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7236\">#7236</a>\n[radarhere]</p>\n</li>\n<li>\n<p>Limit size even if one dimension is zero in decompression bomb check <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7235\">#7235</a>\n[radarhere]</p>\n</li>\n<li>\n<p>Use --config-settings instead of deprecated --global-option <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7171\">#7171</a>\n[radarhere]</p>\n</li>\n<li>\n<p>Better C integer definitions <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/6645\">#6645</a>\n[Yay295, hugovk]</p>\n</li>\n<li>\n<p>Fixed finding dependencies on Cygwin <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7175\">#7175</a>\n[radarhere]</p>\n</li>\n<li>\n<p>Changed grabclipboard() to use PNG instead of JPG compression on macOS <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7219\">#7219</a>\n[abey79, radarhere]</p>\n</li>\n</ul>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/python-pillow/Pillow/commit/e34d346f10c0b1c814661e662a3e0c1ef084cf1c\"><code>e34d346</code></a> Updated order</li>\n<li><a href=\"https://github.com/python-pillow/Pillow/commit/a62f2402a6bcf11a0a1670542216725a3f9190e0\"><code>a62f240</code></a> 10.0.1 version bump</li>\n<li><a href=\"https://github.com/python-pillow/Pillow/commit/d50250d9eab741ae3ddd592d8910cfd7973b9d35\"><code>d50250d</code></a> Added release notes for 10.0.1</li>\n<li><a href=\"https://github.com/python-pillow/Pillow/commit/b4c7d4b8b2710b7af6cc944a804902eb75fd9056\"><code>b4c7d4b</code></a> Update CHANGES.rst [ci skip]</li>\n<li><a href=\"https://github.com/python-pillow/Pillow/commit/730f74600e8215ab510f71bb1fbb49d906c4356b\"><code>730f746</code></a> Updated libwebp to 1.3.2</li>\n<li><a href=\"https://github.com/python-pillow/Pillow/commit/b0e28048d692effadfe7a4268a03e1d20e0198bb\"><code>b0e2804</code></a> Updated zlib to 1.3</li>\n<li><a href=\"https://github.com/python-pillow/Pillow/commit/6e28ed1f36d0eb74053af54e1eddc9c29db698cd\"><code>6e28ed1</code></a> 10.0.0 version bump</li>\n<li><a href=\"https://github.com/python-pillow/Pillow/commit/c827f3b30f50bf04fd65daeeba6bbfd56fc7b50e\"><code>c827f3b</code></a> Merge pull request <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7246\">#7246</a> from radarhere/deallocate</li>\n<li><a href=\"https://github.com/python-pillow/Pillow/commit/39a3b1d83edcf826c3864e26bedff5b4e4dd331b\"><code>39a3b1d</code></a> Fixed deallocating mask images</li>\n<li><a href=\"https://github.com/python-pillow/Pillow/commit/8c1dc819fd91471825da01976ac0e0bc8789590f\"><code>8c1dc81</code></a> Update CHANGES.rst [ci skip]</li>\n<li>Additional commits viewable in <a href=\"https://github.com/python-pillow/Pillow/compare/9.5.0...10.0.1\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pillow&package-manager=pip&previous-version=9.5.0&new-version=10.0.1)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/srbhr/Resume-Matcher/network/alerts).\n\n</details>",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "state",
          "value": "open",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": "archive/requirements_colab.txt",
          "qualifier": "files"
        },
        {
          "objectId": "dependabot[bot]",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "archive/requirements_colab.txt",
          "qualifier": "aggregates"
        },
        {
          "objectId": "dependabot[bot]",
          "qualifier": "has-participant"
        },
        {
          "objectId": "43ec992c92fcab19607e64894fd17b8867858b37",
          "qualifier": "commits"
        },
        {
          "objectId": "6f96a292a680371bae80d709c87e930500b06660",
          "qualifier": "is-merged-with"
        },
        {
          "objectId": "43ec992c92fcab19607e64894fd17b8867858b37",
          "qualifier": "formalises"
        }
      ],
      "id": "214"
    },
    {
      "type": "pull_request",
      "attributes": [
        {
          "name": "title",
          "value": "Chore(deps): Bump gitpython from 3.1.32 to 3.1.37 in /archive",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "description",
          "value": "Bumps [gitpython](https://github.com/gitpython-developers/GitPython) from 3.1.32 to 3.1.37.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/gitpython-developers/GitPython/releases\">gitpython's releases</a>.</em></p>\n<blockquote>\n<h2>3.1.37 - a proper fix CVE-2023-41040</h2>\n<h2>What's Changed</h2>\n<ul>\n<li>Improve Python version and OS compatibility, fixing deprecations by <a href=\"https://github.com/EliahKagan\"><code>@\u200bEliahKagan</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1654\">gitpython-developers/GitPython#1654</a></li>\n<li>Better document env_case test/fixture and cwd by <a href=\"https://github.com/EliahKagan\"><code>@\u200bEliahKagan</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1657\">gitpython-developers/GitPython#1657</a></li>\n<li>Remove spurious executable permissions by <a href=\"https://github.com/EliahKagan\"><code>@\u200bEliahKagan</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1658\">gitpython-developers/GitPython#1658</a></li>\n<li>Fix up checks in Makefile and make them portable by <a href=\"https://github.com/EliahKagan\"><code>@\u200bEliahKagan</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1661\">gitpython-developers/GitPython#1661</a></li>\n<li>Fix URLs that were redirecting to another license by <a href=\"https://github.com/EliahKagan\"><code>@\u200bEliahKagan</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1662\">gitpython-developers/GitPython#1662</a></li>\n<li>Assorted small fixes/improvements to root dir docs by <a href=\"https://github.com/EliahKagan\"><code>@\u200bEliahKagan</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1663\">gitpython-developers/GitPython#1663</a></li>\n<li>Use venv instead of virtualenv in test_installation by <a href=\"https://github.com/EliahKagan\"><code>@\u200bEliahKagan</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1664\">gitpython-developers/GitPython#1664</a></li>\n<li>Omit py_modules in setup by <a href=\"https://github.com/EliahKagan\"><code>@\u200bEliahKagan</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1665\">gitpython-developers/GitPython#1665</a></li>\n<li>Don't track code coverage temporary files by <a href=\"https://github.com/EliahKagan\"><code>@\u200bEliahKagan</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1666\">gitpython-developers/GitPython#1666</a></li>\n<li>Configure tox by <a href=\"https://github.com/EliahKagan\"><code>@\u200bEliahKagan</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1667\">gitpython-developers/GitPython#1667</a></li>\n<li>Format tests with black and auto-exclude untracked paths by <a href=\"https://github.com/EliahKagan\"><code>@\u200bEliahKagan</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1668\">gitpython-developers/GitPython#1668</a></li>\n<li>Upgrade and broaden flake8, fixing style problems and bugs by <a href=\"https://github.com/EliahKagan\"><code>@\u200bEliahKagan</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1673\">gitpython-developers/GitPython#1673</a></li>\n<li>Fix rollback bug in SymbolicReference.set_reference by <a href=\"https://github.com/EliahKagan\"><code>@\u200bEliahKagan</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1675\">gitpython-developers/GitPython#1675</a></li>\n<li>Remove <code>@NoEffect</code> annotations by <a href=\"https://github.com/EliahKagan\"><code>@\u200bEliahKagan</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1677\">gitpython-developers/GitPython#1677</a></li>\n<li>Add more checks for the validity of refnames by <a href=\"https://github.com/facutuesca\"><code>@\u200bfacutuesca</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1672\">gitpython-developers/GitPython#1672</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/gitpython-developers/GitPython/compare/3.1.36...3.1.37\">https://github.com/gitpython-developers/GitPython/compare/3.1.36...3.1.37</a></p>\n<h2>3.1.35 - a fix for CVE-2023-41040</h2>\n<h2>What's Changed</h2>\n<ul>\n<li>Bump actions/checkout from 3 to 4 by <a href=\"https://github.com/dependabot\"><code>@\u200bdependabot</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1643\">gitpython-developers/GitPython#1643</a></li>\n<li>Fix 'Tree' object has no attribute '_name' when submodule path is normal path by <a href=\"https://github.com/CosmosAtlas\"><code>@\u200bCosmosAtlas</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1645\">gitpython-developers/GitPython#1645</a></li>\n<li>Fix CVE-2023-41040 by <a href=\"https://github.com/facutuesca\"><code>@\u200bfacutuesca</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1644\">gitpython-developers/GitPython#1644</a></li>\n<li>Only make config more permissive in tests that need it by <a href=\"https://github.com/EliahKagan\"><code>@\u200bEliahKagan</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1648\">gitpython-developers/GitPython#1648</a></li>\n<li>Added test for PR <a href=\"https://redirect.github.com/gitpython-developers/GitPython/issues/1645\">#1645</a> submodule path by <a href=\"https://github.com/CosmosAtlas\"><code>@\u200bCosmosAtlas</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1647\">gitpython-developers/GitPython#1647</a></li>\n<li>Fix Windows environment variable upcasing bug by <a href=\"https://github.com/EliahKagan\"><code>@\u200bEliahKagan</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1650\">gitpython-developers/GitPython#1650</a></li>\n</ul>\n<h2>New Contributors</h2>\n<ul>\n<li><a href=\"https://github.com/CosmosAtlas\"><code>@\u200bCosmosAtlas</code></a> made their first contribution in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1645\">gitpython-developers/GitPython#1645</a></li>\n<li><a href=\"https://github.com/facutuesca\"><code>@\u200bfacutuesca</code></a> made their first contribution in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1644\">gitpython-developers/GitPython#1644</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/gitpython-developers/GitPython/compare/3.1.34...3.1.35\">https://github.com/gitpython-developers/GitPython/compare/3.1.34...3.1.35</a></p>\n<h2>3.1.34 - fix resource leaking</h2>\n<h2>What's Changed</h2>\n<ul>\n<li>util: close lockfile after opening successfully by <a href=\"https://github.com/skshetry\"><code>@\u200bskshetry</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1639\">gitpython-developers/GitPython#1639</a></li>\n</ul>\n<h2>New Contributors</h2>\n<ul>\n<li><a href=\"https://github.com/skshetry\"><code>@\u200bskshetry</code></a> made their first contribution in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1639\">gitpython-developers/GitPython#1639</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/gitpython-developers/GitPython/compare/3.1.33...3.1.34\">https://github.com/gitpython-developers/GitPython/compare/3.1.33...3.1.34</a></p>\n<h2>v3.1.33 - with security fix</h2>\n<h2>What's Changed</h2>\n<ul>\n<li>WIP Quick doc by <a href=\"https://github.com/LeoDaCoda\"><code>@\u200bLeoDaCoda</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1608\">gitpython-developers/GitPython#1608</a></li>\n<li>Partial clean up wrt mypy and black by <a href=\"https://github.com/bodograumann\"><code>@\u200bbodograumann</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1617\">gitpython-developers/GitPython#1617</a></li>\n<li>Disable merge_includes in config writers by <a href=\"https://github.com/bodograumann\"><code>@\u200bbodograumann</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1618\">gitpython-developers/GitPython#1618</a></li>\n</ul>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/gitpython-developers/GitPython/commit/b27a89f683cda85ebd78243c055e876282df89ee\"><code>b27a89f</code></a> fix makefile to compare commit hashes only</li>\n<li><a href=\"https://github.com/gitpython-developers/GitPython/commit/0bd2890ef42a7506b81a96c3c94b064917ed0d7b\"><code>0bd2890</code></a> prepare next release</li>\n<li><a href=\"https://github.com/gitpython-developers/GitPython/commit/832b6eeb4a14e669099c486862c9f568215d5afb\"><code>832b6ee</code></a> remove unnecessary list comprehension to fix CI</li>\n<li><a href=\"https://github.com/gitpython-developers/GitPython/commit/e98f57b81f792f0f5e18d33ee658ae395f9aa3c4\"><code>e98f57b</code></a> Merge pull request <a href=\"https://redirect.github.com/gitpython-developers/GitPython/issues/1672\">#1672</a> from trail-of-forks/robust-refname-checks</li>\n<li><a href=\"https://github.com/gitpython-developers/GitPython/commit/1774f1e32307deb755f80dc51b220566c7aef755\"><code>1774f1e</code></a> Merge pull request <a href=\"https://redirect.github.com/gitpython-developers/GitPython/issues/1677\">#1677</a> from EliahKagan/no-noeffect</li>\n<li><a href=\"https://github.com/gitpython-developers/GitPython/commit/a4701a0f17308ec8d4b5871e6e2a95c4e2ca5b91\"><code>a4701a0</code></a> Remove <code>@NoEffect</code> annotations</li>\n<li><a href=\"https://github.com/gitpython-developers/GitPython/commit/d40320b823994ed908d8a5e236758ff525851cd4\"><code>d40320b</code></a> Merge pull request <a href=\"https://redirect.github.com/gitpython-developers/GitPython/issues/1675\">#1675</a> from EliahKagan/rollback</li>\n<li><a href=\"https://github.com/gitpython-developers/GitPython/commit/d1c1f31dbd4a4fd527f9f3ff2ea901abf023c46b\"><code>d1c1f31</code></a> Merge pull request <a href=\"https://redirect.github.com/gitpython-developers/GitPython/issues/1673\">#1673</a> from EliahKagan/flake8</li>\n<li><a href=\"https://github.com/gitpython-developers/GitPython/commit/e480985aa4d358d0cc167d4552910e85944b8966\"><code>e480985</code></a> Tweak rollback logic in log.to_file</li>\n<li><a href=\"https://github.com/gitpython-developers/GitPython/commit/ff84b26445b147ee9e2c75d82903b0c6b09e2b7a\"><code>ff84b26</code></a> Refactor try-finally cleanup in git/</li>\n<li>Additional commits viewable in <a href=\"https://github.com/gitpython-developers/GitPython/compare/3.1.32...3.1.37\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=gitpython&package-manager=pip&previous-version=3.1.32&new-version=3.1.37)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/srbhr/Resume-Matcher/network/alerts).\n\n</details>",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "state",
          "value": "open",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": "archive/requirements_colab.txt",
          "qualifier": "files"
        },
        {
          "objectId": "dependabot[bot]",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "archive/requirements_colab.txt",
          "qualifier": "aggregates"
        },
        {
          "objectId": "dependabot[bot]",
          "qualifier": "has-participant"
        },
        {
          "objectId": "8da460e4ad9345f118d5957adb529f7bd223d76f",
          "qualifier": "commits"
        },
        {
          "objectId": "58edc12c22d97c029634c1afd82e93e30c853b42",
          "qualifier": "is-merged-with"
        },
        {
          "objectId": "8da460e4ad9345f118d5957adb529f7bd223d76f",
          "qualifier": "formalises"
        }
      ],
      "id": "213"
    },
    {
      "type": "pull_request",
      "attributes": [
        {
          "name": "title",
          "value": "Footer section inclusion",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "description",
          "value": "changes made:\r\n\r\n- Add footer section\r\n- Created a footerLinks.ts  file which contains links and labels of footer items\r\n- added icons\r\n- fixed a bug where text whose colors werent explictly defined was showing black\r\n- minor issue where job description box wasnt rounded",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "state",
          "value": "open",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": "webapp/app/(routes)/page.tsx",
          "qualifier": "files"
        },
        {
          "objectId": "webapp/app/_components/footer/footer.tsx",
          "qualifier": "files"
        },
        {
          "objectId": "webapp/app/_components/footer/footerLinks.ts",
          "qualifier": "files"
        },
        {
          "objectId": "webapp/app/_components/hero/hero.tsx",
          "qualifier": "files"
        },
        {
          "objectId": "webapp/app/_components/job-descriptions/add-jobs/add-jobs.tsx",
          "qualifier": "files"
        },
        {
          "objectId": "webapp/public/icons/discord-light.svg",
          "qualifier": "files"
        },
        {
          "objectId": "webapp/public/icons/github-light.svg",
          "qualifier": "files"
        },
        {
          "objectId": "webapp/public/icons/productHunt-light.svg",
          "qualifier": "files"
        },
        {
          "objectId": "Sandip Karmokar",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "webapp/app/(routes)/page.tsx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "webapp/app/_components/footer/footer.tsx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "webapp/app/_components/footer/footerLinks.ts",
          "qualifier": "aggregates"
        },
        {
          "objectId": "webapp/app/_components/hero/hero.tsx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "webapp/app/_components/job-descriptions/add-jobs/add-jobs.tsx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "webapp/public/icons/discord-light.svg",
          "qualifier": "aggregates"
        },
        {
          "objectId": "webapp/public/icons/github-light.svg",
          "qualifier": "aggregates"
        },
        {
          "objectId": "webapp/public/icons/productHunt-light.svg",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Sandip Karmokar",
          "qualifier": "has-participant"
        },
        {
          "objectId": "315367ae2bb0261eef18e98f348a9adc06846eaa",
          "qualifier": "commits"
        },
        {
          "objectId": "224bb7c2a481eb0b4b99484be3da4908c0b1a288",
          "qualifier": "commits"
        },
        {
          "objectId": "7c563af9a1bf6ade1435ee5203137136a29cbcbe",
          "qualifier": "commits"
        },
        {
          "objectId": "5c6d4783195b0b0735fee7dfd495e6652f7408f4",
          "qualifier": "commits"
        },
        {
          "objectId": "144b58600c3626b375dcdbe40a78001bcddf67bf",
          "qualifier": "commits"
        },
        {
          "objectId": "0f1442aa4689edb64d6a93deea4d82370ac91efe",
          "qualifier": "commits"
        },
        {
          "objectId": "f894d4117d796e0bb1da997f983b902aa71b5312",
          "qualifier": "commits"
        },
        {
          "objectId": "c71e6808b52db01d70eb529803dbd6d3a352ad25",
          "qualifier": "commits"
        },
        {
          "objectId": "d0de46f702bf5c0bfef63c8d89ceeb9fac5adc77",
          "qualifier": "commits"
        },
        {
          "objectId": "f73fbd1a32431a7e87953382ba3629e82d58dc54",
          "qualifier": "is-merged-with"
        },
        {
          "objectId": "315367ae2bb0261eef18e98f348a9adc06846eaa",
          "qualifier": "formalises"
        },
        {
          "objectId": "224bb7c2a481eb0b4b99484be3da4908c0b1a288",
          "qualifier": "formalises"
        },
        {
          "objectId": "7c563af9a1bf6ade1435ee5203137136a29cbcbe",
          "qualifier": "formalises"
        },
        {
          "objectId": "5c6d4783195b0b0735fee7dfd495e6652f7408f4",
          "qualifier": "formalises"
        },
        {
          "objectId": "144b58600c3626b375dcdbe40a78001bcddf67bf",
          "qualifier": "formalises"
        },
        {
          "objectId": "0f1442aa4689edb64d6a93deea4d82370ac91efe",
          "qualifier": "formalises"
        },
        {
          "objectId": "f894d4117d796e0bb1da997f983b902aa71b5312",
          "qualifier": "formalises"
        },
        {
          "objectId": "c71e6808b52db01d70eb529803dbd6d3a352ad25",
          "qualifier": "formalises"
        },
        {
          "objectId": "d0de46f702bf5c0bfef63c8d89ceeb9fac5adc77",
          "qualifier": "formalises"
        }
      ],
      "id": "212"
    },
    {
      "type": "pull_request",
      "attributes": [
        {
          "name": "title",
          "value": "Added footer section",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "description",
          "value": "Changes made:\r\n",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "state",
          "value": "open",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": "webapp/app/(routes)/page.tsx",
          "qualifier": "files"
        },
        {
          "objectId": "webapp/app/_components/footer/footer.tsx",
          "qualifier": "files"
        },
        {
          "objectId": "webapp/app/_components/footer/footerLinks.ts",
          "qualifier": "files"
        },
        {
          "objectId": "webapp/app/_components/hero/hero.tsx",
          "qualifier": "files"
        },
        {
          "objectId": "webapp/app/_components/job-descriptions/add-jobs/add-jobs.tsx",
          "qualifier": "files"
        },
        {
          "objectId": "webapp/public/icons/discord-light.svg",
          "qualifier": "files"
        },
        {
          "objectId": "webapp/public/icons/github-light.svg",
          "qualifier": "files"
        },
        {
          "objectId": "webapp/public/icons/productHunt-light.svg",
          "qualifier": "files"
        },
        {
          "objectId": "Sandip Karmokar",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "webapp/app/(routes)/page.tsx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "webapp/app/_components/footer/footer.tsx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "webapp/app/_components/footer/footerLinks.ts",
          "qualifier": "aggregates"
        },
        {
          "objectId": "webapp/app/_components/hero/hero.tsx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "webapp/app/_components/job-descriptions/add-jobs/add-jobs.tsx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "webapp/public/icons/discord-light.svg",
          "qualifier": "aggregates"
        },
        {
          "objectId": "webapp/public/icons/github-light.svg",
          "qualifier": "aggregates"
        },
        {
          "objectId": "webapp/public/icons/productHunt-light.svg",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Sandip Karmokar",
          "qualifier": "has-participant"
        },
        {
          "objectId": "315367ae2bb0261eef18e98f348a9adc06846eaa",
          "qualifier": "commits"
        },
        {
          "objectId": "b56ffdaa851759a2a86e887028e98c9f986bb47d",
          "qualifier": "is-merged-with"
        },
        {
          "objectId": "315367ae2bb0261eef18e98f348a9adc06846eaa",
          "qualifier": "formalises"
        }
      ],
      "id": "211"
    },
    {
      "type": "pull_request",
      "attributes": [
        {
          "name": "title",
          "value": "Added Back to Top in readme.md ",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "description",
          "value": "![image](https://github.com/srbhr/Resume-Matcher/assets/115945472/471cb3ca-f7e4-4295-9ecf-46b0b285996e)\r\n",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "state",
          "value": "open",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": "README.md",
          "qualifier": "files"
        },
        {
          "objectId": "Vivek Kumar",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "README.md",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Vivek Kumar",
          "qualifier": "has-participant"
        },
        {
          "objectId": "80e9105ebdbe16be2c4e133caf5373dbbc2f7fac",
          "qualifier": "commits"
        },
        {
          "objectId": "83271c41a50f48ca369c89be57f5b7d65bba4680",
          "qualifier": "is-merged-with"
        },
        {
          "objectId": "80e9105ebdbe16be2c4e133caf5373dbbc2f7fac",
          "qualifier": "formalises"
        }
      ],
      "id": "210"
    },
    {
      "type": "pull_request",
      "attributes": [
        {
          "name": "title",
          "value": "Added Annotated Text and Resume Parsing Functionality",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "description",
          "value": "## Pull Request Title\r\nAdded Annotated Text and Resume Parsing Functionality\r\n\r\n## Related Issue\r\nNone\r\n\r\n## Description\r\nThis pull request introduces several key changes to the application. The changes made include:\r\n\r\n- Added the ability to display annotated text in the application.\r\n- Implemented a feature that allows users to view extracted keywords.\r\n- Enabled users to parse resumes within the app.\r\n\r\nHowever, it's important to note that I'm encountering a couple of issues:\r\n1. The application crashes frequently, specifically from backend port 8000, especially when there are changes in the backend code.\r\n2. I have also made modifications to the implementation of the annotated text library.\r\n\r\nScreenshots demonstrating these changes will be attached to the pull request.\r\n\r\n## Type\r\n- [ ] Bug Fix\r\n- [x] Feature Enhancement\r\n- [ ] Documentation Update\r\n- [ ] Code Refactoring\r\n- [ ] Other (please specify): \r\n\r\n## Proposed Changes\r\n- Added annotated text feature.\r\n- Introduced functionality to view extracted keywords.\r\n- Enabled parsing of resumes.\r\n- Made modifications to the annotated text library.\r\n\r\n## Screenshots / Code Snippets (if applicable)\r\nScreenshots will be provided with the pull request.\r\n\r\n## How to Test\r\nTo test the changes in this pull request, follow these steps:\r\n\r\n1. Clone this branch.\r\n2. Run the application.\r\n3. Check the functionality related to annotated text, keyword extraction, and resume parsing.\r\n4. Pay attention to any crashes occurring from backend port 8000, especially after making changes to the backend code.\r\n\r\n## Checklist\r\n- [ ] The code compiles successfully without any errors or warnings\r\n- [ ] The changes have been tested and verified\r\n- [ ] The documentation has been updated (if applicable)\r\n- [ ] The changes follow the project's coding guidelines and best practices\r\n- [ ] The commit messages are descriptive and follow the project's guidelines\r\n- [ ] All tests (if applicable) pass successfully\r\n- [ ] This pull request has been linked to the related issue (if applicable)\r\n\r\n## Additional Information\r\nFeel free to provide any additional information\r\n\r\nhttps://github.com/srbhr/Resume-Matcher/assets/110348311/9ced5232-758c-4ed0-a0fc-84864aab310d\r\n\r\n about the pull request, especially regarding the issues encountered and the changes made to the annotated text library implementation.",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "state",
          "value": "open",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": "reflexapp/keyterms.csv",
          "qualifier": "files"
        },
        {
          "objectId": "reflexapp/reflexapp/reflexapp.py",
          "qualifier": "files"
        },
        {
          "objectId": "reflexapp/xyz.txt",
          "qualifier": "files"
        },
        {
          "objectId": "Devasy Patel",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "reflexapp/keyterms.csv",
          "qualifier": "aggregates"
        },
        {
          "objectId": "reflexapp/reflexapp/reflexapp.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "reflexapp/xyz.txt",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Devasy Patel",
          "qualifier": "has-participant"
        },
        {
          "objectId": "e1775ce5c875d56b93b1d3d13842cd72a2c333bf",
          "qualifier": "commits"
        },
        {
          "objectId": "ca1c9b00b76ce594768fb4240d16659e5e5a4d88",
          "qualifier": "commits"
        },
        {
          "objectId": "ebd8d2e6f0e5f7df874400514f637e6d91a6304d",
          "qualifier": "commits"
        },
        {
          "objectId": "f2e7c87736a20701e00166cea1e0135d5358222c",
          "qualifier": "is-merged-with"
        },
        {
          "objectId": "e1775ce5c875d56b93b1d3d13842cd72a2c333bf",
          "qualifier": "formalises"
        },
        {
          "objectId": "ca1c9b00b76ce594768fb4240d16659e5e5a4d88",
          "qualifier": "formalises"
        },
        {
          "objectId": "ebd8d2e6f0e5f7df874400514f637e6d91a6304d",
          "qualifier": "formalises"
        }
      ],
      "id": "209"
    },
    {
      "type": "pull_request",
      "attributes": [
        {
          "name": "title",
          "value": "fix: nextjs ui throws exception on error ts file",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "description",
          "value": "## fix: Next.js UI throws exception on `error.ts` file\r\n\r\nOccasionally (not all the time), whenever I start up the local frontend full stack Next.js webapp, and then attempt to load the frontend UI after the Next.js servers are up and ready, the browser displays an exception thrown by Next.js.\r\n\r\nThe exception which is occasionally thrown, throws with the error message `Attempted to call getErrorMessage() from the server, but getErrorMessage is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a client component.`.\r\n\r\n\ud83d\udca1 It seems that the `error.ts` file from which the `getErrorMessage()` function is defined conflicts with the reserved Next.js app router keyword for `error.tsx` components, and so Next.js (mistakenly) assumes `error.ts` is client component file, and hence why `use client` was placed at the top of the `error.ts` file in the first place to overcome the initial error. However, in hindsight this is not the correct solution as the function should be called on the server-side, and so the solution is to instead rename `error.ts` to `errors.ts`, which also makes more logical sense, and can be extended with additional error handling functions in future.\r\n\r\nThis change resolves issue #207.\r\n\r\n## Related Issue\r\n#207\r\n\r\n## Description\r\n- Renamed `error.ts` to `errors.ts` to avoid Next.js reserved keyword conflict for `Error.tsx` boundary client component files.\r\n- Re-reference imports to the new `errors.ts` file\r\n- Removed `\"use client\";` declaration in renamed `errors.ts` file, to correctly allow the functions defined within to be called on the server.\r\n\r\n## Type\r\n<!-- Check the relevant options by putting an \"x\" in the brackets -->\r\n\r\n- [X] Bug Fix\r\n- [ ] Feature Enhancement\r\n- [ ] Documentation Update\r\n- [ ] Code Refactoring\r\n- [ ] Other (please specify): \r\n\r\n## Proposed Changes\r\n<!-- List the specific changes made in this pull request -->\r\n\r\n- `error.ts`\r\n- `errors.ts`\r\n- `third-party-services.tsx`\r\n- `useGlobalStore.ts`\r\n\r\n## Screenshots / Code Snippets (if applicable)\r\nException message rendered on the frontend UI of the full stack Next.js web app.\r\n\r\n![screenshot of exception thrown on browser UI, with the message \"Attempted to call getErrorMessage() from the server, but getErrorMessage is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a client component.\"](https://github.com/srbhr/Resume-Matcher/assets/7581546/eabe43f9-dd30-4def-af30-8fe03adcf960)\r\n\r\nA separate and different exception message thrown by Next.js before further refactoring to remove `\"use client\";` declaration on the previously incorrectly named `error.ts` file.\r\n\r\n![Next.js excpetion message thrown on a server function, where it incorrectly requested for it to be declared as a client component](https://github.com/srbhr/Resume-Matcher/assets/7581546/2ee40a26-13ca-429e-9c5f-f07f168d2dd2)\r\n\r\n\r\n## How to Test\r\n\r\nPlease follow steps outlined in issue #207 \r\n\r\n## Checklist\r\n<!-- Put an \"x\" in the brackets for the items that apply to this pull request -->\r\n\r\n- [X] The code compiles successfully without any errors or warnings\r\n- [X] The changes have been tested and verified\r\n- [ ] The documentation has been updated (if applicable)\r\n- [X] The changes follow the project's coding guidelines and best practices\r\n- [X] The commit messages are descriptive and follow the project's guidelines\r\n- [ ] All tests (if applicable) pass successfully\r\n- [X] This pull request has been linked to the related issue (if applicable)\r\n\r\n## Additional Information\r\nN/A\r\n\r\n",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "state",
          "value": "open",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": "webapp/app/_components/third-party-services/third-party-services.tsx",
          "qualifier": "files"
        },
        {
          "objectId": "webapp/app/_stores/useGlobalStore.ts",
          "qualifier": "files"
        },
        {
          "objectId": "webapp/app/_utils/errors.ts",
          "qualifier": "files"
        },
        {
          "objectId": "Sayvai",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "webapp/app/_components/third-party-services/third-party-services.tsx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "webapp/app/_stores/useGlobalStore.ts",
          "qualifier": "aggregates"
        },
        {
          "objectId": "webapp/app/_utils/errors.ts",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Sayvai",
          "qualifier": "has-participant"
        },
        {
          "objectId": "b283d9ccb5d1e532eddb183f6b17b90071193f96",
          "qualifier": "commits"
        },
        {
          "objectId": "b77473a302be16ae9531fa81166a3a5780d1a8e4",
          "qualifier": "is-merged-with"
        },
        {
          "objectId": "b283d9ccb5d1e532eddb183f6b17b90071193f96",
          "qualifier": "formalises"
        }
      ],
      "id": "208"
    },
    {
      "type": "pull_request",
      "attributes": [
        {
          "name": "title",
          "value": "Info section UI enhancement",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "description",
          "value": "Changes Made:\r\n- added hover states to buttons\r\n- added similar padding spaces between sub headers\r\n- added rounded borders to subheader sections and subsequent elements\r\n- Made some color changes to improver ui/ux(visibility)\r\n- Other minor fixes",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "state",
          "value": "open",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": "webapp/app/_components/common-words/common-words.tsx",
          "qualifier": "files"
        },
        {
          "objectId": "webapp/app/_components/job-descriptions/add-jobs/add-jobs.tsx",
          "qualifier": "files"
        },
        {
          "objectId": "webapp/app/_components/job-descriptions/job-descriptions.tsx",
          "qualifier": "files"
        },
        {
          "objectId": "webapp/app/_components/resume/resume-glance/resume-glance.tsx",
          "qualifier": "files"
        },
        {
          "objectId": "webapp/app/_components/suggestions/suggestions.tsx",
          "qualifier": "files"
        },
        {
          "objectId": "webapp/app/_components/vector-scores/vector-scores.tsx",
          "qualifier": "files"
        },
        {
          "objectId": "Sandip Karmokar",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "webapp/app/_components/common-words/common-words.tsx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "webapp/app/_components/job-descriptions/add-jobs/add-jobs.tsx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "webapp/app/_components/job-descriptions/job-descriptions.tsx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "webapp/app/_components/resume/resume-glance/resume-glance.tsx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "webapp/app/_components/suggestions/suggestions.tsx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "webapp/app/_components/vector-scores/vector-scores.tsx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Sandip Karmokar",
          "qualifier": "has-participant"
        },
        {
          "objectId": "0eea84825d4912f0f45351129e27e50b5698619e",
          "qualifier": "commits"
        },
        {
          "objectId": "ce3d38ecab079f963b5229565626a2a2f71c0857",
          "qualifier": "commits"
        },
        {
          "objectId": "45d6f78d9256332862316e35b340623f9c73014d",
          "qualifier": "commits"
        },
        {
          "objectId": "17eb5661c7338e62ba2a42437ac028c1a72a301b",
          "qualifier": "commits"
        },
        {
          "objectId": "51da4af8503ad9d75fea731adb90881a9f9885d0",
          "qualifier": "commits"
        },
        {
          "objectId": "f61a9bf09d3276cc5b0b465e29b2f997c3b8409d",
          "qualifier": "is-merged-with"
        },
        {
          "objectId": "0eea84825d4912f0f45351129e27e50b5698619e",
          "qualifier": "formalises"
        },
        {
          "objectId": "ce3d38ecab079f963b5229565626a2a2f71c0857",
          "qualifier": "formalises"
        },
        {
          "objectId": "45d6f78d9256332862316e35b340623f9c73014d",
          "qualifier": "formalises"
        },
        {
          "objectId": "17eb5661c7338e62ba2a42437ac028c1a72a301b",
          "qualifier": "formalises"
        },
        {
          "objectId": "51da4af8503ad9d75fea731adb90881a9f9885d0",
          "qualifier": "formalises"
        }
      ],
      "id": "206"
    },
    {
      "type": "pull_request",
      "attributes": [
        {
          "name": "title",
          "value": "Added Annotated Text and Resume Parsing Functionality",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "description",
          "value": "## Pull Request Title\nAdded Annotated Text and Resume Parsing Functionality\n\n## Related Issue\nNone\n\n## Description\nThis pull request introduces several key changes to the application. The changes made include:\n\n- Added the ability to display annotated text in the application.\n- Implemented a feature that allows users to view extracted keywords.\n- Enabled users to parse resumes within the app.\n\nHowever, it's important to note that I'm encountering a couple of issues:\n1. The application crashes frequently, specifically from backend port 8000, especially when there are changes in the backend code.\n2. I have also made modifications to the implementation of the annotated text library.\n\nScreenshots demonstrating these changes will be attached to the pull request.\n\n## Type\n- [ ] Bug Fix\n- [x] Feature Enhancement\n- [ ] Documentation Update\n- [ ] Code Refactoring\n- [ ] Other (please specify): \n\n## Proposed Changes\n- Added annotated text feature.\n- Introduced functionality to view extracted keywords.\n- Enabled parsing of resumes.\n- Made modifications to the annotated text library.\n\n## Screenshots / Code Snippets (if applicable)\nScreenshots will be provided with the pull request.\n\n## How to Test\nTo test the changes in this pull request, follow these steps:\n\n1. Clone this branch.\n2. Run the application.\n3. Check the functionality related to annotated text, keyword extraction, and resume parsing.\n4. Pay attention to any crashes occurring from backend port 8000, especially after making changes to the backend code.\n\n## Checklist\n- [ ] The code compiles successfully without any errors or warnings\n- [ ] The changes have been tested and verified\n- [ ] The documentation has been updated (if applicable)\n- [ ] The changes follow the project's coding guidelines and best practices\n- [ ] The commit messages are descriptive and follow the project's guidelines\n- [ ] All tests (if applicable) pass successfully\n- [ ] This pull request has been linked to the related issue (if applicable)\n\n## Additional Information\nFeel free to provide any additional information about the pull request, especially regarding the issues encountered and the changes made to the annotated text library implementation.",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "state",
          "value": "open",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": ".gitignore",
          "qualifier": "files"
        },
        {
          "objectId": "Assets/img/favicon.ico",
          "qualifier": "files"
        },
        {
          "objectId": "CONTRIBUTING.md",
          "qualifier": "files"
        },
        {
          "objectId": "Data/Processed/JobDescription/JobDescription-job_desc_front_end_engineer.pdfa16fa747-c2ab-4381-b806-c3cea2705632.json",
          "qualifier": "files"
        },
        {
          "objectId": "Data/Processed/JobDescription/JobDescription-job_desc_full_stack_engineer.pdfd8676606-af64-40b1-b25c-555d8c3386b0.json",
          "qualifier": "files"
        },
        {
          "objectId": "Data/Processed/JobDescription/JobDescription-job_desc_java_developer.pdfc1d3ec87-f0fb-4b24-823f-eee5f1713976.json",
          "qualifier": "files"
        },
        {
          "objectId": "Data/Processed/JobDescription/JobDescription-job_desc_product_manager.pdf87c263ab-2cc6-4754-aeac-c00db3a89b38.json",
          "qualifier": "files"
        },
        {
          "objectId": "Data/Processed/Resumes/Resume-alfred_pennyworth_pm.pdf8a46c515-78e6-4f2b-b895-d13894398ad3.json",
          "qualifier": "files"
        },
        {
          "objectId": "Data/Processed/Resumes/Resume-barry_allen_fe.pdfca6cb6f0-18b6-4f9e-88f2-9d33d941b4d3.json",
          "qualifier": "files"
        },
        {
          "objectId": "Data/Processed/Resumes/Resume-bruce_wayne_fullstack.pdfed072dab-25ec-42ca-8339-0683ec056d02.json",
          "qualifier": "files"
        },
        {
          "objectId": "Data/Processed/Resumes/Resume-harvey_dent_mle.pdfd97b6e83-ec7b-4ca0-9ce0-bb6ee755b981.json",
          "qualifier": "files"
        },
        {
          "objectId": "Data/Processed/Resumes/Resume-john_doe.pdf95e0b64e-025c-4ae5-9fc2-87e0bdc4acd2.json",
          "qualifier": "files"
        },
        {
          "objectId": "reflexapp/.gitignore",
          "qualifier": "files"
        },
        {
          "objectId": "reflexapp/assets/Hacktoberfest_banner.png",
          "qualifier": "files"
        },
        {
          "objectId": "reflexapp/assets/Resume_Matcher_Gif.gif",
          "qualifier": "files"
        },
        {
          "objectId": "reflexapp/assets/backend_fastapi_demo.gif",
          "qualifier": "files"
        },
        {
          "objectId": "reflexapp/assets/favicon.ico",
          "qualifier": "files"
        },
        {
          "objectId": "reflexapp/assets/header.png",
          "qualifier": "files"
        },
        {
          "objectId": "reflexapp/assets/header_image.png",
          "qualifier": "files"
        },
        {
          "objectId": "reflexapp/assets/quadrant_cloud.png",
          "qualifier": "files"
        },
        {
          "objectId": "reflexapp/assets/webapp_demo.gif",
          "qualifier": "files"
        },
        {
          "objectId": "reflexapp/reflexapp/__init__.py",
          "qualifier": "files"
        },
        {
          "objectId": "reflexapp/reflexapp/reflexapp.py",
          "qualifier": "files"
        },
        {
          "objectId": "reflexapp/rxconfig.py",
          "qualifier": "files"
        },
        {
          "objectId": "streamlit_interactive.py",
          "qualifier": "files"
        },
        {
          "objectId": "Devasy Patel",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": ".gitignore",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Assets/img/favicon.ico",
          "qualifier": "aggregates"
        },
        {
          "objectId": "CONTRIBUTING.md",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Processed/JobDescription/JobDescription-job_desc_front_end_engineer.pdfa16fa747-c2ab-4381-b806-c3cea2705632.json",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Processed/JobDescription/JobDescription-job_desc_full_stack_engineer.pdfd8676606-af64-40b1-b25c-555d8c3386b0.json",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Processed/JobDescription/JobDescription-job_desc_java_developer.pdfc1d3ec87-f0fb-4b24-823f-eee5f1713976.json",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Processed/JobDescription/JobDescription-job_desc_product_manager.pdf87c263ab-2cc6-4754-aeac-c00db3a89b38.json",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Processed/Resumes/Resume-alfred_pennyworth_pm.pdf8a46c515-78e6-4f2b-b895-d13894398ad3.json",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Processed/Resumes/Resume-barry_allen_fe.pdfca6cb6f0-18b6-4f9e-88f2-9d33d941b4d3.json",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Processed/Resumes/Resume-bruce_wayne_fullstack.pdfed072dab-25ec-42ca-8339-0683ec056d02.json",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Processed/Resumes/Resume-harvey_dent_mle.pdfd97b6e83-ec7b-4ca0-9ce0-bb6ee755b981.json",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Processed/Resumes/Resume-john_doe.pdf95e0b64e-025c-4ae5-9fc2-87e0bdc4acd2.json",
          "qualifier": "aggregates"
        },
        {
          "objectId": "reflexapp/.gitignore",
          "qualifier": "aggregates"
        },
        {
          "objectId": "reflexapp/assets/Hacktoberfest_banner.png",
          "qualifier": "aggregates"
        },
        {
          "objectId": "reflexapp/assets/Resume_Matcher_Gif.gif",
          "qualifier": "aggregates"
        },
        {
          "objectId": "reflexapp/assets/backend_fastapi_demo.gif",
          "qualifier": "aggregates"
        },
        {
          "objectId": "reflexapp/assets/favicon.ico",
          "qualifier": "aggregates"
        },
        {
          "objectId": "reflexapp/assets/header.png",
          "qualifier": "aggregates"
        },
        {
          "objectId": "reflexapp/assets/header_image.png",
          "qualifier": "aggregates"
        },
        {
          "objectId": "reflexapp/assets/quadrant_cloud.png",
          "qualifier": "aggregates"
        },
        {
          "objectId": "reflexapp/assets/webapp_demo.gif",
          "qualifier": "aggregates"
        },
        {
          "objectId": "reflexapp/reflexapp/__init__.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "reflexapp/reflexapp/reflexapp.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "reflexapp/rxconfig.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "streamlit_interactive.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Devasy Patel",
          "qualifier": "has-participant"
        },
        {
          "objectId": "df25508ab78a8c52e237006389aa24be46fa48c2",
          "qualifier": "commits"
        },
        {
          "objectId": "8d863fcfc82c1929ce569b42deb95d4f47f886b9",
          "qualifier": "commits"
        },
        {
          "objectId": "fe67a33de33c1346788060cf3089b4d17f543dea",
          "qualifier": "commits"
        },
        {
          "objectId": "1fec89ce56b114adf65914369bbb6ebaf076bc81",
          "qualifier": "commits"
        },
        {
          "objectId": "330fd603b378f081e41e654e31a6b68aabb432d3",
          "qualifier": "commits"
        },
        {
          "objectId": "03b39fbeaba41be1ddc06b132bed8b1e8eeeb0f7",
          "qualifier": "commits"
        },
        {
          "objectId": "cd09a99c3c369ae97baa0eb155752a67345640b3",
          "qualifier": "commits"
        },
        {
          "objectId": "c17ac0d6937eb5075b97329259115b1f841f17a6",
          "qualifier": "commits"
        },
        {
          "objectId": "68cc06c8f17591e05f5aed80c0502e2f512eff8c",
          "qualifier": "commits"
        },
        {
          "objectId": "None",
          "qualifier": "is-merged-with"
        },
        {
          "objectId": "df25508ab78a8c52e237006389aa24be46fa48c2",
          "qualifier": "formalises"
        },
        {
          "objectId": "8d863fcfc82c1929ce569b42deb95d4f47f886b9",
          "qualifier": "formalises"
        },
        {
          "objectId": "fe67a33de33c1346788060cf3089b4d17f543dea",
          "qualifier": "formalises"
        },
        {
          "objectId": "1fec89ce56b114adf65914369bbb6ebaf076bc81",
          "qualifier": "formalises"
        },
        {
          "objectId": "330fd603b378f081e41e654e31a6b68aabb432d3",
          "qualifier": "formalises"
        },
        {
          "objectId": "03b39fbeaba41be1ddc06b132bed8b1e8eeeb0f7",
          "qualifier": "formalises"
        },
        {
          "objectId": "cd09a99c3c369ae97baa0eb155752a67345640b3",
          "qualifier": "formalises"
        },
        {
          "objectId": "c17ac0d6937eb5075b97329259115b1f841f17a6",
          "qualifier": "formalises"
        },
        {
          "objectId": "68cc06c8f17591e05f5aed80c0502e2f512eff8c",
          "qualifier": "formalises"
        }
      ],
      "id": "205"
    },
    {
      "type": "pull_request",
      "attributes": [
        {
          "name": "title",
          "value": "Updated .gitignore to ignore .DS_store",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "description",
          "value": "Added `.DS_ignore` to `.gitignore`",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "state",
          "value": "open",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": ".gitignore",
          "qualifier": "files"
        },
        {
          "objectId": "Saurabh Rai",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": ".gitignore",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Saurabh Rai",
          "qualifier": "has-participant"
        },
        {
          "objectId": "3208bc5d135ef56ae2c026f163c05cc5ae5c326b",
          "qualifier": "commits"
        },
        {
          "objectId": "67331789fa276e03eb7544e0fcbed451a4154ca9",
          "qualifier": "is-merged-with"
        },
        {
          "objectId": "3208bc5d135ef56ae2c026f163c05cc5ae5c326b",
          "qualifier": "formalises"
        }
      ],
      "id": "203"
    },
    {
      "type": "pull_request",
      "attributes": [
        {
          "name": "title",
          "value": "fix: corrected a resume typo on the contributing markdown file",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "description",
          "value": "## Fixed a typo on the word `resume` on CONTRIBUTING.md from `reseme`",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "state",
          "value": "open",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": "CONTRIBUTING.md",
          "qualifier": "files"
        },
        {
          "objectId": "Tinega",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "CONTRIBUTING.md",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Tinega",
          "qualifier": "has-participant"
        },
        {
          "objectId": "37c9d4190b48ee1e7cd4f7f59092faa72f9744a2",
          "qualifier": "commits"
        },
        {
          "objectId": "f03bbba9e18467d4fa5234cb2187edeb442ad183",
          "qualifier": "is-merged-with"
        },
        {
          "objectId": "37c9d4190b48ee1e7cd4f7f59092faa72f9744a2",
          "qualifier": "formalises"
        }
      ],
      "id": "201"
    },
    {
      "type": "pull_request",
      "attributes": [
        {
          "name": "title",
          "value": "send_to_parser_dir method bug fix",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "description",
          "value": "## Pull Request Title\r\n<!-- send_to_parser_dir bug fix -->\r\n\r\n## Description\r\n<!-- Added safety branch for case of a resume being within RESUME_INPUT_DIR in send_to_parser_dir method. This is needed as I was testing the submit feature, I was getting file exist errors due to submitting the same resume. This branch will rename the file by appending a timestamp to the end of the file name -->\r\n\r\n## Type\r\n<!-- Check the relevant options by putting an \"x\" in the brackets -->\r\n\r\n- [ x] Bug Fix\r\n- [ ] Feature Enhancement\r\n- [ ] Documentation Update\r\n- [ x] Code Refactoring\r\n- [ ] Other (please specify): \r\n\r\n## Proposed Changes\r\n<!-- List the specific changes made in this pull request -->\r\n\r\n- Implemented feature to check for existing file in directory and if so, change file name by adding timestamp before moving file to directory.\r\n\r\n## How to Test\r\n<!-- Provide step-by-step instructions or a checklist for testing the changes in this pull request -->\r\n\r\n1. Run flask --app run command in terminal\r\n2. Go to website and enter data. Primarily only needs a resume\r\n3. Hit submit and it should function normally\r\n4. Then do step 2 - 3 again and there should be no errors as well as see the same file but with a timestamp added to the resume directory\r\n\r\n## Checklist\r\n<!-- Put an \"x\" in the brackets for the items that apply to this pull request -->\r\n\r\n- [ x] The code compiles successfully without any errors or warnings\r\n- [ x] The changes have been tested and verified\r\n- [ ] The documentation has been updated (if applicable)\r\n- [ ] The changes follow the project's coding guidelines and best practices\r\n- [ ] The commit messages are descriptive and follow the project's guidelines\r\n- [ ] All tests (if applicable) pass successfully\r\n- [ ] This pull request has been linked to the related issue (if applicable)\r\n",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "state",
          "value": "open",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": "Data/.gitkeep",
          "qualifier": "files"
        },
        {
          "objectId": "Data/JobDescription/.gitkeep",
          "qualifier": "files"
        },
        {
          "objectId": "Data/JobDescription/job_desc_front_end_engineer.pdf",
          "qualifier": "files"
        },
        {
          "objectId": "Data/JobDescription/job_desc_full_stack_engineer.pdf",
          "qualifier": "files"
        },
        {
          "objectId": "Data/JobDescription/job_desc_java_developer.pdf",
          "qualifier": "files"
        },
        {
          "objectId": "Data/JobDescription/job_desc_product_manager.pdf",
          "qualifier": "files"
        },
        {
          "objectId": "Data/Processed/JobDescription/.gitkeep",
          "qualifier": "files"
        },
        {
          "objectId": "Data/Processed/JobDescription/JobDescription-job_desc_front_end_engineer.pdf9e508eff-a083-4e2d-8b1e-577cbc8f50fc.json",
          "qualifier": "files"
        },
        {
          "objectId": "Data/Processed/JobDescription/JobDescription-job_desc_full_stack_engineer.pdfcccf72e0-5f20-4aa8-8679-d91b720b7247.json",
          "qualifier": "files"
        },
        {
          "objectId": "Data/Processed/JobDescription/JobDescription-job_desc_java_developer.pdf1fb6435c-531a-4f04-84c2-c4e73e1f1a3f.json",
          "qualifier": "files"
        },
        {
          "objectId": "Data/Processed/JobDescription/JobDescription-job_desc_product_manager.pdf0b613898-1183-49c5-ad07-e03bd9af72e5.json",
          "qualifier": "files"
        },
        {
          "objectId": "Data/Processed/Resumes/.gitkeep",
          "qualifier": "files"
        },
        {
          "objectId": "Data/Processed/Resumes/Resume-alfred_pennyworth_pm.pdfb36fac00-1d60-49ba-a9e4-33477c928e98.json",
          "qualifier": "files"
        },
        {
          "objectId": "Data/Processed/Resumes/Resume-barry_allen_fe.pdfbef9d9b1-fa14-4aa0-8111-6033cceacb5a.json",
          "qualifier": "files"
        },
        {
          "objectId": "Data/Processed/Resumes/Resume-bruce_wayne_fullstack.pdf04c228e3-04a4-4970-a149-a3cffc92aee8.json",
          "qualifier": "files"
        },
        {
          "objectId": "Data/Processed/Resumes/Resume-harvey_dent_mle.pdf5dde9183-5af4-4107-91e1-7b2d66fec490.json",
          "qualifier": "files"
        },
        {
          "objectId": "Data/Processed/Resumes/Resume-john_doe.pdf817fb796-14b9-4819-a224-7eed66b3ce04.json",
          "qualifier": "files"
        },
        {
          "objectId": "Data/Resumes/.gitkeep",
          "qualifier": "files"
        },
        {
          "objectId": "Data/Resumes/alfred_pennyworth_pm.pdf",
          "qualifier": "files"
        },
        {
          "objectId": "Data/Resumes/barry_allen_fe.pdf",
          "qualifier": "files"
        },
        {
          "objectId": "Data/Resumes/bruce_wayne_fullstack.pdf",
          "qualifier": "files"
        },
        {
          "objectId": "Data/Resumes/harvey_dent_mle.pdf",
          "qualifier": "files"
        },
        {
          "objectId": "Data/Resumes/john_doe.pdf",
          "qualifier": "files"
        },
        {
          "objectId": "__init__.py",
          "qualifier": "files"
        },
        {
          "objectId": "client.py",
          "qualifier": "files"
        },
        {
          "objectId": "run_first.py",
          "qualifier": "files"
        },
        {
          "objectId": "scripts/ResumeProcessor.py",
          "qualifier": "files"
        },
        {
          "objectId": "scripts/utils/ReadFiles.py",
          "qualifier": "files"
        },
        {
          "objectId": "Thomas Lau",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "Data/.gitkeep",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/JobDescription/.gitkeep",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/JobDescription/job_desc_front_end_engineer.pdf",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/JobDescription/job_desc_full_stack_engineer.pdf",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/JobDescription/job_desc_java_developer.pdf",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/JobDescription/job_desc_product_manager.pdf",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Processed/JobDescription/.gitkeep",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Processed/JobDescription/JobDescription-job_desc_front_end_engineer.pdf9e508eff-a083-4e2d-8b1e-577cbc8f50fc.json",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Processed/JobDescription/JobDescription-job_desc_full_stack_engineer.pdfcccf72e0-5f20-4aa8-8679-d91b720b7247.json",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Processed/JobDescription/JobDescription-job_desc_java_developer.pdf1fb6435c-531a-4f04-84c2-c4e73e1f1a3f.json",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Processed/JobDescription/JobDescription-job_desc_product_manager.pdf0b613898-1183-49c5-ad07-e03bd9af72e5.json",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Processed/Resumes/.gitkeep",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Processed/Resumes/Resume-alfred_pennyworth_pm.pdfb36fac00-1d60-49ba-a9e4-33477c928e98.json",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Processed/Resumes/Resume-barry_allen_fe.pdfbef9d9b1-fa14-4aa0-8111-6033cceacb5a.json",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Processed/Resumes/Resume-bruce_wayne_fullstack.pdf04c228e3-04a4-4970-a149-a3cffc92aee8.json",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Processed/Resumes/Resume-harvey_dent_mle.pdf5dde9183-5af4-4107-91e1-7b2d66fec490.json",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Processed/Resumes/Resume-john_doe.pdf817fb796-14b9-4819-a224-7eed66b3ce04.json",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/.gitkeep",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/alfred_pennyworth_pm.pdf",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/barry_allen_fe.pdf",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/bruce_wayne_fullstack.pdf",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/harvey_dent_mle.pdf",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/john_doe.pdf",
          "qualifier": "aggregates"
        },
        {
          "objectId": "__init__.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "client.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "run_first.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "scripts/ResumeProcessor.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "scripts/utils/ReadFiles.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Thomas Lau",
          "qualifier": "has-participant"
        },
        {
          "objectId": "d475778b6b3b8114d94b20ac3f575ccbf9a224b5",
          "qualifier": "commits"
        },
        {
          "objectId": "905b7644fd20fed2034b868c307875218e89ea54",
          "qualifier": "commits"
        },
        {
          "objectId": "498e439c3d9f75d2b80e06eaa0459c0886ee32fb",
          "qualifier": "commits"
        },
        {
          "objectId": "d825421875f5eb1de50d4f9dabb00b1e6cedf0c5",
          "qualifier": "commits"
        },
        {
          "objectId": "df659395ff477ad7f739bf199fa28be7ed8ad599",
          "qualifier": "commits"
        },
        {
          "objectId": "d340257a0c528903325ae4d129a89d72d384d8bc",
          "qualifier": "commits"
        },
        {
          "objectId": "c9184099eba6a59d7b367585c8d6b755f32160e8",
          "qualifier": "commits"
        },
        {
          "objectId": "b504a67e660e215a0ee253719be4f7182fa49811",
          "qualifier": "commits"
        },
        {
          "objectId": "257f9528eca97840bd001c9af3d36cd3a20cb4bd",
          "qualifier": "commits"
        },
        {
          "objectId": "b974c00395af6099093321b0ffe6446144cb601e",
          "qualifier": "commits"
        },
        {
          "objectId": "35f4c90192b74389f37bb345ddadf78892623eda",
          "qualifier": "commits"
        },
        {
          "objectId": "fa7d5d33fd2f5c9224c7b45784cc3b756bf4bc4a",
          "qualifier": "commits"
        },
        {
          "objectId": "208a1c4af419c295be67b53d98e3c6ab56fc9541",
          "qualifier": "is-merged-with"
        },
        {
          "objectId": "d475778b6b3b8114d94b20ac3f575ccbf9a224b5",
          "qualifier": "formalises"
        },
        {
          "objectId": "905b7644fd20fed2034b868c307875218e89ea54",
          "qualifier": "formalises"
        },
        {
          "objectId": "498e439c3d9f75d2b80e06eaa0459c0886ee32fb",
          "qualifier": "formalises"
        },
        {
          "objectId": "d825421875f5eb1de50d4f9dabb00b1e6cedf0c5",
          "qualifier": "formalises"
        },
        {
          "objectId": "df659395ff477ad7f739bf199fa28be7ed8ad599",
          "qualifier": "formalises"
        },
        {
          "objectId": "d340257a0c528903325ae4d129a89d72d384d8bc",
          "qualifier": "formalises"
        },
        {
          "objectId": "c9184099eba6a59d7b367585c8d6b755f32160e8",
          "qualifier": "formalises"
        },
        {
          "objectId": "b504a67e660e215a0ee253719be4f7182fa49811",
          "qualifier": "formalises"
        },
        {
          "objectId": "257f9528eca97840bd001c9af3d36cd3a20cb4bd",
          "qualifier": "formalises"
        },
        {
          "objectId": "b974c00395af6099093321b0ffe6446144cb601e",
          "qualifier": "formalises"
        },
        {
          "objectId": "35f4c90192b74389f37bb345ddadf78892623eda",
          "qualifier": "formalises"
        },
        {
          "objectId": "fa7d5d33fd2f5c9224c7b45784cc3b756bf4bc4a",
          "qualifier": "formalises"
        }
      ],
      "id": "199"
    },
    {
      "type": "pull_request",
      "attributes": [
        {
          "name": "title",
          "value": "Testing reflex app",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "description",
          "value": "## Pull Request Title\r\nInitialized Reflex App and Added Core Functionalities\r\n\r\n## Related Issue\r\nNone\r\n\r\n## Description\r\nThis pull request initializes the Reflex app and adds core functionalities to it. The changes made in this PR include:\r\n\r\n1. Initialized a Reflex app, including all related files required for the app.\r\n2. Added functionality for users to progress through the app, including selecting a resume and viewing annotated text.\r\n3. Addressed an issue related to annotated text rendering and implemented an initial fix.\r\n\r\n## Type\r\n- [ ] Bug Fix\r\n- [x] Feature Enhancement\r\n- [ ] Documentation Update\r\n- [ ] Code Refactoring\r\n- [ ] Other (please specify): \r\n\r\n## Proposed Changes\r\n- Initialization of Reflex app.\r\n- Added core app functionalities.\r\n- Initial fix for annotated text issue.\r\n\r\n## Screenshots / Code Snippets (if applicable)\r\n![image](https://github.com/srbhr/Resume-Matcher/assets/110348311/be8c5205-527f-4ba0-9e28-cf602c3f0b58)\r\n\r\n\r\n## How to Test\r\nPlease follow these steps to test the changes made in this pull request:\r\n\r\n1. Clone this branch.\r\n2. Run the Reflex app.\r\n```\r\npip install reflex\r\nreflex run   (for normal run)\r\nreflex run --env dev  (for development runs)\r\n```\r\n4. Progress through the app, selecting a resume and viewing annotated text.\r\n\r\n## Checklist\r\n- [x] The code compiles successfully without any errors or warnings\r\n- [ ] The changes have been tested and verified\r\n- [ ] The documentation has been updated (if applicable)\r\n- [x] The changes follow the project's coding guidelines and best practices\r\n- [x] The commit messages are descriptive and follow the project's guidelines\r\n- [ ] All tests (if applicable) pass successfully\r\n- [ ] This pull request has been linked to the related issue (if applicable)\r\n\r\n## Additional Information\r\nFeel free to provide any additional information about the pull request if needed.",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "state",
          "value": "open",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": "Data/Processed/JobDescription/JobDescription-job_desc_front_end_engineer.pdfa16fa747-c2ab-4381-b806-c3cea2705632.json",
          "qualifier": "files"
        },
        {
          "objectId": "Data/Processed/JobDescription/JobDescription-job_desc_full_stack_engineer.pdfd8676606-af64-40b1-b25c-555d8c3386b0.json",
          "qualifier": "files"
        },
        {
          "objectId": "Data/Processed/JobDescription/JobDescription-job_desc_java_developer.pdfc1d3ec87-f0fb-4b24-823f-eee5f1713976.json",
          "qualifier": "files"
        },
        {
          "objectId": "Data/Processed/JobDescription/JobDescription-job_desc_product_manager.pdf87c263ab-2cc6-4754-aeac-c00db3a89b38.json",
          "qualifier": "files"
        },
        {
          "objectId": "Data/Processed/Resumes/Resume-alfred_pennyworth_pm.pdf8a46c515-78e6-4f2b-b895-d13894398ad3.json",
          "qualifier": "files"
        },
        {
          "objectId": "Data/Processed/Resumes/Resume-barry_allen_fe.pdfca6cb6f0-18b6-4f9e-88f2-9d33d941b4d3.json",
          "qualifier": "files"
        },
        {
          "objectId": "Data/Processed/Resumes/Resume-bruce_wayne_fullstack.pdfed072dab-25ec-42ca-8339-0683ec056d02.json",
          "qualifier": "files"
        },
        {
          "objectId": "Data/Processed/Resumes/Resume-harvey_dent_mle.pdfd97b6e83-ec7b-4ca0-9ce0-bb6ee755b981.json",
          "qualifier": "files"
        },
        {
          "objectId": "Data/Processed/Resumes/Resume-john_doe.pdf95e0b64e-025c-4ae5-9fc2-87e0bdc4acd2.json",
          "qualifier": "files"
        },
        {
          "objectId": "reflexapp/.gitignore",
          "qualifier": "files"
        },
        {
          "objectId": "reflexapp/assets/Hacktoberfest_banner.png",
          "qualifier": "files"
        },
        {
          "objectId": "reflexapp/assets/Resume_Matcher_Gif.gif",
          "qualifier": "files"
        },
        {
          "objectId": "reflexapp/assets/backend_fastapi_demo.gif",
          "qualifier": "files"
        },
        {
          "objectId": "reflexapp/assets/favicon.ico",
          "qualifier": "files"
        },
        {
          "objectId": "reflexapp/assets/header.png",
          "qualifier": "files"
        },
        {
          "objectId": "reflexapp/assets/header_image.png",
          "qualifier": "files"
        },
        {
          "objectId": "reflexapp/assets/quadrant_cloud.png",
          "qualifier": "files"
        },
        {
          "objectId": "reflexapp/assets/webapp_demo.gif",
          "qualifier": "files"
        },
        {
          "objectId": "reflexapp/reflexapp/__init__.py",
          "qualifier": "files"
        },
        {
          "objectId": "reflexapp/reflexapp/reflexapp.py",
          "qualifier": "files"
        },
        {
          "objectId": "reflexapp/rxconfig.py",
          "qualifier": "files"
        },
        {
          "objectId": "Devasy Patel",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "Data/Processed/JobDescription/JobDescription-job_desc_front_end_engineer.pdfa16fa747-c2ab-4381-b806-c3cea2705632.json",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Processed/JobDescription/JobDescription-job_desc_full_stack_engineer.pdfd8676606-af64-40b1-b25c-555d8c3386b0.json",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Processed/JobDescription/JobDescription-job_desc_java_developer.pdfc1d3ec87-f0fb-4b24-823f-eee5f1713976.json",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Processed/JobDescription/JobDescription-job_desc_product_manager.pdf87c263ab-2cc6-4754-aeac-c00db3a89b38.json",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Processed/Resumes/Resume-alfred_pennyworth_pm.pdf8a46c515-78e6-4f2b-b895-d13894398ad3.json",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Processed/Resumes/Resume-barry_allen_fe.pdfca6cb6f0-18b6-4f9e-88f2-9d33d941b4d3.json",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Processed/Resumes/Resume-bruce_wayne_fullstack.pdfed072dab-25ec-42ca-8339-0683ec056d02.json",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Processed/Resumes/Resume-harvey_dent_mle.pdfd97b6e83-ec7b-4ca0-9ce0-bb6ee755b981.json",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Processed/Resumes/Resume-john_doe.pdf95e0b64e-025c-4ae5-9fc2-87e0bdc4acd2.json",
          "qualifier": "aggregates"
        },
        {
          "objectId": "reflexapp/.gitignore",
          "qualifier": "aggregates"
        },
        {
          "objectId": "reflexapp/assets/Hacktoberfest_banner.png",
          "qualifier": "aggregates"
        },
        {
          "objectId": "reflexapp/assets/Resume_Matcher_Gif.gif",
          "qualifier": "aggregates"
        },
        {
          "objectId": "reflexapp/assets/backend_fastapi_demo.gif",
          "qualifier": "aggregates"
        },
        {
          "objectId": "reflexapp/assets/favicon.ico",
          "qualifier": "aggregates"
        },
        {
          "objectId": "reflexapp/assets/header.png",
          "qualifier": "aggregates"
        },
        {
          "objectId": "reflexapp/assets/header_image.png",
          "qualifier": "aggregates"
        },
        {
          "objectId": "reflexapp/assets/quadrant_cloud.png",
          "qualifier": "aggregates"
        },
        {
          "objectId": "reflexapp/assets/webapp_demo.gif",
          "qualifier": "aggregates"
        },
        {
          "objectId": "reflexapp/reflexapp/__init__.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "reflexapp/reflexapp/reflexapp.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "reflexapp/rxconfig.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Devasy Patel",
          "qualifier": "has-participant"
        },
        {
          "objectId": "df25508ab78a8c52e237006389aa24be46fa48c2",
          "qualifier": "commits"
        },
        {
          "objectId": "8d863fcfc82c1929ce569b42deb95d4f47f886b9",
          "qualifier": "commits"
        },
        {
          "objectId": "6915cd60241da2b88f9c4d3a567fb9e53900e0fc",
          "qualifier": "is-merged-with"
        },
        {
          "objectId": "df25508ab78a8c52e237006389aa24be46fa48c2",
          "qualifier": "formalises"
        },
        {
          "objectId": "8d863fcfc82c1929ce569b42deb95d4f47f886b9",
          "qualifier": "formalises"
        }
      ],
      "id": "198"
    },
    {
      "type": "pull_request",
      "attributes": [
        {
          "name": "title",
          "value": "chore(deps): bump gitpython from 3.1.32 to 3.1.37",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "description",
          "value": "Bumps [gitpython](https://github.com/gitpython-developers/GitPython) from 3.1.32 to 3.1.37.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/gitpython-developers/GitPython/releases\">gitpython's releases</a>.</em></p>\n<blockquote>\n<h2>3.1.37 - a proper fix CVE-2023-41040</h2>\n<h2>What's Changed</h2>\n<ul>\n<li>Improve Python version and OS compatibility, fixing deprecations by <a href=\"https://github.com/EliahKagan\"><code>@\u200bEliahKagan</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1654\">gitpython-developers/GitPython#1654</a></li>\n<li>Better document env_case test/fixture and cwd by <a href=\"https://github.com/EliahKagan\"><code>@\u200bEliahKagan</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1657\">gitpython-developers/GitPython#1657</a></li>\n<li>Remove spurious executable permissions by <a href=\"https://github.com/EliahKagan\"><code>@\u200bEliahKagan</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1658\">gitpython-developers/GitPython#1658</a></li>\n<li>Fix up checks in Makefile and make them portable by <a href=\"https://github.com/EliahKagan\"><code>@\u200bEliahKagan</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1661\">gitpython-developers/GitPython#1661</a></li>\n<li>Fix URLs that were redirecting to another license by <a href=\"https://github.com/EliahKagan\"><code>@\u200bEliahKagan</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1662\">gitpython-developers/GitPython#1662</a></li>\n<li>Assorted small fixes/improvements to root dir docs by <a href=\"https://github.com/EliahKagan\"><code>@\u200bEliahKagan</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1663\">gitpython-developers/GitPython#1663</a></li>\n<li>Use venv instead of virtualenv in test_installation by <a href=\"https://github.com/EliahKagan\"><code>@\u200bEliahKagan</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1664\">gitpython-developers/GitPython#1664</a></li>\n<li>Omit py_modules in setup by <a href=\"https://github.com/EliahKagan\"><code>@\u200bEliahKagan</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1665\">gitpython-developers/GitPython#1665</a></li>\n<li>Don't track code coverage temporary files by <a href=\"https://github.com/EliahKagan\"><code>@\u200bEliahKagan</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1666\">gitpython-developers/GitPython#1666</a></li>\n<li>Configure tox by <a href=\"https://github.com/EliahKagan\"><code>@\u200bEliahKagan</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1667\">gitpython-developers/GitPython#1667</a></li>\n<li>Format tests with black and auto-exclude untracked paths by <a href=\"https://github.com/EliahKagan\"><code>@\u200bEliahKagan</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1668\">gitpython-developers/GitPython#1668</a></li>\n<li>Upgrade and broaden flake8, fixing style problems and bugs by <a href=\"https://github.com/EliahKagan\"><code>@\u200bEliahKagan</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1673\">gitpython-developers/GitPython#1673</a></li>\n<li>Fix rollback bug in SymbolicReference.set_reference by <a href=\"https://github.com/EliahKagan\"><code>@\u200bEliahKagan</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1675\">gitpython-developers/GitPython#1675</a></li>\n<li>Remove <code>@NoEffect</code> annotations by <a href=\"https://github.com/EliahKagan\"><code>@\u200bEliahKagan</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1677\">gitpython-developers/GitPython#1677</a></li>\n<li>Add more checks for the validity of refnames by <a href=\"https://github.com/facutuesca\"><code>@\u200bfacutuesca</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1672\">gitpython-developers/GitPython#1672</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/gitpython-developers/GitPython/compare/3.1.36...3.1.37\">https://github.com/gitpython-developers/GitPython/compare/3.1.36...3.1.37</a></p>\n<h2>3.1.35 - a fix for CVE-2023-41040</h2>\n<h2>What's Changed</h2>\n<ul>\n<li>Bump actions/checkout from 3 to 4 by <a href=\"https://github.com/dependabot\"><code>@\u200bdependabot</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1643\">gitpython-developers/GitPython#1643</a></li>\n<li>Fix 'Tree' object has no attribute '_name' when submodule path is normal path by <a href=\"https://github.com/CosmosAtlas\"><code>@\u200bCosmosAtlas</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1645\">gitpython-developers/GitPython#1645</a></li>\n<li>Fix CVE-2023-41040 by <a href=\"https://github.com/facutuesca\"><code>@\u200bfacutuesca</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1644\">gitpython-developers/GitPython#1644</a></li>\n<li>Only make config more permissive in tests that need it by <a href=\"https://github.com/EliahKagan\"><code>@\u200bEliahKagan</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1648\">gitpython-developers/GitPython#1648</a></li>\n<li>Added test for PR <a href=\"https://redirect.github.com/gitpython-developers/GitPython/issues/1645\">#1645</a> submodule path by <a href=\"https://github.com/CosmosAtlas\"><code>@\u200bCosmosAtlas</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1647\">gitpython-developers/GitPython#1647</a></li>\n<li>Fix Windows environment variable upcasing bug by <a href=\"https://github.com/EliahKagan\"><code>@\u200bEliahKagan</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1650\">gitpython-developers/GitPython#1650</a></li>\n</ul>\n<h2>New Contributors</h2>\n<ul>\n<li><a href=\"https://github.com/CosmosAtlas\"><code>@\u200bCosmosAtlas</code></a> made their first contribution in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1645\">gitpython-developers/GitPython#1645</a></li>\n<li><a href=\"https://github.com/facutuesca\"><code>@\u200bfacutuesca</code></a> made their first contribution in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1644\">gitpython-developers/GitPython#1644</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/gitpython-developers/GitPython/compare/3.1.34...3.1.35\">https://github.com/gitpython-developers/GitPython/compare/3.1.34...3.1.35</a></p>\n<h2>3.1.34 - fix resource leaking</h2>\n<h2>What's Changed</h2>\n<ul>\n<li>util: close lockfile after opening successfully by <a href=\"https://github.com/skshetry\"><code>@\u200bskshetry</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1639\">gitpython-developers/GitPython#1639</a></li>\n</ul>\n<h2>New Contributors</h2>\n<ul>\n<li><a href=\"https://github.com/skshetry\"><code>@\u200bskshetry</code></a> made their first contribution in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1639\">gitpython-developers/GitPython#1639</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/gitpython-developers/GitPython/compare/3.1.33...3.1.34\">https://github.com/gitpython-developers/GitPython/compare/3.1.33...3.1.34</a></p>\n<h2>v3.1.33 - with security fix</h2>\n<h2>What's Changed</h2>\n<ul>\n<li>WIP Quick doc by <a href=\"https://github.com/LeoDaCoda\"><code>@\u200bLeoDaCoda</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1608\">gitpython-developers/GitPython#1608</a></li>\n<li>Partial clean up wrt mypy and black by <a href=\"https://github.com/bodograumann\"><code>@\u200bbodograumann</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1617\">gitpython-developers/GitPython#1617</a></li>\n<li>Disable merge_includes in config writers by <a href=\"https://github.com/bodograumann\"><code>@\u200bbodograumann</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1618\">gitpython-developers/GitPython#1618</a></li>\n</ul>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/gitpython-developers/GitPython/commit/b27a89f683cda85ebd78243c055e876282df89ee\"><code>b27a89f</code></a> fix makefile to compare commit hashes only</li>\n<li><a href=\"https://github.com/gitpython-developers/GitPython/commit/0bd2890ef42a7506b81a96c3c94b064917ed0d7b\"><code>0bd2890</code></a> prepare next release</li>\n<li><a href=\"https://github.com/gitpython-developers/GitPython/commit/832b6eeb4a14e669099c486862c9f568215d5afb\"><code>832b6ee</code></a> remove unnecessary list comprehension to fix CI</li>\n<li><a href=\"https://github.com/gitpython-developers/GitPython/commit/e98f57b81f792f0f5e18d33ee658ae395f9aa3c4\"><code>e98f57b</code></a> Merge pull request <a href=\"https://redirect.github.com/gitpython-developers/GitPython/issues/1672\">#1672</a> from trail-of-forks/robust-refname-checks</li>\n<li><a href=\"https://github.com/gitpython-developers/GitPython/commit/1774f1e32307deb755f80dc51b220566c7aef755\"><code>1774f1e</code></a> Merge pull request <a href=\"https://redirect.github.com/gitpython-developers/GitPython/issues/1677\">#1677</a> from EliahKagan/no-noeffect</li>\n<li><a href=\"https://github.com/gitpython-developers/GitPython/commit/a4701a0f17308ec8d4b5871e6e2a95c4e2ca5b91\"><code>a4701a0</code></a> Remove <code>@NoEffect</code> annotations</li>\n<li><a href=\"https://github.com/gitpython-developers/GitPython/commit/d40320b823994ed908d8a5e236758ff525851cd4\"><code>d40320b</code></a> Merge pull request <a href=\"https://redirect.github.com/gitpython-developers/GitPython/issues/1675\">#1675</a> from EliahKagan/rollback</li>\n<li><a href=\"https://github.com/gitpython-developers/GitPython/commit/d1c1f31dbd4a4fd527f9f3ff2ea901abf023c46b\"><code>d1c1f31</code></a> Merge pull request <a href=\"https://redirect.github.com/gitpython-developers/GitPython/issues/1673\">#1673</a> from EliahKagan/flake8</li>\n<li><a href=\"https://github.com/gitpython-developers/GitPython/commit/e480985aa4d358d0cc167d4552910e85944b8966\"><code>e480985</code></a> Tweak rollback logic in log.to_file</li>\n<li><a href=\"https://github.com/gitpython-developers/GitPython/commit/ff84b26445b147ee9e2c75d82903b0c6b09e2b7a\"><code>ff84b26</code></a> Refactor try-finally cleanup in git/</li>\n<li>Additional commits viewable in <a href=\"https://github.com/gitpython-developers/GitPython/compare/3.1.32...3.1.37\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=gitpython&package-manager=pip&previous-version=3.1.32&new-version=3.1.37)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nYou can trigger a rebase of this PR by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/srbhr/Resume-Matcher/network/alerts).\n\n</details>\n\n> **Note**\n> Automatic rebases have been disabled on this pull request as it has been open for over 30 days.\n",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "state",
          "value": "open",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": "requirements.txt",
          "qualifier": "files"
        },
        {
          "objectId": "dependabot[bot]",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "requirements.txt",
          "qualifier": "aggregates"
        },
        {
          "objectId": "dependabot[bot]",
          "qualifier": "has-participant"
        },
        {
          "objectId": "a74db7d34127fece33afa4ca0d17b5cc94387851",
          "qualifier": "commits"
        },
        {
          "objectId": "451ff0bb7b75adb70b1df9f4e465e10f2320d5b9",
          "qualifier": "is-merged-with"
        },
        {
          "objectId": "a74db7d34127fece33afa4ca0d17b5cc94387851",
          "qualifier": "formalises"
        }
      ],
      "id": "196"
    },
    {
      "type": "pull_request",
      "attributes": [
        {
          "name": "title",
          "value": "Feature/Fix: Optimize LinkedIn_to_PDF logic",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "description",
          "value": "## Pull Request Title\r\nOptimize LinkedIn_to_PDF logic. Preserve Job Description formatting.\r\n\r\n## Related Issue\r\nN/A\r\n\r\n## Description\r\nThe existing script was not modular and also did not preserve the HTML formatting while scraping job description from LinkedIn.\r\n\r\n## Type\r\n- [ ] Bug Fix\r\n- [X] Feature Enhancement\r\n- [ ] Documentation Update\r\n- [ ] Code Refactoring\r\n- [X] Other (please specify): Future usage - this function can be used to allow user to grab job description from LinkedIn directly\r\n\r\n## Proposed Changes\r\n<!-- List the specific changes made in this pull request -->\r\n- Make the script modular\r\n- Preserve HTML formatting\r\n- Name the output PDF file as something meaningful\r\n\r\n## Screenshots / Code Snippets (if applicable)\r\nN/A - Script works as-is. Can be run as a standalone script OR be used in other script in modular way\r\n\r\n## How to Test\r\n<!-- Provide step-by-step instructions or a checklist for testing the changes in this pull request -->\r\n1. Run pip install -r requirements\r\n2. Run python ./scripts/LinkedinJobToPDF.py\r\n3. Enter LinkedIn Job URL in the pop-up/window prompt\r\n4. Check the Data/JobDescription directory for new PDF file\r\n\r\n## Checklist\r\n<!-- Put an \"x\" in the brackets for the items that apply to this pull request -->\r\n\r\n- [X] The code compiles successfully without any errors or warnings\r\n- [X] The changes have been tested and verified\r\n- [ ] The documentation has been updated (if applicable)\r\n- [X] The changes follow the project's coding guidelines and best practices\r\n- [X] The commit messages are descriptive and follow the project's guidelines\r\n- [ ] All tests (if applicable) pass successfully\r\n- [ ] This pull request has been linked to the related issue (if applicable)\r\n\r\n## Additional Information\r\n<!-- Add any other information about the pull request that you think might be helpful -->\r\n\r\n",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "state",
          "value": "open",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": "requirements.txt",
          "qualifier": "files"
        },
        {
          "objectId": "scripts/LinkedinJobToPDF.py",
          "qualifier": "files"
        },
        {
          "objectId": "Abhishek Mathur",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "requirements.txt",
          "qualifier": "aggregates"
        },
        {
          "objectId": "scripts/LinkedinJobToPDF.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Abhishek Mathur",
          "qualifier": "has-participant"
        },
        {
          "objectId": "6fbcd17e15c19a53eef6969506ccf568bdc98a7d",
          "qualifier": "commits"
        },
        {
          "objectId": "d3169e4cfe1c02569d0e00d686f456a8a766e503",
          "qualifier": "commits"
        },
        {
          "objectId": "bf6296f6f39472bc0faa253fc151934299832177",
          "qualifier": "is-merged-with"
        },
        {
          "objectId": "6fbcd17e15c19a53eef6969506ccf568bdc98a7d",
          "qualifier": "formalises"
        },
        {
          "objectId": "d3169e4cfe1c02569d0e00d686f456a8a766e503",
          "qualifier": "formalises"
        }
      ],
      "id": "194"
    },
    {
      "type": "pull_request",
      "attributes": [
        {
          "name": "title",
          "value": "Colab Usage",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "description",
          "value": "## Pull Request Title\r\n<!-- Provide a concise and descriptive title for the pull request -->\r\nAdded Google Colab Usage\r\n## Related Issue\r\n<!-- If this pull request is related to an issue, please link it here using the \"#\" symbol followed by the issue number (e.g., #123) -->\r\n\r\n## Description\r\n<!-- Describe the changes made in this pull request. What problem does it solve or what feature does it add/modify? -->\r\n\r\n## Type\r\n<!-- Check the relevant options by putting an \"x\" in the brackets -->\r\n\r\n- [ ] Bug Fix\r\n- [x] Feature Enhancement\r\n- [ ] Documentation Update\r\n- [ ] Code Refactoring\r\n- [ ] Other (please specify): \r\n\r\n## Proposed Changes\r\n<!-- List the specific changes made in this pull request -->\r\n\r\n- \r\n- \r\n- \r\n\r\n## Screenshots / Code Snippets (if applicable)\r\n<!-- Include any relevant screenshots or code snippets that help visualize the changes made -->\r\n![image](https://github.com/srbhr/Resume-Matcher/assets/46422196/89590e71-91cd-4d08-9dd2-30388984549f)\r\n\r\n## How to Test\r\n<!-- Provide step-by-step instructions or a checklist for testing the changes in this pull request -->\r\n\r\n1. \r\n2. \r\n3. \r\n\r\n## Checklist\r\n<!-- Put an \"x\" in the brackets for the items that apply to this pull request -->\r\n\r\n- [x] The code compiles successfully without any errors or warnings\r\n- [x] The changes have been tested and verified\r\n- [x] The documentation has been updated (if applicable)\r\n- [x] The changes follow the project's coding guidelines and best practices\r\n- [x] The commit messages are descriptive and follow the project's guidelines\r\n- [ ] All tests (if applicable) pass successfully\r\n- [ ] This pull request has been linked to the related issue (if applicable)\r\n\r\n## Additional Information\r\n<!-- Add any other information about the pull request that you think might be helpful -->\r\n\r\n",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "state",
          "value": "open",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": "README.md",
          "qualifier": "files"
        },
        {
          "objectId": "archive/requirements_colab.txt",
          "qualifier": "files"
        },
        {
          "objectId": "archive/resume_matcher_colab.ipynb",
          "qualifier": "files"
        },
        {
          "objectId": "img.png",
          "qualifier": "files"
        },
        {
          "objectId": "img_1.png",
          "qualifier": "files"
        },
        {
          "objectId": "img_2.png",
          "qualifier": "files"
        },
        {
          "objectId": "Subramanyam Challa",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "README.md",
          "qualifier": "aggregates"
        },
        {
          "objectId": "archive/requirements_colab.txt",
          "qualifier": "aggregates"
        },
        {
          "objectId": "archive/resume_matcher_colab.ipynb",
          "qualifier": "aggregates"
        },
        {
          "objectId": "img.png",
          "qualifier": "aggregates"
        },
        {
          "objectId": "img_1.png",
          "qualifier": "aggregates"
        },
        {
          "objectId": "img_2.png",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Subramanyam Challa",
          "qualifier": "has-participant"
        },
        {
          "objectId": "ea6f8a333eef6b00d046e7b92bcfffc0db773516",
          "qualifier": "commits"
        },
        {
          "objectId": "203edeb06c68735f53b9191eae6f301ce9b3efc0",
          "qualifier": "commits"
        },
        {
          "objectId": "a7cb5a113bcb16b1ac19b82e1733349ef5469ece",
          "qualifier": "commits"
        },
        {
          "objectId": "5f735956b81aae8a0b18476bcc6287355e4159b6",
          "qualifier": "commits"
        },
        {
          "objectId": "947a4d4693eede3ae88a68df379fb1b77468c34b",
          "qualifier": "commits"
        },
        {
          "objectId": "acc9830e8bfcc078a6b84a1ae37cba93c5a5bba7",
          "qualifier": "commits"
        },
        {
          "objectId": "3ebb08201a8c6a32063b6da05e2ef28ee8cb06eb",
          "qualifier": "commits"
        },
        {
          "objectId": "0b2becf709ffc506c31357afcc23fd361d19603e",
          "qualifier": "commits"
        },
        {
          "objectId": "f7602471f64a68bc7929b0807ee1b47392e07bde",
          "qualifier": "commits"
        },
        {
          "objectId": "c83f24e9ef25e8eee6b6f49b59ecbaf0eb5372f3",
          "qualifier": "is-merged-with"
        },
        {
          "objectId": "ea6f8a333eef6b00d046e7b92bcfffc0db773516",
          "qualifier": "formalises"
        },
        {
          "objectId": "203edeb06c68735f53b9191eae6f301ce9b3efc0",
          "qualifier": "formalises"
        },
        {
          "objectId": "a7cb5a113bcb16b1ac19b82e1733349ef5469ece",
          "qualifier": "formalises"
        },
        {
          "objectId": "5f735956b81aae8a0b18476bcc6287355e4159b6",
          "qualifier": "formalises"
        },
        {
          "objectId": "947a4d4693eede3ae88a68df379fb1b77468c34b",
          "qualifier": "formalises"
        },
        {
          "objectId": "acc9830e8bfcc078a6b84a1ae37cba93c5a5bba7",
          "qualifier": "formalises"
        },
        {
          "objectId": "3ebb08201a8c6a32063b6da05e2ef28ee8cb06eb",
          "qualifier": "formalises"
        },
        {
          "objectId": "0b2becf709ffc506c31357afcc23fd361d19603e",
          "qualifier": "formalises"
        },
        {
          "objectId": "f7602471f64a68bc7929b0807ee1b47392e07bde",
          "qualifier": "formalises"
        }
      ],
      "id": "193"
    },
    {
      "type": "pull_request",
      "attributes": [
        {
          "name": "title",
          "value": "Added Colab usage",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "description",
          "value": "## Pull Request Title\r\n<!-- Provide a concise and descriptive title for the pull request -->\r\nAdded Google Colab\r\n## Related Issue\r\n<!-- If this pull request is related to an issue, please link it here using the \"#\" symbol followed by the issue number (e.g., #123) -->\r\n\r\n## Description\r\n<!-- Describe the changes made in this pull request. What problem does it solve or what feature does it add/modify? -->\r\n\r\n## Type\r\n<!-- Check the relevant options by putting an \"x\" in the brackets -->\r\n\r\n- [ ] Bug Fix\r\n- [x] Feature Enhancement\r\n- [ ] Documentation Update\r\n- [ ] Code Refactoring\r\n- [ ] Other (please specify): \r\n\r\n## Proposed Changes\r\n<!-- List the specific changes made in this pull request -->\r\n\r\n-  Added google colab usage using ngrok\r\n- \r\n- \r\n\r\n## Screenshots / Code Snippets (if applicable)\r\n<!-- Include any relevant screenshots or code snippets that help visualize the changes made -->\r\n![image](https://github.com/srbhr/Resume-Matcher/assets/46422196/1862e557-b323-4c01-b773-910850d7543b)\r\n\r\n## How to Test\r\n<!-- Provide step-by-step instructions or a checklist for testing the changes in this pull request -->\r\n\r\n1. \r\n2. \r\n3. \r\n\r\n## Checklist\r\n<!-- Put an \"x\" in the brackets for the items that apply to this pull request -->\r\n\r\n- [x] The code compiles successfully without any errors or warnings\r\n- [x] The changes have been tested and verified\r\n- [x] The documentation has been updated (if applicable)\r\n- [x] The changes follow the project's coding guidelines and best practices\r\n- [x] The commit messages are descriptive and follow the project's guidelines\r\n- [ ] All tests (if applicable) pass successfully\r\n- [ ] This pull request has been linked to the related issue (if applicable)\r\n\r\n## Additional Information\r\n<!-- Add any other information about the pull request that you think might be helpful -->\r\n\r\n",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "state",
          "value": "open",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": "Subramanyam Challa",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "Subramanyam Challa",
          "qualifier": "has-participant"
        },
        {
          "objectId": "None",
          "qualifier": "is-merged-with"
        }
      ],
      "id": "192"
    },
    {
      "type": "pull_request",
      "attributes": [
        {
          "name": "title",
          "value": "chore(deps-dev): bump postcss from 8.4.28 to 8.4.31 in /webapp",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "description",
          "value": "Bumps [postcss](https://github.com/postcss/postcss) from 8.4.28 to 8.4.31.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/postcss/postcss/releases\">postcss's releases</a>.</em></p>\n<blockquote>\n<h2>8.4.31</h2>\n<ul>\n<li>Fixed <code>\\r</code> parsing to fix CVE-2023-44270.</li>\n</ul>\n<h2>8.4.30</h2>\n<ul>\n<li>Improved source map performance (by <a href=\"https://github.com/romainmenke\"><code>@\u200bromainmenke</code></a>).</li>\n</ul>\n<h2>8.4.29</h2>\n<ul>\n<li>Fixed <code>Node#source.offset</code> (by <a href=\"https://github.com/idoros\"><code>@\u200bidoros</code></a>).</li>\n<li>Fixed docs (by <a href=\"https://github.com/coliff\"><code>@\u200bcoliff</code></a>).</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/postcss/postcss/blob/main/CHANGELOG.md\">postcss's changelog</a>.</em></p>\n<blockquote>\n<h2>8.4.31</h2>\n<ul>\n<li>Fixed <code>\\r</code> parsing to fix CVE-2023-44270.</li>\n</ul>\n<h2>8.4.30</h2>\n<ul>\n<li>Improved source map performance (by Romain Menke).</li>\n</ul>\n<h2>8.4.29</h2>\n<ul>\n<li>Fixed <code>Node#source.offset</code> (by Ido Rosenthal).</li>\n<li>Fixed docs (by Christian Oliff).</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/postcss/postcss/commit/90208de8805dd762596c0028b8637ffbed23e371\"><code>90208de</code></a> Release 8.4.31 version</li>\n<li><a href=\"https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5\"><code>58cc860</code></a> Fix carrier return parsing</li>\n<li><a href=\"https://github.com/postcss/postcss/commit/4fff8e4cdc237619df1d73a444c0a8329701c1e2\"><code>4fff8e4</code></a> Improve pnpm test output</li>\n<li><a href=\"https://github.com/postcss/postcss/commit/cd43ed123274a92ebc13a1e8cccf1d65b8198f84\"><code>cd43ed1</code></a> Update dependencies</li>\n<li><a href=\"https://github.com/postcss/postcss/commit/caa916bdcbf66c51321574e2dde112ab13e8b306\"><code>caa916b</code></a> Update dependencies</li>\n<li><a href=\"https://github.com/postcss/postcss/commit/8972f76923e921a3c9655822382039b31b1c8e1a\"><code>8972f76</code></a> Typo</li>\n<li><a href=\"https://github.com/postcss/postcss/commit/11a5286f781d2a637f2c545c5e9cd661055acaab\"><code>11a5286</code></a> Typo</li>\n<li><a href=\"https://github.com/postcss/postcss/commit/45c55017776fc61f7815d1ea8e92d5291ca5d6c8\"><code>45c5501</code></a> Release 8.4.30 version</li>\n<li><a href=\"https://github.com/postcss/postcss/commit/bc3c341f589f9c15f1b56838a33d908374e537e0\"><code>bc3c341</code></a> Update linter</li>\n<li><a href=\"https://github.com/postcss/postcss/commit/b2be58a2eb788d12474ee1335f8ecdb9fa6225aa\"><code>b2be58a</code></a> Merge pull request <a href=\"https://redirect.github.com/postcss/postcss/issues/1881\">#1881</a> from romainmenke/improve-sourcemap-performance--phil...</li>\n<li>Additional commits viewable in <a href=\"https://github.com/postcss/postcss/compare/8.4.28...8.4.31\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=postcss&package-manager=npm_and_yarn&previous-version=8.4.28&new-version=8.4.31)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nYou can trigger a rebase of this PR by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/srbhr/Resume-Matcher/network/alerts).\n\n</details>\n\n> **Note**\n> Automatic rebases have been disabled on this pull request as it has been open for over 30 days.\n",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "state",
          "value": "open",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": "webapp/package-lock.json",
          "qualifier": "files"
        },
        {
          "objectId": "webapp/package.json",
          "qualifier": "files"
        },
        {
          "objectId": "dependabot[bot]",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "webapp/package-lock.json",
          "qualifier": "aggregates"
        },
        {
          "objectId": "webapp/package.json",
          "qualifier": "aggregates"
        },
        {
          "objectId": "dependabot[bot]",
          "qualifier": "has-participant"
        },
        {
          "objectId": "3e0978d867f0730fe8800d47b4911ed98cb9402b",
          "qualifier": "commits"
        },
        {
          "objectId": "c9bf2b2f2fa3ddf77e3ee83cd59cb708e940ee82",
          "qualifier": "is-merged-with"
        },
        {
          "objectId": "3e0978d867f0730fe8800d47b4911ed98cb9402b",
          "qualifier": "formalises"
        }
      ],
      "id": "191"
    },
    {
      "type": "pull_request",
      "attributes": [
        {
          "name": "title",
          "value": "chore(deps): bump zod and next in /webapp",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "description",
          "value": "Removes [zod](https://github.com/colinhacks/zod). It's no longer used after updating ancestor dependency [next](https://github.com/vercel/next.js). These dependencies need to be updated together.\n\nRemoves `zod`\n\nUpdates `next` from 13.5.3 to 13.5.4\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/vercel/next.js/releases\">next's releases</a>.</em></p>\n<blockquote>\n<h2>v13.5.4</h2>\n<h3>Core Changes</h3>\n<ul>\n<li>chore: NextJS -&gt; Next.js: <a href=\"https://redirect.github.com/vercel/next.js/issues/55961\">#55961</a></li>\n<li>fix-failed-to-generate-self-signed-certificate issue:<a href=\"https://redirect.github.com/vercel/next.js/issues/55891\">#55891</a>: <a href=\"https://redirect.github.com/vercel/next.js/issues/55947\">#55947</a></li>\n<li>Remove .test.js from dist: <a href=\"https://redirect.github.com/vercel/next.js/issues/55946\">#55946</a></li>\n<li>Turbopack next/font/google: don't insert css rules for multiple weights or styles: <a href=\"https://redirect.github.com/vercel/next.js/issues/55852\">#55852</a></li>\n<li>Fix stale revalidate stream handling: <a href=\"https://redirect.github.com/vercel/next.js/issues/55978\">#55978</a></li>\n<li>turbopack: improve turbopack/test stability: <a href=\"https://redirect.github.com/vercel/next.js/issues/56024\">#56024</a></li>\n<li>Mark testmode fetches internal: <a href=\"https://redirect.github.com/vercel/next.js/issues/56036\">#56036</a></li>\n<li>chore: Remove 'beta.' Subdomain from <code>beta.nextjs.org</code> Links: <a href=\"https://redirect.github.com/vercel/next.js/issues/55924\">#55924</a></li>\n<li>Remove experimental.sharedPool: <a href=\"https://redirect.github.com/vercel/next.js/issues/56021\">#56021</a></li>\n<li>fix(worker): pass env to build worker w/ <code>config.experimental.workerThreads</code>: <a href=\"https://redirect.github.com/vercel/next.js/issues/55257\">#55257</a></li>\n<li>Update <code>swc_core</code> to <code>v0.83.26</code>: <a href=\"https://redirect.github.com/vercel/next.js/issues/55780\">#55780</a></li>\n<li>Revert &quot;Update <code>swc_core</code> to <code>v0.83.26</code>&quot;: <a href=\"https://redirect.github.com/vercel/next.js/issues/56077\">#56077</a></li>\n<li>fix reporting of illegal segments when directory only contains irrelevant files: <a href=\"https://redirect.github.com/vercel/next.js/issues/56076\">#56076</a></li>\n<li>Make <code>permanentRedirect</code> return 308 in route handlers: <a href=\"https://redirect.github.com/vercel/next.js/issues/56065\">#56065</a></li>\n<li>Remove unneeded next-dev js in next-core: <a href=\"https://redirect.github.com/vercel/next.js/issues/56039\">#56039</a></li>\n<li>Fix: Use <code>boolean</code> instead of <code>false</code> for experimental logging config: <a href=\"https://redirect.github.com/vercel/next.js/issues/56110\">#56110</a></li>\n<li>chore: remove chalk in favor of picocolors: <a href=\"https://redirect.github.com/vercel/next.js/issues/55992\">#55992</a></li>\n<li>Revert: &quot;Generate prefetch RSC payload during build for SSR paths (<a href=\"https://redirect.github.com/vercel/next.js/issues/54403\">#54403</a>)&quot;: <a href=\"https://redirect.github.com/vercel/next.js/issues/56059\">#56059</a></li>\n<li>fetching logging on edge: <a href=\"https://redirect.github.com/vercel/next.js/issues/56108\">#56108</a></li>\n<li>Optimize build trace handling: <a href=\"https://redirect.github.com/vercel/next.js/issues/56048\">#56048</a></li>\n<li>Update font data: <a href=\"https://redirect.github.com/vercel/next.js/issues/56121\">#56121</a></li>\n<li>feat(turbopack): port bloom filter to nexturbo: <a href=\"https://redirect.github.com/vercel/next.js/issues/55678\">#55678</a></li>\n<li>Fixes performance problems due to TaskScopes: <a href=\"https://redirect.github.com/vercel/next.js/issues/55721\">#55721</a></li>\n<li>perf: remove react dom legacy from app router: <a href=\"https://redirect.github.com/vercel/next.js/issues/56082\">#56082</a></li>\n<li>perf: replace zod with superstruct: <a href=\"https://redirect.github.com/vercel/next.js/issues/56083\">#56083</a></li>\n<li>perf: externalise ws for bundled server: <a href=\"https://redirect.github.com/vercel/next.js/issues/56095\">#56095</a></li>\n<li>misc: refactor node utils: <a href=\"https://redirect.github.com/vercel/next.js/issues/56096\">#56096</a></li>\n<li>Add support for skipTrailingSlashRedirect and skipMiddlewareUrlNormalize in Turbopack: <a href=\"https://redirect.github.com/vercel/next.js/issues/56147\">#56147</a></li>\n<li>Add experimental.scrollRestoration for Turbopack: <a href=\"https://redirect.github.com/vercel/next.js/issues/56150\">#56150</a></li>\n<li>misc: refactor handleExternals: <a href=\"https://redirect.github.com/vercel/next.js/issues/56161\">#56161</a></li>\n<li>perf: add option to bundle pages externals: <a href=\"https://redirect.github.com/vercel/next.js/issues/56162\">#56162</a></li>\n<li>Allow jest to run with use server directive: <a href=\"https://redirect.github.com/vercel/next.js/issues/56148\">#56148</a></li>\n<li>Update experimental compile cache handling: <a href=\"https://redirect.github.com/vercel/next.js/issues/56139\">#56139</a></li>\n<li>App render related code clean up: <a href=\"https://redirect.github.com/vercel/next.js/issues/56178\">#56178</a></li>\n<li>Add support for i18n config in Turbopack: <a href=\"https://redirect.github.com/vercel/next.js/issues/56182\">#56182</a></li>\n<li>Implement list of config options for Turbopack: <a href=\"https://redirect.github.com/vercel/next.js/issues/56188\">#56188</a></li>\n<li>Turbopack: add support for an assetPrefix and basePath: <a href=\"https://redirect.github.com/vercel/next.js/issues/56058\">#56058</a></li>\n<li>update turbopack: <a href=\"https://redirect.github.com/vercel/next.js/issues/56197\">#56197</a></li>\n<li>Update supported options list to reflect <a href=\"https://redirect.github.com/vercel/next.js/issues/56188\">#56188</a>: <a href=\"https://redirect.github.com/vercel/next.js/issues/56200\">#56200</a></li>\n<li>Add support for experimental.logging.level in Turbopack: <a href=\"https://redirect.github.com/vercel/next.js/issues/56201\">#56201</a></li>\n<li>Add next.config.js options to turbopack warning file: <a href=\"https://redirect.github.com/vercel/next.js/issues/56207\">#56207</a></li>\n<li>fix: <code>@\u200blibsql/client</code> build error: <a href=\"https://redirect.github.com/vercel/next.js/issues/56192\">#56192</a></li>\n<li>chore: bump <code>postcss</code>: <a href=\"https://redirect.github.com/vercel/next.js/issues/56225\">#56225</a></li>\n<li>Add additional handling for experimental-compile: <a href=\"https://redirect.github.com/vercel/next.js/issues/56224\">#56224</a></li>\n<li>Drop ipc server headers filters: <a href=\"https://redirect.github.com/vercel/next.js/issues/56226\">#56226</a></li>\n<li>only override NODE_EXTRA_CA_CERTS when using experimental https flag: <a href=\"https://redirect.github.com/vercel/next.js/issues/56252\">#56252</a></li>\n<li>Pass same mangling option as terser to SWC minifier: <a href=\"https://redirect.github.com/vercel/next.js/issues/56281\">#56281</a></li>\n</ul>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/vercel/next.js/commit/1e8dca4a87113f9d6ce0505c90f9a3d89096cefd\"><code>1e8dca4</code></a> v13.5.4</li>\n<li><a href=\"https://github.com/vercel/next.js/commit/9e24d6ff3b5c9193d64b448cc3fa8cd3b8bfd597\"><code>9e24d6f</code></a> v13.5.4-canary.11</li>\n<li><a href=\"https://github.com/vercel/next.js/commit/281ae41896cca9335921536de80ab435a0736607\"><code>281ae41</code></a> Fix build output logging order (<a href=\"https://redirect.github.com/vercel/next.js/issues/56335\">#56335</a>)</li>\n<li><a href=\"https://github.com/vercel/next.js/commit/d7626ffb7996463daf95f554ed30e67893741cf7\"><code>d7626ff</code></a> Revert &quot;misc: shortcut styled-jsx in external resolution (<a href=\"https://redirect.github.com/vercel/next.js/issues/56291\">#56291</a>)&quot; (<a href=\"https://redirect.github.com/vercel/next.js/issues/56334\">#56334</a>)</li>\n<li><a href=\"https://github.com/vercel/next.js/commit/db48052a5e1beedb3ff142e95e0ea7b5ca8dd923\"><code>db48052</code></a> v13.5.4-canary.10</li>\n<li><a href=\"https://github.com/vercel/next.js/commit/7df92b868a1105b602d7b9fc74a78cd8ac902885\"><code>7df92b8</code></a> test: add flaky turbopack integration tests to manifest (<a href=\"https://redirect.github.com/vercel/next.js/issues/56309\">#56309</a>)</li>\n<li><a href=\"https://github.com/vercel/next.js/commit/eeb9b3325d6c21107463532b9ae99f48b0cd524f\"><code>eeb9b33</code></a> fix: Invalid URL (404) provided on server actions error (<a href=\"https://redirect.github.com/vercel/next.js/issues/56323\">#56323</a>)</li>\n<li><a href=\"https://github.com/vercel/next.js/commit/3172cfedc8b759fec89fda373c86b86931fc02f1\"><code>3172cfe</code></a> fix: support both decoded and encoded url requests of conventioned files (<a href=\"https://redirect.github.com/vercel/next.js/issues/56\">#56</a>...</li>\n<li><a href=\"https://github.com/vercel/next.js/commit/a2f9ef5a34418d562581f54353ed51491a019484\"><code>a2f9ef5</code></a> fix(next/client): keep hash when navigating from app to pages router (<a href=\"https://redirect.github.com/vercel/next.js/issues/56223\">#56223</a>)</li>\n<li><a href=\"https://github.com/vercel/next.js/commit/a970f284398d4125c04908d42704b2ab98b9d98b\"><code>a970f28</code></a> Add code freeze GitHub actions for releasing (<a href=\"https://redirect.github.com/vercel/next.js/issues/56325\">#56325</a>)</li>\n<li>Additional commits viewable in <a href=\"https://github.com/vercel/next.js/compare/v13.5.3...v13.5.4\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\nYou can trigger a rebase of this PR by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/srbhr/Resume-Matcher/network/alerts).\n\n</details>\n\n> **Note**\n> Automatic rebases have been disabled on this pull request as it has been open for over 30 days.\n",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "state",
          "value": "open",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": "webapp/package-lock.json",
          "qualifier": "files"
        },
        {
          "objectId": "webapp/package.json",
          "qualifier": "files"
        },
        {
          "objectId": "dependabot[bot]",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "webapp/package-lock.json",
          "qualifier": "aggregates"
        },
        {
          "objectId": "webapp/package.json",
          "qualifier": "aggregates"
        },
        {
          "objectId": "dependabot[bot]",
          "qualifier": "has-participant"
        },
        {
          "objectId": "f02c6dc8507fb23bb5c68a40f75cee7170d40c98",
          "qualifier": "commits"
        },
        {
          "objectId": "533e9c3ae7e10426861a190ed8c7ea09a34740ec",
          "qualifier": "is-merged-with"
        },
        {
          "objectId": "f02c6dc8507fb23bb5c68a40f75cee7170d40c98",
          "qualifier": "formalises"
        }
      ],
      "id": "190"
    },
    {
      "type": "pull_request",
      "attributes": [
        {
          "name": "title",
          "value": "Enhance UI landing page",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "description",
          "value": "Fixed Changes:\r\n\r\n- added links to **li** items in navbar\r\n- added hover state for clickable elements\r\n- reduced navbar height\r\n- landing page now stretches to full height of screen\r\n- changed font from inter(default) to fira sans\r\n- other minor ui changes\r\n\r\n** multiple commits because of any issue where github was indenting the code more than the local code, which was show as changed code\r\n",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "state",
          "value": "open",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": "webapp/app/(routes)/layout.tsx",
          "qualifier": "files"
        },
        {
          "objectId": "webapp/app/_components/header/header.tsx",
          "qualifier": "files"
        },
        {
          "objectId": "webapp/app/_components/hero/hero.tsx",
          "qualifier": "files"
        },
        {
          "objectId": "webapp/app/_components/resume/file-upload/file-upload.tsx",
          "qualifier": "files"
        },
        {
          "objectId": "Sandip Karmokar",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "webapp/app/(routes)/layout.tsx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "webapp/app/_components/header/header.tsx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "webapp/app/_components/hero/hero.tsx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "webapp/app/_components/resume/file-upload/file-upload.tsx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Sandip Karmokar",
          "qualifier": "has-participant"
        },
        {
          "objectId": "5074669877ae8bcf0aca9be9385940b6d5b28a75",
          "qualifier": "commits"
        },
        {
          "objectId": "151fc4e099c775fcd58550e7882e650e07fd5837",
          "qualifier": "commits"
        },
        {
          "objectId": "664ab5294092a71d681502dfc2e0225f4afba3a3",
          "qualifier": "commits"
        },
        {
          "objectId": "c3ffb552b0c3e55ee6b2b4759d4882a3edaaad55",
          "qualifier": "commits"
        },
        {
          "objectId": "0f5c5181309fde286a752f3eea0c362788caa94e",
          "qualifier": "commits"
        },
        {
          "objectId": "6d75c17fc54c6376bde1003af651b09a1e85769f",
          "qualifier": "commits"
        },
        {
          "objectId": "911f809a5b3b72be5b500fd87d6a670adf2ded28",
          "qualifier": "commits"
        },
        {
          "objectId": "b508c9b77a39ba5c02a9a88ac393d0a264c6d5c0",
          "qualifier": "commits"
        },
        {
          "objectId": "299bba7e8fc15683f68f0956aba052140e55bd64",
          "qualifier": "commits"
        },
        {
          "objectId": "ed95b846e5525ea4b76ed80aa55d61aff2078e9c",
          "qualifier": "commits"
        },
        {
          "objectId": "a1cceedc6592a84c172e02b2790991529261599f",
          "qualifier": "commits"
        },
        {
          "objectId": "d77f3f14462f06a2f3df058be5a4a96f48587f79",
          "qualifier": "commits"
        },
        {
          "objectId": "b6058e9895135d1bac70fdffcb5feaabc0d4da7c",
          "qualifier": "commits"
        },
        {
          "objectId": "378878f8562e5bc65b96b603a380907583dca4a5",
          "qualifier": "commits"
        },
        {
          "objectId": "05f252c8f3224525a4cb643733ede4385dc28d16",
          "qualifier": "commits"
        },
        {
          "objectId": "20b3f0067112cdf453a851e2a8b01b1452fa0fc9",
          "qualifier": "commits"
        },
        {
          "objectId": "2ea06b114e3870f816cca0b55bb3450f41ab8d8d",
          "qualifier": "commits"
        },
        {
          "objectId": "b77a9ead60845e931dded27b0d511421059c7860",
          "qualifier": "commits"
        },
        {
          "objectId": "a69353bbc17a1cf2655e2128675cefa2f0e1b749",
          "qualifier": "commits"
        },
        {
          "objectId": "918a6ec5e1d3b0d1b3e6d777eb39795d9abe34b4",
          "qualifier": "commits"
        },
        {
          "objectId": "e5be1fe3fd32ff592523d250b209641e3ac5b9f9",
          "qualifier": "commits"
        },
        {
          "objectId": "30ced12b03580b2222816c340faa4fb45219a03a",
          "qualifier": "commits"
        },
        {
          "objectId": "46cf79cc5042762db9a4b5a00062ddb94f8f0a4a",
          "qualifier": "commits"
        },
        {
          "objectId": "d85cf54ea93ce6ef3e33ef134aceca57eff5f95e",
          "qualifier": "commits"
        },
        {
          "objectId": "314767921e84d91e0ee3fb2c2df27481ad117955",
          "qualifier": "commits"
        },
        {
          "objectId": "b2a9b1dbebb195646fc58d15df1fa994f3263647",
          "qualifier": "commits"
        },
        {
          "objectId": "8a3906eec47bb36620dd7d54f7f93b32f94758bc",
          "qualifier": "commits"
        },
        {
          "objectId": "6881041e8d8c34133e0eb4edbb9a2254a90a84ae",
          "qualifier": "commits"
        },
        {
          "objectId": "792d87febf37c3ba2c3cc0526855b1605e6561cc",
          "qualifier": "commits"
        },
        {
          "objectId": "9d97fdd88f42ab22433c785011e27de5f6245707",
          "qualifier": "is-merged-with"
        },
        {
          "objectId": "5074669877ae8bcf0aca9be9385940b6d5b28a75",
          "qualifier": "formalises"
        },
        {
          "objectId": "151fc4e099c775fcd58550e7882e650e07fd5837",
          "qualifier": "formalises"
        },
        {
          "objectId": "664ab5294092a71d681502dfc2e0225f4afba3a3",
          "qualifier": "formalises"
        },
        {
          "objectId": "c3ffb552b0c3e55ee6b2b4759d4882a3edaaad55",
          "qualifier": "formalises"
        },
        {
          "objectId": "0f5c5181309fde286a752f3eea0c362788caa94e",
          "qualifier": "formalises"
        },
        {
          "objectId": "6d75c17fc54c6376bde1003af651b09a1e85769f",
          "qualifier": "formalises"
        },
        {
          "objectId": "911f809a5b3b72be5b500fd87d6a670adf2ded28",
          "qualifier": "formalises"
        },
        {
          "objectId": "b508c9b77a39ba5c02a9a88ac393d0a264c6d5c0",
          "qualifier": "formalises"
        },
        {
          "objectId": "299bba7e8fc15683f68f0956aba052140e55bd64",
          "qualifier": "formalises"
        },
        {
          "objectId": "ed95b846e5525ea4b76ed80aa55d61aff2078e9c",
          "qualifier": "formalises"
        },
        {
          "objectId": "a1cceedc6592a84c172e02b2790991529261599f",
          "qualifier": "formalises"
        },
        {
          "objectId": "d77f3f14462f06a2f3df058be5a4a96f48587f79",
          "qualifier": "formalises"
        },
        {
          "objectId": "b6058e9895135d1bac70fdffcb5feaabc0d4da7c",
          "qualifier": "formalises"
        },
        {
          "objectId": "378878f8562e5bc65b96b603a380907583dca4a5",
          "qualifier": "formalises"
        },
        {
          "objectId": "05f252c8f3224525a4cb643733ede4385dc28d16",
          "qualifier": "formalises"
        },
        {
          "objectId": "20b3f0067112cdf453a851e2a8b01b1452fa0fc9",
          "qualifier": "formalises"
        },
        {
          "objectId": "2ea06b114e3870f816cca0b55bb3450f41ab8d8d",
          "qualifier": "formalises"
        },
        {
          "objectId": "b77a9ead60845e931dded27b0d511421059c7860",
          "qualifier": "formalises"
        },
        {
          "objectId": "a69353bbc17a1cf2655e2128675cefa2f0e1b749",
          "qualifier": "formalises"
        },
        {
          "objectId": "918a6ec5e1d3b0d1b3e6d777eb39795d9abe34b4",
          "qualifier": "formalises"
        },
        {
          "objectId": "e5be1fe3fd32ff592523d250b209641e3ac5b9f9",
          "qualifier": "formalises"
        },
        {
          "objectId": "30ced12b03580b2222816c340faa4fb45219a03a",
          "qualifier": "formalises"
        },
        {
          "objectId": "46cf79cc5042762db9a4b5a00062ddb94f8f0a4a",
          "qualifier": "formalises"
        },
        {
          "objectId": "d85cf54ea93ce6ef3e33ef134aceca57eff5f95e",
          "qualifier": "formalises"
        },
        {
          "objectId": "314767921e84d91e0ee3fb2c2df27481ad117955",
          "qualifier": "formalises"
        },
        {
          "objectId": "b2a9b1dbebb195646fc58d15df1fa994f3263647",
          "qualifier": "formalises"
        },
        {
          "objectId": "8a3906eec47bb36620dd7d54f7f93b32f94758bc",
          "qualifier": "formalises"
        },
        {
          "objectId": "6881041e8d8c34133e0eb4edbb9a2254a90a84ae",
          "qualifier": "formalises"
        },
        {
          "objectId": "792d87febf37c3ba2c3cc0526855b1605e6561cc",
          "qualifier": "formalises"
        }
      ],
      "id": "189"
    },
    {
      "type": "pull_request",
      "attributes": [
        {
          "name": "title",
          "value": "Bump pillow from 9.5.0 to 10.0.1",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "description",
          "value": "Bumps [pillow](https://github.com/python-pillow/Pillow) from 9.5.0 to 10.0.1.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/python-pillow/Pillow/releases\">pillow's releases</a>.</em></p>\n<blockquote>\n<h2>10.0.1</h2>\n<p><a href=\"https://pillow.readthedocs.io/en/stable/releasenotes/10.0.1.html\">https://pillow.readthedocs.io/en/stable/releasenotes/10.0.1.html</a></p>\n<h2>Changes</h2>\n<ul>\n<li>Updated libwebp to 1.3.2 <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7395\">#7395</a> [<a href=\"https://github.com/radarhere\"><code>@\u200bradarhere</code></a>]</li>\n<li>Updated zlib to 1.3 <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7344\">#7344</a> [<a href=\"https://github.com/radarhere\"><code>@\u200bradarhere</code></a>]</li>\n</ul>\n<h2>10.0.0</h2>\n<p><a href=\"https://pillow.readthedocs.io/en/stable/releasenotes/10.0.0.html\">https://pillow.readthedocs.io/en/stable/releasenotes/10.0.0.html</a></p>\n<h2>Changes</h2>\n<ul>\n<li>Fixed deallocating mask images <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7246\">#7246</a> [<a href=\"https://github.com/radarhere\"><code>@\u200bradarhere</code></a>]</li>\n<li>Added ImageFont.MAX_STRING_LENGTH <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7244\">#7244</a> [<a href=\"https://github.com/radarhere\"><code>@\u200bradarhere</code></a>]</li>\n<li>Fix Windows build with pyproject.toml <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7230\">#7230</a> [<a href=\"https://github.com/nulano\"><code>@\u200bnulano</code></a>]</li>\n<li>Do not close provided file handles with libtiff <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7199\">#7199</a> [<a href=\"https://github.com/radarhere\"><code>@\u200bradarhere</code></a>]</li>\n<li>Convert to HSV if mode is HSV in getcolor() <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7226\">#7226</a> [<a href=\"https://github.com/radarhere\"><code>@\u200bradarhere</code></a>]</li>\n<li>Added alpha_only argument to getbbox() <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7123\">#7123</a> [<a href=\"https://github.com/radarhere\"><code>@\u200bradarhere</code></a>]</li>\n<li>Prioritise speed in <em>repr_png</em> <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7242\">#7242</a> [<a href=\"https://github.com/radarhere\"><code>@\u200bradarhere</code></a>]</li>\n<li>Limit size even if one dimension is zero in decompression bomb check <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7235\">#7235</a> [<a href=\"https://github.com/radarhere\"><code>@\u200bradarhere</code></a>]</li>\n<li>Restored 32-bit support <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7234\">#7234</a> [<a href=\"https://github.com/radarhere\"><code>@\u200bradarhere</code></a>]</li>\n<li>Removed deleted file from codecov.yml and increased coverage threshold <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7232\">#7232</a> [<a href=\"https://github.com/radarhere\"><code>@\u200bradarhere</code></a>]</li>\n<li>Removed support for 32-bit <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7228\">#7228</a> [<a href=\"https://github.com/radarhere\"><code>@\u200bradarhere</code></a>]</li>\n<li>Use --config-settings instead of deprecated --global-option <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7171\">#7171</a> [<a href=\"https://github.com/radarhere\"><code>@\u200bradarhere</code></a>]</li>\n<li>Better C integer definitions <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/6645\">#6645</a> [<a href=\"https://github.com/Yay295\"><code>@\u200bYay295</code></a>]</li>\n<li>Fixed finding dependencies on Cygwin <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7175\">#7175</a> [<a href=\"https://github.com/radarhere\"><code>@\u200bradarhere</code></a>]</li>\n<li>Improved checks in font_render <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7218\">#7218</a> [<a href=\"https://github.com/radarhere\"><code>@\u200bradarhere</code></a>]</li>\n<li>Change <code>grabclipboard()</code> to use PNG compression on macOS <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7219\">#7219</a> [<a href=\"https://github.com/abey79\"><code>@\u200babey79</code></a>]</li>\n<li>Added PyPy 3.10 and removed PyPy 3.8 <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7216\">#7216</a> [<a href=\"https://github.com/radarhere\"><code>@\u200bradarhere</code></a>]</li>\n<li>Added in_place argument to ImageOps.exif_transpose() <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7092\">#7092</a> [<a href=\"https://github.com/radarhere\"><code>@\u200bradarhere</code></a>]</li>\n<li>Corrected error code <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7177\">#7177</a> [<a href=\"https://github.com/radarhere\"><code>@\u200bradarhere</code></a>]</li>\n<li>Use &quot;not in&quot; <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7174\">#7174</a> [<a href=\"https://github.com/radarhere\"><code>@\u200bradarhere</code></a>]</li>\n<li>Only call text_layout once in getmask2 <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7206\">#7206</a> [<a href=\"https://github.com/radarhere\"><code>@\u200bradarhere</code></a>]</li>\n<li>Fixed calling putpalette() on L and LA images before load() <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7187\">#7187</a> [<a href=\"https://github.com/radarhere\"><code>@\u200bradarhere</code></a>]</li>\n<li>Removed unused INT64 definition <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7180\">#7180</a> [<a href=\"https://github.com/radarhere\"><code>@\u200bradarhere</code></a>]</li>\n<li>Updated xz to 5.4.3 <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7136\">#7136</a> [<a href=\"https://github.com/radarhere\"><code>@\u200bradarhere</code></a>]</li>\n<li>Fixed saving TIFF multiframe images with LONG8 tag types <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7078\">#7078</a> [<a href=\"https://github.com/radarhere\"><code>@\u200bradarhere</code></a>]</li>\n<li>Do not set size unnecessarily if image fails to open <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7056\">#7056</a> [<a href=\"https://github.com/radarhere\"><code>@\u200bradarhere</code></a>]</li>\n<li>Removed unused code <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7210\">#7210</a> [<a href=\"https://github.com/radarhere\"><code>@\u200bradarhere</code></a>]</li>\n<li>Removed unused variables <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7205\">#7205</a> [<a href=\"https://github.com/radarhere\"><code>@\u200bradarhere</code></a>]</li>\n<li>Fixed signedness comparison warning <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7203\">#7203</a> [<a href=\"https://github.com/radarhere\"><code>@\u200bradarhere</code></a>]</li>\n<li>Fixed combining single duration across duplicate APNG frames <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7146\">#7146</a> [<a href=\"https://github.com/radarhere\"><code>@\u200bradarhere</code></a>]</li>\n<li>Remove temporary file when error is raised <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7148\">#7148</a> [<a href=\"https://github.com/radarhere\"><code>@\u200bradarhere</code></a>]</li>\n<li>Do not use temporary file when grabbing clipboard on Linux <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7200\">#7200</a> [<a href=\"https://github.com/radarhere\"><code>@\u200bradarhere</code></a>]</li>\n<li>If the clipboard fails to open on Windows, wait and try again <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7141\">#7141</a> [<a href=\"https://github.com/radarhere\"><code>@\u200bradarhere</code></a>]</li>\n<li>Fixed saving multiple 1 mode frames to GIF <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7181\">#7181</a> [<a href=\"https://github.com/radarhere\"><code>@\u200bradarhere</code></a>]</li>\n<li>Replaced absolute PIL import with relative import <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7173\">#7173</a> [<a href=\"https://github.com/radarhere\"><code>@\u200bradarhere</code></a>]</li>\n<li>Removed files and types override <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7194\">#7194</a> [<a href=\"https://github.com/radarhere\"><code>@\u200bradarhere</code></a>]</li>\n</ul>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/python-pillow/Pillow/blob/main/CHANGES.rst\">pillow's changelog</a>.</em></p>\n<blockquote>\n<h2>10.0.1 (2023-09-15)</h2>\n<ul>\n<li>\n<p>Updated libwebp to 1.3.2 <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7395\">#7395</a>\n[radarhere]</p>\n</li>\n<li>\n<p>Updated zlib to 1.3 <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7344\">#7344</a>\n[radarhere]</p>\n</li>\n</ul>\n<h2>10.0.0 (2023-07-01)</h2>\n<ul>\n<li>\n<p>Fixed deallocating mask images <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7246\">#7246</a>\n[radarhere]</p>\n</li>\n<li>\n<p>Added ImageFont.MAX_STRING_LENGTH <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7244\">#7244</a>\n[radarhere, hugovk]</p>\n</li>\n<li>\n<p>Fix Windows build with pyproject.toml <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7230\">#7230</a>\n[hugovk, nulano, radarhere]</p>\n</li>\n<li>\n<p>Do not close provided file handles with libtiff <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7199\">#7199</a>\n[radarhere]</p>\n</li>\n<li>\n<p>Convert to HSV if mode is HSV in getcolor() <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7226\">#7226</a>\n[radarhere]</p>\n</li>\n<li>\n<p>Added alpha_only argument to getbbox() <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7123\">#7123</a>\n[radarhere. hugovk]</p>\n</li>\n<li>\n<p>Prioritise speed in <em>repr_png</em> <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7242\">#7242</a>\n[radarhere]</p>\n</li>\n<li>\n<p>Do not use CFFI access by default on PyPy <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7236\">#7236</a>\n[radarhere]</p>\n</li>\n<li>\n<p>Limit size even if one dimension is zero in decompression bomb check <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7235\">#7235</a>\n[radarhere]</p>\n</li>\n<li>\n<p>Use --config-settings instead of deprecated --global-option <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7171\">#7171</a>\n[radarhere]</p>\n</li>\n<li>\n<p>Better C integer definitions <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/6645\">#6645</a>\n[Yay295, hugovk]</p>\n</li>\n<li>\n<p>Fixed finding dependencies on Cygwin <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7175\">#7175</a>\n[radarhere]</p>\n</li>\n<li>\n<p>Changed grabclipboard() to use PNG instead of JPG compression on macOS <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7219\">#7219</a>\n[abey79, radarhere]</p>\n</li>\n</ul>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/python-pillow/Pillow/commit/e34d346f10c0b1c814661e662a3e0c1ef084cf1c\"><code>e34d346</code></a> Updated order</li>\n<li><a href=\"https://github.com/python-pillow/Pillow/commit/a62f2402a6bcf11a0a1670542216725a3f9190e0\"><code>a62f240</code></a> 10.0.1 version bump</li>\n<li><a href=\"https://github.com/python-pillow/Pillow/commit/d50250d9eab741ae3ddd592d8910cfd7973b9d35\"><code>d50250d</code></a> Added release notes for 10.0.1</li>\n<li><a href=\"https://github.com/python-pillow/Pillow/commit/b4c7d4b8b2710b7af6cc944a804902eb75fd9056\"><code>b4c7d4b</code></a> Update CHANGES.rst [ci skip]</li>\n<li><a href=\"https://github.com/python-pillow/Pillow/commit/730f74600e8215ab510f71bb1fbb49d906c4356b\"><code>730f746</code></a> Updated libwebp to 1.3.2</li>\n<li><a href=\"https://github.com/python-pillow/Pillow/commit/b0e28048d692effadfe7a4268a03e1d20e0198bb\"><code>b0e2804</code></a> Updated zlib to 1.3</li>\n<li><a href=\"https://github.com/python-pillow/Pillow/commit/6e28ed1f36d0eb74053af54e1eddc9c29db698cd\"><code>6e28ed1</code></a> 10.0.0 version bump</li>\n<li><a href=\"https://github.com/python-pillow/Pillow/commit/c827f3b30f50bf04fd65daeeba6bbfd56fc7b50e\"><code>c827f3b</code></a> Merge pull request <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7246\">#7246</a> from radarhere/deallocate</li>\n<li><a href=\"https://github.com/python-pillow/Pillow/commit/39a3b1d83edcf826c3864e26bedff5b4e4dd331b\"><code>39a3b1d</code></a> Fixed deallocating mask images</li>\n<li><a href=\"https://github.com/python-pillow/Pillow/commit/8c1dc819fd91471825da01976ac0e0bc8789590f\"><code>8c1dc81</code></a> Update CHANGES.rst [ci skip]</li>\n<li>Additional commits viewable in <a href=\"https://github.com/python-pillow/Pillow/compare/9.5.0...10.0.1\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pillow&package-manager=pip&previous-version=9.5.0&new-version=10.0.1)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/srbhr/Resume-Matcher/network/alerts).\n\n</details>",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "state",
          "value": "open",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": "requirements.txt",
          "qualifier": "files"
        },
        {
          "objectId": "dependabot[bot]",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "requirements.txt",
          "qualifier": "aggregates"
        },
        {
          "objectId": "dependabot[bot]",
          "qualifier": "has-participant"
        },
        {
          "objectId": "36fdbe08b0b3efb3477d718a2e18b8d8063f6b25",
          "qualifier": "commits"
        },
        {
          "objectId": "4c2384cb6dc0921217ba8821e2148e09cb6b75aa",
          "qualifier": "is-merged-with"
        },
        {
          "objectId": "36fdbe08b0b3efb3477d718a2e18b8d8063f6b25",
          "qualifier": "formalises"
        }
      ],
      "id": "188"
    },
    {
      "type": "pull_request",
      "attributes": [
        {
          "name": "title",
          "value": "Enhance UI Landing Page",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "description",
          "value": "Changes Made:\r\n\r\n- Add links to li elements\r\n- reduced header size\r\n- added hover state to clickable elements\r\n- landing page now stretches to complete height of screen\r\n- changed font from the inter(default) to fira sans (present in ui mockup)\r\n- other minor UI changes",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "state",
          "value": "open",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": "webapp/app/(routes)/layout.tsx",
          "qualifier": "files"
        },
        {
          "objectId": "webapp/app/(routes)/page.tsx",
          "qualifier": "files"
        },
        {
          "objectId": "webapp/app/_components/header/header.tsx",
          "qualifier": "files"
        },
        {
          "objectId": "webapp/app/_components/hero/hero.tsx",
          "qualifier": "files"
        },
        {
          "objectId": "webapp/app/_components/resume/file-upload/file-upload.tsx",
          "qualifier": "files"
        },
        {
          "objectId": "webapp/app/_components/suggestions/suggestions.tsx",
          "qualifier": "files"
        },
        {
          "objectId": "webapp/app/_components/third-party-services/reducer.ts",
          "qualifier": "files"
        },
        {
          "objectId": "webapp/app/_components/third-party-services/third-party-services.tsx",
          "qualifier": "files"
        },
        {
          "objectId": "Sandip Karmokar",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "webapp/app/(routes)/layout.tsx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "webapp/app/(routes)/page.tsx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "webapp/app/_components/header/header.tsx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "webapp/app/_components/hero/hero.tsx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "webapp/app/_components/resume/file-upload/file-upload.tsx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "webapp/app/_components/suggestions/suggestions.tsx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "webapp/app/_components/third-party-services/reducer.ts",
          "qualifier": "aggregates"
        },
        {
          "objectId": "webapp/app/_components/third-party-services/third-party-services.tsx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Sandip Karmokar",
          "qualifier": "has-participant"
        },
        {
          "objectId": "5074669877ae8bcf0aca9be9385940b6d5b28a75",
          "qualifier": "commits"
        },
        {
          "objectId": "151fc4e099c775fcd58550e7882e650e07fd5837",
          "qualifier": "commits"
        },
        {
          "objectId": "664ab5294092a71d681502dfc2e0225f4afba3a3",
          "qualifier": "commits"
        },
        {
          "objectId": "c3ffb552b0c3e55ee6b2b4759d4882a3edaaad55",
          "qualifier": "commits"
        },
        {
          "objectId": "0f5c5181309fde286a752f3eea0c362788caa94e",
          "qualifier": "commits"
        },
        {
          "objectId": "2d3c489dcdf84b123acafaf5d4564820c5e73b7e",
          "qualifier": "is-merged-with"
        },
        {
          "objectId": "5074669877ae8bcf0aca9be9385940b6d5b28a75",
          "qualifier": "formalises"
        },
        {
          "objectId": "151fc4e099c775fcd58550e7882e650e07fd5837",
          "qualifier": "formalises"
        },
        {
          "objectId": "664ab5294092a71d681502dfc2e0225f4afba3a3",
          "qualifier": "formalises"
        },
        {
          "objectId": "c3ffb552b0c3e55ee6b2b4759d4882a3edaaad55",
          "qualifier": "formalises"
        },
        {
          "objectId": "0f5c5181309fde286a752f3eea0c362788caa94e",
          "qualifier": "formalises"
        }
      ],
      "id": "186"
    },
    {
      "type": "pull_request",
      "attributes": [
        {
          "name": "title",
          "value": "Fix: Add script for Windows (non-WSL) users + update readme",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "description",
          "value": "## Pull Request Title\r\nAdd script for Windows (non-WSL) users + update readme for webapp\r\n\r\n## Related Issue\r\n#153\r\n\r\n## Description\r\nThe existing setup and instructions are not compatible for Windows (non-WSL) users.\r\n\r\n## Type\r\n<!-- Check the relevant options by putting an \"x\" in the brackets -->\r\n\r\n- [X] Bug Fix\r\n- [ ] Feature Enhancement\r\n- [X] Documentation Update\r\n- [ ] Code Refactoring\r\n- [ ] Other (please specify): \r\n\r\n## Proposed Changes\r\n<!-- List the specific changes made in this pull request -->\r\n- Add scripts for Windows specific execution in package.json\r\n- Update readme file for webapp\r\n- \r\n\r\n## Screenshots / Code Snippets (if applicable)\r\n<!-- Include any relevant screenshots or code snippets that help visualize the changes made -->\r\nN/A\r\n\r\n## How to Test\r\n<!-- Provide step-by-step instructions or a checklist for testing the changes in this pull request -->\r\n\r\n1. ReadMe file has been updated - follow steps according to your local workspace/machine\r\n\r\n## Checklist\r\n<!-- Put an \"x\" in the brackets for the items that apply to this pull request -->\r\n\r\n- [X] The code compiles successfully without any errors or warnings\r\n- [X] The changes have been tested and verified\r\n- [X] The documentation has been updated (if applicable)\r\n- [X] The changes follow the project's coding guidelines and best practices\r\n- [X] The commit messages are descriptive and follow the project's guidelines\r\n- [X] All tests (if applicable) pass successfully\r\n- [X] This pull request has been linked to the related issue (if applicable)\r\n\r\n## Additional Information\r\nAlso corrected a few typos in readme file\r\n\r\n",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "state",
          "value": "open",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": "webapp/README.md",
          "qualifier": "files"
        },
        {
          "objectId": "webapp/package.json",
          "qualifier": "files"
        },
        {
          "objectId": "Abhishek Mathur",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "webapp/README.md",
          "qualifier": "aggregates"
        },
        {
          "objectId": "webapp/package.json",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Abhishek Mathur",
          "qualifier": "has-participant"
        },
        {
          "objectId": "a232b513a7d56aabe1c668ed800bfd2725311810",
          "qualifier": "commits"
        },
        {
          "objectId": "85570c2e50962e43ca6c72fd8045252b68cf73ec",
          "qualifier": "commits"
        },
        {
          "objectId": "7439cef47ebe36b068376181ade4abba4f8101be",
          "qualifier": "commits"
        },
        {
          "objectId": "8c08c9e6f46bb843206874911d56985cdcbe56b4",
          "qualifier": "commits"
        },
        {
          "objectId": "1418af11c5e0042c4416639062a46f0112d70634",
          "qualifier": "is-merged-with"
        },
        {
          "objectId": "a232b513a7d56aabe1c668ed800bfd2725311810",
          "qualifier": "formalises"
        },
        {
          "objectId": "85570c2e50962e43ca6c72fd8045252b68cf73ec",
          "qualifier": "formalises"
        },
        {
          "objectId": "7439cef47ebe36b068376181ade4abba4f8101be",
          "qualifier": "formalises"
        },
        {
          "objectId": "8c08c9e6f46bb843206874911d56985cdcbe56b4",
          "qualifier": "formalises"
        }
      ],
      "id": "185"
    },
    {
      "type": "pull_request",
      "attributes": [
        {
          "name": "title",
          "value": "Feature: Streamlit Interactive v1.0",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "description",
          "value": "## Pull Request Title\r\nInteractive streamlit application with file upload and new column based UI\r\n\r\n## Related Issue\r\nN/A\r\n\r\n## Description\r\nThis new interactive streamlit application allows users to directly upload or drag-and-drop the PDF files using streamlit's file_uploader component. The application also includes a new UI to allow side-by-side comparisons for each of the following:\r\n\r\n1. Parsed Data\r\n2. Extracted Keywords\r\n3. Extracted Entities\r\n4. Keywords & Values\r\n5. Key Topics\r\n\r\n## Type\r\n<!-- Check the relevant options by putting an \"x\" in the brackets -->\r\n\r\n- [ ] Bug Fix\r\n- [X] Feature Enhancement\r\n- [ ] Documentation Update\r\n- [X] Code Refactoring\r\n- [ ] Other (please specify): \r\n\r\n## Proposed Changes\r\nN/A\r\n\r\n## Screenshots / Code Snippets (if applicable)\r\nLanding Page: \r\n![image](https://github.com/srbhr/Resume-Matcher/assets/37048469/ab0a27c4-8764-40b4-a94e-e68ee952840d)\r\n\r\nNotification while uploading a file - Also includes a spinner to show progress:\r\n![image](https://github.com/srbhr/Resume-Matcher/assets/37048469/bdee6563-ec67-4df2-bf4d-a4c74ba17bee)\r\n\r\nAfter processing:\r\n![image](https://github.com/srbhr/Resume-Matcher/assets/37048469/d0db9300-a33e-4ea4-8e38-85581950d5ab)\r\n\r\nEach component holds the grid layout to avoid overlap for easy comparison:\r\nOnly 1 expander opened: ![image](https://github.com/srbhr/Resume-Matcher/assets/37048469/dfc5a7f5-bae7-4a2d-b91c-5e4d7111f2dd)\r\n\r\nBoth expanders opened: \r\n![image](https://github.com/srbhr/Resume-Matcher/assets/37048469/5d6c89c5-4325-45ec-878b-57b01daf2eb7)\r\n\r\nThe Similarity Score and common words has been pushed to the bottom section outside of the grid:\r\n![image](https://github.com/srbhr/Resume-Matcher/assets/37048469/a1cd8571-39f9-47f6-9cfe-9711ed8efd18)\r\n\r\nThe Similarity Score also changes color based on the following rules - subject to change:\r\n\r\n```\r\n# Default color to green\r\nscore_color = \"green\"\r\nif similarity_score < 60:\r\n    score_color = \"red\"\r\nelif 60 <= similarity_score < 75:\r\n    score_color = \"orange\"\r\n```\r\n\r\n\r\n## How to Test\r\n\r\n1. Execute pip install -r requirements.txt to upgrade streamlit and other dependencies\r\n2. Include config.yml file if similarity score needs to be calculated\r\n3. Execute streamlit run streamlit_interactive.py \r\n4. Upload/Drag-and-drop the resume and job description PDF\r\n5. Done\r\n\r\n## Checklist\r\n<!-- Put an \"x\" in the brackets for the items that apply to this pull request -->\r\n\r\n- [X] The code compiles successfully without any errors or warnings\r\n- [X] The changes have been tested and verified\r\n- [ ] The documentation has been updated (if applicable)\r\n- [X] The changes follow the project's coding guidelines and best practices\r\n- [X] The commit messages are descriptive and follow the project's guidelines\r\n- [X] All tests (if applicable) pass successfully\r\n- [ ] This pull request has been linked to the related issue (if applicable)\r\n\r\n## Additional Information\r\n",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "state",
          "value": "open",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": ".gitignore",
          "qualifier": "files"
        },
        {
          "objectId": "Assets/img/favicon.ico",
          "qualifier": "files"
        },
        {
          "objectId": "streamlit_interactive.py",
          "qualifier": "files"
        },
        {
          "objectId": "Abhishek Mathur",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": ".gitignore",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Assets/img/favicon.ico",
          "qualifier": "aggregates"
        },
        {
          "objectId": "streamlit_interactive.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Abhishek Mathur",
          "qualifier": "has-participant"
        },
        {
          "objectId": "d2bce7dc444640609d4d106155a419c5c65a12c1",
          "qualifier": "commits"
        },
        {
          "objectId": "7c7edbe960400b839cf3b104270fa5043a08d202",
          "qualifier": "commits"
        },
        {
          "objectId": "f86abd4ca5937373f8d6c20402f8d308469e8c50",
          "qualifier": "commits"
        },
        {
          "objectId": "b81e67bb4cdcc034c34c400ddfa3ccdcf7267b24",
          "qualifier": "commits"
        },
        {
          "objectId": "75e44541abceba61fb35375ce19f851623bda2c4",
          "qualifier": "commits"
        },
        {
          "objectId": "1987c10c65d1cb87d12895f9f36f3c6d6ae7efc4",
          "qualifier": "commits"
        },
        {
          "objectId": "0b514c96f0a171ad85a451962d4a70f69750b83a",
          "qualifier": "commits"
        },
        {
          "objectId": "302f764d767681b86122b6020de1b556860b9ec8",
          "qualifier": "commits"
        },
        {
          "objectId": "013bbe72da49b3416d409dd64c5449a9d7d06c73",
          "qualifier": "commits"
        },
        {
          "objectId": "625c12c28c5277858e044c48eac9f4fac6825f10",
          "qualifier": "commits"
        },
        {
          "objectId": "9e59007f89fcce453d91080104008a38a1354d10",
          "qualifier": "commits"
        },
        {
          "objectId": "f5e194d4a9ad718884f595912e9bf4c4ba19a4a2",
          "qualifier": "commits"
        },
        {
          "objectId": "472530df40d2132b8d770b70744426a57d313c9a",
          "qualifier": "commits"
        },
        {
          "objectId": "cf3f1c73d8fa91f48b50eef2f669e68e9cbe80fa",
          "qualifier": "commits"
        },
        {
          "objectId": "7a6c280526fc16aa5bbb144d66456187df6635a5",
          "qualifier": "commits"
        },
        {
          "objectId": "91e1f4e4a9b9f8d01450e621e00573f5a3a28362",
          "qualifier": "commits"
        },
        {
          "objectId": "c659d53aa1e400ef21f25dd4885204314728587e",
          "qualifier": "commits"
        },
        {
          "objectId": "3913187e9417a22f831316ec635c9971adef37bb",
          "qualifier": "commits"
        },
        {
          "objectId": "b1f6917a7eda69869dbe49db659ea28a906906c3",
          "qualifier": "commits"
        },
        {
          "objectId": "844bcb374c9578e8703af7e8cde2ebe92d032afd",
          "qualifier": "commits"
        },
        {
          "objectId": "d412a4b75f86ae33369256659c1ca1aed146bb78",
          "qualifier": "commits"
        },
        {
          "objectId": "e77cbffe38e68db21013950630e67e3fd0dd47b0",
          "qualifier": "commits"
        },
        {
          "objectId": "e359e0adaf44d1f582e75d933db252c3692b0598",
          "qualifier": "is-merged-with"
        },
        {
          "objectId": "d2bce7dc444640609d4d106155a419c5c65a12c1",
          "qualifier": "formalises"
        },
        {
          "objectId": "7c7edbe960400b839cf3b104270fa5043a08d202",
          "qualifier": "formalises"
        },
        {
          "objectId": "f86abd4ca5937373f8d6c20402f8d308469e8c50",
          "qualifier": "formalises"
        },
        {
          "objectId": "b81e67bb4cdcc034c34c400ddfa3ccdcf7267b24",
          "qualifier": "formalises"
        },
        {
          "objectId": "75e44541abceba61fb35375ce19f851623bda2c4",
          "qualifier": "formalises"
        },
        {
          "objectId": "1987c10c65d1cb87d12895f9f36f3c6d6ae7efc4",
          "qualifier": "formalises"
        },
        {
          "objectId": "0b514c96f0a171ad85a451962d4a70f69750b83a",
          "qualifier": "formalises"
        },
        {
          "objectId": "302f764d767681b86122b6020de1b556860b9ec8",
          "qualifier": "formalises"
        },
        {
          "objectId": "013bbe72da49b3416d409dd64c5449a9d7d06c73",
          "qualifier": "formalises"
        },
        {
          "objectId": "625c12c28c5277858e044c48eac9f4fac6825f10",
          "qualifier": "formalises"
        },
        {
          "objectId": "9e59007f89fcce453d91080104008a38a1354d10",
          "qualifier": "formalises"
        },
        {
          "objectId": "f5e194d4a9ad718884f595912e9bf4c4ba19a4a2",
          "qualifier": "formalises"
        },
        {
          "objectId": "472530df40d2132b8d770b70744426a57d313c9a",
          "qualifier": "formalises"
        },
        {
          "objectId": "cf3f1c73d8fa91f48b50eef2f669e68e9cbe80fa",
          "qualifier": "formalises"
        },
        {
          "objectId": "7a6c280526fc16aa5bbb144d66456187df6635a5",
          "qualifier": "formalises"
        },
        {
          "objectId": "91e1f4e4a9b9f8d01450e621e00573f5a3a28362",
          "qualifier": "formalises"
        },
        {
          "objectId": "c659d53aa1e400ef21f25dd4885204314728587e",
          "qualifier": "formalises"
        },
        {
          "objectId": "3913187e9417a22f831316ec635c9971adef37bb",
          "qualifier": "formalises"
        },
        {
          "objectId": "b1f6917a7eda69869dbe49db659ea28a906906c3",
          "qualifier": "formalises"
        },
        {
          "objectId": "844bcb374c9578e8703af7e8cde2ebe92d032afd",
          "qualifier": "formalises"
        },
        {
          "objectId": "d412a4b75f86ae33369256659c1ca1aed146bb78",
          "qualifier": "formalises"
        },
        {
          "objectId": "e77cbffe38e68db21013950630e67e3fd0dd47b0",
          "qualifier": "formalises"
        }
      ],
      "id": "184"
    },
    {
      "type": "pull_request",
      "attributes": [
        {
          "name": "title",
          "value": "Upgrade: streamlit to 1.27.1, streamlit-extras to 0.3.2, htbuilder to 0.6.2, Pillow to 10.0.1",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "description",
          "value": "## Pull Request Title\r\nUpgrade dependencies to latest release versions\r\n\r\n## Related Issue\r\nN/A\r\n\r\n## Description\r\nStreamlit 1.26.0 introduced _toast_ which can act as notifications. The extras dependency has new feature(s) like stoggle. These will be useful in updating existing application's implementation\r\n\r\n## Type\r\n<!-- Check the relevant options by putting an \"x\" in the brackets -->\r\n\r\n- [ ] Bug Fix\r\n- [ ] Feature Enhancement\r\n- [ ] Documentation Update\r\n- [ ] Code Refactoring\r\n- [X] Other (please specify): Version upgrade for dependencies\r\n\r\n## Proposed Changes\r\n<!-- List the specific changes made in this pull request -->\r\n\r\n- Upgrade streamlit to 1.27.0\r\n- Upgrade streamlit-extras to 0.3.2\r\n- Upgrade htbuilder to 0.6.2 as it is required by streamlit 1.27.0\r\n\r\n## Screenshots / Code Snippets (if applicable)\r\nN/A - Changes are in requirements.txt file only\r\n\r\n## How to Test\r\n<!-- Provide step-by-step instructions or a checklist for testing the changes in this pull request -->\r\n\r\n1. Run pip install -r requirements.txt\r\n2. Launch the app\r\n\r\n## Checklist\r\n\r\n- [X] The code compiles successfully without any errors or warnings\r\n- [X] The changes have been tested and verified\r\n- [ ] The documentation has been updated (if applicable)\r\n- [X] The changes follow the project's coding guidelines and best practices\r\n- [X] The commit messages are descriptive and follow the project's guidelines\r\n- [ ] All tests (if applicable) pass successfully\r\n- [ ] This pull request has been linked to the related issue (if applicable)\r\n\r\n## Additional Information\r\nN/A",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "state",
          "value": "open",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": "requirements.txt",
          "qualifier": "files"
        },
        {
          "objectId": "Abhishek Mathur",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "requirements.txt",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Abhishek Mathur",
          "qualifier": "has-participant"
        },
        {
          "objectId": "4c6246510978ac5a4e2e2f91050ec63d8e4473be",
          "qualifier": "commits"
        },
        {
          "objectId": "7a0bc0bd87ff994186b9afc457c163af528fa4c8",
          "qualifier": "commits"
        },
        {
          "objectId": "4411c363603942584e039b0648599a37eb9d329c",
          "qualifier": "commits"
        },
        {
          "objectId": "e0027b3a92ead1072ceea947891dd859f0693932",
          "qualifier": "commits"
        },
        {
          "objectId": "23d2fb131e8f982ba39ffb0243f04c0fca5ba3dc",
          "qualifier": "commits"
        },
        {
          "objectId": "ad69869e3f4d3b1b8fe32f08d4bcdb9351cf42da",
          "qualifier": "is-merged-with"
        },
        {
          "objectId": "4c6246510978ac5a4e2e2f91050ec63d8e4473be",
          "qualifier": "formalises"
        },
        {
          "objectId": "7a0bc0bd87ff994186b9afc457c163af528fa4c8",
          "qualifier": "formalises"
        },
        {
          "objectId": "4411c363603942584e039b0648599a37eb9d329c",
          "qualifier": "formalises"
        },
        {
          "objectId": "e0027b3a92ead1072ceea947891dd859f0693932",
          "qualifier": "formalises"
        },
        {
          "objectId": "23d2fb131e8f982ba39ffb0243f04c0fca5ba3dc",
          "qualifier": "formalises"
        }
      ],
      "id": "183"
    },
    {
      "type": "pull_request",
      "attributes": [
        {
          "name": "title",
          "value": "Adds a sidebar and favicon to existing streamlit apps",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "description",
          "value": "## Pull Request Title\r\nAdds a sidebar to the streamlit app to better maintain the screen space\r\n\r\n## Related Issue\r\n#181 , #195\r\n\r\n## Description\r\nSharing the links in sidebar would make it available at all times and will also not hinder with the application's usability\r\n\r\n## Type\r\n- [ ] Bug Fix\r\n- [ ] Feature Enhancement\r\n- [ ] Documentation Update\r\n- [X] Code Refactoring\r\n- [X] Other (please specify): UI / Cosmetic change\r\n\r\n## Proposed Changes\r\nChanges include the following:\r\n\r\n1. Header information moved to sidebar\r\n2. Included favicon and page title\r\n3. Included Back to Top link at the bottom of the page\r\n\r\n## Screenshots / Code Snippets (if applicable)\r\n![image](https://github.com/srbhr/Resume-Matcher/assets/37048469/4c64d4d7-b9e2-44b8-aed7-5915dc360eeb)\r\n![image](https://github.com/srbhr/Resume-Matcher/assets/37048469/8e17d80b-7e35-45e4-a27c-6f45192781ec)\r\n![image](https://github.com/srbhr/Resume-Matcher/assets/37048469/ec1d144d-1f1a-4bb5-b1eb-e05574bc2e44)\r\n\r\n\r\n## How to Test\r\nN/A - Run the app as guided in readme\r\n\r\n## Checklist\r\n- [X] The code compiles successfully without any errors or warnings\r\n- [X] The changes have been tested and verified\r\n- [ ] The documentation has been updated (if applicable)\r\n- [X] The changes follow the project's coding guidelines and best practices\r\n- [X] The commit messages are descriptive and follow the project's guidelines\r\n- [ ] All tests (if applicable) pass successfully\r\n- [X] This pull request has been linked to the related issue (if applicable)\r\n\r\n## Additional Information\r\n<!-- Add any other information about the pull request that you think might be helpful -->\r\n\r\n",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "state",
          "value": "open",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": "streamlit_app.py",
          "qualifier": "files"
        },
        {
          "objectId": "streamlit_second.py",
          "qualifier": "files"
        },
        {
          "objectId": "Abhishek Mathur",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "streamlit_app.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "streamlit_second.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Abhishek Mathur",
          "qualifier": "has-participant"
        },
        {
          "objectId": "c5b90c3806c383f5a109ede10d288dbf9b9de488",
          "qualifier": "commits"
        },
        {
          "objectId": "2d28cab6d38083b5a9cff6ea06a23dc3194a2d29",
          "qualifier": "commits"
        },
        {
          "objectId": "9fb5f9f04d23e3e47fbf859f7ab3a5a365b4f729",
          "qualifier": "commits"
        },
        {
          "objectId": "dae1dd7ecd7fe68272b9fb7136fe55260f3a8421",
          "qualifier": "commits"
        },
        {
          "objectId": "2843908a00ae32be5a9f4d0d275d7a2c307877fa",
          "qualifier": "commits"
        },
        {
          "objectId": "d37e5c30f199f813338d54ada39dbeb6ddb50b72",
          "qualifier": "commits"
        },
        {
          "objectId": "0bbb4e9ab48e28b653958bffbccba3fc9e551a0e",
          "qualifier": "commits"
        },
        {
          "objectId": "3609d03925f8ca57a5e522507124eb0e2e927c3e",
          "qualifier": "commits"
        },
        {
          "objectId": "76f10195598573a4720882ce28da464c410a912e",
          "qualifier": "commits"
        },
        {
          "objectId": "73be66d126a59dbdbc85f4d1679663b1542a19c6",
          "qualifier": "is-merged-with"
        },
        {
          "objectId": "c5b90c3806c383f5a109ede10d288dbf9b9de488",
          "qualifier": "formalises"
        },
        {
          "objectId": "2d28cab6d38083b5a9cff6ea06a23dc3194a2d29",
          "qualifier": "formalises"
        },
        {
          "objectId": "9fb5f9f04d23e3e47fbf859f7ab3a5a365b4f729",
          "qualifier": "formalises"
        },
        {
          "objectId": "dae1dd7ecd7fe68272b9fb7136fe55260f3a8421",
          "qualifier": "formalises"
        },
        {
          "objectId": "2843908a00ae32be5a9f4d0d275d7a2c307877fa",
          "qualifier": "formalises"
        },
        {
          "objectId": "d37e5c30f199f813338d54ada39dbeb6ddb50b72",
          "qualifier": "formalises"
        },
        {
          "objectId": "0bbb4e9ab48e28b653958bffbccba3fc9e551a0e",
          "qualifier": "formalises"
        },
        {
          "objectId": "3609d03925f8ca57a5e522507124eb0e2e927c3e",
          "qualifier": "formalises"
        },
        {
          "objectId": "76f10195598573a4720882ce28da464c410a912e",
          "qualifier": "formalises"
        }
      ],
      "id": "182"
    },
    {
      "type": "pull_request",
      "attributes": [
        {
          "name": "title",
          "value": "Tanya",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "description",
          "value": "## Pull Request Title\r\n<!-- Provide a concise and descriptive title for the pull request -->\r\n\r\n## Related Issue\r\n<!-- If this pull request is related to an issue, please link it here using the \"#\" symbol followed by the issue number (e.g., #123) -->\r\n\r\n## Description\r\n<!-- Describe the changes made in this pull request. What problem does it solve or what feature does it add/modify? -->\r\n\r\n## Type\r\n<!-- Check the relevant options by putting an \"x\" in the brackets -->\r\n\r\n- [ ] Bug Fix\r\n- [ ] Feature Enhancement\r\n- [ ] Documentation Update\r\n- [ ] Code Refactoring\r\n- [ ] Other (please specify): \r\n\r\n## Proposed Changes\r\n<!-- List the specific changes made in this pull request -->\r\n\r\n- \r\n- \r\n- \r\n\r\n## Screenshots / Code Snippets (if applicable)\r\n<!-- Include any relevant screenshots or code snippets that help visualize the changes made -->\r\n\r\n## How to Test\r\n<!-- Provide step-by-step instructions or a checklist for testing the changes in this pull request -->\r\n\r\n1. \r\n2. \r\n3. \r\n\r\n## Checklist\r\n<!-- Put an \"x\" in the brackets for the items that apply to this pull request -->\r\n\r\n- [ ] The code compiles successfully without any errors or warnings\r\n- [ ] The changes have been tested and verified\r\n- [ ] The documentation has been updated (if applicable)\r\n- [ ] The changes follow the project's coding guidelines and best practices\r\n- [ ] The commit messages are descriptive and follow the project's guidelines\r\n- [ ] All tests (if applicable) pass successfully\r\n- [ ] This pull request has been linked to the related issue (if applicable)\r\n\r\n## Additional Information\r\n<!-- Add any other information about the pull request that you think might be helpful -->\r\n\r\n",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "state",
          "value": "open",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": ".gitignore",
          "qualifier": "files"
        },
        {
          "objectId": "Tanya Kemkar",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": ".gitignore",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Tanya Kemkar",
          "qualifier": "has-participant"
        },
        {
          "objectId": "95b3d008335edd7499ce6cdfd111c88892e028da",
          "qualifier": "commits"
        },
        {
          "objectId": "8b3474cec5dc9ea7437e9683656e2ea423912785",
          "qualifier": "commits"
        },
        {
          "objectId": "ad493ac8f6306195e2bb4889a2286546a9013e06",
          "qualifier": "commits"
        },
        {
          "objectId": "56e96f2b884d259aad95ec7b09d9d927a5dcfd68",
          "qualifier": "commits"
        },
        {
          "objectId": "92ae024cd7dd6217947ea8ad1c413c92bda1f59d",
          "qualifier": "commits"
        },
        {
          "objectId": "edd754bdb5534a99e1d9d329e6903e26fa6c3dbe",
          "qualifier": "commits"
        },
        {
          "objectId": "c266308942450547857401533f23ad2d35d81314",
          "qualifier": "commits"
        },
        {
          "objectId": "7e306f19811842f1057078ce7674444039a81875",
          "qualifier": "commits"
        },
        {
          "objectId": "3ff1536504ffb9331f670dd99f8eb621d64b2dd0",
          "qualifier": "is-merged-with"
        },
        {
          "objectId": "95b3d008335edd7499ce6cdfd111c88892e028da",
          "qualifier": "formalises"
        },
        {
          "objectId": "8b3474cec5dc9ea7437e9683656e2ea423912785",
          "qualifier": "formalises"
        },
        {
          "objectId": "ad493ac8f6306195e2bb4889a2286546a9013e06",
          "qualifier": "formalises"
        },
        {
          "objectId": "56e96f2b884d259aad95ec7b09d9d927a5dcfd68",
          "qualifier": "formalises"
        },
        {
          "objectId": "92ae024cd7dd6217947ea8ad1c413c92bda1f59d",
          "qualifier": "formalises"
        },
        {
          "objectId": "edd754bdb5534a99e1d9d329e6903e26fa6c3dbe",
          "qualifier": "formalises"
        },
        {
          "objectId": "c266308942450547857401533f23ad2d35d81314",
          "qualifier": "formalises"
        },
        {
          "objectId": "7e306f19811842f1057078ce7674444039a81875",
          "qualifier": "formalises"
        }
      ],
      "id": "180"
    },
    {
      "type": "pull_request",
      "attributes": [
        {
          "name": "title",
          "value": "feat: web app - save resume and job descs to filesystem",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "description",
          "value": "## Web App - Save Resume and Job Descriptions to Local Filesystem\r\n\r\nThis feature change allows for user uploaded resumes / CVs and multiple job descriptions to be saved to the local file system as PDF files, within `/Data/Resumes/` and `/Data/JobDescription/` directories respectively.\r\n\r\nEvery time the user clicks on the `Continue` button on the webapp to begin the resume and job descriptions upload process, then any prior *.local.pdf files will be removed, to avoid unnecessary buildup on files.\r\n\r\nThe PDF files are suffixed with `*.local.pdf` in the filename to avoid accidental commits / pushes to the main repositories from the community, where this is enforced in the `.gitignore` file as part of this change.\r\n\r\nLastly, a change has been made to the frontend web app UI to temporarily disable (commented out code) the ability to upload job links. The reason is because there is no current backend implementation to handle the parsing and web scraping of job descriptions via links from the web as of yet. When the backend implementation is complete, then please remember to uncomment the button which allows the users to also upload job links.\r\n\r\n\r\n\r\n## Related Issue\r\nN/A\r\n\r\n## Type\r\n<!-- Check the relevant options by putting an \"x\" in the brackets -->\r\n\r\n- [ ] Bug Fix\r\n- [X] Feature Enhancement\r\n- [ ] Documentation Update\r\n- [] Code Refactoring\r\n- [ ] Other (please specify): \r\n\r\n## Proposed Changes\r\n\r\n- `.gitignore` - addition to ignore `*.local.pdf` files\r\n- `webapp/app/_components/job-descriptions/add-jobs/add-jobs.tsx` - temporarily comment out `<button>` which allows for upload of job links (backend implementation needs work to handle links to job description)\r\n- `webapp/backend/api/index.py` - add function calls to API endpoint `/api/resume-processor` to trigger scripts to save the resume and job descriptions to local filesystem as PDF files.\r\n- `webapp/backend/scripts/files.py` - scripts to handle file parsing and saving to local filesystem.\r\n\r\n## Screenshots / Code Snippets (if applicable)\r\nGIF demonstration of saving the resume and job descriptions to local file system, from the web app UI to the backend:\r\n![GIF demonstration image of saving the resume and job descriptions to local file system, from the web app UI to the backend](https://github.com/srbhr/Resume-Matcher/assets/7581546/f2751a3d-5403-4013-8d2f-05e4708175d6)\r\n\r\n\r\n## How to Test\r\nInstructions on running the full stack web application is set out in the [webapp/README.md](https://github.com/srbhr/Resume-Matcher/blob/main/webapp/README.md)\r\n\r\n## Checklist\r\n\r\n- [X] The code compiles successfully without any errors or warnings\r\n- [X] The changes have been tested and verified\r\n- [ ] The documentation has been updated (if applicable)\r\n- [X] The changes follow the project's coding guidelines and best practices\r\n- [X] The commit messages are descriptive and follow the project's guidelines\r\n- [ ] All tests (if applicable) pass successfully\r\n- [ ] This pull request has been linked to the related issue (if applicable)\r\n\r\n## Additional Information\r\nN/A\r\n\r\n",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "state",
          "value": "open",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": ".gitignore",
          "qualifier": "files"
        },
        {
          "objectId": "webapp/app/_components/job-descriptions/add-jobs/add-jobs.tsx",
          "qualifier": "files"
        },
        {
          "objectId": "webapp/backend/api/index.py",
          "qualifier": "files"
        },
        {
          "objectId": "webapp/backend/scripts/files.py",
          "qualifier": "files"
        },
        {
          "objectId": "Sayvai",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": ".gitignore",
          "qualifier": "aggregates"
        },
        {
          "objectId": "webapp/app/_components/job-descriptions/add-jobs/add-jobs.tsx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "webapp/backend/api/index.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "webapp/backend/scripts/files.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Sayvai",
          "qualifier": "has-participant"
        },
        {
          "objectId": "f2df366e1f4739b1207946be431f18181d41bb9c",
          "qualifier": "commits"
        },
        {
          "objectId": "dc572fde263a51e4b05a2ea26cfc55a744cb63a2",
          "qualifier": "is-merged-with"
        },
        {
          "objectId": "f2df366e1f4739b1207946be431f18181d41bb9c",
          "qualifier": "formalises"
        }
      ],
      "id": "179"
    },
    {
      "type": "user",
      "attributes": [
        {
          "name": "username",
          "value": "NathanTarbert",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "rank",
          "value": "NONE",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "is-bot",
          "value": "False",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "rank",
          "value": "CONTRIBUTOR",
          "time": "2025-03-18T17:10:54Z"
        }
      ],
      "relationships": [
        {
          "objectId": "Nathan \ud83d\udd36 Tarbert",
          "qualifier": "name"
        }
      ],
      "id": "Nathan \ud83d\udd36 Tarbert"
    },
    {
      "type": "user",
      "attributes": [
        {
          "name": "username",
          "value": "thakoreh",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "rank",
          "value": "NONE",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "is-bot",
          "value": "False",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": "Hiren Thakore",
          "qualifier": "name"
        }
      ],
      "id": "Hiren Thakore"
    },
    {
      "type": "user",
      "attributes": [
        {
          "name": "username",
          "value": "hal",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "rank",
          "value": "NONE",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "is-bot",
          "value": "True",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": "HAL - WildFly Management Console",
          "qualifier": "name"
        }
      ],
      "id": "HAL - WildFly Management Console"
    },
    {
      "type": "user",
      "attributes": [
        {
          "name": "username",
          "value": "admalekar",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "rank",
          "value": "NONE",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "is-bot",
          "value": "False",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "rank",
          "value": "CONTRIBUTOR",
          "time": "2025-02-09T01:36:21Z"
        }
      ],
      "relationships": [
        {
          "objectId": "Amey Malekar",
          "qualifier": "name"
        }
      ],
      "id": "Amey Malekar"
    },
    {
      "type": "user",
      "attributes": [
        {
          "name": "username",
          "value": "dxxky",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "rank",
          "value": "NONE",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "is-bot",
          "value": "False",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "rank",
          "value": "CONTRIBUTOR",
          "time": "2025-03-24T03:41:16Z"
        }
      ],
      "relationships": [
        {
          "objectId": "dxxky",
          "qualifier": "name"
        }
      ],
      "id": "dxxky"
    },
    {
      "type": "user",
      "attributes": [
        {
          "name": "username",
          "value": "drewbitt",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "rank",
          "value": "NONE",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "is-bot",
          "value": "False",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": "Andrew",
          "qualifier": "name"
        }
      ],
      "id": "Andrew"
    },
    {
      "type": "user",
      "attributes": [
        {
          "name": "username",
          "value": "sriramr244",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "rank",
          "value": "NONE",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "is-bot",
          "value": "False",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "rank",
          "value": "CONTRIBUTOR",
          "time": "2025-02-27T20:16:12Z"
        }
      ],
      "relationships": [
        {
          "objectId": "sriramr244",
          "qualifier": "name"
        }
      ],
      "id": "sriramr244"
    },
    {
      "type": "pull_request",
      "attributes": [
        {
          "name": "title",
          "value": "Create CONTRIBUTING.md",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "description",
          "value": "\r\n## Pull Request Title\r\n<!-- Provide a concise and descriptive title for the pull request -->\r\n\r\n## Related Issue\r\ncloses #175\r\n\r\n## Description\r\nAdding a detailed contributing guide as guidance to give contributors proper expectations.\r\n\r\n## Type\r\n<!-- Check the relevant options by putting an \"x\" in the brackets -->\r\n\r\n- [ ] Bug Fix\r\n- [ ] Feature Enhancement\r\n- [x ] Documentation Update\r\n- [ ] Code Refactoring\r\n- [ ] Other (please specify): \r\n\r\n## Proposed Changes\r\n<!-- List the specific changes made in this pull request -->\r\n\r\n- \r\n- \r\n- \r\n\r\n## Screenshots / Code Snippets (if applicable)\r\n<!-- Include any relevant screenshots or code snippets that help visualize the changes made -->\r\n\r\n## How to Test\r\n<!-- Provide step-by-step instructions or a checklist for testing the changes in this pull request -->\r\n\r\n1. \r\n2. \r\n3. \r\n\r\n## Checklist\r\n<!-- Put an \"x\" in the brackets for the items that apply to this pull request -->\r\n\r\n- [ ] The code compiles successfully without any errors or warnings\r\n- [ ] The changes have been tested and verified\r\n- [ ] The documentation has been updated (if applicable)\r\n- [ ] The changes follow the project's coding guidelines and best practices\r\n- [ ] The commit messages are descriptive and follow the project's guidelines\r\n- [ ] All tests (if applicable) pass successfully\r\n- [ ] This pull request has been linked to the related issue (if applicable)\r\n\r\n## Additional Information\r\n<!-- Add any other information about the pull request that you think might be helpful -->\r\n\r\n",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "state",
          "value": "open",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": "CONTRIBUTING.md",
          "qualifier": "files"
        },
        {
          "objectId": "Nathan \ud83d\udd36 Tarbert",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "CONTRIBUTING.md",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Nathan \ud83d\udd36 Tarbert",
          "qualifier": "has-participant"
        },
        {
          "objectId": "9293bec58ce64748dbfb3f14d3f224fd4ae0455c",
          "qualifier": "commits"
        },
        {
          "objectId": "8267f1939382c31fb5b9c8065d0b65644fa0e11b",
          "qualifier": "is-merged-with"
        },
        {
          "objectId": "9293bec58ce64748dbfb3f14d3f224fd4ae0455c",
          "qualifier": "formalises"
        }
      ],
      "id": "176"
    },
    {
      "type": "pull_request",
      "attributes": [
        {
          "name": "title",
          "value": "chore: update next.js version from 13.4.19 to 13.5.3",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "description",
          "value": "## Update Next.js version from `13.4.19` to `13.5.3`\r\n\r\nMassive local development frontend server startup time and memory improvements.\r\n\r\nSee 13.5 release notes article blog for more information: https://nextjs.org/blog/next-13-5\r\n\r\n## Related Issue\r\nN/A\r\n\r\n## Type\r\n\r\n- [ ] Bug Fix\r\n- [ ] Feature Enhancement\r\n- [ ] Documentation Update\r\n- [ ] Code Refactoring\r\n- [X] Other (please specify): Update `Next.js` dependency for full stack web app, from `13.4.19` to `13.5.3`\r\n\r\n## Proposed Changes\r\n\r\n- `package.json` - dependency updates\r\n- `package-lock.json` - lockfile of dependency and sub-dependency versions\r\n\r\n## Screenshots / Code Snippets (if applicable)\r\nN/A\r\n\r\n## How to Test\r\nInstructions on running the full stack web application is set out in the [webapp/README.md](https://github.com/srbhr/Resume-Matcher/blob/main/webapp/README.md) file \r\n\r\n## Checklist\r\n\r\n- [X] The code compiles successfully without any errors or warnings\r\n- [X] The changes have been tested and verified\r\n- [ ] The documentation has been updated (if applicable)\r\n- [X] The changes follow the project's coding guidelines and best practices\r\n- [X] The commit messages are descriptive and follow the project's guidelines\r\n- [ ] All tests (if applicable) pass successfully\r\n- [ ] This pull request has been linked to the related issue (if applicable)\r\n\r\n## Additional Information\r\nMay need to delete hidden generated folder `webapp/.next` to delete frontend cache that was built from the previous Next.js version (e.g. `13.4.19`).\r\n\r\n",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "state",
          "value": "open",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": "webapp/package-lock.json",
          "qualifier": "files"
        },
        {
          "objectId": "webapp/package.json",
          "qualifier": "files"
        },
        {
          "objectId": "Sayvai",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "webapp/package-lock.json",
          "qualifier": "aggregates"
        },
        {
          "objectId": "webapp/package.json",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Sayvai",
          "qualifier": "has-participant"
        },
        {
          "objectId": "35b639aed431b933dd1240fb32b55915beb782f6",
          "qualifier": "commits"
        },
        {
          "objectId": "f98ce0f8a8e8a9d9560560eac3ff07a5947f04ca",
          "qualifier": "is-merged-with"
        },
        {
          "objectId": "35b639aed431b933dd1240fb32b55915beb782f6",
          "qualifier": "formalises"
        }
      ],
      "id": "172"
    },
    {
      "type": "pull_request",
      "attributes": [
        {
          "name": "title",
          "value": "Create a SECURITY.md",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "description",
          "value": "## Pull Request Title\r\n<!-- Provide a concise and descriptive title for the pull request -->\r\n\r\n## Related Issue\r\n<!-- If this pull request is related to an issue, please link it here using the \"#\" symbol followed by the issue number (e.g., #123) -->\r\n\r\n## Description\r\n<!-- Describe the changes made in this pull request. What problem does it solve or what feature does it add/modify? -->\r\n\r\n## Type\r\n<!-- Check the relevant options by putting an \"x\" in the brackets -->\r\n\r\n- [ ] Bug Fix\r\n- [ ] Feature Enhancement\r\n- [x] Documentation Update\r\n- [ ] Code Refactoring\r\n- [ ] Other (please specify): \r\n\r\n## Proposed Changes\r\n<!-- List the specific changes made in this pull request -->\r\n\r\n- \r\n- \r\n- \r\n\r\n## Screenshots / Code Snippets (if applicable)\r\n<!-- Include any relevant screenshots or code snippets that help visualize the changes made -->\r\n\r\n## How to Test\r\n<!-- Provide step-by-step instructions or a checklist for testing the changes in this pull request -->\r\n\r\n1. \r\n2. \r\n3. \r\n\r\n## Checklist\r\n<!-- Put an \"x\" in the brackets for the items that apply to this pull request -->\r\n\r\n- [ ] The code compiles successfully without any errors or warnings\r\n- [ ] The changes have been tested and verified\r\n- [ ] The documentation has been updated (if applicable)\r\n- [ ] The changes follow the project's coding guidelines and best practices\r\n- [ ] The commit messages are descriptive and follow the project's guidelines\r\n- [ ] All tests (if applicable) pass successfully\r\n- [ ] This pull request has been linked to the related issue (if applicable)\r\n\r\n## Additional Information\r\n<!-- Add any other information about the pull request that you think might be helpful -->\r\n\r\n",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "state",
          "value": "open",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": "SECURITY.md",
          "qualifier": "files"
        },
        {
          "objectId": "Nathan \ud83d\udd36 Tarbert",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "SECURITY.md",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Nathan \ud83d\udd36 Tarbert",
          "qualifier": "has-participant"
        },
        {
          "objectId": "fbbeecedb0f4a56fd37ced8441e5a527a46613bc",
          "qualifier": "commits"
        },
        {
          "objectId": "5962e8194a2f43b38f4c9dd4e6994e04f5f40ef3",
          "qualifier": "is-merged-with"
        },
        {
          "objectId": "fbbeecedb0f4a56fd37ced8441e5a527a46613bc",
          "qualifier": "formalises"
        }
      ],
      "id": "171"
    },
    {
      "type": "pull_request",
      "attributes": [
        {
          "name": "title",
          "value": "chore: update readme notify webapp fake data",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "description",
          "value": "## Update README to notify that the full stack webapp currently returns mock / fake data\r\n\r\nAdd an important note to the README to notify community that the full stack web app currently returns mocked / faked data for the results (e.g. Vector Scores, Common Keyword Matches, Suggestions), and that it will be further developed out and implemented with real results in a later future release.\r\n\r\n## Related Issue\r\nN/A\r\n\r\n## Description\r\n\r\n- `README.md` - add additional important note relating to mock / fake data results returned within full stack web app.\r\n\r\n## Type\r\n\r\n- [ ] Bug Fix\r\n- [ ] Feature Enhancement\r\n- [X] Documentation Update\r\n- [ ] Code Refactoring\r\n- [ ] Other (please specify): \r\n\r\n## Proposed Changes\r\n\r\n- `README.md`\r\n\r\n## Screenshots / Code Snippets (if applicable)\r\n\r\nAnnotated screenshot highlighting the addition to the project `README.md` file.\r\n\r\n![Screenshot of Resume Matcher project README file update that notifies community of fake data results returned from full stack web app](https://github.com/srbhr/Resume-Matcher/assets/7581546/6ef5d15d-ae81-4ebd-ac07-9d00621eda7e)\r\n\r\n## How to Test\r\nN/A\r\n\r\n## Checklist\r\n\r\n- [X] The code compiles successfully without any errors or warnings\r\n- [X] The changes have been tested and verified\r\n- [X] The documentation has been updated (if applicable)\r\n- [X] The changes follow the project's coding guidelines and best practices\r\n- [X] The commit messages are descriptive and follow the project's guidelines\r\n- [ ] All tests (if applicable) pass successfully\r\n- [ ] This pull request has been linked to the related issue (if applicable)\r\n\r\n## Additional Information\r\n<!-- Add any other information about the pull request that you think might be helpful -->\r\n\r\n",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "state",
          "value": "open",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": "README.md",
          "qualifier": "files"
        },
        {
          "objectId": "webapp/README.md",
          "qualifier": "files"
        },
        {
          "objectId": "Sayvai",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "README.md",
          "qualifier": "aggregates"
        },
        {
          "objectId": "webapp/README.md",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Sayvai",
          "qualifier": "has-participant"
        },
        {
          "objectId": "8997838a9050dee48c5df8c74c4c12a857f70884",
          "qualifier": "commits"
        },
        {
          "objectId": "c4170a99450466e63ca3c3392176c37ad812a2bc",
          "qualifier": "is-merged-with"
        },
        {
          "objectId": "8997838a9050dee48c5df8c74c4c12a857f70884",
          "qualifier": "formalises"
        }
      ],
      "id": "169"
    },
    {
      "type": "pull_request",
      "attributes": [
        {
          "name": "title",
          "value": "added Docs folder, updated instructions for cohere and qdrant",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "description",
          "value": "\r\n\r\n## Pull Request Title\r\n<!-- Provide a concise and descriptive title for the pull request -->\r\n\r\n## Related Issue\r\n<!-- If this pull request is related to an issue, please link it here using the \"#\" symbol followed by the issue number (e.g., #123) -->\r\n\r\n## Description\r\n<!-- Describe the changes made in this pull request. What problem does it solve or what feature does it add/modify? -->\r\n\r\n## Type\r\n<!-- Check the relevant options by putting an \"x\" in the brackets -->\r\n\r\n- [ ] Bug Fix\r\n- [ ] Feature Enhancement\r\n- [x] Documentation Update\r\n- [ ] Code Refactoring\r\n- [ ] Other (please specify): \r\n\r\n## Proposed Changes\r\n<!-- List the specific changes made in this pull request -->\r\n\r\n- \r\n- \r\n- \r\n\r\n## Screenshots / Code Snippets (if applicable)\r\n<!-- Include any relevant screenshots or code snippets that help visualize the changes made -->\r\n\r\n## How to Test\r\n<!-- Provide step-by-step instructions or a checklist for testing the changes in this pull request -->\r\n\r\n1. \r\n2. \r\n3. \r\n\r\n## Checklist\r\n<!-- Put an \"x\" in the brackets for the items that apply to this pull request -->\r\n\r\n- [ ] The code compiles successfully without any errors or warnings\r\n- [ ] The changes have been tested and verified\r\n- [x] The documentation has been updated (if applicable)\r\n- [ ] The changes follow the project's coding guidelines and best practices\r\n- [ ] The commit messages are descriptive and follow the project's guidelines\r\n- [ ] All tests (if applicable) pass successfully\r\n- [ ] This pull request has been linked to the related issue (if applicable)\r\n\r\n## Additional Information\r\n<!-- Add any other information about the pull request that you think might be helpful -->\r\n\r\n",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "state",
          "value": "open",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": "Docs/LICENSE",
          "qualifier": "files"
        },
        {
          "objectId": "Docs/README.md",
          "qualifier": "files"
        },
        {
          "objectId": "Hiren Thakore",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "Docs/LICENSE",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Docs/README.md",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Hiren Thakore",
          "qualifier": "has-participant"
        },
        {
          "objectId": "31bbcb18e014cb58ba594793fe8265c8ce248819",
          "qualifier": "commits"
        },
        {
          "objectId": "0b3dbd450dc20162bf5f259c20a783b02f993614",
          "qualifier": "is-merged-with"
        },
        {
          "objectId": "31bbcb18e014cb58ba594793fe8265c8ce248819",
          "qualifier": "formalises"
        }
      ],
      "id": "168"
    },
    {
      "type": "pull_request",
      "attributes": [
        {
          "name": "title",
          "value": "added dropdown menu to select resume instead of slider",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "description",
          "value": "## Pull Request Title\r\nAdded Dropdown Menu for Resume and Job Description Selection\r\n\r\n## Description\r\nThis pull request introduces a dropdown menu for selecting resumes and job descriptions, replacing the previous slider-based selection method. This change enhances user experience and provides a more user-friendly way to choose both resumes and job descriptions.\r\n\r\n## Type\r\n<!-- Check the relevant options by putting an \"x\" in the brackets -->\r\n\r\n- [x] Bug Fix\r\n- [x] Feature Enhancement\r\n- [ ] Documentation Update\r\n- [x] Code Refactoring\r\n- [ ] Other (please specify): \r\n\r\n## Proposed Changes\r\n<!-- List the specific changes made in this pull request -->\r\n\r\n- Replaced the slider with a dropdown menu for selecting resumes.\r\n- Implemented a dropdown menu for selecting job descriptions.\r\n\r\n## Screenshots / Code Snippets (if applicable)\r\n<!-- Include any relevant screenshots or code snippets that help visualize the changes made -->\r\n![image](https://github.com/srbhr/Resume-Matcher/assets/110348311/88db72b3-d243-4d32-9f50-424633ba9c24)\r\n![image](https://github.com/srbhr/Resume-Matcher/assets/110348311/0dc62659-0b5c-4b89-9969-9af2aa64debb)\r\n\r\n\r\n## How to Test\r\n<!-- Provide step-by-step instructions or a checklist for testing the changes in this pull request -->\r\n\r\n1. Open the application.\r\n2. Navigate to the resume selection section.\r\n3. Verify that a dropdown menu is available for selecting resumes, where number of resumes are greater than 1.\r\n4. Repeat the same steps for job description selection.\r\n\r\n## Checklist\r\n<!-- Put an \"x\" in the brackets for the items that apply to this pull request -->\r\n\r\n- [x] The code compiles successfully without any errors or warnings\r\n- [x] The changes have been tested and verified\r\n- [ ] The documentation has been updated (if applicable)\r\n- [x] The changes follow the project's coding guidelines and best practices\r\n- [x] The commit messages are descriptive and follow the project's guidelines\r\n- [ ] All tests (if applicable) pass successfully\r\n- [x] This pull request has been linked to the related issue (if applicable)\r\n\r\n",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "state",
          "value": "open",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": "streamlit_app.py",
          "qualifier": "files"
        },
        {
          "objectId": "streamlit_second.py",
          "qualifier": "files"
        },
        {
          "objectId": "Devasy Patel",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "streamlit_app.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "streamlit_second.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Devasy Patel",
          "qualifier": "has-participant"
        },
        {
          "objectId": "b61e88cb92583200f2f2d73f110fb73bf1fde5a6",
          "qualifier": "commits"
        },
        {
          "objectId": "ac860942fc9e2a321ecb5f322d70a55a49df0e54",
          "qualifier": "commits"
        },
        {
          "objectId": "dc93bab65c6fb3da9cb4233739c60fe2c8e82e85",
          "qualifier": "commits"
        },
        {
          "objectId": "df5df2c98594d14d2ecaeba01f2c6988443a2975",
          "qualifier": "commits"
        },
        {
          "objectId": "4cf0547b80bf40240de45a54dd85ecb941ccb165",
          "qualifier": "commits"
        },
        {
          "objectId": "362b83c002bfac8b789e2f82d5a6b27853f08209",
          "qualifier": "is-merged-with"
        },
        {
          "objectId": "b61e88cb92583200f2f2d73f110fb73bf1fde5a6",
          "qualifier": "formalises"
        },
        {
          "objectId": "ac860942fc9e2a321ecb5f322d70a55a49df0e54",
          "qualifier": "formalises"
        },
        {
          "objectId": "dc93bab65c6fb3da9cb4233739c60fe2c8e82e85",
          "qualifier": "formalises"
        },
        {
          "objectId": "df5df2c98594d14d2ecaeba01f2c6988443a2975",
          "qualifier": "formalises"
        },
        {
          "objectId": "4cf0547b80bf40240de45a54dd85ecb941ccb165",
          "qualifier": "formalises"
        }
      ],
      "id": "167"
    },
    {
      "type": "pull_request",
      "attributes": [
        {
          "name": "title",
          "value": "added header_image.jpg to avoid FileNotFound error",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "description",
          "value": "## Pull Request Title\r\n<!-- Provide a concise and descriptive title for the pull request -->\r\n\r\n## Related Issue\r\n<!-- If this pull request is related to an issue, please link it here using the \"#\" symbol followed by the issue number (e.g., #123) -->\r\n\r\n## Description\r\n<!-- Describe the changes made in this pull request. What problem does it solve or what feature does it add/modify? -->\r\n\r\n## Type\r\n<!-- Check the relevant options by putting an \"x\" in the brackets -->\r\n\r\n- [ ] Bug Fix\r\n- [ ] Feature Enhancement\r\n- [ ] Documentation Update\r\n- [ ] Code Refactoring\r\n- [ ] Other (please specify): \r\n\r\n## Proposed Changes\r\n<!-- List the specific changes made in this pull request -->\r\n\r\n- \r\n- \r\n- \r\n\r\n## Screenshots / Code Snippets (if applicable)\r\n<!-- Include any relevant screenshots or code snippets that help visualize the changes made -->\r\n\r\n## How to Test\r\n<!-- Provide step-by-step instructions or a checklist for testing the changes in this pull request -->\r\n\r\n1. \r\n2. \r\n3. \r\n\r\n## Checklist\r\n<!-- Put an \"x\" in the brackets for the items that apply to this pull request -->\r\n\r\n- [ ] The code compiles successfully without any errors or warnings\r\n- [ ] The changes have been tested and verified\r\n- [ ] The documentation has been updated (if applicable)\r\n- [ ] The changes follow the project's coding guidelines and best practices\r\n- [ ] The commit messages are descriptive and follow the project's guidelines\r\n- [ ] All tests (if applicable) pass successfully\r\n- [ ] This pull request has been linked to the related issue (if applicable)\r\n\r\n## Additional Information\r\n<!-- Add any other information about the pull request that you think might be helpful -->\r\n\r\n",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "state",
          "value": "open",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": "Assets/img/header_image.jpg",
          "qualifier": "files"
        },
        {
          "objectId": "Hiren Thakore",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "Assets/img/header_image.jpg",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Hiren Thakore",
          "qualifier": "has-participant"
        },
        {
          "objectId": "67d877cd7307d17605218bdb8b2cb2495db2155c",
          "qualifier": "commits"
        },
        {
          "objectId": "3c5377a87035f00592b6c617613719e1230b7726",
          "qualifier": "commits"
        },
        {
          "objectId": "2099d5622f505c6ce69cdf6b7436e6d2eb12fd70",
          "qualifier": "commits"
        },
        {
          "objectId": "b97f05abc59da28c24e456fbdb5b947e9d8e6cef",
          "qualifier": "is-merged-with"
        },
        {
          "objectId": "67d877cd7307d17605218bdb8b2cb2495db2155c",
          "qualifier": "formalises"
        },
        {
          "objectId": "3c5377a87035f00592b6c617613719e1230b7726",
          "qualifier": "formalises"
        },
        {
          "objectId": "2099d5622f505c6ce69cdf6b7436e6d2eb12fd70",
          "qualifier": "formalises"
        }
      ],
      "id": "164"
    },
    {
      "type": "pull_request",
      "attributes": [
        {
          "name": "title",
          "value": "Updated the readme with issues link. ",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "description",
          "value": "None",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "state",
          "value": "open",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": "README.md",
          "qualifier": "files"
        },
        {
          "objectId": "Saurabh Rai",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "README.md",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Saurabh Rai",
          "qualifier": "has-participant"
        },
        {
          "objectId": "0ae12874c16096502757948afe68dd073093b58b",
          "qualifier": "commits"
        },
        {
          "objectId": "faeeac10f0882af8cd5274cf8a7dd800640eb4cb",
          "qualifier": "is-merged-with"
        },
        {
          "objectId": "0ae12874c16096502757948afe68dd073093b58b",
          "qualifier": "formalises"
        }
      ],
      "id": "163"
    },
    {
      "type": "pull_request",
      "attributes": [
        {
          "name": "title",
          "value": "Updated the Readme file for HF and Bullets",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "description",
          "value": "None",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "state",
          "value": "open",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": "Assets/img/Hacktoberfest_banner.png",
          "qualifier": "files"
        },
        {
          "objectId": "README.md",
          "qualifier": "files"
        },
        {
          "objectId": "Saurabh Rai",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "Assets/img/Hacktoberfest_banner.png",
          "qualifier": "aggregates"
        },
        {
          "objectId": "README.md",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Saurabh Rai",
          "qualifier": "has-participant"
        },
        {
          "objectId": "dfbb49502332962f54265b5a9ecbb5598ce1d240",
          "qualifier": "commits"
        },
        {
          "objectId": "dc77d86f98c41090ad3af0f5e8316c78581e794e",
          "qualifier": "is-merged-with"
        },
        {
          "objectId": "dfbb49502332962f54265b5a9ecbb5598ce1d240",
          "qualifier": "formalises"
        }
      ],
      "id": "160"
    },
    {
      "type": "pull_request",
      "attributes": [
        {
          "name": "title",
          "value": "Updated the readme",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "description",
          "value": "None",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "state",
          "value": "open",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": "Assets/img/header_image.png",
          "qualifier": "files"
        },
        {
          "objectId": "Assets/img/quadrant_cloud.png",
          "qualifier": "files"
        },
        {
          "objectId": "README.md",
          "qualifier": "files"
        },
        {
          "objectId": "streamlit_app.py",
          "qualifier": "files"
        },
        {
          "objectId": "streamlit_second.py",
          "qualifier": "files"
        },
        {
          "objectId": "Saurabh Rai",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "Assets/img/header_image.png",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Assets/img/quadrant_cloud.png",
          "qualifier": "aggregates"
        },
        {
          "objectId": "README.md",
          "qualifier": "aggregates"
        },
        {
          "objectId": "streamlit_app.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "streamlit_second.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Saurabh Rai",
          "qualifier": "has-participant"
        },
        {
          "objectId": "1ddb88222ea30d4e4d01f99f4df810c8a7db26d3",
          "qualifier": "commits"
        },
        {
          "objectId": "181a444d1aa0611f9e33f8b5e07a52a9202eac30",
          "qualifier": "is-merged-with"
        },
        {
          "objectId": "1ddb88222ea30d4e4d01f99f4df810c8a7db26d3",
          "qualifier": "formalises"
        }
      ],
      "id": "159"
    },
    {
      "type": "pull_request",
      "attributes": [
        {
          "name": "title",
          "value": "added header_image.jpg file in assets/img",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "description",
          "value": "\u2026und issue while running\r\n\r\n## Pull Request Title\r\n<!-- Provide a concise and descriptive title for the pull request -->\r\n\r\n## Related Issue\r\n<!-- If this pull request is related to an issue, please link it here using the \"#\" symbol followed by the issue number (e.g., #123) -->\r\n\r\n## Description\r\n<!-- Describe the changes made in this pull request. What problem does it solve or what feature does it add/modify? -->\r\n\r\n## Type\r\n<!-- Check the relevant options by putting an \"x\" in the brackets -->\r\n\r\n- [ ] Bug Fix\r\n- [ ] Feature Enhancement\r\n- [ ] Documentation Update\r\n- [ ] Code Refactoring\r\n- [ ] Other (please specify): \r\n\r\n## Proposed Changes\r\n<!-- List the specific changes made in this pull request -->\r\n\r\n- \r\n- \r\n- \r\n\r\n## Screenshots / Code Snippets (if applicable)\r\n<!-- Include any relevant screenshots or code snippets that help visualize the changes made -->\r\n\r\n## How to Test\r\n<!-- Provide step-by-step instructions or a checklist for testing the changes in this pull request -->\r\n\r\n1. \r\n2. \r\n3. \r\n\r\n## Checklist\r\n<!-- Put an \"x\" in the brackets for the items that apply to this pull request -->\r\n\r\n- [ ] The code compiles successfully without any errors or warnings\r\n- [ ] The changes have been tested and verified\r\n- [ ] The documentation has been updated (if applicable)\r\n- [ ] The changes follow the project's coding guidelines and best practices\r\n- [ ] The commit messages are descriptive and follow the project's guidelines\r\n- [ ] All tests (if applicable) pass successfully\r\n- [ ] This pull request has been linked to the related issue (if applicable)\r\n\r\n## Additional Information\r\n<!-- Add any other information about the pull request that you think might be helpful -->\r\n\r\n",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "state",
          "value": "open",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": "Assets/img/header_image.jpg",
          "qualifier": "files"
        },
        {
          "objectId": "Data/Processed/JobDescription/JobDescription-job_desc_front_end_engineer.pdf9e508eff-a083-4e2d-8b1e-577cbc8f50fc.json",
          "qualifier": "files"
        },
        {
          "objectId": "Data/Processed/JobDescription/JobDescription-job_desc_full_stack_engineer.pdfcccf72e0-5f20-4aa8-8679-d91b720b7247.json",
          "qualifier": "files"
        },
        {
          "objectId": "Data/Processed/JobDescription/JobDescription-job_desc_java_developer.pdf1fb6435c-531a-4f04-84c2-c4e73e1f1a3f.json",
          "qualifier": "files"
        },
        {
          "objectId": "Data/Processed/JobDescription/JobDescription-job_desc_product_manager.pdf0b613898-1183-49c5-ad07-e03bd9af72e5.json",
          "qualifier": "files"
        },
        {
          "objectId": "Data/Processed/Resumes/Resume-alfred_pennyworth_pm.pdfb36fac00-1d60-49ba-a9e4-33477c928e98.json",
          "qualifier": "files"
        },
        {
          "objectId": "Data/Processed/Resumes/Resume-barry_allen_fe.pdfbef9d9b1-fa14-4aa0-8111-6033cceacb5a.json",
          "qualifier": "files"
        },
        {
          "objectId": "Data/Processed/Resumes/Resume-bruce_wayne_fullstack.pdf04c228e3-04a4-4970-a149-a3cffc92aee8.json",
          "qualifier": "files"
        },
        {
          "objectId": "Data/Processed/Resumes/Resume-harvey_dent_mle.pdf5dde9183-5af4-4107-91e1-7b2d66fec490.json",
          "qualifier": "files"
        },
        {
          "objectId": "Data/Processed/Resumes/Resume-john_doe.pdf817fb796-14b9-4819-a224-7eed66b3ce04.json",
          "qualifier": "files"
        },
        {
          "objectId": "Hiren Thakore",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "Assets/img/header_image.jpg",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Processed/JobDescription/JobDescription-job_desc_front_end_engineer.pdf9e508eff-a083-4e2d-8b1e-577cbc8f50fc.json",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Processed/JobDescription/JobDescription-job_desc_full_stack_engineer.pdfcccf72e0-5f20-4aa8-8679-d91b720b7247.json",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Processed/JobDescription/JobDescription-job_desc_java_developer.pdf1fb6435c-531a-4f04-84c2-c4e73e1f1a3f.json",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Processed/JobDescription/JobDescription-job_desc_product_manager.pdf0b613898-1183-49c5-ad07-e03bd9af72e5.json",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Processed/Resumes/Resume-alfred_pennyworth_pm.pdfb36fac00-1d60-49ba-a9e4-33477c928e98.json",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Processed/Resumes/Resume-barry_allen_fe.pdfbef9d9b1-fa14-4aa0-8111-6033cceacb5a.json",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Processed/Resumes/Resume-bruce_wayne_fullstack.pdf04c228e3-04a4-4970-a149-a3cffc92aee8.json",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Processed/Resumes/Resume-harvey_dent_mle.pdf5dde9183-5af4-4107-91e1-7b2d66fec490.json",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Processed/Resumes/Resume-john_doe.pdf817fb796-14b9-4819-a224-7eed66b3ce04.json",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Hiren Thakore",
          "qualifier": "has-participant"
        },
        {
          "objectId": "67d877cd7307d17605218bdb8b2cb2495db2155c",
          "qualifier": "commits"
        },
        {
          "objectId": "42d6e05ee7f5559e4dffb22fc7e56083939bc010",
          "qualifier": "is-merged-with"
        },
        {
          "objectId": "67d877cd7307d17605218bdb8b2cb2495db2155c",
          "qualifier": "formalises"
        }
      ],
      "id": "158"
    },
    {
      "type": "pull_request",
      "attributes": [
        {
          "name": "title",
          "value": "Updated the readme with GIF",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "description",
          "value": "## Pull Request Title\r\n<!-- Provide a concise and descriptive title for the pull request -->\r\nUpdated the Readme with GIF of Demo. \r\n## Related Issue\r\n<!-- If this pull request is related to an issue, please link it here using the \"#\" symbol followed by the issue number (e.g., #123) -->\r\n\r\n## Description\r\n<!-- Describe the changes made in this pull request. What problem does it solve or what feature does it add/modify? -->\r\nGIF of Demo added. \r\n\r\n## Type\r\n<!-- Check the relevant options by putting an \"x\" in the brackets -->\r\n\r\n- [ ] Bug Fix\r\n- [x] Feature Enhancement\r\n- [x] Documentation Update\r\n- [ ] Code Refactoring\r\n- [ ] Other (please specify): \r\n\r\n## Proposed Changes\r\n<!-- List the specific changes made in this pull request -->\r\n\r\n- Updated the banner\r\n- GIF Demo Added\r\n- \r\n\r\n## Screenshots / Code Snippets (if applicable)\r\n<!-- Include any relevant screenshots or code snippets that help visualize the changes made -->\r\n\r\n## How to Test\r\n<!-- Provide step-by-step instructions or a checklist for testing the changes in this pull request -->\r\n\r\n1. \r\n2. \r\n3. \r\n\r\n## Checklist\r\n<!-- Put an \"x\" in the brackets for the items that apply to this pull request -->\r\n\r\n- [ ] The code compiles successfully without any errors or warnings\r\n- [ ] The changes have been tested and verified\r\n- [ ] The documentation has been updated (if applicable)\r\n- [ ] The changes follow the project's coding guidelines and best practices\r\n- [ ] The commit messages are descriptive and follow the project's guidelines\r\n- [ ] All tests (if applicable) pass successfully\r\n- [ ] This pull request has been linked to the related issue (if applicable)\r\n\r\n## Additional Information\r\n<!-- Add any other information about the pull request that you think might be helpful -->\r\n\r\n",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "state",
          "value": "open",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": "Assets/img/Resume_Matcher_Gif.gif",
          "qualifier": "files"
        },
        {
          "objectId": "Assets/img/backend_fastapi_demo.gif",
          "qualifier": "files"
        },
        {
          "objectId": "Assets/img/banner.png",
          "qualifier": "files"
        },
        {
          "objectId": "Assets/img/header.png",
          "qualifier": "files"
        },
        {
          "objectId": "Assets/img/header_image.jpg",
          "qualifier": "files"
        },
        {
          "objectId": "Assets/img/webapp_demo.gif",
          "qualifier": "files"
        },
        {
          "objectId": "README.md",
          "qualifier": "files"
        },
        {
          "objectId": "Saurabh Rai",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "Assets/img/Resume_Matcher_Gif.gif",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Assets/img/backend_fastapi_demo.gif",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Assets/img/banner.png",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Assets/img/header.png",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Assets/img/header_image.jpg",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Assets/img/webapp_demo.gif",
          "qualifier": "aggregates"
        },
        {
          "objectId": "README.md",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Saurabh Rai",
          "qualifier": "has-participant"
        },
        {
          "objectId": "f99c08e2c4aa1dab18069b49549672957e02ec64",
          "qualifier": "commits"
        },
        {
          "objectId": "e311a3af4135c172f57e937eea9437aaf4455798",
          "qualifier": "is-merged-with"
        },
        {
          "objectId": "f99c08e2c4aa1dab18069b49549672957e02ec64",
          "qualifier": "formalises"
        }
      ],
      "id": "157"
    },
    {
      "type": "pull_request",
      "attributes": [
        {
          "name": "title",
          "value": "fix: webapp - wsl shell source not found",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "description",
          "value": "## fix: webapp - WSL Ubuntu shell `source` not found\r\n\r\nA bug was found (see GitHub Issue #153), where when a user attempting to run the `npm run dev` or `npm run fastapi-dev` commands from within a (Windows) WSL Ubunutu Shell window, encounters the following error, which prevents the backend FastAPI server from running:\r\n\r\n`sh: 1: source: not found`\r\n\r\nGiven it appears that `source` is a command built-in and runnable on Bash and ZSH terminal environments, it is not available to use within the WSL Ubuntu shell by default.\r\n\r\nTo fix this, a more universal substitute can be used in place of `source`, which is the period `.`, which performs the same function in Bash, ZSH, and WSL Ubunutu terminal / shell environments.\r\n\r\nThis commit also includes minor `webapp/README.md` updates to reformat lists to numbered lists for both the `Setup` and `Debugging` sections for improved clarity.\r\n\r\n## Related Issue\r\n- #153\r\n\r\n## Description\r\n\r\n- Updated `webapp/package.json` file to run source commands with the period. Replacing `source` with `.`.\r\n- Updated `webapp/README.md` to apply minor reformatting changes to lists on both the `Setup` and `Debugging` sections.\r\n\r\n## Type\r\n<!-- Check the relevant options by putting an \"x\" in the brackets -->\r\n\r\n- [X] Bug Fix\r\n- [ ] Feature Enhancement\r\n- [X] Documentation Update\r\n- [ ] Code Refactoring\r\n- [ ] Other (please specify): \r\n\r\n## Proposed Changes\r\n\r\n- `webapp/package.json`\r\n- `webapp/README.md`\r\n\r\n## Screenshots / Code Snippets (if applicable)\r\nN/A\r\n\r\n## How to Test\r\nN/A\r\n\r\n## Checklist\r\n\r\n- [X] The code compiles successfully without any errors or warnings\r\n- [ ] The changes have been tested and verified\r\n- [X] The documentation has been updated (if applicable)\r\n- [X] The changes follow the project's coding guidelines and best practices\r\n- [X] The commit messages are descriptive and follow the project's guidelines\r\n- [ ] All tests (if applicable) pass successfully\r\n- [ X This pull request has been linked to the related issue (if applicable)\r\n\r\n## Additional Information\r\nN/A\r\n\r\n",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "state",
          "value": "open",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": "webapp/README.md",
          "qualifier": "files"
        },
        {
          "objectId": "webapp/package.json",
          "qualifier": "files"
        },
        {
          "objectId": "Sayvai",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "webapp/README.md",
          "qualifier": "aggregates"
        },
        {
          "objectId": "webapp/package.json",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Sayvai",
          "qualifier": "has-participant"
        },
        {
          "objectId": "ad9d209255526e65bf0d3a7cde39acd33f4ad439",
          "qualifier": "commits"
        },
        {
          "objectId": "e49b3e64ce98cec00b4b632d85ad78af3814f7bc",
          "qualifier": "is-merged-with"
        },
        {
          "objectId": "ad9d209255526e65bf0d3a7cde39acd33f4ad439",
          "qualifier": "formalises"
        }
      ],
      "id": "155"
    },
    {
      "type": "pull_request",
      "attributes": [
        {
          "name": "title",
          "value": "chore: add gif files of webapp ui demo and debugging",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "description",
          "value": "## Add GIF files of webapp UI demo and debugging demo to Assets directory\r\n\r\nAdd two gif files which demo a couple of aspects of the full stack Next.js and FastAPI webapp.\r\n\r\n- `Resume-Matcher-Web-App-UI-Quick-Demo.gif`: Demonstration of the basic initial functionality of the webapp ui of uploading a CV, along with job links and descriptions. And then backend responds with some mock data (for now, and to be properly implemented and hooked up with existing Python scripts)\r\n\r\n- `Resume-Matcher-vs-code-debug-backend-fastapi-demo.gif`: Demonstration of how to debug the Python FastAPI implementation using the VS Code Debugger mode.\r\n\r\n## Related Issue\r\nN/A\r\n\r\n## Description\r\nAdd two GIF files to the `Assets/img` directory (see description for more details)\r\n\r\n## Type\r\n<!-- Check the relevant options by putting an \"x\" in the brackets -->\r\n\r\n- [ ] Bug Fix\r\n- [ ] Feature Enhancement\r\n- [X] Documentation Update\r\n- [ ] Code Refactoring\r\n- [ ] Other (please specify): \r\n\r\n## Proposed Changes\r\n<!-- List the specific changes made in this pull request -->\r\n\r\n- `Assets/img/Resume-Matcher-Web-App-UI-Quick-Demo.gif`\r\n- `Assets/img/Resume-Matcher-vs-code-debug-backend-fastapi-demo.gif`\r\n\r\n## Screenshots / Code Snippets (if applicable)\r\nGIF demonstration of webapp UI (`Resume-Matcher-Web-App-UI-Quick-Demo.gif`):\r\n![Resume Matcher Web App UI Quick Demo](https://github.com/Sayvai/react-project-dashboard-mvp-match/assets/7581546/5bf9c4c8-a5d1-47ee-8e27-eacda0dbcac9)\r\n\r\nGIF demonstration of how to debug FastAPI source code implementation (`Resume-Matcher-vs-code-debug-backend-fastapi-demo.gif`):\r\n![Resume Matcher - Demo of how to debug VS Code Backend FastAPI backend implementation](https://github.com/srbhr/Resume-Matcher/assets/7581546/04b3b8e2-98c4-40ff-964f-8075c55091c9)\r\n\r\n## How to Test\r\nN/A\r\n\r\n## Checklist\r\n<!-- Put an \"x\" in the brackets for the items that apply to this pull request -->\r\n\r\n- [X] The code compiles successfully without any errors or warnings\r\n- [X] The changes have been tested and verified\r\n- [X] The documentation has been updated (if applicable)\r\n- [X] The changes follow the project's coding guidelines and best practices\r\n- [X] The commit messages are descriptive and follow the project's guidelines\r\n- [ ] All tests (if applicable) pass successfully\r\n- [ ] This pull request has been linked to the related issue (if applicable)\r\n\r\n## Additional Information\r\nN/A\r\n\r\n",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "state",
          "value": "open",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": "Assets/img/Resume-Matcher-Web-App-UI-Quick-Demo.gif",
          "qualifier": "files"
        },
        {
          "objectId": "Assets/img/Resume-Matcher-vs-code-debug-backend-fastapi-demo.gif",
          "qualifier": "files"
        },
        {
          "objectId": "Sayvai",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "Assets/img/Resume-Matcher-Web-App-UI-Quick-Demo.gif",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Assets/img/Resume-Matcher-vs-code-debug-backend-fastapi-demo.gif",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Sayvai",
          "qualifier": "has-participant"
        },
        {
          "objectId": "b43e55f1f9c06402865eced8cca9fb67e7b6f315",
          "qualifier": "commits"
        },
        {
          "objectId": "ebf6983541c31ad1d04f981645840ae85f705d45",
          "qualifier": "is-merged-with"
        },
        {
          "objectId": "b43e55f1f9c06402865eced8cca9fb67e7b6f315",
          "qualifier": "formalises"
        }
      ],
      "id": "154"
    },
    {
      "type": "pull_request",
      "attributes": [
        {
          "name": "title",
          "value": "Update issue templates",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "description",
          "value": "None",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "state",
          "value": "open",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": ".github/ISSUE_TEMPLATE/bug_report.md",
          "qualifier": "files"
        },
        {
          "objectId": ".github/ISSUE_TEMPLATE/custom.md",
          "qualifier": "files"
        },
        {
          "objectId": ".github/ISSUE_TEMPLATE/feature_request.md",
          "qualifier": "files"
        },
        {
          "objectId": "Saurabh Rai",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": ".github/ISSUE_TEMPLATE/bug_report.md",
          "qualifier": "aggregates"
        },
        {
          "objectId": ".github/ISSUE_TEMPLATE/custom.md",
          "qualifier": "aggregates"
        },
        {
          "objectId": ".github/ISSUE_TEMPLATE/feature_request.md",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Saurabh Rai",
          "qualifier": "has-participant"
        },
        {
          "objectId": "6453c7dfad6b376e523a548f07f55d35d2f88045",
          "qualifier": "commits"
        },
        {
          "objectId": "023e1e672d971a6ff8d9bab660e5be5fdcb9c512",
          "qualifier": "is-merged-with"
        },
        {
          "objectId": "6453c7dfad6b376e523a548f07f55d35d2f88045",
          "qualifier": "formalises"
        }
      ],
      "id": "151"
    },
    {
      "type": "pull_request",
      "attributes": [
        {
          "name": "title",
          "value": "NextJS Fullstack Webapp",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "description",
          "value": "## Pull Request Title\r\n<!-- Provide a concise and descriptive title for the pull request -->\r\n\r\nAdds in a Fullstack web app for resume matcher. \r\nStack:\r\n- NextJS\r\n- FastAPI\r\n\r\n## Related Issue\r\n<!-- If this pull request is related to an issue, please link it here using the \"#\" symbol followed by the issue number (e.g., #123) -->\r\n\r\n## Description\r\n<!-- Describe the changes made in this pull request. What problem does it solve or what feature does it add/modify? -->\r\nThis feature adds in an \r\n## Type\r\n<!-- Check the relevant options by putting an \"x\" in the brackets -->\r\n\r\n- [ ] Bug Fix\r\n- [x] Feature Enhancement\r\n- [ ] Documentation Update\r\n- [ ] Code Refactoring\r\n- [ ] Other (please specify): \r\n\r\n## Proposed Changes\r\n<!-- List the specific changes made in this pull request -->\r\n\r\n- Full Stack Webapp\r\n- \r\n- \r\n\r\n## Screenshots / Code Snippets (if applicable)\r\n<!-- Include any relevant screenshots or code snippets that help visualize the changes made -->\r\nNone\r\n\r\n## Checklist\r\n<!-- Put an \"x\" in the brackets for the items that apply to this pull request -->\r\n\r\n- [x] The code compiles successfully without any errors or warnings\r\n- [x] The changes have been tested and verified\r\n- [ ] The documentation has been updated (if applicable)\r\n- [ ] The changes follow the project's coding guidelines and best practices\r\n- [ ] The commit messages are descriptive and follow the project's guidelines\r\n- [ ] All tests (if applicable) pass successfully\r\n- [ ] This pull request has been linked to the related issue (if applicable)\r\n\r\n## Additional Information\r\n<!-- Add any other information about the pull request that you think might be helpful -->\r\n\r\n",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "state",
          "value": "open",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": ".gitignore",
          "qualifier": "files"
        },
        {
          "objectId": "README.md",
          "qualifier": "files"
        },
        {
          "objectId": "requirements.txt",
          "qualifier": "files"
        },
        {
          "objectId": "webapp/.eslintrc.json",
          "qualifier": "files"
        },
        {
          "objectId": "webapp/.gitignore",
          "qualifier": "files"
        },
        {
          "objectId": "webapp/README.md",
          "qualifier": "files"
        },
        {
          "objectId": "webapp/app/(routes)/layout.tsx",
          "qualifier": "files"
        },
        {
          "objectId": "webapp/app/(routes)/page.tsx",
          "qualifier": "files"
        },
        {
          "objectId": "webapp/app/_components/button/button.tsx",
          "qualifier": "files"
        },
        {
          "objectId": "webapp/app/_components/common-words/common-words.tsx",
          "qualifier": "files"
        },
        {
          "objectId": "webapp/app/_components/header/header.tsx",
          "qualifier": "files"
        },
        {
          "objectId": "webapp/app/_components/hero/hero.tsx",
          "qualifier": "files"
        },
        {
          "objectId": "webapp/app/_components/job-descriptions/add-jobs/add-jobs.tsx",
          "qualifier": "files"
        },
        {
          "objectId": "webapp/app/_components/job-descriptions/job-descriptions.tsx",
          "qualifier": "files"
        },
        {
          "objectId": "webapp/app/_components/processing-error/processing-error.tsx",
          "qualifier": "files"
        },
        {
          "objectId": "webapp/app/_components/resume/file-upload/file-upload.tsx",
          "qualifier": "files"
        },
        {
          "objectId": "webapp/app/_components/resume/pdf-viewer/pdf-viewer.tsx",
          "qualifier": "files"
        },
        {
          "objectId": "webapp/app/_components/resume/resume-glance/resume-glance.tsx",
          "qualifier": "files"
        },
        {
          "objectId": "webapp/app/_components/suggestions/suggestions.tsx",
          "qualifier": "files"
        },
        {
          "objectId": "webapp/app/_components/third-party-services/reducer.ts",
          "qualifier": "files"
        },
        {
          "objectId": "webapp/app/_components/third-party-services/saved-keys.tsx",
          "qualifier": "files"
        },
        {
          "objectId": "webapp/app/_components/third-party-services/third-party-services.tsx",
          "qualifier": "files"
        },
        {
          "objectId": "webapp/app/_components/vector-scores/vector-scores.tsx",
          "qualifier": "files"
        },
        {
          "objectId": "webapp/app/_stores/useGlobalStore.ts",
          "qualifier": "files"
        },
        {
          "objectId": "webapp/app/_types/job-descriptions.ts",
          "qualifier": "files"
        },
        {
          "objectId": "webapp/app/_types/resume-processor.ts",
          "qualifier": "files"
        },
        {
          "objectId": "webapp/app/_types/service-keys.ts",
          "qualifier": "files"
        },
        {
          "objectId": "webapp/app/_utils/environment.ts",
          "qualifier": "files"
        },
        {
          "objectId": "webapp/app/_utils/error.ts",
          "qualifier": "files"
        },
        {
          "objectId": "webapp/app/globals.css",
          "qualifier": "files"
        },
        {
          "objectId": "Saurabh Rai",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": ".gitignore",
          "qualifier": "aggregates"
        },
        {
          "objectId": "README.md",
          "qualifier": "aggregates"
        },
        {
          "objectId": "requirements.txt",
          "qualifier": "aggregates"
        },
        {
          "objectId": "webapp/.eslintrc.json",
          "qualifier": "aggregates"
        },
        {
          "objectId": "webapp/.gitignore",
          "qualifier": "aggregates"
        },
        {
          "objectId": "webapp/README.md",
          "qualifier": "aggregates"
        },
        {
          "objectId": "webapp/app/(routes)/layout.tsx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "webapp/app/(routes)/page.tsx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "webapp/app/_components/button/button.tsx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "webapp/app/_components/common-words/common-words.tsx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "webapp/app/_components/header/header.tsx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "webapp/app/_components/hero/hero.tsx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "webapp/app/_components/job-descriptions/add-jobs/add-jobs.tsx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "webapp/app/_components/job-descriptions/job-descriptions.tsx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "webapp/app/_components/processing-error/processing-error.tsx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "webapp/app/_components/resume/file-upload/file-upload.tsx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "webapp/app/_components/resume/pdf-viewer/pdf-viewer.tsx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "webapp/app/_components/resume/resume-glance/resume-glance.tsx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "webapp/app/_components/suggestions/suggestions.tsx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "webapp/app/_components/third-party-services/reducer.ts",
          "qualifier": "aggregates"
        },
        {
          "objectId": "webapp/app/_components/third-party-services/saved-keys.tsx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "webapp/app/_components/third-party-services/third-party-services.tsx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "webapp/app/_components/vector-scores/vector-scores.tsx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "webapp/app/_stores/useGlobalStore.ts",
          "qualifier": "aggregates"
        },
        {
          "objectId": "webapp/app/_types/job-descriptions.ts",
          "qualifier": "aggregates"
        },
        {
          "objectId": "webapp/app/_types/resume-processor.ts",
          "qualifier": "aggregates"
        },
        {
          "objectId": "webapp/app/_types/service-keys.ts",
          "qualifier": "aggregates"
        },
        {
          "objectId": "webapp/app/_utils/environment.ts",
          "qualifier": "aggregates"
        },
        {
          "objectId": "webapp/app/_utils/error.ts",
          "qualifier": "aggregates"
        },
        {
          "objectId": "webapp/app/globals.css",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Saurabh Rai",
          "qualifier": "has-participant"
        },
        {
          "objectId": "cad7f88c5a1d7f0b39b4db13c2b4cd27bb5b4146",
          "qualifier": "commits"
        },
        {
          "objectId": "f01e30d04a62cc4075cfa97f55e9eb48f9f11c69",
          "qualifier": "commits"
        },
        {
          "objectId": "ceffc6efcf6392b1b9b1729cc336f0ab42134ebd",
          "qualifier": "commits"
        },
        {
          "objectId": "8e1d64883bc6a6c54c835bbc4963c95bec344fe7",
          "qualifier": "commits"
        },
        {
          "objectId": "2b9cb6a5570e4c8d5165281595be78f470b3e3f3",
          "qualifier": "is-merged-with"
        },
        {
          "objectId": "cad7f88c5a1d7f0b39b4db13c2b4cd27bb5b4146",
          "qualifier": "formalises"
        },
        {
          "objectId": "f01e30d04a62cc4075cfa97f55e9eb48f9f11c69",
          "qualifier": "formalises"
        },
        {
          "objectId": "ceffc6efcf6392b1b9b1729cc336f0ab42134ebd",
          "qualifier": "formalises"
        },
        {
          "objectId": "8e1d64883bc6a6c54c835bbc4963c95bec344fe7",
          "qualifier": "formalises"
        }
      ],
      "id": "149"
    },
    {
      "type": "pull_request",
      "attributes": [
        {
          "name": "title",
          "value": "Fix: Remove direct folder reference",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "description",
          "value": "## Pull Request Title\r\nRemove direct folder reference to \"Resume-Matcher\"\r\n\r\n## Related Issue\r\n#147 \r\n\r\n## Description\r\nRemoves the restriction to always have the base directory as \"Resume-Matcher\"\r\n\r\n## Type\r\n- [x] Bug Fix\r\n- [ ] Feature Enhancement\r\n- [ ] Documentation Update\r\n- [ ] Code Refactoring\r\n- [ ] Other (please specify): \r\n\r\n## Proposed Changes\r\n- Use os.getcwd() to get current working directory in streamlit_app.py\r\n- Fix references in scripts/similarity/get_similarity_score.py\r\n- Also fix the standalone section in get_similarity_score.py in case anyone wants to test it separately\r\n\r\n## Screenshots / Code Snippets (if applicable)\r\nN/A - Git commit has all the details\r\n\r\n## How to Test\r\n1. `git clone https://github.com/srbhr/Resume-Matcher.git Test`\r\n2. Following the remaining steps as-is \r\n\r\n## Checklist\r\n- [x] The code compiles successfully without any errors or warnings\r\n- [x] The changes have been tested and verified\r\n- [ ] The documentation has been updated (if applicable)\r\n- [x] The changes follow the project's coding guidelines and best practices\r\n- [x] The commit messages are descriptive and follow the project's guidelines\r\n- [ ] All tests (if applicable) pass successfully\r\n- [x] This pull request has been linked to the related issue (if applicable)\r\n\r\n## Additional Information\r\nN/A\r\n\r\n",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "state",
          "value": "open",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": "scripts/similarity/get_similarity_score.py",
          "qualifier": "files"
        },
        {
          "objectId": "streamlit_app.py",
          "qualifier": "files"
        },
        {
          "objectId": "Abhishek Mathur",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "scripts/similarity/get_similarity_score.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "streamlit_app.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Abhishek Mathur",
          "qualifier": "has-participant"
        },
        {
          "objectId": "cbc8cc35603772045df30d4bf572d9e2416f8910",
          "qualifier": "commits"
        },
        {
          "objectId": "eb65e8d9343f352bf1e6c0efcd04ab8d8ec3a72d",
          "qualifier": "is-merged-with"
        },
        {
          "objectId": "cbc8cc35603772045df30d4bf572d9e2416f8910",
          "qualifier": "formalises"
        }
      ],
      "id": "148"
    },
    {
      "type": "pull_request",
      "attributes": [
        {
          "name": "title",
          "value": "Update requirements.txt",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "description",
          "value": "## Pull Request Title\r\nPR for Conflict in Dependency Versions: urllib3 and typing_extensions  \r\n\r\n## Related Issue\r\n<!-- If this pull request is related to an issue, please link it here using the \"#\" symbol followed by the issue number (e.g., #123) -->\r\n#142 \r\n## Description\r\n<!-- Describe the changes made in this pull request. What problem does it solve or what feature does it add/modify? -->\r\nUpdated the dependency of urllib3\r\n\r\n## Type\r\n<!-- Check the relevant options by putting an \"x\" in the brackets -->\r\n\r\n- [x] Bug Fix\r\n- [ ] Feature Enhancement\r\n- [ ] Documentation Update\r\n- [ ] Code Refactoring\r\n- [ ] Other (please specify): \r\n\r\n## Proposed Changes\r\n<!-- List the specific changes made in this pull request -->\r\n\r\n- Updated the  requirement to urllib3>=1.26.14\r\n\r\n\r\n## How to Test\r\n<!-- Provide step-by-step instructions or a checklist for testing the changes in this pull request -->\r\n\r\n\r\n 1.  Clone the repository.\r\n 2.  Install the packages specified in the requirements.txt file using pip.\r\n\r\n\r\n## Checklist\r\n<!-- Put an \"x\" in the brackets for the items that apply to this pull request -->\r\n\r\n- [x] The code compiles successfully without any errors or warnings\r\n- [x] The changes have been tested and verified\r\n- [ ] The documentation has been updated (if applicable)\r\n- [x] The changes follow the project's coding guidelines and best practices\r\n- [x] The commit messages are descriptive and follow the project's guidelines\r\n- [ ] All tests (if applicable) pass successfully\r\n- [x] This pull request has been linked to the related issue (if applicable)\r\n\r\n## Additional Information\r\n<!-- Add any other information about the pull request that you think might be helpful -->\r\n\r\n",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "state",
          "value": "open",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": "requirements.txt",
          "qualifier": "files"
        },
        {
          "objectId": "Amey Malekar",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "requirements.txt",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Amey Malekar",
          "qualifier": "has-participant"
        },
        {
          "objectId": "e0da0889868435337d8634fa961e335559f47266",
          "qualifier": "commits"
        },
        {
          "objectId": "17e98084925f36ce50a3ebf1dcc7a3ded9f47565",
          "qualifier": "is-merged-with"
        },
        {
          "objectId": "e0da0889868435337d8634fa961e335559f47266",
          "qualifier": "formalises"
        }
      ],
      "id": "145"
    },
    {
      "type": "pull_request",
      "attributes": [
        {
          "name": "title",
          "value": "chore: add debug troubleshooting steps to webapp readme",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "description",
          "value": "## Add new sections labelled `Debugging` and `Troubleshooting Common Issues` to the webapp README.md file\r\n\r\nThis change is to add new sections labelled `Debugging` and `Troubleshooting Common Issues` to the `webapp/README.md` file.\r\n\r\nThe debugging section guides users on how to run the FastAPI backend server in VS Codes' debug mode, along with running the frontend server in isolation.\r\n\r\nThe troubleshooting section currently highlights one potential common issue that users may encounter when only running the frontend server in isolation (e.g. `npm run next-dev`).\r\n\r\n## Related Issue\r\nN/A\r\n\r\n## Type\r\n\r\n- [ ] Bug Fix\r\n- [ ] Feature Enhancement\r\n- [X] Documentation Update\r\n- [ ] Code Refactoring\r\n- [ ] Other (please specify): \r\n\r\n## Proposed Changes\r\n\r\n- Update `webapp/README.md` with new sections\r\n\r\n## Screenshots / Code Snippets (if applicable)\r\n\r\nGIF demonstration of how to run the FastAPI backend server in VS Code Debugger mode, from within the full stack web app Next.js project.\r\n\r\n![Resume-Matcher-vs-code-debug-backend-fastapi-demo](https://github.com/srbhr/Resume-Matcher/assets/7581546/04b3b8e2-98c4-40ff-964f-8075c55091c9)\r\n\r\n## How to Test\r\n\r\n1. Run the web app (follow instructions from [webapp/README.md](https://github.com/srbhr/Resume-Matcher/blob/resume-matcher-fullstack-webapp/webapp/README.md)), and wait for the frontend and backend servers to completely load\r\n2. Open [http://localhost:3000/](http://localhost:3000/) in a new browser tab\r\n3. Replace the existing placeholder service key values from the top of the web app UI page with your own, or any other example values (see example GIF attached to this Pull Request above)\r\n\r\n## Checklist\r\n\r\n- [X] The code compiles successfully without any errors or warnings\r\n- [X] The changes have been tested and verified\r\n- [X] The documentation has been updated (if applicable)\r\n- [X] The changes follow the project's coding guidelines and best practices\r\n- [X] The commit messages are descriptive and follow the project's guidelines\r\n- [ ] All tests (if applicable) pass successfully\r\n- [ ] This pull request has been linked to the related issue (if applicable)\r\n\r\n## Additional Information\r\nN/A\r\n\r\n",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "state",
          "value": "open",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": "webapp/README.md",
          "qualifier": "files"
        },
        {
          "objectId": "Sayvai",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "webapp/README.md",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Sayvai",
          "qualifier": "has-participant"
        },
        {
          "objectId": "d960f148b16fc43815f1b8a93b7d20d7eec9db24",
          "qualifier": "commits"
        },
        {
          "objectId": "ceffc6efcf6392b1b9b1729cc336f0ab42134ebd",
          "qualifier": "is-merged-with"
        },
        {
          "objectId": "d960f148b16fc43815f1b8a93b7d20d7eec9db24",
          "qualifier": "formalises"
        }
      ],
      "id": "141"
    },
    {
      "type": "pull_request",
      "attributes": [
        {
          "name": "title",
          "value": "Bump gitpython from 3.1.32 to 3.1.35",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "description",
          "value": "Bumps [gitpython](https://github.com/gitpython-developers/GitPython) from 3.1.32 to 3.1.35.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/gitpython-developers/GitPython/releases\">gitpython's releases</a>.</em></p>\n<blockquote>\n<h2>3.1.35 - a fix for CVE-2023-41040</h2>\n<h2>What's Changed</h2>\n<ul>\n<li>Bump actions/checkout from 3 to 4 by <a href=\"https://github.com/dependabot\"><code>@\u200bdependabot</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1643\">gitpython-developers/GitPython#1643</a></li>\n<li>Fix 'Tree' object has no attribute '_name' when submodule path is normal path by <a href=\"https://github.com/CosmosAtlas\"><code>@\u200bCosmosAtlas</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1645\">gitpython-developers/GitPython#1645</a></li>\n<li>Fix CVE-2023-41040 by <a href=\"https://github.com/facutuesca\"><code>@\u200bfacutuesca</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1644\">gitpython-developers/GitPython#1644</a></li>\n<li>Only make config more permissive in tests that need it by <a href=\"https://github.com/EliahKagan\"><code>@\u200bEliahKagan</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1648\">gitpython-developers/GitPython#1648</a></li>\n<li>Added test for PR <a href=\"https://redirect.github.com/gitpython-developers/GitPython/issues/1645\">#1645</a> submodule path by <a href=\"https://github.com/CosmosAtlas\"><code>@\u200bCosmosAtlas</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1647\">gitpython-developers/GitPython#1647</a></li>\n<li>Fix Windows environment variable upcasing bug by <a href=\"https://github.com/EliahKagan\"><code>@\u200bEliahKagan</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1650\">gitpython-developers/GitPython#1650</a></li>\n</ul>\n<h2>New Contributors</h2>\n<ul>\n<li><a href=\"https://github.com/CosmosAtlas\"><code>@\u200bCosmosAtlas</code></a> made their first contribution in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1645\">gitpython-developers/GitPython#1645</a></li>\n<li><a href=\"https://github.com/facutuesca\"><code>@\u200bfacutuesca</code></a> made their first contribution in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1644\">gitpython-developers/GitPython#1644</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/gitpython-developers/GitPython/compare/3.1.34...3.1.35\">https://github.com/gitpython-developers/GitPython/compare/3.1.34...3.1.35</a></p>\n<h2>3.1.34 - fix resource leaking</h2>\n<h2>What's Changed</h2>\n<ul>\n<li>util: close lockfile after opening successfully by <a href=\"https://github.com/skshetry\"><code>@\u200bskshetry</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1639\">gitpython-developers/GitPython#1639</a></li>\n</ul>\n<h2>New Contributors</h2>\n<ul>\n<li><a href=\"https://github.com/skshetry\"><code>@\u200bskshetry</code></a> made their first contribution in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1639\">gitpython-developers/GitPython#1639</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/gitpython-developers/GitPython/compare/3.1.33...3.1.34\">https://github.com/gitpython-developers/GitPython/compare/3.1.33...3.1.34</a></p>\n<h2>v3.1.33 - with security fix</h2>\n<h2>What's Changed</h2>\n<ul>\n<li>WIP Quick doc by <a href=\"https://github.com/LeoDaCoda\"><code>@\u200bLeoDaCoda</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1608\">gitpython-developers/GitPython#1608</a></li>\n<li>Partial clean up wrt mypy and black by <a href=\"https://github.com/bodograumann\"><code>@\u200bbodograumann</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1617\">gitpython-developers/GitPython#1617</a></li>\n<li>Disable merge_includes in config writers by <a href=\"https://github.com/bodograumann\"><code>@\u200bbodograumann</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1618\">gitpython-developers/GitPython#1618</a></li>\n<li>feat: full typing for &quot;progress&quot; parameter in Repo class by <a href=\"https://github.com/madebylydia\"><code>@\u200bmadebylydia</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1634\">gitpython-developers/GitPython#1634</a></li>\n<li>Fix CVE-2023-40590 by <a href=\"https://github.com/EliahKagan\"><code>@\u200bEliahKagan</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1636\">gitpython-developers/GitPython#1636</a></li>\n<li><a href=\"https://redirect.github.com/gitpython-developers/GitPython/issues/1566\">#1566</a> Creating a lock now uses python built-in &quot;open()&quot; method to work arou\u2026 by <a href=\"https://github.com/HageMaster3108\"><code>@\u200bHageMaster3108</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1619\">gitpython-developers/GitPython#1619</a></li>\n</ul>\n<h2>New Contributors</h2>\n<ul>\n<li><a href=\"https://github.com/LeoDaCoda\"><code>@\u200bLeoDaCoda</code></a> made their first contribution in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1608\">gitpython-developers/GitPython#1608</a></li>\n<li><a href=\"https://github.com/bodograumann\"><code>@\u200bbodograumann</code></a> made their first contribution in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1617\">gitpython-developers/GitPython#1617</a></li>\n<li><a href=\"https://github.com/EliahKagan\"><code>@\u200bEliahKagan</code></a> made their first contribution in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1636\">gitpython-developers/GitPython#1636</a></li>\n<li><a href=\"https://github.com/HageMaster3108\"><code>@\u200bHageMaster3108</code></a> made their first contribution in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1619\">gitpython-developers/GitPython#1619</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/gitpython-developers/GitPython/compare/3.1.32...3.1.33\">https://github.com/gitpython-developers/GitPython/compare/3.1.32...3.1.33</a></p>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/gitpython-developers/GitPython/commit/c8e303ffd3204195fc7f768f7b17dc5bde3dd53f\"><code>c8e303f</code></a> prepare next release</li>\n<li><a href=\"https://github.com/gitpython-developers/GitPython/commit/09e1b3dbae3437cf3e2c7fb0326128c2e20b372e\"><code>09e1b3d</code></a> Merge pull request <a href=\"https://redirect.github.com/gitpython-developers/GitPython/issues/1650\">#1650</a> from EliahKagan/envcase</li>\n<li><a href=\"https://github.com/gitpython-developers/GitPython/commit/8017421ade3d1058d753e24119d1f7796a84abe6\"><code>8017421</code></a> Merge pull request <a href=\"https://redirect.github.com/gitpython-developers/GitPython/issues/1647\">#1647</a> from CosmosAtlas/master</li>\n<li><a href=\"https://github.com/gitpython-developers/GitPython/commit/fafb4f6651eac242a7e143831fbe23d10beaf89b\"><code>fafb4f6</code></a> updated docs to better describe testing procedure with new repo</li>\n<li><a href=\"https://github.com/gitpython-developers/GitPython/commit/9da24d46c64eaf4c7db65c0f67324801fafbf30d\"><code>9da24d4</code></a> add test for submodule path not owned by submodule case</li>\n<li><a href=\"https://github.com/gitpython-developers/GitPython/commit/eebdb25ee6e88d8fce83ea0970bd08f5e5301f65\"><code>eebdb25</code></a> Eliminate duplication of git.util.cwd logic</li>\n<li><a href=\"https://github.com/gitpython-developers/GitPython/commit/c7fad20be5df0a86636459bf673ff9242a82e1fc\"><code>c7fad20</code></a> Fix Windows env var upcasing regression</li>\n<li><a href=\"https://github.com/gitpython-developers/GitPython/commit/7296e5c021450743e5fe824e94b830a73eebc4c8\"><code>7296e5c</code></a> Make test helper script a file, for readability</li>\n<li><a href=\"https://github.com/gitpython-developers/GitPython/commit/d88372a11ac145d92013dcc64b7d21a5a6ad3a91\"><code>d88372a</code></a> Add test for Windows env var upcasing regression</li>\n<li><a href=\"https://github.com/gitpython-developers/GitPython/commit/11839ab5ce4d721d127283f1d37ca712d0b79027\"><code>11839ab</code></a> Merge pull request <a href=\"https://redirect.github.com/gitpython-developers/GitPython/issues/1648\">#1648</a> from EliahKagan/file-protocol</li>\n<li>Additional commits viewable in <a href=\"https://github.com/gitpython-developers/GitPython/compare/3.1.32...3.1.35\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=gitpython&package-manager=pip&previous-version=3.1.32&new-version=3.1.35)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/srbhr/Resume-Matcher/network/alerts).\n\n</details>",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "state",
          "value": "open",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": "requirements.txt",
          "qualifier": "files"
        },
        {
          "objectId": "dependabot[bot]",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "requirements.txt",
          "qualifier": "aggregates"
        },
        {
          "objectId": "dependabot[bot]",
          "qualifier": "has-participant"
        },
        {
          "objectId": "eb97fad9e4af4cc7b0c52a045727e52c46e1fc87",
          "qualifier": "commits"
        },
        {
          "objectId": "20df1691be84113806bf7f6cd145ebadc48dd986",
          "qualifier": "is-merged-with"
        },
        {
          "objectId": "eb97fad9e4af4cc7b0c52a045727e52c46e1fc87",
          "qualifier": "formalises"
        }
      ],
      "id": "140"
    },
    {
      "type": "pull_request",
      "attributes": [
        {
          "name": "title",
          "value": "Bump gitpython from 3.1.32 to 3.1.34",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "description",
          "value": "Bumps [gitpython](https://github.com/gitpython-developers/GitPython) from 3.1.32 to 3.1.34.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/gitpython-developers/GitPython/releases\">gitpython's releases</a>.</em></p>\n<blockquote>\n<h2>3.1.34 - fix resource leaking</h2>\n<h2>What's Changed</h2>\n<ul>\n<li>util: close lockfile after opening successfully by <a href=\"https://github.com/skshetry\"><code>@\u200bskshetry</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1639\">gitpython-developers/GitPython#1639</a></li>\n</ul>\n<h2>New Contributors</h2>\n<ul>\n<li><a href=\"https://github.com/skshetry\"><code>@\u200bskshetry</code></a> made their first contribution in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1639\">gitpython-developers/GitPython#1639</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/gitpython-developers/GitPython/compare/3.1.33...3.1.34\">https://github.com/gitpython-developers/GitPython/compare/3.1.33...3.1.34</a></p>\n<h2>v3.1.33 - with security fix</h2>\n<h2>What's Changed</h2>\n<ul>\n<li>WIP Quick doc by <a href=\"https://github.com/LeoDaCoda\"><code>@\u200bLeoDaCoda</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1608\">gitpython-developers/GitPython#1608</a></li>\n<li>Partial clean up wrt mypy and black by <a href=\"https://github.com/bodograumann\"><code>@\u200bbodograumann</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1617\">gitpython-developers/GitPython#1617</a></li>\n<li>Disable merge_includes in config writers by <a href=\"https://github.com/bodograumann\"><code>@\u200bbodograumann</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1618\">gitpython-developers/GitPython#1618</a></li>\n<li>feat: full typing for &quot;progress&quot; parameter in Repo class by <a href=\"https://github.com/madebylydia\"><code>@\u200bmadebylydia</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1634\">gitpython-developers/GitPython#1634</a></li>\n<li>Fix CVE-2023-40590 by <a href=\"https://github.com/EliahKagan\"><code>@\u200bEliahKagan</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1636\">gitpython-developers/GitPython#1636</a></li>\n<li><a href=\"https://redirect.github.com/gitpython-developers/GitPython/issues/1566\">#1566</a> Creating a lock now uses python built-in &quot;open()&quot; method to work arou\u2026 by <a href=\"https://github.com/HageMaster3108\"><code>@\u200bHageMaster3108</code></a> in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1619\">gitpython-developers/GitPython#1619</a></li>\n</ul>\n<h2>New Contributors</h2>\n<ul>\n<li><a href=\"https://github.com/LeoDaCoda\"><code>@\u200bLeoDaCoda</code></a> made their first contribution in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1608\">gitpython-developers/GitPython#1608</a></li>\n<li><a href=\"https://github.com/bodograumann\"><code>@\u200bbodograumann</code></a> made their first contribution in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1617\">gitpython-developers/GitPython#1617</a></li>\n<li><a href=\"https://github.com/EliahKagan\"><code>@\u200bEliahKagan</code></a> made their first contribution in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1636\">gitpython-developers/GitPython#1636</a></li>\n<li><a href=\"https://github.com/HageMaster3108\"><code>@\u200bHageMaster3108</code></a> made their first contribution in <a href=\"https://redirect.github.com/gitpython-developers/GitPython/pull/1619\">gitpython-developers/GitPython#1619</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/gitpython-developers/GitPython/compare/3.1.32...3.1.33\">https://github.com/gitpython-developers/GitPython/compare/3.1.32...3.1.33</a></p>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/gitpython-developers/GitPython/commit/2a2ae776825f249a3bb7efd9b08650486226b027\"><code>2a2ae77</code></a> prepare patch release</li>\n<li><a href=\"https://github.com/gitpython-developers/GitPython/commit/47147406a5931e07641385f27e0e018927044c55\"><code>4714740</code></a> Merge pull request <a href=\"https://redirect.github.com/gitpython-developers/GitPython/issues/1639\">#1639</a> from skshetry/close-lockfile</li>\n<li><a href=\"https://github.com/gitpython-developers/GitPython/commit/3e829eb516a60212bae81a6549361be4748e22d7\"><code>3e829eb</code></a> util: close lockfile after opening successfully</li>\n<li><a href=\"https://github.com/gitpython-developers/GitPython/commit/f882cd8422fbb2517eebbf45824eb07951b948f3\"><code>f882cd8</code></a> update instructions for how to create a release</li>\n<li><a href=\"https://github.com/gitpython-developers/GitPython/commit/993f04588aa362fdce7c7f2f0848b5daedd8cb72\"><code>993f045</code></a> prepare for next release</li>\n<li><a href=\"https://github.com/gitpython-developers/GitPython/commit/a1c472bd314f3b2cd3743f2c17bfcf36453c4784\"><code>a1c472b</code></a> Merge pull request <a href=\"https://redirect.github.com/gitpython-developers/GitPython/issues/1619\">#1619</a> from HageMaster3108/bugfix/use-python-builtin-open-m...</li>\n<li><a href=\"https://github.com/gitpython-developers/GitPython/commit/70924c4265c2d3629d978dd7bfc9ab1678d91e7d\"><code>70924c4</code></a> Skip now permanently failing test with note on how to fix it</li>\n<li><a href=\"https://github.com/gitpython-developers/GitPython/commit/8b75434e2c8a082cdeb4971cc6f0ee2bafec45bc\"><code>8b75434</code></a> Merge pull request <a href=\"https://redirect.github.com/gitpython-developers/GitPython/issues/1636\">#1636</a> from EliahKagan/cve-2023-40590</li>\n<li><a href=\"https://github.com/gitpython-developers/GitPython/commit/7611cd909b890b971d23bce3bd4244ad1c381f22\"><code>7611cd9</code></a> Don't check form of version number</li>\n<li><a href=\"https://github.com/gitpython-developers/GitPython/commit/94e0fb0794b88b78ceed94ff18ee7d68587d890d\"><code>94e0fb0</code></a> Add a unit test for CVE-2023-40590</li>\n<li>Additional commits viewable in <a href=\"https://github.com/gitpython-developers/GitPython/compare/3.1.32...3.1.34\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=gitpython&package-manager=pip&previous-version=3.1.32&new-version=3.1.34)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/srbhr/Resume-Matcher/network/alerts).\n\n</details>",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "state",
          "value": "open",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": "requirements.txt",
          "qualifier": "files"
        },
        {
          "objectId": "dependabot[bot]",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "requirements.txt",
          "qualifier": "aggregates"
        },
        {
          "objectId": "dependabot[bot]",
          "qualifier": "has-participant"
        },
        {
          "objectId": "8cd5e5da0f909c6d409725a4ba2127a825efa711",
          "qualifier": "commits"
        },
        {
          "objectId": "f16a7984af469622373ec0b876dc70209035ebde",
          "qualifier": "is-merged-with"
        },
        {
          "objectId": "8cd5e5da0f909c6d409725a4ba2127a825efa711",
          "qualifier": "formalises"
        }
      ],
      "id": "136"
    },
    {
      "type": "pull_request",
      "attributes": [
        {
          "name": "title",
          "value": "feat: render save service keys on web app ui",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "description",
          "value": "## Render and Save Third Party Service Keys (API Keys and URL) on Web App UI\r\n\r\n### Description\r\nThere is a requirement to allow users to securely enter and save third-party service keys (and URLs) to be able to work with the overall app (once the backend scripts are later to be completed).\r\n\r\nImplemented new feature to allow users to view the required configurable service keys (and urls) to set, on the web app UI.\r\n\r\nThe configurable required service keys data is dynamically derived from the backend master YAML config file (located in `/scripts/similarity/config.yml`), and its actual pre-saved secret key values derived from a localised programatically created git-ignored YAML secrets config file (located in `/scripts/similarity/config.local.yml`).\r\n\r\nWhenever a key is no longer required by the app, then it is safe to remove key from the master config file, and in turn this key and any pre-saved secret value will no longer render on the web UI.\r\n\r\nIf a secret has yet to be set for any of the required keys, then the value will fallback to the default placeholder value defined in the master YAML config.\r\n\r\n### Related Issue\r\nN/A\r\n\r\n### Type\r\n\r\n- [ ] Bug Fix\r\n- [X] Feature Enhancement\r\n- [X] Documentation Update\r\n- [X] Code Refactoring\r\n- [ ] Other (please specify): \r\n\r\n### Proposed Changes\r\n\r\n- Add an additional UI section at top of UI page to allow users to view saved service keys data, and also allow them to update those keys.\r\n- Add new backend FastAPI endpoint (`GET /api/service-keys/`) to dynamically retrieve required service keys, as derived from the master YAML config file `/scripts/similarity/config.yml`, and replace placeholder service key values with actual secrets from localised git-ignored secrets YAML config file `/scripts/similarity/config.local.yml`.\r\n- Add new backend FastAPI endpoint (`PUT /api/service-keys/`) to dynamically update the service keys with new values, which writes to the new secrets to the localised git-ignored secrets YAML config file `/scripts/similarity/config.local.yml`.\r\n- Add wildcard `*.local.yml` to `.gitignore` file to ignore programmatically created YAML file which will pre-save the secrets.\r\n- Updated `webapp/README.md` with update to supported and tested Python version (`3.11.5`).\r\n- Updated `package.json` file by replacing `pip3` and `python3` with `pip` and `python` commands respectively.\r\n- Refactored web app UI React components.\r\n- Created a new frontend utils script file `environment.ts` to handle retrieving frontend environment and host URL information.\r\n- Created new types file `service-keys.ts` to add frontend typings for the third-party service keys.\r\n\r\n### Screenshots / Code Snippets (if applicable)\r\nAnnotated GIF demo of the new feature, showcasing the third-party service keys UI and backend secrets yaml config being created, and holding the secrets, while the master YAML config is safely left untouched.\r\n\r\n![Resume-Matcher-Web-App-UI-Feature-Add-Service-Keys-2](https://github.com/srbhr/Resume-Matcher/assets/7581546/775a34c2-37ed-46a6-806e-78dc97c5d4dc)\r\n\r\n### How to Test\r\n\r\n1. Run the web app (follow instructions from [webapp/README.md](https://github.com/srbhr/Resume-Matcher/blob/resume-matcher-fullstack-webapp/webapp/README.md)), and wait for the frontend and backend servers to completely load\r\n2. Open [http://localhost:3000/](http://localhost:3000/) in a new browser tab\r\n3. Replace the existing placeholder service key values from the top of the web app UI page with your own, or any other example values (see example GIF attached to this Pull Request above)\r\n\r\n### Checklist\r\n<!-- Put an \"x\" in the brackets for the items that apply to this pull request -->\r\n\r\n- [X] The code compiles successfully without any errors or warnings\r\n- [X] The changes have been tested and verified\r\n- [X] The documentation has been updated (if applicable)\r\n- [X] The changes follow the project's coding guidelines and best practices\r\n- [X] The commit messages are descriptive and follow the project's guidelines\r\n- [ ] All tests (if applicable) pass successfully - N/A\r\n- [ ] This pull request has been linked to the related issue (if applicable) - N/A\r\n\r\n## Additional Information\r\n\u26a0\ufe0f Because the actual secrets are programatically and safely saved to local file `/scripts/similarity/config.local.yml`, then any pre-existing Python project scripts which referenced to `/scripts/similarity/config.yml` to previously retrieve hardcoded secrets, should be **refactored** to check for existence of saved user secrets from secrets YAML config file `/scripts/similarity/config.local.yml` to programmatically retrieve secrets from there instead, otherwise fallback to master YAML config file `/scripts/similarity/config.yml`.\r\n\r\n",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "state",
          "value": "open",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": ".gitignore",
          "qualifier": "files"
        },
        {
          "objectId": "requirements.txt",
          "qualifier": "files"
        },
        {
          "objectId": "webapp/README.md",
          "qualifier": "files"
        },
        {
          "objectId": "webapp/app/(routes)/layout.tsx",
          "qualifier": "files"
        },
        {
          "objectId": "webapp/app/(routes)/page.tsx",
          "qualifier": "files"
        },
        {
          "objectId": "webapp/app/_components/hero/hero.tsx",
          "qualifier": "files"
        },
        {
          "objectId": "webapp/app/_components/third-party-services/reducer.ts",
          "qualifier": "files"
        },
        {
          "objectId": "webapp/app/_components/third-party-services/saved-keys.tsx",
          "qualifier": "files"
        },
        {
          "objectId": "webapp/app/_components/third-party-services/third-party-services.tsx",
          "qualifier": "files"
        },
        {
          "objectId": "webapp/app/_types/service-keys.ts",
          "qualifier": "files"
        },
        {
          "objectId": "webapp/app/_utils/environment.ts",
          "qualifier": "files"
        },
        {
          "objectId": "webapp/app/_utils/error.ts",
          "qualifier": "files"
        },
        {
          "objectId": "webapp/backend/api/index.py",
          "qualifier": "files"
        },
        {
          "objectId": "webapp/backend/scripts/service_keys.py",
          "qualifier": "files"
        },
        {
          "objectId": "webapp/package-lock.json",
          "qualifier": "files"
        },
        {
          "objectId": "webapp/package.json",
          "qualifier": "files"
        },
        {
          "objectId": "Sayvai",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": ".gitignore",
          "qualifier": "aggregates"
        },
        {
          "objectId": "requirements.txt",
          "qualifier": "aggregates"
        },
        {
          "objectId": "webapp/README.md",
          "qualifier": "aggregates"
        },
        {
          "objectId": "webapp/app/(routes)/layout.tsx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "webapp/app/(routes)/page.tsx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "webapp/app/_components/hero/hero.tsx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "webapp/app/_components/third-party-services/reducer.ts",
          "qualifier": "aggregates"
        },
        {
          "objectId": "webapp/app/_components/third-party-services/saved-keys.tsx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "webapp/app/_components/third-party-services/third-party-services.tsx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "webapp/app/_types/service-keys.ts",
          "qualifier": "aggregates"
        },
        {
          "objectId": "webapp/app/_utils/environment.ts",
          "qualifier": "aggregates"
        },
        {
          "objectId": "webapp/app/_utils/error.ts",
          "qualifier": "aggregates"
        },
        {
          "objectId": "webapp/backend/api/index.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "webapp/backend/scripts/service_keys.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "webapp/package-lock.json",
          "qualifier": "aggregates"
        },
        {
          "objectId": "webapp/package.json",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Sayvai",
          "qualifier": "has-participant"
        },
        {
          "objectId": "d5c42e93fcfd4f99e2ec7f5a7eb61c300d0ef204",
          "qualifier": "commits"
        },
        {
          "objectId": "9a46767052b879618f3584bd0639c0a8af7ba43c",
          "qualifier": "commits"
        },
        {
          "objectId": "0830d6bbe1dd9977531e5946bafbb3552d05dad2",
          "qualifier": "commits"
        },
        {
          "objectId": "58ea0868f2137937e54b4bd07b459992156502f4",
          "qualifier": "commits"
        },
        {
          "objectId": "60b70b03cec03e70be3b9c1da34d1576c6f73a26",
          "qualifier": "commits"
        },
        {
          "objectId": "f01e30d04a62cc4075cfa97f55e9eb48f9f11c69",
          "qualifier": "is-merged-with"
        },
        {
          "objectId": "d5c42e93fcfd4f99e2ec7f5a7eb61c300d0ef204",
          "qualifier": "formalises"
        },
        {
          "objectId": "9a46767052b879618f3584bd0639c0a8af7ba43c",
          "qualifier": "formalises"
        },
        {
          "objectId": "0830d6bbe1dd9977531e5946bafbb3552d05dad2",
          "qualifier": "formalises"
        },
        {
          "objectId": "58ea0868f2137937e54b4bd07b459992156502f4",
          "qualifier": "formalises"
        },
        {
          "objectId": "60b70b03cec03e70be3b9c1da34d1576c6f73a26",
          "qualifier": "formalises"
        }
      ],
      "id": "135"
    },
    {
      "type": "pull_request",
      "attributes": [
        {
          "name": "title",
          "value": "Adding FastAPI and amending the comments & errors message in run_first.py",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "description",
          "value": "## Pull Request Title\nChange resumes to job descriptions for the comments and error message in run_first.py and streamlit_second.py\n\n\n## Type\n\n- [ x ] Bug Fix\n- [ ] Feature Enhancement\n- [ ] Documentation Update\n- [ ] Code Refactoring\n- [ ] Other (please specify): \n\n## Proposed Changes\n\n- Change resumes to job descriptions for the comments and error message in run_first.py and streamlit_second.py\n- \n- \n\n## Screenshots / Code Snippets (if applicable)\n<!-- Include any relevant screenshots or code snippets that help visualize the changes made -->\n\n\n\n## Checklist\n<!-- Put an \"x\" in the brackets for the items that apply to this pull request -->\n\n- [x ] The code compiles successfully without any errors or warnings\n- [ x ] The changes have been tested and verified\n- [ ] The documentation has been updated (if applicable)\n- [ ] The changes follow the project's coding guidelines and best practices\n- [ ] The commit messages are descriptive and follow the project's guidelines\n- [ x ] All tests (if applicable) pass successfully\n- [ ] This pull request has been linked to the related issue (if applicable)\n\n## Additional Information\n<!-- Add any other information about the pull request that you think might be helpful -->\n\n",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "state",
          "value": "open",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": "requirements.txt",
          "qualifier": "files"
        },
        {
          "objectId": "run_first.py",
          "qualifier": "files"
        },
        {
          "objectId": "scripts/__init__.py",
          "qualifier": "files"
        },
        {
          "objectId": "streamlit_second.py",
          "qualifier": "files"
        },
        {
          "objectId": "dxxky",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "requirements.txt",
          "qualifier": "aggregates"
        },
        {
          "objectId": "run_first.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "scripts/__init__.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "streamlit_second.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "dxxky",
          "qualifier": "has-participant"
        },
        {
          "objectId": "5bff3d3fc86d4aab50e4e064178c4e803fda0a8e",
          "qualifier": "commits"
        },
        {
          "objectId": "83f677fbfb422f187e37c7d36a711253655e2dcc",
          "qualifier": "commits"
        },
        {
          "objectId": "7a4d2a20fc583278a28d79d82fb9a82e9cfc1b29",
          "qualifier": "commits"
        },
        {
          "objectId": "2a236e78805698a5397c1535f26c070339598ea4",
          "qualifier": "commits"
        },
        {
          "objectId": "79d8f9ecc6a926c4b9ec048a01e36599f7f1ee16",
          "qualifier": "is-merged-with"
        },
        {
          "objectId": "5bff3d3fc86d4aab50e4e064178c4e803fda0a8e",
          "qualifier": "formalises"
        },
        {
          "objectId": "83f677fbfb422f187e37c7d36a711253655e2dcc",
          "qualifier": "formalises"
        },
        {
          "objectId": "7a4d2a20fc583278a28d79d82fb9a82e9cfc1b29",
          "qualifier": "formalises"
        },
        {
          "objectId": "2a236e78805698a5397c1535f26c070339598ea4",
          "qualifier": "formalises"
        }
      ],
      "id": "134"
    },
    {
      "type": "pull_request",
      "attributes": [
        {
          "name": "title",
          "value": "Resolves issue #130",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "description",
          "value": "## Pull Request Title\r\n<!-- Provide a concise and descriptive title for the pull request -->\r\n\r\n## Related Issue\r\n<!-- If this pull request is related to an issue, please link it here using the \"#\" symbol followed by the issue number (e.g., #123) -->\r\n#130\r\n## Description\r\n<!-- Describe the changes made in this pull request. What problem does it solve or what feature does it add/modify? -->\r\n\r\n## Type\r\n<!-- Check the relevant options by putting an \"x\" in the brackets -->\r\n\r\n- [x] Bug Fix\r\n- [ ] Feature Enhancement\r\n- [ ] Documentation Update\r\n- [ ] Code Refactoring\r\n- [ ] Other (please specify): \r\n\r\n## Proposed Changes\r\n<!-- List the specific changes made in this pull request -->\r\n\r\n- \r\n- \r\n- \r\n\r\n## Screenshots / Code Snippets (if applicable)\r\n<!-- Include any relevant screenshots or code snippets that help visualize the changes made -->\r\n\r\n## How to Test\r\n<!-- Provide step-by-step instructions or a checklist for testing the changes in this pull request -->\r\n\r\n1. \r\n2. \r\n3. \r\n\r\n## Checklist\r\n<!-- Put an \"x\" in the brackets for the items that apply to this pull request -->\r\n\r\n- [x] The code compiles successfully without any errors or warnings\r\n- [x] The changes have been tested and verified\r\n- [x] The documentation has been updated (if applicable)\r\n- [x] The changes follow the project's coding guidelines and best practices\r\n- [ ] The commit messages are descriptive and follow the project's guidelines\r\n- [ ] All tests (if applicable) pass successfully\r\n- [ ] This pull request has been linked to the related issue (if applicable)\r\n\r\n## Additional Information\r\n<!-- Add any other information about the pull request that you think might be helpful -->\r\n\r\n",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "state",
          "value": "open",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": "Data/Processed/JobDescription/JobDescription-job_desc_front_end_engineer.pdf9e508eff-a083-4e2d-8b1e-577cbc8f50fc.json",
          "qualifier": "files"
        },
        {
          "objectId": "Data/Processed/JobDescription/JobDescription-job_desc_full_stack_engineer.pdfcccf72e0-5f20-4aa8-8679-d91b720b7247.json",
          "qualifier": "files"
        },
        {
          "objectId": "Data/Processed/JobDescription/JobDescription-job_desc_java_developer.pdf1fb6435c-531a-4f04-84c2-c4e73e1f1a3f.json",
          "qualifier": "files"
        },
        {
          "objectId": "Data/Processed/JobDescription/JobDescription-job_desc_product_manager.pdf0b613898-1183-49c5-ad07-e03bd9af72e5.json",
          "qualifier": "files"
        },
        {
          "objectId": "Data/Processed/Resumes/Resume-alfred_pennyworth_pm.pdfb36fac00-1d60-49ba-a9e4-33477c928e98.json",
          "qualifier": "files"
        },
        {
          "objectId": "Data/Processed/Resumes/Resume-barry_allen_fe.pdfbef9d9b1-fa14-4aa0-8111-6033cceacb5a.json",
          "qualifier": "files"
        },
        {
          "objectId": "Data/Processed/Resumes/Resume-bruce_wayne_fullstack.pdf04c228e3-04a4-4970-a149-a3cffc92aee8.json",
          "qualifier": "files"
        },
        {
          "objectId": "Data/Processed/Resumes/Resume-harvey_dent_mle.pdf5dde9183-5af4-4107-91e1-7b2d66fec490.json",
          "qualifier": "files"
        },
        {
          "objectId": "Data/Processed/Resumes/Resume-john_doe.pdf817fb796-14b9-4819-a224-7eed66b3ce04.json",
          "qualifier": "files"
        },
        {
          "objectId": "README.md",
          "qualifier": "files"
        },
        {
          "objectId": "img.png",
          "qualifier": "files"
        },
        {
          "objectId": "requirements.txt",
          "qualifier": "files"
        },
        {
          "objectId": "scripts/similarity/config.yml",
          "qualifier": "files"
        },
        {
          "objectId": "scripts/similarity/get_similarity_score.py",
          "qualifier": "files"
        },
        {
          "objectId": "Subramanyam Challa",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "Data/Processed/JobDescription/JobDescription-job_desc_front_end_engineer.pdf9e508eff-a083-4e2d-8b1e-577cbc8f50fc.json",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Processed/JobDescription/JobDescription-job_desc_full_stack_engineer.pdfcccf72e0-5f20-4aa8-8679-d91b720b7247.json",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Processed/JobDescription/JobDescription-job_desc_java_developer.pdf1fb6435c-531a-4f04-84c2-c4e73e1f1a3f.json",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Processed/JobDescription/JobDescription-job_desc_product_manager.pdf0b613898-1183-49c5-ad07-e03bd9af72e5.json",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Processed/Resumes/Resume-alfred_pennyworth_pm.pdfb36fac00-1d60-49ba-a9e4-33477c928e98.json",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Processed/Resumes/Resume-barry_allen_fe.pdfbef9d9b1-fa14-4aa0-8111-6033cceacb5a.json",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Processed/Resumes/Resume-bruce_wayne_fullstack.pdf04c228e3-04a4-4970-a149-a3cffc92aee8.json",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Processed/Resumes/Resume-harvey_dent_mle.pdf5dde9183-5af4-4107-91e1-7b2d66fec490.json",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Processed/Resumes/Resume-john_doe.pdf817fb796-14b9-4819-a224-7eed66b3ce04.json",
          "qualifier": "aggregates"
        },
        {
          "objectId": "README.md",
          "qualifier": "aggregates"
        },
        {
          "objectId": "img.png",
          "qualifier": "aggregates"
        },
        {
          "objectId": "requirements.txt",
          "qualifier": "aggregates"
        },
        {
          "objectId": "scripts/similarity/config.yml",
          "qualifier": "aggregates"
        },
        {
          "objectId": "scripts/similarity/get_similarity_score.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Subramanyam Challa",
          "qualifier": "has-participant"
        },
        {
          "objectId": "57b8733ace4de8953be53d55b58de9346e89e74c",
          "qualifier": "commits"
        },
        {
          "objectId": "b17532f9ed1b5f3dda543e3a016bc44eba24a816",
          "qualifier": "commits"
        },
        {
          "objectId": "3b38dc02e2c511a845b6fb12076f08e929c4633c",
          "qualifier": "commits"
        },
        {
          "objectId": "bc3e5f00885e92a01cc5d36a010f6929ad9ec71e",
          "qualifier": "commits"
        },
        {
          "objectId": "25e00d38adeaffd3f3ee1212fc119a5af9aadb03",
          "qualifier": "commits"
        },
        {
          "objectId": "df137a0ba05c2ea3e25286916eb544309629f462",
          "qualifier": "commits"
        },
        {
          "objectId": "b5eaf42c9deb83435739d61aecf4ab6cca6bd333",
          "qualifier": "commits"
        },
        {
          "objectId": "485682519d8586bd557056c103a1b2b8a9c96c58",
          "qualifier": "commits"
        },
        {
          "objectId": "29105edc1d7ce3808b292e53ea1d426f3484cd2e",
          "qualifier": "is-merged-with"
        },
        {
          "objectId": "57b8733ace4de8953be53d55b58de9346e89e74c",
          "qualifier": "formalises"
        },
        {
          "objectId": "b17532f9ed1b5f3dda543e3a016bc44eba24a816",
          "qualifier": "formalises"
        },
        {
          "objectId": "3b38dc02e2c511a845b6fb12076f08e929c4633c",
          "qualifier": "formalises"
        },
        {
          "objectId": "bc3e5f00885e92a01cc5d36a010f6929ad9ec71e",
          "qualifier": "formalises"
        },
        {
          "objectId": "25e00d38adeaffd3f3ee1212fc119a5af9aadb03",
          "qualifier": "formalises"
        },
        {
          "objectId": "df137a0ba05c2ea3e25286916eb544309629f462",
          "qualifier": "formalises"
        },
        {
          "objectId": "b5eaf42c9deb83435739d61aecf4ab6cca6bd333",
          "qualifier": "formalises"
        },
        {
          "objectId": "485682519d8586bd557056c103a1b2b8a9c96c58",
          "qualifier": "formalises"
        }
      ],
      "id": "133"
    },
    {
      "type": "pull_request",
      "attributes": [
        {
          "name": "title",
          "value": "Changes to be committed: Updated Streamlit descriptions: - Amended the descriptions of selecting a 'job descriptions'.",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "description",
          "value": " ## Pull Request Title\r\n ## Related Issue\r\n ## Description\r\n ## Type\r\n * [ ]  Bug Fix\r\n * [ ]  Feature Enhancement\r\n * [ ]  Documentation Update\r\n * [ ]  Code Refactoring\r\n * [x]  Other (please specify):\r\n\r\n ## Proposed Changes\r\nmodified:   streamlit_app.py\r\n\r\nUpdated Streamlit descriptions:\r\n- Amended the descriptions of selecting a 'job descriptions'.\r\n\r\n ## Screenshots / Code Snippets (if applicable)\r\n![image](https://github.com/srbhr/Resume-Matcher/assets/143929171/d69a8a06-88a2-4daa-a99d-df7921298966)\r\nIt should be job descriptions.\r\n\r\n ## How to Test\r\n1) Open the streamlit page\r\n\r\n ## Checklist\r\n * [x]  The code compiles successfully without any errors or warnings\r\n * [x]  The changes have been tested and verified\r\n * [ ]  The documentation has been updated (if applicable)\r\n * [ ]  The changes follow the project's coding guidelines and best practices\r\n * [ ]  The commit messages are descriptive and follow the project's guidelines\r\n * [ ]  All tests (if applicable) pass successfully\r\n * [ ]  This pull request has been linked to the related issue (if applicable)\r\n\r\n ## Additional Information\r\n\r\n",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "state",
          "value": "open",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": "streamlit_app.py",
          "qualifier": "files"
        },
        {
          "objectId": "dxxky",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "streamlit_app.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "dxxky",
          "qualifier": "has-participant"
        },
        {
          "objectId": "f1a7ff4d8918894309d5ec9073eb01d7a8cd1ab6",
          "qualifier": "commits"
        },
        {
          "objectId": "b0b3b546e4c5c180478ff138df1891b4c068dd31",
          "qualifier": "is-merged-with"
        },
        {
          "objectId": "f1a7ff4d8918894309d5ec9073eb01d7a8cd1ab6",
          "qualifier": "formalises"
        }
      ],
      "id": "132"
    },
    {
      "type": "user",
      "attributes": [
        {
          "name": "username",
          "value": "yichao-cai",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "rank",
          "value": "CONTRIBUTOR",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "is-bot",
          "value": "False",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "rank",
          "value": "NONE",
          "time": "2025-04-10T02:19:35Z"
        }
      ],
      "relationships": [
        {
          "objectId": "Yichao Cai",
          "qualifier": "name"
        }
      ],
      "id": "Yichao Cai"
    },
    {
      "type": "pull_request",
      "attributes": [
        {
          "name": "title",
          "value": "Modify docker image WORKDIR to fix find_path() error",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "description",
          "value": "## Pull Request Title\nFix docker image WORKDIR to avoid path not found error\n\n## Related Issue\n<!-- If this pull request is related to an issue, please link it here using the \"#\" symbol followed by the issue number (e.g., #123) -->\n\n## Description\n<!-- Describe the changes made in this pull request. What problem does it solve or what feature does it add/modify? -->\n\nUsing current `WORKDIR /data` in the `build.dockerfile` would result in cwd not found error when running `get_similarity_score.py`. \n\nThe error message is as followed:\n\n```\nresume-matcher-resume-matcher-1  | 2023-08-31 09:13:00.039 Uncaught app exception\nresume-matcher-resume-matcher-1  | Traceback (most recent call last):\nresume-matcher-resume-matcher-1  |   File \"/usr/local/lib/python3.11/site-packages/streamlit/runtime/scriptrunner/script_runner.py\", line 552, in _run_script\nresume-matcher-resume-matcher-1  |     exec(code, module.__dict__)\nresume-matcher-resume-matcher-1  |   File \"/data/streamlit_app.py\", line 15, in <module>\nresume-matcher-resume-matcher-1  |     from scripts.similarity.get_similarity_score import get_similarity_score, find_path, read_config\nresume-matcher-resume-matcher-1  |   File \"/data/scripts/similarity/get_similarity_score.py\", line 46, in <module>\nresume-matcher-resume-matcher-1  |     cwd = find_path('Resume-Matcher')\nresume-matcher-resume-matcher-1  |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^\nresume-matcher-resume-matcher-1  |   File \"/data/scripts/similarity/get_similarity_score.py\", line 43, in find_path\nresume-matcher-resume-matcher-1  |     raise ValueError(f\"Folder '{folder_name}' not found.\")\nresume-matcher-resume-matcher-1  | ValueError: Folder 'Resume-Matcher' not found.\n```\n\nThis is because the pwd is at `/data` and there is no folder named `Resume-Matcher`. Once the find_path() moves up to the parent path and detected a `/`, it would exit and throw a \"Folder not found\" error. \n\n## Type\n<!-- Check the relevant options by putting an \"x\" in the brackets -->\n\n- [X] Bug Fix\n- [ ] Feature Enhancement\n- [ ] Documentation Update\n- [ ] Code Refactoring\n- [ ] Other (please specify): \n\n## Proposed Changes\n<!-- List the specific changes made in this pull request -->\n\n- Modify `WORKDIR` in `build.dockerfile` as `WORKDIR /data/Resume-Matcher`. This make the `find_path()` finds the repo folder as cwd.\n- \n- \n\n## Screenshots / Code Snippets (if applicable)\n<!-- Include any relevant screenshots or code snippets that help visualize the changes made -->\n\n```\nFROM python:3.11.0-slim\nWORKDIR /data/Resume-Matcher\nCOPY . .\nRUN apt-get update\nRUN apt-get install -y build-essential python-dev git\nRUN pip install -U pip setuptools wheel\nRUN pip install -r requirements.txt\nRUN python run_first.py\nENTRYPOINT [ \"streamlit\", \"run\", \"streamlit_app.py\"]\n\nEXPOSE 8501\n```\n\n\n## How to Test\n<!-- Provide step-by-step instructions or a checklist for testing the changes in this pull request -->\n\n1. Run `docker-compose up`.\n2. Open browser to access streamlit app.\n3. Keywords and similarity scores are shown up.\n\n## Checklist\n<!-- Put an \"x\" in the brackets for the items that apply to this pull request -->\n\n- [ ] The code compiles successfully without any errors or warnings\n- [X] The changes have been tested and verified\n- [ ] The documentation has been updated (if applicable)\n- [ ] The changes follow the project's coding guidelines and best practices\n- [X] The commit messages are descriptive and follow the project's guidelines\n- [ ] All tests (if applicable) pass successfully\n- [ ] This pull request has been linked to the related issue (if applicable)\n\n## Additional Information\n<!-- Add any other information about the pull request that you think might be helpful -->\n\n",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "state",
          "value": "open",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": "build.dockerfile",
          "qualifier": "files"
        },
        {
          "objectId": "Yichao Cai",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "build.dockerfile",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Yichao Cai",
          "qualifier": "has-participant"
        },
        {
          "objectId": "e4269c6b0fc8bdd72f26377803bdf13052f5a527",
          "qualifier": "commits"
        },
        {
          "objectId": "7991881c04add6d20a52109df0bf0d114b1d7709",
          "qualifier": "is-merged-with"
        },
        {
          "objectId": "e4269c6b0fc8bdd72f26377803bdf13052f5a527",
          "qualifier": "formalises"
        }
      ],
      "id": "131"
    },
    {
      "type": "pull_request",
      "attributes": [
        {
          "name": "title",
          "value": "Removed circular dependancy of qdrant-client",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "description",
          "value": "## Pull Request Title\r\n<!-- Removed circular dependancy of qdrant-client -->\r\n\r\n## Related Issue\r\n<!--#128 -->\r\n\r\n## Description\r\n<!-- Changed the requirements.txt and checked the functioning. Working perfectly in remote. -->\r\n\r\n## Type\r\n<!-- Check the relevant options by putting an \"x\" in the brackets -->\r\n\r\n- [X] Bug Fix\r\n- [ ] Feature Enhancement\r\n- [ ] Documentation Update\r\n- [ ] Code Refactoring\r\n- [ ] Other (please specify): \r\n\r\n## Proposed Changes\r\n<!-- List the specific changes made in this pull request -->\r\n\r\n- Changed the long range of version dependancy cohere \r\n- Changed the qdrant-cient version dependency to the latest version which works with urllib-2.0.3\r\n- \r\n\r\n## Checklist\r\n<!-- Put an \"x\" in the brackets for the items that apply to this pull request -->\r\n\r\n- [X] The code compiles successfully without any errors or warnings\r\n- [ X] The changes have been tested and verified\r\n- [ ] The documentation has been updated (if applicable)\r\n- [X] The changes follow the project's coding guidelines and best practices\r\n- [X] The commit messages are descriptive and follow the project's guidelines\r\n- [X] All tests (if applicable) pass successfully\r\n- [X] This pull request has been linked to the related issue (if applicable)\r\n\r\n\r\n",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "state",
          "value": "open",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": "requirements.txt",
          "qualifier": "files"
        },
        {
          "objectId": "sriramr244",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "requirements.txt",
          "qualifier": "aggregates"
        },
        {
          "objectId": "sriramr244",
          "qualifier": "has-participant"
        },
        {
          "objectId": "e129e2ad6e6187a19804c5a054efb6df7988752b",
          "qualifier": "commits"
        },
        {
          "objectId": "41ffed2fba371cc032c251ca394262b2f38bbaac",
          "qualifier": "commits"
        },
        {
          "objectId": "0b54ffefb4d23a14906d4e36fd4b8013d04a19ed",
          "qualifier": "is-merged-with"
        },
        {
          "objectId": "e129e2ad6e6187a19804c5a054efb6df7988752b",
          "qualifier": "formalises"
        },
        {
          "objectId": "41ffed2fba371cc032c251ca394262b2f38bbaac",
          "qualifier": "formalises"
        }
      ],
      "id": "129"
    },
    {
      "type": "pull_request",
      "attributes": [
        {
          "name": "title",
          "value": "Fix: updated the readme with pyenv and docs links.",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "description",
          "value": "## Pull Request Title\r\n<!-- Provide a concise and descriptive title for the pull request -->\r\nUpdated the Readme with proper links and tech stack changes\r\n\r\n## Related Issue\r\n<!-- If this pull request is related to an issue, please link it here using the \"#\" symbol followed by the issue number (e.g., #123) -->\r\n\r\n## Description\r\n<!-- Describe the changes made in this pull request. What problem does it solve or what feature does it add/modify? -->\r\nUpdate the badges in the tech stack section. \r\n## Type\r\n<!-- Check the relevant options by putting an \"x\" in the brackets -->\r\n\r\n- [ ] Bug Fix\r\n- [ ] Feature Enhancement\r\n- [x] Documentation Update\r\n- [ ] Code Refactoring\r\n- [ ] Other (please specify): \r\n\r\n## Proposed Changes\r\n<!-- List the specific changes made in this pull request -->\r\n\r\n- \r\n- \r\n- \r\n\r\n## Screenshots / Code Snippets (if applicable)\r\n<!-- Include any relevant screenshots or code snippets that help visualize the changes made -->\r\n\r\n## How to Test\r\n<!-- Provide step-by-step instructions or a checklist for testing the changes in this pull request -->\r\n\r\n1. \r\n2. \r\n3. \r\n\r\n## Checklist\r\n<!-- Put an \"x\" in the brackets for the items that apply to this pull request -->\r\n\r\n- [x] The code compiles successfully without any errors or warnings\r\n- [ ] The changes have been tested and verified\r\n- [x] The documentation has been updated (if applicable)\r\n- [ ] The changes follow the project's coding guidelines and best practices\r\n- [ ] The commit messages are descriptive and follow the project's guidelines\r\n- [ ] All tests (if applicable) pass successfully\r\n- [ ] This pull request has been linked to the related issue (if applicable)\r\n\r\n## Additional Information\r\n<!-- Add any other information about the pull request that you think might be helpful -->\r\n\r\n",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "state",
          "value": "open",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": "README.md",
          "qualifier": "files"
        },
        {
          "objectId": "Saurabh Rai",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "README.md",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Saurabh Rai",
          "qualifier": "has-participant"
        },
        {
          "objectId": "a845626f20b5e598341369f1cb1758d1829287ef",
          "qualifier": "commits"
        },
        {
          "objectId": "daee36063d45fe488fc2eac7e8e6fec55d5dd6f0",
          "qualifier": "is-merged-with"
        },
        {
          "objectId": "a845626f20b5e598341369f1cb1758d1829287ef",
          "qualifier": "formalises"
        }
      ],
      "id": "127"
    },
    {
      "type": "user",
      "attributes": [
        {
          "name": "username",
          "value": "ILB-96",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "rank",
          "value": "CONTRIBUTOR",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "is-bot",
          "value": "False",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "rank",
          "value": "NONE",
          "time": "2025-05-26T13:06:34Z"
        }
      ],
      "relationships": [
        {
          "objectId": "Israel Barmack",
          "qualifier": "name"
        }
      ],
      "id": "Israel Barmack"
    },
    {
      "type": "pull_request",
      "attributes": [
        {
          "name": "title",
          "value": "Formatting: Initialize modules folders.",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "description",
          "value": "## Pull Request Title\r\nInitialize Modules Folders\r\n\r\n## Related Issue\r\nNone\r\n\r\n## Description\r\nChanged the way functions, classes and files are imported.\r\nImproves readability and reduces naming duplications.\r\n\r\n## Type\r\n<!-- Check the relevant options by putting an \"x\" in the brackets -->\r\n\r\n- [ ] Bug Fix\r\n- [ ] Feature Enhancement\r\n- [ ] Documentation Update\r\n- [x] Code Refactoring\r\n- [ ] Other (please specify): \r\n\r\n## Proposed Changes\r\n<!-- List the specific changes made in this pull request -->\r\n- Created __init__.py in folders to initialize the folders as modules.\r\n- Importing for files with a single function or a single class can be done directly by importing the folder\r\n- No need to go all the way to the root folder everytime you import a module from your current folder or it's sub folders\r\n\r\n## Screenshots / Code Snippets (if applicable)\r\nN/A\r\n\r\n## How to Test\r\nno feature changes, the app is running as before without any unfound modules errors\r\n\r\n## Checklist\r\n<!-- Put an \"x\" in the brackets for the items that apply to this pull request -->\r\n\r\n- [x] The code compiles successfully without any errors or warnings\r\n- [x] The changes have been tested and verified\r\n- [x] The documentation has been updated (if applicable)\r\n- [x] The changes follow the project's coding guidelines and best practices\r\n- [x] The commit messages are descriptive and follow the project's guidelines\r\n- [x] All tests (if applicable) pass successfully\r\n- [x] This pull request has been linked to the related issue (if applicable)\r\n\r\n## Additional Information\r\nProbably as the code and number of contributers grows you want to more strictly follow PEP8 guidelines and use the pre-commit library with a linter.",
          "time": "1970-01-01 00:00:00"
        },
        {
          "name": "state",
          "value": "open",
          "time": "1970-01-01 00:00:00"
        }
      ],
      "relationships": [
        {
          "objectId": "__init__.py",
          "qualifier": "files"
        },
        {
          "objectId": "run_first.py",
          "qualifier": "files"
        },
        {
          "objectId": "scripts/Extractor.py",
          "qualifier": "files"
        },
        {
          "objectId": "scripts/JobDescriptionProcessor.py",
          "qualifier": "files"
        },
        {
          "objectId": "scripts/ResumeProcessor.py",
          "qualifier": "files"
        },
        {
          "objectId": "scripts/__init__.py",
          "qualifier": "files"
        },
        {
          "objectId": "scripts/parsers/__init__.py",
          "qualifier": "files"
        },
        {
          "objectId": "scripts/similarity/__init__.py",
          "qualifier": "files"
        },
        {
          "objectId": "scripts/utils/__init__.py",
          "qualifier": "files"
        },
        {
          "objectId": "streamlit_app.py",
          "qualifier": "files"
        },
        {
          "objectId": "streamlit_second.py",
          "qualifier": "files"
        },
        {
          "objectId": "Israel Barmack",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "__init__.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "run_first.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "scripts/Extractor.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "scripts/JobDescriptionProcessor.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "scripts/ResumeProcessor.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "scripts/__init__.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "scripts/parsers/__init__.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "scripts/similarity/__init__.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "scripts/utils/__init__.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "streamlit_app.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "streamlit_second.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Israel Barmack",
          "qualifier": "has-participant"
        },
        {
          "objectId": "f2b39756dedf3e877a0ec40646fcc9384d0dac18",
          "qualifier": "commits"
        },
        {
          "objectId": "bf5cfd574d1b2bcd3224dd93b83b38bc66007348",
          "qualifier": "is-merged-with"
        },
        {
          "objectId": "f2b39756dedf3e877a0ec40646fcc9384d0dac18",
          "qualifier": "formalises"
        }
      ],
      "id": "126"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "Progress/Keywords.py",
          "time": "2020-06-03T01:15:54Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2020-06-03T01:15:54Z"
        },
        {
          "name": "theta_1",
          "value": "0",
          "time": "2020-06-03T01:15:54Z"
        },
        {
          "name": "theta_2",
          "value": "0",
          "time": "2020-06-03T01:15:54Z"
        },
        {
          "name": "N_1",
          "value": "0",
          "time": "2020-06-03T01:15:54Z"
        },
        {
          "name": "N_2",
          "value": "0",
          "time": "2020-06-03T01:15:54Z"
        },
        {
          "name": "loc",
          "value": "0",
          "time": "2020-06-03T01:15:54Z"
        },
        {
          "name": "lloc",
          "value": "0",
          "time": "2020-06-03T01:15:54Z"
        },
        {
          "name": "sloc",
          "value": "0",
          "time": "2020-06-03T01:15:54Z"
        },
        {
          "name": "cloc",
          "value": "0",
          "time": "2020-06-03T01:15:54Z"
        },
        {
          "name": "dloc",
          "value": "0",
          "time": "2020-06-03T01:15:54Z"
        },
        {
          "name": "blank_lines",
          "value": "0",
          "time": "2020-06-03T01:15:54Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2020-06-03T01:15:54Z"
        },
        {
          "name": "loc",
          "value": "3",
          "time": "2020-06-18T18:10:14Z"
        },
        {
          "name": "lloc",
          "value": "3",
          "time": "2020-06-18T18:10:14Z"
        },
        {
          "name": "sloc",
          "value": "3",
          "time": "2020-06-18T18:10:14Z"
        },
        {
          "name": "loc",
          "value": "9",
          "time": "2020-06-18T19:40:51Z"
        },
        {
          "name": "lloc",
          "value": "6",
          "time": "2020-06-18T19:40:51Z"
        },
        {
          "name": "sloc",
          "value": "6",
          "time": "2020-06-18T19:40:51Z"
        },
        {
          "name": "cloc",
          "value": "1",
          "time": "2020-06-18T19:40:51Z"
        },
        {
          "name": "blank_lines",
          "value": "3",
          "time": "2020-06-18T19:40:51Z"
        },
        {
          "name": "loc",
          "value": "8",
          "time": "2020-07-02T05:01:44Z"
        },
        {
          "name": "lloc",
          "value": "5",
          "time": "2020-07-02T05:01:44Z"
        },
        {
          "name": "sloc",
          "value": "5",
          "time": "2020-07-02T05:01:44Z"
        },
        {
          "name": "blank_lines",
          "value": "2",
          "time": "2020-07-02T05:01:44Z"
        },
        {
          "name": "pylint_score",
          "value": "0.2",
          "time": "2020-07-02T05:01:44Z"
        }
      ],
      "relationships": [
        {
          "objectId": "srbhr",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "41f940bbe877608fb04a81a4e6469c4f3a1e203a",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "Progress/Keywords.py"
    },
    {
      "type": "commit",
      "attributes": [
        {
          "name": "message",
          "value": "Updating Progress",
          "time": "2020-06-03T01:15:54Z"
        },
        {
          "name": "description",
          "value": "",
          "time": "2020-06-03T01:15:54Z"
        },
        {
          "name": "to",
          "value": "['Resume-Matcher:(HEAD detached at 004b8a0)', 'Resume-Matcher:main']",
          "time": "2020-06-03T01:15:54Z"
        }
      ],
      "relationships": [
        {
          "objectId": "Progress/Keywords.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Progress/creating_patterns.ipynb",
          "qualifier": "aggregates"
        },
        {
          "objectId": "848dd9e3dc98dbfcab5bb86a1cb8567786f31c1c",
          "qualifier": "is-child-of"
        },
        {
          "objectId": "1.0",
          "qualifier": "commit_mi"
        },
        {
          "objectId": "srbhr",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "0.0",
          "qualifier": "commit_pylint"
        }
      ],
      "id": "3071e17d3625214bcaec418b7e1e005186d80597"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "rule_based_matching.py",
          "time": "2020-06-18T17:18:24Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2020-06-18T17:18:24Z"
        },
        {
          "name": "theta_1",
          "value": "1",
          "time": "2020-06-18T17:18:24Z"
        },
        {
          "name": "theta_2",
          "value": "2",
          "time": "2020-06-18T17:18:24Z"
        },
        {
          "name": "N_1",
          "value": "1",
          "time": "2020-06-18T17:18:24Z"
        },
        {
          "name": "N_2",
          "value": "2",
          "time": "2020-06-18T17:18:24Z"
        },
        {
          "name": "loc",
          "value": "19",
          "time": "2020-06-18T17:18:24Z"
        },
        {
          "name": "lloc",
          "value": "10",
          "time": "2020-06-18T17:18:24Z"
        },
        {
          "name": "sloc",
          "value": "9",
          "time": "2020-06-18T17:18:24Z"
        },
        {
          "name": "cloc",
          "value": "2",
          "time": "2020-06-18T17:18:24Z"
        },
        {
          "name": "dloc",
          "value": "3",
          "time": "2020-06-18T17:18:24Z"
        },
        {
          "name": "blank_lines",
          "value": "5",
          "time": "2020-06-18T17:18:24Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2020-06-18T17:18:24Z"
        },
        {
          "name": "loc",
          "value": "21",
          "time": "2020-06-18T18:10:14Z"
        },
        {
          "name": "lloc",
          "value": "11",
          "time": "2020-06-18T18:10:14Z"
        },
        {
          "name": "sloc",
          "value": "10",
          "time": "2020-06-18T18:10:14Z"
        },
        {
          "name": "dloc",
          "value": "4",
          "time": "2020-06-18T18:10:14Z"
        }
      ],
      "relationships": [
        {
          "objectId": "srbhr",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "b5f93a1765d4b545846165699babe8b4f7010cc1",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "rule_based_matching.py"
    },
    {
      "type": "commit",
      "attributes": [
        {
          "name": "message",
          "value": "Updating Progress",
          "time": "2020-06-18T17:18:24Z"
        },
        {
          "name": "description",
          "value": "",
          "time": "2020-06-18T17:18:24Z"
        },
        {
          "name": "to",
          "value": "['Resume-Matcher:(HEAD detached at 004b8a0)', 'Resume-Matcher:main']",
          "time": "2020-06-18T17:18:24Z"
        }
      ],
      "relationships": [
        {
          "objectId": "rule_based_matching.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "09bd471a8051cc91dd5b61582a02519a2ae44647",
          "qualifier": "is-child-of"
        },
        {
          "objectId": "1.0",
          "qualifier": "commit_mi"
        },
        {
          "objectId": "srbhr",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "0.0",
          "qualifier": "commit_pylint"
        }
      ],
      "id": "01d86e10a06c1d9f35238e6557bc85dda8d6fc1a"
    },
    {
      "type": "commit",
      "attributes": [
        {
          "name": "message",
          "value": "Updating Progress",
          "time": "2020-06-18T18:10:14Z"
        },
        {
          "name": "description",
          "value": "",
          "time": "2020-06-18T18:10:14Z"
        },
        {
          "name": "to",
          "value": "['Resume-Matcher:(HEAD detached at 004b8a0)', 'Resume-Matcher:main']",
          "time": "2020-06-18T18:10:14Z"
        }
      ],
      "relationships": [
        {
          "objectId": "Progress/Keywords.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "rule_based_matching.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "spacy_cleaning.ipynb",
          "qualifier": "aggregates"
        },
        {
          "objectId": "01d86e10a06c1d9f35238e6557bc85dda8d6fc1a",
          "qualifier": "is-child-of"
        },
        {
          "objectId": "1.0",
          "qualifier": "commit_mi"
        },
        {
          "objectId": "srbhr",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "0.0",
          "qualifier": "commit_pylint"
        }
      ],
      "id": "b5f93a1765d4b545846165699babe8b4f7010cc1"
    },
    {
      "type": "commit",
      "attributes": [
        {
          "name": "message",
          "value": "Updating Progress",
          "time": "2020-06-18T19:40:51Z"
        },
        {
          "name": "description",
          "value": "",
          "time": "2020-06-18T19:40:51Z"
        },
        {
          "name": "to",
          "value": "['Resume-Matcher:(HEAD detached at 004b8a0)', 'Resume-Matcher:main']",
          "time": "2020-06-18T19:40:51Z"
        }
      ],
      "relationships": [
        {
          "objectId": "Progress/Keywords.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "b5f93a1765d4b545846165699babe8b4f7010cc1",
          "qualifier": "is-child-of"
        },
        {
          "objectId": "0.5",
          "qualifier": "commit_mi"
        },
        {
          "objectId": "srbhr",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "0.0",
          "qualifier": "commit_pylint"
        }
      ],
      "id": "807e81fe23ccfc32497c1bd43bf2fb5e429d06eb"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "Progress/first_app.py",
          "time": "2020-06-19T12:14:04Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2020-06-19T12:14:04Z"
        },
        {
          "name": "theta_1",
          "value": "0",
          "time": "2020-06-19T12:14:04Z"
        },
        {
          "name": "theta_2",
          "value": "0",
          "time": "2020-06-19T12:14:04Z"
        },
        {
          "name": "N_1",
          "value": "0",
          "time": "2020-06-19T12:14:04Z"
        },
        {
          "name": "N_2",
          "value": "0",
          "time": "2020-06-19T12:14:04Z"
        },
        {
          "name": "loc",
          "value": "0",
          "time": "2020-06-19T12:14:04Z"
        },
        {
          "name": "lloc",
          "value": "0",
          "time": "2020-06-19T12:14:04Z"
        },
        {
          "name": "sloc",
          "value": "0",
          "time": "2020-06-19T12:14:04Z"
        },
        {
          "name": "cloc",
          "value": "0",
          "time": "2020-06-19T12:14:04Z"
        },
        {
          "name": "dloc",
          "value": "0",
          "time": "2020-06-19T12:14:04Z"
        },
        {
          "name": "blank_lines",
          "value": "0",
          "time": "2020-06-19T12:14:04Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2020-06-19T12:14:04Z"
        }
      ],
      "relationships": [
        {
          "objectId": "srbhr",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "2c6791a73fcbb385c4596c8a545880fd54a525f7",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "Progress/first_app.py"
    },
    {
      "type": "commit",
      "attributes": [
        {
          "name": "message",
          "value": "Updating Progress",
          "time": "2020-06-19T12:14:04Z"
        },
        {
          "name": "description",
          "value": "",
          "time": "2020-06-19T12:14:04Z"
        },
        {
          "name": "to",
          "value": "['Resume-Matcher:(HEAD detached at 004b8a0)', 'Resume-Matcher:main']",
          "time": "2020-06-19T12:14:04Z"
        }
      ],
      "relationships": [
        {
          "objectId": "Progress/first_app.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "807e81fe23ccfc32497c1bd43bf2fb5e429d06eb",
          "qualifier": "is-child-of"
        },
        {
          "objectId": "0.6666666666666666",
          "qualifier": "commit_mi"
        },
        {
          "objectId": "srbhr",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "0.0",
          "qualifier": "commit_pylint"
        }
      ],
      "id": "2c6791a73fcbb385c4596c8a545880fd54a525f7"
    },
    {
      "type": "commit",
      "attributes": [
        {
          "name": "message",
          "value": "Updating Progress",
          "time": "2020-07-02T05:01:44Z"
        },
        {
          "name": "description",
          "value": "",
          "time": "2020-07-02T05:01:44Z"
        },
        {
          "name": "to",
          "value": "['Resume-Matcher:(HEAD detached at 004b8a0)', 'Resume-Matcher:main']",
          "time": "2020-07-02T05:01:44Z"
        }
      ],
      "relationships": [
        {
          "objectId": "Progress/Keywords.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "e32157ca753696a50e6fe39c3557987d9cd4fa03",
          "qualifier": "is-child-of"
        },
        {
          "objectId": "1.0",
          "qualifier": "commit_mi"
        },
        {
          "objectId": "srbhr",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "0.06666666666666667",
          "qualifier": "commit_pylint"
        }
      ],
      "id": "41f940bbe877608fb04a81a4e6469c4f3a1e203a"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "Progress/Distill.py",
          "time": "2020-09-05T22:12:45Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2020-09-05T22:12:45Z"
        },
        {
          "name": "theta_1",
          "value": "2",
          "time": "2020-09-05T22:12:45Z"
        },
        {
          "name": "theta_2",
          "value": "4",
          "time": "2020-09-05T22:12:45Z"
        },
        {
          "name": "N_1",
          "value": "2",
          "time": "2020-09-05T22:12:45Z"
        },
        {
          "name": "N_2",
          "value": "4",
          "time": "2020-09-05T22:12:45Z"
        },
        {
          "name": "loc",
          "value": "57",
          "time": "2020-09-05T22:12:45Z"
        },
        {
          "name": "lloc",
          "value": "31",
          "time": "2020-09-05T22:12:45Z"
        },
        {
          "name": "sloc",
          "value": "30",
          "time": "2020-09-05T22:12:45Z"
        },
        {
          "name": "cloc",
          "value": "9",
          "time": "2020-09-05T22:12:45Z"
        },
        {
          "name": "dloc",
          "value": "4",
          "time": "2020-09-05T22:12:45Z"
        },
        {
          "name": "blank_lines",
          "value": "14",
          "time": "2020-09-05T22:12:45Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2020-09-05T22:12:45Z"
        },
        {
          "name": "pylint_score",
          "value": "0.1",
          "time": "2020-09-11T20:58:55Z"
        }
      ],
      "relationships": [
        {
          "objectId": "srbhr",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "082a012e6fa999da52c329ae777c96c9874be736",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "Progress/Distill.py"
    },
    {
      "type": "commit",
      "attributes": [
        {
          "name": "message",
          "value": "Updating Progress",
          "time": "2020-09-05T22:12:45Z"
        },
        {
          "name": "description",
          "value": "",
          "time": "2020-09-05T22:12:45Z"
        },
        {
          "name": "to",
          "value": "['Resume-Matcher:(HEAD detached at 004b8a0)', 'Resume-Matcher:main']",
          "time": "2020-09-05T22:12:45Z"
        }
      ],
      "relationships": [
        {
          "objectId": "Progress/Cleaner Notebook.ipynb",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Progress/Distill.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "6b1cb18dff87d78a3601cdab9ef482395b3c7bd1",
          "qualifier": "is-child-of"
        },
        {
          "objectId": "0.9666791541710411",
          "qualifier": "commit_mi"
        },
        {
          "objectId": "srbhr",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "0.07500000000000001",
          "qualifier": "commit_pylint"
        }
      ],
      "id": "bdd3e9e46b3a91cf6e73b709691c5ff7340b96df"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "Distill.py",
          "time": "2020-09-07T20:21:51Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2020-09-07T20:21:51Z"
        },
        {
          "name": "theta_1",
          "value": "2",
          "time": "2020-09-07T20:21:51Z"
        },
        {
          "name": "theta_2",
          "value": "4",
          "time": "2020-09-07T20:21:51Z"
        },
        {
          "name": "N_1",
          "value": "2",
          "time": "2020-09-07T20:21:51Z"
        },
        {
          "name": "N_2",
          "value": "4",
          "time": "2020-09-07T20:21:51Z"
        },
        {
          "name": "loc",
          "value": "57",
          "time": "2020-09-07T20:21:51Z"
        },
        {
          "name": "lloc",
          "value": "31",
          "time": "2020-09-07T20:21:51Z"
        },
        {
          "name": "sloc",
          "value": "30",
          "time": "2020-09-07T20:21:51Z"
        },
        {
          "name": "cloc",
          "value": "9",
          "time": "2020-09-07T20:21:51Z"
        },
        {
          "name": "dloc",
          "value": "4",
          "time": "2020-09-07T20:21:51Z"
        },
        {
          "name": "blank_lines",
          "value": "14",
          "time": "2020-09-07T20:21:51Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2020-09-07T20:21:51Z"
        },
        {
          "name": "theta_1",
          "value": "0",
          "time": "2020-09-17T14:39:53Z"
        },
        {
          "name": "theta_2",
          "value": "0",
          "time": "2020-09-17T14:39:53Z"
        },
        {
          "name": "N_1",
          "value": "0",
          "time": "2020-09-17T14:39:53Z"
        },
        {
          "name": "N_2",
          "value": "0",
          "time": "2020-09-17T14:39:53Z"
        },
        {
          "name": "loc",
          "value": "0",
          "time": "2020-09-17T14:39:53Z"
        },
        {
          "name": "lloc",
          "value": "0",
          "time": "2020-09-17T14:39:53Z"
        },
        {
          "name": "sloc",
          "value": "0",
          "time": "2020-09-17T14:39:53Z"
        },
        {
          "name": "cloc",
          "value": "0",
          "time": "2020-09-17T14:39:53Z"
        },
        {
          "name": "dloc",
          "value": "0",
          "time": "2020-09-17T14:39:53Z"
        },
        {
          "name": "blank_lines",
          "value": "0",
          "time": "2020-09-17T14:39:53Z"
        }
      ],
      "relationships": [
        {
          "objectId": "srbhr",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "b2c8d7cdb7f618a9306c0c4e154c21dddb6c364d",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "Distill.py"
    },
    {
      "type": "commit",
      "attributes": [
        {
          "name": "message",
          "value": "Updating Progress",
          "time": "2020-09-07T20:21:51Z"
        },
        {
          "name": "description",
          "value": "",
          "time": "2020-09-07T20:21:51Z"
        },
        {
          "name": "to",
          "value": "['Resume-Matcher:(HEAD detached at 004b8a0)', 'Resume-Matcher:main']",
          "time": "2020-09-07T20:21:51Z"
        }
      ],
      "relationships": [
        {
          "objectId": "Distill.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Progress/resuming Work_1.ipynb",
          "qualifier": "aggregates"
        },
        {
          "objectId": "97491b3dfaaffc70f2a9b014436077c18df44872",
          "qualifier": "is-child-of"
        },
        {
          "objectId": "0.9466866466736658",
          "qualifier": "commit_mi"
        },
        {
          "objectId": "srbhr",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "0.08",
          "qualifier": "commit_pylint"
        }
      ],
      "id": "f14d939da33414b108ed69fcc5be9768426f469b"
    },
    {
      "type": "commit",
      "attributes": [
        {
          "name": "message",
          "value": "Updating Progress",
          "time": "2020-09-11T20:58:55Z"
        },
        {
          "name": "description",
          "value": "",
          "time": "2020-09-11T20:58:55Z"
        },
        {
          "name": "to",
          "value": "['Resume-Matcher:(HEAD detached at 004b8a0)', 'Resume-Matcher:main']",
          "time": "2020-09-11T20:58:55Z"
        }
      ],
      "relationships": [
        {
          "objectId": "Progress/Distill.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Progress/Untitled1.ipynb",
          "qualifier": "aggregates"
        },
        {
          "objectId": "6022d9359dd4398065b04e5d28d8688735932e22",
          "qualifier": "is-child-of"
        },
        {
          "objectId": "0.9466866466736658",
          "qualifier": "commit_mi"
        },
        {
          "objectId": "srbhr",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "0.08",
          "qualifier": "commit_pylint"
        }
      ],
      "id": "082a012e6fa999da52c329ae777c96c9874be736"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "Progress/Cleaner.py",
          "time": "2020-09-13T15:51:15Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2020-09-13T15:51:15Z"
        },
        {
          "name": "theta_1",
          "value": "1",
          "time": "2020-09-13T15:51:15Z"
        },
        {
          "name": "theta_2",
          "value": "2",
          "time": "2020-09-13T15:51:15Z"
        },
        {
          "name": "N_1",
          "value": "1",
          "time": "2020-09-13T15:51:15Z"
        },
        {
          "name": "N_2",
          "value": "2",
          "time": "2020-09-13T15:51:15Z"
        },
        {
          "name": "loc",
          "value": "55",
          "time": "2020-09-13T15:51:15Z"
        },
        {
          "name": "lloc",
          "value": "34",
          "time": "2020-09-13T15:51:15Z"
        },
        {
          "name": "sloc",
          "value": "31",
          "time": "2020-09-13T15:51:15Z"
        },
        {
          "name": "cloc",
          "value": "2",
          "time": "2020-09-13T15:51:15Z"
        },
        {
          "name": "dloc",
          "value": "10",
          "time": "2020-09-13T15:51:15Z"
        },
        {
          "name": "blank_lines",
          "value": "12",
          "time": "2020-09-13T15:51:15Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2020-09-13T15:51:15Z"
        }
      ],
      "relationships": [
        {
          "objectId": "srbhr",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "dcda5f00f20bc7a6916eefbad6a99c0d900545b3",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "Progress/Cleaner.py"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "Progress/Similar.py",
          "time": "2020-09-13T15:51:15Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2020-09-13T15:51:15Z"
        },
        {
          "name": "theta_1",
          "value": "0",
          "time": "2020-09-13T15:51:15Z"
        },
        {
          "name": "theta_2",
          "value": "0",
          "time": "2020-09-13T15:51:15Z"
        },
        {
          "name": "N_1",
          "value": "0",
          "time": "2020-09-13T15:51:15Z"
        },
        {
          "name": "N_2",
          "value": "0",
          "time": "2020-09-13T15:51:15Z"
        },
        {
          "name": "loc",
          "value": "2",
          "time": "2020-09-13T15:51:15Z"
        },
        {
          "name": "lloc",
          "value": "2",
          "time": "2020-09-13T15:51:15Z"
        },
        {
          "name": "sloc",
          "value": "2",
          "time": "2020-09-13T15:51:15Z"
        },
        {
          "name": "cloc",
          "value": "0",
          "time": "2020-09-13T15:51:15Z"
        },
        {
          "name": "dloc",
          "value": "0",
          "time": "2020-09-13T15:51:15Z"
        },
        {
          "name": "blank_lines",
          "value": "0",
          "time": "2020-09-13T15:51:15Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2020-09-13T15:51:15Z"
        },
        {
          "name": "theta_1",
          "value": "3",
          "time": "2020-09-13T18:05:21Z"
        },
        {
          "name": "theta_2",
          "value": "13",
          "time": "2020-09-13T18:05:21Z"
        },
        {
          "name": "N_1",
          "value": "8",
          "time": "2020-09-13T18:05:21Z"
        },
        {
          "name": "N_2",
          "value": "16",
          "time": "2020-09-13T18:05:21Z"
        },
        {
          "name": "loc",
          "value": "14",
          "time": "2020-09-13T18:05:21Z"
        },
        {
          "name": "lloc",
          "value": "9",
          "time": "2020-09-13T18:05:21Z"
        },
        {
          "name": "sloc",
          "value": "9",
          "time": "2020-09-13T18:05:21Z"
        },
        {
          "name": "cloc",
          "value": "2",
          "time": "2020-09-13T18:05:21Z"
        },
        {
          "name": "blank_lines",
          "value": "3",
          "time": "2020-09-13T18:05:21Z"
        },
        {
          "name": "theta_2",
          "value": "10",
          "time": "2020-09-15T02:23:15Z"
        },
        {
          "name": "N_1",
          "value": "5",
          "time": "2020-09-15T02:23:15Z"
        },
        {
          "name": "N_2",
          "value": "10",
          "time": "2020-09-15T02:23:15Z"
        },
        {
          "name": "loc",
          "value": "13",
          "time": "2020-09-15T02:23:15Z"
        },
        {
          "name": "blank_lines",
          "value": "4",
          "time": "2020-09-15T02:23:15Z"
        }
      ],
      "relationships": [
        {
          "objectId": "srbhr",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "715c51b89e9245ee48d1367c05c55b899fcf00c7",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "Progress/Similar.py"
    },
    {
      "type": "commit",
      "attributes": [
        {
          "name": "message",
          "value": "Updating Progress",
          "time": "2020-09-13T15:51:15Z"
        },
        {
          "name": "description",
          "value": "",
          "time": "2020-09-13T15:51:15Z"
        },
        {
          "name": "to",
          "value": "['Resume-Matcher:(HEAD detached at 004b8a0)', 'Resume-Matcher:main']",
          "time": "2020-09-13T15:51:15Z"
        }
      ],
      "relationships": [
        {
          "objectId": "Progress/Cleaner.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Progress/Similar.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Progress/Untitled1.ipynb",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Progress/testing_1.ipynb",
          "qualifier": "aggregates"
        },
        {
          "objectId": "7f8cff19937fadfe951d8c498ee47fa9db92abdc",
          "qualifier": "is-child-of"
        },
        {
          "objectId": "0.9467776265201228",
          "qualifier": "commit_mi"
        },
        {
          "objectId": "srbhr",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "0.14928571428571427",
          "qualifier": "commit_pylint"
        }
      ],
      "id": "dcda5f00f20bc7a6916eefbad6a99c0d900545b3"
    },
    {
      "type": "commit",
      "attributes": [
        {
          "name": "message",
          "value": "Updating Progress",
          "time": "2020-09-13T18:05:21Z"
        },
        {
          "name": "description",
          "value": "",
          "time": "2020-09-13T18:05:21Z"
        },
        {
          "name": "to",
          "value": "['Resume-Matcher:(HEAD detached at 004b8a0)', 'Resume-Matcher:main']",
          "time": "2020-09-13T18:05:21Z"
        }
      ],
      "relationships": [
        {
          "objectId": "Progress/Similar.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Progress/testing_notebook_2.ipynb",
          "qualifier": "aggregates"
        },
        {
          "objectId": "dcda5f00f20bc7a6916eefbad6a99c0d900545b3",
          "qualifier": "is-child-of"
        },
        {
          "objectId": "0.9316360449084529",
          "qualifier": "commit_mi"
        },
        {
          "objectId": "srbhr",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "0.14928571428571427",
          "qualifier": "commit_pylint"
        }
      ],
      "id": "688ce8f5afc967c2b558d3b406a8d54c0c183c9b"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "Progress/compute.py",
          "time": "2020-09-14T21:50:28Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2020-09-14T21:50:28Z"
        },
        {
          "name": "theta_1",
          "value": "1",
          "time": "2020-09-14T21:50:28Z"
        },
        {
          "name": "theta_2",
          "value": "4",
          "time": "2020-09-14T21:50:28Z"
        },
        {
          "name": "N_1",
          "value": "2",
          "time": "2020-09-14T21:50:28Z"
        },
        {
          "name": "N_2",
          "value": "4",
          "time": "2020-09-14T21:50:28Z"
        },
        {
          "name": "loc",
          "value": "38",
          "time": "2020-09-14T21:50:28Z"
        },
        {
          "name": "lloc",
          "value": "29",
          "time": "2020-09-14T21:50:28Z"
        },
        {
          "name": "sloc",
          "value": "30",
          "time": "2020-09-14T21:50:28Z"
        },
        {
          "name": "cloc",
          "value": "1",
          "time": "2020-09-14T21:50:28Z"
        },
        {
          "name": "dloc",
          "value": "0",
          "time": "2020-09-14T21:50:28Z"
        },
        {
          "name": "blank_lines",
          "value": "7",
          "time": "2020-09-14T21:50:28Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2020-09-14T21:50:28Z"
        },
        {
          "name": "pylint_score",
          "value": "0.31",
          "time": "2020-09-15T02:23:15Z"
        }
      ],
      "relationships": [
        {
          "objectId": "srbhr",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "715c51b89e9245ee48d1367c05c55b899fcf00c7",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "Progress/compute.py"
    },
    {
      "type": "commit",
      "attributes": [
        {
          "name": "message",
          "value": "Updating Progress",
          "time": "2020-09-14T21:50:28Z"
        },
        {
          "name": "description",
          "value": "",
          "time": "2020-09-14T21:50:28Z"
        },
        {
          "name": "to",
          "value": "['Resume-Matcher:(HEAD detached at 004b8a0)', 'Resume-Matcher:main']",
          "time": "2020-09-14T21:50:28Z"
        }
      ],
      "relationships": [
        {
          "objectId": "Progress/Data/JobDesc/Data Scientist.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Progress/Data/JobDesc/Web_dev_job.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Progress/compute.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "3b91d8efd3d65f646a20d5b8562432545af964ac",
          "qualifier": "is-child-of"
        },
        {
          "objectId": "0.9032879899606955",
          "qualifier": "commit_mi"
        },
        {
          "objectId": "srbhr",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "0.169375",
          "qualifier": "commit_pylint"
        }
      ],
      "id": "4052fd8e0fc7ae9f5b43b49b94b463a634bb6247"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "Progress/app.py",
          "time": "2020-09-15T02:23:15Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2020-09-15T02:23:15Z"
        },
        {
          "name": "theta_1",
          "value": "1",
          "time": "2020-09-15T02:23:15Z"
        },
        {
          "name": "theta_2",
          "value": "4",
          "time": "2020-09-15T02:23:15Z"
        },
        {
          "name": "N_1",
          "value": "2",
          "time": "2020-09-15T02:23:15Z"
        },
        {
          "name": "N_2",
          "value": "4",
          "time": "2020-09-15T02:23:15Z"
        },
        {
          "name": "loc",
          "value": "50",
          "time": "2020-09-15T02:23:15Z"
        },
        {
          "name": "lloc",
          "value": "39",
          "time": "2020-09-15T02:23:15Z"
        },
        {
          "name": "sloc",
          "value": "40",
          "time": "2020-09-15T02:23:15Z"
        },
        {
          "name": "cloc",
          "value": "1",
          "time": "2020-09-15T02:23:15Z"
        },
        {
          "name": "dloc",
          "value": "0",
          "time": "2020-09-15T02:23:15Z"
        },
        {
          "name": "blank_lines",
          "value": "9",
          "time": "2020-09-15T02:23:15Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2020-09-15T02:23:15Z"
        },
        {
          "name": "theta_1",
          "value": "5",
          "time": "2020-09-16T01:55:15Z"
        },
        {
          "name": "theta_2",
          "value": "15",
          "time": "2020-09-16T01:55:15Z"
        },
        {
          "name": "N_1",
          "value": "12",
          "time": "2020-09-16T01:55:15Z"
        },
        {
          "name": "N_2",
          "value": "24",
          "time": "2020-09-16T01:55:15Z"
        },
        {
          "name": "loc",
          "value": "180",
          "time": "2020-09-16T01:55:15Z"
        },
        {
          "name": "lloc",
          "value": "98",
          "time": "2020-09-16T01:55:15Z"
        },
        {
          "name": "sloc",
          "value": "132",
          "time": "2020-09-16T01:55:15Z"
        },
        {
          "name": "cloc",
          "value": "4",
          "time": "2020-09-16T01:55:15Z"
        },
        {
          "name": "blank_lines",
          "value": "44",
          "time": "2020-09-16T01:55:15Z"
        },
        {
          "name": "theta_2",
          "value": "11",
          "time": "2020-09-17T00:18:49Z"
        },
        {
          "name": "N_1",
          "value": "10",
          "time": "2020-09-17T00:18:49Z"
        },
        {
          "name": "N_2",
          "value": "20",
          "time": "2020-09-17T00:18:49Z"
        },
        {
          "name": "loc",
          "value": "135",
          "time": "2020-09-17T00:18:49Z"
        },
        {
          "name": "lloc",
          "value": "67",
          "time": "2020-09-17T00:18:49Z"
        },
        {
          "name": "sloc",
          "value": "99",
          "time": "2020-09-17T00:18:49Z"
        },
        {
          "name": "blank_lines",
          "value": "32",
          "time": "2020-09-17T00:18:49Z"
        },
        {
          "name": "pylint_score",
          "value": "0.392",
          "time": "2020-09-16T01:55:15Z"
        }
      ],
      "relationships": [
        {
          "objectId": "srbhr",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "1e15f522c9e77cd20a5773c2dcbb9b790bcb71a7",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "Progress/app.py"
    },
    {
      "type": "commit",
      "attributes": [
        {
          "name": "message",
          "value": "Updating Progress",
          "time": "2020-09-15T02:23:15Z"
        },
        {
          "name": "description",
          "value": "",
          "time": "2020-09-15T02:23:15Z"
        },
        {
          "name": "to",
          "value": "['Resume-Matcher:(HEAD detached at 004b8a0)', 'Resume-Matcher:main']",
          "time": "2020-09-15T02:23:15Z"
        }
      ],
      "relationships": [
        {
          "objectId": "Progress/Similar.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Progress/app.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Progress/compute.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Progress/testing_compute.ipynb",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Progress/topic_modelling_1.ipynb",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Progress/topic_modelling_resumes.ipynb",
          "qualifier": "aggregates"
        },
        {
          "objectId": "4052fd8e0fc7ae9f5b43b49b94b463a634bb6247",
          "qualifier": "is-child-of"
        },
        {
          "objectId": "0.8515035825774863",
          "qualifier": "commit_mi"
        },
        {
          "objectId": "srbhr",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "0.1847777777777778",
          "qualifier": "commit_pylint"
        }
      ],
      "id": "715c51b89e9245ee48d1367c05c55b899fcf00c7"
    },
    {
      "type": "commit",
      "attributes": [
        {
          "name": "message",
          "value": "Updating Progress",
          "time": "2020-09-16T01:55:15Z"
        },
        {
          "name": "description",
          "value": "",
          "time": "2020-09-16T01:55:15Z"
        },
        {
          "name": "to",
          "value": "['Resume-Matcher:(HEAD detached at 004b8a0)', 'Resume-Matcher:main']",
          "time": "2020-09-16T01:55:15Z"
        }
      ],
      "relationships": [
        {
          "objectId": "Progress/WordCloud.ipynb",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Progress/app.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Progress/testing_compute.ipynb",
          "qualifier": "aggregates"
        },
        {
          "objectId": "715c51b89e9245ee48d1367c05c55b899fcf00c7",
          "qualifier": "is-child-of"
        },
        {
          "objectId": "0.8334672909327989",
          "qualifier": "commit_mi"
        },
        {
          "objectId": "srbhr",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "0.19411111111111112",
          "qualifier": "commit_pylint"
        }
      ],
      "id": "91ea665f0e8fcde3ccf1fe9a1ffd44460c92805a"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "Progress/app2.py",
          "time": "2020-09-17T00:18:49Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2020-09-17T00:18:49Z"
        },
        {
          "name": "theta_1",
          "value": "0",
          "time": "2020-09-17T00:18:49Z"
        },
        {
          "name": "theta_2",
          "value": "0",
          "time": "2020-09-17T00:18:49Z"
        },
        {
          "name": "N_1",
          "value": "0",
          "time": "2020-09-17T00:18:49Z"
        },
        {
          "name": "N_2",
          "value": "0",
          "time": "2020-09-17T00:18:49Z"
        },
        {
          "name": "loc",
          "value": "62",
          "time": "2020-09-17T00:18:49Z"
        },
        {
          "name": "lloc",
          "value": "30",
          "time": "2020-09-17T00:18:49Z"
        },
        {
          "name": "sloc",
          "value": "38",
          "time": "2020-09-17T00:18:49Z"
        },
        {
          "name": "cloc",
          "value": "11",
          "time": "2020-09-17T00:18:49Z"
        },
        {
          "name": "dloc",
          "value": "0",
          "time": "2020-09-17T00:18:49Z"
        },
        {
          "name": "blank_lines",
          "value": "13",
          "time": "2020-09-17T00:18:49Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2020-09-17T00:18:49Z"
        },
        {
          "name": "theta_1",
          "value": "6",
          "time": "2020-09-17T03:23:59Z"
        },
        {
          "name": "theta_2",
          "value": "13",
          "time": "2020-09-17T03:23:59Z"
        },
        {
          "name": "N_1",
          "value": "11",
          "time": "2020-09-17T03:23:59Z"
        },
        {
          "name": "N_2",
          "value": "22",
          "time": "2020-09-17T03:23:59Z"
        },
        {
          "name": "loc",
          "value": "186",
          "time": "2020-09-17T03:23:59Z"
        },
        {
          "name": "lloc",
          "value": "102",
          "time": "2020-09-17T03:23:59Z"
        },
        {
          "name": "sloc",
          "value": "139",
          "time": "2020-09-17T03:23:59Z"
        },
        {
          "name": "cloc",
          "value": "7",
          "time": "2020-09-17T03:23:59Z"
        },
        {
          "name": "blank_lines",
          "value": "40",
          "time": "2020-09-17T03:23:59Z"
        },
        {
          "name": "theta_2",
          "value": "15",
          "time": "2020-09-17T14:28:49Z"
        },
        {
          "name": "N_1",
          "value": "12",
          "time": "2020-09-17T14:28:49Z"
        },
        {
          "name": "N_2",
          "value": "24",
          "time": "2020-09-17T14:28:49Z"
        },
        {
          "name": "loc",
          "value": "281",
          "time": "2020-09-17T14:28:49Z"
        },
        {
          "name": "lloc",
          "value": "127",
          "time": "2020-09-17T14:28:49Z"
        },
        {
          "name": "sloc",
          "value": "196",
          "time": "2020-09-17T14:28:49Z"
        },
        {
          "name": "cloc",
          "value": "19",
          "time": "2020-09-17T14:28:49Z"
        },
        {
          "name": "blank_lines",
          "value": "66",
          "time": "2020-09-17T14:28:49Z"
        },
        {
          "name": "pylint_score",
          "value": "0.364",
          "time": "2020-09-17T03:23:59Z"
        },
        {
          "name": "pylint_score",
          "value": "0.42300000000000004",
          "time": "2020-09-17T14:28:49Z"
        }
      ],
      "relationships": [
        {
          "objectId": "srbhr",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "0921e280eb047f7f24c8d3f31ea3e98cb8c32b20",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "Progress/app2.py"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "Progress/fileReader.py",
          "time": "2020-09-17T00:18:49Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2020-09-17T00:18:49Z"
        },
        {
          "name": "theta_1",
          "value": "1",
          "time": "2020-09-17T00:18:49Z"
        },
        {
          "name": "theta_2",
          "value": "4",
          "time": "2020-09-17T00:18:49Z"
        },
        {
          "name": "N_1",
          "value": "2",
          "time": "2020-09-17T00:18:49Z"
        },
        {
          "name": "N_2",
          "value": "4",
          "time": "2020-09-17T00:18:49Z"
        },
        {
          "name": "loc",
          "value": "63",
          "time": "2020-09-17T00:18:49Z"
        },
        {
          "name": "lloc",
          "value": "50",
          "time": "2020-09-17T00:18:49Z"
        },
        {
          "name": "sloc",
          "value": "50",
          "time": "2020-09-17T00:18:49Z"
        },
        {
          "name": "cloc",
          "value": "0",
          "time": "2020-09-17T00:18:49Z"
        },
        {
          "name": "dloc",
          "value": "0",
          "time": "2020-09-17T00:18:49Z"
        },
        {
          "name": "blank_lines",
          "value": "13",
          "time": "2020-09-17T00:18:49Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2020-09-17T00:18:49Z"
        }
      ],
      "relationships": [
        {
          "objectId": "srbhr",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "1e15f522c9e77cd20a5773c2dcbb9b790bcb71a7",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "Progress/fileReader.py"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "Progress/generate_wordcloud.py",
          "time": "2020-09-17T00:18:49Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2020-09-17T00:18:49Z"
        },
        {
          "name": "theta_1",
          "value": "0",
          "time": "2020-09-17T00:18:49Z"
        },
        {
          "name": "theta_2",
          "value": "0",
          "time": "2020-09-17T00:18:49Z"
        },
        {
          "name": "N_1",
          "value": "0",
          "time": "2020-09-17T00:18:49Z"
        },
        {
          "name": "N_2",
          "value": "0",
          "time": "2020-09-17T00:18:49Z"
        },
        {
          "name": "loc",
          "value": "15",
          "time": "2020-09-17T00:18:49Z"
        },
        {
          "name": "lloc",
          "value": "9",
          "time": "2020-09-17T00:18:49Z"
        },
        {
          "name": "sloc",
          "value": "12",
          "time": "2020-09-17T00:18:49Z"
        },
        {
          "name": "cloc",
          "value": "0",
          "time": "2020-09-17T00:18:49Z"
        },
        {
          "name": "dloc",
          "value": "0",
          "time": "2020-09-17T00:18:49Z"
        },
        {
          "name": "blank_lines",
          "value": "3",
          "time": "2020-09-17T00:18:49Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2020-09-17T00:18:49Z"
        },
        {
          "name": "loc",
          "value": "16",
          "time": "2020-09-17T03:23:59Z"
        },
        {
          "name": "lloc",
          "value": "10",
          "time": "2020-09-17T03:23:59Z"
        },
        {
          "name": "sloc",
          "value": "13",
          "time": "2020-09-17T03:23:59Z"
        },
        {
          "name": "pylint_score",
          "value": "0.3",
          "time": "2020-09-17T03:23:59Z"
        }
      ],
      "relationships": [
        {
          "objectId": "srbhr",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "f1afc0e0a2d77ab9f0fa34fb445a6ae32a2f0631",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "Progress/generate_wordcloud.py"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "Progress/performLDA.py",
          "time": "2020-09-17T00:18:49Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2020-09-17T00:18:49Z"
        },
        {
          "name": "theta_1",
          "value": "2",
          "time": "2020-09-17T00:18:49Z"
        },
        {
          "name": "theta_2",
          "value": "4",
          "time": "2020-09-17T00:18:49Z"
        },
        {
          "name": "N_1",
          "value": "2",
          "time": "2020-09-17T00:18:49Z"
        },
        {
          "name": "N_2",
          "value": "4",
          "time": "2020-09-17T00:18:49Z"
        },
        {
          "name": "loc",
          "value": "35",
          "time": "2020-09-17T00:18:49Z"
        },
        {
          "name": "lloc",
          "value": "27",
          "time": "2020-09-17T00:18:49Z"
        },
        {
          "name": "sloc",
          "value": "28",
          "time": "2020-09-17T00:18:49Z"
        },
        {
          "name": "cloc",
          "value": "0",
          "time": "2020-09-17T00:18:49Z"
        },
        {
          "name": "dloc",
          "value": "0",
          "time": "2020-09-17T00:18:49Z"
        },
        {
          "name": "blank_lines",
          "value": "7",
          "time": "2020-09-17T00:18:49Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2020-09-17T00:18:49Z"
        },
        {
          "name": "theta_1",
          "value": "0",
          "time": "2020-09-17T03:23:59Z"
        },
        {
          "name": "theta_2",
          "value": "0",
          "time": "2020-09-17T03:23:59Z"
        },
        {
          "name": "N_1",
          "value": "0",
          "time": "2020-09-17T03:23:59Z"
        },
        {
          "name": "N_2",
          "value": "0",
          "time": "2020-09-17T03:23:59Z"
        },
        {
          "name": "loc",
          "value": "47",
          "time": "2020-09-17T03:23:59Z"
        },
        {
          "name": "cloc",
          "value": "6",
          "time": "2020-09-17T03:23:59Z"
        },
        {
          "name": "blank_lines",
          "value": "13",
          "time": "2020-09-17T03:23:59Z"
        }
      ],
      "relationships": [
        {
          "objectId": "srbhr",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "f1afc0e0a2d77ab9f0fa34fb445a6ae32a2f0631",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "Progress/performLDA.py"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "Progress/tf_idf.py",
          "time": "2020-09-17T00:18:49Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2020-09-17T00:18:49Z"
        },
        {
          "name": "theta_1",
          "value": "0",
          "time": "2020-09-17T00:18:49Z"
        },
        {
          "name": "theta_2",
          "value": "0",
          "time": "2020-09-17T00:18:49Z"
        },
        {
          "name": "N_1",
          "value": "0",
          "time": "2020-09-17T00:18:49Z"
        },
        {
          "name": "N_2",
          "value": "0",
          "time": "2020-09-17T00:18:49Z"
        },
        {
          "name": "loc",
          "value": "7",
          "time": "2020-09-17T00:18:49Z"
        },
        {
          "name": "lloc",
          "value": "6",
          "time": "2020-09-17T00:18:49Z"
        },
        {
          "name": "sloc",
          "value": "6",
          "time": "2020-09-17T00:18:49Z"
        },
        {
          "name": "cloc",
          "value": "0",
          "time": "2020-09-17T00:18:49Z"
        },
        {
          "name": "dloc",
          "value": "0",
          "time": "2020-09-17T00:18:49Z"
        },
        {
          "name": "blank_lines",
          "value": "1",
          "time": "2020-09-17T00:18:49Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2020-09-17T00:18:49Z"
        }
      ],
      "relationships": [
        {
          "objectId": "srbhr",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "1e15f522c9e77cd20a5773c2dcbb9b790bcb71a7",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "Progress/tf_idf.py"
    },
    {
      "type": "commit",
      "attributes": [
        {
          "name": "message",
          "value": "Updating Progress",
          "time": "2020-09-17T00:18:49Z"
        },
        {
          "name": "description",
          "value": "",
          "time": "2020-09-17T00:18:49Z"
        },
        {
          "name": "to",
          "value": "['Resume-Matcher:(HEAD detached at 004b8a0)', 'Resume-Matcher:main']",
          "time": "2020-09-17T00:18:49Z"
        }
      ],
      "relationships": [
        {
          "objectId": "Progress/Job_Data.csv",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Progress/Resume_data.csv",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Progress/Word Vector Model.ipynb",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Progress/WordCloud.ipynb",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Progress/Word_relevance.ipynb",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Progress/app.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Progress/app2.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Progress/app_testing.ipynb",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Progress/fileReader.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Progress/generate_wordcloud.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Progress/performLDA.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Progress/tf_idf.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Progress/topic_modeller_pd_returner.ipynb",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Progress/topic_modelling_resumes.ipynb",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Progress/untitled.md",
          "qualifier": "aggregates"
        },
        {
          "objectId": "4e139225109fcf918c8ad01079ae35ac38d1079b",
          "qualifier": "is-child-of"
        },
        {
          "objectId": "0.7642223434025158",
          "qualifier": "commit_mi"
        },
        {
          "objectId": "srbhr",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "0.13121428571428573",
          "qualifier": "commit_pylint"
        }
      ],
      "id": "1e15f522c9e77cd20a5773c2dcbb9b790bcb71a7"
    },
    {
      "type": "commit",
      "attributes": [
        {
          "name": "message",
          "value": "Updating Progress",
          "time": "2020-09-17T03:23:59Z"
        },
        {
          "name": "description",
          "value": "",
          "time": "2020-09-17T03:23:59Z"
        },
        {
          "name": "to",
          "value": "['Resume-Matcher:(HEAD detached at 004b8a0)', 'Resume-Matcher:main']",
          "time": "2020-09-17T03:23:59Z"
        }
      ],
      "relationships": [
        {
          "objectId": "Progress/app2.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Progress/generate_wordcloud.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Progress/performLDA.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Progress/test_getScores.ipynb",
          "qualifier": "aggregates"
        },
        {
          "objectId": "1e15f522c9e77cd20a5773c2dcbb9b790bcb71a7",
          "qualifier": "is-child-of"
        },
        {
          "objectId": "0.7590432534604382",
          "qualifier": "commit_mi"
        },
        {
          "objectId": "srbhr",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "0.16278571428571428",
          "qualifier": "commit_pylint"
        }
      ],
      "id": "f1afc0e0a2d77ab9f0fa34fb445a6ae32a2f0631"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "Progress/Archived Code/app.py",
          "time": "2020-09-17T14:28:49Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2020-09-17T14:28:49Z"
        },
        {
          "name": "theta_1",
          "value": "0",
          "time": "2020-09-17T14:28:49Z"
        },
        {
          "name": "theta_2",
          "value": "0",
          "time": "2020-09-17T14:28:49Z"
        },
        {
          "name": "N_1",
          "value": "0",
          "time": "2020-09-17T14:28:49Z"
        },
        {
          "name": "N_2",
          "value": "0",
          "time": "2020-09-17T14:28:49Z"
        },
        {
          "name": "loc",
          "value": "0",
          "time": "2020-09-17T14:28:49Z"
        },
        {
          "name": "lloc",
          "value": "0",
          "time": "2020-09-17T14:28:49Z"
        },
        {
          "name": "sloc",
          "value": "0",
          "time": "2020-09-17T14:28:49Z"
        },
        {
          "name": "cloc",
          "value": "0",
          "time": "2020-09-17T14:28:49Z"
        },
        {
          "name": "dloc",
          "value": "0",
          "time": "2020-09-17T14:28:49Z"
        },
        {
          "name": "blank_lines",
          "value": "0",
          "time": "2020-09-17T14:28:49Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2020-09-17T14:28:49Z"
        }
      ],
      "relationships": [
        {
          "objectId": "srbhr",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "0921e280eb047f7f24c8d3f31ea3e98cb8c32b20",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "Progress/Archived Code/app.py"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "Progress/Archived Code/compute.py",
          "time": "2020-09-17T14:28:49Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2020-09-17T14:28:49Z"
        },
        {
          "name": "theta_1",
          "value": "0",
          "time": "2020-09-17T14:28:49Z"
        },
        {
          "name": "theta_2",
          "value": "0",
          "time": "2020-09-17T14:28:49Z"
        },
        {
          "name": "N_1",
          "value": "0",
          "time": "2020-09-17T14:28:49Z"
        },
        {
          "name": "N_2",
          "value": "0",
          "time": "2020-09-17T14:28:49Z"
        },
        {
          "name": "loc",
          "value": "0",
          "time": "2020-09-17T14:28:49Z"
        },
        {
          "name": "lloc",
          "value": "0",
          "time": "2020-09-17T14:28:49Z"
        },
        {
          "name": "sloc",
          "value": "0",
          "time": "2020-09-17T14:28:49Z"
        },
        {
          "name": "cloc",
          "value": "0",
          "time": "2020-09-17T14:28:49Z"
        },
        {
          "name": "dloc",
          "value": "0",
          "time": "2020-09-17T14:28:49Z"
        },
        {
          "name": "blank_lines",
          "value": "0",
          "time": "2020-09-17T14:28:49Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2020-09-17T14:28:49Z"
        }
      ],
      "relationships": [
        {
          "objectId": "srbhr",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "0921e280eb047f7f24c8d3f31ea3e98cb8c32b20",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "Progress/Archived Code/compute.py"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "Progress/Archived Code/generate_wordcloud.py",
          "time": "2020-09-17T14:28:49Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2020-09-17T14:28:49Z"
        },
        {
          "name": "theta_1",
          "value": "0",
          "time": "2020-09-17T14:28:49Z"
        },
        {
          "name": "theta_2",
          "value": "0",
          "time": "2020-09-17T14:28:49Z"
        },
        {
          "name": "N_1",
          "value": "0",
          "time": "2020-09-17T14:28:49Z"
        },
        {
          "name": "N_2",
          "value": "0",
          "time": "2020-09-17T14:28:49Z"
        },
        {
          "name": "loc",
          "value": "0",
          "time": "2020-09-17T14:28:49Z"
        },
        {
          "name": "lloc",
          "value": "0",
          "time": "2020-09-17T14:28:49Z"
        },
        {
          "name": "sloc",
          "value": "0",
          "time": "2020-09-17T14:28:49Z"
        },
        {
          "name": "cloc",
          "value": "0",
          "time": "2020-09-17T14:28:49Z"
        },
        {
          "name": "dloc",
          "value": "0",
          "time": "2020-09-17T14:28:49Z"
        },
        {
          "name": "blank_lines",
          "value": "0",
          "time": "2020-09-17T14:28:49Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2020-09-17T14:28:49Z"
        }
      ],
      "relationships": [
        {
          "objectId": "srbhr",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "0921e280eb047f7f24c8d3f31ea3e98cb8c32b20",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "Progress/Archived Code/generate_wordcloud.py"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "Progress/Archived Code/performLDA.py",
          "time": "2020-09-17T14:28:49Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2020-09-17T14:28:49Z"
        },
        {
          "name": "theta_1",
          "value": "2",
          "time": "2020-09-17T14:28:49Z"
        },
        {
          "name": "theta_2",
          "value": "4",
          "time": "2020-09-17T14:28:49Z"
        },
        {
          "name": "N_1",
          "value": "2",
          "time": "2020-09-17T14:28:49Z"
        },
        {
          "name": "N_2",
          "value": "4",
          "time": "2020-09-17T14:28:49Z"
        },
        {
          "name": "loc",
          "value": "47",
          "time": "2020-09-17T14:28:49Z"
        },
        {
          "name": "lloc",
          "value": "25",
          "time": "2020-09-17T14:28:49Z"
        },
        {
          "name": "sloc",
          "value": "26",
          "time": "2020-09-17T14:28:49Z"
        },
        {
          "name": "cloc",
          "value": "8",
          "time": "2020-09-17T14:28:49Z"
        },
        {
          "name": "dloc",
          "value": "0",
          "time": "2020-09-17T14:28:49Z"
        },
        {
          "name": "blank_lines",
          "value": "13",
          "time": "2020-09-17T14:28:49Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2020-09-17T14:28:49Z"
        }
      ],
      "relationships": [
        {
          "objectId": "srbhr",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "0921e280eb047f7f24c8d3f31ea3e98cb8c32b20",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "Progress/Archived Code/performLDA.py"
    },
    {
      "type": "commit",
      "attributes": [
        {
          "name": "message",
          "value": "Made some important changes",
          "time": "2020-09-17T14:28:49Z"
        },
        {
          "name": "description",
          "value": "",
          "time": "2020-09-17T14:28:49Z"
        },
        {
          "name": "to",
          "value": "['Resume-Matcher:(HEAD detached at 004b8a0)', 'Resume-Matcher:main']",
          "time": "2020-09-17T14:28:49Z"
        }
      ],
      "relationships": [
        {
          "objectId": "Dataset/Resume_2.json",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Progress/Archived Code/Cleaner Notebook.ipynb",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Progress/Archived Code/Email and Relevant information Extraction.ipynb",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Progress/Archived Code/Resume Extraction.ipynb",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Progress/Archived Code/Untitled.ipynb",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Progress/Archived Code/Untitled1.ipynb",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Progress/Archived Code/Visualizing Profiles for further assessment.ipynb",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Progress/Archived Code/Visualizing the Tags for the Text.ipynb",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Progress/Archived Code/Word Vector Model.ipynb",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Progress/Archived Code/WordCloud.ipynb",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Progress/Archived Code/Word_relevance.ipynb",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Progress/Archived Code/app.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Progress/Archived Code/app_testing.ipynb",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Progress/Archived Code/compute.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Progress/Archived Code/creating_patterns.ipynb",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Progress/Archived Code/generate_wordcloud.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Progress/Archived Code/performLDA.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Progress/Archived Code/resuming Work_1.ipynb",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Progress/Archived Code/resuming_work2.ipynb",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Progress/Archived Code/resuming_work3.ipynb",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Progress/Archived Code/test_getScores.ipynb",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Progress/Archived Code/testin_3.ipynb",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Progress/Archived Code/testing_1.ipynb",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Progress/Archived Code/testing_compute.ipynb",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Progress/Archived Code/testing_notebook_2.ipynb",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Progress/Archived Code/topic_modeller_pd_returner.ipynb",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Progress/Archived Code/topic_modelling_1.ipynb",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Progress/Archived Code/topic_modelling_resumes.ipynb",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Progress/Archived Code/untitled.md",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Progress/NAIVE RESUME MATCHER.jpg",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Progress/NAIVE RESUME MATCHER.jpg:Zone.Identifier",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Progress/NAIVE RESUME MATCHER.png",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Progress/NAIVE RESUME MATCHER.png:Zone.Identifier",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Progress/app2.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Progress/first_app.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "f1afc0e0a2d77ab9f0fa34fb445a6ae32a2f0631",
          "qualifier": "is-child-of"
        },
        {
          "objectId": "0.8379446607091129",
          "qualifier": "commit_mi"
        },
        {
          "objectId": "srbhr",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "0.15150000000000002",
          "qualifier": "commit_pylint"
        }
      ],
      "id": "0921e280eb047f7f24c8d3f31ea3e98cb8c32b20"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "Cleaner.py",
          "time": "2020-09-17T14:39:53Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2020-09-17T14:39:53Z"
        },
        {
          "name": "theta_1",
          "value": "0",
          "time": "2020-09-17T14:39:53Z"
        },
        {
          "name": "theta_2",
          "value": "0",
          "time": "2020-09-17T14:39:53Z"
        },
        {
          "name": "N_1",
          "value": "0",
          "time": "2020-09-17T14:39:53Z"
        },
        {
          "name": "N_2",
          "value": "0",
          "time": "2020-09-17T14:39:53Z"
        },
        {
          "name": "loc",
          "value": "0",
          "time": "2020-09-17T14:39:53Z"
        },
        {
          "name": "lloc",
          "value": "0",
          "time": "2020-09-17T14:39:53Z"
        },
        {
          "name": "sloc",
          "value": "0",
          "time": "2020-09-17T14:39:53Z"
        },
        {
          "name": "cloc",
          "value": "0",
          "time": "2020-09-17T14:39:53Z"
        },
        {
          "name": "dloc",
          "value": "0",
          "time": "2020-09-17T14:39:53Z"
        },
        {
          "name": "blank_lines",
          "value": "0",
          "time": "2020-09-17T14:39:53Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2020-09-17T14:39:53Z"
        }
      ],
      "relationships": [
        {
          "objectId": "srbhr",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "b2c8d7cdb7f618a9306c0c4e154c21dddb6c364d",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "Cleaner.py"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "Similar.py",
          "time": "2020-09-17T14:39:53Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2020-09-17T14:39:53Z"
        },
        {
          "name": "theta_1",
          "value": "0",
          "time": "2020-09-17T14:39:53Z"
        },
        {
          "name": "theta_2",
          "value": "0",
          "time": "2020-09-17T14:39:53Z"
        },
        {
          "name": "N_1",
          "value": "0",
          "time": "2020-09-17T14:39:53Z"
        },
        {
          "name": "N_2",
          "value": "0",
          "time": "2020-09-17T14:39:53Z"
        },
        {
          "name": "loc",
          "value": "0",
          "time": "2020-09-17T14:39:53Z"
        },
        {
          "name": "lloc",
          "value": "0",
          "time": "2020-09-17T14:39:53Z"
        },
        {
          "name": "sloc",
          "value": "0",
          "time": "2020-09-17T14:39:53Z"
        },
        {
          "name": "cloc",
          "value": "0",
          "time": "2020-09-17T14:39:53Z"
        },
        {
          "name": "dloc",
          "value": "0",
          "time": "2020-09-17T14:39:53Z"
        },
        {
          "name": "blank_lines",
          "value": "0",
          "time": "2020-09-17T14:39:53Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2020-09-17T14:39:53Z"
        },
        {
          "name": "theta_1",
          "value": "3",
          "time": "2020-09-18T20:55:56Z"
        },
        {
          "name": "theta_2",
          "value": "10",
          "time": "2020-09-18T20:55:56Z"
        },
        {
          "name": "N_1",
          "value": "5",
          "time": "2020-09-18T20:55:56Z"
        },
        {
          "name": "N_2",
          "value": "10",
          "time": "2020-09-18T20:55:56Z"
        },
        {
          "name": "loc",
          "value": "11",
          "time": "2020-09-18T20:55:56Z"
        },
        {
          "name": "lloc",
          "value": "8",
          "time": "2020-09-18T20:55:56Z"
        },
        {
          "name": "sloc",
          "value": "8",
          "time": "2020-09-18T20:55:56Z"
        },
        {
          "name": "cloc",
          "value": "1",
          "time": "2020-09-18T20:55:56Z"
        },
        {
          "name": "blank_lines",
          "value": "2",
          "time": "2020-09-18T20:55:56Z"
        },
        {
          "name": "pylint_score",
          "value": "0.125",
          "time": "2020-09-18T20:55:56Z"
        }
      ],
      "relationships": [
        {
          "objectId": "srbhr",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "9b2080e8165b3e2b1e1236586ee8b1e7e53ee5ba",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "Similar.py"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "app2.py",
          "time": "2020-09-17T14:39:53Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2020-09-17T14:39:53Z"
        },
        {
          "name": "theta_1",
          "value": "0",
          "time": "2020-09-17T14:39:53Z"
        },
        {
          "name": "theta_2",
          "value": "0",
          "time": "2020-09-17T14:39:53Z"
        },
        {
          "name": "N_1",
          "value": "0",
          "time": "2020-09-17T14:39:53Z"
        },
        {
          "name": "N_2",
          "value": "0",
          "time": "2020-09-17T14:39:53Z"
        },
        {
          "name": "loc",
          "value": "0",
          "time": "2020-09-17T14:39:53Z"
        },
        {
          "name": "lloc",
          "value": "0",
          "time": "2020-09-17T14:39:53Z"
        },
        {
          "name": "sloc",
          "value": "0",
          "time": "2020-09-17T14:39:53Z"
        },
        {
          "name": "cloc",
          "value": "0",
          "time": "2020-09-17T14:39:53Z"
        },
        {
          "name": "dloc",
          "value": "0",
          "time": "2020-09-17T14:39:53Z"
        },
        {
          "name": "blank_lines",
          "value": "0",
          "time": "2020-09-17T14:39:53Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2020-09-17T14:39:53Z"
        }
      ],
      "relationships": [
        {
          "objectId": "srbhr",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "b2c8d7cdb7f618a9306c0c4e154c21dddb6c364d",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "app2.py"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "fileReader.py",
          "time": "2020-09-17T14:39:53Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2020-09-17T14:39:53Z"
        },
        {
          "name": "theta_1",
          "value": "0",
          "time": "2020-09-17T14:39:53Z"
        },
        {
          "name": "theta_2",
          "value": "0",
          "time": "2020-09-17T14:39:53Z"
        },
        {
          "name": "N_1",
          "value": "0",
          "time": "2020-09-17T14:39:53Z"
        },
        {
          "name": "N_2",
          "value": "0",
          "time": "2020-09-17T14:39:53Z"
        },
        {
          "name": "loc",
          "value": "0",
          "time": "2020-09-17T14:39:53Z"
        },
        {
          "name": "lloc",
          "value": "0",
          "time": "2020-09-17T14:39:53Z"
        },
        {
          "name": "sloc",
          "value": "0",
          "time": "2020-09-17T14:39:53Z"
        },
        {
          "name": "cloc",
          "value": "0",
          "time": "2020-09-17T14:39:53Z"
        },
        {
          "name": "dloc",
          "value": "0",
          "time": "2020-09-17T14:39:53Z"
        },
        {
          "name": "blank_lines",
          "value": "0",
          "time": "2020-09-17T14:39:53Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2020-09-17T14:39:53Z"
        },
        {
          "name": "theta_1",
          "value": "1",
          "time": "2020-09-17T14:42:54Z"
        },
        {
          "name": "theta_2",
          "value": "4",
          "time": "2020-09-17T14:42:54Z"
        },
        {
          "name": "N_1",
          "value": "2",
          "time": "2020-09-17T14:42:54Z"
        },
        {
          "name": "N_2",
          "value": "4",
          "time": "2020-09-17T14:42:54Z"
        },
        {
          "name": "loc",
          "value": "71",
          "time": "2020-09-17T14:42:54Z"
        },
        {
          "name": "lloc",
          "value": "50",
          "time": "2020-09-17T14:42:54Z"
        },
        {
          "name": "sloc",
          "value": "52",
          "time": "2020-09-17T14:42:54Z"
        },
        {
          "name": "blank_lines",
          "value": "19",
          "time": "2020-09-17T14:42:54Z"
        },
        {
          "name": "loc",
          "value": "70",
          "time": "2020-09-18T20:55:56Z"
        },
        {
          "name": "lloc",
          "value": "49",
          "time": "2020-09-18T20:55:56Z"
        },
        {
          "name": "sloc",
          "value": "51",
          "time": "2020-09-18T20:55:56Z"
        },
        {
          "name": "loc",
          "value": "72",
          "time": "2020-10-01T21:46:12Z"
        },
        {
          "name": "cloc",
          "value": "1",
          "time": "2020-10-01T21:46:12Z"
        },
        {
          "name": "blank_lines",
          "value": "20",
          "time": "2020-10-01T21:46:12Z"
        },
        {
          "name": "pylint_score",
          "value": "0.3",
          "time": "2020-09-17T14:42:54Z"
        },
        {
          "name": "pylint_score",
          "value": "0.40800000000000003",
          "time": "2020-09-18T20:55:56Z"
        }
      ],
      "relationships": [
        {
          "objectId": "srbhr",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "a66f953df1a52e8d13be92e4a5b3f4040495713d",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "fileReader.py"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "tf_idf.py",
          "time": "2020-09-17T14:39:53Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2020-09-17T14:39:53Z"
        },
        {
          "name": "theta_1",
          "value": "0",
          "time": "2020-09-17T14:39:53Z"
        },
        {
          "name": "theta_2",
          "value": "0",
          "time": "2020-09-17T14:39:53Z"
        },
        {
          "name": "N_1",
          "value": "0",
          "time": "2020-09-17T14:39:53Z"
        },
        {
          "name": "N_2",
          "value": "0",
          "time": "2020-09-17T14:39:53Z"
        },
        {
          "name": "loc",
          "value": "0",
          "time": "2020-09-17T14:39:53Z"
        },
        {
          "name": "lloc",
          "value": "0",
          "time": "2020-09-17T14:39:53Z"
        },
        {
          "name": "sloc",
          "value": "0",
          "time": "2020-09-17T14:39:53Z"
        },
        {
          "name": "cloc",
          "value": "0",
          "time": "2020-09-17T14:39:53Z"
        },
        {
          "name": "dloc",
          "value": "0",
          "time": "2020-09-17T14:39:53Z"
        },
        {
          "name": "blank_lines",
          "value": "0",
          "time": "2020-09-17T14:39:53Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2020-09-17T14:39:53Z"
        },
        {
          "name": "loc",
          "value": "8",
          "time": "2020-09-17T14:56:30Z"
        },
        {
          "name": "lloc",
          "value": "6",
          "time": "2020-09-17T14:56:30Z"
        },
        {
          "name": "sloc",
          "value": "6",
          "time": "2020-09-17T14:56:30Z"
        },
        {
          "name": "blank_lines",
          "value": "2",
          "time": "2020-09-17T14:56:30Z"
        }
      ],
      "relationships": [
        {
          "objectId": "srbhr",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "9b2080e8165b3e2b1e1236586ee8b1e7e53ee5ba",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "tf_idf.py"
    },
    {
      "type": "commit",
      "attributes": [
        {
          "name": "message",
          "value": "Shifted Files, Removed the old code and Organized them",
          "time": "2020-09-17T14:39:53Z"
        },
        {
          "name": "description",
          "value": "",
          "time": "2020-09-17T14:39:53Z"
        },
        {
          "name": "to",
          "value": "['Resume-Matcher:(HEAD detached at 004b8a0)', 'Resume-Matcher:main']",
          "time": "2020-09-17T14:39:53Z"
        }
      ],
      "relationships": [
        {
          "objectId": "Cleaner.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/JobDesc/Data Scientist.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/JobDesc/Web_dev_job.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/AJAY CHINNIFeatured Resume.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/ALANKRIT NIRJHARPremium CV Featured Resume.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/Abhishek SharmaFeatured Resume.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/Amarpreet SinghPremium CV Featured Resume.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/Amruta B.pdf",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/Ashwani Kumar RajputPremium CV Featured Resume.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/Bijjula SahithiFeatured Resume.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/DIVYA PRAKASH SINGHFeatured Resume.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/Dhavakumar AmarntharajanFeatured Resume.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/Jithin J NairFeatured Resume.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/Kaustav SenFeatured Resume.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/Manoj KumarFeatured Resume.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/NARENDRA HINGE.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/Nandagopal HFeatured Resume.pdf",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/Prashant Bhat.pdf",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/RISHABH SHARMAFeatured Resume.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/SNEHA SAHUFeatured Resume.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/Seshadri Sastry Kunapuli.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/Shambhai MishraFeatured Resume.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/Suraj Chauhan.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/khyati gandhi.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Distill.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Images/NAIVE RESUME MATCHER.jpg",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Images/NAIVE RESUME MATCHER.jpg:Zone.Identifier",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Images/NAIVE RESUME MATCHER.png",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Images/NAIVE RESUME MATCHER.png:Zone.Identifier",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Job_Data.csv",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Progress/Archived Code/untitled.md",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Resume_data.csv",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Similar.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app2.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "fileReader.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "tf_idf.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "0921e280eb047f7f24c8d3f31ea3e98cb8c32b20",
          "qualifier": "is-child-of"
        },
        {
          "objectId": "1.0",
          "qualifier": "commit_mi"
        },
        {
          "objectId": "srbhr",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "0.0",
          "qualifier": "commit_pylint"
        }
      ],
      "id": "b2c8d7cdb7f618a9306c0c4e154c21dddb6c364d"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "app.py",
          "time": "2020-09-17T14:42:54Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2020-09-17T14:42:54Z"
        },
        {
          "name": "theta_1",
          "value": "6",
          "time": "2020-09-17T14:42:54Z"
        },
        {
          "name": "theta_2",
          "value": "15",
          "time": "2020-09-17T14:42:54Z"
        },
        {
          "name": "N_1",
          "value": "12",
          "time": "2020-09-17T14:42:54Z"
        },
        {
          "name": "N_2",
          "value": "24",
          "time": "2020-09-17T14:42:54Z"
        },
        {
          "name": "loc",
          "value": "281",
          "time": "2020-09-17T14:42:54Z"
        },
        {
          "name": "lloc",
          "value": "127",
          "time": "2020-09-17T14:42:54Z"
        },
        {
          "name": "sloc",
          "value": "196",
          "time": "2020-09-17T14:42:54Z"
        },
        {
          "name": "cloc",
          "value": "19",
          "time": "2020-09-17T14:42:54Z"
        },
        {
          "name": "dloc",
          "value": "0",
          "time": "2020-09-17T14:42:54Z"
        },
        {
          "name": "blank_lines",
          "value": "66",
          "time": "2020-09-17T14:42:54Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2020-09-17T14:42:54Z"
        },
        {
          "name": "loc",
          "value": "278",
          "time": "2020-09-17T14:56:30Z"
        },
        {
          "name": "cloc",
          "value": "15",
          "time": "2020-09-17T14:56:30Z"
        },
        {
          "name": "blank_lines",
          "value": "67",
          "time": "2020-09-17T14:56:30Z"
        },
        {
          "name": "loc",
          "value": "252",
          "time": "2020-10-02T04:50:36Z"
        },
        {
          "name": "lloc",
          "value": "126",
          "time": "2020-10-02T04:50:36Z"
        },
        {
          "name": "sloc",
          "value": "175",
          "time": "2020-10-02T04:50:36Z"
        },
        {
          "name": "blank_lines",
          "value": "62",
          "time": "2020-10-02T04:50:36Z"
        },
        {
          "name": "loc",
          "value": "255",
          "time": "2021-07-21T14:09:26Z"
        },
        {
          "name": "lloc",
          "value": "130",
          "time": "2021-07-21T14:09:26Z"
        },
        {
          "name": "sloc",
          "value": "179",
          "time": "2021-07-21T14:09:26Z"
        },
        {
          "name": "cloc",
          "value": "16",
          "time": "2021-07-21T14:09:26Z"
        },
        {
          "name": "blank_lines",
          "value": "61",
          "time": "2021-07-21T14:09:26Z"
        },
        {
          "name": "lloc",
          "value": "129",
          "time": "2021-07-25T00:07:46Z"
        },
        {
          "name": "sloc",
          "value": "178",
          "time": "2021-07-25T00:07:46Z"
        },
        {
          "name": "cloc",
          "value": "17",
          "time": "2021-07-25T00:07:46Z"
        },
        {
          "name": "pylint_score",
          "value": "0.42300000000000004",
          "time": "2020-09-17T14:56:30Z"
        },
        {
          "name": "pylint_score",
          "value": "0.418",
          "time": "2020-10-02T04:50:36Z"
        },
        {
          "name": "pylint_score",
          "value": "0.43099999999999994",
          "time": "2021-07-23T14:05:02Z"
        },
        {
          "name": "pylint_score",
          "value": "0.426",
          "time": "2021-07-25T00:07:46Z"
        }
      ],
      "relationships": [
        {
          "objectId": "srbhr",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "f2a3aa9543ccf9c865a35f71ae14e6ed4fec800f",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "app.py"
    },
    {
      "type": "commit",
      "attributes": [
        {
          "name": "message",
          "value": "Shifted Files, Removed the old code and Organized them",
          "time": "2020-09-17T14:42:54Z"
        },
        {
          "name": "description",
          "value": "",
          "time": "2020-09-17T14:42:54Z"
        },
        {
          "name": "to",
          "value": "['Resume-Matcher:(HEAD detached at 004b8a0)', 'Resume-Matcher:main']",
          "time": "2020-09-17T14:42:54Z"
        }
      ],
      "relationships": [
        {
          "objectId": "Job_Data.csv",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Resume_Data.csv",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "fileReader.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "b2c8d7cdb7f618a9306c0c4e154c21dddb6c364d",
          "qualifier": "is-child-of"
        },
        {
          "objectId": "0.8471031188618118",
          "qualifier": "commit_mi"
        },
        {
          "objectId": "srbhr",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "0.12050000000000001",
          "qualifier": "commit_pylint"
        }
      ],
      "id": "e46c65b48ab995981dac429747b927ae68723bd6"
    },
    {
      "type": "commit",
      "attributes": [
        {
          "name": "message",
          "value": "Shifted Files, Removed the old code and Organized them",
          "time": "2020-09-17T14:56:30Z"
        },
        {
          "name": "description",
          "value": "",
          "time": "2020-09-17T14:56:30Z"
        },
        {
          "name": "to",
          "value": "['Resume-Matcher:(HEAD detached at 004b8a0)', 'Resume-Matcher:main']",
          "time": "2020-09-17T14:56:30Z"
        }
      ],
      "relationships": [
        {
          "objectId": "README.md",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "tf_idf.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "e46c65b48ab995981dac429747b927ae68723bd6",
          "qualifier": "is-child-of"
        },
        {
          "objectId": "0.8442294056121185",
          "qualifier": "commit_mi"
        },
        {
          "objectId": "srbhr",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "0.12050000000000001",
          "qualifier": "commit_pylint"
        }
      ],
      "id": "4d8148749c2dbc88891be6d697ec287eca8b4b72"
    },
    {
      "type": "commit",
      "attributes": [
        {
          "name": "message",
          "value": "Made some changes to README.md",
          "time": "2020-09-17T19:40:22Z"
        },
        {
          "name": "description",
          "value": "",
          "time": "2020-09-17T19:40:22Z"
        },
        {
          "name": "to",
          "value": "['Resume-Matcher:(HEAD detached at 004b8a0)', 'Resume-Matcher:main']",
          "time": "2020-09-17T19:40:22Z"
        }
      ],
      "relationships": [
        {
          "objectId": "Images/logo.png",
          "qualifier": "aggregates"
        },
        {
          "objectId": "README.md",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "4d8148749c2dbc88891be6d697ec287eca8b4b72",
          "qualifier": "is-child-of"
        },
        {
          "objectId": "0.8442294056121185",
          "qualifier": "commit_mi"
        },
        {
          "objectId": "srbhr",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "0.12050000000000001",
          "qualifier": "commit_pylint"
        }
      ],
      "id": "0d002b4e79a6658fc7d3dbfe9a9cf9b25098352e"
    },
    {
      "type": "commit",
      "attributes": [
        {
          "name": "message",
          "value": "Added New Resumes and Job Descriptions",
          "time": "2020-09-18T20:06:59Z"
        },
        {
          "name": "description",
          "value": "",
          "time": "2020-09-18T20:06:59Z"
        },
        {
          "name": "to",
          "value": "['Resume-Matcher:(HEAD detached at 004b8a0)', 'Resume-Matcher:main']",
          "time": "2020-09-18T20:06:59Z"
        }
      ],
      "relationships": [
        {
          "objectId": "Data/JobDesc/Backend Developer.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/JobDesc/Billing cum Logistics Manager.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/JobDesc/Director of Engineering.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/JobDesc/Global Industry Content Manager.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/JobDesc/HTML Developer.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/JobDesc/IT Project Manager.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/JobDesc/Lead Technical Program Manager.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/JobDesc/Primary English Teacher.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/JobDesc/Revenue Reporting Data Analyst.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/JobDesc/Senior Product Manager.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/JobDesc/Senior Software Developer.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/JobDesc/Web Developer.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/ABHAY RAJ DWIVEDI.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/ADRYJA GHOSH.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/AJAY CHINNI.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/ALANKRIT NIRJHAR.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/AMITABHA.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/Abhishek Sharma.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/Amarpreet Singh.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/Arun Kumar.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/Ashish Singh.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/Ashwani Kumar Rajput.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/Avik Bhattacharya.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/Bijjula Sahithi.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/CHARUTA DANDEKAR.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/Chakuswanu.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/Charu Tyagi.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/DEVENDRA K NAIK.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/DIVYA PRAKASH.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/DRISHTI SHARMA.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/Debmalya Paul.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/Deepak Hariharan.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/Dhavakumar.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/Dileep Matha.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/ELIZABETH SONY THOMAS.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/GurshidPremium.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/HARSHAD B.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/Ishrat Fatma.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/Jithin J Nair.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/Kasarapu Sahithi.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/Kaustav Sen.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/MADHU H.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/MONICA CHOPRA.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/Manoj Kumar.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/Manvi Singh.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/NARENDRA SHUKLA.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/NEDA RIZVI.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/Nandagopal.pdf",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/Nilesh Birari.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/POOJA DWIVEDI.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/Pallavi Sunil.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/Pooja L.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/Prasanna Navnath.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/RAHUL GOEL.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/RAJINDER KUMAR.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/RAVI RANJAN KUMAR.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/RISHABH SHARMA.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/RUCHITA BAKSHI.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/Rahul Kumar.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/Ranjan Raikwar.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/Renu Tiwari.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/SARVESH KARAN.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/SNEHA SAHU.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/Shambhai Mishra.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/Shiraz Siddiqui.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/Sneha Vijay Bhamkar.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/Sumith Chandru.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/Swati Mehta.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/Vikram Balasubramanian.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/Vipin Kumar.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/Vivek Kumar.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Job_Data.csv",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Resume_Data.csv",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "fileReader.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "88417ba8494c167db7f79a5ae9d2ab159a7bb446",
          "qualifier": "is-child-of"
        },
        {
          "objectId": "0.8442294056121185",
          "qualifier": "commit_mi"
        },
        {
          "objectId": "srbhr",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "0.12050000000000001",
          "qualifier": "commit_pylint"
        }
      ],
      "id": "7fc73d0a9320eaa889a25d79d5c823c9c0b6a39f"
    },
    {
      "type": "commit",
      "attributes": [
        {
          "name": "message",
          "value": "Updates",
          "time": "2020-09-18T20:55:56Z"
        },
        {
          "name": "description",
          "value": "",
          "time": "2020-09-18T20:55:56Z"
        },
        {
          "name": "to",
          "value": "['Resume-Matcher:(HEAD detached at 004b8a0)', 'Resume-Matcher:main']",
          "time": "2020-09-18T20:55:56Z"
        }
      ],
      "relationships": [
        {
          "objectId": "Job_Data.csv",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Resume_Data.csv",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Similar.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "fileReader.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "tf_idf.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "7fc73d0a9320eaa889a25d79d5c823c9c0b6a39f",
          "qualifier": "is-child-of"
        },
        {
          "objectId": "0.8237268785943387",
          "qualifier": "commit_mi"
        },
        {
          "objectId": "srbhr",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "0.15933333333333335",
          "qualifier": "commit_pylint"
        }
      ],
      "id": "9b2080e8165b3e2b1e1236586ee8b1e7e53ee5ba"
    },
    {
      "type": "commit",
      "attributes": [
        {
          "name": "message",
          "value": "Updates fileReader.py",
          "time": "2020-10-01T21:46:12Z"
        },
        {
          "name": "description",
          "value": "",
          "time": "2020-10-01T21:46:12Z"
        },
        {
          "name": "to",
          "value": "['Resume-Matcher:(HEAD detached at 004b8a0)', 'Resume-Matcher:main']",
          "time": "2020-10-01T21:46:12Z"
        }
      ],
      "relationships": [
        {
          "objectId": "fileReader.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "9b2080e8165b3e2b1e1236586ee8b1e7e53ee5ba",
          "qualifier": "is-child-of"
        },
        {
          "objectId": "0.8376691322903947",
          "qualifier": "commit_mi"
        },
        {
          "objectId": "srbhr",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "0.15933333333333335",
          "qualifier": "commit_pylint"
        }
      ],
      "id": "a66f953df1a52e8d13be92e4a5b3f4040495713d"
    },
    {
      "type": "commit",
      "attributes": [
        {
          "name": "message",
          "value": "Updated app.py and removed some extra lines",
          "time": "2020-10-02T04:50:36Z"
        },
        {
          "name": "description",
          "value": "",
          "time": "2020-10-02T04:50:36Z"
        },
        {
          "name": "to",
          "value": "['Resume-Matcher:(HEAD detached at 004b8a0)', 'Resume-Matcher:main']",
          "time": "2020-10-02T04:50:36Z"
        }
      ],
      "relationships": [
        {
          "objectId": "app.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "a66f953df1a52e8d13be92e4a5b3f4040495713d",
          "qualifier": "is-child-of"
        },
        {
          "objectId": "0.8391472327589432",
          "qualifier": "commit_mi"
        },
        {
          "objectId": "srbhr",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "0.1585",
          "qualifier": "commit_pylint"
        }
      ],
      "id": "93281ddbda230a599b409db98ea6050cca87e7a3"
    },
    {
      "type": "commit",
      "attributes": [
        {
          "name": "message",
          "value": "Made Changes to app.py + caching functionality to some functions",
          "time": "2021-07-21T14:09:26Z"
        },
        {
          "name": "description",
          "value": "",
          "time": "2021-07-21T14:09:26Z"
        },
        {
          "name": "to",
          "value": "['Resume-Matcher:(HEAD detached at 004b8a0)', 'Resume-Matcher:main']",
          "time": "2021-07-21T14:09:26Z"
        }
      ],
      "relationships": [
        {
          "objectId": "app.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "957aa50634e475dbc240a1841b1ec9ab0561b6e3",
          "qualifier": "is-child-of"
        },
        {
          "objectId": "0.8391661503947686",
          "qualifier": "commit_mi"
        },
        {
          "objectId": "srbhr",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "0.15933333333333335",
          "qualifier": "commit_pylint"
        }
      ],
      "id": "8f2f1c28f8b9d3ca50889218e6dd798fba55a9f3"
    },
    {
      "type": "commit",
      "attributes": [
        {
          "name": "message",
          "value": "Made Changes to app.py + modified some st.plot()",
          "time": "2021-07-21T15:02:24Z"
        },
        {
          "name": "description",
          "value": "",
          "time": "2021-07-21T15:02:24Z"
        },
        {
          "name": "to",
          "value": "['Resume-Matcher:(HEAD detached at 004b8a0)', 'Resume-Matcher:main']",
          "time": "2021-07-21T15:02:24Z"
        }
      ],
      "relationships": [
        {
          "objectId": "app.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "8f2f1c28f8b9d3ca50889218e6dd798fba55a9f3",
          "qualifier": "is-child-of"
        },
        {
          "objectId": "0.8391661503947686",
          "qualifier": "commit_mi"
        },
        {
          "objectId": "srbhr",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "0.15933333333333335",
          "qualifier": "commit_pylint"
        }
      ],
      "id": "61a3c478fc25d71f09b1f866565296c854b95e02"
    },
    {
      "type": "commit",
      "attributes": [
        {
          "name": "message",
          "value": "Made Changes to app.py + modified some st.plot()",
          "time": "2021-07-23T14:05:02Z"
        },
        {
          "name": "description",
          "value": "",
          "time": "2021-07-23T14:05:02Z"
        },
        {
          "name": "to",
          "value": "['Resume-Matcher:(HEAD detached at 004b8a0)', 'Resume-Matcher:main']",
          "time": "2021-07-23T14:05:02Z"
        }
      ],
      "relationships": [
        {
          "objectId": "app.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "61a3c478fc25d71f09b1f866565296c854b95e02",
          "qualifier": "is-child-of"
        },
        {
          "objectId": "0.8391661503947686",
          "qualifier": "commit_mi"
        },
        {
          "objectId": "srbhr",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "0.16066666666666665",
          "qualifier": "commit_pylint"
        }
      ],
      "id": "87dfab8065149b603270f67bb7e7f7f6a1b18ff9"
    },
    {
      "type": "commit",
      "attributes": [
        {
          "name": "message",
          "value": "Made Changes to app.py + Added some images",
          "time": "2021-07-25T00:07:46Z"
        },
        {
          "name": "description",
          "value": "",
          "time": "2021-07-25T00:07:46Z"
        },
        {
          "name": "to",
          "value": "['Resume-Matcher:(HEAD detached at 004b8a0)', 'Resume-Matcher:main']",
          "time": "2021-07-25T00:07:46Z"
        }
      ],
      "relationships": [
        {
          "objectId": "Screenshots/1.png",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Screenshots/1.png:Zone.Identifier",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Screenshots/2.png",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Screenshots/2.png:Zone.Identifier",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Screenshots/3.png",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Screenshots/3.png:Zone.Identifier",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Screenshots/4.png",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Screenshots/4.png:Zone.Identifier",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Screenshots/5.png",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Screenshots/5.png:Zone.Identifier",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Screenshots/6.png",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Screenshots/6.png:Zone.Identifier",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Screenshots/7.png",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Screenshots/7.png:Zone.Identifier",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "87dfab8065149b603270f67bb7e7f7f6a1b18ff9",
          "qualifier": "is-child-of"
        },
        {
          "objectId": "0.8401094091444162",
          "qualifier": "commit_mi"
        },
        {
          "objectId": "srbhr",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "0.15983333333333336",
          "qualifier": "commit_pylint"
        }
      ],
      "id": "f2a3aa9543ccf9c865a35f71ae14e6ed4fec800f"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "run.py",
          "time": "2023-05-13T16:17:11Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2023-05-13T16:17:11Z"
        },
        {
          "name": "theta_1",
          "value": "2",
          "time": "2023-05-13T16:17:11Z"
        },
        {
          "name": "theta_2",
          "value": "10",
          "time": "2023-05-13T16:17:11Z"
        },
        {
          "name": "N_1",
          "value": "5",
          "time": "2023-05-13T16:17:11Z"
        },
        {
          "name": "N_2",
          "value": "10",
          "time": "2023-05-13T16:17:11Z"
        },
        {
          "name": "loc",
          "value": "32",
          "time": "2023-05-13T16:17:11Z"
        },
        {
          "name": "lloc",
          "value": "24",
          "time": "2023-05-13T16:17:11Z"
        },
        {
          "name": "sloc",
          "value": "24",
          "time": "2023-05-13T16:17:11Z"
        },
        {
          "name": "cloc",
          "value": "0",
          "time": "2023-05-13T16:17:11Z"
        },
        {
          "name": "dloc",
          "value": "0",
          "time": "2023-05-13T16:17:11Z"
        },
        {
          "name": "blank_lines",
          "value": "8",
          "time": "2023-05-13T16:17:11Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2023-05-13T16:17:11Z"
        }
      ],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "7bd17fdfd1b8ae6f8ef65e3074ccba41baa1f7af",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "run.py"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "scripts/Extractor.py",
          "time": "2023-05-13T16:17:11Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2023-05-13T16:17:11Z"
        },
        {
          "name": "theta_1",
          "value": "3",
          "time": "2023-05-13T16:17:11Z"
        },
        {
          "name": "theta_2",
          "value": "12",
          "time": "2023-05-13T16:17:11Z"
        },
        {
          "name": "N_1",
          "value": "6",
          "time": "2023-05-13T16:17:11Z"
        },
        {
          "name": "N_2",
          "value": "13",
          "time": "2023-05-13T16:17:11Z"
        },
        {
          "name": "loc",
          "value": "208",
          "time": "2023-05-13T16:17:11Z"
        },
        {
          "name": "lloc",
          "value": "74",
          "time": "2023-05-13T16:17:11Z"
        },
        {
          "name": "sloc",
          "value": "96",
          "time": "2023-05-13T16:17:11Z"
        },
        {
          "name": "cloc",
          "value": "1",
          "time": "2023-05-13T16:17:11Z"
        },
        {
          "name": "dloc",
          "value": "72",
          "time": "2023-05-13T16:17:11Z"
        },
        {
          "name": "blank_lines",
          "value": "39",
          "time": "2023-05-13T16:17:11Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2023-05-13T16:17:11Z"
        },
        {
          "name": "loc",
          "value": "222",
          "time": "2024-03-25T19:13:40Z"
        },
        {
          "name": "sloc",
          "value": "109",
          "time": "2024-03-25T19:13:40Z"
        },
        {
          "name": "blank_lines",
          "value": "40",
          "time": "2024-03-25T19:13:40Z"
        },
        {
          "name": "pylint_score",
          "value": "0.8230000000000001",
          "time": "2023-07-17T14:18:35Z"
        }
      ],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "76062e92fddf37c0daa0aee3f06ef4b05409ae78",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "scripts/Extractor.py"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "scripts/KeytermsExtraction.py",
          "time": "2023-05-13T16:17:11Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2023-05-13T16:17:11Z"
        },
        {
          "name": "theta_1",
          "value": "0",
          "time": "2023-05-13T16:17:11Z"
        },
        {
          "name": "theta_2",
          "value": "0",
          "time": "2023-05-13T16:17:11Z"
        },
        {
          "name": "N_1",
          "value": "0",
          "time": "2023-05-13T16:17:11Z"
        },
        {
          "name": "N_2",
          "value": "0",
          "time": "2023-05-13T16:17:11Z"
        },
        {
          "name": "loc",
          "value": "81",
          "time": "2023-05-13T16:17:11Z"
        },
        {
          "name": "lloc",
          "value": "27",
          "time": "2023-05-13T16:17:11Z"
        },
        {
          "name": "sloc",
          "value": "26",
          "time": "2023-05-13T16:17:11Z"
        },
        {
          "name": "cloc",
          "value": "0",
          "time": "2023-05-13T16:17:11Z"
        },
        {
          "name": "dloc",
          "value": "39",
          "time": "2023-05-13T16:17:11Z"
        },
        {
          "name": "blank_lines",
          "value": "16",
          "time": "2023-05-13T16:17:11Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2023-05-13T16:17:11Z"
        },
        {
          "name": "loc",
          "value": "106",
          "time": "2024-03-25T19:13:40Z"
        },
        {
          "name": "sloc",
          "value": "51",
          "time": "2024-03-25T19:13:40Z"
        },
        {
          "name": "pylint_score",
          "value": "0.421",
          "time": "2024-03-25T19:13:40Z"
        }
      ],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "76062e92fddf37c0daa0aee3f06ef4b05409ae78",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "scripts/KeytermsExtraction.py"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "scripts/ReadPdf.py",
          "time": "2023-05-13T16:17:11Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2023-05-13T16:17:11Z"
        },
        {
          "name": "theta_1",
          "value": "0",
          "time": "2023-05-13T16:17:11Z"
        },
        {
          "name": "theta_2",
          "value": "0",
          "time": "2023-05-13T16:17:11Z"
        },
        {
          "name": "N_1",
          "value": "0",
          "time": "2023-05-13T16:17:11Z"
        },
        {
          "name": "N_2",
          "value": "0",
          "time": "2023-05-13T16:17:11Z"
        },
        {
          "name": "loc",
          "value": "69",
          "time": "2023-05-13T16:17:11Z"
        },
        {
          "name": "lloc",
          "value": "39",
          "time": "2023-05-13T16:17:11Z"
        },
        {
          "name": "sloc",
          "value": "36",
          "time": "2023-05-13T16:17:11Z"
        },
        {
          "name": "cloc",
          "value": "0",
          "time": "2023-05-13T16:17:11Z"
        },
        {
          "name": "dloc",
          "value": "21",
          "time": "2023-05-13T16:17:11Z"
        },
        {
          "name": "blank_lines",
          "value": "12",
          "time": "2023-05-13T16:17:11Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2023-05-13T16:17:11Z"
        },
        {
          "name": "loc",
          "value": "85",
          "time": "2023-07-14T18:35:40Z"
        },
        {
          "name": "lloc",
          "value": "45",
          "time": "2023-07-14T18:35:40Z"
        },
        {
          "name": "sloc",
          "value": "41",
          "time": "2023-07-14T18:35:40Z"
        },
        {
          "name": "dloc",
          "value": "28",
          "time": "2023-07-14T18:35:40Z"
        },
        {
          "name": "blank_lines",
          "value": "16",
          "time": "2023-07-14T18:35:40Z"
        },
        {
          "name": "loc",
          "value": "86",
          "time": "2024-03-25T19:13:40Z"
        },
        {
          "name": "blank_lines",
          "value": "17",
          "time": "2024-03-25T19:13:40Z"
        },
        {
          "name": "pylint_score",
          "value": "0.625",
          "time": "2023-07-14T18:35:40Z"
        }
      ],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "76062e92fddf37c0daa0aee3f06ef4b05409ae78",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "scripts/ReadPdf.py"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "scripts/TextCleaner.py",
          "time": "2023-05-13T16:17:11Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2023-05-13T16:17:11Z"
        },
        {
          "name": "theta_1",
          "value": "2",
          "time": "2023-05-13T16:17:11Z"
        },
        {
          "name": "theta_2",
          "value": "4",
          "time": "2023-05-13T16:17:11Z"
        },
        {
          "name": "N_1",
          "value": "2",
          "time": "2023-05-13T16:17:11Z"
        },
        {
          "name": "N_2",
          "value": "4",
          "time": "2023-05-13T16:17:11Z"
        },
        {
          "name": "loc",
          "value": "20",
          "time": "2023-05-13T16:17:11Z"
        },
        {
          "name": "lloc",
          "value": "16",
          "time": "2023-05-13T16:17:11Z"
        },
        {
          "name": "sloc",
          "value": "16",
          "time": "2023-05-13T16:17:11Z"
        },
        {
          "name": "cloc",
          "value": "0",
          "time": "2023-05-13T16:17:11Z"
        },
        {
          "name": "dloc",
          "value": "0",
          "time": "2023-05-13T16:17:11Z"
        },
        {
          "name": "blank_lines",
          "value": "4",
          "time": "2023-05-13T16:17:11Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2023-05-13T16:17:11Z"
        },
        {
          "name": "loc",
          "value": "22",
          "time": "2023-07-18T01:44:38Z"
        },
        {
          "name": "lloc",
          "value": "17",
          "time": "2023-07-18T01:44:38Z"
        },
        {
          "name": "sloc",
          "value": "18",
          "time": "2023-07-18T01:44:38Z"
        },
        {
          "name": "loc",
          "value": "21",
          "time": "2023-07-18T01:53:48Z"
        },
        {
          "name": "sloc",
          "value": "17",
          "time": "2023-07-18T01:53:48Z"
        },
        {
          "name": "blank_lines",
          "value": "5",
          "time": "2024-03-25T19:13:40Z"
        }
      ],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "76062e92fddf37c0daa0aee3f06ef4b05409ae78",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "scripts/TextCleaner.py"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "scripts/parsers/ParseJobDescToJson.py",
          "time": "2023-05-13T16:17:11Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2023-05-13T16:17:11Z"
        },
        {
          "name": "theta_1",
          "value": "0",
          "time": "2023-05-13T16:17:11Z"
        },
        {
          "name": "theta_2",
          "value": "0",
          "time": "2023-05-13T16:17:11Z"
        },
        {
          "name": "N_1",
          "value": "0",
          "time": "2023-05-13T16:17:11Z"
        },
        {
          "name": "N_2",
          "value": "0",
          "time": "2023-05-13T16:17:11Z"
        },
        {
          "name": "loc",
          "value": "43",
          "time": "2023-05-13T16:17:11Z"
        },
        {
          "name": "lloc",
          "value": "22",
          "time": "2023-05-13T16:17:11Z"
        },
        {
          "name": "sloc",
          "value": "34",
          "time": "2023-05-13T16:17:11Z"
        },
        {
          "name": "cloc",
          "value": "0",
          "time": "2023-05-13T16:17:11Z"
        },
        {
          "name": "dloc",
          "value": "3",
          "time": "2023-05-13T16:17:11Z"
        },
        {
          "name": "blank_lines",
          "value": "6",
          "time": "2023-05-13T16:17:11Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2023-05-13T16:17:11Z"
        },
        {
          "name": "loc",
          "value": "40",
          "time": "2024-03-25T19:13:40Z"
        },
        {
          "name": "sloc",
          "value": "30",
          "time": "2024-03-25T19:13:40Z"
        },
        {
          "name": "blank_lines",
          "value": "7",
          "time": "2024-03-25T19:13:40Z"
        }
      ],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "76062e92fddf37c0daa0aee3f06ef4b05409ae78",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "scripts/parsers/ParseJobDescToJson.py"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "scripts/parsers/ParseResumeToJson.py",
          "time": "2023-05-13T16:17:11Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2023-05-13T16:17:11Z"
        },
        {
          "name": "theta_1",
          "value": "0",
          "time": "2023-05-13T16:17:11Z"
        },
        {
          "name": "theta_2",
          "value": "0",
          "time": "2023-05-13T16:17:11Z"
        },
        {
          "name": "N_1",
          "value": "0",
          "time": "2023-05-13T16:17:11Z"
        },
        {
          "name": "N_2",
          "value": "0",
          "time": "2023-05-13T16:17:11Z"
        },
        {
          "name": "loc",
          "value": "54",
          "time": "2023-05-13T16:17:11Z"
        },
        {
          "name": "lloc",
          "value": "29",
          "time": "2023-05-13T16:17:11Z"
        },
        {
          "name": "sloc",
          "value": "45",
          "time": "2023-05-13T16:17:11Z"
        },
        {
          "name": "cloc",
          "value": "0",
          "time": "2023-05-13T16:17:11Z"
        },
        {
          "name": "dloc",
          "value": "3",
          "time": "2023-05-13T16:17:11Z"
        },
        {
          "name": "blank_lines",
          "value": "6",
          "time": "2023-05-13T16:17:11Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2023-05-13T16:17:11Z"
        },
        {
          "name": "loc",
          "value": "51",
          "time": "2024-03-25T19:13:40Z"
        },
        {
          "name": "sloc",
          "value": "41",
          "time": "2024-03-25T19:13:40Z"
        },
        {
          "name": "blank_lines",
          "value": "7",
          "time": "2024-03-25T19:13:40Z"
        },
        {
          "name": "pylint_score",
          "value": "0.077",
          "time": "2024-03-25T19:13:40Z"
        }
      ],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "76062e92fddf37c0daa0aee3f06ef4b05409ae78",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "scripts/parsers/ParseResumeToJson.py"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "scripts/utils/Similar.py",
          "time": "2023-05-13T16:17:11Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2023-05-13T16:17:11Z"
        },
        {
          "name": "theta_1",
          "value": "0",
          "time": "2023-05-13T16:17:11Z"
        },
        {
          "name": "theta_2",
          "value": "0",
          "time": "2023-05-13T16:17:11Z"
        },
        {
          "name": "N_1",
          "value": "0",
          "time": "2023-05-13T16:17:11Z"
        },
        {
          "name": "N_2",
          "value": "0",
          "time": "2023-05-13T16:17:11Z"
        },
        {
          "name": "loc",
          "value": "0",
          "time": "2023-05-13T16:17:11Z"
        },
        {
          "name": "lloc",
          "value": "0",
          "time": "2023-05-13T16:17:11Z"
        },
        {
          "name": "sloc",
          "value": "0",
          "time": "2023-05-13T16:17:11Z"
        },
        {
          "name": "cloc",
          "value": "0",
          "time": "2023-05-13T16:17:11Z"
        },
        {
          "name": "dloc",
          "value": "0",
          "time": "2023-05-13T16:17:11Z"
        },
        {
          "name": "blank_lines",
          "value": "0",
          "time": "2023-05-13T16:17:11Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2023-05-13T16:17:11Z"
        },
        {
          "name": "theta_1",
          "value": "3",
          "time": "2024-03-25T19:13:40Z"
        },
        {
          "name": "theta_2",
          "value": "10",
          "time": "2024-03-25T19:13:40Z"
        },
        {
          "name": "N_1",
          "value": "5",
          "time": "2024-03-25T19:13:40Z"
        },
        {
          "name": "N_2",
          "value": "10",
          "time": "2024-03-25T19:13:40Z"
        },
        {
          "name": "loc",
          "value": "11",
          "time": "2024-03-25T19:13:40Z"
        },
        {
          "name": "lloc",
          "value": "8",
          "time": "2024-03-25T19:13:40Z"
        },
        {
          "name": "sloc",
          "value": "8",
          "time": "2024-03-25T19:13:40Z"
        },
        {
          "name": "cloc",
          "value": "1",
          "time": "2024-03-25T19:13:40Z"
        },
        {
          "name": "blank_lines",
          "value": "2",
          "time": "2024-03-25T19:13:40Z"
        },
        {
          "name": "pylint_score",
          "value": "0.125",
          "time": "2024-03-25T19:13:40Z"
        }
      ],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "76062e92fddf37c0daa0aee3f06ef4b05409ae78",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "scripts/utils/Similar.py"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "scripts/utils/Utils.py",
          "time": "2023-05-13T16:17:11Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2023-05-13T16:17:11Z"
        },
        {
          "name": "theta_1",
          "value": "3",
          "time": "2023-05-13T16:17:11Z"
        },
        {
          "name": "theta_2",
          "value": "6",
          "time": "2023-05-13T16:17:11Z"
        },
        {
          "name": "N_1",
          "value": "3",
          "time": "2023-05-13T16:17:11Z"
        },
        {
          "name": "N_2",
          "value": "6",
          "time": "2023-05-13T16:17:11Z"
        },
        {
          "name": "loc",
          "value": "97",
          "time": "2023-05-13T16:17:11Z"
        },
        {
          "name": "lloc",
          "value": "44",
          "time": "2023-05-13T16:17:11Z"
        },
        {
          "name": "sloc",
          "value": "41",
          "time": "2023-05-13T16:17:11Z"
        },
        {
          "name": "cloc",
          "value": "1",
          "time": "2023-05-13T16:17:11Z"
        },
        {
          "name": "dloc",
          "value": "34",
          "time": "2023-05-13T16:17:11Z"
        },
        {
          "name": "blank_lines",
          "value": "21",
          "time": "2023-05-13T16:17:11Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2023-05-13T16:17:11Z"
        },
        {
          "name": "loc",
          "value": "98",
          "time": "2024-03-25T19:13:40Z"
        },
        {
          "name": "blank_lines",
          "value": "22",
          "time": "2024-03-25T19:13:40Z"
        },
        {
          "name": "pylint_score",
          "value": "0.22200000000000003",
          "time": "2024-03-25T19:13:40Z"
        }
      ],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "76062e92fddf37c0daa0aee3f06ef4b05409ae78",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "scripts/utils/Utils.py"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "scripts/utils/tf_idf.py",
          "time": "2023-05-13T16:17:11Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2023-05-13T16:17:11Z"
        },
        {
          "name": "theta_1",
          "value": "0",
          "time": "2023-05-13T16:17:11Z"
        },
        {
          "name": "theta_2",
          "value": "0",
          "time": "2023-05-13T16:17:11Z"
        },
        {
          "name": "N_1",
          "value": "0",
          "time": "2023-05-13T16:17:11Z"
        },
        {
          "name": "N_2",
          "value": "0",
          "time": "2023-05-13T16:17:11Z"
        },
        {
          "name": "loc",
          "value": "0",
          "time": "2023-05-13T16:17:11Z"
        },
        {
          "name": "lloc",
          "value": "0",
          "time": "2023-05-13T16:17:11Z"
        },
        {
          "name": "sloc",
          "value": "0",
          "time": "2023-05-13T16:17:11Z"
        },
        {
          "name": "cloc",
          "value": "0",
          "time": "2023-05-13T16:17:11Z"
        },
        {
          "name": "dloc",
          "value": "0",
          "time": "2023-05-13T16:17:11Z"
        },
        {
          "name": "blank_lines",
          "value": "0",
          "time": "2023-05-13T16:17:11Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2023-05-13T16:17:11Z"
        }
      ],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "7bd17fdfd1b8ae6f8ef65e3074ccba41baa1f7af",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "scripts/utils/tf_idf.py"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "streamlit_app.py",
          "time": "2023-05-13T16:17:11Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2023-05-13T16:17:11Z"
        },
        {
          "name": "theta_1",
          "value": "10",
          "time": "2023-05-13T16:17:11Z"
        },
        {
          "name": "theta_2",
          "value": "38",
          "time": "2023-05-13T16:17:11Z"
        },
        {
          "name": "N_1",
          "value": "28",
          "time": "2023-05-13T16:17:11Z"
        },
        {
          "name": "N_2",
          "value": "55",
          "time": "2023-05-13T16:17:11Z"
        },
        {
          "name": "loc",
          "value": "269",
          "time": "2023-05-13T16:17:11Z"
        },
        {
          "name": "lloc",
          "value": "123",
          "time": "2023-05-13T16:17:11Z"
        },
        {
          "name": "sloc",
          "value": "155",
          "time": "2023-05-13T16:17:11Z"
        },
        {
          "name": "cloc",
          "value": "9",
          "time": "2023-05-13T16:17:11Z"
        },
        {
          "name": "dloc",
          "value": "27",
          "time": "2023-05-13T16:17:11Z"
        },
        {
          "name": "blank_lines",
          "value": "78",
          "time": "2023-05-13T16:17:11Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2023-05-13T16:17:11Z"
        },
        {
          "name": "loc",
          "value": "271",
          "time": "2023-07-14T18:35:40Z"
        },
        {
          "name": "lloc",
          "value": "122",
          "time": "2023-07-14T18:35:40Z"
        },
        {
          "name": "sloc",
          "value": "156",
          "time": "2023-07-14T18:35:40Z"
        },
        {
          "name": "cloc",
          "value": "10",
          "time": "2023-07-14T18:35:40Z"
        },
        {
          "name": "theta_1",
          "value": "0",
          "time": "2023-07-16T20:23:45Z"
        },
        {
          "name": "theta_2",
          "value": "0",
          "time": "2023-07-16T20:23:45Z"
        },
        {
          "name": "N_1",
          "value": "0",
          "time": "2023-07-16T20:23:45Z"
        },
        {
          "name": "N_2",
          "value": "0",
          "time": "2023-07-16T20:23:45Z"
        },
        {
          "name": "loc",
          "value": "98",
          "time": "2023-07-16T20:23:45Z"
        },
        {
          "name": "lloc",
          "value": "42",
          "time": "2023-07-16T20:23:45Z"
        },
        {
          "name": "sloc",
          "value": "70",
          "time": "2023-07-16T20:23:45Z"
        },
        {
          "name": "cloc",
          "value": "5",
          "time": "2023-07-16T20:23:45Z"
        },
        {
          "name": "dloc",
          "value": "0",
          "time": "2023-07-16T20:23:45Z"
        },
        {
          "name": "blank_lines",
          "value": "23",
          "time": "2023-07-16T20:23:45Z"
        },
        {
          "name": "loc",
          "value": "99",
          "time": "2023-07-17T01:56:16Z"
        },
        {
          "name": "lloc",
          "value": "43",
          "time": "2023-07-17T01:56:16Z"
        },
        {
          "name": "sloc",
          "value": "71",
          "time": "2023-07-17T01:56:16Z"
        },
        {
          "name": "loc",
          "value": "101",
          "time": "2023-07-18T01:02:34Z"
        },
        {
          "name": "blank_lines",
          "value": "25",
          "time": "2023-07-18T01:02:34Z"
        },
        {
          "name": "theta_1",
          "value": "5",
          "time": "2023-07-18T11:08:42Z"
        },
        {
          "name": "theta_2",
          "value": "23",
          "time": "2023-07-18T11:08:42Z"
        },
        {
          "name": "N_1",
          "value": "13",
          "time": "2023-07-18T11:08:42Z"
        },
        {
          "name": "N_2",
          "value": "26",
          "time": "2023-07-18T11:08:42Z"
        },
        {
          "name": "loc",
          "value": "323",
          "time": "2023-07-18T11:08:42Z"
        },
        {
          "name": "lloc",
          "value": "146",
          "time": "2023-07-18T11:08:42Z"
        },
        {
          "name": "sloc",
          "value": "229",
          "time": "2023-07-18T11:08:42Z"
        },
        {
          "name": "cloc",
          "value": "25",
          "time": "2023-07-18T11:08:42Z"
        },
        {
          "name": "blank_lines",
          "value": "70",
          "time": "2023-07-18T11:08:42Z"
        },
        {
          "name": "theta_1",
          "value": "4",
          "time": "2023-07-18T12:01:20Z"
        },
        {
          "name": "theta_2",
          "value": "13",
          "time": "2023-07-18T12:01:20Z"
        },
        {
          "name": "N_1",
          "value": "8",
          "time": "2023-07-18T12:01:20Z"
        },
        {
          "name": "N_2",
          "value": "16",
          "time": "2023-07-18T12:01:20Z"
        },
        {
          "name": "loc",
          "value": "267",
          "time": "2023-07-18T12:01:20Z"
        },
        {
          "name": "lloc",
          "value": "138",
          "time": "2023-07-18T12:01:20Z"
        },
        {
          "name": "sloc",
          "value": "183",
          "time": "2023-07-18T12:01:20Z"
        },
        {
          "name": "cloc",
          "value": "22",
          "time": "2023-07-18T12:01:20Z"
        },
        {
          "name": "blank_lines",
          "value": "63",
          "time": "2023-07-18T12:01:20Z"
        },
        {
          "name": "lloc",
          "value": "141",
          "time": "2023-08-06T12:17:25Z"
        },
        {
          "name": "sloc",
          "value": "186",
          "time": "2023-08-06T12:17:25Z"
        },
        {
          "name": "blank_lines",
          "value": "64",
          "time": "2023-08-06T12:17:25Z"
        },
        {
          "name": "theta_2",
          "value": "15",
          "time": "2023-08-06T17:21:09Z"
        },
        {
          "name": "N_1",
          "value": "10",
          "time": "2023-08-06T17:21:09Z"
        },
        {
          "name": "N_2",
          "value": "20",
          "time": "2023-08-06T17:21:09Z"
        },
        {
          "name": "loc",
          "value": "276",
          "time": "2023-08-06T17:21:09Z"
        },
        {
          "name": "sloc",
          "value": "191",
          "time": "2023-08-06T17:21:09Z"
        },
        {
          "name": "loc",
          "value": "282",
          "time": "2023-08-07T22:33:40Z"
        },
        {
          "name": "lloc",
          "value": "147",
          "time": "2023-08-07T22:33:40Z"
        },
        {
          "name": "sloc",
          "value": "192",
          "time": "2023-08-07T22:33:40Z"
        },
        {
          "name": "blank_lines",
          "value": "69",
          "time": "2023-08-07T22:33:40Z"
        },
        {
          "name": "theta_2",
          "value": "17",
          "time": "2023-08-08T17:42:14Z"
        },
        {
          "name": "N_1",
          "value": "11",
          "time": "2023-08-08T17:42:14Z"
        },
        {
          "name": "N_2",
          "value": "22",
          "time": "2023-08-08T17:42:14Z"
        },
        {
          "name": "loc",
          "value": "301",
          "time": "2023-08-08T17:42:14Z"
        },
        {
          "name": "lloc",
          "value": "165",
          "time": "2023-08-08T17:42:14Z"
        },
        {
          "name": "sloc",
          "value": "210",
          "time": "2023-08-08T17:42:14Z"
        },
        {
          "name": "theta_1",
          "value": "3",
          "time": "2023-10-07T21:32:50Z"
        },
        {
          "name": "theta_2",
          "value": "11",
          "time": "2023-10-07T21:32:50Z"
        },
        {
          "name": "N_1",
          "value": "7",
          "time": "2023-10-07T21:32:50Z"
        },
        {
          "name": "N_2",
          "value": "14",
          "time": "2023-10-07T21:32:50Z"
        },
        {
          "name": "loc",
          "value": "292",
          "time": "2023-10-07T21:32:50Z"
        },
        {
          "name": "lloc",
          "value": "155",
          "time": "2023-10-07T21:32:50Z"
        },
        {
          "name": "sloc",
          "value": "196",
          "time": "2023-10-07T21:32:50Z"
        },
        {
          "name": "cloc",
          "value": "23",
          "time": "2023-10-07T21:32:50Z"
        },
        {
          "name": "blank_lines",
          "value": "74",
          "time": "2023-10-07T21:32:50Z"
        },
        {
          "name": "lloc",
          "value": "151",
          "time": "2023-10-31T10:03:32Z"
        },
        {
          "name": "sloc",
          "value": "185",
          "time": "2023-10-31T10:03:32Z"
        },
        {
          "name": "cloc",
          "value": "26",
          "time": "2023-10-31T10:03:32Z"
        },
        {
          "name": "blank_lines",
          "value": "72",
          "time": "2023-10-31T10:03:32Z"
        },
        {
          "name": "theta_2",
          "value": "9",
          "time": "2024-03-13T00:44:27Z"
        },
        {
          "name": "N_1",
          "value": "6",
          "time": "2024-03-13T00:44:27Z"
        },
        {
          "name": "N_2",
          "value": "12",
          "time": "2024-03-13T00:44:27Z"
        },
        {
          "name": "loc",
          "value": "273",
          "time": "2024-03-13T00:44:27Z"
        },
        {
          "name": "lloc",
          "value": "144",
          "time": "2024-03-13T00:44:27Z"
        },
        {
          "name": "sloc",
          "value": "178",
          "time": "2024-03-13T00:44:27Z"
        },
        {
          "name": "N_2",
          "value": "19",
          "time": "2024-03-25T19:13:40Z"
        },
        {
          "name": "loc",
          "value": "357",
          "time": "2024-03-25T19:13:40Z"
        },
        {
          "name": "sloc",
          "value": "262",
          "time": "2024-03-25T19:13:40Z"
        },
        {
          "name": "pylint_score",
          "value": "0.541",
          "time": "2023-07-14T18:35:40Z"
        },
        {
          "name": "pylint_score",
          "value": "0.528",
          "time": "2023-07-18T11:08:42Z"
        },
        {
          "name": "pylint_score",
          "value": "0.489",
          "time": "2023-07-18T12:01:20Z"
        },
        {
          "name": "pylint_score",
          "value": "0.5",
          "time": "2023-08-06T12:17:25Z"
        },
        {
          "name": "pylint_score",
          "value": "0.497",
          "time": "2023-08-06T17:21:09Z"
        },
        {
          "name": "pylint_score",
          "value": "0.493",
          "time": "2023-08-07T22:33:40Z"
        },
        {
          "name": "pylint_score",
          "value": "0.522",
          "time": "2023-08-08T17:42:14Z"
        },
        {
          "name": "pylint_score",
          "value": "0.484",
          "time": "2023-10-07T21:32:50Z"
        },
        {
          "name": "pylint_score",
          "value": "0.45599999999999996",
          "time": "2023-10-31T10:03:32Z"
        },
        {
          "name": "pylint_score",
          "value": "0.364",
          "time": "2024-03-13T00:44:27Z"
        },
        {
          "name": "pylint_score",
          "value": "0.393",
          "time": "2024-03-25T19:13:40Z"
        }
      ],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "731201ab4fd1c4ff30b0010460f9979ab5505a29",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "streamlit_app.py"
    },
    {
      "type": "commit",
      "attributes": [
        {
          "name": "message",
          "value": "0.0.1 Canary-Releasing code for a second version. (#39)",
          "time": "2023-05-13T16:17:11Z"
        },
        {
          "name": "description",
          "value": "* 001 remove unnecessary images\r\n\r\n* 002 Updated the readme\r\n\r\n* Removed all the screenshots\r\n\r\n* Alpha-001-Initial-changes\r\n\r\n* 001-Added Scripts to load data.\r\n\r\n* 002 WIP for preprocessing\r\n\r\n* 005 Functionable preprocessing pipe\r\n\r\n* 006 Classes are complete\r\n\r\n* 007 Preprocess, json parsing pipeline is done \ud83c\udf89\r\n\r\n* 008 Preprocessing to JSON is complete. \ud83c\udf89\r\n\r\n* 009 Working on Streamlit app\r\n\r\n* 010-Steamlit-app + data-viz is complete\r\n\r\n* 011- Updated Git Ignore\r\n\r\n* 012 - Code Cleanup Phase 01\r\n\r\n* 012 - Code Cleanup Phase 02\r\n\r\n* 014 - Code Cleanup Phase 02\r\n\r\n* 015 Code cleanup phase 02\r\n\r\n* 016 Code Cleanup Phase 02\r\n\r\n* 017 Added Header Image\r\n\r\n* 018 Updated the Readme.",
          "time": "2023-05-13T16:17:11Z"
        },
        {
          "name": "to",
          "value": "['Resume-Matcher:(HEAD detached at 004b8a0)', 'Resume-Matcher:main']",
          "time": "2023-05-13T16:17:11Z"
        }
      ],
      "relationships": [
        {
          "objectId": ".gitignore",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Assets/img/header_image.jpg",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/JobDesc/Backend Developer.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/JobDesc/Billing cum Logistics Manager.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/JobDesc/Data Scientist.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/JobDesc/Director of Engineering.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/JobDesc/Global Industry Content Manager.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/JobDesc/HTML Developer.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/JobDesc/IT Project Manager.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/JobDesc/Lead Technical Program Manager.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/JobDesc/Primary English Teacher.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/JobDesc/Revenue Reporting Data Analyst.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/JobDesc/Senior Product Manager.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/JobDesc/Senior Software Developer.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/JobDesc/Web Developer.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/JobDesc/Web_dev_job.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Processed/Job-Desc-37a376db-55f8-476b-a165-81758187b9a8.json",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Processed/Job-Desc-a4f06ccb-8d5a-4d0b-9f02-3ba6d686472e.json",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Processed/Resume-d531571e-e4fa-45eb-ab6a-267cdeb6647e.json",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Processed/Resume-e871fd8d-2097-4804-aa34-004397005e29.json",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Raw/job_1.txt",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Raw/job_2.txt",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Raw/job_desc_1.pdf",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Raw/job_desc_2.pdf",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Raw/resume_1.pdf",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/ABHAY RAJ DWIVEDI.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/ADRYJA GHOSH.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/AJAY CHINNI.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/ALANKRIT NIRJHAR.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/AMITABHA.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/Abhishek Sharma.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/Amarpreet Singh.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/Amruta B.pdf",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/Arun Kumar.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/Ashish Singh.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/Ashwani Kumar Rajput.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/Avik Bhattacharya.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/Bijjula Sahithi.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/CHARUTA DANDEKAR.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/Chakuswanu.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/Charu Tyagi.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/DEVENDRA K NAIK.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/DIVYA PRAKASH.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/DRISHTI SHARMA.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/Debmalya Paul.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/Deepak Hariharan.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/Dhavakumar.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/Dileep Matha.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/ELIZABETH SONY THOMAS.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/GurshidPremium.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/HARSHAD B.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/Ishrat Fatma.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/Jithin J Nair.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/Kasarapu Sahithi.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/Kaustav Sen.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/MADHU H.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/MONICA CHOPRA.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/Manoj Kumar.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/Manvi Singh.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/NARENDRA HINGE.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/NARENDRA SHUKLA.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/NEDA RIZVI.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/Nandagopal.pdf",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/Nilesh Birari.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/POOJA DWIVEDI.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/Pallavi Sunil.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/Pooja L.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/Prasanna Navnath.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/Prashant Bhat.pdf",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/RAHUL GOEL.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/RAJINDER KUMAR.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/RAVI RANJAN KUMAR.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/RISHABH SHARMA.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/RUCHITA BAKSHI.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/Rahul Kumar.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/Ranjan Raikwar.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/Renu Tiwari.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/SARVESH KARAN.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/SNEHA SAHU.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/Seshadri Sastry Kunapuli.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/Shambhai Mishra.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/Shiraz Siddiqui.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/Sneha Vijay Bhamkar.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/Sumith Chandru.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/Suraj Chauhan.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/Swati Mehta.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/Vikram Balasubramanian.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/Vipin Kumar.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/Vivek Kumar.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/khyati gandhi.docx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Images/NAIVE RESUME MATCHER.jpg",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Images/logo.png",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Images/rm_logo.png",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Images/rmlogo.png",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Images/step1.png",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Images/step2.png",
          "qualifier": "aggregates"
        },
        {
          "objectId": "README.md",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Screenshots/1.png",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Screenshots/2.png",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Screenshots/3.png",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Screenshots/4.png",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Screenshots/5.png",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Screenshots/6.png",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Screenshots/7.png",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Screenshots/Gif_View.gif",
          "qualifier": "aggregates"
        },
        {
          "objectId": "requirements.txt",
          "qualifier": "aggregates"
        },
        {
          "objectId": "run.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "scripts/Extractor.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "scripts/KeytermsExtraction.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "scripts/ReadPdf.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "scripts/TextCleaner.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "scripts/parsers/ParseJobDescToJson.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "scripts/parsers/ParseResumeToJson.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "scripts/utils/Similar.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "scripts/utils/Utils.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "scripts/utils/tf_idf.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "streamlit_app.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "test_notebook.ipynb",
          "qualifier": "aggregates"
        },
        {
          "objectId": "04b282911c7dc4d2f4a45b0060dc527493e979ce",
          "qualifier": "is-child-of"
        },
        {
          "objectId": "0.8455694434031297",
          "qualifier": "commit_mi"
        },
        {
          "objectId": "Saurabh Rai",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "0.25481818181818183",
          "qualifier": "commit_pylint"
        }
      ],
      "id": "7bd17fdfd1b8ae6f8ef65e3074ccba41baa1f7af"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "scripts/similarity/qdrant_search.py",
          "time": "2023-07-14T18:35:40Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2023-07-14T18:35:40Z"
        },
        {
          "name": "theta_1",
          "value": "0",
          "time": "2023-07-14T18:35:40Z"
        },
        {
          "name": "theta_2",
          "value": "0",
          "time": "2023-07-14T18:35:40Z"
        },
        {
          "name": "N_1",
          "value": "0",
          "time": "2023-07-14T18:35:40Z"
        },
        {
          "name": "N_2",
          "value": "0",
          "time": "2023-07-14T18:35:40Z"
        },
        {
          "name": "loc",
          "value": "0",
          "time": "2023-07-14T18:35:40Z"
        },
        {
          "name": "lloc",
          "value": "0",
          "time": "2023-07-14T18:35:40Z"
        },
        {
          "name": "sloc",
          "value": "0",
          "time": "2023-07-14T18:35:40Z"
        },
        {
          "name": "cloc",
          "value": "0",
          "time": "2023-07-14T18:35:40Z"
        },
        {
          "name": "dloc",
          "value": "0",
          "time": "2023-07-14T18:35:40Z"
        },
        {
          "name": "blank_lines",
          "value": "0",
          "time": "2023-07-14T18:35:40Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2023-07-14T18:35:40Z"
        },
        {
          "name": "theta_1",
          "value": "1",
          "time": "2023-07-18T00:00:41Z"
        },
        {
          "name": "theta_2",
          "value": "1",
          "time": "2023-07-18T00:00:41Z"
        },
        {
          "name": "N_1",
          "value": "1",
          "time": "2023-07-18T00:00:41Z"
        },
        {
          "name": "N_2",
          "value": "1",
          "time": "2023-07-18T00:00:41Z"
        },
        {
          "name": "loc",
          "value": "63",
          "time": "2023-07-18T00:00:41Z"
        },
        {
          "name": "lloc",
          "value": "25",
          "time": "2023-07-18T00:00:41Z"
        },
        {
          "name": "sloc",
          "value": "49",
          "time": "2023-07-18T00:00:41Z"
        },
        {
          "name": "cloc",
          "value": "3",
          "time": "2023-07-18T00:00:41Z"
        },
        {
          "name": "dloc",
          "value": "3",
          "time": "2023-07-18T00:00:41Z"
        },
        {
          "name": "blank_lines",
          "value": "8",
          "time": "2023-07-18T00:00:41Z"
        },
        {
          "name": "loc",
          "value": "92",
          "time": "2023-07-18T01:02:34Z"
        },
        {
          "name": "lloc",
          "value": "34",
          "time": "2023-07-18T01:02:34Z"
        },
        {
          "name": "sloc",
          "value": "58",
          "time": "2023-07-18T01:02:34Z"
        },
        {
          "name": "cloc",
          "value": "15",
          "time": "2023-07-18T01:02:34Z"
        },
        {
          "name": "blank_lines",
          "value": "16",
          "time": "2023-07-18T01:02:34Z"
        },
        {
          "name": "pylint_score",
          "value": "0.391",
          "time": "2023-07-18T00:00:41Z"
        },
        {
          "name": "pylint_score",
          "value": "0.438",
          "time": "2023-07-18T01:02:34Z"
        }
      ],
      "relationships": [
        {
          "objectId": "saurabhraidev",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "0dd3af3cc87dd49bb90900f7e861d72c1f3a1683",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "scripts/similarity/qdrant_search.py"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "scripts/utils/ExtraScripts.py",
          "time": "2023-07-14T18:35:40Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2023-07-14T18:35:40Z"
        },
        {
          "name": "theta_1",
          "value": "0",
          "time": "2023-07-14T18:35:40Z"
        },
        {
          "name": "theta_2",
          "value": "0",
          "time": "2023-07-14T18:35:40Z"
        },
        {
          "name": "N_1",
          "value": "0",
          "time": "2023-07-14T18:35:40Z"
        },
        {
          "name": "N_2",
          "value": "0",
          "time": "2023-07-14T18:35:40Z"
        },
        {
          "name": "loc",
          "value": "0",
          "time": "2023-07-14T18:35:40Z"
        },
        {
          "name": "lloc",
          "value": "0",
          "time": "2023-07-14T18:35:40Z"
        },
        {
          "name": "sloc",
          "value": "0",
          "time": "2023-07-14T18:35:40Z"
        },
        {
          "name": "cloc",
          "value": "0",
          "time": "2023-07-14T18:35:40Z"
        },
        {
          "name": "dloc",
          "value": "0",
          "time": "2023-07-14T18:35:40Z"
        },
        {
          "name": "blank_lines",
          "value": "0",
          "time": "2023-07-14T18:35:40Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2023-07-14T18:35:40Z"
        },
        {
          "name": "theta_1",
          "value": "10",
          "time": "2023-07-16T20:23:45Z"
        },
        {
          "name": "theta_2",
          "value": "38",
          "time": "2023-07-16T20:23:45Z"
        },
        {
          "name": "N_1",
          "value": "28",
          "time": "2023-07-16T20:23:45Z"
        },
        {
          "name": "N_2",
          "value": "55",
          "time": "2023-07-16T20:23:45Z"
        },
        {
          "name": "loc",
          "value": "170",
          "time": "2023-07-16T20:23:45Z"
        },
        {
          "name": "lloc",
          "value": "66",
          "time": "2023-07-16T20:23:45Z"
        },
        {
          "name": "sloc",
          "value": "64",
          "time": "2023-07-16T20:23:45Z"
        },
        {
          "name": "cloc",
          "value": "25",
          "time": "2023-07-16T20:23:45Z"
        },
        {
          "name": "dloc",
          "value": "27",
          "time": "2023-07-16T20:23:45Z"
        },
        {
          "name": "blank_lines",
          "value": "54",
          "time": "2023-07-16T20:23:45Z"
        },
        {
          "name": "pylint_score",
          "value": "0.429",
          "time": "2023-07-16T20:23:45Z"
        }
      ],
      "relationships": [
        {
          "objectId": "saurabhraidev",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "a2e4b4a1af11d36d3aad818b01d0dd24aeef0e53",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "scripts/utils/ExtraScripts.py"
    },
    {
      "type": "commit",
      "attributes": [
        {
          "name": "message",
          "value": "Updated-the-parsing-algo",
          "time": "2023-07-14T18:35:40Z"
        },
        {
          "name": "description",
          "value": "",
          "time": "2023-07-14T18:35:40Z"
        },
        {
          "name": "to",
          "value": "['Resume-Matcher:(HEAD detached at 004b8a0)', 'Resume-Matcher:main']",
          "time": "2023-07-14T18:35:40Z"
        }
      ],
      "relationships": [
        {
          "objectId": "Data/Processed/Resume-f493637b-0880-4eb9-ba16-a79cb254e94a.json",
          "qualifier": "aggregates"
        },
        {
          "objectId": "scripts/ReadPdf.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "scripts/parsers/ParseJobDescToJson.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "scripts/similarity/qdrant_search.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "scripts/utils/ExtraScripts.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "streamlit_app.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "3f818c17230e378663849028c849111c10fd96cc",
          "qualifier": "is-child-of"
        },
        {
          "objectId": "0.8695146081494709",
          "qualifier": "commit_mi"
        },
        {
          "objectId": "saurabhraidev",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "0.20569230769230767",
          "qualifier": "commit_pylint"
        }
      ],
      "id": "657cdfe81b018eaa5560cb8ff5b12a2ac7858986"
    },
    {
      "type": "commit",
      "attributes": [
        {
          "name": "message",
          "value": "Made changes to streamlit_app",
          "time": "2023-07-16T20:23:45Z"
        },
        {
          "name": "description",
          "value": "",
          "time": "2023-07-16T20:23:45Z"
        },
        {
          "name": "to",
          "value": "['Resume-Matcher:(HEAD detached at 004b8a0)', 'Resume-Matcher:main']",
          "time": "2023-07-16T20:23:45Z"
        }
      ],
      "relationships": [
        {
          "objectId": "scripts/utils/ExtraScripts.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "streamlit_app.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "0262c977e8f6bc9d64411f5ff5f5f7d4bf363702",
          "qualifier": "is-child-of"
        },
        {
          "objectId": "0.8767733145340217",
          "qualifier": "commit_mi"
        },
        {
          "objectId": "saurabhraidev",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "0.1970769230769231",
          "qualifier": "commit_pylint"
        }
      ],
      "id": "a2e4b4a1af11d36d3aad818b01d0dd24aeef0e53"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "scripts/JobDescriptionProcessor.py",
          "time": "2023-07-17T01:56:16Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2023-07-17T01:56:16Z"
        },
        {
          "name": "theta_1",
          "value": "2",
          "time": "2023-07-17T01:56:16Z"
        },
        {
          "name": "theta_2",
          "value": "8",
          "time": "2023-07-17T01:56:16Z"
        },
        {
          "name": "N_1",
          "value": "4",
          "time": "2023-07-17T01:56:16Z"
        },
        {
          "name": "N_2",
          "value": "8",
          "time": "2023-07-17T01:56:16Z"
        },
        {
          "name": "loc",
          "value": "43",
          "time": "2023-07-17T01:56:16Z"
        },
        {
          "name": "lloc",
          "value": "34",
          "time": "2023-07-17T01:56:16Z"
        },
        {
          "name": "sloc",
          "value": "36",
          "time": "2023-07-17T01:56:16Z"
        },
        {
          "name": "cloc",
          "value": "0",
          "time": "2023-07-17T01:56:16Z"
        },
        {
          "name": "dloc",
          "value": "0",
          "time": "2023-07-17T01:56:16Z"
        },
        {
          "name": "blank_lines",
          "value": "7",
          "time": "2023-07-17T01:56:16Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2023-07-17T01:56:16Z"
        },
        {
          "name": "theta_2",
          "value": "10",
          "time": "2023-07-17T02:11:48Z"
        },
        {
          "name": "N_1",
          "value": "5",
          "time": "2023-07-17T02:11:48Z"
        },
        {
          "name": "N_2",
          "value": "10",
          "time": "2023-07-17T02:11:48Z"
        },
        {
          "name": "loc",
          "value": "46",
          "time": "2024-03-25T19:13:40Z"
        },
        {
          "name": "lloc",
          "value": "33",
          "time": "2024-03-25T19:13:40Z"
        },
        {
          "name": "sloc",
          "value": "38",
          "time": "2024-03-25T19:13:40Z"
        },
        {
          "name": "blank_lines",
          "value": "8",
          "time": "2024-03-25T19:13:40Z"
        },
        {
          "name": "pylint_score",
          "value": "0.294",
          "time": "2023-07-17T02:11:48Z"
        },
        {
          "name": "pylint_score",
          "value": "0.515",
          "time": "2024-03-25T19:13:40Z"
        }
      ],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "76062e92fddf37c0daa0aee3f06ef4b05409ae78",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "scripts/JobDescriptionProcessor.py"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "scripts/ResumeProcessor.py",
          "time": "2023-07-17T01:56:16Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2023-07-17T01:56:16Z"
        },
        {
          "name": "theta_1",
          "value": "2",
          "time": "2023-07-17T01:56:16Z"
        },
        {
          "name": "theta_2",
          "value": "8",
          "time": "2023-07-17T01:56:16Z"
        },
        {
          "name": "N_1",
          "value": "4",
          "time": "2023-07-17T01:56:16Z"
        },
        {
          "name": "N_2",
          "value": "8",
          "time": "2023-07-17T01:56:16Z"
        },
        {
          "name": "loc",
          "value": "41",
          "time": "2023-07-17T01:56:16Z"
        },
        {
          "name": "lloc",
          "value": "34",
          "time": "2023-07-17T01:56:16Z"
        },
        {
          "name": "sloc",
          "value": "34",
          "time": "2023-07-17T01:56:16Z"
        },
        {
          "name": "cloc",
          "value": "0",
          "time": "2023-07-17T01:56:16Z"
        },
        {
          "name": "dloc",
          "value": "0",
          "time": "2023-07-17T01:56:16Z"
        },
        {
          "name": "blank_lines",
          "value": "7",
          "time": "2023-07-17T01:56:16Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2023-07-17T01:56:16Z"
        },
        {
          "name": "theta_2",
          "value": "10",
          "time": "2023-07-17T02:11:48Z"
        },
        {
          "name": "N_1",
          "value": "5",
          "time": "2023-07-17T02:11:48Z"
        },
        {
          "name": "N_2",
          "value": "10",
          "time": "2023-07-17T02:11:48Z"
        },
        {
          "name": "loc",
          "value": "42",
          "time": "2023-07-17T02:11:48Z"
        },
        {
          "name": "sloc",
          "value": "35",
          "time": "2023-07-17T02:11:48Z"
        },
        {
          "name": "loc",
          "value": "43",
          "time": "2024-03-25T19:13:40Z"
        },
        {
          "name": "lloc",
          "value": "33",
          "time": "2024-03-25T19:13:40Z"
        },
        {
          "name": "blank_lines",
          "value": "8",
          "time": "2024-03-25T19:13:40Z"
        },
        {
          "name": "pylint_score",
          "value": "0.294",
          "time": "2023-07-17T02:11:48Z"
        },
        {
          "name": "pylint_score",
          "value": "0.515",
          "time": "2024-03-25T19:13:40Z"
        }
      ],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "76062e92fddf37c0daa0aee3f06ef4b05409ae78",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "scripts/ResumeProcessor.py"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "scripts/utils/ReadFiles.py",
          "time": "2023-07-17T01:56:16Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2023-07-17T01:56:16Z"
        },
        {
          "name": "theta_1",
          "value": "0",
          "time": "2023-07-17T01:56:16Z"
        },
        {
          "name": "theta_2",
          "value": "0",
          "time": "2023-07-17T01:56:16Z"
        },
        {
          "name": "N_1",
          "value": "0",
          "time": "2023-07-17T01:56:16Z"
        },
        {
          "name": "N_2",
          "value": "0",
          "time": "2023-07-17T01:56:16Z"
        },
        {
          "name": "loc",
          "value": "7",
          "time": "2023-07-17T01:56:16Z"
        },
        {
          "name": "lloc",
          "value": "4",
          "time": "2023-07-17T01:56:16Z"
        },
        {
          "name": "sloc",
          "value": "5",
          "time": "2023-07-17T01:56:16Z"
        },
        {
          "name": "cloc",
          "value": "0",
          "time": "2023-07-17T01:56:16Z"
        },
        {
          "name": "dloc",
          "value": "0",
          "time": "2023-07-17T01:56:16Z"
        },
        {
          "name": "blank_lines",
          "value": "2",
          "time": "2023-07-17T01:56:16Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2023-07-17T01:56:16Z"
        },
        {
          "name": "theta_1",
          "value": "2",
          "time": "2023-07-29T19:20:50Z"
        },
        {
          "name": "theta_2",
          "value": "4",
          "time": "2023-07-29T19:20:50Z"
        },
        {
          "name": "N_1",
          "value": "2",
          "time": "2023-07-29T19:20:50Z"
        },
        {
          "name": "N_2",
          "value": "4",
          "time": "2023-07-29T19:20:50Z"
        },
        {
          "name": "loc",
          "value": "5",
          "time": "2023-07-29T19:20:50Z"
        },
        {
          "name": "sloc",
          "value": "4",
          "time": "2023-07-29T19:20:50Z"
        },
        {
          "name": "blank_lines",
          "value": "1",
          "time": "2023-07-29T19:20:50Z"
        },
        {
          "name": "loc",
          "value": "10",
          "time": "2024-03-25T19:13:40Z"
        },
        {
          "name": "sloc",
          "value": "8",
          "time": "2024-03-25T19:13:40Z"
        },
        {
          "name": "pylint_score",
          "value": "0.25",
          "time": "2023-07-29T19:20:50Z"
        },
        {
          "name": "pylint_score",
          "value": "0.5",
          "time": "2024-03-25T19:13:40Z"
        }
      ],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "76062e92fddf37c0daa0aee3f06ef4b05409ae78",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "scripts/utils/ReadFiles.py"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "streamlit_second.py",
          "time": "2023-07-17T01:56:16Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2023-07-17T01:56:16Z"
        },
        {
          "name": "theta_1",
          "value": "0",
          "time": "2023-07-17T01:56:16Z"
        },
        {
          "name": "theta_2",
          "value": "0",
          "time": "2023-07-17T01:56:16Z"
        },
        {
          "name": "N_1",
          "value": "0",
          "time": "2023-07-17T01:56:16Z"
        },
        {
          "name": "N_2",
          "value": "0",
          "time": "2023-07-17T01:56:16Z"
        },
        {
          "name": "loc",
          "value": "50",
          "time": "2023-07-17T01:56:16Z"
        },
        {
          "name": "lloc",
          "value": "26",
          "time": "2023-07-17T01:56:16Z"
        },
        {
          "name": "sloc",
          "value": "28",
          "time": "2023-07-17T01:56:16Z"
        },
        {
          "name": "cloc",
          "value": "8",
          "time": "2023-07-17T01:56:16Z"
        },
        {
          "name": "dloc",
          "value": "0",
          "time": "2023-07-17T01:56:16Z"
        },
        {
          "name": "blank_lines",
          "value": "14",
          "time": "2023-07-17T01:56:16Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2023-07-17T01:56:16Z"
        },
        {
          "name": "theta_1",
          "value": "1",
          "time": "2023-07-17T02:11:48Z"
        },
        {
          "name": "theta_2",
          "value": "2",
          "time": "2023-07-17T02:11:48Z"
        },
        {
          "name": "N_1",
          "value": "1",
          "time": "2023-07-17T02:11:48Z"
        },
        {
          "name": "N_2",
          "value": "2",
          "time": "2023-07-17T02:11:48Z"
        },
        {
          "name": "loc",
          "value": "54",
          "time": "2023-07-17T02:11:48Z"
        },
        {
          "name": "lloc",
          "value": "29",
          "time": "2023-07-17T02:11:48Z"
        },
        {
          "name": "sloc",
          "value": "31",
          "time": "2023-07-17T02:11:48Z"
        },
        {
          "name": "blank_lines",
          "value": "15",
          "time": "2023-07-17T02:11:48Z"
        },
        {
          "name": "loc",
          "value": "53",
          "time": "2023-07-17T02:16:06Z"
        },
        {
          "name": "sloc",
          "value": "30",
          "time": "2023-07-17T02:16:06Z"
        },
        {
          "name": "loc",
          "value": "40",
          "time": "2023-07-17T14:18:35Z"
        },
        {
          "name": "lloc",
          "value": "20",
          "time": "2023-07-17T14:18:35Z"
        },
        {
          "name": "sloc",
          "value": "21",
          "time": "2023-07-17T14:18:35Z"
        },
        {
          "name": "blank_lines",
          "value": "11",
          "time": "2023-07-17T14:18:35Z"
        },
        {
          "name": "loc",
          "value": "47",
          "time": "2023-07-17T14:20:15Z"
        },
        {
          "name": "lloc",
          "value": "24",
          "time": "2023-07-17T14:20:15Z"
        },
        {
          "name": "sloc",
          "value": "25",
          "time": "2023-07-17T14:20:15Z"
        },
        {
          "name": "theta_1",
          "value": "4",
          "time": "2023-07-17T16:31:11Z"
        },
        {
          "name": "theta_2",
          "value": "10",
          "time": "2023-07-17T16:31:11Z"
        },
        {
          "name": "N_1",
          "value": "5",
          "time": "2023-07-17T16:31:11Z"
        },
        {
          "name": "N_2",
          "value": "10",
          "time": "2023-07-17T16:31:11Z"
        },
        {
          "name": "loc",
          "value": "216",
          "time": "2023-07-17T16:31:11Z"
        },
        {
          "name": "lloc",
          "value": "101",
          "time": "2023-07-17T16:31:11Z"
        },
        {
          "name": "sloc",
          "value": "144",
          "time": "2023-07-17T16:31:11Z"
        },
        {
          "name": "cloc",
          "value": "27",
          "time": "2023-07-17T16:31:11Z"
        },
        {
          "name": "blank_lines",
          "value": "46",
          "time": "2023-07-17T16:31:11Z"
        },
        {
          "name": "theta_2",
          "value": "13",
          "time": "2023-07-17T16:57:15Z"
        },
        {
          "name": "N_1",
          "value": "8",
          "time": "2023-07-17T16:57:15Z"
        },
        {
          "name": "N_2",
          "value": "16",
          "time": "2023-07-17T16:57:15Z"
        },
        {
          "name": "loc",
          "value": "240",
          "time": "2023-07-17T16:57:15Z"
        },
        {
          "name": "lloc",
          "value": "125",
          "time": "2023-07-17T16:57:15Z"
        },
        {
          "name": "sloc",
          "value": "163",
          "time": "2023-07-17T16:57:15Z"
        },
        {
          "name": "cloc",
          "value": "22",
          "time": "2023-07-17T16:57:15Z"
        },
        {
          "name": "blank_lines",
          "value": "56",
          "time": "2023-07-17T16:57:15Z"
        },
        {
          "name": "loc",
          "value": "239",
          "time": "2023-07-18T00:00:41Z"
        },
        {
          "name": "lloc",
          "value": "124",
          "time": "2023-07-18T00:00:41Z"
        },
        {
          "name": "sloc",
          "value": "162",
          "time": "2023-07-18T00:00:41Z"
        },
        {
          "name": "theta_1",
          "value": "5",
          "time": "2023-07-18T01:02:34Z"
        },
        {
          "name": "theta_2",
          "value": "23",
          "time": "2023-07-18T01:02:34Z"
        },
        {
          "name": "N_1",
          "value": "13",
          "time": "2023-07-18T01:02:34Z"
        },
        {
          "name": "N_2",
          "value": "26",
          "time": "2023-07-18T01:02:34Z"
        },
        {
          "name": "loc",
          "value": "328",
          "time": "2023-07-18T01:02:34Z"
        },
        {
          "name": "lloc",
          "value": "151",
          "time": "2023-07-18T01:02:34Z"
        },
        {
          "name": "sloc",
          "value": "234",
          "time": "2023-07-18T01:02:34Z"
        },
        {
          "name": "cloc",
          "value": "25",
          "time": "2023-07-18T01:02:34Z"
        },
        {
          "name": "blank_lines",
          "value": "70",
          "time": "2023-07-18T01:02:34Z"
        },
        {
          "name": "loc",
          "value": "322",
          "time": "2023-07-18T01:10:29Z"
        },
        {
          "name": "lloc",
          "value": "145",
          "time": "2023-07-18T01:10:29Z"
        },
        {
          "name": "sloc",
          "value": "228",
          "time": "2023-07-18T01:10:29Z"
        },
        {
          "name": "loc",
          "value": "323",
          "time": "2023-07-18T01:53:48Z"
        },
        {
          "name": "lloc",
          "value": "146",
          "time": "2023-07-18T01:53:48Z"
        },
        {
          "name": "sloc",
          "value": "229",
          "time": "2023-07-18T01:53:48Z"
        },
        {
          "name": "loc",
          "value": "354",
          "time": "2023-07-18T12:01:20Z"
        },
        {
          "name": "lloc",
          "value": "163",
          "time": "2023-07-18T12:01:20Z"
        },
        {
          "name": "sloc",
          "value": "252",
          "time": "2023-07-18T12:01:20Z"
        },
        {
          "name": "blank_lines",
          "value": "78",
          "time": "2023-07-18T12:01:20Z"
        },
        {
          "name": "theta_2",
          "value": "19",
          "time": "2023-10-07T21:32:50Z"
        },
        {
          "name": "N_1",
          "value": "11",
          "time": "2023-10-07T21:32:50Z"
        },
        {
          "name": "N_2",
          "value": "22",
          "time": "2023-10-07T21:32:50Z"
        },
        {
          "name": "loc",
          "value": "346",
          "time": "2023-10-07T21:32:50Z"
        },
        {
          "name": "lloc",
          "value": "159",
          "time": "2023-10-07T21:32:50Z"
        },
        {
          "name": "sloc",
          "value": "244",
          "time": "2023-10-07T21:32:50Z"
        },
        {
          "name": "loc",
          "value": "340",
          "time": "2023-10-31T10:03:32Z"
        },
        {
          "name": "lloc",
          "value": "157",
          "time": "2023-10-31T10:03:32Z"
        },
        {
          "name": "sloc",
          "value": "236",
          "time": "2023-10-31T10:03:32Z"
        },
        {
          "name": "cloc",
          "value": "28",
          "time": "2023-10-31T10:03:32Z"
        },
        {
          "name": "blank_lines",
          "value": "77",
          "time": "2023-10-31T10:03:32Z"
        },
        {
          "name": "loc",
          "value": "483",
          "time": "2024-03-25T19:13:40Z"
        },
        {
          "name": "sloc",
          "value": "377",
          "time": "2024-03-25T19:13:40Z"
        },
        {
          "name": "blank_lines",
          "value": "79",
          "time": "2024-03-25T19:13:40Z"
        },
        {
          "name": "loc",
          "value": "487",
          "time": "2025-01-08T11:37:33Z"
        },
        {
          "name": "lloc",
          "value": "160",
          "time": "2025-01-08T11:37:33Z"
        },
        {
          "name": "sloc",
          "value": "380",
          "time": "2025-01-08T11:37:33Z"
        },
        {
          "name": "cloc",
          "value": "29",
          "time": "2025-01-08T11:37:33Z"
        },
        {
          "name": "pylint_score",
          "value": "0.16",
          "time": "2023-07-17T16:31:11Z"
        },
        {
          "name": "pylint_score",
          "value": "0.315",
          "time": "2023-07-17T16:57:15Z"
        },
        {
          "name": "pylint_score",
          "value": "0.301",
          "time": "2023-07-18T00:00:41Z"
        },
        {
          "name": "pylint_score",
          "value": "0.396",
          "time": "2023-07-18T01:02:34Z"
        },
        {
          "name": "pylint_score",
          "value": "0.524",
          "time": "2023-07-18T01:10:29Z"
        },
        {
          "name": "pylint_score",
          "value": "0.528",
          "time": "2023-07-18T01:53:48Z"
        },
        {
          "name": "pylint_score",
          "value": "0.54",
          "time": "2023-07-18T12:01:20Z"
        },
        {
          "name": "pylint_score",
          "value": "0.516",
          "time": "2023-10-07T21:32:50Z"
        },
        {
          "name": "pylint_score",
          "value": "0.49000000000000005",
          "time": "2023-10-31T10:03:32Z"
        },
        {
          "name": "pylint_score",
          "value": "0.561",
          "time": "2024-03-25T19:13:40Z"
        },
        {
          "name": "pylint_score",
          "value": "0.5700000000000001",
          "time": "2025-01-08T11:37:33Z"
        }
      ],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "7e60d1a1fae2b8387a90c7474209a61e83503376",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "streamlit_second.py"
    },
    {
      "type": "commit",
      "attributes": [
        {
          "name": "message",
          "value": "Updated some files and enhanced the streamlit_app",
          "time": "2023-07-17T01:56:16Z"
        },
        {
          "name": "description",
          "value": "",
          "time": "2023-07-17T01:56:16Z"
        },
        {
          "name": "to",
          "value": "['Resume-Matcher:(HEAD detached at 004b8a0)', 'Resume-Matcher:main']",
          "time": "2023-07-17T01:56:16Z"
        }
      ],
      "relationships": [
        {
          "objectId": "Data/JobDescription/job_desc_front_end_engineer.pdf",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/JobDescription/job_desc_full_stack_engineer.pdf",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/JobDescription/job_desc_java_developer.pdf",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/JobDescription/job_desc_product_manager.pdf",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Raw/job_desc_1.pdf",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Raw/job_desc_2.pdf",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Raw/resume_1.pdf",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/alfred_pennyworth_pm.pdf",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/barry_allen_fe.pdf",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/bruce_wayne_fullstack.pdf",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/harvey_dent_mle.pdf",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/john_doe.pdf",
          "qualifier": "aggregates"
        },
        {
          "objectId": "scripts/JobDescriptionProcessor.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "scripts/ResumeProcessor.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "scripts/parsers/ParseJobDescToJson.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "scripts/parsers/ParseResumeToJson.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "scripts/utils/ReadFiles.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "streamlit_app.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "streamlit_second.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "test_notebook.ipynb",
          "qualifier": "aggregates"
        },
        {
          "objectId": "a2e4b4a1af11d36d3aad818b01d0dd24aeef0e53",
          "qualifier": "is-child-of"
        },
        {
          "objectId": "0.852172100532901",
          "qualifier": "commit_mi"
        },
        {
          "objectId": "saurabhraidev",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "0.21470588235294116",
          "qualifier": "commit_pylint"
        }
      ],
      "id": "6033225be22d0110aa8464e94c9942c5fb0ee771"
    },
    {
      "type": "commit",
      "attributes": [
        {
          "name": "message",
          "value": "Updates to streamlit app",
          "time": "2023-07-17T02:11:48Z"
        },
        {
          "name": "description",
          "value": "",
          "time": "2023-07-17T02:11:48Z"
        },
        {
          "name": "to",
          "value": "['Resume-Matcher:(HEAD detached at 004b8a0)', 'Resume-Matcher:main']",
          "time": "2023-07-17T02:11:48Z"
        }
      ],
      "relationships": [
        {
          "objectId": "scripts/JobDescriptionProcessor.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "scripts/ResumeProcessor.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "streamlit_second.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "6033225be22d0110aa8464e94c9942c5fb0ee771",
          "qualifier": "is-child-of"
        },
        {
          "objectId": "0.8443306926904226",
          "qualifier": "commit_mi"
        },
        {
          "objectId": "saurabhraidev",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "0.21470588235294116",
          "qualifier": "commit_pylint"
        }
      ],
      "id": "0062ef6ef991210816b6ee54132d4eb0442b4236"
    },
    {
      "type": "commit",
      "attributes": [
        {
          "name": "message",
          "value": "Updates to streamlit-app",
          "time": "2023-07-17T02:16:06Z"
        },
        {
          "name": "description",
          "value": "",
          "time": "2023-07-17T02:16:06Z"
        },
        {
          "name": "to",
          "value": "['Resume-Matcher:(HEAD detached at 004b8a0)', 'Resume-Matcher:main']",
          "time": "2023-07-17T02:16:06Z"
        }
      ],
      "relationships": [
        {
          "objectId": "streamlit_second.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "0062ef6ef991210816b6ee54132d4eb0442b4236",
          "qualifier": "is-child-of"
        },
        {
          "objectId": "0.8444766537546606",
          "qualifier": "commit_mi"
        },
        {
          "objectId": "saurabhraidev",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "0.21470588235294116",
          "qualifier": "commit_pylint"
        }
      ],
      "id": "e48233c1f450e1e37fa402f3d3b55e2b64cb280c"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "run_first.py",
          "time": "2023-07-17T14:18:35Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2023-07-17T14:18:35Z"
        },
        {
          "name": "theta_1",
          "value": "0",
          "time": "2023-07-17T14:18:35Z"
        },
        {
          "name": "theta_2",
          "value": "0",
          "time": "2023-07-17T14:18:35Z"
        },
        {
          "name": "N_1",
          "value": "0",
          "time": "2023-07-17T14:18:35Z"
        },
        {
          "name": "N_2",
          "value": "0",
          "time": "2023-07-17T14:18:35Z"
        },
        {
          "name": "loc",
          "value": "37",
          "time": "2023-07-17T14:18:35Z"
        },
        {
          "name": "lloc",
          "value": "24",
          "time": "2023-07-17T14:18:35Z"
        },
        {
          "name": "sloc",
          "value": "27",
          "time": "2023-07-17T14:18:35Z"
        },
        {
          "name": "cloc",
          "value": "4",
          "time": "2023-07-17T14:18:35Z"
        },
        {
          "name": "dloc",
          "value": "0",
          "time": "2023-07-17T14:18:35Z"
        },
        {
          "name": "blank_lines",
          "value": "6",
          "time": "2023-07-17T14:18:35Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2023-07-17T14:18:35Z"
        },
        {
          "name": "loc",
          "value": "60",
          "time": "2023-07-17T16:57:15Z"
        },
        {
          "name": "lloc",
          "value": "39",
          "time": "2023-07-17T16:57:15Z"
        },
        {
          "name": "sloc",
          "value": "44",
          "time": "2023-07-17T16:57:15Z"
        },
        {
          "name": "cloc",
          "value": "8",
          "time": "2023-07-17T16:57:15Z"
        },
        {
          "name": "blank_lines",
          "value": "8",
          "time": "2023-07-17T16:57:15Z"
        },
        {
          "name": "theta_1",
          "value": "1",
          "time": "2023-08-06T17:21:09Z"
        },
        {
          "name": "theta_2",
          "value": "2",
          "time": "2023-08-06T17:21:09Z"
        },
        {
          "name": "N_1",
          "value": "1",
          "time": "2023-08-06T17:21:09Z"
        },
        {
          "name": "N_2",
          "value": "2",
          "time": "2023-08-06T17:21:09Z"
        },
        {
          "name": "loc",
          "value": "79",
          "time": "2023-08-06T17:21:09Z"
        },
        {
          "name": "lloc",
          "value": "53",
          "time": "2023-08-06T17:21:09Z"
        },
        {
          "name": "sloc",
          "value": "58",
          "time": "2023-08-06T17:21:09Z"
        },
        {
          "name": "blank_lines",
          "value": "13",
          "time": "2023-08-06T17:21:09Z"
        },
        {
          "name": "lloc",
          "value": "54",
          "time": "2023-08-15T13:04:00Z"
        },
        {
          "name": "sloc",
          "value": "57",
          "time": "2023-08-15T13:04:00Z"
        },
        {
          "name": "blank_lines",
          "value": "14",
          "time": "2023-08-15T13:04:00Z"
        },
        {
          "name": "loc",
          "value": "77",
          "time": "2023-09-10T17:58:40Z"
        },
        {
          "name": "lloc",
          "value": "52",
          "time": "2023-09-10T17:58:40Z"
        },
        {
          "name": "sloc",
          "value": "55",
          "time": "2023-09-10T17:58:40Z"
        },
        {
          "name": "sloc",
          "value": "52",
          "time": "2024-03-25T19:13:40Z"
        },
        {
          "name": "blank_lines",
          "value": "17",
          "time": "2024-03-25T19:13:40Z"
        },
        {
          "name": "theta_1",
          "value": "2",
          "time": "2024-08-30T20:56:02Z"
        },
        {
          "name": "theta_2",
          "value": "3",
          "time": "2024-08-30T20:56:02Z"
        },
        {
          "name": "N_1",
          "value": "2",
          "time": "2024-08-30T20:56:02Z"
        },
        {
          "name": "N_2",
          "value": "3",
          "time": "2024-08-30T20:56:02Z"
        },
        {
          "name": "loc",
          "value": "94",
          "time": "2024-08-30T20:56:02Z"
        },
        {
          "name": "lloc",
          "value": "59",
          "time": "2024-08-30T20:56:02Z"
        },
        {
          "name": "sloc",
          "value": "67",
          "time": "2024-08-30T20:56:02Z"
        },
        {
          "name": "cloc",
          "value": "9",
          "time": "2024-08-30T20:56:02Z"
        },
        {
          "name": "blank_lines",
          "value": "18",
          "time": "2024-08-30T20:56:02Z"
        },
        {
          "name": "loc",
          "value": "80",
          "time": "2024-10-22T23:09:24Z"
        },
        {
          "name": "sloc",
          "value": "54",
          "time": "2024-10-22T23:09:24Z"
        },
        {
          "name": "cloc",
          "value": "10",
          "time": "2024-10-22T23:09:24Z"
        },
        {
          "name": "theta_2",
          "value": "5",
          "time": "2024-10-22T23:09:51Z"
        },
        {
          "name": "N_1",
          "value": "4",
          "time": "2024-10-22T23:09:51Z"
        },
        {
          "name": "N_2",
          "value": "5",
          "time": "2024-10-22T23:09:51Z"
        },
        {
          "name": "loc",
          "value": "88",
          "time": "2024-10-22T23:09:51Z"
        },
        {
          "name": "lloc",
          "value": "60",
          "time": "2024-10-22T23:09:51Z"
        },
        {
          "name": "sloc",
          "value": "60",
          "time": "2024-10-22T23:09:51Z"
        },
        {
          "name": "cloc",
          "value": "12",
          "time": "2024-10-22T23:09:51Z"
        },
        {
          "name": "pylint_score",
          "value": "0.41",
          "time": "2023-07-17T16:57:15Z"
        },
        {
          "name": "pylint_score",
          "value": "0.453",
          "time": "2023-08-06T17:21:09Z"
        },
        {
          "name": "pylint_score",
          "value": "0.37",
          "time": "2023-08-15T13:04:00Z"
        },
        {
          "name": "pylint_score",
          "value": "0.538",
          "time": "2023-09-10T17:58:40Z"
        },
        {
          "name": "pylint_score",
          "value": "0.596",
          "time": "2024-03-25T19:13:40Z"
        },
        {
          "name": "pylint_score",
          "value": "0.644",
          "time": "2024-08-30T20:56:02Z"
        },
        {
          "name": "pylint_score",
          "value": "0.611",
          "time": "2024-10-22T23:09:24Z"
        },
        {
          "name": "pylint_score",
          "value": "0.621",
          "time": "2024-10-22T23:09:51Z"
        }
      ],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "2e426346ad523ec9af6dbf75a1d74be30d3908ca",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "run_first.py"
    },
    {
      "type": "commit",
      "attributes": [
        {
          "name": "message",
          "value": "Updated the files",
          "time": "2023-07-17T14:18:35Z"
        },
        {
          "name": "description",
          "value": "",
          "time": "2023-07-17T14:18:35Z"
        },
        {
          "name": "to",
          "value": "['Resume-Matcher:(HEAD detached at 004b8a0)', 'Resume-Matcher:main']",
          "time": "2023-07-17T14:18:35Z"
        }
      ],
      "relationships": [
        {
          "objectId": "Data/Processed/Resumes/Resume-alfred_pennyworth_pm.pdf3eaa7292-8bc8-48a3-84a2-10289a779e75.json",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Processed/Resumes/Resume-alfred_pennyworth_pm.pdfd8989e20-eb81-4c80-a6a1-aae67c63e0cf.json",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Processed/Resumes/Resume-barry_allen_fe.pdf28bf0e62-64c1-472c-8f1f-1e10c41c5360.json",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Processed/Resumes/Resume-barry_allen_fe.pdf609a5ccd-d0bc-4ead-8bf1-d3250c5e2e72.json",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Processed/Resumes/Resume-bruce_wayne_fullstack.pdf1e3f5743-6e1c-45c4-99dd-67c123a02750.json",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Processed/Resumes/Resume-bruce_wayne_fullstack.pdfb59ab169-8ecd-443d-8349-25b9b3ff6efd.json",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Processed/Resumes/Resume-harvey_dent_mle.pdf65c7cd47-e026-49f3-b7d9-680eaa9258a7.json",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Processed/Resumes/Resume-harvey_dent_mle.pdfd67ac237-a0c4-448d-b891-a8c15f20564d.json",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Processed/Resumes/Resume-john_doe.pdf69fc84db-c1d2-4a18-971f-ac5082868b78.json",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Processed/Resumes/Resume-john_doe.pdfba323029-c890-4219-999b-df6ab12a1d8b.json",
          "qualifier": "aggregates"
        },
        {
          "objectId": "run_first.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "scripts/Extractor.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "streamlit_second.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "ac8b434fe85f070a8b5eacd9094b2401474c64dd",
          "qualifier": "is-child-of"
        },
        {
          "objectId": "0.8564547561851209",
          "qualifier": "commit_mi"
        },
        {
          "objectId": "saurabhraidev",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "0.2212777777777778",
          "qualifier": "commit_pylint"
        }
      ],
      "id": "bb6e0810c614b3ff0264e8eb07b416513f05b653"
    },
    {
      "type": "commit",
      "attributes": [
        {
          "name": "message",
          "value": "Updated the streamlit app",
          "time": "2023-07-17T14:20:15Z"
        },
        {
          "name": "description",
          "value": "",
          "time": "2023-07-17T14:20:15Z"
        },
        {
          "name": "to",
          "value": "['Resume-Matcher:(HEAD detached at 004b8a0)', 'Resume-Matcher:main']",
          "time": "2023-07-17T14:20:15Z"
        }
      ],
      "relationships": [
        {
          "objectId": "streamlit_second.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "bb6e0810c614b3ff0264e8eb07b416513f05b653",
          "qualifier": "is-child-of"
        },
        {
          "objectId": "0.8549084424088912",
          "qualifier": "commit_mi"
        },
        {
          "objectId": "saurabhraidev",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "0.2212777777777778",
          "qualifier": "commit_pylint"
        }
      ],
      "id": "ce4bef9e0fa0ae80f6ffc73360c1924cf9aaa9c1"
    },
    {
      "type": "commit",
      "attributes": [
        {
          "name": "message",
          "value": "Updated the extractor logic",
          "time": "2023-07-17T14:22:37Z"
        },
        {
          "name": "description",
          "value": "",
          "time": "2023-07-17T14:22:37Z"
        },
        {
          "name": "to",
          "value": "['Resume-Matcher:(HEAD detached at 004b8a0)', 'Resume-Matcher:main']",
          "time": "2023-07-17T14:22:37Z"
        }
      ],
      "relationships": [
        {
          "objectId": "scripts/Extractor.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "ce4bef9e0fa0ae80f6ffc73360c1924cf9aaa9c1",
          "qualifier": "is-child-of"
        },
        {
          "objectId": "0.8549084424088912",
          "qualifier": "commit_mi"
        },
        {
          "objectId": "saurabhraidev",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "0.2212777777777778",
          "qualifier": "commit_pylint"
        }
      ],
      "id": "4099a531abbc4323a081451b24bf261326c4e709"
    },
    {
      "type": "commit",
      "attributes": [
        {
          "name": "message",
          "value": "Updated some files.",
          "time": "2023-07-17T16:31:11Z"
        },
        {
          "name": "description",
          "value": "",
          "time": "2023-07-17T16:31:11Z"
        },
        {
          "name": "to",
          "value": "['Resume-Matcher:(HEAD detached at 004b8a0)', 'Resume-Matcher:main']",
          "time": "2023-07-17T16:31:11Z"
        }
      ],
      "relationships": [
        {
          "objectId": "Data/Processed/Resumes/Resume-alfred_pennyworth_pm.pdfc38deec9-6b29-4e9a-b51a-a0bfd2a02b3c.json",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Processed/Resumes/Resume-barry_allen_fe.pdf282aabdb-7795-42b9-8393-7f196405a8c2.json",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Processed/Resumes/Resume-bruce_wayne_fullstack.pdf810d7da4-7bd1-4885-851a-2c8a0fafa436.json",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Processed/Resumes/Resume-harvey_dent_mle.pdf504483e1-e085-430a-a516-2a594b25a16c.json",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Processed/Resumes/Resume-john_doe.pdff6d8c9e9-5c3e-49e4-8157-daa2637827d7.json",
          "qualifier": "aggregates"
        },
        {
          "objectId": "streamlit_second.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "4099a531abbc4323a081451b24bf261326c4e709",
          "qualifier": "is-child-of"
        },
        {
          "objectId": "0.8403484480736745",
          "qualifier": "commit_mi"
        },
        {
          "objectId": "saurabhraidev",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "0.23016666666666666",
          "qualifier": "commit_pylint"
        }
      ],
      "id": "ab3f8f40faa315021d3e207abd8b6b64f999f1d5"
    },
    {
      "type": "commit",
      "attributes": [
        {
          "name": "message",
          "value": "Updated the app with Job Description Parsing & Viz",
          "time": "2023-07-17T16:57:15Z"
        },
        {
          "name": "description",
          "value": "",
          "time": "2023-07-17T16:57:15Z"
        },
        {
          "name": "to",
          "value": "['Resume-Matcher:(HEAD detached at 004b8a0)', 'Resume-Matcher:main']",
          "time": "2023-07-17T16:57:15Z"
        }
      ],
      "relationships": [
        {
          "objectId": "Data/Processed/JobDescription/JobDescription-job_desc_front_end_engineer.pdf9abc94c0-57f3-4fe9-8692-cf247030a5a3.json",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Processed/JobDescription/JobDescription-job_desc_full_stack_engineer.pdf0d37b16e-ba1e-4498-8c10-2c6cb76710c6.json",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Processed/JobDescription/JobDescription-job_desc_java_developer.pdffdd47203-c6a6-4bc9-96dd-2e3e5b128a5e.json",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Processed/JobDescription/JobDescription-job_desc_product_manager.pdff006b260-404d-4706-9995-09f35537eabf.json",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Processed/Resumes/Resume-alfred_pennyworth_pm.pdfb06f46d6-d49b-43b4-a33d-e9a7eac6c992.json",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Processed/Resumes/Resume-barry_allen_fe.pdf30c130dc-24a7-4738-b9f4-bee943952592.json",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Processed/Resumes/Resume-bruce_wayne_fullstack.pdfae4265bb-de42-435a-966e-4951dfd02d83.json",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Processed/Resumes/Resume-harvey_dent_mle.pdf6bfe49a3-49ff-419f-b33b-f788c81e46dd.json",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Processed/Resumes/Resume-john_doe.pdf463e3200-4fa9-4d0d-9003-771b7c74a9a8.json",
          "qualifier": "aggregates"
        },
        {
          "objectId": "run_first.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "streamlit_second.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "ab3f8f40faa315021d3e207abd8b6b64f999f1d5",
          "qualifier": "is-child-of"
        },
        {
          "objectId": "0.8367467348260401",
          "qualifier": "commit_mi"
        },
        {
          "objectId": "saurabhraidev",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "0.24305555555555555",
          "qualifier": "commit_pylint"
        }
      ],
      "id": "5aa6accb8e4cac3a76c96ce38f0b7cf1f447e420"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "Data.py",
          "time": "2023-07-18T00:00:41Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2023-07-18T00:00:41Z"
        },
        {
          "name": "theta_1",
          "value": "1",
          "time": "2023-07-18T00:00:41Z"
        },
        {
          "name": "theta_2",
          "value": "4",
          "time": "2023-07-18T00:00:41Z"
        },
        {
          "name": "N_1",
          "value": "2",
          "time": "2023-07-18T00:00:41Z"
        },
        {
          "name": "N_2",
          "value": "4",
          "time": "2023-07-18T00:00:41Z"
        },
        {
          "name": "loc",
          "value": "27",
          "time": "2023-07-18T00:00:41Z"
        },
        {
          "name": "lloc",
          "value": "18",
          "time": "2023-07-18T00:00:41Z"
        },
        {
          "name": "sloc",
          "value": "19",
          "time": "2023-07-18T00:00:41Z"
        },
        {
          "name": "cloc",
          "value": "1",
          "time": "2023-07-18T00:00:41Z"
        },
        {
          "name": "dloc",
          "value": "0",
          "time": "2023-07-18T00:00:41Z"
        },
        {
          "name": "blank_lines",
          "value": "8",
          "time": "2023-07-18T00:00:41Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2023-07-18T00:00:41Z"
        },
        {
          "name": "pylint_score",
          "value": "0.23500000000000001",
          "time": "2023-07-18T00:24:04Z"
        }
      ],
      "relationships": [
        {
          "objectId": "saurabhraidev",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "e96767930e6ca605337f92fecad7f58abe57bf1e",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "Data.py"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "Demo/DemoData.py",
          "time": "2023-07-18T00:00:41Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2023-07-18T00:00:41Z"
        },
        {
          "name": "theta_1",
          "value": "0",
          "time": "2023-07-18T00:00:41Z"
        },
        {
          "name": "theta_2",
          "value": "0",
          "time": "2023-07-18T00:00:41Z"
        },
        {
          "name": "N_1",
          "value": "0",
          "time": "2023-07-18T00:00:41Z"
        },
        {
          "name": "N_2",
          "value": "0",
          "time": "2023-07-18T00:00:41Z"
        },
        {
          "name": "loc",
          "value": "5",
          "time": "2023-07-18T00:00:41Z"
        },
        {
          "name": "lloc",
          "value": "4",
          "time": "2023-07-18T00:00:41Z"
        },
        {
          "name": "sloc",
          "value": "4",
          "time": "2023-07-18T00:00:41Z"
        },
        {
          "name": "cloc",
          "value": "0",
          "time": "2023-07-18T00:00:41Z"
        },
        {
          "name": "dloc",
          "value": "0",
          "time": "2023-07-18T00:00:41Z"
        },
        {
          "name": "blank_lines",
          "value": "1",
          "time": "2023-07-18T00:00:41Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2023-07-18T00:00:41Z"
        },
        {
          "name": "loc",
          "value": "6",
          "time": "2023-07-18T00:24:04Z"
        },
        {
          "name": "blank_lines",
          "value": "2",
          "time": "2023-07-18T00:24:04Z"
        },
        {
          "name": "loc",
          "value": "33",
          "time": "2024-03-25T19:13:40Z"
        },
        {
          "name": "sloc",
          "value": "31",
          "time": "2024-03-25T19:13:40Z"
        }
      ],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "76062e92fddf37c0daa0aee3f06ef4b05409ae78",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "Demo/DemoData.py"
    },
    {
      "type": "commit",
      "attributes": [
        {
          "name": "message",
          "value": "WIP for Qdrant Static Demo",
          "time": "2023-07-18T00:00:41Z"
        },
        {
          "name": "description",
          "value": "",
          "time": "2023-07-18T00:00:41Z"
        },
        {
          "name": "to",
          "value": "['Resume-Matcher:(HEAD detached at 004b8a0)', 'Resume-Matcher:main']",
          "time": "2023-07-18T00:00:41Z"
        }
      ],
      "relationships": [
        {
          "objectId": "Data.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Demo/DemoData.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "output_jobs.txt",
          "qualifier": "aggregates"
        },
        {
          "objectId": "output_resume.txt",
          "qualifier": "aggregates"
        },
        {
          "objectId": "scripts/similarity/config.yml",
          "qualifier": "aggregates"
        },
        {
          "objectId": "scripts/similarity/qdrant_search.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "streamlit_second.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "1c5f3e410861eeff1efbda8d7f210f47c9b583b0",
          "qualifier": "is-child-of"
        },
        {
          "objectId": "0.8349188579954259",
          "qualifier": "commit_mi"
        },
        {
          "objectId": "saurabhraidev",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "0.24935000000000002",
          "qualifier": "commit_pylint"
        }
      ],
      "id": "14ebb3647eefbf2e860a36cb040e0b582fe0f5ed"
    },
    {
      "type": "commit",
      "attributes": [
        {
          "name": "message",
          "value": "Removed the extra resumes",
          "time": "2023-07-18T00:24:04Z"
        },
        {
          "name": "description",
          "value": "",
          "time": "2023-07-18T00:24:04Z"
        },
        {
          "name": "to",
          "value": "['Resume-Matcher:(HEAD detached at 004b8a0)', 'Resume-Matcher:main']",
          "time": "2023-07-18T00:24:04Z"
        }
      ],
      "relationships": [
        {
          "objectId": "Data.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Demo/DemoData.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "output_resume.txt",
          "qualifier": "aggregates"
        },
        {
          "objectId": "14ebb3647eefbf2e860a36cb040e0b582fe0f5ed",
          "qualifier": "is-child-of"
        },
        {
          "objectId": "0.8349188579954259",
          "qualifier": "commit_mi"
        },
        {
          "objectId": "saurabhraidev",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "0.24935000000000002",
          "qualifier": "commit_pylint"
        }
      ],
      "id": "e96767930e6ca605337f92fecad7f58abe57bf1e"
    },
    {
      "type": "commit",
      "attributes": [
        {
          "name": "message",
          "value": "Scripts with Qdrant is now complete",
          "time": "2023-07-18T01:02:34Z"
        },
        {
          "name": "description",
          "value": "",
          "time": "2023-07-18T01:02:34Z"
        },
        {
          "name": "to",
          "value": "['Resume-Matcher:(HEAD detached at 004b8a0)', 'Resume-Matcher:main']",
          "time": "2023-07-18T01:02:34Z"
        }
      ],
      "relationships": [
        {
          "objectId": "scripts/similarity/qdrant_search.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "streamlit_app.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "streamlit_second.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "e96767930e6ca605337f92fecad7f58abe57bf1e",
          "qualifier": "is-child-of"
        },
        {
          "objectId": "0.8342035102447356",
          "qualifier": "commit_mi"
        },
        {
          "objectId": "saurabhraidev",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "0.25645",
          "qualifier": "commit_pylint"
        }
      ],
      "id": "0dd3af3cc87dd49bb90900f7e861d72c1f3a1683"
    },
    {
      "type": "commit",
      "attributes": [
        {
          "name": "message",
          "value": "Updated the streamlit_app",
          "time": "2023-07-18T01:10:29Z"
        },
        {
          "name": "description",
          "value": "",
          "time": "2023-07-18T01:10:29Z"
        },
        {
          "name": "to",
          "value": "['Resume-Matcher:(HEAD detached at 004b8a0)', 'Resume-Matcher:main']",
          "time": "2023-07-18T01:10:29Z"
        }
      ],
      "relationships": [
        {
          "objectId": "streamlit_second.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "761d34b94dee8d838a9af5cf354730ffa51b4c58",
          "qualifier": "is-child-of"
        },
        {
          "objectId": "0.8344960804624468",
          "qualifier": "commit_mi"
        },
        {
          "objectId": "saurabhraidev",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "0.26285",
          "qualifier": "commit_pylint"
        }
      ],
      "id": "67ee0df96055e0a5588fad31ca12642279b91075"
    },
    {
      "type": "commit",
      "attributes": [
        {
          "name": "message",
          "value": "Fixed NLTK error",
          "time": "2023-07-18T01:44:38Z"
        },
        {
          "name": "description",
          "value": "",
          "time": "2023-07-18T01:44:38Z"
        },
        {
          "name": "to",
          "value": "['Resume-Matcher:(HEAD detached at 004b8a0)', 'Resume-Matcher:main']",
          "time": "2023-07-18T01:44:38Z"
        }
      ],
      "relationships": [
        {
          "objectId": "scripts/TextCleaner.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "e42456ab2b0069550add779f417288f40cb73108",
          "qualifier": "is-child-of"
        },
        {
          "objectId": "0.8342089112012111",
          "qualifier": "commit_mi"
        },
        {
          "objectId": "saurabhraidev",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "0.26285",
          "qualifier": "commit_pylint"
        }
      ],
      "id": "fb0d7fd6ac8aa82f4698f2301ffd9f825c5a40b7"
    },
    {
      "type": "commit",
      "attributes": [
        {
          "name": "message",
          "value": "Fixed error for deployment",
          "time": "2023-07-18T01:53:48Z"
        },
        {
          "name": "description",
          "value": "",
          "time": "2023-07-18T01:53:48Z"
        },
        {
          "name": "to",
          "value": "['Resume-Matcher:(HEAD detached at 004b8a0)', 'Resume-Matcher:main']",
          "time": "2023-07-18T01:53:48Z"
        }
      ],
      "relationships": [
        {
          "objectId": "scripts/TextCleaner.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "streamlit_second.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "fb0d7fd6ac8aa82f4698f2301ffd9f825c5a40b7",
          "qualifier": "is-child-of"
        },
        {
          "objectId": "0.8344465500285716",
          "qualifier": "commit_mi"
        },
        {
          "objectId": "saurabhraidev",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "0.26305",
          "qualifier": "commit_pylint"
        }
      ],
      "id": "f1164c3ff993ef2e16cdb000c0622fa7cefaacb5"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "archive/Data.py",
          "time": "2023-07-18T11:08:42Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2023-07-18T11:08:42Z"
        },
        {
          "name": "theta_1",
          "value": "1",
          "time": "2023-07-18T11:08:42Z"
        },
        {
          "name": "theta_2",
          "value": "8",
          "time": "2023-07-18T11:08:42Z"
        },
        {
          "name": "N_1",
          "value": "4",
          "time": "2023-07-18T11:08:42Z"
        },
        {
          "name": "N_2",
          "value": "8",
          "time": "2023-07-18T11:08:42Z"
        },
        {
          "name": "loc",
          "value": "41",
          "time": "2023-07-18T11:08:42Z"
        },
        {
          "name": "lloc",
          "value": "28",
          "time": "2023-07-18T11:08:42Z"
        },
        {
          "name": "sloc",
          "value": "30",
          "time": "2023-07-18T11:08:42Z"
        },
        {
          "name": "cloc",
          "value": "0",
          "time": "2023-07-18T11:08:42Z"
        },
        {
          "name": "dloc",
          "value": "0",
          "time": "2023-07-18T11:08:42Z"
        },
        {
          "name": "blank_lines",
          "value": "11",
          "time": "2023-07-18T11:08:42Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2023-07-18T11:08:42Z"
        },
        {
          "name": "loc",
          "value": "38",
          "time": "2024-03-25T19:13:40Z"
        },
        {
          "name": "sloc",
          "value": "26",
          "time": "2024-03-25T19:13:40Z"
        },
        {
          "name": "blank_lines",
          "value": "12",
          "time": "2024-03-25T19:13:40Z"
        },
        {
          "name": "pylint_score",
          "value": "0.346",
          "time": "2024-03-25T19:13:40Z"
        }
      ],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "76062e92fddf37c0daa0aee3f06ef4b05409ae78",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "archive/Data.py"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "archive/ExtraScripts.py",
          "time": "2023-07-18T11:08:42Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2023-07-18T11:08:42Z"
        },
        {
          "name": "theta_1",
          "value": "0",
          "time": "2023-07-18T11:08:42Z"
        },
        {
          "name": "theta_2",
          "value": "0",
          "time": "2023-07-18T11:08:42Z"
        },
        {
          "name": "N_1",
          "value": "0",
          "time": "2023-07-18T11:08:42Z"
        },
        {
          "name": "N_2",
          "value": "0",
          "time": "2023-07-18T11:08:42Z"
        },
        {
          "name": "loc",
          "value": "0",
          "time": "2023-07-18T11:08:42Z"
        },
        {
          "name": "lloc",
          "value": "0",
          "time": "2023-07-18T11:08:42Z"
        },
        {
          "name": "sloc",
          "value": "0",
          "time": "2023-07-18T11:08:42Z"
        },
        {
          "name": "cloc",
          "value": "0",
          "time": "2023-07-18T11:08:42Z"
        },
        {
          "name": "dloc",
          "value": "0",
          "time": "2023-07-18T11:08:42Z"
        },
        {
          "name": "blank_lines",
          "value": "0",
          "time": "2023-07-18T11:08:42Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2023-07-18T11:08:42Z"
        },
        {
          "name": "theta_1",
          "value": "10",
          "time": "2024-03-25T19:13:40Z"
        },
        {
          "name": "theta_2",
          "value": "38",
          "time": "2024-03-25T19:13:40Z"
        },
        {
          "name": "N_1",
          "value": "28",
          "time": "2024-03-25T19:13:40Z"
        },
        {
          "name": "N_2",
          "value": "55",
          "time": "2024-03-25T19:13:40Z"
        },
        {
          "name": "loc",
          "value": "178",
          "time": "2024-03-25T19:13:40Z"
        },
        {
          "name": "lloc",
          "value": "66",
          "time": "2024-03-25T19:13:40Z"
        },
        {
          "name": "sloc",
          "value": "72",
          "time": "2024-03-25T19:13:40Z"
        },
        {
          "name": "cloc",
          "value": "25",
          "time": "2024-03-25T19:13:40Z"
        },
        {
          "name": "dloc",
          "value": "27",
          "time": "2024-03-25T19:13:40Z"
        },
        {
          "name": "blank_lines",
          "value": "54",
          "time": "2024-03-25T19:13:40Z"
        },
        {
          "name": "pylint_score",
          "value": "0.446",
          "time": "2024-03-25T19:13:40Z"
        }
      ],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "76062e92fddf37c0daa0aee3f06ef4b05409ae78",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "archive/ExtraScripts.py"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "archive/run.py",
          "time": "2023-07-18T11:08:42Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2023-07-18T11:08:42Z"
        },
        {
          "name": "theta_1",
          "value": "0",
          "time": "2023-07-18T11:08:42Z"
        },
        {
          "name": "theta_2",
          "value": "0",
          "time": "2023-07-18T11:08:42Z"
        },
        {
          "name": "N_1",
          "value": "0",
          "time": "2023-07-18T11:08:42Z"
        },
        {
          "name": "N_2",
          "value": "0",
          "time": "2023-07-18T11:08:42Z"
        },
        {
          "name": "loc",
          "value": "0",
          "time": "2023-07-18T11:08:42Z"
        },
        {
          "name": "lloc",
          "value": "0",
          "time": "2023-07-18T11:08:42Z"
        },
        {
          "name": "sloc",
          "value": "0",
          "time": "2023-07-18T11:08:42Z"
        },
        {
          "name": "cloc",
          "value": "0",
          "time": "2023-07-18T11:08:42Z"
        },
        {
          "name": "dloc",
          "value": "0",
          "time": "2023-07-18T11:08:42Z"
        },
        {
          "name": "blank_lines",
          "value": "0",
          "time": "2023-07-18T11:08:42Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2023-07-18T11:08:42Z"
        },
        {
          "name": "theta_1",
          "value": "2",
          "time": "2024-03-25T19:13:40Z"
        },
        {
          "name": "theta_2",
          "value": "10",
          "time": "2024-03-25T19:13:40Z"
        },
        {
          "name": "N_1",
          "value": "5",
          "time": "2024-03-25T19:13:40Z"
        },
        {
          "name": "N_2",
          "value": "10",
          "time": "2024-03-25T19:13:40Z"
        },
        {
          "name": "loc",
          "value": "32",
          "time": "2024-03-25T19:13:40Z"
        },
        {
          "name": "lloc",
          "value": "24",
          "time": "2024-03-25T19:13:40Z"
        },
        {
          "name": "sloc",
          "value": "24",
          "time": "2024-03-25T19:13:40Z"
        },
        {
          "name": "blank_lines",
          "value": "8",
          "time": "2024-03-25T19:13:40Z"
        },
        {
          "name": "pylint_score",
          "value": "0.16699999999999998",
          "time": "2024-03-25T19:13:40Z"
        }
      ],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "76062e92fddf37c0daa0aee3f06ef4b05409ae78",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "archive/run.py"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "archive/streamlit_app.py",
          "time": "2023-07-18T11:08:42Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2023-07-18T11:08:42Z"
        },
        {
          "name": "theta_1",
          "value": "0",
          "time": "2023-07-18T11:08:42Z"
        },
        {
          "name": "theta_2",
          "value": "0",
          "time": "2023-07-18T11:08:42Z"
        },
        {
          "name": "N_1",
          "value": "0",
          "time": "2023-07-18T11:08:42Z"
        },
        {
          "name": "N_2",
          "value": "0",
          "time": "2023-07-18T11:08:42Z"
        },
        {
          "name": "loc",
          "value": "101",
          "time": "2023-07-18T11:08:42Z"
        },
        {
          "name": "lloc",
          "value": "43",
          "time": "2023-07-18T11:08:42Z"
        },
        {
          "name": "sloc",
          "value": "71",
          "time": "2023-07-18T11:08:42Z"
        },
        {
          "name": "cloc",
          "value": "5",
          "time": "2023-07-18T11:08:42Z"
        },
        {
          "name": "dloc",
          "value": "0",
          "time": "2023-07-18T11:08:42Z"
        },
        {
          "name": "blank_lines",
          "value": "25",
          "time": "2023-07-18T11:08:42Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2023-07-18T11:08:42Z"
        },
        {
          "name": "loc",
          "value": "130",
          "time": "2024-03-25T19:13:40Z"
        },
        {
          "name": "sloc",
          "value": "101",
          "time": "2024-03-25T19:13:40Z"
        },
        {
          "name": "blank_lines",
          "value": "24",
          "time": "2024-03-25T19:13:40Z"
        },
        {
          "name": "pylint_score",
          "value": "0.048",
          "time": "2024-03-25T19:13:40Z"
        }
      ],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "76062e92fddf37c0daa0aee3f06ef4b05409ae78",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "archive/streamlit_app.py"
    },
    {
      "type": "commit",
      "attributes": [
        {
          "name": "message",
          "value": "Shifted extra code to archive folder",
          "time": "2023-07-18T11:08:42Z"
        },
        {
          "name": "description",
          "value": "",
          "time": "2023-07-18T11:08:42Z"
        },
        {
          "name": "to",
          "value": "['Resume-Matcher:(HEAD detached at 004b8a0)', 'Resume-Matcher:main']",
          "time": "2023-07-18T11:08:42Z"
        }
      ],
      "relationships": [
        {
          "objectId": "archive/Data.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "archive/ExtraScripts.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "archive/output_jobs.txt",
          "qualifier": "aggregates"
        },
        {
          "objectId": "archive/output_resume.txt",
          "qualifier": "aggregates"
        },
        {
          "objectId": "archive/run.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "archive/streamlit_app.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "archive/test_notebook.ipynb",
          "qualifier": "aggregates"
        },
        {
          "objectId": "streamlit_app.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "9190e75554a305cae987075e6df0be148dc33ae0",
          "qualifier": "is-child-of"
        },
        {
          "objectId": "0.8618601203970012",
          "qualifier": "commit_mi"
        },
        {
          "objectId": "saurabhraidev",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "0.24505",
          "qualifier": "commit_pylint"
        }
      ],
      "id": "ad4977b652e401d78aa08048f98393c5eceba494"
    },
    {
      "type": "commit",
      "attributes": [
        {
          "name": "message",
          "value": "Updated streamlit_apps  &  readme.",
          "time": "2023-07-18T12:01:20Z"
        },
        {
          "name": "description",
          "value": "",
          "time": "2023-07-18T12:01:20Z"
        },
        {
          "name": "to",
          "value": "['Resume-Matcher:(HEAD detached at 004b8a0)', 'Resume-Matcher:main']",
          "time": "2023-07-18T12:01:20Z"
        }
      ],
      "relationships": [
        {
          "objectId": "README.md",
          "qualifier": "aggregates"
        },
        {
          "objectId": "streamlit_app.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "streamlit_second.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "ad4977b652e401d78aa08048f98393c5eceba494",
          "qualifier": "is-child-of"
        },
        {
          "objectId": "0.8473111367591809",
          "qualifier": "commit_mi"
        },
        {
          "objectId": "saurabhraidev",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "0.25723809523809527",
          "qualifier": "commit_pylint"
        }
      ],
      "id": "0c27815fb06721d1b6560488beda3e8307c9a4d7"
    },
    {
      "type": "commit",
      "attributes": [
        {
          "name": "message",
          "value": "Updated the links",
          "time": "2023-07-21T20:43:57Z"
        },
        {
          "name": "description",
          "value": "",
          "time": "2023-07-21T20:43:57Z"
        },
        {
          "name": "to",
          "value": "['Resume-Matcher:(HEAD detached at 004b8a0)', 'Resume-Matcher:main']",
          "time": "2023-07-21T20:43:57Z"
        }
      ],
      "relationships": [
        {
          "objectId": "README.md",
          "qualifier": "aggregates"
        },
        {
          "objectId": "streamlit_app.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "streamlit_second.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "bd7e587a41e30b1ea8678bc17ba91e69adec5f06",
          "qualifier": "is-child-of"
        },
        {
          "objectId": "0.8473111367591809",
          "qualifier": "commit_mi"
        },
        {
          "objectId": "saurabhraidev",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "0.25723809523809527",
          "qualifier": "commit_pylint"
        }
      ],
      "id": "0e85c1e852859e6a7bf667bb26dbf9d51dbbf261"
    },
    {
      "type": "commit",
      "attributes": [
        {
          "name": "message",
          "value": "Modified get_filenames_from_dir to exclude .DS_Store files",
          "time": "2023-07-29T19:20:50Z"
        },
        {
          "name": "description",
          "value": "",
          "time": "2023-07-29T19:20:50Z"
        },
        {
          "name": "to",
          "value": "['Resume-Matcher:(HEAD detached at 004b8a0)', 'Resume-Matcher:main']",
          "time": "2023-07-29T19:20:50Z"
        }
      ],
      "relationships": [
        {
          "objectId": "scripts/utils/ReadFiles.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "14fe4faf2ade49a4dbbe0abfb81cd932be3ae63b",
          "qualifier": "is-child-of"
        },
        {
          "objectId": "0.8368311548329144",
          "qualifier": "commit_mi"
        },
        {
          "objectId": "sahiljani",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "0.24533333333333335",
          "qualifier": "commit_pylint"
        }
      ],
      "id": "65ceb4e822c339a29f7a68c1063dde306f1bd5aa"
    },
    {
      "type": "commit",
      "attributes": [
        {
          "name": "message",
          "value": "added a check if nltk resource already exists to avoid downloading everytime the app loads",
          "time": "2023-08-06T12:17:25Z"
        },
        {
          "name": "description",
          "value": "",
          "time": "2023-08-06T12:17:25Z"
        },
        {
          "name": "to",
          "value": "['Resume-Matcher:(HEAD detached at 004b8a0)', 'Resume-Matcher:main']",
          "time": "2023-08-06T12:17:25Z"
        }
      ],
      "relationships": [
        {
          "objectId": "streamlit_app.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "17840bcfec73ae0c1932005fac43e86a6e6d0aa7",
          "qualifier": "is-child-of"
        },
        {
          "objectId": "0.8366089509831718",
          "qualifier": "commit_mi"
        },
        {
          "objectId": "Sanket",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "0.24585714285714286",
          "qualifier": "commit_pylint"
        }
      ],
      "id": "537af644a5cd9f2625b132c370a88c8475fd741f"
    },
    {
      "type": "commit",
      "attributes": [
        {
          "name": "message",
          "value": "Feat: removing old files from the Processed folder",
          "time": "2023-08-06T17:21:09Z"
        },
        {
          "name": "description",
          "value": "",
          "time": "2023-08-06T17:21:09Z"
        },
        {
          "name": "to",
          "value": "['Resume-Matcher:(HEAD detached at 004b8a0)', 'Resume-Matcher:main']",
          "time": "2023-08-06T17:21:09Z"
        }
      ],
      "relationships": [
        {
          "objectId": "run_first.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "3f3d4671a17b309c7b1d7ff799f95743a46389c6",
          "qualifier": "is-child-of"
        },
        {
          "objectId": "0.8256159689563487",
          "qualifier": "commit_mi"
        },
        {
          "objectId": "Israel",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "0.24790476190476193",
          "qualifier": "commit_pylint"
        }
      ],
      "id": "931ae8948cd8aecc3e1e2b7e7bb4ce8feeeb34a2"
    },
    {
      "type": "commit",
      "attributes": [
        {
          "name": "message",
          "value": "Bug: Having only one file no longer cause an error",
          "time": "2023-08-06T17:21:09Z"
        },
        {
          "name": "description",
          "value": "",
          "time": "2023-08-06T17:21:09Z"
        },
        {
          "name": "to",
          "value": "['Resume-Matcher:(HEAD detached at 004b8a0)', 'Resume-Matcher:main']",
          "time": "2023-08-06T17:21:09Z"
        }
      ],
      "relationships": [
        {
          "objectId": "streamlit_app.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "931ae8948cd8aecc3e1e2b7e7bb4ce8feeeb34a2",
          "qualifier": "is-child-of"
        },
        {
          "objectId": "0.8248915009470408",
          "qualifier": "commit_mi"
        },
        {
          "objectId": "Israel",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "0.24776190476190477",
          "qualifier": "commit_pylint"
        }
      ],
      "id": "a6ba5522fb2e32d04dac8044218f12132032e00a"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "scripts/similarity/get_similarity_score.py",
          "time": "2023-08-07T21:30:37Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2023-08-07T21:30:37Z"
        },
        {
          "name": "theta_1",
          "value": "1",
          "time": "2023-08-07T21:30:37Z"
        },
        {
          "name": "theta_2",
          "value": "2",
          "time": "2023-08-07T21:30:37Z"
        },
        {
          "name": "N_1",
          "value": "1",
          "time": "2023-08-07T21:30:37Z"
        },
        {
          "name": "N_2",
          "value": "2",
          "time": "2023-08-07T21:30:37Z"
        },
        {
          "name": "loc",
          "value": "104",
          "time": "2023-08-07T21:30:37Z"
        },
        {
          "name": "lloc",
          "value": "60",
          "time": "2023-08-07T21:30:37Z"
        },
        {
          "name": "sloc",
          "value": "81",
          "time": "2023-08-07T21:30:37Z"
        },
        {
          "name": "cloc",
          "value": "0",
          "time": "2023-08-07T21:30:37Z"
        },
        {
          "name": "dloc",
          "value": "0",
          "time": "2023-08-07T21:30:37Z"
        },
        {
          "name": "blank_lines",
          "value": "23",
          "time": "2023-08-07T21:30:37Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2023-08-07T21:30:37Z"
        },
        {
          "name": "theta_1",
          "value": "3",
          "time": "2023-08-07T22:31:37Z"
        },
        {
          "name": "theta_2",
          "value": "6",
          "time": "2023-08-07T22:31:37Z"
        },
        {
          "name": "N_1",
          "value": "3",
          "time": "2023-08-07T22:31:37Z"
        },
        {
          "name": "N_2",
          "value": "6",
          "time": "2023-08-07T22:31:37Z"
        },
        {
          "name": "loc",
          "value": "117",
          "time": "2023-08-07T22:31:37Z"
        },
        {
          "name": "lloc",
          "value": "71",
          "time": "2023-08-07T22:31:37Z"
        },
        {
          "name": "sloc",
          "value": "92",
          "time": "2023-08-07T22:31:37Z"
        },
        {
          "name": "blank_lines",
          "value": "25",
          "time": "2023-08-07T22:31:37Z"
        },
        {
          "name": "theta_2",
          "value": "12",
          "time": "2023-08-08T09:07:10Z"
        },
        {
          "name": "N_1",
          "value": "6",
          "time": "2023-08-08T09:07:10Z"
        },
        {
          "name": "N_2",
          "value": "12",
          "time": "2023-08-08T09:07:10Z"
        },
        {
          "name": "loc",
          "value": "174",
          "time": "2023-08-08T09:07:10Z"
        },
        {
          "name": "lloc",
          "value": "113",
          "time": "2023-08-08T09:07:10Z"
        },
        {
          "name": "sloc",
          "value": "142",
          "time": "2023-08-08T09:07:10Z"
        },
        {
          "name": "cloc",
          "value": "1",
          "time": "2023-08-08T09:07:10Z"
        },
        {
          "name": "blank_lines",
          "value": "31",
          "time": "2023-08-08T09:07:10Z"
        },
        {
          "name": "loc",
          "value": "175",
          "time": "2023-09-10T17:58:03Z"
        },
        {
          "name": "lloc",
          "value": "115",
          "time": "2023-09-10T17:58:03Z"
        },
        {
          "name": "sloc",
          "value": "144",
          "time": "2023-09-10T17:58:03Z"
        },
        {
          "name": "blank_lines",
          "value": "30",
          "time": "2023-09-10T17:58:03Z"
        },
        {
          "name": "loc",
          "value": "262",
          "time": "2024-03-25T19:13:40Z"
        },
        {
          "name": "lloc",
          "value": "116",
          "time": "2024-03-25T19:13:40Z"
        },
        {
          "name": "sloc",
          "value": "135",
          "time": "2024-03-25T19:13:40Z"
        },
        {
          "name": "cloc",
          "value": "4",
          "time": "2024-03-25T19:13:40Z"
        },
        {
          "name": "dloc",
          "value": "79",
          "time": "2024-03-25T19:13:40Z"
        },
        {
          "name": "blank_lines",
          "value": "44",
          "time": "2024-03-25T19:13:40Z"
        },
        {
          "name": "loc",
          "value": "261",
          "time": "2024-06-07T12:45:42Z"
        },
        {
          "name": "sloc",
          "value": "134",
          "time": "2024-06-07T12:45:42Z"
        },
        {
          "name": "pylint_score",
          "value": "0.5589999999999999",
          "time": "2023-08-07T22:31:37Z"
        },
        {
          "name": "pylint_score",
          "value": "0.5820000000000001",
          "time": "2023-08-08T09:07:10Z"
        },
        {
          "name": "pylint_score",
          "value": "0.589",
          "time": "2023-09-10T17:58:03Z"
        },
        {
          "name": "pylint_score",
          "value": "0.46699999999999997",
          "time": "2024-03-25T19:13:40Z"
        },
        {
          "name": "pylint_score",
          "value": "0.462",
          "time": "2024-06-07T12:45:42Z"
        }
      ],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "0b39f8c616f8cfb149572a3f15e470b313415271",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "scripts/similarity/get_similarity_score.py"
    },
    {
      "type": "commit",
      "attributes": [
        {
          "name": "message",
          "value": "added get similarity score",
          "time": "2023-08-07T21:30:37Z"
        },
        {
          "name": "description",
          "value": "",
          "time": "2023-08-07T21:30:37Z"
        },
        {
          "name": "to",
          "value": "['Resume-Matcher:(HEAD detached at 004b8a0)', 'Resume-Matcher:main']",
          "time": "2023-08-07T21:30:37Z"
        }
      ],
      "relationships": [
        {
          "objectId": "scripts/similarity/get_similarity_score.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "b66dbac7b451edeb7221ed1bc11aaf2218d109b6",
          "qualifier": "is-child-of"
        },
        {
          "objectId": "0.8125144333336309",
          "qualifier": "commit_mi"
        },
        {
          "objectId": "Subramanyam Challa",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "0.26",
          "qualifier": "commit_pylint"
        }
      ],
      "id": "e7880e98ca46133fbeec79994c0c8f807cf29ba6"
    },
    {
      "type": "commit",
      "attributes": [
        {
          "name": "message",
          "value": "updated similarity score function with proper path",
          "time": "2023-08-07T22:31:37Z"
        },
        {
          "name": "description",
          "value": "",
          "time": "2023-08-07T22:31:37Z"
        },
        {
          "name": "to",
          "value": "['Resume-Matcher:(HEAD detached at 004b8a0)', 'Resume-Matcher:main']",
          "time": "2023-08-07T22:31:37Z"
        }
      ],
      "relationships": [
        {
          "objectId": "scripts/similarity/get_similarity_score.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "e7880e98ca46133fbeec79994c0c8f807cf29ba6",
          "qualifier": "is-child-of"
        },
        {
          "objectId": "0.8091294834824727",
          "qualifier": "commit_mi"
        },
        {
          "objectId": "Subramanyam Challa",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "0.2619090909090909",
          "qualifier": "commit_pylint"
        }
      ],
      "id": "6f38fbfccef4de03aac2c1d7e35893185d018b36"
    },
    {
      "type": "commit",
      "attributes": [
        {
          "name": "message",
          "value": "added similarity score code",
          "time": "2023-08-07T22:33:40Z"
        },
        {
          "name": "description",
          "value": "",
          "time": "2023-08-07T22:33:40Z"
        },
        {
          "name": "to",
          "value": "['Resume-Matcher:(HEAD detached at 004b8a0)', 'Resume-Matcher:main']",
          "time": "2023-08-07T22:33:40Z"
        }
      ],
      "relationships": [
        {
          "objectId": "streamlit_app.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "6f38fbfccef4de03aac2c1d7e35893185d018b36",
          "qualifier": "is-child-of"
        },
        {
          "objectId": "0.8095281593098604",
          "qualifier": "commit_mi"
        },
        {
          "objectId": "Subramanyam Challa",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "0.26172727272727275",
          "qualifier": "commit_pylint"
        }
      ],
      "id": "65dd1b912704783aec6918f7d802dc80007d47c9"
    },
    {
      "type": "commit",
      "attributes": [
        {
          "name": "message",
          "value": "resolved conflicts and added logging",
          "time": "2023-08-08T09:07:10Z"
        },
        {
          "name": "description",
          "value": "",
          "time": "2023-08-08T09:07:10Z"
        },
        {
          "name": "to",
          "value": "['Resume-Matcher:(HEAD detached at 004b8a0)', 'Resume-Matcher:main']",
          "time": "2023-08-08T09:07:10Z"
        }
      ],
      "relationships": [
        {
          "objectId": "scripts/similarity/get_similarity_score.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "faaa40cef5ba7b1b61538656c5f70749a2a5798e",
          "qualifier": "is-child-of"
        },
        {
          "objectId": "0.8081514691730355",
          "qualifier": "commit_mi"
        },
        {
          "objectId": "Subramanyam Challa",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "0.2627727272727273",
          "qualifier": "commit_pylint"
        }
      ],
      "id": "b4077df149369e36f411f00eacbe212492e45bb3"
    },
    {
      "type": "commit",
      "attributes": [
        {
          "name": "message",
          "value": "added functionality to continue if there is no config.yml file",
          "time": "2023-08-08T17:42:14Z"
        },
        {
          "name": "description",
          "value": "",
          "time": "2023-08-08T17:42:14Z"
        },
        {
          "name": "to",
          "value": "['Resume-Matcher:(HEAD detached at 004b8a0)', 'Resume-Matcher:main']",
          "time": "2023-08-08T17:42:14Z"
        }
      ],
      "relationships": [
        {
          "objectId": "streamlit_app.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "8cb2e6d4637695e0046a4495a4aadba0c65d9928",
          "qualifier": "is-child-of"
        },
        {
          "objectId": "0.806532876714143",
          "qualifier": "commit_mi"
        },
        {
          "objectId": "Subramanyam Challa",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "0.2640909090909091",
          "qualifier": "commit_pylint"
        }
      ],
      "id": "d5a8a9b24204b81cf173b3fdec85a2f8255d9baa"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "scripts/utils/logger.py",
          "time": "2023-08-15T13:04:00Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2023-08-15T13:04:00Z"
        },
        {
          "name": "theta_1",
          "value": "2",
          "time": "2023-08-15T13:04:00Z"
        },
        {
          "name": "theta_2",
          "value": "15",
          "time": "2023-08-15T13:04:00Z"
        },
        {
          "name": "N_1",
          "value": "17",
          "time": "2023-08-15T13:04:00Z"
        },
        {
          "name": "N_2",
          "value": "28",
          "time": "2023-08-15T13:04:00Z"
        },
        {
          "name": "loc",
          "value": "41",
          "time": "2023-08-15T13:04:00Z"
        },
        {
          "name": "lloc",
          "value": "29",
          "time": "2023-08-15T13:04:00Z"
        },
        {
          "name": "sloc",
          "value": "34",
          "time": "2023-08-15T13:04:00Z"
        },
        {
          "name": "cloc",
          "value": "0",
          "time": "2023-08-15T13:04:00Z"
        },
        {
          "name": "dloc",
          "value": "0",
          "time": "2023-08-15T13:04:00Z"
        },
        {
          "name": "blank_lines",
          "value": "7",
          "time": "2023-08-15T13:04:00Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2023-08-15T13:04:00Z"
        },
        {
          "name": "loc",
          "value": "145",
          "time": "2024-03-25T19:13:40Z"
        },
        {
          "name": "lloc",
          "value": "37",
          "time": "2024-03-25T19:13:40Z"
        },
        {
          "name": "sloc",
          "value": "47",
          "time": "2024-03-25T19:13:40Z"
        },
        {
          "name": "cloc",
          "value": "5",
          "time": "2024-03-25T19:13:40Z"
        },
        {
          "name": "dloc",
          "value": "67",
          "time": "2024-03-25T19:13:40Z"
        },
        {
          "name": "blank_lines",
          "value": "26",
          "time": "2024-03-25T19:13:40Z"
        },
        {
          "name": "pylint_score",
          "value": "0.29",
          "time": "2024-03-25T19:13:40Z"
        }
      ],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "76062e92fddf37c0daa0aee3f06ef4b05409ae78",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "scripts/utils/logger.py"
    },
    {
      "type": "commit",
      "attributes": [
        {
          "name": "message",
          "value": "Debug: improve logging information and formatter.",
          "time": "2023-08-15T13:04:00Z"
        },
        {
          "name": "description",
          "value": "",
          "time": "2023-08-15T13:04:00Z"
        },
        {
          "name": "to",
          "value": "['Resume-Matcher:(HEAD detached at 004b8a0)', 'Resume-Matcher:main']",
          "time": "2023-08-15T13:04:00Z"
        }
      ],
      "relationships": [
        {
          "objectId": "run_first.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "scripts/utils/logger.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "4becf50901b6651047357505f741d8c577122d96",
          "qualifier": "is-child-of"
        },
        {
          "objectId": "0.7941058733472454",
          "qualifier": "commit_mi"
        },
        {
          "objectId": "Israel",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "0.2862608695652174",
          "qualifier": "commit_pylint"
        }
      ],
      "id": "ba7523ea1d0ea3a30d207fece7d9d3f81ef8060b"
    },
    {
      "type": "commit",
      "attributes": [
        {
          "name": "message",
          "value": "fix: removed the old qdrant code",
          "time": "2023-08-19T20:42:33Z"
        },
        {
          "name": "description",
          "value": "",
          "time": "2023-08-19T20:42:33Z"
        },
        {
          "name": "to",
          "value": "['Resume-Matcher:(HEAD detached at 004b8a0)', 'Resume-Matcher:main']",
          "time": "2023-08-19T20:42:33Z"
        }
      ],
      "relationships": [
        {
          "objectId": "0dfc9ee772b68a35687e2b0309e0f7d011e57571",
          "qualifier": "is-child-of"
        },
        {
          "objectId": "0.7892247951516332",
          "qualifier": "commit_mi"
        },
        {
          "objectId": "srbhr",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "0.27936363636363637",
          "qualifier": "commit_pylint"
        }
      ],
      "id": "4064ac0ac3063b58e8392df984840df8253b6fbc"
    },
    {
      "type": "commit",
      "attributes": [
        {
          "name": "message",
          "value": "Changes to be committed:\n\tmodified:   streamlit_app.py",
          "time": "2023-09-03T09:04:35Z"
        },
        {
          "name": "description",
          "value": "Updated Streamlit descriptions:\n- Amended the descriptions of selecting a 'job descriptions'.",
          "time": "2023-09-03T09:04:35Z"
        },
        {
          "name": "to",
          "value": "['Resume-Matcher:(HEAD detached at 004b8a0)', 'Resume-Matcher:main']",
          "time": "2023-09-03T09:04:35Z"
        }
      ],
      "relationships": [
        {
          "objectId": "streamlit_app.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "7991881c04add6d20a52109df0bf0d114b1d7709",
          "qualifier": "is-child-of"
        },
        {
          "objectId": "0.7892247951516332",
          "qualifier": "commit_mi"
        },
        {
          "objectId": "dxxky",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "0.27936363636363637",
          "qualifier": "commit_pylint"
        }
      ],
      "id": "f1a7ff4d8918894309d5ec9073eb01d7a8cd1ab6"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "scripts/LinkedinJobToPDF.py",
          "time": "2023-09-08T21:35:59Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2023-09-08T21:35:59Z"
        },
        {
          "name": "theta_1",
          "value": "5",
          "time": "2023-09-08T21:35:59Z"
        },
        {
          "name": "theta_2",
          "value": "18",
          "time": "2023-09-08T21:35:59Z"
        },
        {
          "name": "N_1",
          "value": "11",
          "time": "2023-09-08T21:35:59Z"
        },
        {
          "name": "N_2",
          "value": "21",
          "time": "2023-09-08T21:35:59Z"
        },
        {
          "name": "loc",
          "value": "86",
          "time": "2023-09-08T21:35:59Z"
        },
        {
          "name": "lloc",
          "value": "54",
          "time": "2023-09-08T21:35:59Z"
        },
        {
          "name": "sloc",
          "value": "57",
          "time": "2023-09-08T21:35:59Z"
        },
        {
          "name": "cloc",
          "value": "0",
          "time": "2023-09-08T21:35:59Z"
        },
        {
          "name": "dloc",
          "value": "8",
          "time": "2023-09-08T21:35:59Z"
        },
        {
          "name": "blank_lines",
          "value": "21",
          "time": "2023-09-08T21:35:59Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2023-09-08T21:35:59Z"
        },
        {
          "name": "theta_1",
          "value": "4",
          "time": "2023-10-11T14:19:47Z"
        },
        {
          "name": "theta_2",
          "value": "13",
          "time": "2023-10-11T14:19:47Z"
        },
        {
          "name": "N_1",
          "value": "7",
          "time": "2023-10-11T14:19:47Z"
        },
        {
          "name": "N_2",
          "value": "13",
          "time": "2023-10-11T14:19:47Z"
        },
        {
          "name": "loc",
          "value": "75",
          "time": "2023-10-11T14:19:47Z"
        },
        {
          "name": "lloc",
          "value": "43",
          "time": "2023-10-11T14:19:47Z"
        },
        {
          "name": "sloc",
          "value": "38",
          "time": "2023-10-11T14:19:47Z"
        },
        {
          "name": "cloc",
          "value": "8",
          "time": "2023-10-11T14:19:47Z"
        },
        {
          "name": "loc",
          "value": "79",
          "time": "2024-03-25T19:13:40Z"
        },
        {
          "name": "sloc",
          "value": "42",
          "time": "2024-03-25T19:13:40Z"
        },
        {
          "name": "pylint_score",
          "value": "0.205",
          "time": "2023-10-11T14:19:47Z"
        },
        {
          "name": "pylint_score",
          "value": "0.256",
          "time": "2024-03-25T19:13:40Z"
        }
      ],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "76062e92fddf37c0daa0aee3f06ef4b05409ae78",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "scripts/LinkedinJobToPDF.py"
    },
    {
      "type": "commit",
      "attributes": [
        {
          "name": "message",
          "value": "Feat: Convert Linkedin job post data to pdf.",
          "time": "2023-09-08T21:35:59Z"
        },
        {
          "name": "description",
          "value": "",
          "time": "2023-09-08T21:35:59Z"
        },
        {
          "name": "to",
          "value": "['Resume-Matcher:(HEAD detached at 004b8a0)', 'Resume-Matcher:main']",
          "time": "2023-09-08T21:35:59Z"
        }
      ],
      "relationships": [
        {
          "objectId": "requirements.txt",
          "qualifier": "aggregates"
        },
        {
          "objectId": "scripts/LinkedinJobToPDF.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "scripts/similarity/config.yml",
          "qualifier": "aggregates"
        },
        {
          "objectId": "370d802f569fbbed566b652ab70c852a0940084f",
          "qualifier": "is-child-of"
        },
        {
          "objectId": "0.7837028114935324",
          "qualifier": "commit_mi"
        },
        {
          "objectId": "Israel",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "0.282",
          "qualifier": "commit_pylint"
        }
      ],
      "id": "c74e73e3eda6f99f3cce396a308d285f6f068fa6"
    },
    {
      "type": "commit",
      "attributes": [
        {
          "name": "message",
          "value": "Fix: Response Handling Exception Error",
          "time": "2023-09-10T17:58:03Z"
        },
        {
          "name": "description",
          "value": "\r\n\r\nCo-authored-by: Saurabh Rai <srbh077@gmail.com>",
          "time": "2023-09-10T17:58:03Z"
        },
        {
          "name": "to",
          "value": "['Resume-Matcher:(HEAD detached at 004b8a0)', 'Resume-Matcher:main']",
          "time": "2023-09-10T17:58:03Z"
        }
      ],
      "relationships": [
        {
          "objectId": "Data/Processed/JobDescription/JobDescription-job_desc_front_end_engineer.pdf9e508eff-a083-4e2d-8b1e-577cbc8f50fc.json",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Processed/JobDescription/JobDescription-job_desc_full_stack_engineer.pdfcccf72e0-5f20-4aa8-8679-d91b720b7247.json",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Processed/JobDescription/JobDescription-job_desc_java_developer.pdf1fb6435c-531a-4f04-84c2-c4e73e1f1a3f.json",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Processed/JobDescription/JobDescription-job_desc_product_manager.pdf0b613898-1183-49c5-ad07-e03bd9af72e5.json",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Processed/Resumes/Resume-alfred_pennyworth_pm.pdfb36fac00-1d60-49ba-a9e4-33477c928e98.json",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Processed/Resumes/Resume-barry_allen_fe.pdfbef9d9b1-fa14-4aa0-8111-6033cceacb5a.json",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Processed/Resumes/Resume-bruce_wayne_fullstack.pdf04c228e3-04a4-4970-a149-a3cffc92aee8.json",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Processed/Resumes/Resume-harvey_dent_mle.pdf5dde9183-5af4-4107-91e1-7b2d66fec490.json",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Processed/Resumes/Resume-john_doe.pdf817fb796-14b9-4819-a224-7eed66b3ce04.json",
          "qualifier": "aggregates"
        },
        {
          "objectId": "README.md",
          "qualifier": "aggregates"
        },
        {
          "objectId": "img.png",
          "qualifier": "aggregates"
        },
        {
          "objectId": "requirements.txt",
          "qualifier": "aggregates"
        },
        {
          "objectId": "scripts/similarity/get_similarity_score.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "0551844d89dd85d56c59300526f0944c534fdf33",
          "qualifier": "is-child-of"
        },
        {
          "objectId": "0.7836153723045183",
          "qualifier": "commit_mi"
        },
        {
          "objectId": "Subramanyam Challa",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "0.282304347826087",
          "qualifier": "commit_pylint"
        }
      ],
      "id": "29105edc1d7ce3808b292e53ea1d426f3484cd2e"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "__init__.py",
          "time": "2023-09-10T17:58:40Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2023-09-10T17:58:40Z"
        },
        {
          "name": "theta_1",
          "value": "0",
          "time": "2023-09-10T17:58:40Z"
        },
        {
          "name": "theta_2",
          "value": "0",
          "time": "2023-09-10T17:58:40Z"
        },
        {
          "name": "N_1",
          "value": "0",
          "time": "2023-09-10T17:58:40Z"
        },
        {
          "name": "N_2",
          "value": "0",
          "time": "2023-09-10T17:58:40Z"
        },
        {
          "name": "loc",
          "value": "0",
          "time": "2023-09-10T17:58:40Z"
        },
        {
          "name": "lloc",
          "value": "0",
          "time": "2023-09-10T17:58:40Z"
        },
        {
          "name": "sloc",
          "value": "0",
          "time": "2023-09-10T17:58:40Z"
        },
        {
          "name": "cloc",
          "value": "0",
          "time": "2023-09-10T17:58:40Z"
        },
        {
          "name": "dloc",
          "value": "0",
          "time": "2023-09-10T17:58:40Z"
        },
        {
          "name": "blank_lines",
          "value": "0",
          "time": "2023-09-10T17:58:40Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2023-09-10T17:58:40Z"
        }
      ],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "bf5cfd574d1b2bcd3224dd93b83b38bc66007348",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "__init__.py"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "scripts/__init__.py",
          "time": "2023-09-10T17:58:40Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2023-09-10T17:58:40Z"
        },
        {
          "name": "theta_1",
          "value": "0",
          "time": "2023-09-10T17:58:40Z"
        },
        {
          "name": "theta_2",
          "value": "0",
          "time": "2023-09-10T17:58:40Z"
        },
        {
          "name": "N_1",
          "value": "0",
          "time": "2023-09-10T17:58:40Z"
        },
        {
          "name": "N_2",
          "value": "0",
          "time": "2023-09-10T17:58:40Z"
        },
        {
          "name": "loc",
          "value": "3",
          "time": "2023-09-10T17:58:40Z"
        },
        {
          "name": "lloc",
          "value": "3",
          "time": "2023-09-10T17:58:40Z"
        },
        {
          "name": "sloc",
          "value": "3",
          "time": "2023-09-10T17:58:40Z"
        },
        {
          "name": "cloc",
          "value": "0",
          "time": "2023-09-10T17:58:40Z"
        },
        {
          "name": "dloc",
          "value": "0",
          "time": "2023-09-10T17:58:40Z"
        },
        {
          "name": "blank_lines",
          "value": "0",
          "time": "2023-09-10T17:58:40Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2023-09-10T17:58:40Z"
        }
      ],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "76062e92fddf37c0daa0aee3f06ef4b05409ae78",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "scripts/__init__.py"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "scripts/parsers/__init__.py",
          "time": "2023-09-10T17:58:40Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2023-09-10T17:58:40Z"
        },
        {
          "name": "theta_1",
          "value": "0",
          "time": "2023-09-10T17:58:40Z"
        },
        {
          "name": "theta_2",
          "value": "0",
          "time": "2023-09-10T17:58:40Z"
        },
        {
          "name": "N_1",
          "value": "0",
          "time": "2023-09-10T17:58:40Z"
        },
        {
          "name": "N_2",
          "value": "0",
          "time": "2023-09-10T17:58:40Z"
        },
        {
          "name": "loc",
          "value": "2",
          "time": "2023-09-10T17:58:40Z"
        },
        {
          "name": "lloc",
          "value": "2",
          "time": "2023-09-10T17:58:40Z"
        },
        {
          "name": "sloc",
          "value": "2",
          "time": "2023-09-10T17:58:40Z"
        },
        {
          "name": "cloc",
          "value": "0",
          "time": "2023-09-10T17:58:40Z"
        },
        {
          "name": "dloc",
          "value": "0",
          "time": "2023-09-10T17:58:40Z"
        },
        {
          "name": "blank_lines",
          "value": "0",
          "time": "2023-09-10T17:58:40Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2023-09-10T17:58:40Z"
        }
      ],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "76062e92fddf37c0daa0aee3f06ef4b05409ae78",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "scripts/parsers/__init__.py"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "scripts/similarity/__init__.py",
          "time": "2023-09-10T17:58:40Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2023-09-10T17:58:40Z"
        },
        {
          "name": "theta_1",
          "value": "0",
          "time": "2023-09-10T17:58:40Z"
        },
        {
          "name": "theta_2",
          "value": "0",
          "time": "2023-09-10T17:58:40Z"
        },
        {
          "name": "N_1",
          "value": "0",
          "time": "2023-09-10T17:58:40Z"
        },
        {
          "name": "N_2",
          "value": "0",
          "time": "2023-09-10T17:58:40Z"
        },
        {
          "name": "loc",
          "value": "1",
          "time": "2023-09-10T17:58:40Z"
        },
        {
          "name": "lloc",
          "value": "1",
          "time": "2023-09-10T17:58:40Z"
        },
        {
          "name": "sloc",
          "value": "1",
          "time": "2023-09-10T17:58:40Z"
        },
        {
          "name": "cloc",
          "value": "0",
          "time": "2023-09-10T17:58:40Z"
        },
        {
          "name": "dloc",
          "value": "0",
          "time": "2023-09-10T17:58:40Z"
        },
        {
          "name": "blank_lines",
          "value": "0",
          "time": "2023-09-10T17:58:40Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2023-09-10T17:58:40Z"
        }
      ],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "76062e92fddf37c0daa0aee3f06ef4b05409ae78",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "scripts/similarity/__init__.py"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "scripts/utils/__init__.py",
          "time": "2023-09-10T17:58:40Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2023-09-10T17:58:40Z"
        },
        {
          "name": "theta_1",
          "value": "0",
          "time": "2023-09-10T17:58:40Z"
        },
        {
          "name": "theta_2",
          "value": "0",
          "time": "2023-09-10T17:58:40Z"
        },
        {
          "name": "N_1",
          "value": "0",
          "time": "2023-09-10T17:58:40Z"
        },
        {
          "name": "N_2",
          "value": "0",
          "time": "2023-09-10T17:58:40Z"
        },
        {
          "name": "loc",
          "value": "3",
          "time": "2023-09-10T17:58:40Z"
        },
        {
          "name": "lloc",
          "value": "3",
          "time": "2023-09-10T17:58:40Z"
        },
        {
          "name": "sloc",
          "value": "3",
          "time": "2023-09-10T17:58:40Z"
        },
        {
          "name": "cloc",
          "value": "0",
          "time": "2023-09-10T17:58:40Z"
        },
        {
          "name": "dloc",
          "value": "0",
          "time": "2023-09-10T17:58:40Z"
        },
        {
          "name": "blank_lines",
          "value": "0",
          "time": "2023-09-10T17:58:40Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2023-09-10T17:58:40Z"
        }
      ],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "76062e92fddf37c0daa0aee3f06ef4b05409ae78",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "scripts/utils/__init__.py"
    },
    {
      "type": "commit",
      "attributes": [
        {
          "name": "message",
          "value": "Formatting: Initialize modules folder. (#126)",
          "time": "2023-09-10T17:58:40Z"
        },
        {
          "name": "description",
          "value": "",
          "time": "2023-09-10T17:58:40Z"
        },
        {
          "name": "to",
          "value": "['Resume-Matcher:(HEAD detached at 004b8a0)', 'Resume-Matcher:main']",
          "time": "2023-09-10T17:58:40Z"
        }
      ],
      "relationships": [
        {
          "objectId": "__init__.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "run_first.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "scripts/Extractor.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "scripts/JobDescriptionProcessor.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "scripts/ResumeProcessor.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "scripts/__init__.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "scripts/parsers/__init__.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "scripts/similarity/__init__.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "scripts/utils/__init__.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "streamlit_app.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "streamlit_second.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "29105edc1d7ce3808b292e53ea1d426f3484cd2e",
          "qualifier": "is-child-of"
        },
        {
          "objectId": "0.8224866860115263",
          "qualifier": "commit_mi"
        },
        {
          "objectId": "Israel",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "0.23789285714285713",
          "qualifier": "commit_pylint"
        }
      ],
      "id": "bf5cfd574d1b2bcd3224dd93b83b38bc66007348"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "webapp/backend/api/index.py",
          "time": "2023-09-16T14:29:24Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2023-09-16T14:29:24Z"
        },
        {
          "name": "theta_1",
          "value": "3",
          "time": "2023-09-16T14:29:24Z"
        },
        {
          "name": "theta_2",
          "value": "5",
          "time": "2023-09-16T14:29:24Z"
        },
        {
          "name": "N_1",
          "value": "3",
          "time": "2023-09-16T14:29:24Z"
        },
        {
          "name": "N_2",
          "value": "5",
          "time": "2023-09-16T14:29:24Z"
        },
        {
          "name": "loc",
          "value": "153",
          "time": "2023-09-16T14:29:24Z"
        },
        {
          "name": "lloc",
          "value": "61",
          "time": "2023-09-16T14:29:24Z"
        },
        {
          "name": "sloc",
          "value": "80",
          "time": "2023-09-16T14:29:24Z"
        },
        {
          "name": "cloc",
          "value": "20",
          "time": "2023-09-16T14:29:24Z"
        },
        {
          "name": "dloc",
          "value": "21",
          "time": "2023-09-16T14:29:24Z"
        },
        {
          "name": "blank_lines",
          "value": "34",
          "time": "2023-09-16T14:29:24Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2023-09-16T14:29:24Z"
        },
        {
          "name": "loc",
          "value": "161",
          "time": "2023-10-06T15:41:30Z"
        },
        {
          "name": "lloc",
          "value": "64",
          "time": "2023-10-06T15:41:30Z"
        },
        {
          "name": "sloc",
          "value": "83",
          "time": "2023-10-06T15:41:30Z"
        },
        {
          "name": "cloc",
          "value": "22",
          "time": "2023-10-06T15:41:30Z"
        },
        {
          "name": "blank_lines",
          "value": "37",
          "time": "2023-10-06T15:41:30Z"
        },
        {
          "name": "pylint_score",
          "value": "0.23199999999999998",
          "time": "2023-10-06T15:41:30Z"
        }
      ],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "dc572fde263a51e4b05a2ea26cfc55a744cb63a2",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "webapp/backend/api/index.py"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "webapp/backend/schemas/__init__.py",
          "time": "2023-09-16T14:29:24Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2023-09-16T14:29:24Z"
        },
        {
          "name": "theta_1",
          "value": "0",
          "time": "2023-09-16T14:29:24Z"
        },
        {
          "name": "theta_2",
          "value": "0",
          "time": "2023-09-16T14:29:24Z"
        },
        {
          "name": "N_1",
          "value": "0",
          "time": "2023-09-16T14:29:24Z"
        },
        {
          "name": "N_2",
          "value": "0",
          "time": "2023-09-16T14:29:24Z"
        },
        {
          "name": "loc",
          "value": "0",
          "time": "2023-09-16T14:29:24Z"
        },
        {
          "name": "lloc",
          "value": "0",
          "time": "2023-09-16T14:29:24Z"
        },
        {
          "name": "sloc",
          "value": "0",
          "time": "2023-09-16T14:29:24Z"
        },
        {
          "name": "cloc",
          "value": "0",
          "time": "2023-09-16T14:29:24Z"
        },
        {
          "name": "dloc",
          "value": "0",
          "time": "2023-09-16T14:29:24Z"
        },
        {
          "name": "blank_lines",
          "value": "0",
          "time": "2023-09-16T14:29:24Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2023-09-16T14:29:24Z"
        }
      ],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "2b9cb6a5570e4c8d5165281595be78f470b3e3f3",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "webapp/backend/schemas/__init__.py"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "webapp/backend/schemas/resume_processor.py",
          "time": "2023-09-16T14:29:24Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2023-09-16T14:29:24Z"
        },
        {
          "name": "theta_1",
          "value": "0",
          "time": "2023-09-16T14:29:24Z"
        },
        {
          "name": "theta_2",
          "value": "0",
          "time": "2023-09-16T14:29:24Z"
        },
        {
          "name": "N_1",
          "value": "0",
          "time": "2023-09-16T14:29:24Z"
        },
        {
          "name": "N_2",
          "value": "0",
          "time": "2023-09-16T14:29:24Z"
        },
        {
          "name": "loc",
          "value": "44",
          "time": "2023-09-16T14:29:24Z"
        },
        {
          "name": "lloc",
          "value": "45",
          "time": "2023-09-16T14:29:24Z"
        },
        {
          "name": "sloc",
          "value": "29",
          "time": "2023-09-16T14:29:24Z"
        },
        {
          "name": "cloc",
          "value": "0",
          "time": "2023-09-16T14:29:24Z"
        },
        {
          "name": "dloc",
          "value": "0",
          "time": "2023-09-16T14:29:24Z"
        },
        {
          "name": "blank_lines",
          "value": "15",
          "time": "2023-09-16T14:29:24Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2023-09-16T14:29:24Z"
        }
      ],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "2b9cb6a5570e4c8d5165281595be78f470b3e3f3",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "webapp/backend/schemas/resume_processor.py"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "webapp/backend/scripts/__init__.py",
          "time": "2023-09-16T14:29:24Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2023-09-16T14:29:24Z"
        },
        {
          "name": "theta_1",
          "value": "0",
          "time": "2023-09-16T14:29:24Z"
        },
        {
          "name": "theta_2",
          "value": "0",
          "time": "2023-09-16T14:29:24Z"
        },
        {
          "name": "N_1",
          "value": "0",
          "time": "2023-09-16T14:29:24Z"
        },
        {
          "name": "N_2",
          "value": "0",
          "time": "2023-09-16T14:29:24Z"
        },
        {
          "name": "loc",
          "value": "0",
          "time": "2023-09-16T14:29:24Z"
        },
        {
          "name": "lloc",
          "value": "0",
          "time": "2023-09-16T14:29:24Z"
        },
        {
          "name": "sloc",
          "value": "0",
          "time": "2023-09-16T14:29:24Z"
        },
        {
          "name": "cloc",
          "value": "0",
          "time": "2023-09-16T14:29:24Z"
        },
        {
          "name": "dloc",
          "value": "0",
          "time": "2023-09-16T14:29:24Z"
        },
        {
          "name": "blank_lines",
          "value": "0",
          "time": "2023-09-16T14:29:24Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2023-09-16T14:29:24Z"
        }
      ],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "2b9cb6a5570e4c8d5165281595be78f470b3e3f3",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "webapp/backend/scripts/__init__.py"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "webapp/backend/scripts/resume_processor.py",
          "time": "2023-09-16T14:29:24Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2023-09-16T14:29:24Z"
        },
        {
          "name": "theta_1",
          "value": "0",
          "time": "2023-09-16T14:29:24Z"
        },
        {
          "name": "theta_2",
          "value": "0",
          "time": "2023-09-16T14:29:24Z"
        },
        {
          "name": "N_1",
          "value": "0",
          "time": "2023-09-16T14:29:24Z"
        },
        {
          "name": "N_2",
          "value": "0",
          "time": "2023-09-16T14:29:24Z"
        },
        {
          "name": "loc",
          "value": "65",
          "time": "2023-09-16T14:29:24Z"
        },
        {
          "name": "lloc",
          "value": "11",
          "time": "2023-09-16T14:29:24Z"
        },
        {
          "name": "sloc",
          "value": "54",
          "time": "2023-09-16T14:29:24Z"
        },
        {
          "name": "cloc",
          "value": "5",
          "time": "2023-09-16T14:29:24Z"
        },
        {
          "name": "dloc",
          "value": "0",
          "time": "2023-09-16T14:29:24Z"
        },
        {
          "name": "blank_lines",
          "value": "6",
          "time": "2023-09-16T14:29:24Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2023-09-16T14:29:24Z"
        }
      ],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "2b9cb6a5570e4c8d5165281595be78f470b3e3f3",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "webapp/backend/scripts/resume_processor.py"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "webapp/backend/scripts/service_keys.py",
          "time": "2023-09-16T14:29:24Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2023-09-16T14:29:24Z"
        },
        {
          "name": "theta_1",
          "value": "2",
          "time": "2023-09-16T14:29:24Z"
        },
        {
          "name": "theta_2",
          "value": "4",
          "time": "2023-09-16T14:29:24Z"
        },
        {
          "name": "N_1",
          "value": "2",
          "time": "2023-09-16T14:29:24Z"
        },
        {
          "name": "N_2",
          "value": "4",
          "time": "2023-09-16T14:29:24Z"
        },
        {
          "name": "loc",
          "value": "75",
          "time": "2023-09-16T14:29:24Z"
        },
        {
          "name": "lloc",
          "value": "30",
          "time": "2023-09-16T14:29:24Z"
        },
        {
          "name": "sloc",
          "value": "30",
          "time": "2023-09-16T14:29:24Z"
        },
        {
          "name": "cloc",
          "value": "11",
          "time": "2023-09-16T14:29:24Z"
        },
        {
          "name": "dloc",
          "value": "17",
          "time": "2023-09-16T14:29:24Z"
        },
        {
          "name": "blank_lines",
          "value": "18",
          "time": "2023-09-16T14:29:24Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2023-09-16T14:29:24Z"
        }
      ],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "2b9cb6a5570e4c8d5165281595be78f470b3e3f3",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "webapp/backend/scripts/service_keys.py"
    },
    {
      "type": "commit",
      "attributes": [
        {
          "name": "message",
          "value": "NextJS Fullstack Webapp (#149)",
          "time": "2023-09-16T14:29:24Z"
        },
        {
          "name": "description",
          "value": "* feat: add full stack web app \r\n\r\nAdds in a nextjs and fastapi webapp (experimental)\r\n\r\n* feat: render save service keys on web app ui (#135)\r\n\r\n* feat: render save service keys on web app ui\r\n\r\nImplemented new feature to allow users to view the required configurable service keys (and urls) to set, on the web app UI.\r\n\r\nThe configurable required service keys data is dynamically derived from the backend master YAML config file (located in `/scripts/similarity/config.yml`), and its actual pre-saved secret key values derived from a localised programatically created git-ignored YAML secrets config file (located in `/scripts/similarity/config.local.yml`).\r\n\r\nWhenever a key is no longer required by the app, then it is safe to remove key from the master config file, and in turn this key and any pre-saved secret value will no longer render on the web UI.\r\n\r\nIf a secret has yet to be set for any of the required keys, then the value will fallback to the default placeholder value defined in the master YAML config.\r\n\r\n* chore: update next.js version and dependencies\r\n\r\n* chore: error handling for missing keys config file\r\n\r\nAdd error handling on the backend api for when `similarity/config.yaml` does not exist, to which it responds with a 404 not found response.\r\n\r\nAs a result, also added error handling on the frontend ui code to handle the above 404 backend api response edge case to not render the Service Keys ui section.\r\n\r\n* chore: ui refactor resume.tsx to hero.tsx\r\n\r\nLogically abstracted out and renamed `Hero` component to its own folder, and corrected / renamed component filename.\r\n\r\n* chore: sync requirements.txt from upstream\r\n\r\nPulled a bugfix for `requirements.txt` file from upstream fork origin repo main branch, which broke the webapp backend server run.\r\n\r\nRoot cause was that the qdrant-client dependency was set with a specific version; `qdrant-client>=1.1.1`, but the upstream reversion fix; `qdrant-client` without explicitly specifying a version resolved the webapp backend server run issue.\r\n\r\n* chore: add debug troubleshooting steps to webapp readme (#141)\r\n\r\nThis change is to add new sections labelled `Debugging` and `Troubleshooting` to the `webapp/README.md` file.\r\n\r\nThe debugging section guides users on how to run the FastAPI backend server in VS Codes' debug mode, along with running the frontend server in isolation.\r\n\r\nThe troubleshooting section currently highlights one potential common issue that users may encounter when only running the frontend server in isolation (e.g. `npm run next-dev`).\r\n\r\n---------\r\n\r\nCo-authored-by: Sayvai <sayvai@hotmail.com>",
          "time": "2023-09-16T14:29:24Z"
        },
        {
          "name": "to",
          "value": "['Resume-Matcher:(HEAD detached at 004b8a0)', 'Resume-Matcher:main']",
          "time": "2023-09-16T14:29:24Z"
        }
      ],
      "relationships": [
        {
          "objectId": ".gitignore",
          "qualifier": "aggregates"
        },
        {
          "objectId": "README.md",
          "qualifier": "aggregates"
        },
        {
          "objectId": "requirements.txt",
          "qualifier": "aggregates"
        },
        {
          "objectId": "webapp/.eslintrc.json",
          "qualifier": "aggregates"
        },
        {
          "objectId": "webapp/.gitignore",
          "qualifier": "aggregates"
        },
        {
          "objectId": "webapp/README.md",
          "qualifier": "aggregates"
        },
        {
          "objectId": "webapp/app/(routes)/layout.tsx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "webapp/app/(routes)/page.tsx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "webapp/app/_components/button/button.tsx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "webapp/app/_components/common-words/common-words.tsx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "webapp/app/_components/header/header.tsx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "webapp/app/_components/hero/hero.tsx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "webapp/app/_components/job-descriptions/add-jobs/add-jobs.tsx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "webapp/app/_components/job-descriptions/job-descriptions.tsx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "webapp/app/_components/processing-error/processing-error.tsx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "webapp/app/_components/resume/file-upload/file-upload.tsx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "webapp/app/_components/resume/pdf-viewer/pdf-viewer.tsx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "webapp/app/_components/resume/resume-glance/resume-glance.tsx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "webapp/app/_components/suggestions/suggestions.tsx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "webapp/app/_components/third-party-services/reducer.ts",
          "qualifier": "aggregates"
        },
        {
          "objectId": "webapp/app/_components/third-party-services/saved-keys.tsx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "webapp/app/_components/third-party-services/third-party-services.tsx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "webapp/app/_components/vector-scores/vector-scores.tsx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "webapp/app/_stores/useGlobalStore.ts",
          "qualifier": "aggregates"
        },
        {
          "objectId": "webapp/app/_types/job-descriptions.ts",
          "qualifier": "aggregates"
        },
        {
          "objectId": "webapp/app/_types/resume-processor.ts",
          "qualifier": "aggregates"
        },
        {
          "objectId": "webapp/app/_types/service-keys.ts",
          "qualifier": "aggregates"
        },
        {
          "objectId": "webapp/app/_utils/environment.ts",
          "qualifier": "aggregates"
        },
        {
          "objectId": "webapp/app/_utils/error.ts",
          "qualifier": "aggregates"
        },
        {
          "objectId": "webapp/app/globals.css",
          "qualifier": "aggregates"
        },
        {
          "objectId": "webapp/backend/api/index.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "webapp/backend/schemas/__init__.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "webapp/backend/schemas/resume_processor.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "webapp/backend/scripts/__init__.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "webapp/backend/scripts/resume_processor.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "webapp/backend/scripts/service_keys.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "webapp/next.config.js",
          "qualifier": "aggregates"
        },
        {
          "objectId": "webapp/package-lock.json",
          "qualifier": "aggregates"
        },
        {
          "objectId": "webapp/package.json",
          "qualifier": "aggregates"
        },
        {
          "objectId": "webapp/postcss.config.js",
          "qualifier": "aggregates"
        },
        {
          "objectId": "webapp/public/favicon-32x32.png",
          "qualifier": "aggregates"
        },
        {
          "objectId": "webapp/public/icons/file-description.svg",
          "qualifier": "aggregates"
        },
        {
          "objectId": "webapp/public/icons/github.svg",
          "qualifier": "aggregates"
        },
        {
          "objectId": "webapp/public/icons/link.svg",
          "qualifier": "aggregates"
        },
        {
          "objectId": "webapp/public/resume_matcher_logo.png",
          "qualifier": "aggregates"
        },
        {
          "objectId": "webapp/tailwind.config.ts",
          "qualifier": "aggregates"
        },
        {
          "objectId": "webapp/tsconfig.json",
          "qualifier": "aggregates"
        },
        {
          "objectId": "17e98084925f36ce50a3ebf1dcc7a3ded9f47565",
          "qualifier": "is-child-of"
        },
        {
          "objectId": "0.8433342328211345",
          "qualifier": "commit_mi"
        },
        {
          "objectId": "Saurabh Rai",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "0.2343529411764706",
          "qualifier": "commit_pylint"
        }
      ],
      "id": "2b9cb6a5570e4c8d5165281595be78f470b3e3f3"
    },
    {
      "type": "commit",
      "attributes": [
        {
          "name": "message",
          "value": "Updated the readme",
          "time": "2023-09-25T15:58:01Z"
        },
        {
          "name": "description",
          "value": "",
          "time": "2023-09-25T15:58:01Z"
        },
        {
          "name": "to",
          "value": "['Resume-Matcher:(HEAD detached at 004b8a0)', 'Resume-Matcher:main']",
          "time": "2023-09-25T15:58:01Z"
        }
      ],
      "relationships": [
        {
          "objectId": "Assets/img/header_image.png",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Assets/img/quadrant_cloud.png",
          "qualifier": "aggregates"
        },
        {
          "objectId": "README.md",
          "qualifier": "aggregates"
        },
        {
          "objectId": "streamlit_app.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "streamlit_second.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "e311a3af4135c172f57e937eea9437aaf4455798",
          "qualifier": "is-child-of"
        },
        {
          "objectId": "0.8433342328211345",
          "qualifier": "commit_mi"
        },
        {
          "objectId": "saurabhraidev",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "0.2343529411764706",
          "qualifier": "commit_pylint"
        }
      ],
      "id": "1ddb88222ea30d4e4d01f99f4df810c8a7db26d3"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "webapp/backend/scripts/files.py",
          "time": "2023-10-06T15:41:30Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2023-10-06T15:41:30Z"
        },
        {
          "name": "theta_1",
          "value": "6",
          "time": "2023-10-06T15:41:30Z"
        },
        {
          "name": "theta_2",
          "value": "17",
          "time": "2023-10-06T15:41:30Z"
        },
        {
          "name": "N_1",
          "value": "10",
          "time": "2023-10-06T15:41:30Z"
        },
        {
          "name": "N_2",
          "value": "19",
          "time": "2023-10-06T15:41:30Z"
        },
        {
          "name": "loc",
          "value": "132",
          "time": "2023-10-06T15:41:30Z"
        },
        {
          "name": "lloc",
          "value": "59",
          "time": "2023-10-06T15:41:30Z"
        },
        {
          "name": "sloc",
          "value": "58",
          "time": "2023-10-06T15:41:30Z"
        },
        {
          "name": "cloc",
          "value": "26",
          "time": "2023-10-06T15:41:30Z"
        },
        {
          "name": "dloc",
          "value": "19",
          "time": "2023-10-06T15:41:30Z"
        },
        {
          "name": "blank_lines",
          "value": "36",
          "time": "2023-10-06T15:41:30Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2023-10-06T15:41:30Z"
        }
      ],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "dc572fde263a51e4b05a2ea26cfc55a744cb63a2",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "webapp/backend/scripts/files.py"
    },
    {
      "type": "commit",
      "attributes": [
        {
          "name": "message",
          "value": "feat: webapp - save resume and job descs to filesystem (#179)",
          "time": "2023-10-06T15:41:30Z"
        },
        {
          "name": "description",
          "value": "This feature change allows for user uploaded resumes / CVs and multiple job descriptions to be saved to the local file system as PDF files, within `/Data/Resumes/` and `/Data/JobDescription/` directories respectively.\r\n\r\nEvery time the user clicks on the `Continue` button on the webapp to begin the resume and job descriptions upload process, then any prior *.local.pdf files will be removed, to avoid unnecessary buildup on files.\r\n\r\nThe PDF files are suffixed with `*.local.pdf` in the filename to avoid accidental commits / pushes to the main repositories from the community, where this is enforced in the `.gitignore` file as part of this change.\r\n\r\nLastly, a change has been made to the frontend web app UI to temporarily disable (commented out code) the ability to upload job links. The reason is because there is no current backend implementation to handle the parsing and web scraping of job descriptions via links from the web as of yet. When the backend implementation is complete, then please remember to uncomment the button which allows the users to also upload job links.",
          "time": "2023-10-06T15:41:30Z"
        },
        {
          "name": "to",
          "value": "['Resume-Matcher:(HEAD detached at 004b8a0)', 'Resume-Matcher:main']",
          "time": "2023-10-06T15:41:30Z"
        }
      ],
      "relationships": [
        {
          "objectId": ".gitignore",
          "qualifier": "aggregates"
        },
        {
          "objectId": "webapp/app/_components/job-descriptions/add-jobs/add-jobs.tsx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "webapp/backend/api/index.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "webapp/backend/scripts/files.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "f98ce0f8a8e8a9d9560560eac3ff07a5947f04ca",
          "qualifier": "is-child-of"
        },
        {
          "objectId": "0.8401132634167295",
          "qualifier": "commit_mi"
        },
        {
          "objectId": "Sayvai",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "0.23588571428571428",
          "qualifier": "commit_pylint"
        }
      ],
      "id": "dc572fde263a51e4b05a2ea26cfc55a744cb63a2"
    },
    {
      "type": "commit",
      "attributes": [
        {
          "name": "message",
          "value": "Added dropdown menu to select resume instead of slider (#167)",
          "time": "2023-10-07T21:32:50Z"
        },
        {
          "name": "description",
          "value": "Added dropdown menu to select resume instead of slider (#167)",
          "time": "2023-10-07T21:32:50Z"
        },
        {
          "name": "to",
          "value": "['Resume-Matcher:(HEAD detached at 004b8a0)', 'Resume-Matcher:main']",
          "time": "2023-10-07T21:32:50Z"
        }
      ],
      "relationships": [
        {
          "objectId": "streamlit_app.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "streamlit_second.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "dc572fde263a51e4b05a2ea26cfc55a744cb63a2",
          "qualifier": "is-child-of"
        },
        {
          "objectId": "0.8414769478181114",
          "qualifier": "commit_mi"
        },
        {
          "objectId": "Devasy Patel",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "0.23411428571428575",
          "qualifier": "commit_pylint"
        }
      ],
      "id": "362b83c002bfac8b789e2f82d5a6b27853f08209"
    },
    {
      "type": "commit",
      "attributes": [
        {
          "name": "message",
          "value": "Feature/Fix: Optimize LinkedIn_to_PDF logic (#194)",
          "time": "2023-10-11T14:19:47Z"
        },
        {
          "name": "description",
          "value": "* Dependencies: Add xhtml2pdf, pathvalidate. Change reportlab version from 4.0.4 to 3.6.13 for xhtml2pdf compatibility.\r\n\r\n* Fix: PDF will preserve HTML format. Also structured the file to enable reusable function.",
          "time": "2023-10-11T14:19:47Z"
        },
        {
          "name": "to",
          "value": "['Resume-Matcher:(HEAD detached at 004b8a0)', 'Resume-Matcher:main']",
          "time": "2023-10-11T14:19:47Z"
        }
      ],
      "relationships": [
        {
          "objectId": "requirements.txt",
          "qualifier": "aggregates"
        },
        {
          "objectId": "scripts/LinkedinJobToPDF.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "9d97fdd88f42ab22433c785011e27de5f6245707",
          "qualifier": "is-child-of"
        },
        {
          "objectId": "0.8449165036303984",
          "qualifier": "commit_mi"
        },
        {
          "objectId": "Abhishek Mathur",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "0.23025714285714283",
          "qualifier": "commit_pylint"
        }
      ],
      "id": "bf6296f6f39472bc0faa253fc151934299832177"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "streamlit_interactive.py",
          "time": "2023-10-22T15:17:43Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2023-10-22T15:17:43Z"
        },
        {
          "name": "theta_1",
          "value": "9",
          "time": "2023-10-22T15:17:43Z"
        },
        {
          "name": "theta_2",
          "value": "29",
          "time": "2023-10-22T15:17:43Z"
        },
        {
          "name": "N_1",
          "value": "20",
          "time": "2023-10-22T15:17:43Z"
        },
        {
          "name": "N_2",
          "value": "41",
          "time": "2023-10-22T15:17:43Z"
        },
        {
          "name": "loc",
          "value": "414",
          "time": "2023-10-22T15:17:43Z"
        },
        {
          "name": "lloc",
          "value": "233",
          "time": "2023-10-22T15:17:43Z"
        },
        {
          "name": "sloc",
          "value": "270",
          "time": "2023-10-22T15:17:43Z"
        },
        {
          "name": "cloc",
          "value": "38",
          "time": "2023-10-22T15:17:43Z"
        },
        {
          "name": "dloc",
          "value": "32",
          "time": "2023-10-22T15:17:43Z"
        },
        {
          "name": "blank_lines",
          "value": "75",
          "time": "2023-10-22T15:17:43Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2023-10-22T15:17:43Z"
        },
        {
          "name": "theta_1",
          "value": "8",
          "time": "2024-03-25T19:13:40Z"
        },
        {
          "name": "theta_2",
          "value": "27",
          "time": "2024-03-25T19:13:40Z"
        },
        {
          "name": "N_1",
          "value": "19",
          "time": "2024-03-25T19:13:40Z"
        },
        {
          "name": "N_2",
          "value": "39",
          "time": "2024-03-25T19:13:40Z"
        },
        {
          "name": "loc",
          "value": "536",
          "time": "2024-03-25T19:13:40Z"
        },
        {
          "name": "lloc",
          "value": "227",
          "time": "2024-03-25T19:13:40Z"
        },
        {
          "name": "sloc",
          "value": "386",
          "time": "2024-03-25T19:13:40Z"
        },
        {
          "name": "cloc",
          "value": "43",
          "time": "2024-03-25T19:13:40Z"
        },
        {
          "name": "blank_lines",
          "value": "76",
          "time": "2024-03-25T19:13:40Z"
        },
        {
          "name": "pylint_score",
          "value": "0.545",
          "time": "2024-03-25T19:13:40Z"
        }
      ],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "88f14b8b121337a82c5c70d68e03d28bb3ddac4d",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "streamlit_interactive.py"
    },
    {
      "type": "commit",
      "attributes": [
        {
          "name": "message",
          "value": "Feature: Streamlit Interactive v1.0 (#184)",
          "time": "2023-10-22T15:17:43Z"
        },
        {
          "name": "description",
          "value": "* Initial commit\r\n\r\n* Docs: ChatGPTd for comments and docstrings\r\n\r\n* Fix: Type warning for title-font in  create_star_graph()\r\n\r\n* Format: Re-formatted as per PEP 8\r\n\r\n* UI: Move intro to sidebar\r\n\r\n* UI: Remove footer links, add Back to Top link\r\n\r\n* UI: Add columns for resume and job description upload\r\n\r\n* Fix: header_image extension updated in script\r\n\r\n* Update: streamlit upgraded to 1.27.0 & streamlit-extras upgrade to 0.3.2+htbuilder upgraded to 0.6.2\r\n\r\n* Misc: Formatting\r\n\r\n* UI: Add components for each column and add cleanup of processed files\r\n\r\n* UI: Add Favicon file\r\n\r\n* Fix: Updated syntax for string comparison\r\n\r\n* Cleanup: Delete unnecessary files\r\n\r\n* Fix: Remove dependency on run_first. Add dir delete function. Include icon in st.toast implementation.\r\n\r\n* Ignore: Add /Data/Processed/* in gitignore\r\n\r\n* UI: Add containers to fix columns together for each row\r\n\r\n* Fix: Reference issue for resume key topics. Also add wide layout as default.\r\n\r\n* Revert \"Cleanup: Delete unnecessary files\"\r\n\r\nThis reverts commit cf3f1c73d8fa91f48b50eef2f669e68e9cbe80fa.\r\n\r\n---------\r\n\r\nCo-authored-by: imhalcyon <shake.aftermath@gmail.com>",
          "time": "2023-10-22T15:17:43Z"
        },
        {
          "name": "to",
          "value": "['Resume-Matcher:(HEAD detached at 004b8a0)', 'Resume-Matcher:main']",
          "time": "2023-10-22T15:17:43Z"
        }
      ],
      "relationships": [
        {
          "objectId": ".gitignore",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Assets/img/favicon.ico",
          "qualifier": "aggregates"
        },
        {
          "objectId": "streamlit_interactive.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "67331789fa276e03eb7544e0fcbed451a4154ca9",
          "qualifier": "is-child-of"
        },
        {
          "objectId": "0.8360262246129938",
          "qualifier": "commit_mi"
        },
        {
          "objectId": "Abhishek Mathur",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "0.2386666666666667",
          "qualifier": "commit_pylint"
        }
      ],
      "id": "e359e0adaf44d1f582e75d933db252c3692b0598"
    },
    {
      "type": "commit",
      "attributes": [
        {
          "name": "message",
          "value": "Adds a sidebar and favicon to existing streamlit apps (#182)",
          "time": "2023-10-31T10:03:32Z"
        },
        {
          "name": "description",
          "value": "* UI: Move intro text to sidebar\r\n\r\n* UI: Add favicon and page title\r\n\r\n* UI: Add back to top link\r\n\r\n* UI: Add sidebar, favicon, back to top",
          "time": "2023-10-31T10:03:32Z"
        },
        {
          "name": "to",
          "value": "['Resume-Matcher:(HEAD detached at 004b8a0)', 'Resume-Matcher:main']",
          "time": "2023-10-31T10:03:32Z"
        }
      ],
      "relationships": [
        {
          "objectId": "streamlit_app.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "streamlit_second.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "f73fbd1a32431a7e87953382ba3629e82d58dc54",
          "qualifier": "is-child-of"
        },
        {
          "objectId": "0.836845319343862",
          "qualifier": "commit_mi"
        },
        {
          "objectId": "Abhishek Mathur",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "0.23716666666666666",
          "qualifier": "commit_pylint"
        }
      ],
      "id": "73be66d126a59dbdbc85f4d1679663b1542a19c6"
    },
    {
      "type": "commit",
      "attributes": [
        {
          "name": "message",
          "value": "Shifted the WebApp to a web-app branch (#238)",
          "time": "2024-02-18T01:24:53Z"
        },
        {
          "name": "description",
          "value": "Co-authored-by: srbhr <srbhr077@gmail.com>",
          "time": "2024-02-18T01:24:53Z"
        },
        {
          "name": "to",
          "value": "['Resume-Matcher:(HEAD detached at 004b8a0)', 'Resume-Matcher:main']",
          "time": "2024-02-18T01:24:53Z"
        }
      ],
      "relationships": [
        {
          "objectId": "README.md",
          "qualifier": "aggregates"
        },
        {
          "objectId": "webapp/backend/schemas/__init__.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "webapp/backend/scripts/__init__.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "webapp/public/favicon-32x32.png",
          "qualifier": "aggregates"
        },
        {
          "objectId": "webapp/public/resume_matcher_logo.png",
          "qualifier": "aggregates"
        },
        {
          "objectId": "081bace62221f213f57f2f7d5e09db419bce3718",
          "qualifier": "is-child-of"
        },
        {
          "objectId": "0.8190377408660771",
          "qualifier": "commit_mi"
        },
        {
          "objectId": "Saurabh Rai",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "0.23941379310344826",
          "qualifier": "commit_pylint"
        }
      ],
      "id": "f2c28b4b4bff4070582fdd1c87563e4a68601a69"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "scripts/similarity/get_score.py",
          "time": "2024-03-13T00:44:27Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2024-03-13T00:44:27Z"
        },
        {
          "name": "theta_1",
          "value": "3",
          "time": "2024-03-13T00:44:27Z"
        },
        {
          "name": "theta_2",
          "value": "10",
          "time": "2024-03-13T00:44:27Z"
        },
        {
          "name": "N_1",
          "value": "5",
          "time": "2024-03-13T00:44:27Z"
        },
        {
          "name": "N_2",
          "value": "10",
          "time": "2024-03-13T00:44:27Z"
        },
        {
          "name": "loc",
          "value": "108",
          "time": "2024-03-13T00:44:27Z"
        },
        {
          "name": "lloc",
          "value": "73",
          "time": "2024-03-13T00:44:27Z"
        },
        {
          "name": "sloc",
          "value": "85",
          "time": "2024-03-13T00:44:27Z"
        },
        {
          "name": "cloc",
          "value": "1",
          "time": "2024-03-13T00:44:27Z"
        },
        {
          "name": "dloc",
          "value": "0",
          "time": "2024-03-13T00:44:27Z"
        },
        {
          "name": "blank_lines",
          "value": "22",
          "time": "2024-03-13T00:44:27Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2024-03-13T00:44:27Z"
        },
        {
          "name": "loc",
          "value": "159",
          "time": "2024-03-25T19:13:40Z"
        },
        {
          "name": "lloc",
          "value": "69",
          "time": "2024-03-25T19:13:40Z"
        },
        {
          "name": "sloc",
          "value": "77",
          "time": "2024-03-25T19:13:40Z"
        },
        {
          "name": "cloc",
          "value": "3",
          "time": "2024-03-25T19:13:40Z"
        },
        {
          "name": "dloc",
          "value": "51",
          "time": "2024-03-25T19:13:40Z"
        },
        {
          "name": "blank_lines",
          "value": "28",
          "time": "2024-03-25T19:13:40Z"
        },
        {
          "name": "pylint_score",
          "value": "0.381",
          "time": "2024-03-25T19:13:40Z"
        }
      ],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "76062e92fddf37c0daa0aee3f06ef4b05409ae78",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "scripts/similarity/get_score.py"
    },
    {
      "type": "commit",
      "attributes": [
        {
          "name": "message",
          "value": "updated without cohere and qdrant api keys",
          "time": "2024-03-13T00:44:27Z"
        },
        {
          "name": "description",
          "value": "",
          "time": "2024-03-13T00:44:27Z"
        },
        {
          "name": "to",
          "value": "['Resume-Matcher:(HEAD detached at 004b8a0)', 'Resume-Matcher:main']",
          "time": "2024-03-13T00:44:27Z"
        }
      ],
      "relationships": [
        {
          "objectId": "requirements.txt",
          "qualifier": "aggregates"
        },
        {
          "objectId": "scripts/similarity/get_score.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "streamlit_app.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "145003f170044db2a40168d1d9ba1d95bdaab9d5",
          "qualifier": "is-child-of"
        },
        {
          "objectId": "0.8097346664145902",
          "qualifier": "commit_mi"
        },
        {
          "objectId": "SubramanyamChalla24",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "0.25043333333333334",
          "qualifier": "commit_pylint"
        }
      ],
      "id": "f4db040fffaee03e153c95b5c54430bc30da9b7e"
    },
    {
      "type": "commit",
      "attributes": [
        {
          "name": "message",
          "value": "Add logging configuration and update similarity score display (#245)",
          "time": "2024-03-25T19:13:40Z"
        },
        {
          "name": "description",
          "value": "* Add logging configuration and update similarity score display\r\n\r\n* Refactor import statements and clean up code formatting",
          "time": "2024-03-25T19:13:40Z"
        },
        {
          "name": "to",
          "value": "['Resume-Matcher:(HEAD detached at 004b8a0)', 'Resume-Matcher:main']",
          "time": "2024-03-25T19:13:40Z"
        }
      ],
      "relationships": [
        {
          "objectId": "Demo/DemoData.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "archive/Data.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "archive/ExtraScripts.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "archive/run.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "archive/streamlit_app.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "run_first.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "scripts/Extractor.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "scripts/JobDescriptionProcessor.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "scripts/KeytermsExtraction.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "scripts/LinkedinJobToPDF.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "scripts/ReadPdf.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "scripts/ResumeProcessor.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "scripts/TextCleaner.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "scripts/__init__.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "scripts/parsers/ParseJobDescToJson.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "scripts/parsers/ParseResumeToJson.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "scripts/parsers/__init__.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "scripts/similarity/__init__.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "scripts/similarity/get_score.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "scripts/similarity/get_similarity_score.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "scripts/utils/ReadFiles.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "scripts/utils/Similar.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "scripts/utils/Utils.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "scripts/utils/__init__.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "scripts/utils/logger.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "streamlit_app.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "streamlit_interactive.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "streamlit_second.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "6ed99ab14f0980dba0a57bd13b0e63f5c9c4f4ae",
          "qualifier": "is-child-of"
        },
        {
          "objectId": "0.7972629875016192",
          "qualifier": "commit_mi"
        },
        {
          "objectId": "Devasy Patel",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "0.27730000000000005",
          "qualifier": "commit_pylint"
        }
      ],
      "id": "76062e92fddf37c0daa0aee3f06ef4b05409ae78"
    },
    {
      "type": "commit",
      "attributes": [
        {
          "name": "message",
          "value": "Removed the archive folder (#247)",
          "time": "2024-03-25T19:23:36Z"
        },
        {
          "name": "description",
          "value": "Co-authored-by: srbhr <srbhr077@gmail.com>",
          "time": "2024-03-25T19:23:36Z"
        },
        {
          "name": "to",
          "value": "['Resume-Matcher:(HEAD detached at 004b8a0)', 'Resume-Matcher:main']",
          "time": "2024-03-25T19:23:36Z"
        }
      ],
      "relationships": [
        {
          "objectId": "76062e92fddf37c0daa0aee3f06ef4b05409ae78",
          "qualifier": "is-child-of"
        },
        {
          "objectId": "0.8114064044230355",
          "qualifier": "commit_mi"
        },
        {
          "objectId": "Saurabh Rai",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "0.28123076923076923",
          "qualifier": "commit_pylint"
        }
      ],
      "id": "71dcaef35f288c04e083f59f3df2fa7814579363"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "resume_matcher/__init__.py",
          "time": "2024-06-07T12:45:42Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2024-06-07T12:45:42Z"
        },
        {
          "name": "theta_1",
          "value": "0",
          "time": "2024-06-07T12:45:42Z"
        },
        {
          "name": "theta_2",
          "value": "0",
          "time": "2024-06-07T12:45:42Z"
        },
        {
          "name": "N_1",
          "value": "0",
          "time": "2024-06-07T12:45:42Z"
        },
        {
          "name": "N_2",
          "value": "0",
          "time": "2024-06-07T12:45:42Z"
        },
        {
          "name": "loc",
          "value": "0",
          "time": "2024-06-07T12:45:42Z"
        },
        {
          "name": "lloc",
          "value": "0",
          "time": "2024-06-07T12:45:42Z"
        },
        {
          "name": "sloc",
          "value": "0",
          "time": "2024-06-07T12:45:42Z"
        },
        {
          "name": "cloc",
          "value": "0",
          "time": "2024-06-07T12:45:42Z"
        },
        {
          "name": "dloc",
          "value": "0",
          "time": "2024-06-07T12:45:42Z"
        },
        {
          "name": "blank_lines",
          "value": "0",
          "time": "2024-06-07T12:45:42Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2024-06-07T12:45:42Z"
        }
      ],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "0b39f8c616f8cfb149572a3f15e470b313415271",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "resume_matcher/__init__.py"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "resume_matcher/dataextractor/DataExtractor.py",
          "time": "2024-06-07T12:45:42Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2024-06-07T12:45:42Z"
        },
        {
          "name": "theta_1",
          "value": "3",
          "time": "2024-06-07T12:45:42Z"
        },
        {
          "name": "theta_2",
          "value": "12",
          "time": "2024-06-07T12:45:42Z"
        },
        {
          "name": "N_1",
          "value": "6",
          "time": "2024-06-07T12:45:42Z"
        },
        {
          "name": "N_2",
          "value": "13",
          "time": "2024-06-07T12:45:42Z"
        },
        {
          "name": "loc",
          "value": "221",
          "time": "2024-06-07T12:45:42Z"
        },
        {
          "name": "lloc",
          "value": "74",
          "time": "2024-06-07T12:45:42Z"
        },
        {
          "name": "sloc",
          "value": "109",
          "time": "2024-06-07T12:45:42Z"
        },
        {
          "name": "cloc",
          "value": "1",
          "time": "2024-06-07T12:45:42Z"
        },
        {
          "name": "dloc",
          "value": "72",
          "time": "2024-06-07T12:45:42Z"
        },
        {
          "name": "blank_lines",
          "value": "39",
          "time": "2024-06-07T12:45:42Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2024-06-07T12:45:42Z"
        }
      ],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "0b39f8c616f8cfb149572a3f15e470b313415271",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "resume_matcher/dataextractor/DataExtractor.py"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "resume_matcher/dataextractor/KeyTermExtractor.py",
          "time": "2024-06-07T12:45:42Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2024-06-07T12:45:42Z"
        },
        {
          "name": "theta_1",
          "value": "0",
          "time": "2024-06-07T12:45:42Z"
        },
        {
          "name": "theta_2",
          "value": "0",
          "time": "2024-06-07T12:45:42Z"
        },
        {
          "name": "N_1",
          "value": "0",
          "time": "2024-06-07T12:45:42Z"
        },
        {
          "name": "N_2",
          "value": "0",
          "time": "2024-06-07T12:45:42Z"
        },
        {
          "name": "loc",
          "value": "154",
          "time": "2024-06-07T12:45:42Z"
        },
        {
          "name": "lloc",
          "value": "36",
          "time": "2024-06-07T12:45:42Z"
        },
        {
          "name": "sloc",
          "value": "93",
          "time": "2024-06-07T12:45:42Z"
        },
        {
          "name": "cloc",
          "value": "1",
          "time": "2024-06-07T12:45:42Z"
        },
        {
          "name": "dloc",
          "value": "39",
          "time": "2024-06-07T12:45:42Z"
        },
        {
          "name": "blank_lines",
          "value": "21",
          "time": "2024-06-07T12:45:42Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2024-06-07T12:45:42Z"
        }
      ],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "0b39f8c616f8cfb149572a3f15e470b313415271",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "resume_matcher/dataextractor/KeyTermExtractor.py"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "resume_matcher/dataextractor/TextCleaner.py",
          "time": "2024-06-07T12:45:42Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2024-06-07T12:45:42Z"
        },
        {
          "name": "theta_1",
          "value": "3",
          "time": "2024-06-07T12:45:42Z"
        },
        {
          "name": "theta_2",
          "value": "6",
          "time": "2024-06-07T12:45:42Z"
        },
        {
          "name": "N_1",
          "value": "3",
          "time": "2024-06-07T12:45:42Z"
        },
        {
          "name": "N_2",
          "value": "6",
          "time": "2024-06-07T12:45:42Z"
        },
        {
          "name": "loc",
          "value": "124",
          "time": "2024-06-07T12:45:42Z"
        },
        {
          "name": "lloc",
          "value": "45",
          "time": "2024-06-07T12:45:42Z"
        },
        {
          "name": "sloc",
          "value": "73",
          "time": "2024-06-07T12:45:42Z"
        },
        {
          "name": "cloc",
          "value": "1",
          "time": "2024-06-07T12:45:42Z"
        },
        {
          "name": "dloc",
          "value": "29",
          "time": "2024-06-07T12:45:42Z"
        },
        {
          "name": "blank_lines",
          "value": "21",
          "time": "2024-06-07T12:45:42Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2024-06-07T12:45:42Z"
        }
      ],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "0b39f8c616f8cfb149572a3f15e470b313415271",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "resume_matcher/dataextractor/TextCleaner.py"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "resume_matcher/dataextractor/__init__.py",
          "time": "2024-06-07T12:45:42Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2024-06-07T12:45:42Z"
        },
        {
          "name": "theta_1",
          "value": "0",
          "time": "2024-06-07T12:45:42Z"
        },
        {
          "name": "theta_2",
          "value": "0",
          "time": "2024-06-07T12:45:42Z"
        },
        {
          "name": "N_1",
          "value": "0",
          "time": "2024-06-07T12:45:42Z"
        },
        {
          "name": "N_2",
          "value": "0",
          "time": "2024-06-07T12:45:42Z"
        },
        {
          "name": "loc",
          "value": "0",
          "time": "2024-06-07T12:45:42Z"
        },
        {
          "name": "lloc",
          "value": "0",
          "time": "2024-06-07T12:45:42Z"
        },
        {
          "name": "sloc",
          "value": "0",
          "time": "2024-06-07T12:45:42Z"
        },
        {
          "name": "cloc",
          "value": "0",
          "time": "2024-06-07T12:45:42Z"
        },
        {
          "name": "dloc",
          "value": "0",
          "time": "2024-06-07T12:45:42Z"
        },
        {
          "name": "blank_lines",
          "value": "0",
          "time": "2024-06-07T12:45:42Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2024-06-07T12:45:42Z"
        }
      ],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "0b39f8c616f8cfb149572a3f15e470b313415271",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "resume_matcher/dataextractor/__init__.py"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "resume_matcher/main.py",
          "time": "2024-06-07T12:45:42Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2024-06-07T12:45:42Z"
        },
        {
          "name": "theta_1",
          "value": "1",
          "time": "2024-06-07T12:45:42Z"
        },
        {
          "name": "theta_2",
          "value": "4",
          "time": "2024-06-07T12:45:42Z"
        },
        {
          "name": "N_1",
          "value": "2",
          "time": "2024-06-07T12:45:42Z"
        },
        {
          "name": "N_2",
          "value": "4",
          "time": "2024-06-07T12:45:42Z"
        },
        {
          "name": "loc",
          "value": "39",
          "time": "2024-06-07T12:45:42Z"
        },
        {
          "name": "lloc",
          "value": "24",
          "time": "2024-06-07T12:45:42Z"
        },
        {
          "name": "sloc",
          "value": "26",
          "time": "2024-06-07T12:45:42Z"
        },
        {
          "name": "cloc",
          "value": "0",
          "time": "2024-06-07T12:45:42Z"
        },
        {
          "name": "dloc",
          "value": "0",
          "time": "2024-06-07T12:45:42Z"
        },
        {
          "name": "blank_lines",
          "value": "13",
          "time": "2024-06-07T12:45:42Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2024-06-07T12:45:42Z"
        }
      ],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "0b39f8c616f8cfb149572a3f15e470b313415271",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "resume_matcher/main.py"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "resume_matcher/run_first.py",
          "time": "2024-06-07T12:45:42Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2024-06-07T12:45:42Z"
        },
        {
          "name": "theta_1",
          "value": "1",
          "time": "2024-06-07T12:45:42Z"
        },
        {
          "name": "theta_2",
          "value": "2",
          "time": "2024-06-07T12:45:42Z"
        },
        {
          "name": "N_1",
          "value": "1",
          "time": "2024-06-07T12:45:42Z"
        },
        {
          "name": "N_2",
          "value": "2",
          "time": "2024-06-07T12:45:42Z"
        },
        {
          "name": "loc",
          "value": "59",
          "time": "2024-06-07T12:45:42Z"
        },
        {
          "name": "lloc",
          "value": "41",
          "time": "2024-06-07T12:45:42Z"
        },
        {
          "name": "sloc",
          "value": "47",
          "time": "2024-06-07T12:45:42Z"
        },
        {
          "name": "cloc",
          "value": "0",
          "time": "2024-06-07T12:45:42Z"
        },
        {
          "name": "dloc",
          "value": "0",
          "time": "2024-06-07T12:45:42Z"
        },
        {
          "name": "blank_lines",
          "value": "12",
          "time": "2024-06-07T12:45:42Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2024-06-07T12:45:42Z"
        }
      ],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "0b39f8c616f8cfb149572a3f15e470b313415271",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "resume_matcher/run_first.py"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "resume_matcher/scripts/__init__.py",
          "time": "2024-06-07T12:45:42Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2024-06-07T12:45:42Z"
        },
        {
          "name": "theta_1",
          "value": "0",
          "time": "2024-06-07T12:45:42Z"
        },
        {
          "name": "theta_2",
          "value": "0",
          "time": "2024-06-07T12:45:42Z"
        },
        {
          "name": "N_1",
          "value": "0",
          "time": "2024-06-07T12:45:42Z"
        },
        {
          "name": "N_2",
          "value": "0",
          "time": "2024-06-07T12:45:42Z"
        },
        {
          "name": "loc",
          "value": "0",
          "time": "2024-06-07T12:45:42Z"
        },
        {
          "name": "lloc",
          "value": "0",
          "time": "2024-06-07T12:45:42Z"
        },
        {
          "name": "sloc",
          "value": "0",
          "time": "2024-06-07T12:45:42Z"
        },
        {
          "name": "cloc",
          "value": "0",
          "time": "2024-06-07T12:45:42Z"
        },
        {
          "name": "dloc",
          "value": "0",
          "time": "2024-06-07T12:45:42Z"
        },
        {
          "name": "blank_lines",
          "value": "0",
          "time": "2024-06-07T12:45:42Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2024-06-07T12:45:42Z"
        }
      ],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "0b39f8c616f8cfb149572a3f15e470b313415271",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "resume_matcher/scripts/__init__.py"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "resume_matcher/scripts/get_score.py",
          "time": "2024-06-07T12:45:42Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2024-06-07T12:45:42Z"
        },
        {
          "name": "theta_1",
          "value": "2",
          "time": "2024-06-07T12:45:42Z"
        },
        {
          "name": "theta_2",
          "value": "6",
          "time": "2024-06-07T12:45:42Z"
        },
        {
          "name": "N_1",
          "value": "3",
          "time": "2024-06-07T12:45:42Z"
        },
        {
          "name": "N_2",
          "value": "6",
          "time": "2024-06-07T12:45:42Z"
        },
        {
          "name": "loc",
          "value": "77",
          "time": "2024-06-07T12:45:42Z"
        },
        {
          "name": "lloc",
          "value": "33",
          "time": "2024-06-07T12:45:42Z"
        },
        {
          "name": "sloc",
          "value": "42",
          "time": "2024-06-07T12:45:42Z"
        },
        {
          "name": "cloc",
          "value": "3",
          "time": "2024-06-07T12:45:42Z"
        },
        {
          "name": "dloc",
          "value": "14",
          "time": "2024-06-07T12:45:42Z"
        },
        {
          "name": "blank_lines",
          "value": "18",
          "time": "2024-06-07T12:45:42Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2024-06-07T12:45:42Z"
        }
      ],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "0b39f8c616f8cfb149572a3f15e470b313415271",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "resume_matcher/scripts/get_score.py"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "resume_matcher/scripts/logger.py",
          "time": "2024-06-07T12:45:42Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2024-06-07T12:45:42Z"
        },
        {
          "name": "theta_1",
          "value": "2",
          "time": "2024-06-07T12:45:42Z"
        },
        {
          "name": "theta_2",
          "value": "15",
          "time": "2024-06-07T12:45:42Z"
        },
        {
          "name": "N_1",
          "value": "17",
          "time": "2024-06-07T12:45:42Z"
        },
        {
          "name": "N_2",
          "value": "28",
          "time": "2024-06-07T12:45:42Z"
        },
        {
          "name": "loc",
          "value": "148",
          "time": "2024-06-07T12:45:42Z"
        },
        {
          "name": "lloc",
          "value": "37",
          "time": "2024-06-07T12:45:42Z"
        },
        {
          "name": "sloc",
          "value": "47",
          "time": "2024-06-07T12:45:42Z"
        },
        {
          "name": "cloc",
          "value": "5",
          "time": "2024-06-07T12:45:42Z"
        },
        {
          "name": "dloc",
          "value": "70",
          "time": "2024-06-07T12:45:42Z"
        },
        {
          "name": "blank_lines",
          "value": "26",
          "time": "2024-06-07T12:45:42Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2024-06-07T12:45:42Z"
        }
      ],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "0b39f8c616f8cfb149572a3f15e470b313415271",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "resume_matcher/scripts/logger.py"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "resume_matcher/scripts/parser.py",
          "time": "2024-06-07T12:45:42Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2024-06-07T12:45:42Z"
        },
        {
          "name": "theta_1",
          "value": "1",
          "time": "2024-06-07T12:45:42Z"
        },
        {
          "name": "theta_2",
          "value": "4",
          "time": "2024-06-07T12:45:42Z"
        },
        {
          "name": "N_1",
          "value": "2",
          "time": "2024-06-07T12:45:42Z"
        },
        {
          "name": "N_2",
          "value": "4",
          "time": "2024-06-07T12:45:42Z"
        },
        {
          "name": "loc",
          "value": "55",
          "time": "2024-06-07T12:45:42Z"
        },
        {
          "name": "lloc",
          "value": "36",
          "time": "2024-06-07T12:45:42Z"
        },
        {
          "name": "sloc",
          "value": "51",
          "time": "2024-06-07T12:45:42Z"
        },
        {
          "name": "cloc",
          "value": "0",
          "time": "2024-06-07T12:45:42Z"
        },
        {
          "name": "dloc",
          "value": "0",
          "time": "2024-06-07T12:45:42Z"
        },
        {
          "name": "blank_lines",
          "value": "4",
          "time": "2024-06-07T12:45:42Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2024-06-07T12:45:42Z"
        }
      ],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "0b39f8c616f8cfb149572a3f15e470b313415271",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "resume_matcher/scripts/parser.py"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "resume_matcher/scripts/processor.py",
          "time": "2024-06-07T12:45:42Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2024-06-07T12:45:42Z"
        },
        {
          "name": "theta_1",
          "value": "3",
          "time": "2024-06-07T12:45:42Z"
        },
        {
          "name": "theta_2",
          "value": "18",
          "time": "2024-06-07T12:45:42Z"
        },
        {
          "name": "N_1",
          "value": "11",
          "time": "2024-06-07T12:45:42Z"
        },
        {
          "name": "N_2",
          "value": "22",
          "time": "2024-06-07T12:45:42Z"
        },
        {
          "name": "loc",
          "value": "54",
          "time": "2024-06-07T12:45:42Z"
        },
        {
          "name": "lloc",
          "value": "41",
          "time": "2024-06-07T12:45:42Z"
        },
        {
          "name": "sloc",
          "value": "45",
          "time": "2024-06-07T12:45:42Z"
        },
        {
          "name": "cloc",
          "value": "0",
          "time": "2024-06-07T12:45:42Z"
        },
        {
          "name": "dloc",
          "value": "0",
          "time": "2024-06-07T12:45:42Z"
        },
        {
          "name": "blank_lines",
          "value": "9",
          "time": "2024-06-07T12:45:42Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2024-06-07T12:45:42Z"
        }
      ],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "0b39f8c616f8cfb149572a3f15e470b313415271",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "resume_matcher/scripts/processor.py"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "resume_matcher/scripts/utils.py",
          "time": "2024-06-07T12:45:42Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2024-06-07T12:45:42Z"
        },
        {
          "name": "theta_1",
          "value": "4",
          "time": "2024-06-07T12:45:42Z"
        },
        {
          "name": "theta_2",
          "value": "8",
          "time": "2024-06-07T12:45:42Z"
        },
        {
          "name": "N_1",
          "value": "4",
          "time": "2024-06-07T12:45:42Z"
        },
        {
          "name": "N_2",
          "value": "8",
          "time": "2024-06-07T12:45:42Z"
        },
        {
          "name": "loc",
          "value": "147",
          "time": "2024-06-07T12:45:42Z"
        },
        {
          "name": "lloc",
          "value": "71",
          "time": "2024-06-07T12:45:42Z"
        },
        {
          "name": "sloc",
          "value": "69",
          "time": "2024-06-07T12:45:42Z"
        },
        {
          "name": "cloc",
          "value": "0",
          "time": "2024-06-07T12:45:42Z"
        },
        {
          "name": "dloc",
          "value": "51",
          "time": "2024-06-07T12:45:42Z"
        },
        {
          "name": "blank_lines",
          "value": "27",
          "time": "2024-06-07T12:45:42Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2024-06-07T12:45:42Z"
        }
      ],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "0b39f8c616f8cfb149572a3f15e470b313415271",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "resume_matcher/scripts/utils.py"
    },
    {
      "type": "commit",
      "attributes": [
        {
          "name": "message",
          "value": "Updated version (#264)",
          "time": "2024-06-07T12:45:42Z"
        },
        {
          "name": "description",
          "value": "* added data extraction files\r\n\r\n* additional script files\r\n\r\n* parsing and processing file run_first.py\r\n\r\n* main.py\r\n\r\n* removed cohere dependency , update codes . (#261)\r\n\r\n(cherry picked from commit a1cc1706ffab7d2527a49d4061b20ae792ba9cc3)\r\n\r\n* removed tkinter , removed cohere dependent code\r\n\r\n* added resumes , jd with new name format",
          "time": "2024-06-07T12:45:42Z"
        },
        {
          "name": "to",
          "value": "['Resume-Matcher:(HEAD detached at 004b8a0)', 'Resume-Matcher:main']",
          "time": "2024-06-07T12:45:42Z"
        }
      ],
      "relationships": [
        {
          "objectId": "resume_matcher/__init__.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "resume_matcher/dataextractor/DataExtractor.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "resume_matcher/dataextractor/KeyTermExtractor.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "resume_matcher/dataextractor/TextCleaner.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "resume_matcher/dataextractor/__init__.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "resume_matcher/main.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "resume_matcher/run_first.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "resume_matcher/scripts/__init__.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "resume_matcher/scripts/get_score.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "resume_matcher/scripts/logger.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "resume_matcher/scripts/parser.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "resume_matcher/scripts/processor.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "resume_matcher/scripts/utils.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "scripts/similarity/get_similarity_score.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "a1cc1706ffab7d2527a49d4061b20ae792ba9cc3",
          "qualifier": "is-child-of"
        },
        {
          "objectId": "0.7976788573377511",
          "qualifier": "commit_mi"
        },
        {
          "objectId": "Subramanyam Challa",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "0.29730769230769233",
          "qualifier": "commit_pylint"
        }
      ],
      "id": "0b39f8c616f8cfb149572a3f15e470b313415271"
    },
    {
      "type": "commit",
      "attributes": [
        {
          "name": "message",
          "value": "fixing #272 folder not found error",
          "time": "2024-08-30T20:56:02Z"
        },
        {
          "name": "description",
          "value": "",
          "time": "2024-08-30T20:56:02Z"
        },
        {
          "name": "to",
          "value": "['Resume-Matcher:(HEAD detached at 004b8a0)', 'Resume-Matcher:main']",
          "time": "2024-08-30T20:56:02Z"
        }
      ],
      "relationships": [
        {
          "objectId": "run_first.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "0b39f8c616f8cfb149572a3f15e470b313415271",
          "qualifier": "is-child-of"
        },
        {
          "objectId": "0.7963591995209652",
          "qualifier": "commit_mi"
        },
        {
          "objectId": "KamalMahanna",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "0.29853846153846153",
          "qualifier": "commit_pylint"
        }
      ],
      "id": "70722b57a9bd13193593b37f53242936d94431cc"
    },
    {
      "type": "commit",
      "attributes": [
        {
          "name": "message",
          "value": "fix(ats): Ensure directory exists before attempting to remove old files (#290)",
          "time": "2024-10-22T23:09:24Z"
        },
        {
          "name": "description",
          "value": "- Added a check to verify if the directory exists in  before attempting to list its contents.\r\n- If the directory does not exist, it is created to prevent errors during file removal.\r\n\r\nCo-authored-by: abdulkhalek <abdulkhalek@localhost.localdomain>",
          "time": "2024-10-22T23:09:24Z"
        },
        {
          "name": "to",
          "value": "['Resume-Matcher:(HEAD detached at 004b8a0)', 'Resume-Matcher:main']",
          "time": "2024-10-22T23:09:24Z"
        }
      ],
      "relationships": [
        {
          "objectId": "run_first.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "0b39f8c616f8cfb149572a3f15e470b313415271",
          "qualifier": "is-child-of"
        },
        {
          "objectId": "0.7972462039072162",
          "qualifier": "commit_mi"
        },
        {
          "objectId": "Abdulkhalek Muhammad",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "0.2976923076923077",
          "qualifier": "commit_pylint"
        }
      ],
      "id": "973e3674daab1ccb6dfbd94d5b13c131f8a258bc"
    },
    {
      "type": "commit",
      "attributes": [
        {
          "name": "message",
          "value": "#272 creates Processed folder (#287)",
          "time": "2024-10-22T23:09:51Z"
        },
        {
          "name": "description",
          "value": "",
          "time": "2024-10-22T23:09:51Z"
        },
        {
          "name": "to",
          "value": "['Resume-Matcher:(HEAD detached at 004b8a0)', 'Resume-Matcher:main']",
          "time": "2024-10-22T23:09:51Z"
        }
      ],
      "relationships": [
        {
          "objectId": "run_first.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "973e3674daab1ccb6dfbd94d5b13c131f8a258bc",
          "qualifier": "is-child-of"
        },
        {
          "objectId": "0.796476079338563",
          "qualifier": "commit_mi"
        },
        {
          "objectId": "Hemanth",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "0.29794871794871797",
          "qualifier": "commit_pylint"
        }
      ],
      "id": "2e426346ad523ec9af6dbf75a1d74be30d3908ca"
    },
    {
      "type": "commit",
      "attributes": [
        {
          "name": "message",
          "value": "Update streamlit_app.py",
          "time": "2025-01-08T11:35:24Z"
        },
        {
          "name": "description",
          "value": "",
          "time": "2025-01-08T11:35:24Z"
        },
        {
          "name": "to",
          "value": "['Resume-Matcher:(HEAD detached at 004b8a0)', 'Resume-Matcher:main']",
          "time": "2025-01-08T11:35:24Z"
        }
      ],
      "relationships": [
        {
          "objectId": "streamlit_app.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "f53791888d7d31ee14716e590dc49bc33b7d49cb",
          "qualifier": "is-child-of"
        },
        {
          "objectId": "0.796476079338563",
          "qualifier": "commit_mi"
        },
        {
          "objectId": "Zadkiel AHARONIAN",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "0.29794871794871797",
          "qualifier": "commit_pylint"
        }
      ],
      "id": "731201ab4fd1c4ff30b0010460f9979ab5505a29"
    },
    {
      "type": "commit",
      "attributes": [
        {
          "name": "message",
          "value": "Update streamlit_interactive.py",
          "time": "2025-01-08T11:36:47Z"
        },
        {
          "name": "description",
          "value": "",
          "time": "2025-01-08T11:36:47Z"
        },
        {
          "name": "to",
          "value": "['Resume-Matcher:(HEAD detached at 004b8a0)', 'Resume-Matcher:main']",
          "time": "2025-01-08T11:36:47Z"
        }
      ],
      "relationships": [
        {
          "objectId": "streamlit_interactive.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "731201ab4fd1c4ff30b0010460f9979ab5505a29",
          "qualifier": "is-child-of"
        },
        {
          "objectId": "0.796476079338563",
          "qualifier": "commit_mi"
        },
        {
          "objectId": "Zadkiel AHARONIAN",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "0.29794871794871797",
          "qualifier": "commit_pylint"
        }
      ],
      "id": "88f14b8b121337a82c5c70d68e03d28bb3ddac4d"
    },
    {
      "type": "commit",
      "attributes": [
        {
          "name": "message",
          "value": "Update streamlit_second.py",
          "time": "2025-01-08T11:37:33Z"
        },
        {
          "name": "description",
          "value": "",
          "time": "2025-01-08T11:37:33Z"
        },
        {
          "name": "to",
          "value": "['Resume-Matcher:(HEAD detached at 004b8a0)', 'Resume-Matcher:main']",
          "time": "2025-01-08T11:37:33Z"
        }
      ],
      "relationships": [
        {
          "objectId": "streamlit_second.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "88f14b8b121337a82c5c70d68e03d28bb3ddac4d",
          "qualifier": "is-child-of"
        },
        {
          "objectId": "0.7964444013792806",
          "qualifier": "commit_mi"
        },
        {
          "objectId": "Zadkiel AHARONIAN",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "0.29817948717948717",
          "qualifier": "commit_pylint"
        }
      ],
      "id": "7e60d1a1fae2b8387a90c7474209a61e83503376"
    },
    {
      "type": "commit",
      "attributes": [
        {
          "name": "message",
          "value": "code cleanup",
          "time": "2025-04-09T17:15:52Z"
        },
        {
          "name": "description",
          "value": "",
          "time": "2025-04-09T17:15:52Z"
        },
        {
          "name": "to",
          "value": "['Resume-Matcher:(HEAD detached at fc46d27)', 'Resume-Matcher:main']",
          "time": "2025-04-09T17:15:52Z"
        }
      ],
      "relationships": [
        {
          "objectId": "Assets/img/Resume_Matcher_Gif.gif",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Assets/img/Resume_Matcher_GitHub_Banner.jpg",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Assets/img/Resume_Matcher_GitHub_Banner.png",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Assets/img/backend_fastapi_demo.gif",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Assets/img/favicon.ico",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Assets/img/header.png",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Assets/img/header_image.png",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Assets/img/quadrant_cloud.png",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Assets/img/webapp_demo.gif",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/JobDescription/job_desc_front_end_engineer.pdf",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/JobDescription/job_desc_full_stack_engineer.pdf",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/JobDescription/job_desc_java_developer.pdf",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/JobDescription/job_desc_product_manager.pdf",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/alfred_pennyworth_pm.pdf",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/barry_allen_fe.pdf",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/bruce_wayne_fullstack.pdf",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/harvey_dent_mle.pdf",
          "qualifier": "aggregates"
        },
        {
          "objectId": "Data/Resumes/john_doe.pdf",
          "qualifier": "aggregates"
        },
        {
          "objectId": "README.md",
          "qualifier": "aggregates"
        },
        {
          "objectId": "UI-Mockup/Footer UI Mockup.png",
          "qualifier": "aggregates"
        },
        {
          "objectId": "UI-Mockup/mockup_1.1.png",
          "qualifier": "aggregates"
        },
        {
          "objectId": "__init__.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "img.png",
          "qualifier": "aggregates"
        },
        {
          "objectId": "img_1.png",
          "qualifier": "aggregates"
        },
        {
          "objectId": "img_2.png",
          "qualifier": "aggregates"
        },
        {
          "objectId": "resume_matcher/__init__.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "resume_matcher/dataextractor/__init__.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "resume_matcher/scripts/__init__.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "004b8a0c15027431b453cfe10323e349481e8aaa",
          "qualifier": "is-child-of"
        },
        {
          "objectId": "0",
          "qualifier": "commit_mi"
        },
        {
          "objectId": "srbhr",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "0",
          "qualifier": "commit_pylint"
        }
      ],
      "id": "ff4d7e9f78f7a74538d3ade7e850f7416a770ce9"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "app/api/__init__.py",
          "time": "2025-04-09T17:22:50Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2025-04-09T17:22:50Z"
        },
        {
          "name": "theta_1",
          "value": "0",
          "time": "2025-04-09T17:22:50Z"
        },
        {
          "name": "theta_2",
          "value": "0",
          "time": "2025-04-09T17:22:50Z"
        },
        {
          "name": "N_1",
          "value": "0",
          "time": "2025-04-09T17:22:50Z"
        },
        {
          "name": "N_2",
          "value": "0",
          "time": "2025-04-09T17:22:50Z"
        },
        {
          "name": "loc",
          "value": "1",
          "time": "2025-04-09T17:22:50Z"
        },
        {
          "name": "lloc",
          "value": "0",
          "time": "2025-04-09T17:22:50Z"
        },
        {
          "name": "sloc",
          "value": "0",
          "time": "2025-04-09T17:22:50Z"
        },
        {
          "name": "cloc",
          "value": "1",
          "time": "2025-04-09T17:22:50Z"
        },
        {
          "name": "dloc",
          "value": "0",
          "time": "2025-04-09T17:22:50Z"
        },
        {
          "name": "blank_lines",
          "value": "0",
          "time": "2025-04-09T17:22:50Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2025-04-09T17:22:50Z"
        },
        {
          "name": "lloc",
          "value": "1",
          "time": "2025-04-09T19:16:14Z"
        },
        {
          "name": "sloc",
          "value": "1",
          "time": "2025-04-09T19:16:14Z"
        },
        {
          "name": "cloc",
          "value": "0",
          "time": "2025-04-09T19:16:14Z"
        },
        {
          "name": "loc",
          "value": "3",
          "time": "2025-04-15T11:38:57Z"
        },
        {
          "name": "lloc",
          "value": "3",
          "time": "2025-04-15T11:38:57Z"
        },
        {
          "name": "sloc",
          "value": "3",
          "time": "2025-04-15T11:38:57Z"
        },
        {
          "name": "loc",
          "value": "5",
          "time": "2025-04-19T16:32:45Z"
        },
        {
          "name": "lloc",
          "value": "4",
          "time": "2025-04-19T16:32:45Z"
        },
        {
          "name": "sloc",
          "value": "4",
          "time": "2025-04-19T16:32:45Z"
        },
        {
          "name": "blank_lines",
          "value": "1",
          "time": "2025-04-19T16:32:45Z"
        }
      ],
      "relationships": [
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "282aff8daa3dd6e509ea6592c2eef87376801ef7",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "app/api/__init__.py"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "app/api/v1/__init__.py",
          "time": "2025-04-09T17:22:50Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2025-04-09T17:22:50Z"
        },
        {
          "name": "theta_1",
          "value": "0",
          "time": "2025-04-09T17:22:50Z"
        },
        {
          "name": "theta_2",
          "value": "0",
          "time": "2025-04-09T17:22:50Z"
        },
        {
          "name": "N_1",
          "value": "0",
          "time": "2025-04-09T17:22:50Z"
        },
        {
          "name": "N_2",
          "value": "0",
          "time": "2025-04-09T17:22:50Z"
        },
        {
          "name": "loc",
          "value": "1",
          "time": "2025-04-09T17:22:50Z"
        },
        {
          "name": "lloc",
          "value": "0",
          "time": "2025-04-09T17:22:50Z"
        },
        {
          "name": "sloc",
          "value": "0",
          "time": "2025-04-09T17:22:50Z"
        },
        {
          "name": "cloc",
          "value": "1",
          "time": "2025-04-09T17:22:50Z"
        },
        {
          "name": "dloc",
          "value": "0",
          "time": "2025-04-09T17:22:50Z"
        },
        {
          "name": "blank_lines",
          "value": "0",
          "time": "2025-04-09T17:22:50Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2025-04-09T17:22:50Z"
        }
      ],
      "relationships": [
        {
          "objectId": "rahulsingh237",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "cebefe928fd23e0461fcf998dca749f2aec25d8c",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "app/api/v1/__init__.py"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "app/base.py",
          "time": "2025-04-09T17:22:50Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2025-04-09T17:22:50Z"
        },
        {
          "name": "theta_1",
          "value": "0",
          "time": "2025-04-09T17:22:50Z"
        },
        {
          "name": "theta_2",
          "value": "0",
          "time": "2025-04-09T17:22:50Z"
        },
        {
          "name": "N_1",
          "value": "0",
          "time": "2025-04-09T17:22:50Z"
        },
        {
          "name": "N_2",
          "value": "0",
          "time": "2025-04-09T17:22:50Z"
        },
        {
          "name": "loc",
          "value": "35",
          "time": "2025-04-09T17:22:50Z"
        },
        {
          "name": "lloc",
          "value": "19",
          "time": "2025-04-09T17:22:50Z"
        },
        {
          "name": "sloc",
          "value": "29",
          "time": "2025-04-09T17:22:50Z"
        },
        {
          "name": "cloc",
          "value": "0",
          "time": "2025-04-09T17:22:50Z"
        },
        {
          "name": "dloc",
          "value": "0",
          "time": "2025-04-09T17:22:50Z"
        },
        {
          "name": "blank_lines",
          "value": "6",
          "time": "2025-04-09T17:22:50Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2025-04-09T17:22:50Z"
        },
        {
          "name": "loc",
          "value": "40",
          "time": "2025-04-15T11:38:57Z"
        },
        {
          "name": "lloc",
          "value": "23",
          "time": "2025-04-15T11:38:57Z"
        },
        {
          "name": "sloc",
          "value": "33",
          "time": "2025-04-15T11:38:57Z"
        },
        {
          "name": "blank_lines",
          "value": "7",
          "time": "2025-04-15T11:38:57Z"
        },
        {
          "name": "loc",
          "value": "53",
          "time": "2025-04-19T16:32:36Z"
        },
        {
          "name": "sloc",
          "value": "45",
          "time": "2025-04-19T16:32:36Z"
        },
        {
          "name": "blank_lines",
          "value": "8",
          "time": "2025-04-19T16:32:36Z"
        },
        {
          "name": "loc",
          "value": "59",
          "time": "2025-04-24T17:41:52Z"
        },
        {
          "name": "lloc",
          "value": "25",
          "time": "2025-04-24T17:41:52Z"
        },
        {
          "name": "sloc",
          "value": "47",
          "time": "2025-04-24T17:41:52Z"
        },
        {
          "name": "dloc",
          "value": "3",
          "time": "2025-04-24T17:41:52Z"
        },
        {
          "name": "blank_lines",
          "value": "9",
          "time": "2025-04-24T17:41:52Z"
        },
        {
          "name": "loc",
          "value": "69",
          "time": "2025-04-26T17:13:49Z"
        },
        {
          "name": "lloc",
          "value": "31",
          "time": "2025-04-26T17:13:49Z"
        },
        {
          "name": "sloc",
          "value": "54",
          "time": "2025-04-26T17:13:49Z"
        },
        {
          "name": "blank_lines",
          "value": "12",
          "time": "2025-04-26T17:13:49Z"
        }
      ],
      "relationships": [
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "282aff8daa3dd6e509ea6592c2eef87376801ef7",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "app/base.py"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "app/core/config.py",
          "time": "2025-04-09T17:22:50Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2025-04-09T17:22:50Z"
        },
        {
          "name": "theta_1",
          "value": "0",
          "time": "2025-04-09T17:22:50Z"
        },
        {
          "name": "theta_2",
          "value": "0",
          "time": "2025-04-09T17:22:50Z"
        },
        {
          "name": "N_1",
          "value": "0",
          "time": "2025-04-09T17:22:50Z"
        },
        {
          "name": "N_2",
          "value": "0",
          "time": "2025-04-09T17:22:50Z"
        },
        {
          "name": "loc",
          "value": "14",
          "time": "2025-04-09T17:22:50Z"
        },
        {
          "name": "lloc",
          "value": "13",
          "time": "2025-04-09T17:22:50Z"
        },
        {
          "name": "sloc",
          "value": "11",
          "time": "2025-04-09T17:22:50Z"
        },
        {
          "name": "cloc",
          "value": "0",
          "time": "2025-04-09T17:22:50Z"
        },
        {
          "name": "dloc",
          "value": "0",
          "time": "2025-04-09T17:22:50Z"
        },
        {
          "name": "blank_lines",
          "value": "3",
          "time": "2025-04-09T17:22:50Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2025-04-09T17:22:50Z"
        },
        {
          "name": "loc",
          "value": "16",
          "time": "2025-04-09T19:16:14Z"
        },
        {
          "name": "lloc",
          "value": "19",
          "time": "2025-04-09T19:16:14Z"
        },
        {
          "name": "sloc",
          "value": "13",
          "time": "2025-04-09T19:16:14Z"
        },
        {
          "name": "loc",
          "value": "18",
          "time": "2025-04-19T16:32:36Z"
        },
        {
          "name": "blank_lines",
          "value": "5",
          "time": "2025-04-19T16:32:36Z"
        },
        {
          "name": "loc",
          "value": "58",
          "time": "2025-04-24T17:41:52Z"
        },
        {
          "name": "lloc",
          "value": "37",
          "time": "2025-04-24T17:41:52Z"
        },
        {
          "name": "sloc",
          "value": "36",
          "time": "2025-04-24T17:41:52Z"
        },
        {
          "name": "dloc",
          "value": "7",
          "time": "2025-04-24T17:41:52Z"
        },
        {
          "name": "blank_lines",
          "value": "15",
          "time": "2025-04-24T17:41:52Z"
        },
        {
          "name": "loc",
          "value": "60",
          "time": "2025-04-26T17:13:49Z"
        },
        {
          "name": "lloc",
          "value": "41",
          "time": "2025-04-26T17:13:49Z"
        },
        {
          "name": "sloc",
          "value": "38",
          "time": "2025-04-26T17:13:49Z"
        },
        {
          "name": "pylint_score",
          "value": "0.077",
          "time": "2025-04-09T19:16:14Z"
        },
        {
          "name": "pylint_score",
          "value": "0.154",
          "time": "2025-04-09T19:32:20Z"
        },
        {
          "name": "pylint_score",
          "value": "0.621",
          "time": "2025-04-24T17:41:52Z"
        },
        {
          "name": "pylint_score",
          "value": "0.645",
          "time": "2025-04-26T17:13:49Z"
        }
      ],
      "relationships": [
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "282aff8daa3dd6e509ea6592c2eef87376801ef7",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "app/core/config.py"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "app/core/database.py",
          "time": "2025-04-09T17:22:50Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2025-04-09T17:22:50Z"
        },
        {
          "name": "theta_1",
          "value": "1",
          "time": "2025-04-09T17:22:50Z"
        },
        {
          "name": "theta_2",
          "value": "2",
          "time": "2025-04-09T17:22:50Z"
        },
        {
          "name": "N_1",
          "value": "3",
          "time": "2025-04-09T17:22:50Z"
        },
        {
          "name": "N_2",
          "value": "3",
          "time": "2025-04-09T17:22:50Z"
        },
        {
          "name": "loc",
          "value": "24",
          "time": "2025-04-09T17:22:50Z"
        },
        {
          "name": "lloc",
          "value": "20",
          "time": "2025-04-09T17:22:50Z"
        },
        {
          "name": "sloc",
          "value": "19",
          "time": "2025-04-09T17:22:50Z"
        },
        {
          "name": "cloc",
          "value": "0",
          "time": "2025-04-09T17:22:50Z"
        },
        {
          "name": "dloc",
          "value": "0",
          "time": "2025-04-09T17:22:50Z"
        },
        {
          "name": "blank_lines",
          "value": "5",
          "time": "2025-04-09T17:22:50Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2025-04-09T17:22:50Z"
        },
        {
          "name": "lloc",
          "value": "21",
          "time": "2025-04-09T19:16:14Z"
        },
        {
          "name": "loc",
          "value": "26",
          "time": "2025-04-19T16:32:36Z"
        },
        {
          "name": "sloc",
          "value": "21",
          "time": "2025-04-19T16:32:36Z"
        },
        {
          "name": "N_1",
          "value": "1",
          "time": "2025-04-26T17:13:49Z"
        },
        {
          "name": "N_2",
          "value": "2",
          "time": "2025-04-26T17:13:49Z"
        },
        {
          "name": "loc",
          "value": "132",
          "time": "2025-04-26T17:13:49Z"
        },
        {
          "name": "lloc",
          "value": "72",
          "time": "2025-04-26T17:13:49Z"
        },
        {
          "name": "sloc",
          "value": "86",
          "time": "2025-04-26T17:13:49Z"
        },
        {
          "name": "cloc",
          "value": "3",
          "time": "2025-04-26T17:13:49Z"
        },
        {
          "name": "dloc",
          "value": "11",
          "time": "2025-04-26T17:13:49Z"
        },
        {
          "name": "blank_lines",
          "value": "29",
          "time": "2025-04-26T17:13:49Z"
        },
        {
          "name": "pylint_score",
          "value": "0.158",
          "time": "2025-04-09T19:16:14Z"
        },
        {
          "name": "pylint_score",
          "value": "0.211",
          "time": "2025-04-15T11:38:57Z"
        },
        {
          "name": "pylint_score",
          "value": "0.263",
          "time": "2025-04-19T16:32:36Z"
        },
        {
          "name": "pylint_score",
          "value": "0.05500000000000001",
          "time": "2025-04-26T17:13:49Z"
        }
      ],
      "relationships": [
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "282aff8daa3dd6e509ea6592c2eef87376801ef7",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "app/core/database.py"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "app/main.py",
          "time": "2025-04-09T17:22:50Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2025-04-09T17:22:50Z"
        },
        {
          "name": "theta_1",
          "value": "1",
          "time": "2025-04-09T17:22:50Z"
        },
        {
          "name": "theta_2",
          "value": "2",
          "time": "2025-04-09T17:22:50Z"
        },
        {
          "name": "N_1",
          "value": "1",
          "time": "2025-04-09T17:22:50Z"
        },
        {
          "name": "N_2",
          "value": "2",
          "time": "2025-04-09T17:22:50Z"
        },
        {
          "name": "loc",
          "value": "7",
          "time": "2025-04-09T17:22:50Z"
        },
        {
          "name": "lloc",
          "value": "5",
          "time": "2025-04-09T17:22:50Z"
        },
        {
          "name": "sloc",
          "value": "5",
          "time": "2025-04-09T17:22:50Z"
        },
        {
          "name": "cloc",
          "value": "0",
          "time": "2025-04-09T17:22:50Z"
        },
        {
          "name": "dloc",
          "value": "0",
          "time": "2025-04-09T17:22:50Z"
        },
        {
          "name": "blank_lines",
          "value": "2",
          "time": "2025-04-09T17:22:50Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2025-04-09T17:22:50Z"
        }
      ],
      "relationships": [
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "282aff8daa3dd6e509ea6592c2eef87376801ef7",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "app/main.py"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "app/models/__init__.py",
          "time": "2025-04-09T17:22:50Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2025-04-09T17:22:50Z"
        },
        {
          "name": "theta_1",
          "value": "0",
          "time": "2025-04-09T17:22:50Z"
        },
        {
          "name": "theta_2",
          "value": "0",
          "time": "2025-04-09T17:22:50Z"
        },
        {
          "name": "N_1",
          "value": "0",
          "time": "2025-04-09T17:22:50Z"
        },
        {
          "name": "N_2",
          "value": "0",
          "time": "2025-04-09T17:22:50Z"
        },
        {
          "name": "loc",
          "value": "5",
          "time": "2025-04-09T17:22:50Z"
        },
        {
          "name": "lloc",
          "value": "5",
          "time": "2025-04-09T17:22:50Z"
        },
        {
          "name": "sloc",
          "value": "5",
          "time": "2025-04-09T17:22:50Z"
        },
        {
          "name": "cloc",
          "value": "0",
          "time": "2025-04-09T17:22:50Z"
        },
        {
          "name": "dloc",
          "value": "0",
          "time": "2025-04-09T17:22:50Z"
        },
        {
          "name": "blank_lines",
          "value": "0",
          "time": "2025-04-09T17:22:50Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2025-04-09T17:22:50Z"
        },
        {
          "name": "loc",
          "value": "14",
          "time": "2025-04-19T16:32:36Z"
        },
        {
          "name": "lloc",
          "value": "6",
          "time": "2025-04-19T16:32:36Z"
        },
        {
          "name": "sloc",
          "value": "13",
          "time": "2025-04-19T16:32:36Z"
        },
        {
          "name": "blank_lines",
          "value": "1",
          "time": "2025-04-19T16:32:36Z"
        },
        {
          "name": "loc",
          "value": "15",
          "time": "2025-04-25T18:12:52Z"
        },
        {
          "name": "sloc",
          "value": "14",
          "time": "2025-04-25T18:12:52Z"
        }
      ],
      "relationships": [
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "a8a0935bb1bc93441fd8153cbb8960a0e79a400a",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "app/models/__init__.py"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "app/models/association.py",
          "time": "2025-04-09T17:22:50Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2025-04-09T17:22:50Z"
        },
        {
          "name": "theta_1",
          "value": "0",
          "time": "2025-04-09T17:22:50Z"
        },
        {
          "name": "theta_2",
          "value": "0",
          "time": "2025-04-09T17:22:50Z"
        },
        {
          "name": "N_1",
          "value": "0",
          "time": "2025-04-09T17:22:50Z"
        },
        {
          "name": "N_2",
          "value": "0",
          "time": "2025-04-09T17:22:50Z"
        },
        {
          "name": "loc",
          "value": "10",
          "time": "2025-04-09T17:22:50Z"
        },
        {
          "name": "lloc",
          "value": "3",
          "time": "2025-04-09T17:22:50Z"
        },
        {
          "name": "sloc",
          "value": "8",
          "time": "2025-04-09T17:22:50Z"
        },
        {
          "name": "cloc",
          "value": "0",
          "time": "2025-04-09T17:22:50Z"
        },
        {
          "name": "dloc",
          "value": "0",
          "time": "2025-04-09T17:22:50Z"
        },
        {
          "name": "blank_lines",
          "value": "2",
          "time": "2025-04-09T17:22:50Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2025-04-09T17:22:50Z"
        },
        {
          "name": "loc",
          "value": "20",
          "time": "2025-04-19T18:16:49Z"
        },
        {
          "name": "sloc",
          "value": "18",
          "time": "2025-04-19T18:16:49Z"
        }
      ],
      "relationships": [
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "fa2c02df0acf2d4fb807161b683970c2c9d38d26",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "app/models/association.py"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "app/models/base.py",
          "time": "2025-04-09T17:22:50Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2025-04-09T17:22:50Z"
        },
        {
          "name": "theta_1",
          "value": "0",
          "time": "2025-04-09T17:22:50Z"
        },
        {
          "name": "theta_2",
          "value": "0",
          "time": "2025-04-09T17:22:50Z"
        },
        {
          "name": "N_1",
          "value": "0",
          "time": "2025-04-09T17:22:50Z"
        },
        {
          "name": "N_2",
          "value": "0",
          "time": "2025-04-09T17:22:50Z"
        },
        {
          "name": "loc",
          "value": "4",
          "time": "2025-04-09T17:22:50Z"
        },
        {
          "name": "lloc",
          "value": "3",
          "time": "2025-04-09T17:22:50Z"
        },
        {
          "name": "sloc",
          "value": "3",
          "time": "2025-04-09T17:22:50Z"
        },
        {
          "name": "cloc",
          "value": "0",
          "time": "2025-04-09T17:22:50Z"
        },
        {
          "name": "dloc",
          "value": "0",
          "time": "2025-04-09T17:22:50Z"
        },
        {
          "name": "blank_lines",
          "value": "1",
          "time": "2025-04-09T17:22:50Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2025-04-09T17:22:50Z"
        },
        {
          "name": "loc",
          "value": "5",
          "time": "2025-04-17T19:40:00Z"
        },
        {
          "name": "blank_lines",
          "value": "2",
          "time": "2025-04-17T19:40:00Z"
        }
      ],
      "relationships": [
        {
          "objectId": "srbhr",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "3670c6ce485967fd099a5862a5d7eca0ab5bde01",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "app/models/base.py"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "app/models/job.py",
          "time": "2025-04-09T17:22:50Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2025-04-09T17:22:50Z"
        },
        {
          "name": "theta_1",
          "value": "0",
          "time": "2025-04-09T17:22:50Z"
        },
        {
          "name": "theta_2",
          "value": "0",
          "time": "2025-04-09T17:22:50Z"
        },
        {
          "name": "N_1",
          "value": "0",
          "time": "2025-04-09T17:22:50Z"
        },
        {
          "name": "N_2",
          "value": "0",
          "time": "2025-04-09T17:22:50Z"
        },
        {
          "name": "loc",
          "value": "30",
          "time": "2025-04-09T17:22:50Z"
        },
        {
          "name": "lloc",
          "value": "22",
          "time": "2025-04-09T17:22:50Z"
        },
        {
          "name": "sloc",
          "value": "22",
          "time": "2025-04-09T17:22:50Z"
        },
        {
          "name": "cloc",
          "value": "3",
          "time": "2025-04-09T17:22:50Z"
        },
        {
          "name": "dloc",
          "value": "0",
          "time": "2025-04-09T17:22:50Z"
        },
        {
          "name": "blank_lines",
          "value": "6",
          "time": "2025-04-09T17:22:50Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2025-04-09T17:22:50Z"
        },
        {
          "name": "loc",
          "value": "31",
          "time": "2025-04-17T19:40:00Z"
        },
        {
          "name": "sloc",
          "value": "24",
          "time": "2025-04-17T19:40:00Z"
        },
        {
          "name": "blank_lines",
          "value": "5",
          "time": "2025-04-17T19:40:00Z"
        },
        {
          "name": "loc",
          "value": "52",
          "time": "2025-04-19T18:16:49Z"
        },
        {
          "name": "lloc",
          "value": "33",
          "time": "2025-04-19T18:16:49Z"
        },
        {
          "name": "sloc",
          "value": "41",
          "time": "2025-04-19T18:16:49Z"
        },
        {
          "name": "blank_lines",
          "value": "9",
          "time": "2025-04-19T18:16:49Z"
        },
        {
          "name": "loc",
          "value": "54",
          "time": "2025-04-20T07:14:20Z"
        },
        {
          "name": "lloc",
          "value": "29",
          "time": "2025-04-20T07:14:20Z"
        },
        {
          "name": "sloc",
          "value": "31",
          "time": "2025-04-20T07:14:20Z"
        },
        {
          "name": "cloc",
          "value": "14",
          "time": "2025-04-20T07:14:20Z"
        },
        {
          "name": "blank_lines",
          "value": "10",
          "time": "2025-04-20T07:14:20Z"
        },
        {
          "name": "loc",
          "value": "59",
          "time": "2025-04-20T08:57:26Z"
        },
        {
          "name": "lloc",
          "value": "34",
          "time": "2025-04-20T08:57:26Z"
        },
        {
          "name": "sloc",
          "value": "47",
          "time": "2025-04-20T08:57:26Z"
        },
        {
          "name": "cloc",
          "value": "2",
          "time": "2025-04-20T08:57:26Z"
        },
        {
          "name": "lloc",
          "value": "32",
          "time": "2025-04-25T07:37:29Z"
        },
        {
          "name": "sloc",
          "value": "45",
          "time": "2025-04-25T07:37:29Z"
        },
        {
          "name": "cloc",
          "value": "4",
          "time": "2025-04-25T07:37:29Z"
        },
        {
          "name": "loc",
          "value": "67",
          "time": "2025-04-26T17:13:49Z"
        },
        {
          "name": "lloc",
          "value": "31",
          "time": "2025-04-26T17:13:49Z"
        },
        {
          "name": "sloc",
          "value": "52",
          "time": "2025-04-26T17:13:49Z"
        },
        {
          "name": "blank_lines",
          "value": "11",
          "time": "2025-04-26T17:13:49Z"
        },
        {
          "name": "pylint_score",
          "value": "0.032",
          "time": "2025-04-26T17:13:49Z"
        }
      ],
      "relationships": [
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "282aff8daa3dd6e509ea6592c2eef87376801ef7",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "app/models/job.py"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "app/models/resume.py",
          "time": "2025-04-09T17:22:50Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2025-04-09T17:22:50Z"
        },
        {
          "name": "theta_1",
          "value": "0",
          "time": "2025-04-09T17:22:50Z"
        },
        {
          "name": "theta_2",
          "value": "0",
          "time": "2025-04-09T17:22:50Z"
        },
        {
          "name": "N_1",
          "value": "0",
          "time": "2025-04-09T17:22:50Z"
        },
        {
          "name": "N_2",
          "value": "0",
          "time": "2025-04-09T17:22:50Z"
        },
        {
          "name": "loc",
          "value": "24",
          "time": "2025-04-09T17:22:50Z"
        },
        {
          "name": "lloc",
          "value": "19",
          "time": "2025-04-09T17:22:50Z"
        },
        {
          "name": "sloc",
          "value": "19",
          "time": "2025-04-09T17:22:50Z"
        },
        {
          "name": "cloc",
          "value": "1",
          "time": "2025-04-09T17:22:50Z"
        },
        {
          "name": "dloc",
          "value": "0",
          "time": "2025-04-09T17:22:50Z"
        },
        {
          "name": "blank_lines",
          "value": "5",
          "time": "2025-04-09T17:22:50Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2025-04-09T17:22:50Z"
        },
        {
          "name": "loc",
          "value": "33",
          "time": "2025-04-15T11:38:57Z"
        },
        {
          "name": "lloc",
          "value": "25",
          "time": "2025-04-15T11:38:57Z"
        },
        {
          "name": "sloc",
          "value": "25",
          "time": "2025-04-15T11:38:57Z"
        },
        {
          "name": "blank_lines",
          "value": "8",
          "time": "2025-04-15T11:38:57Z"
        },
        {
          "name": "loc",
          "value": "35",
          "time": "2025-04-17T19:40:07Z"
        },
        {
          "name": "sloc",
          "value": "27",
          "time": "2025-04-17T19:40:07Z"
        },
        {
          "name": "loc",
          "value": "42",
          "time": "2025-04-19T18:16:49Z"
        },
        {
          "name": "lloc",
          "value": "27",
          "time": "2025-04-19T18:16:49Z"
        },
        {
          "name": "sloc",
          "value": "33",
          "time": "2025-04-19T18:16:49Z"
        },
        {
          "name": "blank_lines",
          "value": "9",
          "time": "2025-04-19T18:16:49Z"
        },
        {
          "name": "loc",
          "value": "44",
          "time": "2025-04-20T07:14:20Z"
        },
        {
          "name": "lloc",
          "value": "23",
          "time": "2025-04-20T07:14:20Z"
        },
        {
          "name": "sloc",
          "value": "23",
          "time": "2025-04-20T07:14:20Z"
        },
        {
          "name": "cloc",
          "value": "12",
          "time": "2025-04-20T07:14:20Z"
        },
        {
          "name": "blank_lines",
          "value": "10",
          "time": "2025-04-20T07:14:20Z"
        },
        {
          "name": "loc",
          "value": "49",
          "time": "2025-04-20T08:57:26Z"
        },
        {
          "name": "lloc",
          "value": "28",
          "time": "2025-04-20T08:57:26Z"
        },
        {
          "name": "sloc",
          "value": "39",
          "time": "2025-04-20T08:57:26Z"
        },
        {
          "name": "cloc",
          "value": "0",
          "time": "2025-04-20T08:57:26Z"
        },
        {
          "name": "lloc",
          "value": "26",
          "time": "2025-04-25T07:37:29Z"
        },
        {
          "name": "sloc",
          "value": "37",
          "time": "2025-04-25T07:37:29Z"
        },
        {
          "name": "cloc",
          "value": "2",
          "time": "2025-04-25T07:37:29Z"
        },
        {
          "name": "loc",
          "value": "62",
          "time": "2025-04-26T17:13:49Z"
        },
        {
          "name": "sloc",
          "value": "49",
          "time": "2025-04-26T17:13:49Z"
        },
        {
          "name": "blank_lines",
          "value": "11",
          "time": "2025-04-26T17:13:49Z"
        }
      ],
      "relationships": [
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "282aff8daa3dd6e509ea6592c2eef87376801ef7",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "app/models/resume.py"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "app/models/user.py",
          "time": "2025-04-09T17:22:50Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2025-04-09T17:22:50Z"
        },
        {
          "name": "theta_1",
          "value": "0",
          "time": "2025-04-09T17:22:50Z"
        },
        {
          "name": "theta_2",
          "value": "0",
          "time": "2025-04-09T17:22:50Z"
        },
        {
          "name": "N_1",
          "value": "0",
          "time": "2025-04-09T17:22:50Z"
        },
        {
          "name": "N_2",
          "value": "0",
          "time": "2025-04-09T17:22:50Z"
        },
        {
          "name": "loc",
          "value": "14",
          "time": "2025-04-09T17:22:50Z"
        },
        {
          "name": "lloc",
          "value": "10",
          "time": "2025-04-09T17:22:50Z"
        },
        {
          "name": "sloc",
          "value": "10",
          "time": "2025-04-09T17:22:50Z"
        },
        {
          "name": "cloc",
          "value": "0",
          "time": "2025-04-09T17:22:50Z"
        },
        {
          "name": "dloc",
          "value": "0",
          "time": "2025-04-09T17:22:50Z"
        },
        {
          "name": "blank_lines",
          "value": "4",
          "time": "2025-04-09T17:22:50Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2025-04-09T17:22:50Z"
        },
        {
          "name": "loc",
          "value": "15",
          "time": "2025-04-19T16:32:36Z"
        },
        {
          "name": "blank_lines",
          "value": "5",
          "time": "2025-04-19T16:32:36Z"
        },
        {
          "name": "loc",
          "value": "20",
          "time": "2025-04-20T07:14:20Z"
        },
        {
          "name": "lloc",
          "value": "7",
          "time": "2025-04-20T07:14:20Z"
        },
        {
          "name": "sloc",
          "value": "7",
          "time": "2025-04-20T07:14:20Z"
        },
        {
          "name": "cloc",
          "value": "8",
          "time": "2025-04-20T07:14:20Z"
        },
        {
          "name": "loc",
          "value": "19",
          "time": "2025-04-20T08:57:26Z"
        },
        {
          "name": "sloc",
          "value": "14",
          "time": "2025-04-20T08:57:26Z"
        },
        {
          "name": "cloc",
          "value": "7",
          "time": "2025-04-25T07:37:29Z"
        }
      ],
      "relationships": [
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "bc5004c96a45b00850aad311678665e7b7576427",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "app/models/user.py"
    },
    {
      "type": "commit",
      "attributes": [
        {
          "name": "message",
          "value": "ISSUE-133 | base code setup",
          "time": "2025-04-09T17:22:50Z"
        },
        {
          "name": "description",
          "value": "",
          "time": "2025-04-09T17:22:50Z"
        },
        {
          "name": "to",
          "value": "['Resume-Matcher:(HEAD detached at fc46d27)', 'Resume-Matcher:main']",
          "time": "2025-04-09T17:22:50Z"
        }
      ],
      "relationships": [
        {
          "objectId": "app/api/__init__.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/api/v1/__init__.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/base.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/core/config.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/core/database.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/main.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/models/__init__.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/models/association.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/models/base.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/models/job.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/models/resume.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/models/user.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "requirements.txt",
          "qualifier": "aggregates"
        },
        {
          "objectId": "ff4d7e9f78f7a74538d3ade7e850f7416a770ce9",
          "qualifier": "is-child-of"
        },
        {
          "objectId": "0.9529758665032504",
          "qualifier": "commit_mi"
        },
        {
          "objectId": "rahulsingh237",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "0.013166666666666667",
          "qualifier": "commit_pylint"
        }
      ],
      "id": "cebefe928fd23e0461fcf998dca749f2aec25d8c"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "app/api/router/health.py",
          "time": "2025-04-09T19:16:14Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2025-04-09T19:16:14Z"
        },
        {
          "name": "theta_1",
          "value": "1",
          "time": "2025-04-09T19:16:14Z"
        },
        {
          "name": "theta_2",
          "value": "2",
          "time": "2025-04-09T19:16:14Z"
        },
        {
          "name": "N_1",
          "value": "1",
          "time": "2025-04-09T19:16:14Z"
        },
        {
          "name": "N_2",
          "value": "2",
          "time": "2025-04-09T19:16:14Z"
        },
        {
          "name": "loc",
          "value": "18",
          "time": "2025-04-09T19:16:14Z"
        },
        {
          "name": "lloc",
          "value": "15",
          "time": "2025-04-09T19:16:14Z"
        },
        {
          "name": "sloc",
          "value": "13",
          "time": "2025-04-09T19:16:14Z"
        },
        {
          "name": "cloc",
          "value": "0",
          "time": "2025-04-09T19:16:14Z"
        },
        {
          "name": "dloc",
          "value": "3",
          "time": "2025-04-09T19:16:14Z"
        },
        {
          "name": "blank_lines",
          "value": "2",
          "time": "2025-04-09T19:16:14Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2025-04-09T19:16:14Z"
        },
        {
          "name": "loc",
          "value": "19",
          "time": "2025-04-19T16:32:36Z"
        },
        {
          "name": "blank_lines",
          "value": "3",
          "time": "2025-04-19T16:32:36Z"
        },
        {
          "name": "loc",
          "value": "20",
          "time": "2025-04-26T17:13:49Z"
        },
        {
          "name": "blank_lines",
          "value": "4",
          "time": "2025-04-26T17:13:49Z"
        }
      ],
      "relationships": [
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "aaca47af7534970c1d20e7b19a5ec493172e5a2d",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "app/api/router/health.py"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "app/utils/utils.py",
          "time": "2025-04-09T19:16:14Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2025-04-09T19:16:14Z"
        },
        {
          "name": "theta_1",
          "value": "0",
          "time": "2025-04-09T19:16:14Z"
        },
        {
          "name": "theta_2",
          "value": "0",
          "time": "2025-04-09T19:16:14Z"
        },
        {
          "name": "N_1",
          "value": "0",
          "time": "2025-04-09T19:16:14Z"
        },
        {
          "name": "N_2",
          "value": "0",
          "time": "2025-04-09T19:16:14Z"
        },
        {
          "name": "loc",
          "value": "11",
          "time": "2025-04-09T19:16:14Z"
        },
        {
          "name": "lloc",
          "value": "9",
          "time": "2025-04-09T19:16:14Z"
        },
        {
          "name": "sloc",
          "value": "9",
          "time": "2025-04-09T19:16:14Z"
        },
        {
          "name": "cloc",
          "value": "0",
          "time": "2025-04-09T19:16:14Z"
        },
        {
          "name": "dloc",
          "value": "0",
          "time": "2025-04-09T19:16:14Z"
        },
        {
          "name": "blank_lines",
          "value": "2",
          "time": "2025-04-09T19:16:14Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2025-04-09T19:16:14Z"
        }
      ],
      "relationships": [
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "12848699494a28f76c34982ef872a824fb32036d",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "app/utils/utils.py"
    },
    {
      "type": "commit",
      "attributes": [
        {
          "name": "message",
          "value": "ISSUE-133 | sqlite and working app",
          "time": "2025-04-09T19:16:14Z"
        },
        {
          "name": "description",
          "value": "",
          "time": "2025-04-09T19:16:14Z"
        },
        {
          "name": "to",
          "value": "['Resume-Matcher:(HEAD detached at fc46d27)', 'Resume-Matcher:main']",
          "time": "2025-04-09T19:16:14Z"
        }
      ],
      "relationships": [
        {
          "objectId": "app.db",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/api/__init__.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/api/router/health.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/base.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/core/config.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/core/database.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/models/__init__.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/models/association.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/models/job.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/utils/utils.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "e2156c2115b04eb91d445f5283482a8f81cec7bd",
          "qualifier": "is-child-of"
        },
        {
          "objectId": "0.9514154955981353",
          "qualifier": "commit_mi"
        },
        {
          "objectId": "rahulsingh237",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "0.018076923076923077",
          "qualifier": "commit_pylint"
        }
      ],
      "id": "f415013aeeac86ddd5fb97c7a8e39b3a77ba12ec"
    },
    {
      "type": "commit",
      "attributes": [
        {
          "name": "message",
          "value": "ISSUE-133 | models association hotfix",
          "time": "2025-04-09T19:32:20Z"
        },
        {
          "name": "description",
          "value": "",
          "time": "2025-04-09T19:32:20Z"
        },
        {
          "name": "to",
          "value": "['Resume-Matcher:(HEAD detached at fc46d27)', 'Resume-Matcher:main']",
          "time": "2025-04-09T19:32:20Z"
        }
      ],
      "relationships": [
        {
          "objectId": "app/api/__init__.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/api/router/health.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/core/config.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/main.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/models/__init__.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/models/association.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/models/base.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/models/job.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/models/resume.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/models/user.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "c8b0d00a5469a7702a3ce968c69e40535cfcfdb9",
          "qualifier": "is-child-of"
        },
        {
          "objectId": "0.9514154955981353",
          "qualifier": "commit_mi"
        },
        {
          "objectId": "rahulsingh237",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "0.024",
          "qualifier": "commit_pylint"
        }
      ],
      "id": "48d058d29c7b6db98e196832137c69cd61e98968"
    },
    {
      "type": "commit",
      "attributes": [
        {
          "name": "message",
          "value": "issue -133 | update config.py and requirements.txt",
          "time": "2025-04-13T16:20:31Z"
        },
        {
          "name": "description",
          "value": "",
          "time": "2025-04-13T16:20:31Z"
        },
        {
          "name": "to",
          "value": "['Resume-Matcher:(HEAD detached at fc46d27)', 'Resume-Matcher:main']",
          "time": "2025-04-13T16:20:31Z"
        }
      ],
      "relationships": [
        {
          "objectId": "app/core/config.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "requirements.txt",
          "qualifier": "aggregates"
        },
        {
          "objectId": "894985747aae8c72c989822c1acae3cca8ae3683",
          "qualifier": "is-child-of"
        },
        {
          "objectId": "0.9514154955981353",
          "qualifier": "commit_mi"
        },
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "0.024",
          "qualifier": "commit_pylint"
        }
      ],
      "id": "fd104cc26df1420ac2707e5db27f93cd950bb8ef"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "app/api/middleware.py",
          "time": "2025-04-15T11:38:57Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2025-04-15T11:38:57Z"
        },
        {
          "name": "theta_1",
          "value": "1",
          "time": "2025-04-15T11:38:57Z"
        },
        {
          "name": "theta_2",
          "value": "2",
          "time": "2025-04-15T11:38:57Z"
        },
        {
          "name": "N_1",
          "value": "1",
          "time": "2025-04-15T11:38:57Z"
        },
        {
          "name": "N_2",
          "value": "2",
          "time": "2025-04-15T11:38:57Z"
        },
        {
          "name": "loc",
          "value": "16",
          "time": "2025-04-15T11:38:57Z"
        },
        {
          "name": "lloc",
          "value": "11",
          "time": "2025-04-15T11:38:57Z"
        },
        {
          "name": "sloc",
          "value": "11",
          "time": "2025-04-15T11:38:57Z"
        },
        {
          "name": "cloc",
          "value": "1",
          "time": "2025-04-15T11:38:57Z"
        },
        {
          "name": "dloc",
          "value": "0",
          "time": "2025-04-15T11:38:57Z"
        },
        {
          "name": "blank_lines",
          "value": "4",
          "time": "2025-04-15T11:38:57Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2025-04-15T11:38:57Z"
        },
        {
          "name": "loc",
          "value": "17",
          "time": "2025-04-17T19:40:00Z"
        },
        {
          "name": "blank_lines",
          "value": "5",
          "time": "2025-04-17T19:40:00Z"
        }
      ],
      "relationships": [
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "282aff8daa3dd6e509ea6592c2eef87376801ef7",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "app/api/middleware.py"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "app/api/router/v1/__init__.py",
          "time": "2025-04-15T11:38:57Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2025-04-15T11:38:57Z"
        },
        {
          "name": "theta_1",
          "value": "0",
          "time": "2025-04-15T11:38:57Z"
        },
        {
          "name": "theta_2",
          "value": "0",
          "time": "2025-04-15T11:38:57Z"
        },
        {
          "name": "N_1",
          "value": "0",
          "time": "2025-04-15T11:38:57Z"
        },
        {
          "name": "N_2",
          "value": "0",
          "time": "2025-04-15T11:38:57Z"
        },
        {
          "name": "loc",
          "value": "5",
          "time": "2025-04-15T11:38:57Z"
        },
        {
          "name": "lloc",
          "value": "4",
          "time": "2025-04-15T11:38:57Z"
        },
        {
          "name": "sloc",
          "value": "4",
          "time": "2025-04-15T11:38:57Z"
        },
        {
          "name": "cloc",
          "value": "0",
          "time": "2025-04-15T11:38:57Z"
        },
        {
          "name": "dloc",
          "value": "0",
          "time": "2025-04-15T11:38:57Z"
        },
        {
          "name": "blank_lines",
          "value": "1",
          "time": "2025-04-15T11:38:57Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2025-04-15T11:38:57Z"
        },
        {
          "name": "loc",
          "value": "8",
          "time": "2025-04-19T16:32:45Z"
        },
        {
          "name": "lloc",
          "value": "5",
          "time": "2025-04-19T16:32:45Z"
        },
        {
          "name": "sloc",
          "value": "5",
          "time": "2025-04-19T16:32:45Z"
        },
        {
          "name": "blank_lines",
          "value": "3",
          "time": "2025-04-19T16:32:45Z"
        },
        {
          "name": "loc",
          "value": "10",
          "time": "2025-04-19T18:16:49Z"
        },
        {
          "name": "lloc",
          "value": "7",
          "time": "2025-04-19T18:16:49Z"
        },
        {
          "name": "sloc",
          "value": "7",
          "time": "2025-04-19T18:16:49Z"
        },
        {
          "name": "loc",
          "value": "11",
          "time": "2025-04-26T17:13:49Z"
        },
        {
          "name": "blank_lines",
          "value": "4",
          "time": "2025-04-26T17:13:49Z"
        }
      ],
      "relationships": [
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "282aff8daa3dd6e509ea6592c2eef87376801ef7",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "app/api/router/v1/__init__.py"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "app/api/router/v1/resume.py",
          "time": "2025-04-15T11:38:57Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2025-04-15T11:38:57Z"
        },
        {
          "name": "theta_1",
          "value": "2",
          "time": "2025-04-15T11:38:57Z"
        },
        {
          "name": "theta_2",
          "value": "3",
          "time": "2025-04-15T11:38:57Z"
        },
        {
          "name": "N_1",
          "value": "2",
          "time": "2025-04-15T11:38:57Z"
        },
        {
          "name": "N_2",
          "value": "3",
          "time": "2025-04-15T11:38:57Z"
        },
        {
          "name": "loc",
          "value": "37",
          "time": "2025-04-15T11:38:57Z"
        },
        {
          "name": "lloc",
          "value": "21",
          "time": "2025-04-15T11:38:57Z"
        },
        {
          "name": "sloc",
          "value": "23",
          "time": "2025-04-15T11:38:57Z"
        },
        {
          "name": "cloc",
          "value": "0",
          "time": "2025-04-15T11:38:57Z"
        },
        {
          "name": "dloc",
          "value": "7",
          "time": "2025-04-15T11:38:57Z"
        },
        {
          "name": "blank_lines",
          "value": "7",
          "time": "2025-04-15T11:38:57Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2025-04-15T11:38:57Z"
        },
        {
          "name": "loc",
          "value": "57",
          "time": "2025-04-17T19:40:07Z"
        },
        {
          "name": "lloc",
          "value": "22",
          "time": "2025-04-17T19:40:07Z"
        },
        {
          "name": "sloc",
          "value": "44",
          "time": "2025-04-17T19:40:07Z"
        },
        {
          "name": "dloc",
          "value": "5",
          "time": "2025-04-17T19:40:07Z"
        },
        {
          "name": "blank_lines",
          "value": "8",
          "time": "2025-04-17T19:40:07Z"
        },
        {
          "name": "loc",
          "value": "62",
          "time": "2025-04-19T18:16:49Z"
        },
        {
          "name": "sloc",
          "value": "48",
          "time": "2025-04-19T18:16:49Z"
        },
        {
          "name": "blank_lines",
          "value": "9",
          "time": "2025-04-19T18:16:49Z"
        },
        {
          "name": "loc",
          "value": "69",
          "time": "2025-04-25T07:37:29Z"
        },
        {
          "name": "lloc",
          "value": "27",
          "time": "2025-04-25T07:37:29Z"
        },
        {
          "name": "sloc",
          "value": "55",
          "time": "2025-04-25T07:37:29Z"
        },
        {
          "name": "loc",
          "value": "71",
          "time": "2025-04-26T17:13:49Z"
        },
        {
          "name": "blank_lines",
          "value": "11",
          "time": "2025-04-26T17:13:49Z"
        },
        {
          "name": "loc",
          "value": "131",
          "time": "2025-04-27T17:22:40Z"
        },
        {
          "name": "lloc",
          "value": "48",
          "time": "2025-04-27T17:22:40Z"
        },
        {
          "name": "sloc",
          "value": "105",
          "time": "2025-04-27T17:22:40Z"
        },
        {
          "name": "dloc",
          "value": "10",
          "time": "2025-04-27T17:22:40Z"
        },
        {
          "name": "blank_lines",
          "value": "16",
          "time": "2025-04-27T17:22:40Z"
        },
        {
          "name": "theta_2",
          "value": "5",
          "time": "2025-04-27T19:52:51Z"
        },
        {
          "name": "N_1",
          "value": "4",
          "time": "2025-04-27T19:52:51Z"
        },
        {
          "name": "N_2",
          "value": "5",
          "time": "2025-04-27T19:52:51Z"
        },
        {
          "name": "loc",
          "value": "143",
          "time": "2025-04-27T19:52:51Z"
        },
        {
          "name": "lloc",
          "value": "56",
          "time": "2025-04-27T19:52:51Z"
        },
        {
          "name": "sloc",
          "value": "117",
          "time": "2025-04-27T19:52:51Z"
        },
        {
          "name": "loc",
          "value": "171",
          "time": "2025-05-02T10:30:12Z"
        },
        {
          "name": "lloc",
          "value": "62",
          "time": "2025-05-02T10:30:12Z"
        },
        {
          "name": "sloc",
          "value": "144",
          "time": "2025-05-02T10:30:12Z"
        },
        {
          "name": "blank_lines",
          "value": "17",
          "time": "2025-05-02T10:30:12Z"
        },
        {
          "name": "pylint_score",
          "value": "0.041999999999999996",
          "time": "2025-04-26T17:13:49Z"
        },
        {
          "name": "pylint_score",
          "value": "0.333",
          "time": "2025-04-27T17:22:40Z"
        },
        {
          "name": "pylint_score",
          "value": "0.3",
          "time": "2025-04-27T19:52:51Z"
        },
        {
          "name": "pylint_score",
          "value": "0.24100000000000002",
          "time": "2025-05-02T10:30:12Z"
        }
      ],
      "relationships": [
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "3621cf8f138b26adf8d28ad8326b148017ce701c",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "app/api/router/v1/resume.py"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "app/core/__init__.py",
          "time": "2025-04-15T11:38:57Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2025-04-15T11:38:57Z"
        },
        {
          "name": "theta_1",
          "value": "0",
          "time": "2025-04-15T11:38:57Z"
        },
        {
          "name": "theta_2",
          "value": "0",
          "time": "2025-04-15T11:38:57Z"
        },
        {
          "name": "N_1",
          "value": "0",
          "time": "2025-04-15T11:38:57Z"
        },
        {
          "name": "N_2",
          "value": "0",
          "time": "2025-04-15T11:38:57Z"
        },
        {
          "name": "loc",
          "value": "20",
          "time": "2025-04-15T11:38:57Z"
        },
        {
          "name": "lloc",
          "value": "11",
          "time": "2025-04-15T11:38:57Z"
        },
        {
          "name": "sloc",
          "value": "10",
          "time": "2025-04-15T11:38:57Z"
        },
        {
          "name": "cloc",
          "value": "1",
          "time": "2025-04-15T11:38:57Z"
        },
        {
          "name": "dloc",
          "value": "6",
          "time": "2025-04-15T11:38:57Z"
        },
        {
          "name": "blank_lines",
          "value": "3",
          "time": "2025-04-15T11:38:57Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2025-04-15T11:38:57Z"
        },
        {
          "name": "loc",
          "value": "25",
          "time": "2025-04-19T16:32:36Z"
        },
        {
          "name": "sloc",
          "value": "14",
          "time": "2025-04-19T16:32:36Z"
        },
        {
          "name": "blank_lines",
          "value": "4",
          "time": "2025-04-19T16:32:36Z"
        },
        {
          "name": "loc",
          "value": "35",
          "time": "2025-04-19T16:34:50Z"
        },
        {
          "name": "lloc",
          "value": "12",
          "time": "2025-04-19T16:34:50Z"
        },
        {
          "name": "sloc",
          "value": "22",
          "time": "2025-04-19T16:34:50Z"
        },
        {
          "name": "blank_lines",
          "value": "6",
          "time": "2025-04-19T16:34:50Z"
        },
        {
          "name": "loc",
          "value": "36",
          "time": "2025-04-24T17:41:52Z"
        },
        {
          "name": "sloc",
          "value": "23",
          "time": "2025-04-24T17:41:52Z"
        },
        {
          "name": "lloc",
          "value": "4",
          "time": "2025-04-26T17:13:49Z"
        },
        {
          "name": "sloc",
          "value": "18",
          "time": "2025-04-26T17:13:49Z"
        },
        {
          "name": "cloc",
          "value": "0",
          "time": "2025-04-26T17:13:49Z"
        },
        {
          "name": "dloc",
          "value": "0",
          "time": "2025-04-26T17:13:49Z"
        },
        {
          "name": "blank_lines",
          "value": "2",
          "time": "2025-04-26T17:13:49Z"
        }
      ],
      "relationships": [
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "282aff8daa3dd6e509ea6592c2eef87376801ef7",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "app/core/__init__.py"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "app/core/exceptions.py",
          "time": "2025-04-15T11:38:57Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2025-04-15T11:38:57Z"
        },
        {
          "name": "theta_1",
          "value": "0",
          "time": "2025-04-15T11:38:57Z"
        },
        {
          "name": "theta_2",
          "value": "0",
          "time": "2025-04-15T11:38:57Z"
        },
        {
          "name": "N_1",
          "value": "0",
          "time": "2025-04-15T11:38:57Z"
        },
        {
          "name": "N_2",
          "value": "0",
          "time": "2025-04-15T11:38:57Z"
        },
        {
          "name": "loc",
          "value": "25",
          "time": "2025-04-15T11:38:57Z"
        },
        {
          "name": "lloc",
          "value": "16",
          "time": "2025-04-15T11:38:57Z"
        },
        {
          "name": "sloc",
          "value": "22",
          "time": "2025-04-15T11:38:57Z"
        },
        {
          "name": "cloc",
          "value": "0",
          "time": "2025-04-15T11:38:57Z"
        },
        {
          "name": "dloc",
          "value": "0",
          "time": "2025-04-15T11:38:57Z"
        },
        {
          "name": "blank_lines",
          "value": "3",
          "time": "2025-04-15T11:38:57Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2025-04-15T11:38:57Z"
        },
        {
          "name": "loc",
          "value": "28",
          "time": "2025-04-19T16:32:36Z"
        },
        {
          "name": "blank_lines",
          "value": "6",
          "time": "2025-04-19T16:32:36Z"
        },
        {
          "name": "loc",
          "value": "44",
          "time": "2025-04-27T19:52:51Z"
        },
        {
          "name": "lloc",
          "value": "23",
          "time": "2025-04-27T19:52:51Z"
        },
        {
          "name": "sloc",
          "value": "34",
          "time": "2025-04-27T19:52:51Z"
        },
        {
          "name": "blank_lines",
          "value": "10",
          "time": "2025-04-27T19:52:51Z"
        }
      ],
      "relationships": [
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "a6c58e0dc4daeb36bc2d410cfc26ad2786a591bd",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "app/core/exceptions.py"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "app/services/resume_service.py",
          "time": "2025-04-15T11:38:57Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2025-04-15T11:38:57Z"
        },
        {
          "name": "theta_1",
          "value": "1",
          "time": "2025-04-15T11:38:57Z"
        },
        {
          "name": "theta_2",
          "value": "2",
          "time": "2025-04-15T11:38:57Z"
        },
        {
          "name": "N_1",
          "value": "1",
          "time": "2025-04-15T11:38:57Z"
        },
        {
          "name": "N_2",
          "value": "2",
          "time": "2025-04-15T11:38:57Z"
        },
        {
          "name": "loc",
          "value": "76",
          "time": "2025-04-15T11:38:57Z"
        },
        {
          "name": "lloc",
          "value": "35",
          "time": "2025-04-15T11:38:57Z"
        },
        {
          "name": "sloc",
          "value": "30",
          "time": "2025-04-15T11:38:57Z"
        },
        {
          "name": "cloc",
          "value": "0",
          "time": "2025-04-15T11:38:57Z"
        },
        {
          "name": "dloc",
          "value": "29",
          "time": "2025-04-15T11:38:57Z"
        },
        {
          "name": "blank_lines",
          "value": "17",
          "time": "2025-04-15T11:38:57Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2025-04-15T11:38:57Z"
        },
        {
          "name": "theta_2",
          "value": "3",
          "time": "2025-04-17T19:40:07Z"
        },
        {
          "name": "N_1",
          "value": "2",
          "time": "2025-04-17T19:40:07Z"
        },
        {
          "name": "N_2",
          "value": "4",
          "time": "2025-04-17T19:40:07Z"
        },
        {
          "name": "loc",
          "value": "71",
          "time": "2025-04-17T19:40:07Z"
        },
        {
          "name": "lloc",
          "value": "37",
          "time": "2025-04-17T19:40:07Z"
        },
        {
          "name": "sloc",
          "value": "45",
          "time": "2025-04-17T19:40:07Z"
        },
        {
          "name": "dloc",
          "value": "13",
          "time": "2025-04-17T19:40:07Z"
        },
        {
          "name": "blank_lines",
          "value": "12",
          "time": "2025-04-17T19:40:07Z"
        },
        {
          "name": "loc",
          "value": "92",
          "time": "2025-04-24T17:41:52Z"
        },
        {
          "name": "lloc",
          "value": "48",
          "time": "2025-04-24T17:41:52Z"
        },
        {
          "name": "sloc",
          "value": "58",
          "time": "2025-04-24T17:41:52Z"
        },
        {
          "name": "dloc",
          "value": "17",
          "time": "2025-04-24T17:41:52Z"
        },
        {
          "name": "blank_lines",
          "value": "16",
          "time": "2025-04-24T17:41:52Z"
        },
        {
          "name": "theta_1",
          "value": "2",
          "time": "2025-04-25T07:37:29Z"
        },
        {
          "name": "theta_2",
          "value": "4",
          "time": "2025-04-25T07:37:29Z"
        },
        {
          "name": "N_1",
          "value": "3",
          "time": "2025-04-25T07:37:29Z"
        },
        {
          "name": "N_2",
          "value": "5",
          "time": "2025-04-25T07:37:29Z"
        },
        {
          "name": "loc",
          "value": "165",
          "time": "2025-04-25T07:37:29Z"
        },
        {
          "name": "lloc",
          "value": "71",
          "time": "2025-04-25T07:37:29Z"
        },
        {
          "name": "sloc",
          "value": "124",
          "time": "2025-04-25T07:37:29Z"
        },
        {
          "name": "dloc",
          "value": "20",
          "time": "2025-04-25T07:37:29Z"
        },
        {
          "name": "blank_lines",
          "value": "20",
          "time": "2025-04-25T07:37:29Z"
        },
        {
          "name": "loc",
          "value": "159",
          "time": "2025-04-26T17:13:49Z"
        },
        {
          "name": "sloc",
          "value": "118",
          "time": "2025-04-26T17:13:49Z"
        },
        {
          "name": "pylint_score",
          "value": "0.364",
          "time": "2025-04-17T19:40:07Z"
        },
        {
          "name": "pylint_score",
          "value": "0.16299999999999998",
          "time": "2025-04-24T17:41:52Z"
        },
        {
          "name": "pylint_score",
          "value": "0.317",
          "time": "2025-04-25T07:37:29Z"
        }
      ],
      "relationships": [
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "282aff8daa3dd6e509ea6592c2eef87376801ef7",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "app/services/resume_service.py"
    },
    {
      "type": "commit",
      "attributes": [
        {
          "name": "message",
          "value": "issue-332 | add API routes and resume processor",
          "time": "2025-04-15T11:38:57Z"
        },
        {
          "name": "description",
          "value": "",
          "time": "2025-04-15T11:38:57Z"
        },
        {
          "name": "to",
          "value": "['Resume-Matcher:(HEAD detached at fc46d27)', 'Resume-Matcher:main']",
          "time": "2025-04-15T11:38:57Z"
        }
      ],
      "relationships": [
        {
          "objectId": "app.db",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/api/__init__.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/api/middleware.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/api/router/v1/__init__.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/api/router/v1/resume.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/base.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/core/__init__.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/core/database.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/core/exceptions.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/models/__init__.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/models/job.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/models/resume.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/models/user.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/services/resume_service.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "requirements.txt",
          "qualifier": "aggregates"
        },
        {
          "objectId": "c747e8208f42f226ef3ea0f0430416b89b020e8d",
          "qualifier": "is-child-of"
        },
        {
          "objectId": "0.9488081911231654",
          "qualifier": "commit_mi"
        },
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "0.019210526315789473",
          "qualifier": "commit_pylint"
        }
      ],
      "id": "078b93cae58db0da361f33d6a4e62c61477f0fef"
    },
    {
      "type": "commit",
      "attributes": [
        {
          "name": "message",
          "value": "refactor: clean up code formatting and improve readability in middleware, association, base, and job models",
          "time": "2025-04-17T19:40:00Z"
        },
        {
          "name": "description",
          "value": "",
          "time": "2025-04-17T19:40:00Z"
        },
        {
          "name": "to",
          "value": "['Resume-Matcher:(HEAD detached at fc46d27)', 'Resume-Matcher:main']",
          "time": "2025-04-17T19:40:00Z"
        }
      ],
      "relationships": [
        {
          "objectId": "app/api/middleware.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/models/association.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/models/base.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/models/job.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "4e1616ac12b126c77761a47cf70c517a4adeb0f5",
          "qualifier": "is-child-of"
        },
        {
          "objectId": "0.9488081911231654",
          "qualifier": "commit_mi"
        },
        {
          "objectId": "srbhr",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "0.019210526315789473",
          "qualifier": "commit_pylint"
        }
      ],
      "id": "3670c6ce485967fd099a5862a5d7eca0ab5bde01"
    },
    {
      "type": "commit",
      "attributes": [
        {
          "name": "message",
          "value": "feat: enhance resume upload endpoint to support DOCX files and improve error handling",
          "time": "2025-04-17T19:40:07Z"
        },
        {
          "name": "description",
          "value": "",
          "time": "2025-04-17T19:40:07Z"
        },
        {
          "name": "to",
          "value": "['Resume-Matcher:(HEAD detached at fc46d27)', 'Resume-Matcher:main']",
          "time": "2025-04-17T19:40:07Z"
        }
      ],
      "relationships": [
        {
          "objectId": "app/api/router/v1/resume.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/models/resume.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/services/resume_service.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "3670c6ce485967fd099a5862a5d7eca0ab5bde01",
          "qualifier": "is-child-of"
        },
        {
          "objectId": "0.9426333144396155",
          "qualifier": "commit_mi"
        },
        {
          "objectId": "srbhr",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "0.03836842105263158",
          "qualifier": "commit_pylint"
        }
      ],
      "id": "2b60122a85fe8fa29514882e12af006f6cc4ceb5"
    },
    {
      "type": "commit",
      "attributes": [
        {
          "name": "message",
          "value": "issue-332 | ruff refactoring and requirements.txt update",
          "time": "2025-04-19T16:32:36Z"
        },
        {
          "name": "description",
          "value": "",
          "time": "2025-04-19T16:32:36Z"
        },
        {
          "name": "to",
          "value": "['Resume-Matcher:(HEAD detached at fc46d27)', 'Resume-Matcher:main']",
          "time": "2025-04-19T16:32:36Z"
        }
      ],
      "relationships": [
        {
          "objectId": "app/api/__init__.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/api/router/health.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/api/router/v1/__init__.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/base.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/core/__init__.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/core/config.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/core/database.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/core/exceptions.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/models/__init__.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/models/user.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/utils/utils.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "requirements.txt",
          "qualifier": "aggregates"
        },
        {
          "objectId": "638c41f37930637a8f891eb13c59a224906805fe",
          "qualifier": "is-child-of"
        },
        {
          "objectId": "0.9426333144396155",
          "qualifier": "commit_mi"
        },
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "0.041105263157894735",
          "qualifier": "commit_pylint"
        }
      ],
      "id": "12848699494a28f76c34982ef872a824fb32036d"
    },
    {
      "type": "commit",
      "attributes": [
        {
          "name": "message",
          "value": "issue-332 | ruff refactoring and requirements.txt update",
          "time": "2025-04-19T16:32:45Z"
        },
        {
          "name": "description",
          "value": "",
          "time": "2025-04-19T16:32:45Z"
        },
        {
          "name": "to",
          "value": "['Resume-Matcher:(HEAD detached at fc46d27)', 'Resume-Matcher:main']",
          "time": "2025-04-19T16:32:45Z"
        }
      ],
      "relationships": [
        {
          "objectId": "app/api/__init__.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/api/router/v1/__init__.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "12848699494a28f76c34982ef872a824fb32036d",
          "qualifier": "is-child-of"
        },
        {
          "objectId": "0.9426333144396155",
          "qualifier": "commit_mi"
        },
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "0.041105263157894735",
          "qualifier": "commit_pylint"
        }
      ],
      "id": "8eea5e0838e87f843ee2617b39917e06e0050d26"
    },
    {
      "type": "commit",
      "attributes": [
        {
          "name": "message",
          "value": "issue-332 | ruff refactoring and requirements.txt update",
          "time": "2025-04-19T16:34:50Z"
        },
        {
          "name": "description",
          "value": "",
          "time": "2025-04-19T16:34:50Z"
        },
        {
          "name": "to",
          "value": "['Resume-Matcher:(HEAD detached at fc46d27)', 'Resume-Matcher:main']",
          "time": "2025-04-19T16:34:50Z"
        }
      ],
      "relationships": [
        {
          "objectId": "app/core/__init__.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "8eea5e0838e87f843ee2617b39917e06e0050d26",
          "qualifier": "is-child-of"
        },
        {
          "objectId": "0.9426333144396155",
          "qualifier": "commit_mi"
        },
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "0.041105263157894735",
          "qualifier": "commit_pylint"
        }
      ],
      "id": "b8b1bb497e266f586e8b0ad50a324d9704b0be9f"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "app/api/router/v1/job.py",
          "time": "2025-04-19T18:16:49Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2025-04-19T18:16:49Z"
        },
        {
          "name": "theta_1",
          "value": "2",
          "time": "2025-04-19T18:16:49Z"
        },
        {
          "name": "theta_2",
          "value": "2",
          "time": "2025-04-19T18:16:49Z"
        },
        {
          "name": "N_1",
          "value": "2",
          "time": "2025-04-19T18:16:49Z"
        },
        {
          "name": "N_2",
          "value": "3",
          "time": "2025-04-19T18:16:49Z"
        },
        {
          "name": "loc",
          "value": "55",
          "time": "2025-04-19T18:16:49Z"
        },
        {
          "name": "lloc",
          "value": "22",
          "time": "2025-04-19T18:16:49Z"
        },
        {
          "name": "sloc",
          "value": "44",
          "time": "2025-04-19T18:16:49Z"
        },
        {
          "name": "cloc",
          "value": "0",
          "time": "2025-04-19T18:16:49Z"
        },
        {
          "name": "dloc",
          "value": "3",
          "time": "2025-04-19T18:16:49Z"
        },
        {
          "name": "blank_lines",
          "value": "8",
          "time": "2025-04-19T18:16:49Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2025-04-19T18:16:49Z"
        },
        {
          "name": "loc",
          "value": "58",
          "time": "2025-04-20T07:14:20Z"
        },
        {
          "name": "lloc",
          "value": "24",
          "time": "2025-04-20T07:14:20Z"
        },
        {
          "name": "sloc",
          "value": "47",
          "time": "2025-04-20T07:14:20Z"
        },
        {
          "name": "loc",
          "value": "65",
          "time": "2025-04-20T08:57:26Z"
        },
        {
          "name": "lloc",
          "value": "26",
          "time": "2025-04-20T08:57:26Z"
        },
        {
          "name": "sloc",
          "value": "52",
          "time": "2025-04-20T08:57:26Z"
        },
        {
          "name": "blank_lines",
          "value": "10",
          "time": "2025-04-20T08:57:26Z"
        },
        {
          "name": "loc",
          "value": "67",
          "time": "2025-04-26T17:13:49Z"
        },
        {
          "name": "blank_lines",
          "value": "12",
          "time": "2025-04-26T17:13:49Z"
        }
      ],
      "relationships": [
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "282aff8daa3dd6e509ea6592c2eef87376801ef7",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "app/api/router/v1/job.py"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "app/schemas/job.py",
          "time": "2025-04-19T18:16:49Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2025-04-19T18:16:49Z"
        },
        {
          "name": "theta_1",
          "value": "0",
          "time": "2025-04-19T18:16:49Z"
        },
        {
          "name": "theta_2",
          "value": "0",
          "time": "2025-04-19T18:16:49Z"
        },
        {
          "name": "N_1",
          "value": "0",
          "time": "2025-04-19T18:16:49Z"
        },
        {
          "name": "N_2",
          "value": "0",
          "time": "2025-04-19T18:16:49Z"
        },
        {
          "name": "loc",
          "value": "10",
          "time": "2025-04-19T18:16:49Z"
        },
        {
          "name": "lloc",
          "value": "8",
          "time": "2025-04-19T18:16:49Z"
        },
        {
          "name": "sloc",
          "value": "8",
          "time": "2025-04-19T18:16:49Z"
        },
        {
          "name": "cloc",
          "value": "0",
          "time": "2025-04-19T18:16:49Z"
        },
        {
          "name": "dloc",
          "value": "0",
          "time": "2025-04-19T18:16:49Z"
        },
        {
          "name": "blank_lines",
          "value": "2",
          "time": "2025-04-19T18:16:49Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2025-04-19T18:16:49Z"
        }
      ],
      "relationships": [
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "fa2c02df0acf2d4fb807161b683970c2c9d38d26",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "app/schemas/job.py"
    },
    {
      "type": "commit",
      "attributes": [
        {
          "name": "message",
          "value": "issue-332 | Job processing API",
          "time": "2025-04-19T18:16:49Z"
        },
        {
          "name": "description",
          "value": "",
          "time": "2025-04-19T18:16:49Z"
        },
        {
          "name": "to",
          "value": "['Resume-Matcher:(HEAD detached at fc46d27)', 'Resume-Matcher:main']",
          "time": "2025-04-19T18:16:49Z"
        }
      ],
      "relationships": [
        {
          "objectId": "app/api/router/v1/__init__.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/api/router/v1/job.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/api/router/v1/resume.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/models/association.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/models/job.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/models/resume.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/models/user.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/schemas/job.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "6816ac238638f06e3234c53192a1a0d71ef85877",
          "qualifier": "is-child-of"
        },
        {
          "objectId": "0.9374120292133102",
          "qualifier": "commit_mi"
        },
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "0.05304761904761905",
          "qualifier": "commit_pylint"
        }
      ],
      "id": "fa2c02df0acf2d4fb807161b683970c2c9d38d26"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "app/services/__init__.py",
          "time": "2025-04-20T07:14:20Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2025-04-20T07:14:20Z"
        },
        {
          "name": "theta_1",
          "value": "0",
          "time": "2025-04-20T07:14:20Z"
        },
        {
          "name": "theta_2",
          "value": "0",
          "time": "2025-04-20T07:14:20Z"
        },
        {
          "name": "N_1",
          "value": "0",
          "time": "2025-04-20T07:14:20Z"
        },
        {
          "name": "N_2",
          "value": "0",
          "time": "2025-04-20T07:14:20Z"
        },
        {
          "name": "loc",
          "value": "4",
          "time": "2025-04-20T07:14:20Z"
        },
        {
          "name": "lloc",
          "value": "3",
          "time": "2025-04-20T07:14:20Z"
        },
        {
          "name": "sloc",
          "value": "3",
          "time": "2025-04-20T07:14:20Z"
        },
        {
          "name": "cloc",
          "value": "0",
          "time": "2025-04-20T07:14:20Z"
        },
        {
          "name": "dloc",
          "value": "0",
          "time": "2025-04-20T07:14:20Z"
        },
        {
          "name": "blank_lines",
          "value": "1",
          "time": "2025-04-20T07:14:20Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2025-04-20T07:14:20Z"
        },
        {
          "name": "loc",
          "value": "5",
          "time": "2025-04-27T04:48:21Z"
        },
        {
          "name": "lloc",
          "value": "4",
          "time": "2025-04-27T04:48:21Z"
        },
        {
          "name": "sloc",
          "value": "4",
          "time": "2025-04-27T04:48:21Z"
        },
        {
          "name": "loc",
          "value": "13",
          "time": "2025-04-27T17:22:40Z"
        },
        {
          "name": "lloc",
          "value": "5",
          "time": "2025-04-27T17:22:40Z"
        },
        {
          "name": "sloc",
          "value": "12",
          "time": "2025-04-27T17:22:40Z"
        },
        {
          "name": "loc",
          "value": "19",
          "time": "2025-04-27T19:52:51Z"
        },
        {
          "name": "sloc",
          "value": "18",
          "time": "2025-04-27T19:52:51Z"
        }
      ],
      "relationships": [
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "cc6ef2a0d469f840109183e5d2454a24949cafb5",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "app/services/__init__.py"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "app/services/job_service.py",
          "time": "2025-04-20T07:14:20Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2025-04-20T07:14:20Z"
        },
        {
          "name": "theta_1",
          "value": "0",
          "time": "2025-04-20T07:14:20Z"
        },
        {
          "name": "theta_2",
          "value": "0",
          "time": "2025-04-20T07:14:20Z"
        },
        {
          "name": "N_1",
          "value": "0",
          "time": "2025-04-20T07:14:20Z"
        },
        {
          "name": "N_2",
          "value": "0",
          "time": "2025-04-20T07:14:20Z"
        },
        {
          "name": "loc",
          "value": "34",
          "time": "2025-04-20T07:14:20Z"
        },
        {
          "name": "lloc",
          "value": "18",
          "time": "2025-04-20T07:14:20Z"
        },
        {
          "name": "sloc",
          "value": "21",
          "time": "2025-04-20T07:14:20Z"
        },
        {
          "name": "cloc",
          "value": "0",
          "time": "2025-04-20T07:14:20Z"
        },
        {
          "name": "dloc",
          "value": "7",
          "time": "2025-04-20T07:14:20Z"
        },
        {
          "name": "blank_lines",
          "value": "6",
          "time": "2025-04-20T07:14:20Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2025-04-20T07:14:20Z"
        },
        {
          "name": "theta_1",
          "value": "3",
          "time": "2025-04-20T08:57:26Z"
        },
        {
          "name": "theta_2",
          "value": "4",
          "time": "2025-04-20T08:57:26Z"
        },
        {
          "name": "N_1",
          "value": "3",
          "time": "2025-04-20T08:57:26Z"
        },
        {
          "name": "N_2",
          "value": "5",
          "time": "2025-04-20T08:57:26Z"
        },
        {
          "name": "loc",
          "value": "55",
          "time": "2025-04-20T08:57:26Z"
        },
        {
          "name": "lloc",
          "value": "24",
          "time": "2025-04-20T08:57:26Z"
        },
        {
          "name": "sloc",
          "value": "31",
          "time": "2025-04-20T08:57:26Z"
        },
        {
          "name": "dloc",
          "value": "14",
          "time": "2025-04-20T08:57:26Z"
        },
        {
          "name": "blank_lines",
          "value": "10",
          "time": "2025-04-20T08:57:26Z"
        },
        {
          "name": "lloc",
          "value": "23",
          "time": "2025-04-20T12:38:41Z"
        },
        {
          "name": "sloc",
          "value": "30",
          "time": "2025-04-20T12:38:41Z"
        },
        {
          "name": "blank_lines",
          "value": "11",
          "time": "2025-04-20T12:38:41Z"
        },
        {
          "name": "theta_2",
          "value": "5",
          "time": "2025-04-25T18:12:52Z"
        },
        {
          "name": "N_1",
          "value": "4",
          "time": "2025-04-25T18:12:52Z"
        },
        {
          "name": "N_2",
          "value": "6",
          "time": "2025-04-25T18:12:52Z"
        },
        {
          "name": "loc",
          "value": "143",
          "time": "2025-04-25T18:12:52Z"
        },
        {
          "name": "lloc",
          "value": "57",
          "time": "2025-04-25T18:12:52Z"
        },
        {
          "name": "sloc",
          "value": "114",
          "time": "2025-04-25T18:12:52Z"
        },
        {
          "name": "dloc",
          "value": "13",
          "time": "2025-04-25T18:12:52Z"
        },
        {
          "name": "blank_lines",
          "value": "16",
          "time": "2025-04-25T18:12:52Z"
        },
        {
          "name": "loc",
          "value": "140",
          "time": "2025-04-26T17:13:49Z"
        },
        {
          "name": "lloc",
          "value": "62",
          "time": "2025-04-26T17:13:49Z"
        },
        {
          "name": "sloc",
          "value": "110",
          "time": "2025-04-26T17:13:49Z"
        },
        {
          "name": "blank_lines",
          "value": "17",
          "time": "2025-04-26T17:13:49Z"
        },
        {
          "name": "loc",
          "value": "136",
          "time": "2025-04-27T19:52:51Z"
        },
        {
          "name": "sloc",
          "value": "106",
          "time": "2025-04-27T19:52:51Z"
        },
        {
          "name": "pylint_score",
          "value": "0.364",
          "time": "2025-04-20T08:57:26Z"
        },
        {
          "name": "pylint_score",
          "value": "0.333",
          "time": "2025-04-20T12:38:41Z"
        },
        {
          "name": "pylint_score",
          "value": "0.294",
          "time": "2025-04-25T18:12:52Z"
        },
        {
          "name": "pylint_score",
          "value": "0.268",
          "time": "2025-04-26T17:13:49Z"
        }
      ],
      "relationships": [
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "615354ecada74e48925ea7f89bc1652e7d06b008",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "app/services/job_service.py"
    },
    {
      "type": "commit",
      "attributes": [
        {
          "name": "message",
          "value": "issue-332 | testing associations",
          "time": "2025-04-20T07:14:20Z"
        },
        {
          "name": "description",
          "value": "",
          "time": "2025-04-20T07:14:20Z"
        },
        {
          "name": "to",
          "value": "['Resume-Matcher:(HEAD detached at fc46d27)', 'Resume-Matcher:main']",
          "time": "2025-04-20T07:14:20Z"
        }
      ],
      "relationships": [
        {
          "objectId": "app/api/router/v1/job.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/models/job.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/models/resume.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/models/user.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/services/__init__.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/services/job_service.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/services/resume_service.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "fa2c02df0acf2d4fb807161b683970c2c9d38d26",
          "qualifier": "is-child-of"
        },
        {
          "objectId": "0.9423037931937991",
          "qualifier": "commit_mi"
        },
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "0.04843478260869566",
          "qualifier": "commit_pylint"
        }
      ],
      "id": "b3af62273e0a9bb9fa1dfcdd5132006a22dbd36e"
    },
    {
      "type": "commit",
      "attributes": [
        {
          "name": "message",
          "value": "issue-332 | testing associations",
          "time": "2025-04-20T08:57:26Z"
        },
        {
          "name": "description",
          "value": "",
          "time": "2025-04-20T08:57:26Z"
        },
        {
          "name": "to",
          "value": "['Resume-Matcher:(HEAD detached at fc46d27)', 'Resume-Matcher:main']",
          "time": "2025-04-20T08:57:26Z"
        }
      ],
      "relationships": [
        {
          "objectId": "app.db",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/api/router/v1/job.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/models/job.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/models/resume.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/models/user.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/services/job_service.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "b3af62273e0a9bb9fa1dfcdd5132006a22dbd36e",
          "qualifier": "is-child-of"
        },
        {
          "objectId": "0.9365854247935701",
          "qualifier": "commit_mi"
        },
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "0.06426086956521739",
          "qualifier": "commit_pylint"
        }
      ],
      "id": "4b483740be309b68e842397b0cbb69753a0dea7b"
    },
    {
      "type": "commit",
      "attributes": [
        {
          "name": "message",
          "value": "issue-332 | job service implemented",
          "time": "2025-04-20T12:38:41Z"
        },
        {
          "name": "description",
          "value": "",
          "time": "2025-04-20T12:38:41Z"
        },
        {
          "name": "to",
          "value": "['Resume-Matcher:(HEAD detached at fc46d27)', 'Resume-Matcher:main']",
          "time": "2025-04-20T12:38:41Z"
        }
      ],
      "relationships": [
        {
          "objectId": "app.db",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/services/job_service.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "4b483740be309b68e842397b0cbb69753a0dea7b",
          "qualifier": "is-child-of"
        },
        {
          "objectId": "0.936809311834901",
          "qualifier": "commit_mi"
        },
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "0.06291304347826088",
          "qualifier": "commit_pylint"
        }
      ],
      "id": "7ea5b50aa41ef40d111fc9260e11d50e4b5e8930"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "app/agent/__init__.py",
          "time": "2025-04-20T18:54:08Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2025-04-20T18:54:08Z"
        },
        {
          "name": "theta_1",
          "value": "0",
          "time": "2025-04-20T18:54:08Z"
        },
        {
          "name": "theta_2",
          "value": "0",
          "time": "2025-04-20T18:54:08Z"
        },
        {
          "name": "N_1",
          "value": "0",
          "time": "2025-04-20T18:54:08Z"
        },
        {
          "name": "N_2",
          "value": "0",
          "time": "2025-04-20T18:54:08Z"
        },
        {
          "name": "loc",
          "value": "9",
          "time": "2025-04-20T18:54:08Z"
        },
        {
          "name": "lloc",
          "value": "2",
          "time": "2025-04-20T18:54:08Z"
        },
        {
          "name": "sloc",
          "value": "2",
          "time": "2025-04-20T18:54:08Z"
        },
        {
          "name": "cloc",
          "value": "4",
          "time": "2025-04-20T18:54:08Z"
        },
        {
          "name": "dloc",
          "value": "0",
          "time": "2025-04-20T18:54:08Z"
        },
        {
          "name": "blank_lines",
          "value": "3",
          "time": "2025-04-20T18:54:08Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2025-04-20T18:54:08Z"
        }
      ],
      "relationships": [
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "1b09afcf548e2783fe0635093c39f0e675e684a8",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "app/agent/__init__.py"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "app/agent/exceptions.py",
          "time": "2025-04-20T18:54:08Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2025-04-20T18:54:08Z"
        },
        {
          "name": "theta_1",
          "value": "0",
          "time": "2025-04-20T18:54:08Z"
        },
        {
          "name": "theta_2",
          "value": "0",
          "time": "2025-04-20T18:54:08Z"
        },
        {
          "name": "N_1",
          "value": "0",
          "time": "2025-04-20T18:54:08Z"
        },
        {
          "name": "N_2",
          "value": "0",
          "time": "2025-04-20T18:54:08Z"
        },
        {
          "name": "loc",
          "value": "6",
          "time": "2025-04-20T18:54:08Z"
        },
        {
          "name": "lloc",
          "value": "4",
          "time": "2025-04-20T18:54:08Z"
        },
        {
          "name": "sloc",
          "value": "2",
          "time": "2025-04-20T18:54:08Z"
        },
        {
          "name": "cloc",
          "value": "0",
          "time": "2025-04-20T18:54:08Z"
        },
        {
          "name": "dloc",
          "value": "0",
          "time": "2025-04-20T18:54:08Z"
        },
        {
          "name": "blank_lines",
          "value": "2",
          "time": "2025-04-20T18:54:08Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2025-04-20T18:54:08Z"
        }
      ],
      "relationships": [
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "f72b58eb67965d5b4610c5b21f1a4ae9d59c1efb",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "app/agent/exceptions.py"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "app/agent/manager.py",
          "time": "2025-04-20T18:54:08Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2025-04-20T18:54:08Z"
        },
        {
          "name": "theta_1",
          "value": "2",
          "time": "2025-04-20T18:54:08Z"
        },
        {
          "name": "theta_2",
          "value": "4",
          "time": "2025-04-20T18:54:08Z"
        },
        {
          "name": "N_1",
          "value": "2",
          "time": "2025-04-20T18:54:08Z"
        },
        {
          "name": "N_2",
          "value": "4",
          "time": "2025-04-20T18:54:08Z"
        },
        {
          "name": "loc",
          "value": "36",
          "time": "2025-04-20T18:54:08Z"
        },
        {
          "name": "lloc",
          "value": "24",
          "time": "2025-04-20T18:54:08Z"
        },
        {
          "name": "sloc",
          "value": "27",
          "time": "2025-04-20T18:54:08Z"
        },
        {
          "name": "cloc",
          "value": "0",
          "time": "2025-04-20T18:54:08Z"
        },
        {
          "name": "dloc",
          "value": "3",
          "time": "2025-04-20T18:54:08Z"
        },
        {
          "name": "blank_lines",
          "value": "6",
          "time": "2025-04-20T18:54:08Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2025-04-20T18:54:08Z"
        },
        {
          "name": "theta_2",
          "value": "6",
          "time": "2025-04-27T04:48:21Z"
        },
        {
          "name": "N_1",
          "value": "3",
          "time": "2025-04-27T04:48:21Z"
        },
        {
          "name": "N_2",
          "value": "6",
          "time": "2025-04-27T04:48:21Z"
        },
        {
          "name": "loc",
          "value": "62",
          "time": "2025-04-27T04:48:21Z"
        },
        {
          "name": "lloc",
          "value": "40",
          "time": "2025-04-27T04:48:21Z"
        },
        {
          "name": "sloc",
          "value": "46",
          "time": "2025-04-27T04:48:21Z"
        },
        {
          "name": "dloc",
          "value": "6",
          "time": "2025-04-27T04:48:21Z"
        },
        {
          "name": "blank_lines",
          "value": "10",
          "time": "2025-04-27T04:48:21Z"
        },
        {
          "name": "theta_1",
          "value": "1",
          "time": "2025-04-27T17:22:40Z"
        },
        {
          "name": "loc",
          "value": "65",
          "time": "2025-04-27T17:22:40Z"
        },
        {
          "name": "lloc",
          "value": "45",
          "time": "2025-04-27T17:22:40Z"
        },
        {
          "name": "sloc",
          "value": "49",
          "time": "2025-04-27T17:22:40Z"
        },
        {
          "name": "pylint_score",
          "value": "0.158",
          "time": "2025-04-27T04:48:21Z"
        },
        {
          "name": "pylint_score",
          "value": "0.325",
          "time": "2025-04-27T17:22:40Z"
        }
      ],
      "relationships": [
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "a6c58e0dc4daeb36bc2d410cfc26ad2786a591bd",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "app/agent/manager.py"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "app/agent/providers/base.py",
          "time": "2025-04-20T18:54:08Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2025-04-20T18:54:08Z"
        },
        {
          "name": "theta_1",
          "value": "0",
          "time": "2025-04-20T18:54:08Z"
        },
        {
          "name": "theta_2",
          "value": "0",
          "time": "2025-04-20T18:54:08Z"
        },
        {
          "name": "N_1",
          "value": "0",
          "time": "2025-04-20T18:54:08Z"
        },
        {
          "name": "N_2",
          "value": "0",
          "time": "2025-04-20T18:54:08Z"
        },
        {
          "name": "loc",
          "value": "11",
          "time": "2025-04-20T18:54:08Z"
        },
        {
          "name": "lloc",
          "value": "7",
          "time": "2025-04-20T18:54:08Z"
        },
        {
          "name": "sloc",
          "value": "5",
          "time": "2025-04-20T18:54:08Z"
        },
        {
          "name": "cloc",
          "value": "0",
          "time": "2025-04-20T18:54:08Z"
        },
        {
          "name": "dloc",
          "value": "3",
          "time": "2025-04-20T18:54:08Z"
        },
        {
          "name": "blank_lines",
          "value": "3",
          "time": "2025-04-20T18:54:08Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2025-04-20T18:54:08Z"
        },
        {
          "name": "loc",
          "value": "20",
          "time": "2025-04-27T04:48:21Z"
        },
        {
          "name": "lloc",
          "value": "12",
          "time": "2025-04-27T04:48:21Z"
        },
        {
          "name": "sloc",
          "value": "8",
          "time": "2025-04-27T04:48:21Z"
        },
        {
          "name": "dloc",
          "value": "6",
          "time": "2025-04-27T04:48:21Z"
        },
        {
          "name": "blank_lines",
          "value": "6",
          "time": "2025-04-27T04:48:21Z"
        },
        {
          "name": "pylint_score",
          "value": "0.5",
          "time": "2025-04-27T04:48:21Z"
        }
      ],
      "relationships": [
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "1b09afcf548e2783fe0635093c39f0e675e684a8",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "app/agent/providers/base.py"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "app/agent/providers/ollama.py",
          "time": "2025-04-20T18:54:08Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2025-04-20T18:54:08Z"
        },
        {
          "name": "theta_1",
          "value": "0",
          "time": "2025-04-20T18:54:08Z"
        },
        {
          "name": "theta_2",
          "value": "0",
          "time": "2025-04-20T18:54:08Z"
        },
        {
          "name": "N_1",
          "value": "0",
          "time": "2025-04-20T18:54:08Z"
        },
        {
          "name": "N_2",
          "value": "0",
          "time": "2025-04-20T18:54:08Z"
        },
        {
          "name": "loc",
          "value": "51",
          "time": "2025-04-20T18:54:08Z"
        },
        {
          "name": "lloc",
          "value": "30",
          "time": "2025-04-20T18:54:08Z"
        },
        {
          "name": "sloc",
          "value": "36",
          "time": "2025-04-20T18:54:08Z"
        },
        {
          "name": "cloc",
          "value": "0",
          "time": "2025-04-20T18:54:08Z"
        },
        {
          "name": "dloc",
          "value": "6",
          "time": "2025-04-20T18:54:08Z"
        },
        {
          "name": "blank_lines",
          "value": "9",
          "time": "2025-04-20T18:54:08Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2025-04-20T18:54:08Z"
        },
        {
          "name": "loc",
          "value": "77",
          "time": "2025-04-27T04:48:21Z"
        },
        {
          "name": "lloc",
          "value": "42",
          "time": "2025-04-27T04:48:21Z"
        },
        {
          "name": "sloc",
          "value": "55",
          "time": "2025-04-27T04:48:21Z"
        },
        {
          "name": "dloc",
          "value": "9",
          "time": "2025-04-27T04:48:21Z"
        },
        {
          "name": "blank_lines",
          "value": "13",
          "time": "2025-04-27T04:48:21Z"
        },
        {
          "name": "pylint_score",
          "value": "0.231",
          "time": "2025-04-25T07:37:29Z"
        },
        {
          "name": "pylint_score",
          "value": "0.21600000000000003",
          "time": "2025-04-27T04:48:21Z"
        }
      ],
      "relationships": [
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "a6c58e0dc4daeb36bc2d410cfc26ad2786a591bd",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "app/agent/providers/ollama.py"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "app/agent/providers/openai.py",
          "time": "2025-04-20T18:54:08Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2025-04-20T18:54:08Z"
        },
        {
          "name": "theta_1",
          "value": "2",
          "time": "2025-04-20T18:54:08Z"
        },
        {
          "name": "theta_2",
          "value": "2",
          "time": "2025-04-20T18:54:08Z"
        },
        {
          "name": "N_1",
          "value": "2",
          "time": "2025-04-20T18:54:08Z"
        },
        {
          "name": "N_2",
          "value": "3",
          "time": "2025-04-20T18:54:08Z"
        },
        {
          "name": "loc",
          "value": "41",
          "time": "2025-04-20T18:54:08Z"
        },
        {
          "name": "lloc",
          "value": "26",
          "time": "2025-04-20T18:54:08Z"
        },
        {
          "name": "sloc",
          "value": "35",
          "time": "2025-04-20T18:54:08Z"
        },
        {
          "name": "cloc",
          "value": "0",
          "time": "2025-04-20T18:54:08Z"
        },
        {
          "name": "dloc",
          "value": "0",
          "time": "2025-04-20T18:54:08Z"
        },
        {
          "name": "blank_lines",
          "value": "6",
          "time": "2025-04-20T18:54:08Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2025-04-20T18:54:08Z"
        },
        {
          "name": "theta_2",
          "value": "3",
          "time": "2025-04-27T04:48:21Z"
        },
        {
          "name": "N_1",
          "value": "4",
          "time": "2025-04-27T04:48:21Z"
        },
        {
          "name": "N_2",
          "value": "6",
          "time": "2025-04-27T04:48:21Z"
        },
        {
          "name": "loc",
          "value": "64",
          "time": "2025-04-27T04:48:21Z"
        },
        {
          "name": "lloc",
          "value": "39",
          "time": "2025-04-27T04:48:21Z"
        },
        {
          "name": "sloc",
          "value": "54",
          "time": "2025-04-27T04:48:21Z"
        },
        {
          "name": "blank_lines",
          "value": "10",
          "time": "2025-04-27T04:48:21Z"
        },
        {
          "name": "pylint_score",
          "value": "0.28900000000000003",
          "time": "2025-04-27T04:48:21Z"
        }
      ],
      "relationships": [
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "1b09afcf548e2783fe0635093c39f0e675e684a8",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "app/agent/providers/openai.py"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "app/agent/strategies/base.py",
          "time": "2025-04-20T18:54:08Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2025-04-20T18:54:08Z"
        },
        {
          "name": "theta_1",
          "value": "0",
          "time": "2025-04-20T18:54:08Z"
        },
        {
          "name": "theta_2",
          "value": "0",
          "time": "2025-04-20T18:54:08Z"
        },
        {
          "name": "N_1",
          "value": "0",
          "time": "2025-04-20T18:54:08Z"
        },
        {
          "name": "N_2",
          "value": "0",
          "time": "2025-04-20T18:54:08Z"
        },
        {
          "name": "loc",
          "value": "23",
          "time": "2025-04-20T18:54:08Z"
        },
        {
          "name": "lloc",
          "value": "8",
          "time": "2025-04-20T18:54:08Z"
        },
        {
          "name": "sloc",
          "value": "9",
          "time": "2025-04-20T18:54:08Z"
        },
        {
          "name": "cloc",
          "value": "0",
          "time": "2025-04-20T18:54:08Z"
        },
        {
          "name": "dloc",
          "value": "9",
          "time": "2025-04-20T18:54:08Z"
        },
        {
          "name": "blank_lines",
          "value": "5",
          "time": "2025-04-20T18:54:08Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2025-04-20T18:54:08Z"
        }
      ],
      "relationships": [
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "f72b58eb67965d5b4610c5b21f1a4ae9d59c1efb",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "app/agent/strategies/base.py"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "app/agent/strategies/wrapper.py",
          "time": "2025-04-20T18:54:08Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2025-04-20T18:54:08Z"
        },
        {
          "name": "theta_1",
          "value": "0",
          "time": "2025-04-20T18:54:08Z"
        },
        {
          "name": "theta_2",
          "value": "0",
          "time": "2025-04-20T18:54:08Z"
        },
        {
          "name": "N_1",
          "value": "0",
          "time": "2025-04-20T18:54:08Z"
        },
        {
          "name": "N_2",
          "value": "0",
          "time": "2025-04-20T18:54:08Z"
        },
        {
          "name": "loc",
          "value": "26",
          "time": "2025-04-20T18:54:08Z"
        },
        {
          "name": "lloc",
          "value": "16",
          "time": "2025-04-20T18:54:08Z"
        },
        {
          "name": "sloc",
          "value": "19",
          "time": "2025-04-20T18:54:08Z"
        },
        {
          "name": "cloc",
          "value": "0",
          "time": "2025-04-20T18:54:08Z"
        },
        {
          "name": "dloc",
          "value": "3",
          "time": "2025-04-20T18:54:08Z"
        },
        {
          "name": "blank_lines",
          "value": "4",
          "time": "2025-04-20T18:54:08Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2025-04-20T18:54:08Z"
        },
        {
          "name": "loc",
          "value": "28",
          "time": "2025-04-25T07:37:29Z"
        },
        {
          "name": "lloc",
          "value": "18",
          "time": "2025-04-25T07:37:29Z"
        },
        {
          "name": "sloc",
          "value": "21",
          "time": "2025-04-25T07:37:29Z"
        },
        {
          "name": "loc",
          "value": "29",
          "time": "2025-04-26T17:13:49Z"
        },
        {
          "name": "blank_lines",
          "value": "5",
          "time": "2025-04-26T17:13:49Z"
        },
        {
          "name": "loc",
          "value": "48",
          "time": "2025-04-27T17:22:40Z"
        },
        {
          "name": "lloc",
          "value": "29",
          "time": "2025-04-27T17:22:40Z"
        },
        {
          "name": "sloc",
          "value": "35",
          "time": "2025-04-27T17:22:40Z"
        },
        {
          "name": "dloc",
          "value": "6",
          "time": "2025-04-27T17:22:40Z"
        },
        {
          "name": "blank_lines",
          "value": "7",
          "time": "2025-04-27T17:22:40Z"
        },
        {
          "name": "theta_1",
          "value": "2",
          "time": "2025-04-27T19:52:51Z"
        },
        {
          "name": "theta_2",
          "value": "5",
          "time": "2025-04-27T19:52:51Z"
        },
        {
          "name": "N_1",
          "value": "3",
          "time": "2025-04-27T19:52:51Z"
        },
        {
          "name": "N_2",
          "value": "6",
          "time": "2025-04-27T19:52:51Z"
        },
        {
          "name": "loc",
          "value": "51",
          "time": "2025-04-27T19:52:51Z"
        },
        {
          "name": "lloc",
          "value": "30",
          "time": "2025-04-27T19:52:51Z"
        },
        {
          "name": "sloc",
          "value": "38",
          "time": "2025-04-27T19:52:51Z"
        },
        {
          "name": "pylint_score",
          "value": "0.11100000000000002",
          "time": "2025-04-27T17:22:40Z"
        },
        {
          "name": "pylint_score",
          "value": "0.10700000000000001",
          "time": "2025-04-27T19:52:51Z"
        }
      ],
      "relationships": [
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "a6c58e0dc4daeb36bc2d410cfc26ad2786a591bd",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "app/agent/strategies/wrapper.py"
    },
    {
      "type": "commit",
      "attributes": [
        {
          "name": "message",
          "value": "issue-324 | agent and llm call implementation",
          "time": "2025-04-20T18:54:08Z"
        },
        {
          "name": "description",
          "value": "",
          "time": "2025-04-20T18:54:08Z"
        },
        {
          "name": "to",
          "value": "['Resume-Matcher:(HEAD detached at fc46d27)', 'Resume-Matcher:main']",
          "time": "2025-04-20T18:54:08Z"
        }
      ],
      "relationships": [
        {
          "objectId": "app/agent/__init__.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/agent/exceptions.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/agent/manager.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/agent/providers/base.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/agent/providers/ollama.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/agent/providers/openai.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/agent/strategies/base.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/agent/strategies/wrapper.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "requirements.txt",
          "qualifier": "aggregates"
        },
        {
          "objectId": "6816ac238638f06e3234c53192a1a0d71ef85877",
          "qualifier": "is-child-of"
        },
        {
          "objectId": "0.9339011260668201",
          "qualifier": "commit_mi"
        },
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "0.09735483870967741",
          "qualifier": "commit_pylint"
        }
      ],
      "id": "f72b58eb67965d5b4610c5b21f1a4ae9d59c1efb"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "app/prompt/__init__.py",
          "time": "2025-04-24T17:41:52Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2025-04-24T17:41:52Z"
        },
        {
          "name": "theta_1",
          "value": "0",
          "time": "2025-04-24T17:41:52Z"
        },
        {
          "name": "theta_2",
          "value": "0",
          "time": "2025-04-24T17:41:52Z"
        },
        {
          "name": "N_1",
          "value": "0",
          "time": "2025-04-24T17:41:52Z"
        },
        {
          "name": "N_2",
          "value": "0",
          "time": "2025-04-24T17:41:52Z"
        },
        {
          "name": "loc",
          "value": "4",
          "time": "2025-04-24T17:41:52Z"
        },
        {
          "name": "lloc",
          "value": "3",
          "time": "2025-04-24T17:41:52Z"
        },
        {
          "name": "sloc",
          "value": "3",
          "time": "2025-04-24T17:41:52Z"
        },
        {
          "name": "cloc",
          "value": "0",
          "time": "2025-04-24T17:41:52Z"
        },
        {
          "name": "dloc",
          "value": "0",
          "time": "2025-04-24T17:41:52Z"
        },
        {
          "name": "blank_lines",
          "value": "1",
          "time": "2025-04-24T17:41:52Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2025-04-24T17:41:52Z"
        }
      ],
      "relationships": [
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "bc37099b67868a928132f63b6e2ad0e56e5c9b47",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "app/prompt/__init__.py"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "app/prompt/base.py",
          "time": "2025-04-24T17:41:52Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2025-04-24T17:41:52Z"
        },
        {
          "name": "theta_1",
          "value": "2",
          "time": "2025-04-24T17:41:52Z"
        },
        {
          "name": "theta_2",
          "value": "4",
          "time": "2025-04-24T17:41:52Z"
        },
        {
          "name": "N_1",
          "value": "2",
          "time": "2025-04-24T17:41:52Z"
        },
        {
          "name": "N_2",
          "value": "4",
          "time": "2025-04-24T17:41:52Z"
        },
        {
          "name": "loc",
          "value": "31",
          "time": "2025-04-24T17:41:52Z"
        },
        {
          "name": "lloc",
          "value": "23",
          "time": "2025-04-24T17:41:52Z"
        },
        {
          "name": "sloc",
          "value": "24",
          "time": "2025-04-24T17:41:52Z"
        },
        {
          "name": "cloc",
          "value": "0",
          "time": "2025-04-24T17:41:52Z"
        },
        {
          "name": "dloc",
          "value": "0",
          "time": "2025-04-24T17:41:52Z"
        },
        {
          "name": "blank_lines",
          "value": "7",
          "time": "2025-04-24T17:41:52Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2025-04-24T17:41:52Z"
        }
      ],
      "relationships": [
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "bc37099b67868a928132f63b6e2ad0e56e5c9b47",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "app/prompt/base.py"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "app/prompt/structured_resume.py",
          "time": "2025-04-24T17:41:52Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2025-04-24T17:41:52Z"
        },
        {
          "name": "theta_1",
          "value": "0",
          "time": "2025-04-24T17:41:52Z"
        },
        {
          "name": "theta_2",
          "value": "0",
          "time": "2025-04-24T17:41:52Z"
        },
        {
          "name": "N_1",
          "value": "0",
          "time": "2025-04-24T17:41:52Z"
        },
        {
          "name": "N_2",
          "value": "0",
          "time": "2025-04-24T17:41:52Z"
        },
        {
          "name": "loc",
          "value": "19",
          "time": "2025-04-24T17:41:52Z"
        },
        {
          "name": "lloc",
          "value": "1",
          "time": "2025-04-24T17:41:52Z"
        },
        {
          "name": "sloc",
          "value": "16",
          "time": "2025-04-24T17:41:52Z"
        },
        {
          "name": "cloc",
          "value": "0",
          "time": "2025-04-24T17:41:52Z"
        },
        {
          "name": "dloc",
          "value": "0",
          "time": "2025-04-24T17:41:52Z"
        },
        {
          "name": "blank_lines",
          "value": "3",
          "time": "2025-04-24T17:41:52Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2025-04-24T17:41:52Z"
        },
        {
          "name": "loc",
          "value": "20",
          "time": "2025-04-25T07:37:29Z"
        },
        {
          "name": "sloc",
          "value": "17",
          "time": "2025-04-25T07:37:29Z"
        }
      ],
      "relationships": [
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "bc5004c96a45b00850aad311678665e7b7576427",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "app/prompt/structured_resume.py"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "app/schemas/json/__init__.py",
          "time": "2025-04-24T17:41:52Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2025-04-24T17:41:52Z"
        },
        {
          "name": "theta_1",
          "value": "0",
          "time": "2025-04-24T17:41:52Z"
        },
        {
          "name": "theta_2",
          "value": "0",
          "time": "2025-04-24T17:41:52Z"
        },
        {
          "name": "N_1",
          "value": "0",
          "time": "2025-04-24T17:41:52Z"
        },
        {
          "name": "N_2",
          "value": "0",
          "time": "2025-04-24T17:41:52Z"
        },
        {
          "name": "loc",
          "value": "4",
          "time": "2025-04-24T17:41:52Z"
        },
        {
          "name": "lloc",
          "value": "3",
          "time": "2025-04-24T17:41:52Z"
        },
        {
          "name": "sloc",
          "value": "3",
          "time": "2025-04-24T17:41:52Z"
        },
        {
          "name": "cloc",
          "value": "0",
          "time": "2025-04-24T17:41:52Z"
        },
        {
          "name": "dloc",
          "value": "0",
          "time": "2025-04-24T17:41:52Z"
        },
        {
          "name": "blank_lines",
          "value": "1",
          "time": "2025-04-24T17:41:52Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2025-04-24T17:41:52Z"
        }
      ],
      "relationships": [
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "bc37099b67868a928132f63b6e2ad0e56e5c9b47",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "app/schemas/json/__init__.py"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "app/schemas/json/base.py",
          "time": "2025-04-24T17:41:52Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2025-04-24T17:41:52Z"
        },
        {
          "name": "theta_1",
          "value": "2",
          "time": "2025-04-24T17:41:52Z"
        },
        {
          "name": "theta_2",
          "value": "4",
          "time": "2025-04-24T17:41:52Z"
        },
        {
          "name": "N_1",
          "value": "2",
          "time": "2025-04-24T17:41:52Z"
        },
        {
          "name": "N_2",
          "value": "4",
          "time": "2025-04-24T17:41:52Z"
        },
        {
          "name": "loc",
          "value": "31",
          "time": "2025-04-24T17:41:52Z"
        },
        {
          "name": "lloc",
          "value": "23",
          "time": "2025-04-24T17:41:52Z"
        },
        {
          "name": "sloc",
          "value": "24",
          "time": "2025-04-24T17:41:52Z"
        },
        {
          "name": "cloc",
          "value": "0",
          "time": "2025-04-24T17:41:52Z"
        },
        {
          "name": "dloc",
          "value": "0",
          "time": "2025-04-24T17:41:52Z"
        },
        {
          "name": "blank_lines",
          "value": "7",
          "time": "2025-04-24T17:41:52Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2025-04-24T17:41:52Z"
        },
        {
          "name": "pylint_score",
          "value": "0.45499999999999996",
          "time": "2025-04-25T07:37:29Z"
        }
      ],
      "relationships": [
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "bc5004c96a45b00850aad311678665e7b7576427",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "app/schemas/json/base.py"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "app/schemas/json/structured_resume.py",
          "time": "2025-04-24T17:41:52Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2025-04-24T17:41:52Z"
        },
        {
          "name": "theta_1",
          "value": "0",
          "time": "2025-04-24T17:41:52Z"
        },
        {
          "name": "theta_2",
          "value": "0",
          "time": "2025-04-24T17:41:52Z"
        },
        {
          "name": "N_1",
          "value": "0",
          "time": "2025-04-24T17:41:52Z"
        },
        {
          "name": "N_2",
          "value": "0",
          "time": "2025-04-24T17:41:52Z"
        },
        {
          "name": "loc",
          "value": "56",
          "time": "2025-04-24T17:41:52Z"
        },
        {
          "name": "lloc",
          "value": "2",
          "time": "2025-04-24T17:41:52Z"
        },
        {
          "name": "sloc",
          "value": "56",
          "time": "2025-04-24T17:41:52Z"
        },
        {
          "name": "cloc",
          "value": "0",
          "time": "2025-04-24T17:41:52Z"
        },
        {
          "name": "dloc",
          "value": "0",
          "time": "2025-04-24T17:41:52Z"
        },
        {
          "name": "blank_lines",
          "value": "0",
          "time": "2025-04-24T17:41:52Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2025-04-24T17:41:52Z"
        }
      ],
      "relationships": [
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "bc37099b67868a928132f63b6e2ad0e56e5c9b47",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "app/schemas/json/structured_resume.py"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "app/schemas/pydantic/job.py",
          "time": "2025-04-24T17:41:52Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2025-04-24T17:41:52Z"
        },
        {
          "name": "theta_1",
          "value": "0",
          "time": "2025-04-24T17:41:52Z"
        },
        {
          "name": "theta_2",
          "value": "0",
          "time": "2025-04-24T17:41:52Z"
        },
        {
          "name": "N_1",
          "value": "0",
          "time": "2025-04-24T17:41:52Z"
        },
        {
          "name": "N_2",
          "value": "0",
          "time": "2025-04-24T17:41:52Z"
        },
        {
          "name": "loc",
          "value": "0",
          "time": "2025-04-24T17:41:52Z"
        },
        {
          "name": "lloc",
          "value": "0",
          "time": "2025-04-24T17:41:52Z"
        },
        {
          "name": "sloc",
          "value": "0",
          "time": "2025-04-24T17:41:52Z"
        },
        {
          "name": "cloc",
          "value": "0",
          "time": "2025-04-24T17:41:52Z"
        },
        {
          "name": "dloc",
          "value": "0",
          "time": "2025-04-24T17:41:52Z"
        },
        {
          "name": "blank_lines",
          "value": "0",
          "time": "2025-04-24T17:41:52Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2025-04-24T17:41:52Z"
        },
        {
          "name": "loc",
          "value": "10",
          "time": "2025-04-26T17:13:49Z"
        },
        {
          "name": "lloc",
          "value": "8",
          "time": "2025-04-26T17:13:49Z"
        },
        {
          "name": "sloc",
          "value": "8",
          "time": "2025-04-26T17:13:49Z"
        },
        {
          "name": "blank_lines",
          "value": "2",
          "time": "2025-04-26T17:13:49Z"
        },
        {
          "name": "pylint_score",
          "value": "0.667",
          "time": "2025-04-26T17:13:49Z"
        }
      ],
      "relationships": [
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "282aff8daa3dd6e509ea6592c2eef87376801ef7",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "app/schemas/pydantic/job.py"
    },
    {
      "type": "commit",
      "attributes": [
        {
          "name": "message",
          "value": "ISSUE-324 | resume service layer for agent manager",
          "time": "2025-04-24T17:41:52Z"
        },
        {
          "name": "description",
          "value": "",
          "time": "2025-04-24T17:41:52Z"
        },
        {
          "name": "to",
          "value": "['Resume-Matcher:(HEAD detached at fc46d27)', 'Resume-Matcher:main']",
          "time": "2025-04-24T17:41:52Z"
        }
      ],
      "relationships": [
        {
          "objectId": "app/api/router/v1/job.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/base.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/core/__init__.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/core/config.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/prompt/__init__.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/prompt/base.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/prompt/structured_resume.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/schemas/json/__init__.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/schemas/json/base.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/schemas/json/structured_resume.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/schemas/pydantic/job.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/services/resume_service.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "5455337a6909c7db1d2b2313ebd9ceafbf509d93",
          "qualifier": "is-child-of"
        },
        {
          "objectId": "0.9226551485268149",
          "qualifier": "commit_mi"
        },
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "0.10435135135135135",
          "qualifier": "commit_pylint"
        }
      ],
      "id": "bc37099b67868a928132f63b6e2ad0e56e5c9b47"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "app/schemas/pydantic/__init__.py",
          "time": "2025-04-25T07:37:29Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2025-04-25T07:37:29Z"
        },
        {
          "name": "theta_1",
          "value": "0",
          "time": "2025-04-25T07:37:29Z"
        },
        {
          "name": "theta_2",
          "value": "0",
          "time": "2025-04-25T07:37:29Z"
        },
        {
          "name": "N_1",
          "value": "0",
          "time": "2025-04-25T07:37:29Z"
        },
        {
          "name": "N_2",
          "value": "0",
          "time": "2025-04-25T07:37:29Z"
        },
        {
          "name": "loc",
          "value": "4",
          "time": "2025-04-25T07:37:29Z"
        },
        {
          "name": "lloc",
          "value": "3",
          "time": "2025-04-25T07:37:29Z"
        },
        {
          "name": "sloc",
          "value": "3",
          "time": "2025-04-25T07:37:29Z"
        },
        {
          "name": "cloc",
          "value": "0",
          "time": "2025-04-25T07:37:29Z"
        },
        {
          "name": "dloc",
          "value": "0",
          "time": "2025-04-25T07:37:29Z"
        },
        {
          "name": "blank_lines",
          "value": "1",
          "time": "2025-04-25T07:37:29Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2025-04-25T07:37:29Z"
        },
        {
          "name": "loc",
          "value": "5",
          "time": "2025-04-25T18:12:52Z"
        },
        {
          "name": "lloc",
          "value": "4",
          "time": "2025-04-25T18:12:52Z"
        },
        {
          "name": "sloc",
          "value": "4",
          "time": "2025-04-25T18:12:52Z"
        },
        {
          "name": "loc",
          "value": "11",
          "time": "2025-04-27T19:52:51Z"
        },
        {
          "name": "lloc",
          "value": "5",
          "time": "2025-04-27T19:52:51Z"
        },
        {
          "name": "sloc",
          "value": "10",
          "time": "2025-04-27T19:52:51Z"
        }
      ],
      "relationships": [
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "a6c58e0dc4daeb36bc2d410cfc26ad2786a591bd",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "app/schemas/pydantic/__init__.py"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "app/schemas/pydantic/structured_resume.py",
          "time": "2025-04-25T07:37:29Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2025-04-25T07:37:29Z"
        },
        {
          "name": "theta_1",
          "value": "0",
          "time": "2025-04-25T07:37:29Z"
        },
        {
          "name": "theta_2",
          "value": "0",
          "time": "2025-04-25T07:37:29Z"
        },
        {
          "name": "N_1",
          "value": "0",
          "time": "2025-04-25T07:37:29Z"
        },
        {
          "name": "N_2",
          "value": "0",
          "time": "2025-04-25T07:37:29Z"
        },
        {
          "name": "loc",
          "value": "80",
          "time": "2025-04-25T07:37:29Z"
        },
        {
          "name": "lloc",
          "value": "101",
          "time": "2025-04-25T07:37:29Z"
        },
        {
          "name": "sloc",
          "value": "63",
          "time": "2025-04-25T07:37:29Z"
        },
        {
          "name": "cloc",
          "value": "0",
          "time": "2025-04-25T07:37:29Z"
        },
        {
          "name": "dloc",
          "value": "0",
          "time": "2025-04-25T07:37:29Z"
        },
        {
          "name": "blank_lines",
          "value": "17",
          "time": "2025-04-25T07:37:29Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2025-04-25T07:37:29Z"
        }
      ],
      "relationships": [
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "bc5004c96a45b00850aad311678665e7b7576427",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "app/schemas/pydantic/structured_resume.py"
    },
    {
      "type": "commit",
      "attributes": [
        {
          "name": "message",
          "value": "ISSUE-324 | resume service layer json extraction and feeding into processed resume table",
          "time": "2025-04-25T07:37:29Z"
        },
        {
          "name": "description",
          "value": "",
          "time": "2025-04-25T07:37:29Z"
        },
        {
          "name": "to",
          "value": "['Resume-Matcher:(HEAD detached at fc46d27)', 'Resume-Matcher:main']",
          "time": "2025-04-25T07:37:29Z"
        }
      ],
      "relationships": [
        {
          "objectId": "app.db",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/agent/providers/ollama.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/agent/strategies/wrapper.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/api/router/v1/resume.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/models/job.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/models/resume.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/models/user.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/prompt/structured_resume.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/schemas/json/base.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/schemas/pydantic/__init__.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/schemas/pydantic/structured_resume.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/services/resume_service.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "bc37099b67868a928132f63b6e2ad0e56e5c9b47",
          "qualifier": "is-child-of"
        },
        {
          "objectId": "0.9228953403353821",
          "qualifier": "commit_mi"
        },
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "0.12364102564102564",
          "qualifier": "commit_pylint"
        }
      ],
      "id": "bc5004c96a45b00850aad311678665e7b7576427"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "app/prompt/structured_job.py",
          "time": "2025-04-25T18:12:52Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2025-04-25T18:12:52Z"
        },
        {
          "name": "theta_1",
          "value": "0",
          "time": "2025-04-25T18:12:52Z"
        },
        {
          "name": "theta_2",
          "value": "0",
          "time": "2025-04-25T18:12:52Z"
        },
        {
          "name": "N_1",
          "value": "0",
          "time": "2025-04-25T18:12:52Z"
        },
        {
          "name": "N_2",
          "value": "0",
          "time": "2025-04-25T18:12:52Z"
        },
        {
          "name": "loc",
          "value": "18",
          "time": "2025-04-25T18:12:52Z"
        },
        {
          "name": "lloc",
          "value": "1",
          "time": "2025-04-25T18:12:52Z"
        },
        {
          "name": "sloc",
          "value": "15",
          "time": "2025-04-25T18:12:52Z"
        },
        {
          "name": "cloc",
          "value": "0",
          "time": "2025-04-25T18:12:52Z"
        },
        {
          "name": "dloc",
          "value": "0",
          "time": "2025-04-25T18:12:52Z"
        },
        {
          "name": "blank_lines",
          "value": "3",
          "time": "2025-04-25T18:12:52Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2025-04-25T18:12:52Z"
        }
      ],
      "relationships": [
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "a8a0935bb1bc93441fd8153cbb8960a0e79a400a",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "app/prompt/structured_job.py"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "app/schemas/json/structured_job.py",
          "time": "2025-04-25T18:12:52Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2025-04-25T18:12:52Z"
        },
        {
          "name": "theta_1",
          "value": "0",
          "time": "2025-04-25T18:12:52Z"
        },
        {
          "name": "theta_2",
          "value": "0",
          "time": "2025-04-25T18:12:52Z"
        },
        {
          "name": "N_1",
          "value": "0",
          "time": "2025-04-25T18:12:52Z"
        },
        {
          "name": "N_2",
          "value": "0",
          "time": "2025-04-25T18:12:52Z"
        },
        {
          "name": "loc",
          "value": "49",
          "time": "2025-04-25T18:12:52Z"
        },
        {
          "name": "lloc",
          "value": "2",
          "time": "2025-04-25T18:12:52Z"
        },
        {
          "name": "sloc",
          "value": "49",
          "time": "2025-04-25T18:12:52Z"
        },
        {
          "name": "cloc",
          "value": "0",
          "time": "2025-04-25T18:12:52Z"
        },
        {
          "name": "dloc",
          "value": "0",
          "time": "2025-04-25T18:12:52Z"
        },
        {
          "name": "blank_lines",
          "value": "0",
          "time": "2025-04-25T18:12:52Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2025-04-25T18:12:52Z"
        }
      ],
      "relationships": [
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "a8a0935bb1bc93441fd8153cbb8960a0e79a400a",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "app/schemas/json/structured_job.py"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "app/schemas/pydantic/structured_job.py",
          "time": "2025-04-25T18:12:52Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2025-04-25T18:12:52Z"
        },
        {
          "name": "theta_1",
          "value": "1",
          "time": "2025-04-25T18:12:52Z"
        },
        {
          "name": "theta_2",
          "value": "2",
          "time": "2025-04-25T18:12:52Z"
        },
        {
          "name": "N_1",
          "value": "1",
          "time": "2025-04-25T18:12:52Z"
        },
        {
          "name": "N_2",
          "value": "2",
          "time": "2025-04-25T18:12:52Z"
        },
        {
          "name": "loc",
          "value": "73",
          "time": "2025-04-25T18:12:52Z"
        },
        {
          "name": "lloc",
          "value": "73",
          "time": "2025-04-25T18:12:52Z"
        },
        {
          "name": "sloc",
          "value": "59",
          "time": "2025-04-25T18:12:52Z"
        },
        {
          "name": "cloc",
          "value": "0",
          "time": "2025-04-25T18:12:52Z"
        },
        {
          "name": "dloc",
          "value": "0",
          "time": "2025-04-25T18:12:52Z"
        },
        {
          "name": "blank_lines",
          "value": "14",
          "time": "2025-04-25T18:12:52Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2025-04-25T18:12:52Z"
        },
        {
          "name": "N_1",
          "value": "2",
          "time": "2025-04-28T16:30:05Z"
        },
        {
          "name": "N_2",
          "value": "4",
          "time": "2025-04-28T16:30:05Z"
        },
        {
          "name": "loc",
          "value": "101",
          "time": "2025-04-28T16:30:05Z"
        },
        {
          "name": "lloc",
          "value": "99",
          "time": "2025-04-28T16:30:05Z"
        },
        {
          "name": "sloc",
          "value": "73",
          "time": "2025-04-28T16:30:05Z"
        },
        {
          "name": "blank_lines",
          "value": "24",
          "time": "2025-04-28T16:30:05Z"
        },
        {
          "name": "pylint_score",
          "value": "0.667",
          "time": "2025-04-26T17:13:49Z"
        },
        {
          "name": "pylint_score",
          "value": "0.8310000000000001",
          "time": "2025-04-28T16:30:05Z"
        }
      ],
      "relationships": [
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "6a4161d1cd73ac976c7542dc97997a7cef6beef0",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "app/schemas/pydantic/structured_job.py"
    },
    {
      "type": "commit",
      "attributes": [
        {
          "name": "message",
          "value": "ISSUE-324 | job service layer json extraction and feeding into processed job table",
          "time": "2025-04-25T18:12:52Z"
        },
        {
          "name": "description",
          "value": "",
          "time": "2025-04-25T18:12:52Z"
        },
        {
          "name": "to",
          "value": "['Resume-Matcher:(HEAD detached at fc46d27)', 'Resume-Matcher:main']",
          "time": "2025-04-25T18:12:52Z"
        }
      ],
      "relationships": [
        {
          "objectId": "app.db",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/api/router/v1/job.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/models/__init__.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/models/job.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/prompt/structured_job.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/schemas/json/structured_job.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/schemas/pydantic/__init__.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/schemas/pydantic/structured_job.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/services/job_service.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "1195251d62964abdd5fa8c23d95f3729fb6e57d6",
          "qualifier": "is-child-of"
        },
        {
          "objectId": "0.9125285377350646",
          "qualifier": "commit_mi"
        },
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "0.12976190476190477",
          "qualifier": "commit_pylint"
        }
      ],
      "id": "a8a0935bb1bc93441fd8153cbb8960a0e79a400a"
    },
    {
      "type": "commit",
      "attributes": [
        {
          "name": "message",
          "value": "ISSUE-322 | async database layer",
          "time": "2025-04-26T17:13:49Z"
        },
        {
          "name": "description",
          "value": "",
          "time": "2025-04-26T17:13:49Z"
        },
        {
          "name": "to",
          "value": "['Resume-Matcher:(HEAD detached at fc46d27)', 'Resume-Matcher:main']",
          "time": "2025-04-26T17:13:49Z"
        }
      ],
      "relationships": [
        {
          "objectId": "app.db",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/agent/strategies/wrapper.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/api/__init__.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/api/middleware.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/api/router/health.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/api/router/v1/__init__.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/api/router/v1/job.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/api/router/v1/resume.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/base.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/core/__init__.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/core/config.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/core/database.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/main.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/models/job.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/models/resume.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/schemas/pydantic/job.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/schemas/pydantic/structured_job.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/services/job_service.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/services/resume_service.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "requirements.txt",
          "qualifier": "aggregates"
        },
        {
          "objectId": "9f69d00f3b4fd436a9ca072ee9a050b991f80c05",
          "qualifier": "is-child-of"
        },
        {
          "objectId": "0.9133926334672612",
          "qualifier": "commit_mi"
        },
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "0.1458780487804878",
          "qualifier": "commit_pylint"
        }
      ],
      "id": "282aff8daa3dd6e509ea6592c2eef87376801ef7"
    },
    {
      "type": "commit",
      "attributes": [
        {
          "name": "message",
          "value": "ISSUE-322 | async database layer",
          "time": "2025-04-26T17:23:36Z"
        },
        {
          "name": "description",
          "value": "",
          "time": "2025-04-26T17:23:36Z"
        },
        {
          "name": "to",
          "value": "['Resume-Matcher:(HEAD detached at fc46d27)', 'Resume-Matcher:main']",
          "time": "2025-04-26T17:23:36Z"
        }
      ],
      "relationships": [
        {
          "objectId": "app/api/router/health.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "282aff8daa3dd6e509ea6592c2eef87376801ef7",
          "qualifier": "is-child-of"
        },
        {
          "objectId": "0.9133926334672612",
          "qualifier": "commit_mi"
        },
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "0.1458780487804878",
          "qualifier": "commit_pylint"
        }
      ],
      "id": "aaca47af7534970c1d20e7b19a5ec493172e5a2d"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "app/services/scoring_service.py",
          "time": "2025-04-27T04:48:21Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2025-04-27T04:48:21Z"
        },
        {
          "name": "theta_1",
          "value": "2",
          "time": "2025-04-27T04:48:21Z"
        },
        {
          "name": "theta_2",
          "value": "2",
          "time": "2025-04-27T04:48:21Z"
        },
        {
          "name": "N_1",
          "value": "2",
          "time": "2025-04-27T04:48:21Z"
        },
        {
          "name": "N_2",
          "value": "3",
          "time": "2025-04-27T04:48:21Z"
        },
        {
          "name": "loc",
          "value": "48",
          "time": "2025-04-27T04:48:21Z"
        },
        {
          "name": "lloc",
          "value": "26",
          "time": "2025-04-27T04:48:21Z"
        },
        {
          "name": "sloc",
          "value": "30",
          "time": "2025-04-27T04:48:21Z"
        },
        {
          "name": "cloc",
          "value": "0",
          "time": "2025-04-27T04:48:21Z"
        },
        {
          "name": "dloc",
          "value": "9",
          "time": "2025-04-27T04:48:21Z"
        },
        {
          "name": "blank_lines",
          "value": "9",
          "time": "2025-04-27T04:48:21Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2025-04-27T04:48:21Z"
        },
        {
          "name": "theta_1",
          "value": "6",
          "time": "2025-04-27T07:07:31Z"
        },
        {
          "name": "theta_2",
          "value": "15",
          "time": "2025-04-27T07:07:31Z"
        },
        {
          "name": "N_1",
          "value": "13",
          "time": "2025-04-27T07:07:31Z"
        },
        {
          "name": "N_2",
          "value": "22",
          "time": "2025-04-27T07:07:31Z"
        },
        {
          "name": "loc",
          "value": "132",
          "time": "2025-04-27T07:07:31Z"
        },
        {
          "name": "lloc",
          "value": "67",
          "time": "2025-04-27T07:07:31Z"
        },
        {
          "name": "sloc",
          "value": "88",
          "time": "2025-04-27T07:07:31Z"
        },
        {
          "name": "dloc",
          "value": "21",
          "time": "2025-04-27T07:07:31Z"
        },
        {
          "name": "blank_lines",
          "value": "23",
          "time": "2025-04-27T07:07:31Z"
        },
        {
          "name": "pylint_score",
          "value": "0.383",
          "time": "2025-04-27T07:07:31Z"
        }
      ],
      "relationships": [
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "0224dec3a44db45105035a2cf48cf7302a138d89",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "app/services/scoring_service.py"
    },
    {
      "type": "commit",
      "attributes": [
        {
          "name": "message",
          "value": "ISSUE-325 | embedding and scoring",
          "time": "2025-04-27T04:48:21Z"
        },
        {
          "name": "description",
          "value": "",
          "time": "2025-04-27T04:48:21Z"
        },
        {
          "name": "to",
          "value": "['Resume-Matcher:(HEAD detached at fc46d27)', 'Resume-Matcher:main']",
          "time": "2025-04-27T04:48:21Z"
        }
      ],
      "relationships": [
        {
          "objectId": "app/agent/__init__.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/agent/manager.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/agent/providers/base.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/agent/providers/ollama.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/agent/providers/openai.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/services/__init__.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/services/scoring_service.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "b252b3f927f45feda72b68386471c38334d07400",
          "qualifier": "is-child-of"
        },
        {
          "objectId": "0.909524786078587",
          "qualifier": "commit_mi"
        },
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "0.1445952380952381",
          "qualifier": "commit_pylint"
        }
      ],
      "id": "1b09afcf548e2783fe0635093c39f0e675e684a8"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "app/prompt/resume_improvement.py",
          "time": "2025-04-27T07:07:31Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2025-04-27T07:07:31Z"
        },
        {
          "name": "theta_1",
          "value": "0",
          "time": "2025-04-27T07:07:31Z"
        },
        {
          "name": "theta_2",
          "value": "0",
          "time": "2025-04-27T07:07:31Z"
        },
        {
          "name": "N_1",
          "value": "0",
          "time": "2025-04-27T07:07:31Z"
        },
        {
          "name": "N_2",
          "value": "0",
          "time": "2025-04-27T07:07:31Z"
        },
        {
          "name": "loc",
          "value": "26",
          "time": "2025-04-27T07:07:31Z"
        },
        {
          "name": "lloc",
          "value": "1",
          "time": "2025-04-27T07:07:31Z"
        },
        {
          "name": "sloc",
          "value": "19",
          "time": "2025-04-27T07:07:31Z"
        },
        {
          "name": "cloc",
          "value": "0",
          "time": "2025-04-27T07:07:31Z"
        },
        {
          "name": "dloc",
          "value": "0",
          "time": "2025-04-27T07:07:31Z"
        },
        {
          "name": "blank_lines",
          "value": "7",
          "time": "2025-04-27T07:07:31Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2025-04-27T07:07:31Z"
        },
        {
          "name": "loc",
          "value": "36",
          "time": "2025-04-27T17:22:40Z"
        },
        {
          "name": "sloc",
          "value": "30",
          "time": "2025-04-27T17:22:40Z"
        },
        {
          "name": "blank_lines",
          "value": "6",
          "time": "2025-04-27T17:22:40Z"
        }
      ],
      "relationships": [
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "8ac9c1298baf3508dbf99126c3e27d1e3b7e45da",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "app/prompt/resume_improvement.py"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "app/services/exceptions.py",
          "time": "2025-04-27T07:07:31Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2025-04-27T07:07:31Z"
        },
        {
          "name": "theta_1",
          "value": "2",
          "time": "2025-04-27T07:07:31Z"
        },
        {
          "name": "theta_2",
          "value": "6",
          "time": "2025-04-27T07:07:31Z"
        },
        {
          "name": "N_1",
          "value": "9",
          "time": "2025-04-27T07:07:31Z"
        },
        {
          "name": "N_2",
          "value": "12",
          "time": "2025-04-27T07:07:31Z"
        },
        {
          "name": "loc",
          "value": "53",
          "time": "2025-04-27T07:07:31Z"
        },
        {
          "name": "lloc",
          "value": "33",
          "time": "2025-04-27T07:07:31Z"
        },
        {
          "name": "sloc",
          "value": "29",
          "time": "2025-04-27T07:07:31Z"
        },
        {
          "name": "cloc",
          "value": "0",
          "time": "2025-04-27T07:07:31Z"
        },
        {
          "name": "dloc",
          "value": "12",
          "time": "2025-04-27T07:07:31Z"
        },
        {
          "name": "blank_lines",
          "value": "12",
          "time": "2025-04-27T07:07:31Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2025-04-27T07:07:31Z"
        },
        {
          "name": "theta_2",
          "value": "7",
          "time": "2025-04-27T19:52:51Z"
        },
        {
          "name": "N_1",
          "value": "12",
          "time": "2025-04-27T19:52:51Z"
        },
        {
          "name": "N_2",
          "value": "16",
          "time": "2025-04-27T19:52:51Z"
        },
        {
          "name": "loc",
          "value": "67",
          "time": "2025-04-27T19:52:51Z"
        },
        {
          "name": "lloc",
          "value": "42",
          "time": "2025-04-27T19:52:51Z"
        },
        {
          "name": "sloc",
          "value": "37",
          "time": "2025-04-27T19:52:51Z"
        },
        {
          "name": "dloc",
          "value": "15",
          "time": "2025-04-27T19:52:51Z"
        },
        {
          "name": "blank_lines",
          "value": "15",
          "time": "2025-04-27T19:52:51Z"
        },
        {
          "name": "pylint_score",
          "value": "0.9730000000000001",
          "time": "2025-04-27T19:52:51Z"
        }
      ],
      "relationships": [
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "a6c58e0dc4daeb36bc2d410cfc26ad2786a591bd",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "app/services/exceptions.py"
    },
    {
      "type": "commit",
      "attributes": [
        {
          "name": "message",
          "value": "calling function implementation",
          "time": "2025-04-27T07:07:31Z"
        },
        {
          "name": "description",
          "value": "",
          "time": "2025-04-27T07:07:31Z"
        },
        {
          "name": "to",
          "value": "['Resume-Matcher:(HEAD detached at fc46d27)', 'Resume-Matcher:main']",
          "time": "2025-04-27T07:07:31Z"
        }
      ],
      "relationships": [
        {
          "objectId": "app/prompt/resume_improvement.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/services/exceptions.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/services/scoring_service.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "1b09afcf548e2783fe0635093c39f0e675e684a8",
          "qualifier": "is-child-of"
        },
        {
          "objectId": "0.9046852747584616",
          "qualifier": "commit_mi"
        },
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "0.16868181818181818",
          "qualifier": "commit_pylint"
        }
      ],
      "id": "0224dec3a44db45105035a2cf48cf7302a138d89"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "app/services/scoring_improvement_service.py",
          "time": "2025-04-27T17:22:40Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2025-04-27T17:22:40Z"
        },
        {
          "name": "theta_1",
          "value": "9",
          "time": "2025-04-27T17:22:40Z"
        },
        {
          "name": "theta_2",
          "value": "22",
          "time": "2025-04-27T17:22:40Z"
        },
        {
          "name": "N_1",
          "value": "17",
          "time": "2025-04-27T17:22:40Z"
        },
        {
          "name": "N_2",
          "value": "30",
          "time": "2025-04-27T17:22:40Z"
        },
        {
          "name": "loc",
          "value": "168",
          "time": "2025-04-27T17:22:40Z"
        },
        {
          "name": "lloc",
          "value": "70",
          "time": "2025-04-27T17:22:40Z"
        },
        {
          "name": "sloc",
          "value": "121",
          "time": "2025-04-27T17:22:40Z"
        },
        {
          "name": "cloc",
          "value": "0",
          "time": "2025-04-27T17:22:40Z"
        },
        {
          "name": "dloc",
          "value": "21",
          "time": "2025-04-27T17:22:40Z"
        },
        {
          "name": "blank_lines",
          "value": "26",
          "time": "2025-04-27T17:22:40Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2025-04-27T17:22:40Z"
        },
        {
          "name": "loc",
          "value": "177",
          "time": "2025-04-27T19:52:51Z"
        },
        {
          "name": "lloc",
          "value": "74",
          "time": "2025-04-27T19:52:51Z"
        },
        {
          "name": "sloc",
          "value": "127",
          "time": "2025-04-27T19:52:51Z"
        },
        {
          "name": "blank_lines",
          "value": "29",
          "time": "2025-04-27T19:52:51Z"
        },
        {
          "name": "pylint_score",
          "value": "0.343",
          "time": "2025-04-27T19:52:51Z"
        }
      ],
      "relationships": [
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "a6c58e0dc4daeb36bc2d410cfc26ad2786a591bd",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "app/services/scoring_improvement_service.py"
    },
    {
      "type": "commit",
      "attributes": [
        {
          "name": "message",
          "value": "ISSUE-325 | scoring and improvements API",
          "time": "2025-04-27T17:22:40Z"
        },
        {
          "name": "description",
          "value": "",
          "time": "2025-04-27T17:22:40Z"
        },
        {
          "name": "to",
          "value": "['Resume-Matcher:(HEAD detached at fc46d27)', 'Resume-Matcher:main']",
          "time": "2025-04-27T17:22:40Z"
        }
      ],
      "relationships": [
        {
          "objectId": "app/agent/manager.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/agent/strategies/wrapper.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/api/router/v1/resume.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/prompt/resume_improvement.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/services/__init__.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/services/scoring_improvement_service.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "0224dec3a44db45105035a2cf48cf7302a138d89",
          "qualifier": "is-child-of"
        },
        {
          "objectId": "0.9024339583376088",
          "qualifier": "commit_mi"
        },
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "0.17290909090909093",
          "qualifier": "commit_pylint"
        }
      ],
      "id": "8ac9c1298baf3508dbf99126c3e27d1e3b7e45da"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "app/schemas/pydantic/resume_improvement.py",
          "time": "2025-04-27T19:52:51Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2025-04-27T19:52:51Z"
        },
        {
          "name": "theta_1",
          "value": "0",
          "time": "2025-04-27T19:52:51Z"
        },
        {
          "name": "theta_2",
          "value": "0",
          "time": "2025-04-27T19:52:51Z"
        },
        {
          "name": "N_1",
          "value": "0",
          "time": "2025-04-27T19:52:51Z"
        },
        {
          "name": "N_2",
          "value": "0",
          "time": "2025-04-27T19:52:51Z"
        },
        {
          "name": "loc",
          "value": "7",
          "time": "2025-04-27T19:52:51Z"
        },
        {
          "name": "lloc",
          "value": "7",
          "time": "2025-04-27T19:52:51Z"
        },
        {
          "name": "sloc",
          "value": "5",
          "time": "2025-04-27T19:52:51Z"
        },
        {
          "name": "cloc",
          "value": "0",
          "time": "2025-04-27T19:52:51Z"
        },
        {
          "name": "dloc",
          "value": "0",
          "time": "2025-04-27T19:52:51Z"
        },
        {
          "name": "blank_lines",
          "value": "2",
          "time": "2025-04-27T19:52:51Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2025-04-27T19:52:51Z"
        }
      ],
      "relationships": [
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "a6c58e0dc4daeb36bc2d410cfc26ad2786a591bd",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "app/schemas/pydantic/resume_improvement.py"
    },
    {
      "type": "commit",
      "attributes": [
        {
          "name": "message",
          "value": "ISSUE-325 | scoring and improvements API",
          "time": "2025-04-27T19:52:51Z"
        },
        {
          "name": "description",
          "value": "",
          "time": "2025-04-27T19:52:51Z"
        },
        {
          "name": "to",
          "value": "['Resume-Matcher:(HEAD detached at fc46d27)', 'Resume-Matcher:main']",
          "time": "2025-04-27T19:52:51Z"
        }
      ],
      "relationships": [
        {
          "objectId": "app.db",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/agent/manager.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/agent/providers/ollama.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/agent/strategies/wrapper.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/api/router/v1/resume.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/core/exceptions.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/schemas/pydantic/__init__.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/schemas/pydantic/resume_improvement.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/schemas/pydantic/structured_job.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/services/__init__.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/services/exceptions.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/services/job_service.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/services/scoring_improvement_service.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "8ac9c1298baf3508dbf99126c3e27d1e3b7e45da",
          "qualifier": "is-child-of"
        },
        {
          "objectId": "0.8976779199759806",
          "qualifier": "commit_mi"
        },
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "0.18935555555555558",
          "qualifier": "commit_pylint"
        }
      ],
      "id": "a6c58e0dc4daeb36bc2d410cfc26ad2786a591bd"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "app/services/score_improvement_service.py",
          "time": "2025-04-28T02:47:02Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2025-04-28T02:47:02Z"
        },
        {
          "name": "theta_1",
          "value": "0",
          "time": "2025-04-28T02:47:02Z"
        },
        {
          "name": "theta_2",
          "value": "0",
          "time": "2025-04-28T02:47:02Z"
        },
        {
          "name": "N_1",
          "value": "0",
          "time": "2025-04-28T02:47:02Z"
        },
        {
          "name": "N_2",
          "value": "0",
          "time": "2025-04-28T02:47:02Z"
        },
        {
          "name": "loc",
          "value": "0",
          "time": "2025-04-28T02:47:02Z"
        },
        {
          "name": "lloc",
          "value": "0",
          "time": "2025-04-28T02:47:02Z"
        },
        {
          "name": "sloc",
          "value": "0",
          "time": "2025-04-28T02:47:02Z"
        },
        {
          "name": "cloc",
          "value": "0",
          "time": "2025-04-28T02:47:02Z"
        },
        {
          "name": "dloc",
          "value": "0",
          "time": "2025-04-28T02:47:02Z"
        },
        {
          "name": "blank_lines",
          "value": "0",
          "time": "2025-04-28T02:47:02Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2025-04-28T02:47:02Z"
        },
        {
          "name": "theta_1",
          "value": "9",
          "time": "2025-05-02T10:30:12Z"
        },
        {
          "name": "theta_2",
          "value": "22",
          "time": "2025-05-02T10:30:12Z"
        },
        {
          "name": "N_1",
          "value": "17",
          "time": "2025-05-02T10:30:12Z"
        },
        {
          "name": "N_2",
          "value": "30",
          "time": "2025-05-02T10:30:12Z"
        },
        {
          "name": "loc",
          "value": "243",
          "time": "2025-05-02T10:30:12Z"
        },
        {
          "name": "lloc",
          "value": "107",
          "time": "2025-05-02T10:30:12Z"
        },
        {
          "name": "sloc",
          "value": "174",
          "time": "2025-05-02T10:30:12Z"
        },
        {
          "name": "dloc",
          "value": "24",
          "time": "2025-05-02T10:30:12Z"
        },
        {
          "name": "blank_lines",
          "value": "45",
          "time": "2025-05-02T10:30:12Z"
        },
        {
          "name": "pylint_score",
          "value": "0.45099999999999996",
          "time": "2025-05-02T10:30:12Z"
        }
      ],
      "relationships": [
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "3621cf8f138b26adf8d28ad8326b148017ce701c",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "app/services/score_improvement_service.py"
    },
    {
      "type": "commit",
      "attributes": [
        {
          "name": "message",
          "value": "ISSUE-325 | file name corrected",
          "time": "2025-04-28T02:47:02Z"
        },
        {
          "name": "description",
          "value": "",
          "time": "2025-04-28T02:47:02Z"
        },
        {
          "name": "to",
          "value": "['Resume-Matcher:(HEAD detached at fc46d27)', 'Resume-Matcher:main']",
          "time": "2025-04-28T02:47:02Z"
        }
      ],
      "relationships": [
        {
          "objectId": "app/services/__init__.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/services/score_improvement_service.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "1ceac982530edaa86bdc3b3e0dca08f916fae950",
          "qualifier": "is-child-of"
        },
        {
          "objectId": "0.9060209379507886",
          "qualifier": "commit_mi"
        },
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "0.18173333333333336",
          "qualifier": "commit_pylint"
        }
      ],
      "id": "cc6ef2a0d469f840109183e5d2454a24949cafb5"
    },
    {
      "type": "commit",
      "attributes": [
        {
          "name": "message",
          "value": "ISSUE-325 | await added before async session db commit",
          "time": "2025-04-28T15:13:55Z"
        },
        {
          "name": "description",
          "value": "",
          "time": "2025-04-28T15:13:55Z"
        },
        {
          "name": "to",
          "value": "['Resume-Matcher:(HEAD detached at fc46d27)', 'Resume-Matcher:main']",
          "time": "2025-04-28T15:13:55Z"
        }
      ],
      "relationships": [
        {
          "objectId": "app/services/job_service.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "3317979a253b7af731df094d22a4b6ef69342f4e",
          "qualifier": "is-child-of"
        },
        {
          "objectId": "0.9060209379507886",
          "qualifier": "commit_mi"
        },
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "0.18173333333333336",
          "qualifier": "commit_pylint"
        }
      ],
      "id": "cb963e61d6f17f72f928267632be78933e29c039"
    },
    {
      "type": "commit",
      "attributes": [
        {
          "name": "message",
          "value": "ISSUE-325 | enum validation fixed in structured job pydantic schema",
          "time": "2025-04-28T16:30:05Z"
        },
        {
          "name": "description",
          "value": "",
          "time": "2025-04-28T16:30:05Z"
        },
        {
          "name": "to",
          "value": "['Resume-Matcher:(HEAD detached at fc46d27)', 'Resume-Matcher:main']",
          "time": "2025-04-28T16:30:05Z"
        }
      ],
      "relationships": [
        {
          "objectId": "app/schemas/pydantic/structured_job.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/services/job_service.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "69c92cc249ebbae5065af5787a02d56e4004e207",
          "qualifier": "is-child-of"
        },
        {
          "objectId": "0.9047616963699584",
          "qualifier": "commit_mi"
        },
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "0.18537777777777778",
          "qualifier": "commit_pylint"
        }
      ],
      "id": "615354ecada74e48925ea7f89bc1652e7d06b008"
    },
    {
      "type": "commit",
      "attributes": [
        {
          "name": "message",
          "value": "ISSUE-325 | emailstr -> str for contact email in jobs",
          "time": "2025-04-29T17:04:37Z"
        },
        {
          "name": "description",
          "value": "",
          "time": "2025-04-29T17:04:37Z"
        },
        {
          "name": "to",
          "value": "['Resume-Matcher:(HEAD detached at fc46d27)', 'Resume-Matcher:main']",
          "time": "2025-04-29T17:04:37Z"
        }
      ],
      "relationships": [
        {
          "objectId": "app/schemas/pydantic/structured_job.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "5c2728f7a635282dbde1f9dfdb1bd9b3ea83378e",
          "qualifier": "is-child-of"
        },
        {
          "objectId": "0.9047616963699584",
          "qualifier": "commit_mi"
        },
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "0.18537777777777778",
          "qualifier": "commit_pylint"
        }
      ],
      "id": "6a4161d1cd73ac976c7542dc97997a7cef6beef0"
    },
    {
      "type": "commit",
      "attributes": [
        {
          "name": "message",
          "value": "ISSUE-335 | streaming response endpoint",
          "time": "2025-05-02T10:30:12Z"
        },
        {
          "name": "description",
          "value": "",
          "time": "2025-05-02T10:30:12Z"
        },
        {
          "name": "to",
          "value": "['Resume-Matcher:(HEAD detached at fc46d27)', 'Resume-Matcher:main']",
          "time": "2025-05-02T10:30:12Z"
        }
      ],
      "relationships": [
        {
          "objectId": "app/api/router/v1/resume.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app/services/score_improvement_service.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "474f47280b1aacd9c705891e1bc313a80da953fb",
          "qualifier": "is-child-of"
        },
        {
          "objectId": "0.8946844046770123",
          "qualifier": "commit_mi"
        },
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "0.1940888888888889",
          "qualifier": "commit_pylint"
        }
      ],
      "id": "3621cf8f138b26adf8d28ad8326b148017ce701c"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "apps/backend/app/agent/__init__.py",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "theta_1",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "theta_2",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "N_1",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "N_2",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "loc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "lloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "sloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "cloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "dloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "blank_lines",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2025-05-25T01:57:23Z"
        }
      ],
      "relationships": [
        {
          "objectId": "srbhr",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "2311e9e5120602821baa535ec58becde914b256e",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "apps/backend/app/agent/__init__.py"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "apps/backend/app/agent/exceptions.py",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "theta_1",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "theta_2",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "N_1",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "N_2",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "loc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "lloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "sloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "cloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "dloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "blank_lines",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2025-05-25T01:57:23Z"
        }
      ],
      "relationships": [
        {
          "objectId": "srbhr",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "2311e9e5120602821baa535ec58becde914b256e",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "apps/backend/app/agent/exceptions.py"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "apps/backend/app/agent/manager.py",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "theta_1",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "theta_2",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "N_1",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "N_2",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "loc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "lloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "sloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "cloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "dloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "blank_lines",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2025-05-25T01:57:23Z"
        }
      ],
      "relationships": [
        {
          "objectId": "srbhr",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "2311e9e5120602821baa535ec58becde914b256e",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "apps/backend/app/agent/manager.py"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "apps/backend/app/agent/providers/base.py",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "theta_1",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "theta_2",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "N_1",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "N_2",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "loc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "lloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "sloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "cloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "dloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "blank_lines",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2025-05-25T01:57:23Z"
        }
      ],
      "relationships": [
        {
          "objectId": "srbhr",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "2311e9e5120602821baa535ec58becde914b256e",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "apps/backend/app/agent/providers/base.py"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "apps/backend/app/agent/providers/ollama.py",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "theta_1",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "theta_2",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "N_1",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "N_2",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "loc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "lloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "sloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "cloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "dloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "blank_lines",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2025-05-25T01:57:23Z"
        }
      ],
      "relationships": [
        {
          "objectId": "srbhr",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "2311e9e5120602821baa535ec58becde914b256e",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "apps/backend/app/agent/providers/ollama.py"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "apps/backend/app/agent/providers/openai.py",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "theta_1",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "theta_2",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "N_1",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "N_2",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "loc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "lloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "sloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "cloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "dloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "blank_lines",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2025-05-25T01:57:23Z"
        }
      ],
      "relationships": [
        {
          "objectId": "srbhr",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "2311e9e5120602821baa535ec58becde914b256e",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "apps/backend/app/agent/providers/openai.py"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "apps/backend/app/agent/strategies/base.py",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "theta_1",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "theta_2",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "N_1",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "N_2",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "loc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "lloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "sloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "cloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "dloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "blank_lines",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2025-05-25T01:57:23Z"
        }
      ],
      "relationships": [
        {
          "objectId": "srbhr",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "2311e9e5120602821baa535ec58becde914b256e",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "apps/backend/app/agent/strategies/base.py"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "apps/backend/app/agent/strategies/wrapper.py",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "theta_1",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "theta_2",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "N_1",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "N_2",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "loc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "lloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "sloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "cloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "dloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "blank_lines",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2025-05-25T01:57:23Z"
        }
      ],
      "relationships": [
        {
          "objectId": "srbhr",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "2311e9e5120602821baa535ec58becde914b256e",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "apps/backend/app/agent/strategies/wrapper.py"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "apps/backend/app/api/__init__.py",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "theta_1",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "theta_2",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "N_1",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "N_2",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "loc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "lloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "sloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "cloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "dloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "blank_lines",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2025-05-25T01:57:23Z"
        }
      ],
      "relationships": [
        {
          "objectId": "srbhr",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "2311e9e5120602821baa535ec58becde914b256e",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "apps/backend/app/api/__init__.py"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "apps/backend/app/api/middleware.py",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "theta_1",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "theta_2",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "N_1",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "N_2",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "loc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "lloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "sloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "cloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "dloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "blank_lines",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2025-05-25T01:57:23Z"
        }
      ],
      "relationships": [
        {
          "objectId": "srbhr",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "2311e9e5120602821baa535ec58becde914b256e",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "apps/backend/app/api/middleware.py"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "apps/backend/app/api/router/health.py",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "theta_1",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "theta_2",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "N_1",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "N_2",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "loc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "lloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "sloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "cloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "dloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "blank_lines",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "theta_1",
          "value": "1",
          "time": "2025-05-26T12:16:15Z"
        },
        {
          "name": "theta_2",
          "value": "2",
          "time": "2025-05-26T12:16:15Z"
        },
        {
          "name": "N_1",
          "value": "1",
          "time": "2025-05-26T12:16:15Z"
        },
        {
          "name": "N_2",
          "value": "2",
          "time": "2025-05-26T12:16:15Z"
        },
        {
          "name": "loc",
          "value": "22",
          "time": "2025-05-26T12:16:15Z"
        },
        {
          "name": "lloc",
          "value": "17",
          "time": "2025-05-26T12:16:15Z"
        },
        {
          "name": "sloc",
          "value": "15",
          "time": "2025-05-26T12:16:15Z"
        },
        {
          "name": "dloc",
          "value": "3",
          "time": "2025-05-26T12:16:15Z"
        },
        {
          "name": "blank_lines",
          "value": "4",
          "time": "2025-05-26T12:16:15Z"
        }
      ],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "946492bdeaebc9223b71fec4fd416891747867e2",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "apps/backend/app/api/router/health.py"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "apps/backend/app/api/router/v1/__init__.py",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "theta_1",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "theta_2",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "N_1",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "N_2",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "loc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "lloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "sloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "cloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "dloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "blank_lines",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2025-05-25T01:57:23Z"
        }
      ],
      "relationships": [
        {
          "objectId": "srbhr",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "2311e9e5120602821baa535ec58becde914b256e",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "apps/backend/app/api/router/v1/__init__.py"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "apps/backend/app/api/router/v1/job.py",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "theta_1",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "theta_2",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "N_1",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "N_2",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "loc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "lloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "sloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "cloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "dloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "blank_lines",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2025-05-25T01:57:23Z"
        }
      ],
      "relationships": [
        {
          "objectId": "srbhr",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "2311e9e5120602821baa535ec58becde914b256e",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "apps/backend/app/api/router/v1/job.py"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "apps/backend/app/api/router/v1/resume.py",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "theta_1",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "theta_2",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "N_1",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "N_2",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "loc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "lloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "sloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "cloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "dloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "blank_lines",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2025-05-25T01:57:23Z"
        }
      ],
      "relationships": [
        {
          "objectId": "srbhr",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "2311e9e5120602821baa535ec58becde914b256e",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "apps/backend/app/api/router/v1/resume.py"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "apps/backend/app/base.py",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "theta_1",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "theta_2",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "N_1",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "N_2",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "loc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "lloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "sloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "cloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "dloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "blank_lines",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2025-05-25T01:57:23Z"
        }
      ],
      "relationships": [
        {
          "objectId": "srbhr",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "2311e9e5120602821baa535ec58becde914b256e",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "apps/backend/app/base.py"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "apps/backend/app/core/__init__.py",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "theta_1",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "theta_2",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "N_1",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "N_2",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "loc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "lloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "sloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "cloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "dloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "blank_lines",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2025-05-25T01:57:23Z"
        }
      ],
      "relationships": [
        {
          "objectId": "srbhr",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "2311e9e5120602821baa535ec58becde914b256e",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "apps/backend/app/core/__init__.py"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "apps/backend/app/core/config.py",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "theta_1",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "theta_2",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "N_1",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "N_2",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "loc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "lloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "sloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "cloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "dloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "blank_lines",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "loc",
          "value": "60",
          "time": "2025-05-25T16:24:12Z"
        },
        {
          "name": "lloc",
          "value": "41",
          "time": "2025-05-25T16:24:12Z"
        },
        {
          "name": "sloc",
          "value": "38",
          "time": "2025-05-25T16:24:12Z"
        },
        {
          "name": "dloc",
          "value": "7",
          "time": "2025-05-25T16:24:12Z"
        },
        {
          "name": "blank_lines",
          "value": "15",
          "time": "2025-05-25T16:24:12Z"
        },
        {
          "name": "loc",
          "value": "62",
          "time": "2025-05-25T17:32:56Z"
        },
        {
          "name": "lloc",
          "value": "40",
          "time": "2025-05-25T17:32:56Z"
        },
        {
          "name": "sloc",
          "value": "40",
          "time": "2025-05-25T17:32:56Z"
        },
        {
          "name": "pylint_score",
          "value": "0.645",
          "time": "2025-05-25T16:24:12Z"
        },
        {
          "name": "pylint_score",
          "value": "0.7",
          "time": "2025-05-25T17:32:56Z"
        }
      ],
      "relationships": [
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "b5566d0ddecf6981b76aeb838b2a3921b06be352",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "apps/backend/app/core/config.py"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "apps/backend/app/core/database.py",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "theta_1",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "theta_2",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "N_1",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "N_2",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "loc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "lloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "sloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "cloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "dloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "blank_lines",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2025-05-25T01:57:23Z"
        }
      ],
      "relationships": [
        {
          "objectId": "srbhr",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "2311e9e5120602821baa535ec58becde914b256e",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "apps/backend/app/core/database.py"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "apps/backend/app/core/exceptions.py",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "theta_1",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "theta_2",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "N_1",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "N_2",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "loc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "lloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "sloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "cloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "dloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "blank_lines",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2025-05-25T01:57:23Z"
        }
      ],
      "relationships": [
        {
          "objectId": "srbhr",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "2311e9e5120602821baa535ec58becde914b256e",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "apps/backend/app/core/exceptions.py"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "apps/backend/app/main.py",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "theta_1",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "theta_2",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "N_1",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "N_2",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "loc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "lloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "sloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "cloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "dloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "blank_lines",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2025-05-25T01:57:23Z"
        }
      ],
      "relationships": [
        {
          "objectId": "srbhr",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "2311e9e5120602821baa535ec58becde914b256e",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "apps/backend/app/main.py"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "apps/backend/app/models/__init__.py",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "theta_1",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "theta_2",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "N_1",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "N_2",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "loc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "lloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "sloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "cloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "dloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "blank_lines",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2025-05-25T01:57:23Z"
        }
      ],
      "relationships": [
        {
          "objectId": "srbhr",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "2311e9e5120602821baa535ec58becde914b256e",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "apps/backend/app/models/__init__.py"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "apps/backend/app/models/association.py",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "theta_1",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "theta_2",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "N_1",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "N_2",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "loc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "lloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "sloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "cloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "dloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "blank_lines",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2025-05-25T01:57:23Z"
        }
      ],
      "relationships": [
        {
          "objectId": "srbhr",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "2311e9e5120602821baa535ec58becde914b256e",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "apps/backend/app/models/association.py"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "apps/backend/app/models/base.py",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "theta_1",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "theta_2",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "N_1",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "N_2",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "loc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "lloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "sloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "cloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "dloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "blank_lines",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2025-05-25T01:57:23Z"
        }
      ],
      "relationships": [
        {
          "objectId": "srbhr",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "2311e9e5120602821baa535ec58becde914b256e",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "apps/backend/app/models/base.py"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "apps/backend/app/models/job.py",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "theta_1",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "theta_2",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "N_1",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "N_2",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "loc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "lloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "sloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "cloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "dloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "blank_lines",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2025-05-25T01:57:23Z"
        }
      ],
      "relationships": [
        {
          "objectId": "srbhr",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "2311e9e5120602821baa535ec58becde914b256e",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "apps/backend/app/models/job.py"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "apps/backend/app/models/resume.py",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "theta_1",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "theta_2",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "N_1",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "N_2",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "loc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "lloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "sloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "cloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "dloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "blank_lines",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2025-05-25T01:57:23Z"
        }
      ],
      "relationships": [
        {
          "objectId": "srbhr",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "2311e9e5120602821baa535ec58becde914b256e",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "apps/backend/app/models/resume.py"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "apps/backend/app/models/user.py",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "theta_1",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "theta_2",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "N_1",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "N_2",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "loc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "lloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "sloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "cloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "dloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "blank_lines",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2025-05-25T01:57:23Z"
        }
      ],
      "relationships": [
        {
          "objectId": "srbhr",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "2311e9e5120602821baa535ec58becde914b256e",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "apps/backend/app/models/user.py"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "apps/backend/app/prompt/__init__.py",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "theta_1",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "theta_2",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "N_1",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "N_2",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "loc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "lloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "sloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "cloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "dloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "blank_lines",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2025-05-25T01:57:23Z"
        }
      ],
      "relationships": [
        {
          "objectId": "srbhr",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "2311e9e5120602821baa535ec58becde914b256e",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "apps/backend/app/prompt/__init__.py"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "apps/backend/app/prompt/base.py",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "theta_1",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "theta_2",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "N_1",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "N_2",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "loc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "lloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "sloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "cloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "dloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "blank_lines",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2025-05-25T01:57:23Z"
        }
      ],
      "relationships": [
        {
          "objectId": "srbhr",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "2311e9e5120602821baa535ec58becde914b256e",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "apps/backend/app/prompt/base.py"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "apps/backend/app/prompt/resume_improvement.py",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "theta_1",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "theta_2",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "N_1",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "N_2",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "loc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "lloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "sloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "cloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "dloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "blank_lines",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2025-05-25T01:57:23Z"
        }
      ],
      "relationships": [
        {
          "objectId": "srbhr",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "2311e9e5120602821baa535ec58becde914b256e",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "apps/backend/app/prompt/resume_improvement.py"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "apps/backend/app/prompt/structured_job.py",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "theta_1",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "theta_2",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "N_1",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "N_2",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "loc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "lloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "sloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "cloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "dloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "blank_lines",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2025-05-25T01:57:23Z"
        }
      ],
      "relationships": [
        {
          "objectId": "srbhr",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "2311e9e5120602821baa535ec58becde914b256e",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "apps/backend/app/prompt/structured_job.py"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "apps/backend/app/prompt/structured_resume.py",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "theta_1",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "theta_2",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "N_1",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "N_2",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "loc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "lloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "sloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "cloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "dloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "blank_lines",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2025-05-25T01:57:23Z"
        }
      ],
      "relationships": [
        {
          "objectId": "srbhr",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "2311e9e5120602821baa535ec58becde914b256e",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "apps/backend/app/prompt/structured_resume.py"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "apps/backend/app/schemas/json/__init__.py",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "theta_1",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "theta_2",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "N_1",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "N_2",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "loc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "lloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "sloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "cloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "dloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "blank_lines",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2025-05-25T01:57:23Z"
        }
      ],
      "relationships": [
        {
          "objectId": "srbhr",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "2311e9e5120602821baa535ec58becde914b256e",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "apps/backend/app/schemas/json/__init__.py"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "apps/backend/app/schemas/json/base.py",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "theta_1",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "theta_2",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "N_1",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "N_2",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "loc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "lloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "sloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "cloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "dloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "blank_lines",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2025-05-25T01:57:23Z"
        }
      ],
      "relationships": [
        {
          "objectId": "srbhr",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "2311e9e5120602821baa535ec58becde914b256e",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "apps/backend/app/schemas/json/base.py"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "apps/backend/app/schemas/json/structured_job.py",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "theta_1",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "theta_2",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "N_1",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "N_2",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "loc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "lloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "sloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "cloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "dloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "blank_lines",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2025-05-25T01:57:23Z"
        }
      ],
      "relationships": [
        {
          "objectId": "srbhr",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "2311e9e5120602821baa535ec58becde914b256e",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "apps/backend/app/schemas/json/structured_job.py"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "apps/backend/app/schemas/json/structured_resume.py",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "theta_1",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "theta_2",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "N_1",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "N_2",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "loc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "lloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "sloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "cloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "dloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "blank_lines",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2025-05-25T01:57:23Z"
        }
      ],
      "relationships": [
        {
          "objectId": "srbhr",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "2311e9e5120602821baa535ec58becde914b256e",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "apps/backend/app/schemas/json/structured_resume.py"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "apps/backend/app/schemas/pydantic/__init__.py",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "theta_1",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "theta_2",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "N_1",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "N_2",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "loc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "lloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "sloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "cloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "dloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "blank_lines",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "loc",
          "value": "13",
          "time": "2025-05-26T09:21:34Z"
        },
        {
          "name": "lloc",
          "value": "6",
          "time": "2025-05-26T09:21:34Z"
        },
        {
          "name": "sloc",
          "value": "12",
          "time": "2025-05-26T09:21:34Z"
        },
        {
          "name": "blank_lines",
          "value": "1",
          "time": "2025-05-26T09:21:34Z"
        }
      ],
      "relationships": [
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "732a920c7e900d90355f99f1add2d55173819e41",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "apps/backend/app/schemas/pydantic/__init__.py"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "apps/backend/app/schemas/pydantic/job.py",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "theta_1",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "theta_2",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "N_1",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "N_2",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "loc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "lloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "sloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "cloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "dloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "blank_lines",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2025-05-25T01:57:23Z"
        }
      ],
      "relationships": [
        {
          "objectId": "srbhr",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "2311e9e5120602821baa535ec58becde914b256e",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "apps/backend/app/schemas/pydantic/job.py"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "apps/backend/app/schemas/pydantic/resume_improvement.py",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "theta_1",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "theta_2",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "N_1",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "N_2",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "loc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "lloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "sloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "cloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "dloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "blank_lines",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2025-05-25T01:57:23Z"
        }
      ],
      "relationships": [
        {
          "objectId": "srbhr",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "2311e9e5120602821baa535ec58becde914b256e",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "apps/backend/app/schemas/pydantic/resume_improvement.py"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "apps/backend/app/schemas/pydantic/structured_job.py",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "theta_1",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "theta_2",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "N_1",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "N_2",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "loc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "lloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "sloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "cloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "dloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "blank_lines",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "theta_1",
          "value": "1",
          "time": "2025-05-28T15:23:55Z"
        },
        {
          "name": "theta_2",
          "value": "2",
          "time": "2025-05-28T15:23:55Z"
        },
        {
          "name": "N_1",
          "value": "2",
          "time": "2025-05-28T15:23:55Z"
        },
        {
          "name": "N_2",
          "value": "4",
          "time": "2025-05-28T15:23:55Z"
        },
        {
          "name": "loc",
          "value": "101",
          "time": "2025-05-28T15:23:55Z"
        },
        {
          "name": "lloc",
          "value": "99",
          "time": "2025-05-28T15:23:55Z"
        },
        {
          "name": "sloc",
          "value": "73",
          "time": "2025-05-28T15:23:55Z"
        },
        {
          "name": "blank_lines",
          "value": "24",
          "time": "2025-05-28T15:23:55Z"
        },
        {
          "name": "pylint_score",
          "value": "0.8310000000000001",
          "time": "2025-05-28T15:23:55Z"
        }
      ],
      "relationships": [
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "cab845e52531a83a4c6c36a95444436f2500cd53",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "apps/backend/app/schemas/pydantic/structured_job.py"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "apps/backend/app/schemas/pydantic/structured_resume.py",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "theta_1",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "theta_2",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "N_1",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "N_2",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "loc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "lloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "sloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "cloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "dloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "blank_lines",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2025-05-25T01:57:23Z"
        }
      ],
      "relationships": [
        {
          "objectId": "srbhr",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "2311e9e5120602821baa535ec58becde914b256e",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "apps/backend/app/schemas/pydantic/structured_resume.py"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "apps/backend/app/services/__init__.py",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "theta_1",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "theta_2",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "N_1",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "N_2",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "loc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "lloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "sloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "cloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "dloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "blank_lines",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2025-05-25T01:57:23Z"
        }
      ],
      "relationships": [
        {
          "objectId": "srbhr",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "2311e9e5120602821baa535ec58becde914b256e",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "apps/backend/app/services/__init__.py"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "apps/backend/app/services/exceptions.py",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "theta_1",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "theta_2",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "N_1",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "N_2",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "loc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "lloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "sloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "cloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "dloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "blank_lines",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2025-05-25T01:57:23Z"
        }
      ],
      "relationships": [
        {
          "objectId": "srbhr",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "2311e9e5120602821baa535ec58becde914b256e",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "apps/backend/app/services/exceptions.py"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "apps/backend/app/services/job_service.py",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "theta_1",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "theta_2",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "N_1",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "N_2",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "loc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "lloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "sloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "cloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "dloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "blank_lines",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2025-05-25T01:57:23Z"
        }
      ],
      "relationships": [
        {
          "objectId": "srbhr",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "2311e9e5120602821baa535ec58becde914b256e",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "apps/backend/app/services/job_service.py"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "apps/backend/app/services/resume_service.py",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "theta_1",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "theta_2",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "N_1",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "N_2",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "loc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "lloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "sloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "cloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "dloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "blank_lines",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2025-05-25T01:57:23Z"
        }
      ],
      "relationships": [
        {
          "objectId": "srbhr",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "2311e9e5120602821baa535ec58becde914b256e",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "apps/backend/app/services/resume_service.py"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "apps/backend/app/services/score_improvement_service.py",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "theta_1",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "theta_2",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "N_1",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "N_2",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "loc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "lloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "sloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "cloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "dloc",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "blank_lines",
          "value": "0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "theta_1",
          "value": "9",
          "time": "2025-05-26T09:21:34Z"
        },
        {
          "name": "theta_2",
          "value": "22",
          "time": "2025-05-26T09:21:34Z"
        },
        {
          "name": "N_1",
          "value": "17",
          "time": "2025-05-26T09:21:34Z"
        },
        {
          "name": "N_2",
          "value": "30",
          "time": "2025-05-26T09:21:34Z"
        },
        {
          "name": "loc",
          "value": "273",
          "time": "2025-05-26T09:21:34Z"
        },
        {
          "name": "lloc",
          "value": "125",
          "time": "2025-05-26T09:21:34Z"
        },
        {
          "name": "sloc",
          "value": "198",
          "time": "2025-05-26T09:21:34Z"
        },
        {
          "name": "dloc",
          "value": "27",
          "time": "2025-05-26T09:21:34Z"
        },
        {
          "name": "blank_lines",
          "value": "48",
          "time": "2025-05-26T09:21:34Z"
        },
        {
          "name": "theta_1",
          "value": "8",
          "time": "2025-05-28T15:23:55Z"
        },
        {
          "name": "theta_2",
          "value": "19",
          "time": "2025-05-28T15:23:55Z"
        },
        {
          "name": "N_1",
          "value": "15",
          "time": "2025-05-28T15:23:55Z"
        },
        {
          "name": "N_2",
          "value": "26",
          "time": "2025-05-28T15:23:55Z"
        },
        {
          "name": "loc",
          "value": "281",
          "time": "2025-05-28T15:23:55Z"
        },
        {
          "name": "lloc",
          "value": "133",
          "time": "2025-05-28T15:23:55Z"
        },
        {
          "name": "sloc",
          "value": "205",
          "time": "2025-05-28T15:23:55Z"
        },
        {
          "name": "dloc",
          "value": "24",
          "time": "2025-05-28T15:23:55Z"
        },
        {
          "name": "blank_lines",
          "value": "52",
          "time": "2025-05-28T15:23:55Z"
        },
        {
          "name": "pylint_score",
          "value": "0.41100000000000003",
          "time": "2025-05-26T09:21:34Z"
        },
        {
          "name": "pylint_score",
          "value": "0.44800000000000006",
          "time": "2025-05-28T15:23:55Z"
        }
      ],
      "relationships": [
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "cab845e52531a83a4c6c36a95444436f2500cd53",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "apps/backend/app/services/score_improvement_service.py"
    },
    {
      "type": "commit",
      "attributes": [
        {
          "name": "message",
          "value": "Updated the file structure to include",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "description",
          "value": "",
          "time": "2025-05-25T01:57:23Z"
        },
        {
          "name": "to",
          "value": "['Resume-Matcher:(HEAD detached at fc46d27)', 'Resume-Matcher:main']",
          "time": "2025-05-25T01:57:23Z"
        }
      ],
      "relationships": [
        {
          "objectId": ".github/CODE_OF_CONDUCT.md",
          "qualifier": "aggregates"
        },
        {
          "objectId": ".github/CONTRIBUTING.md",
          "qualifier": "aggregates"
        },
        {
          "objectId": ".github/SECURITY.md",
          "qualifier": "aggregates"
        },
        {
          "objectId": ".gitignore",
          "qualifier": "aggregates"
        },
        {
          "objectId": "app.db",
          "qualifier": "aggregates"
        },
        {
          "objectId": "apps/backend/.gitignore",
          "qualifier": "aggregates"
        },
        {
          "objectId": "apps/backend/app/agent/__init__.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "apps/backend/app/agent/exceptions.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "apps/backend/app/agent/manager.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "apps/backend/app/agent/providers/base.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "apps/backend/app/agent/providers/ollama.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "apps/backend/app/agent/providers/openai.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "apps/backend/app/agent/strategies/base.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "apps/backend/app/agent/strategies/wrapper.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "apps/backend/app/api/__init__.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "apps/backend/app/api/middleware.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "apps/backend/app/api/router/health.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "apps/backend/app/api/router/v1/__init__.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "apps/backend/app/api/router/v1/job.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "apps/backend/app/api/router/v1/resume.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "apps/backend/app/base.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "apps/backend/app/core/__init__.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "apps/backend/app/core/config.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "apps/backend/app/core/database.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "apps/backend/app/core/exceptions.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "apps/backend/app/main.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "apps/backend/app/models/__init__.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "apps/backend/app/models/association.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "apps/backend/app/models/base.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "apps/backend/app/models/job.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "apps/backend/app/models/resume.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "apps/backend/app/models/user.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "apps/backend/app/prompt/__init__.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "apps/backend/app/prompt/base.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "apps/backend/app/prompt/resume_improvement.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "apps/backend/app/prompt/structured_job.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "apps/backend/app/prompt/structured_resume.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "apps/backend/app/schemas/json/__init__.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "apps/backend/app/schemas/json/base.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "apps/backend/app/schemas/json/structured_job.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "apps/backend/app/schemas/json/structured_resume.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "apps/backend/app/schemas/pydantic/__init__.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "apps/backend/app/schemas/pydantic/job.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "apps/backend/app/schemas/pydantic/resume_improvement.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "apps/backend/app/schemas/pydantic/structured_job.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "apps/backend/app/schemas/pydantic/structured_resume.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "apps/backend/app/services/__init__.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "apps/backend/app/services/exceptions.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "apps/backend/app/services/job_service.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "apps/backend/app/services/resume_service.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "apps/backend/app/services/score_improvement_service.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "apps/backend/requirements.txt",
          "qualifier": "aggregates"
        },
        {
          "objectId": "apps/ui/.gitignore",
          "qualifier": "aggregates"
        },
        {
          "objectId": "apps/ui/README.md",
          "qualifier": "aggregates"
        },
        {
          "objectId": "apps/ui/app/(default)/(onboarding)/jobs/page.tsx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "apps/ui/app/(default)/(onboarding)/resume/page.tsx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "apps/ui/app/(default)/dashboard/page.tsx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "apps/ui/app/(default)/layout.tsx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "apps/ui/app/(default)/page.tsx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "apps/ui/app/css/globals.css",
          "qualifier": "aggregates"
        },
        {
          "objectId": "apps/ui/app/favicon.ico",
          "qualifier": "aggregates"
        },
        {
          "objectId": "apps/ui/app/layout.tsx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "apps/ui/components.json",
          "qualifier": "aggregates"
        },
        {
          "objectId": "apps/ui/components/common/background-container.tsx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "apps/ui/components/common/comp-71.tsx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "apps/ui/components/common/dot-pattern-glow.tsx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "apps/ui/components/common/file-upload.tsx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "apps/ui/components/common/github-star-badge.tsx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "apps/ui/components/common/glowing-stars.tsx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "apps/ui/components/common/video-text.tsx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "apps/ui/components/dashboard/job-listings.tsx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "apps/ui/components/dashboard/paste-job-description.tsx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "apps/ui/components/dashboard/resume-analysis.tsx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "apps/ui/components/dashboard/resume-component.tsx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "apps/ui/components/home/hero.tsx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "apps/ui/components/jd-upload/text-area.tsx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "apps/ui/components/ui/button.tsx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "apps/ui/components/ui/dialog.tsx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "apps/ui/components/ui/footer.tsx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "apps/ui/components/ui/header.tsx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "apps/ui/components/ui/label.tsx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "apps/ui/components/ui/textarea.tsx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "apps/ui/eslint.config.mjs",
          "qualifier": "aggregates"
        },
        {
          "objectId": "apps/ui/hooks/use-file-upload.ts",
          "qualifier": "aggregates"
        },
        {
          "objectId": "apps/ui/next.config.ts",
          "qualifier": "aggregates"
        },
        {
          "objectId": "apps/ui/package-lock.json",
          "qualifier": "aggregates"
        },
        {
          "objectId": "apps/ui/package.json",
          "qualifier": "aggregates"
        },
        {
          "objectId": "apps/ui/postcss.config.mjs",
          "qualifier": "aggregates"
        },
        {
          "objectId": "apps/ui/public/videos/hero_video.mp4",
          "qualifier": "aggregates"
        },
        {
          "objectId": "apps/ui/tailwind.config.js",
          "qualifier": "aggregates"
        },
        {
          "objectId": "apps/ui/tsconfig.json",
          "qualifier": "aggregates"
        },
        {
          "objectId": "package.json",
          "qualifier": "aggregates"
        },
        {
          "objectId": "680684700f9cf575c03d6b56b0adc83f61c283b9",
          "qualifier": "is-child-of"
        },
        {
          "objectId": "1.0",
          "qualifier": "commit_mi"
        },
        {
          "objectId": "srbhr",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "0.0",
          "qualifier": "commit_pylint"
        }
      ],
      "id": "2311e9e5120602821baa535ec58becde914b256e"
    },
    {
      "type": "commit",
      "attributes": [
        {
          "name": "message",
          "value": "Setup | Resume Matcher",
          "time": "2025-05-25T16:24:12Z"
        },
        {
          "name": "description",
          "value": "",
          "time": "2025-05-25T16:24:12Z"
        },
        {
          "name": "to",
          "value": "['Resume-Matcher:(HEAD detached at fc46d27)', 'Resume-Matcher:main']",
          "time": "2025-05-25T16:24:12Z"
        }
      ],
      "relationships": [
        {
          "objectId": "Makefile",
          "qualifier": "aggregates"
        },
        {
          "objectId": "apps/backend/app.db-shm",
          "qualifier": "aggregates"
        },
        {
          "objectId": "apps/backend/app.db-wal",
          "qualifier": "aggregates"
        },
        {
          "objectId": "apps/backend/app/core/config.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "apps/frontend/components/common/file-upload.tsx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "apps/frontend/components/jd-upload/text-area.tsx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "package.json",
          "qualifier": "aggregates"
        },
        {
          "objectId": "setup.sh",
          "qualifier": "aggregates"
        },
        {
          "objectId": "ed67f828f334e97c61d4b313bcf49c5f501a905b",
          "qualifier": "is-child-of"
        },
        {
          "objectId": "1.0",
          "qualifier": "commit_mi"
        },
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "0.014333333333333333",
          "qualifier": "commit_pylint"
        }
      ],
      "id": "10201b889a2282e57f59678263ca57b45b552f8a"
    },
    {
      "type": "commit",
      "attributes": [
        {
          "name": "message",
          "value": "Setup | Resume Matcher",
          "time": "2025-05-25T17:32:56Z"
        },
        {
          "name": "description",
          "value": "",
          "time": "2025-05-25T17:32:56Z"
        },
        {
          "name": "to",
          "value": "['Resume-Matcher:(HEAD detached at fc46d27)', 'Resume-Matcher:main']",
          "time": "2025-05-25T17:32:56Z"
        }
      ],
      "relationships": [
        {
          "objectId": ".gitignore",
          "qualifier": "aggregates"
        },
        {
          "objectId": "apps/backend/app/core/config.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "apps/frontend/components/common/file-upload.tsx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "3fc8dc15d02b35228b148544519722fd2542310d",
          "qualifier": "is-child-of"
        },
        {
          "objectId": "1.0",
          "qualifier": "commit_mi"
        },
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "0.015555555555555555",
          "qualifier": "commit_pylint"
        }
      ],
      "id": "b5566d0ddecf6981b76aeb838b2a3921b06be352"
    },
    {
      "type": "commit",
      "attributes": [
        {
          "name": "message",
          "value": "Potential fix for code scanning alert no. 3: Information exposure through an exception",
          "time": "2025-05-26T12:16:15Z"
        },
        {
          "name": "description",
          "value": "Co-authored-by: Copilot Autofix powered by AI <62310815+github-advanced-security[bot]@users.noreply.github.com>",
          "time": "2025-05-26T12:16:15Z"
        },
        {
          "name": "to",
          "value": "['Resume-Matcher:(HEAD detached at fc46d27)', 'Resume-Matcher:main']",
          "time": "2025-05-26T12:16:15Z"
        }
      ],
      "relationships": [
        {
          "objectId": "apps/backend/app/api/router/health.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "cc9f0405aaec1939c1d32e32d5ee08500cdd19d2",
          "qualifier": "is-child-of"
        },
        {
          "objectId": "0.998087749429223",
          "qualifier": "commit_mi"
        },
        {
          "objectId": "Saurabh Rai",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "0.015555555555555555",
          "qualifier": "commit_pylint"
        }
      ],
      "id": "946492bdeaebc9223b71fec4fd416891747867e2"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "apps/backend/app/schemas/json/resume_preview.py",
          "time": "2025-05-26T09:21:34Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2025-05-26T09:21:34Z"
        },
        {
          "name": "theta_1",
          "value": "0",
          "time": "2025-05-26T09:21:34Z"
        },
        {
          "name": "theta_2",
          "value": "0",
          "time": "2025-05-26T09:21:34Z"
        },
        {
          "name": "N_1",
          "value": "0",
          "time": "2025-05-26T09:21:34Z"
        },
        {
          "name": "N_2",
          "value": "0",
          "time": "2025-05-26T09:21:34Z"
        },
        {
          "name": "loc",
          "value": "33",
          "time": "2025-05-26T09:21:34Z"
        },
        {
          "name": "lloc",
          "value": "2",
          "time": "2025-05-26T09:21:34Z"
        },
        {
          "name": "sloc",
          "value": "33",
          "time": "2025-05-26T09:21:34Z"
        },
        {
          "name": "cloc",
          "value": "0",
          "time": "2025-05-26T09:21:34Z"
        },
        {
          "name": "dloc",
          "value": "0",
          "time": "2025-05-26T09:21:34Z"
        },
        {
          "name": "blank_lines",
          "value": "0",
          "time": "2025-05-26T09:21:34Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2025-05-26T09:21:34Z"
        }
      ],
      "relationships": [
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "732a920c7e900d90355f99f1add2d55173819e41",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "apps/backend/app/schemas/json/resume_preview.py"
    },
    {
      "type": "file",
      "attributes": [
        {
          "name": "filename",
          "value": "apps/backend/app/schemas/pydantic/resume_preview.py",
          "time": "2025-05-26T09:21:34Z"
        },
        {
          "name": "method_count",
          "value": "-1",
          "time": "2025-05-26T09:21:34Z"
        },
        {
          "name": "theta_1",
          "value": "0",
          "time": "2025-05-26T09:21:34Z"
        },
        {
          "name": "theta_2",
          "value": "0",
          "time": "2025-05-26T09:21:34Z"
        },
        {
          "name": "N_1",
          "value": "0",
          "time": "2025-05-26T09:21:34Z"
        },
        {
          "name": "N_2",
          "value": "0",
          "time": "2025-05-26T09:21:34Z"
        },
        {
          "name": "loc",
          "value": "38",
          "time": "2025-05-26T09:21:34Z"
        },
        {
          "name": "lloc",
          "value": "54",
          "time": "2025-05-26T09:21:34Z"
        },
        {
          "name": "sloc",
          "value": "30",
          "time": "2025-05-26T09:21:34Z"
        },
        {
          "name": "cloc",
          "value": "0",
          "time": "2025-05-26T09:21:34Z"
        },
        {
          "name": "dloc",
          "value": "0",
          "time": "2025-05-26T09:21:34Z"
        },
        {
          "name": "blank_lines",
          "value": "8",
          "time": "2025-05-26T09:21:34Z"
        },
        {
          "name": "pylint_score",
          "value": "0.0",
          "time": "2025-05-26T09:21:34Z"
        }
      ],
      "relationships": [
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "file-changed_by"
        },
        {
          "objectId": "732a920c7e900d90355f99f1add2d55173819e41",
          "qualifier": "part-of-commit"
        }
      ],
      "id": "apps/backend/app/schemas/pydantic/resume_preview.py"
    },
    {
      "type": "commit",
      "attributes": [
        {
          "name": "message",
          "value": "Resume dashboard Previewer",
          "time": "2025-05-26T09:21:34Z"
        },
        {
          "name": "description",
          "value": "",
          "time": "2025-05-26T09:21:34Z"
        },
        {
          "name": "to",
          "value": "['Resume-Matcher:(HEAD detached at fc46d27)', 'Resume-Matcher:main']",
          "time": "2025-05-26T09:21:34Z"
        }
      ],
      "relationships": [
        {
          "objectId": "apps/backend/app/schemas/json/resume_preview.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "apps/backend/app/schemas/pydantic/__init__.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "apps/backend/app/schemas/pydantic/resume_preview.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "apps/backend/app/services/score_improvement_service.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "apps/backend/requirements.txt",
          "qualifier": "aggregates"
        },
        {
          "objectId": "f2ae4f00836484f7d9f48589a9fa4c5ebc20c3e3",
          "qualifier": "is-child-of"
        },
        {
          "objectId": "0.9886757979416493",
          "qualifier": "commit_mi"
        },
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "0.04136170212765957",
          "qualifier": "commit_pylint"
        }
      ],
      "id": "732a920c7e900d90355f99f1add2d55173819e41"
    },
    {
      "type": "commit",
      "attributes": [
        {
          "name": "message",
          "value": "Resume dashboard Previewer Wiring",
          "time": "2025-05-28T15:23:55Z"
        },
        {
          "name": "description",
          "value": "",
          "time": "2025-05-28T15:23:55Z"
        },
        {
          "name": "to",
          "value": "['Resume-Matcher:(HEAD detached at fc46d27)', 'Resume-Matcher:main']",
          "time": "2025-05-28T15:23:55Z"
        }
      ],
      "relationships": [
        {
          "objectId": "apps/backend/app/schemas/pydantic/structured_job.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "apps/backend/app/services/score_improvement_service.py",
          "qualifier": "aggregates"
        },
        {
          "objectId": "apps/frontend/app/(default)/dashboard/page.tsx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "apps/frontend/app/(default)/layout.tsx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "apps/frontend/components/common/resume_previewer_context.tsx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "apps/frontend/components/dashboard/resume-analysis.tsx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "apps/frontend/components/dashboard/resume-component.tsx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "apps/frontend/components/jd-upload/text-area.tsx",
          "qualifier": "aggregates"
        },
        {
          "objectId": "apps/frontend/lib/api/resume.ts",
          "qualifier": "aggregates"
        },
        {
          "objectId": "c87c81a311e99fcab722a0a7a8db5ec9f01228d9",
          "qualifier": "is-child-of"
        },
        {
          "objectId": "0.9774298056919202",
          "qualifier": "commit_mi"
        },
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "is-authored-by"
        },
        {
          "objectId": "0.05982978723404256",
          "qualifier": "commit_pylint"
        }
      ],
      "id": "cab845e52531a83a4c6c36a95444436f2500cd53"
    }
  ],
  "events": [
    {
      "type": "commit",
      "time": "2025-05-25T16:24:12Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "authored-by"
        },
        {
          "objectId": "10201b889a2282e57f59678263ca57b45b552f8a",
          "qualifier": "sha"
        },
        {
          "objectId": "364",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDEwMjAxYjg4OWEyMjgyZTU3ZjU5Njc4MjYzY2E1N2I0NWI1NTJmOGE"
    },
    {
      "type": "comment_pull_request",
      "time": "2025-05-25T16:30:44Z",
      "attributes": [
        {
          "name": "comment",
          "value": "<!-- This is an auto-generated comment: summarize by coderabbit.ai -->\n<!-- This is an auto-generated comment: skip review by coderabbit.ai -->\n\n> [!IMPORTANT]\n> ## Review skipped\n> \n> Auto reviews are disabled on base/target branches other than the default branch.\n> \n> \n> \n> Please check the settings in the CodeRabbit UI or the `.coderabbit.yaml` file in this repository. To trigger a single review, invoke the `@coderabbitai review` command.\n> \n> You can disable this status message by setting the `reviews.review_status` to `false` in the CodeRabbit configuration file.\n\n<!-- end of auto-generated comment: skip review by coderabbit.ai -->\n<!-- tips_start -->\n\n---\n\nThanks for using CodeRabbit! It's free for OSS, and your support helps us grow. If you like it, consider giving us a shout-out.\n\n<details>\n<summary>\u2764\ufe0f Share</summary>\n\n- [X](https://twitter.com/intent/tweet?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A&url=https%3A//coderabbit.ai)\n- [Mastodon](https://mastodon.social/share?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A%20https%3A%2F%2Fcoderabbit.ai)\n- [Reddit](https://www.reddit.com/submit?title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&text=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code.%20Check%20it%20out%3A%20https%3A//coderabbit.ai)\n- [LinkedIn](https://www.linkedin.com/sharing/share-offsite/?url=https%3A%2F%2Fcoderabbit.ai&mini=true&title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&summary=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code)\n\n</details>\n\n<details>\n<summary>\ud83e\udea7 Tips</summary>\n\n### Chat\n\nThere are 3 ways to chat with [CodeRabbit](https://coderabbit.ai?utm_source=oss&utm_medium=github&utm_campaign=srbhr/Resume-Matcher&utm_content=364):\n\n- Review comments: Directly reply to a review comment made by CodeRabbit. Example:\n  - `I pushed a fix in commit <commit_id>, please review it.`\n  - `Explain this complex logic.`\n  - `Open a follow-up GitHub issue for this discussion.`\n- Files and specific lines of code (under the \"Files changed\" tab): Tag `@coderabbitai` in a new review comment at the desired location with your query. Examples:\n  - `@coderabbitai explain this code block.`\n  -\t`@coderabbitai modularize this function.`\n- PR comments: Tag `@coderabbitai` in a new PR comment to ask questions about the PR branch. For the best results, please provide a very specific query, as very limited context is provided in this mode. Examples:\n  - `@coderabbitai gather interesting stats about this repository and render them as a table. Additionally, render a pie chart showing the language distribution in the codebase.`\n  - `@coderabbitai read src/utils.ts and explain its main purpose.`\n  - `@coderabbitai read the files in the src/scheduler package and generate a class diagram using mermaid and a README in the markdown format.`\n  - `@coderabbitai help me debug CodeRabbit configuration file.`\n\n### Support\n\nNeed help? Create a ticket on our [support page](https://www.coderabbit.ai/contact-us/support) for assistance with any issues or questions.\n\nNote: Be mindful of the bot's finite context window. It's strongly recommended to break down tasks such as reading entire modules into smaller chunks. For a focused discussion, use review comments to chat about specific files and their changes, instead of using the PR comments.\n\n### CodeRabbit Commands (Invoked using PR comments)\n\n- `@coderabbitai pause` to pause the reviews on a PR.\n- `@coderabbitai resume` to resume the paused reviews.\n- `@coderabbitai review` to trigger an incremental review. This is useful when automatic reviews are disabled for the repository.\n- `@coderabbitai full review` to do a full review from scratch and review all the files again.\n- `@coderabbitai summary` to regenerate the summary of the PR.\n- `@coderabbitai generate docstrings` to [generate docstrings](https://docs.coderabbit.ai/finishing-touches/docstrings) for this PR.\n- `@coderabbitai generate sequence diagram` to generate a sequence diagram of the changes in this PR.\n- `@coderabbitai resolve` resolve all the CodeRabbit review comments.\n- `@coderabbitai configuration` to show the current CodeRabbit configuration for the repository.\n- `@coderabbitai help` to get help.\n\n### Other keywords and placeholders\n\n- Add `@coderabbitai ignore` anywhere in the PR description to prevent this PR from being reviewed.\n- Add `@coderabbitai summary` to generate the high-level summary at a specific location in the PR description.\n- Add `@coderabbitai` anywhere in the PR title to generate the title automatically.\n\n### CodeRabbit Configuration File (`.coderabbit.yaml`)\n\n- You can programmatically configure CodeRabbit by adding a `.coderabbit.yaml` file to the root of your repository.\n- Please see the [configuration documentation](https://docs.coderabbit.ai/guides/configure-coderabbit) for more information.\n- If your editor has YAML language server enabled, you can add the path at the top of this file to enable auto-completion and validation: `# yaml-language-server: $schema=https://coderabbit.ai/integrations/schema.v2.json`\n\n### Documentation and Community\n\n- Visit our [Documentation](https://docs.coderabbit.ai) for detailed information on how to use CodeRabbit.\n- Join our [Discord Community](http://discord.gg/coderabbit) to get help, request features, and share feedback.\n- Follow us on [X/Twitter](https://twitter.com/coderabbitai) for updates and announcements.\n\n</details>\n\n<!-- tips_end -->"
        }
      ],
      "relationships": [
        {
          "objectId": "coderabbitai[bot]",
          "qualifier": "commented-by"
        },
        {
          "objectId": "364",
          "qualifier": "on"
        }
      ],
      "id": "IC_kwDODyNbyM6tU3cy"
    },
    {
      "type": "commit",
      "time": "2025-05-25T16:46:17Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "authored-by"
        },
        {
          "objectId": "25eb49f4bd3d7a4d36ca1bf3a1e09e4fb9eb5d21",
          "qualifier": "sha"
        },
        {
          "objectId": "364",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDI1ZWI0OWY0YmQzZDdhNGQzNmNhMWJmM2ExZTA5ZTRmYjllYjVkMjE"
    },
    {
      "type": "commit",
      "time": "2025-05-25T16:50:47Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "authored-by"
        },
        {
          "objectId": "83b246fab6c509d94a92d73a1a8fd7a90f323e51",
          "qualifier": "sha"
        },
        {
          "objectId": "364",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDgzYjI0NmZhYjZjNTA5ZDk0YTkyZDczYTFhOGZkN2E5MGYzMjNlNTE"
    },
    {
      "type": "commit",
      "time": "2025-05-25T17:15:58Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "authored-by"
        },
        {
          "objectId": "3fc8dc15d02b35228b148544519722fd2542310d",
          "qualifier": "sha"
        },
        {
          "objectId": "364",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDNmYzhkYzE1ZDAyYjM1MjI4YjE0ODU0NDUxOTcyMmZkMjU0MjMxMGQ"
    },
    {
      "type": "commit",
      "time": "2025-05-25T17:32:56Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "authored-by"
        },
        {
          "objectId": "b5566d0ddecf6981b76aeb838b2a3921b06be352",
          "qualifier": "sha"
        },
        {
          "objectId": "364",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKGI1NTY2ZDBkZGVjZjY5ODFiNzZhZWI4MzhiMmEzOTIxYjA2YmUzNTI"
    },
    {
      "type": "commit",
      "time": "2025-05-25T18:03:16Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "authored-by"
        },
        {
          "objectId": "a96defcea7a67bbcabc5186c8460c84c85df899b",
          "qualifier": "sha"
        },
        {
          "objectId": "364",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKGE5NmRlZmNlYTdhNjdiYmNhYmM1MTg2Yzg0NjBjODRjODVkZjg5OWI"
    },
    {
      "type": "commit",
      "time": "2025-05-25T18:12:16Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "authored-by"
        },
        {
          "objectId": "8621b7f355f78097e1d62a28c67c4dd321daeb12",
          "qualifier": "sha"
        },
        {
          "objectId": "364",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDg2MjFiN2YzNTVmNzgwOTdlMWQ2MmEyOGM2N2M0ZGQzMjFkYWViMTI"
    },
    {
      "type": "commit",
      "time": "2025-05-25T18:12:55Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "authored-by"
        },
        {
          "objectId": "520183383ec6fcf0f2541011bca9403c6af4c6a9",
          "qualifier": "sha"
        },
        {
          "objectId": "364",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDUyMDE4MzM4M2VjNmZjZjBmMjU0MTAxMWJjYTk0MDNjNmFmNGM2YTk"
    },
    {
      "type": "merge_pull_request",
      "time": "2025-05-26T03:02:26Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "364",
          "qualifier": "merged-on-pull_request"
        }
      ],
      "id": "ME_lADODyNbyM64JMW0zwAAAAQlYeCG"
    },
    {
      "type": "close_pull_request",
      "time": "2025-05-26T03:02:26Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "364",
          "qualifier": "closed-on-pull_request"
        }
      ],
      "id": "CE_lADODyNbyM64JMW0zwAAAAQlYeCT"
    },
    {
      "type": "commit",
      "time": "2025-05-24T20:27:23Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "srbhr",
          "qualifier": "authored-by"
        },
        {
          "objectId": "2311e9e5120602821baa535ec58becde914b256e",
          "qualifier": "sha"
        },
        {
          "objectId": "361",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDIzMTFlOWU1MTIwNjAyODIxYmFhNTM1ZWM1OGJlY2RlOTE0YjI1NmU"
    },
    {
      "type": "commit",
      "time": "2025-05-24T22:02:03Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "srbhr",
          "qualifier": "authored-by"
        },
        {
          "objectId": "03218f6c0f05f65d73e4e6d9f6ef9c3f5ee7ac71",
          "qualifier": "sha"
        },
        {
          "objectId": "361",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDAzMjE4ZjZjMGYwNWY2NWQ3M2U0ZTZkOWY2ZWY5YzNmNWVlN2FjNzE"
    },
    {
      "type": "commit",
      "time": "2025-05-24T22:07:57Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "srbhr",
          "qualifier": "authored-by"
        },
        {
          "objectId": "0abce8261e045201d698a703dcd0ba71c13b42ca",
          "qualifier": "sha"
        },
        {
          "objectId": "361",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDBhYmNlODI2MWUwNDUyMDFkNjk4YTcwM2RjZDBiYTcxYzEzYjQyY2E"
    },
    {
      "type": "commit",
      "time": "2025-05-24T22:17:26Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "srbhr",
          "qualifier": "authored-by"
        },
        {
          "objectId": "a57edfc31283f34f41474a47e7aea24328268f6a",
          "qualifier": "sha"
        },
        {
          "objectId": "361",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKGE1N2VkZmMzMTI4M2YzNGY0MTQ3NGE0N2U3YWVhMjQzMjgyNjhmNmE"
    },
    {
      "type": "commit",
      "time": "2025-05-24T22:26:58Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "srbhr",
          "qualifier": "authored-by"
        },
        {
          "objectId": "ee4c6b8e4e37c8bb41b707636891e914889fc0e2",
          "qualifier": "sha"
        },
        {
          "objectId": "361",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKGVlNGM2YjhlNGUzN2M4YmI0MWI3MDc2MzY4OTFlOTE0ODg5ZmMwZTI"
    },
    {
      "type": "commit",
      "time": "2025-05-24T22:49:53Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "srbhr",
          "qualifier": "authored-by"
        },
        {
          "objectId": "0bf0a99fcb9c21526528013fcd567c05a0617a5d",
          "qualifier": "sha"
        },
        {
          "objectId": "361",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDBiZjBhOTlmY2I5YzIxNTI2NTI4MDEzZmNkNTY3YzA1YTA2MTdhNWQ"
    },
    {
      "type": "comment_pull_request",
      "time": "2025-05-25T10:55:00Z",
      "attributes": [
        {
          "name": "comment",
          "value": "<!-- This is an auto-generated comment: summarize by coderabbit.ai -->\n<!-- This is an auto-generated comment: skip review by coderabbit.ai -->\n\n> [!IMPORTANT]\n> ## Review skipped\n> \n> Auto reviews are disabled on base/target branches other than the default branch.\n> \n> \n> \n> Please check the settings in the CodeRabbit UI or the `.coderabbit.yaml` file in this repository. To trigger a single review, invoke the `@coderabbitai review` command.\n> \n> You can disable this status message by setting the `reviews.review_status` to `false` in the CodeRabbit configuration file.\n\n<!-- end of auto-generated comment: skip review by coderabbit.ai -->\n<!-- tips_start -->\n\n---\n\nThanks for using CodeRabbit! It's free for OSS, and your support helps us grow. If you like it, consider giving us a shout-out.\n\n<details>\n<summary>\u2764\ufe0f Share</summary>\n\n- [X](https://twitter.com/intent/tweet?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A&url=https%3A//coderabbit.ai)\n- [Mastodon](https://mastodon.social/share?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A%20https%3A%2F%2Fcoderabbit.ai)\n- [Reddit](https://www.reddit.com/submit?title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&text=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code.%20Check%20it%20out%3A%20https%3A//coderabbit.ai)\n- [LinkedIn](https://www.linkedin.com/sharing/share-offsite/?url=https%3A%2F%2Fcoderabbit.ai&mini=true&title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&summary=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code)\n\n</details>\n\n<details>\n<summary>\ud83e\udea7 Tips</summary>\n\n### Chat\n\nThere are 3 ways to chat with [CodeRabbit](https://coderabbit.ai?utm_source=oss&utm_medium=github&utm_campaign=srbhr/Resume-Matcher&utm_content=361):\n\n- Review comments: Directly reply to a review comment made by CodeRabbit. Example:\n  - `I pushed a fix in commit <commit_id>, please review it.`\n  - `Explain this complex logic.`\n  - `Open a follow-up GitHub issue for this discussion.`\n- Files and specific lines of code (under the \"Files changed\" tab): Tag `@coderabbitai` in a new review comment at the desired location with your query. Examples:\n  - `@coderabbitai explain this code block.`\n  -\t`@coderabbitai modularize this function.`\n- PR comments: Tag `@coderabbitai` in a new PR comment to ask questions about the PR branch. For the best results, please provide a very specific query, as very limited context is provided in this mode. Examples:\n  - `@coderabbitai gather interesting stats about this repository and render them as a table. Additionally, render a pie chart showing the language distribution in the codebase.`\n  - `@coderabbitai read src/utils.ts and explain its main purpose.`\n  - `@coderabbitai read the files in the src/scheduler package and generate a class diagram using mermaid and a README in the markdown format.`\n  - `@coderabbitai help me debug CodeRabbit configuration file.`\n\n### Support\n\nNeed help? Create a ticket on our [support page](https://www.coderabbit.ai/contact-us/support) for assistance with any issues or questions.\n\nNote: Be mindful of the bot's finite context window. It's strongly recommended to break down tasks such as reading entire modules into smaller chunks. For a focused discussion, use review comments to chat about specific files and their changes, instead of using the PR comments.\n\n### CodeRabbit Commands (Invoked using PR comments)\n\n- `@coderabbitai pause` to pause the reviews on a PR.\n- `@coderabbitai resume` to resume the paused reviews.\n- `@coderabbitai review` to trigger an incremental review. This is useful when automatic reviews are disabled for the repository.\n- `@coderabbitai full review` to do a full review from scratch and review all the files again.\n- `@coderabbitai summary` to regenerate the summary of the PR.\n- `@coderabbitai generate docstrings` to [generate docstrings](https://docs.coderabbit.ai/finishing-touches/docstrings) for this PR.\n- `@coderabbitai generate sequence diagram` to generate a sequence diagram of the changes in this PR.\n- `@coderabbitai resolve` resolve all the CodeRabbit review comments.\n- `@coderabbitai configuration` to show the current CodeRabbit configuration for the repository.\n- `@coderabbitai help` to get help.\n\n### Other keywords and placeholders\n\n- Add `@coderabbitai ignore` anywhere in the PR description to prevent this PR from being reviewed.\n- Add `@coderabbitai summary` to generate the high-level summary at a specific location in the PR description.\n- Add `@coderabbitai` anywhere in the PR title to generate the title automatically.\n\n### CodeRabbit Configuration File (`.coderabbit.yaml`)\n\n- You can programmatically configure CodeRabbit by adding a `.coderabbit.yaml` file to the root of your repository.\n- Please see the [configuration documentation](https://docs.coderabbit.ai/guides/configure-coderabbit) for more information.\n- If your editor has YAML language server enabled, you can add the path at the top of this file to enable auto-completion and validation: `# yaml-language-server: $schema=https://coderabbit.ai/integrations/schema.v2.json`\n\n### Documentation and Community\n\n- Visit our [Documentation](https://docs.coderabbit.ai) for detailed information on how to use CodeRabbit.\n- Join our [Discord Community](http://discord.gg/coderabbit) to get help, request features, and share feedback.\n- Follow us on [X/Twitter](https://twitter.com/coderabbitai) for updates and announcements.\n\n</details>\n\n<!-- tips_end -->"
        }
      ],
      "relationships": [
        {
          "objectId": "coderabbitai[bot]",
          "qualifier": "commented-by"
        },
        {
          "objectId": "361",
          "qualifier": "on"
        }
      ],
      "id": "IC_kwDODyNbyM6tUM2y"
    },
    {
      "type": "merge_pull_request",
      "time": "2025-05-25T10:58:37Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "361",
          "qualifier": "merged-on-pull_request"
        }
      ],
      "id": "ME_lADODyNbyM64IbADzwAAAAQlMzVd"
    },
    {
      "type": "close_pull_request",
      "time": "2025-05-25T10:58:37Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "361",
          "qualifier": "closed-on-pull_request"
        }
      ],
      "id": "CE_lADODyNbyM64IbADzwAAAAQlMzVi"
    },
    {
      "type": "commit",
      "time": "2025-05-23T19:29:43Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "authored-by"
        },
        {
          "objectId": "6647b598aaa9cc78d94a63dd69c112a270e78595",
          "qualifier": "sha"
        },
        {
          "objectId": "360",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDY2NDdiNTk4YWFhOWNjNzhkOTRhNjNkZDY5YzExMmEyNzBlNzg1OTU"
    },
    {
      "type": "add_label",
      "time": "2025-05-23T19:29:44Z",
      "attributes": [
        {
          "name": "label",
          "value": "dependencies"
        }
      ],
      "relationships": [
        {
          "objectId": "dependabot[bot]",
          "qualifier": "authored-by"
        },
        {
          "objectId": "360",
          "qualifier": "labeled-on-pull_request"
        }
      ],
      "id": "LE_lADODyNbyM64BRG5zwAAAAQkr2Jr"
    },
    {
      "type": "add_label",
      "time": "2025-05-23T19:29:44Z",
      "attributes": [
        {
          "name": "label",
          "value": "python"
        }
      ],
      "relationships": [
        {
          "objectId": "dependabot[bot]",
          "qualifier": "authored-by"
        },
        {
          "objectId": "360",
          "qualifier": "labeled-on-pull_request"
        }
      ],
      "id": "LE_lADODyNbyM64BRG5zwAAAAQkr2Jw"
    },
    {
      "type": "add_label",
      "time": "2025-05-23T19:29:44Z",
      "attributes": [
        {
          "name": "label",
          "value": "dependencies"
        }
      ],
      "relationships": [
        {
          "objectId": "dependabot[bot]",
          "qualifier": "authored-by"
        },
        {
          "objectId": "360",
          "qualifier": "labeled-on-pull_request"
        }
      ],
      "id": "LE_lADODyNbyM64BRG5zwAAAAQkr2K9"
    },
    {
      "type": "add_label",
      "time": "2025-05-23T19:29:44Z",
      "attributes": [
        {
          "name": "label",
          "value": "python"
        }
      ],
      "relationships": [
        {
          "objectId": "dependabot[bot]",
          "qualifier": "authored-by"
        },
        {
          "objectId": "360",
          "qualifier": "labeled-on-pull_request"
        }
      ],
      "id": "LE_lADODyNbyM64BRG5zwAAAAQkr2La"
    },
    {
      "type": "comment_pull_request",
      "time": "2025-05-23T19:29:49Z",
      "attributes": [
        {
          "name": "comment",
          "value": "<!-- This is an auto-generated comment: summarize by coderabbit.ai -->\n<!-- This is an auto-generated comment: skip review by coderabbit.ai -->\n\n> [!IMPORTANT]\n> ## Review skipped\n> \n> Bot user detected.\n> \n> To trigger a single review, invoke the `@coderabbitai review` command.\n> \n> You can disable this status message by setting the `reviews.review_status` to `false` in the CodeRabbit configuration file.\n\n<!-- end of auto-generated comment: skip review by coderabbit.ai -->\n<!-- tips_start -->\n\n---\n\n\n\n<details>\n<summary>\ud83e\udea7 Tips</summary>\n\n### Chat\n\nThere are 3 ways to chat with [CodeRabbit](https://coderabbit.ai?utm_source=oss&utm_medium=github&utm_campaign=srbhr/Resume-Matcher&utm_content=360):\n\n- Review comments: Directly reply to a review comment made by CodeRabbit. Example:\n  - `I pushed a fix in commit <commit_id>, please review it.`\n  - `Explain this complex logic.`\n  - `Open a follow-up GitHub issue for this discussion.`\n- Files and specific lines of code (under the \"Files changed\" tab): Tag `@coderabbitai` in a new review comment at the desired location with your query. Examples:\n  - `@coderabbitai explain this code block.`\n  -\t`@coderabbitai modularize this function.`\n- PR comments: Tag `@coderabbitai` in a new PR comment to ask questions about the PR branch. For the best results, please provide a very specific query, as very limited context is provided in this mode. Examples:\n  - `@coderabbitai gather interesting stats about this repository and render them as a table. Additionally, render a pie chart showing the language distribution in the codebase.`\n  - `@coderabbitai read src/utils.ts and explain its main purpose.`\n  - `@coderabbitai read the files in the src/scheduler package and generate a class diagram using mermaid and a README in the markdown format.`\n  - `@coderabbitai help me debug CodeRabbit configuration file.`\n\n### Support\n\nNeed help? Join our [Discord community](https://discord.gg/coderabbit) for assistance with any issues or questions.\n\nNote: Be mindful of the bot's finite context window. It's strongly recommended to break down tasks such as reading entire modules into smaller chunks. For a focused discussion, use review comments to chat about specific files and their changes, instead of using the PR comments.\n\n### CodeRabbit Commands (Invoked using PR comments)\n\n- `@coderabbitai pause` to pause the reviews on a PR.\n- `@coderabbitai resume` to resume the paused reviews.\n- `@coderabbitai review` to trigger an incremental review. This is useful when automatic reviews are disabled for the repository.\n- `@coderabbitai full review` to do a full review from scratch and review all the files again.\n- `@coderabbitai summary` to regenerate the summary of the PR.\n- `@coderabbitai generate sequence diagram` to generate a sequence diagram of the changes in this PR.\n- `@coderabbitai resolve` resolve all the CodeRabbit review comments.\n- `@coderabbitai configuration` to show the current CodeRabbit configuration for the repository.\n- `@coderabbitai help` to get help.\n\n### Other keywords and placeholders\n\n- Add `@coderabbitai ignore` anywhere in the PR description to prevent this PR from being reviewed.\n- Add `@coderabbitai summary` to generate the high-level summary at a specific location in the PR description.\n- Add `@coderabbitai` anywhere in the PR title to generate the title automatically.\n\n### CodeRabbit Configuration File (`.coderabbit.yaml`)\n\n- You can programmatically configure CodeRabbit by adding a `.coderabbit.yaml` file to the root of your repository.\n- Please see the [configuration documentation](https://docs.coderabbit.ai/guides/configure-coderabbit) for more information.\n- If your editor has YAML language server enabled, you can add the path at the top of this file to enable auto-completion and validation: `# yaml-language-server: $schema=https://coderabbit.ai/integrations/schema.v2.json`\n\n### Documentation and Community\n\n- Visit our [Documentation](https://docs.coderabbit.ai) for detailed information on how to use CodeRabbit.\n- Join our [Discord Community](http://discord.gg/coderabbit) to get help, request features, and share feedback.\n- Follow us on [X/Twitter](https://twitter.com/coderabbitai) for updates and announcements.\n\n</details>\n\n<!-- tips_end -->"
        }
      ],
      "relationships": [
        {
          "objectId": "coderabbitai[bot]",
          "qualifier": "commented-by"
        },
        {
          "objectId": "360",
          "qualifier": "on"
        }
      ],
      "id": "IC_kwDODyNbyM6tL7Fs"
    },
    {
      "type": "merge_pull_request",
      "time": "2025-05-26T06:18:53Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "360",
          "qualifier": "merged-on-pull_request"
        }
      ],
      "id": "ME_lADODyNbyM64BRG5zwAAAAQlelys"
    },
    {
      "type": "close_pull_request",
      "time": "2025-05-26T06:18:53Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "360",
          "qualifier": "closed-on-pull_request"
        }
      ],
      "id": "CE_lADODyNbyM64BRG5zwAAAAQlelzC"
    },
    {
      "type": "commit",
      "time": "2025-05-22T21:34:22Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "srbhr",
          "qualifier": "authored-by"
        },
        {
          "objectId": "0cc2a755ba313633e6e9c429e3d962130de4a63f",
          "qualifier": "sha"
        },
        {
          "objectId": "359",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDBjYzJhNzU1YmEzMTM2MzNlNmU5YzQyOWUzZDk2MjEzMGRlNGE2M2Y"
    },
    {
      "type": "commit",
      "time": "2025-05-23T07:42:26Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "srbhr",
          "qualifier": "authored-by"
        },
        {
          "objectId": "c3a8f9e1db3208f617b17a0b72e14ebcf6e286ff",
          "qualifier": "sha"
        },
        {
          "objectId": "359",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKGMzYThmOWUxZGIzMjA4ZjYxN2IxN2EwYjcyZTE0ZWJjZjZlMjg2ZmY"
    },
    {
      "type": "comment_pull_request",
      "time": "2025-05-23T07:43:01Z",
      "attributes": [
        {
          "name": "comment",
          "value": "<!-- This is an auto-generated comment: summarize by coderabbit.ai -->\n<!-- This is an auto-generated comment: skip review by coderabbit.ai -->\n\n> [!IMPORTANT]\n> ## Review skipped\n> \n> Auto reviews are disabled on base/target branches other than the default branch.\n> \n> \n> \n> Please check the settings in the CodeRabbit UI or the `.coderabbit.yaml` file in this repository. To trigger a single review, invoke the `@coderabbitai review` command.\n> \n> You can disable this status message by setting the `reviews.review_status` to `false` in the CodeRabbit configuration file.\n\n<!-- end of auto-generated comment: skip review by coderabbit.ai -->\n<!-- tips_start -->\n\n---\n\nThanks for using CodeRabbit! It's free for OSS, and your support helps us grow. If you like it, consider giving us a shout-out.\n\n<details>\n<summary>\u2764\ufe0f Share</summary>\n\n- [X](https://twitter.com/intent/tweet?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A&url=https%3A//coderabbit.ai)\n- [Mastodon](https://mastodon.social/share?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A%20https%3A%2F%2Fcoderabbit.ai)\n- [Reddit](https://www.reddit.com/submit?title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&text=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code.%20Check%20it%20out%3A%20https%3A//coderabbit.ai)\n- [LinkedIn](https://www.linkedin.com/sharing/share-offsite/?url=https%3A%2F%2Fcoderabbit.ai&mini=true&title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&summary=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code)\n\n</details>\n\n<details>\n<summary>\ud83e\udea7 Tips</summary>\n\n### Chat\n\nThere are 3 ways to chat with [CodeRabbit](https://coderabbit.ai?utm_source=oss&utm_medium=github&utm_campaign=srbhr/Resume-Matcher&utm_content=359):\n\n- Review comments: Directly reply to a review comment made by CodeRabbit. Example:\n  - `I pushed a fix in commit <commit_id>, please review it.`\n  - `Explain this complex logic.`\n  - `Open a follow-up GitHub issue for this discussion.`\n- Files and specific lines of code (under the \"Files changed\" tab): Tag `@coderabbitai` in a new review comment at the desired location with your query. Examples:\n  - `@coderabbitai explain this code block.`\n  -\t`@coderabbitai modularize this function.`\n- PR comments: Tag `@coderabbitai` in a new PR comment to ask questions about the PR branch. For the best results, please provide a very specific query, as very limited context is provided in this mode. Examples:\n  - `@coderabbitai gather interesting stats about this repository and render them as a table. Additionally, render a pie chart showing the language distribution in the codebase.`\n  - `@coderabbitai read src/utils.ts and explain its main purpose.`\n  - `@coderabbitai read the files in the src/scheduler package and generate a class diagram using mermaid and a README in the markdown format.`\n  - `@coderabbitai help me debug CodeRabbit configuration file.`\n\n### Support\n\nNeed help? Create a ticket on our [support page](https://www.coderabbit.ai/contact-us/support) for assistance with any issues or questions.\n\nNote: Be mindful of the bot's finite context window. It's strongly recommended to break down tasks such as reading entire modules into smaller chunks. For a focused discussion, use review comments to chat about specific files and their changes, instead of using the PR comments.\n\n### CodeRabbit Commands (Invoked using PR comments)\n\n- `@coderabbitai pause` to pause the reviews on a PR.\n- `@coderabbitai resume` to resume the paused reviews.\n- `@coderabbitai review` to trigger an incremental review. This is useful when automatic reviews are disabled for the repository.\n- `@coderabbitai full review` to do a full review from scratch and review all the files again.\n- `@coderabbitai summary` to regenerate the summary of the PR.\n- `@coderabbitai generate docstrings` to [generate docstrings](https://docs.coderabbit.ai/finishing-touches/docstrings) for this PR.\n- `@coderabbitai generate sequence diagram` to generate a sequence diagram of the changes in this PR.\n- `@coderabbitai resolve` resolve all the CodeRabbit review comments.\n- `@coderabbitai configuration` to show the current CodeRabbit configuration for the repository.\n- `@coderabbitai help` to get help.\n\n### Other keywords and placeholders\n\n- Add `@coderabbitai ignore` anywhere in the PR description to prevent this PR from being reviewed.\n- Add `@coderabbitai summary` to generate the high-level summary at a specific location in the PR description.\n- Add `@coderabbitai` anywhere in the PR title to generate the title automatically.\n\n### CodeRabbit Configuration File (`.coderabbit.yaml`)\n\n- You can programmatically configure CodeRabbit by adding a `.coderabbit.yaml` file to the root of your repository.\n- Please see the [configuration documentation](https://docs.coderabbit.ai/guides/configure-coderabbit) for more information.\n- If your editor has YAML language server enabled, you can add the path at the top of this file to enable auto-completion and validation: `# yaml-language-server: $schema=https://coderabbit.ai/integrations/schema.v2.json`\n\n### Documentation and Community\n\n- Visit our [Documentation](https://docs.coderabbit.ai) for detailed information on how to use CodeRabbit.\n- Join our [Discord Community](http://discord.gg/coderabbit) to get help, request features, and share feedback.\n- Follow us on [X/Twitter](https://twitter.com/coderabbitai) for updates and announcements.\n\n</details>\n\n<!-- tips_end -->"
        }
      ],
      "relationships": [
        {
          "objectId": "coderabbitai[bot]",
          "qualifier": "commented-by"
        },
        {
          "objectId": "359",
          "qualifier": "on"
        }
      ],
      "id": "IC_kwDODyNbyM6tEOys"
    },
    {
      "type": "merge_pull_request",
      "time": "2025-05-23T07:43:13Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "359",
          "qualifier": "merged-on-pull_request"
        }
      ],
      "id": "ME_lADODyNbyM636SmszwAAAAQkFAq8"
    },
    {
      "type": "close_pull_request",
      "time": "2025-05-23T07:43:13Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "359",
          "qualifier": "closed-on-pull_request"
        }
      ],
      "id": "CE_lADODyNbyM636SmszwAAAAQkFArJ"
    },
    {
      "type": "commit",
      "time": "2025-05-16T16:27:01Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "srbhr",
          "qualifier": "authored-by"
        },
        {
          "objectId": "c14d8153cba9cb6f32cec54605969be473ee4707",
          "qualifier": "sha"
        },
        {
          "objectId": "358",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKGMxNGQ4MTUzY2JhOWNiNmYzMmNlYzU0NjA1OTY5YmU0NzNlZTQ3MDc"
    },
    {
      "type": "comment_pull_request",
      "time": "2025-05-16T16:27:33Z",
      "attributes": [
        {
          "name": "comment",
          "value": "<!-- This is an auto-generated comment: summarize by coderabbit.ai -->\n<!-- This is an auto-generated comment: skip review by coderabbit.ai -->\n\n> [!IMPORTANT]\n> ## Review skipped\n> \n> Auto reviews are disabled on base/target branches other than the default branch.\n> \n> \n> \n> Please check the settings in the CodeRabbit UI or the `.coderabbit.yaml` file in this repository. To trigger a single review, invoke the `@coderabbitai review` command.\n> \n> You can disable this status message by setting the `reviews.review_status` to `false` in the CodeRabbit configuration file.\n\n<!-- end of auto-generated comment: skip review by coderabbit.ai -->\n<!-- tips_start -->\n\n---\n\nThanks for using CodeRabbit! It's free for OSS, and your support helps us grow. If you like it, consider giving us a shout-out.\n\n<details>\n<summary>\u2764\ufe0f Share</summary>\n\n- [X](https://twitter.com/intent/tweet?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A&url=https%3A//coderabbit.ai)\n- [Mastodon](https://mastodon.social/share?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A%20https%3A%2F%2Fcoderabbit.ai)\n- [Reddit](https://www.reddit.com/submit?title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&text=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code.%20Check%20it%20out%3A%20https%3A//coderabbit.ai)\n- [LinkedIn](https://www.linkedin.com/sharing/share-offsite/?url=https%3A%2F%2Fcoderabbit.ai&mini=true&title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&summary=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code)\n\n</details>\n\n<details>\n<summary>\ud83e\udea7 Tips</summary>\n\n### Chat\n\nThere are 3 ways to chat with [CodeRabbit](https://coderabbit.ai?utm_source=oss&utm_medium=github&utm_campaign=srbhr/Resume-Matcher&utm_content=358):\n\n- Review comments: Directly reply to a review comment made by CodeRabbit. Example:\n  - `I pushed a fix in commit <commit_id>, please review it.`\n  - `Explain this complex logic.`\n  - `Open a follow-up GitHub issue for this discussion.`\n- Files and specific lines of code (under the \"Files changed\" tab): Tag `@coderabbitai` in a new review comment at the desired location with your query. Examples:\n  - `@coderabbitai explain this code block.`\n  -\t`@coderabbitai modularize this function.`\n- PR comments: Tag `@coderabbitai` in a new PR comment to ask questions about the PR branch. For the best results, please provide a very specific query, as very limited context is provided in this mode. Examples:\n  - `@coderabbitai gather interesting stats about this repository and render them as a table. Additionally, render a pie chart showing the language distribution in the codebase.`\n  - `@coderabbitai read src/utils.ts and explain its main purpose.`\n  - `@coderabbitai read the files in the src/scheduler package and generate a class diagram using mermaid and a README in the markdown format.`\n  - `@coderabbitai help me debug CodeRabbit configuration file.`\n\n### Support\n\nNeed help? Create a ticket on our [support page](https://www.coderabbit.ai/contact-us/support) for assistance with any issues or questions.\n\nNote: Be mindful of the bot's finite context window. It's strongly recommended to break down tasks such as reading entire modules into smaller chunks. For a focused discussion, use review comments to chat about specific files and their changes, instead of using the PR comments.\n\n### CodeRabbit Commands (Invoked using PR comments)\n\n- `@coderabbitai pause` to pause the reviews on a PR.\n- `@coderabbitai resume` to resume the paused reviews.\n- `@coderabbitai review` to trigger an incremental review. This is useful when automatic reviews are disabled for the repository.\n- `@coderabbitai full review` to do a full review from scratch and review all the files again.\n- `@coderabbitai summary` to regenerate the summary of the PR.\n- `@coderabbitai generate docstrings` to [generate docstrings](https://docs.coderabbit.ai/finishing-touches/docstrings) for this PR.\n- `@coderabbitai generate sequence diagram` to generate a sequence diagram of the changes in this PR.\n- `@coderabbitai resolve` resolve all the CodeRabbit review comments.\n- `@coderabbitai configuration` to show the current CodeRabbit configuration for the repository.\n- `@coderabbitai help` to get help.\n\n### Other keywords and placeholders\n\n- Add `@coderabbitai ignore` anywhere in the PR description to prevent this PR from being reviewed.\n- Add `@coderabbitai summary` to generate the high-level summary at a specific location in the PR description.\n- Add `@coderabbitai` anywhere in the PR title to generate the title automatically.\n\n### CodeRabbit Configuration File (`.coderabbit.yaml`)\n\n- You can programmatically configure CodeRabbit by adding a `.coderabbit.yaml` file to the root of your repository.\n- Please see the [configuration documentation](https://docs.coderabbit.ai/guides/configure-coderabbit) for more information.\n- If your editor has YAML language server enabled, you can add the path at the top of this file to enable auto-completion and validation: `# yaml-language-server: $schema=https://coderabbit.ai/integrations/schema.v2.json`\n\n### Documentation and Community\n\n- Visit our [Documentation](https://docs.coderabbit.ai) for detailed information on how to use CodeRabbit.\n- Join our [Discord Community](http://discord.gg/coderabbit) to get help, request features, and share feedback.\n- Follow us on [X/Twitter](https://twitter.com/coderabbitai) for updates and announcements.\n\n</details>\n\n<!-- tips_end -->"
        }
      ],
      "relationships": [
        {
          "objectId": "coderabbitai[bot]",
          "qualifier": "commented-by"
        },
        {
          "objectId": "358",
          "qualifier": "on"
        }
      ],
      "id": "IC_kwDODyNbyM6sFuK1"
    },
    {
      "type": "commit",
      "time": "2025-05-16T20:29:14Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "srbhr",
          "qualifier": "authored-by"
        },
        {
          "objectId": "23f84afafea1ebafcc748c095e1fe9072c338540",
          "qualifier": "sha"
        },
        {
          "objectId": "358",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDIzZjg0YWZhZmVhMWViYWZjYzc0OGMwOTVlMWZlOTA3MmMzMzg1NDA"
    },
    {
      "type": "commit",
      "time": "2025-05-16T21:05:28Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "srbhr",
          "qualifier": "authored-by"
        },
        {
          "objectId": "ffa06101b453b41645aa5c4b6747dd0d459101a1",
          "qualifier": "sha"
        },
        {
          "objectId": "358",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKGZmYTA2MTAxYjQ1M2I0MTY0NWFhNWM0YjY3NDdkZDBkNDU5MTAxYTE"
    },
    {
      "type": "commit",
      "time": "2025-05-22T18:24:22Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "srbhr",
          "qualifier": "authored-by"
        },
        {
          "objectId": "5f7ec45668cf0d85493b0c50677da049b63bd117",
          "qualifier": "sha"
        },
        {
          "objectId": "358",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDVmN2VjNDU2NjhjZjBkODU0OTNiMGM1MDY3N2RhMDQ5YjYzYmQxMTc"
    },
    {
      "type": "merge_pull_request",
      "time": "2025-05-22T18:25:19Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "358",
          "qualifier": "merged-on-pull_request"
        }
      ],
      "id": "ME_lADODyNbyM6289G_zwAAAAQjoY47"
    },
    {
      "type": "close_pull_request",
      "time": "2025-05-22T18:25:19Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "358",
          "qualifier": "closed-on-pull_request"
        }
      ],
      "id": "CE_lADODyNbyM6289G_zwAAAAQjoY5I"
    },
    {
      "type": "commit",
      "time": "2025-05-02T10:30:12Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "authored-by"
        },
        {
          "objectId": "3621cf8f138b26adf8d28ad8326b148017ce701c",
          "qualifier": "sha"
        },
        {
          "objectId": "356",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDM2MjFjZjhmMTM4YjI2YWRmOGQyOGFkODMyNmIxNDgwMTdjZTcwMWM"
    },
    {
      "type": "comment_pull_request",
      "time": "2025-05-02T10:31:07Z",
      "attributes": [
        {
          "name": "comment",
          "value": "<!-- This is an auto-generated comment: summarize by coderabbit.ai -->\n<!-- This is an auto-generated comment: skip review by coderabbit.ai -->\n\n> [!IMPORTANT]\n> ## Review skipped\n> \n> Auto reviews are disabled on base/target branches other than the default branch.\n> \n> \n> \n> Please check the settings in the CodeRabbit UI or the `.coderabbit.yaml` file in this repository. To trigger a single review, invoke the `@coderabbitai review` command.\n> \n> You can disable this status message by setting the `reviews.review_status` to `false` in the CodeRabbit configuration file.\n\n<!-- end of auto-generated comment: skip review by coderabbit.ai -->\n<!-- walkthrough_start -->\n\n## Walkthrough\n\nThis update represents a comprehensive overhaul of the codebase, shifting from a Streamlit-based, script-heavy prototype to a modern, modular FastAPI web application with strong typing, database integration, and AI-driven services. The previous architecture, which included numerous scripts for data extraction, processing, and similarity scoring, has been entirely removed. In its place, new Python modules introduce structured models, Pydantic schemas, service layers, prompt and schema factories, AI agent management, and robust API routing with middleware and error handling. The dependency stack is modernized, and legacy files, scripts, and Docker-related infrastructure are deleted.\n\n## Changes\n\n| Files / Groups                                         | Change Summary |\n|--------------------------------------------------------|---------------|\n| `.gitignore`                                           | Updated ignore rules: removed specific script/data ignores, added `.cursorrules`, `__pycache__/`, and `__pypackages__`. |\n| `.pre-commit-config.yaml`, `build.dockerfile`, `docker-compose.yml` | Deleted pre-commit config and Docker infrastructure files. |\n| `requirements.txt`                                     | Replaced old requirements with a new set focused on FastAPI, modern async, AI, and database support. |\n| `README.md`                                            | Replaced detailed documentation with a single line: \"Veridis Quo\". |\n| `Demo/DemoData.py`, `run_first.py`, `resume_matcher/`, `scripts/`, `streamlit_*.py` | Deleted all demo data, legacy scripts, and Streamlit apps. |\n| `app/agent/`                                           | Introduced agent management modules for LLM and embedding providers, including exception handling and strategy wrappers. |\n| `app/api/`                                             | Added FastAPI routers, health check, middleware for request IDs, and API versioning. |\n| `app/base.py`, `app/main.py`                           | Added FastAPI app factory, startup/shutdown logic, and main entry point. |\n| `app/core/`                                            | Added configuration, logging, database engine/session setup, and centralized exception handlers. |\n| `app/models/`                                          | Added SQLAlchemy models for users, resumes, jobs, and associations with relationships and schema. |\n| `app/prompt/`                                          | Added prompt factory and prompt templates for LLM interactions. |\n| `app/schemas/json/`                                    | Added schema factory and JSON schema definitions for structured job and resume data. |\n| `app/schemas/pydantic/`                                | Added Pydantic models for API request/response validation and structured data. |\n| `app/services/`                                        | Added service classes for job, resume, and score improvement logic, plus custom exceptions. |\n\n## Sequence Diagram(s)\n\n```mermaid\nsequenceDiagram\n    participant Client\n    participant FastAPI\n    participant Middleware\n    participant Router\n    participant Service\n    participant Database\n    participant LLM_Agent\n\n    Client->>FastAPI: HTTP Request (e.g., /api/v1/resumes/upload)\n    FastAPI->>Middleware: Assign request ID\n    Middleware->>Router: Forward request\n    Router->>Service: Validate & process input\n    Service->>Database: Store/retrieve data\n    Service->>LLM_Agent: (If needed) Generate/score/improve via LLM\n    LLM_Agent-->>Service: LLM result\n    Database-->>Service: DB result\n    Service-->>Router: Response data\n    Router-->>FastAPI: API response\n    FastAPI-->>Client: JSON/streamed response\n```\n\n## Possibly related PRs\n\n- **srbhr/Resume-Matcher#343**: Directly related to the `.gitignore` changes, as both PRs update ignored files and directories in the same way.\n- **srbhr/Resume-Matcher#350**: Also modifies `.gitignore` identically, but does not overlap with the broader codebase changes in this PR.\n- **srbhr/Resume-Matcher#353**: Contains the same `.gitignore` updates as this PR, but no other codebase modifications.\n\n## Suggested reviewers\n\n- srbhr\n\n## Poem\n\n> Oh, what a hop from scripts to the cloud,  \n> The old code is gone, the new wears a shroud.  \n> FastAPI now leads with a whisker and cheer,  \n> Models and schemas are crystal clear.  \n> Rabbits rejoice, as the codebase is neat\u2014  \n> The garden is pruned, and the carrots are sweet!  \n> \ud83d\udc07\u2728\n\n<!-- walkthrough_end -->\n<!-- internal state start -->\n\n\n<!--  -->\n\n<!-- internal state end -->\n<!-- tips_start -->\n\n---\n\nThanks for using CodeRabbit! It's free for OSS, and your support helps us grow. If you like it, consider giving us a shout-out.\n\n<details>\n<summary>\u2764\ufe0f Share</summary>\n\n- [X](https://twitter.com/intent/tweet?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A&url=https%3A//coderabbit.ai)\n- [Mastodon](https://mastodon.social/share?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A%20https%3A%2F%2Fcoderabbit.ai)\n- [Reddit](https://www.reddit.com/submit?title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&text=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code.%20Check%20it%20out%3A%20https%3A//coderabbit.ai)\n- [LinkedIn](https://www.linkedin.com/sharing/share-offsite/?url=https%3A%2F%2Fcoderabbit.ai&mini=true&title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&summary=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code)\n\n</details>\n\n<details>\n<summary>\ud83e\udea7 Tips</summary>\n\n### Chat\n\nThere are 3 ways to chat with [CodeRabbit](https://coderabbit.ai?utm_source=oss&utm_medium=github&utm_campaign=srbhr/Resume-Matcher&utm_content=356):\n\n- Review comments: Directly reply to a review comment made by CodeRabbit. Example:\n  - `I pushed a fix in commit <commit_id>, please review it.`\n  - `Generate unit testing code for this file.`\n  - `Open a follow-up GitHub issue for this discussion.`\n- Files and specific lines of code (under the \"Files changed\" tab): Tag `@coderabbitai` in a new review comment at the desired location with your query. Examples:\n  - `@coderabbitai generate unit testing code for this file.`\n  -\t`@coderabbitai modularize this function.`\n- PR comments: Tag `@coderabbitai` in a new PR comment to ask questions about the PR branch. For the best results, please provide a very specific query, as very limited context is provided in this mode. Examples:\n  - `@coderabbitai gather interesting stats about this repository and render them as a table. Additionally, render a pie chart showing the language distribution in the codebase.`\n  - `@coderabbitai read src/utils.ts and generate unit testing code.`\n  - `@coderabbitai read the files in the src/scheduler package and generate a class diagram using mermaid and a README in the markdown format.`\n  - `@coderabbitai help me debug CodeRabbit configuration file.`\n\n### Support\n\nNeed help? Create a ticket on our [support page](https://www.coderabbit.ai/contact-us/support) for assistance with any issues or questions.\n\nNote: Be mindful of the bot's finite context window. It's strongly recommended to break down tasks such as reading entire modules into smaller chunks. For a focused discussion, use review comments to chat about specific files and their changes, instead of using the PR comments.\n\n### CodeRabbit Commands (Invoked using PR comments)\n\n- `@coderabbitai pause` to pause the reviews on a PR.\n- `@coderabbitai resume` to resume the paused reviews.\n- `@coderabbitai review` to trigger an incremental review. This is useful when automatic reviews are disabled for the repository.\n- `@coderabbitai full review` to do a full review from scratch and review all the files again.\n- `@coderabbitai summary` to regenerate the summary of the PR.\n- `@coderabbitai generate docstrings` to [generate docstrings](https://docs.coderabbit.ai/finishing-touches/docstrings) for this PR.\n- `@coderabbitai generate sequence diagram` to generate a sequence diagram of the changes in this PR.\n- `@coderabbitai resolve` resolve all the CodeRabbit review comments.\n- `@coderabbitai configuration` to show the current CodeRabbit configuration for the repository.\n- `@coderabbitai help` to get help.\n\n### Other keywords and placeholders\n\n- Add `@coderabbitai ignore` anywhere in the PR description to prevent this PR from being reviewed.\n- Add `@coderabbitai summary` to generate the high-level summary at a specific location in the PR description.\n- Add `@coderabbitai` anywhere in the PR title to generate the title automatically.\n\n### CodeRabbit Configuration File (`.coderabbit.yaml`)\n\n- You can programmatically configure CodeRabbit by adding a `.coderabbit.yaml` file to the root of your repository.\n- Please see the [configuration documentation](https://docs.coderabbit.ai/guides/configure-coderabbit) for more information.\n- If your editor has YAML language server enabled, you can add the path at the top of this file to enable auto-completion and validation: `# yaml-language-server: $schema=https://coderabbit.ai/integrations/schema.v2.json`\n\n### Documentation and Community\n\n- Visit our [Documentation](https://docs.coderabbit.ai) for detailed information on how to use CodeRabbit.\n- Join our [Discord Community](http://discord.gg/coderabbit) to get help, request features, and share feedback.\n- Follow us on [X/Twitter](https://twitter.com/coderabbitai) for updates and announcements.\n\n</details>\n\n<!-- tips_end -->"
        }
      ],
      "relationships": [
        {
          "objectId": "coderabbitai[bot]",
          "qualifier": "commented-by"
        },
        {
          "objectId": "356",
          "qualifier": "on"
        }
      ],
      "id": "IC_kwDODyNbyM6psBo1"
    },
    {
      "type": "comment_review",
      "time": "2025-05-02T10:36:06Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "coderabbitai[bot]",
          "qualifier": "commented-by"
        },
        {
          "objectId": "356",
          "qualifier": "for-pull-request"
        }
      ],
      "id": "2811691360"
    },
    {
      "type": "comment_pull_request",
      "time": "2025-05-03T17:38:18Z",
      "attributes": [
        {
          "name": "comment",
          "value": "Working Test case:\r\n![image](https://github.com/user-attachments/assets/4d49a880-498c-4627-9cb4-6e85063cf235)\r\n"
        }
      ],
      "relationships": [
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "commented-by"
        },
        {
          "objectId": "356",
          "qualifier": "on"
        }
      ],
      "id": "IC_kwDODyNbyM6pzB89"
    },
    {
      "type": "commit",
      "time": "2025-05-03T17:42:45Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "authored-by"
        },
        {
          "objectId": "c3edf8ccb8108350fc91d7baf3fbeeaa0b458a7f",
          "qualifier": "sha"
        },
        {
          "objectId": "356",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKGMzZWRmOGNjYjgxMDgzNTBmYzkxZDdiYWYzZmJlZWFhMGI0NThhN2Y"
    },
    {
      "type": "merge_pull_request",
      "time": "2025-05-03T17:58:24Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "356",
          "qualifier": "merged-on-pull_request"
        }
      ],
      "id": "ME_lADODyNbyM608QYbzwAAAAQTlI5A"
    },
    {
      "type": "close_pull_request",
      "time": "2025-05-03T17:58:24Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "356",
          "qualifier": "closed-on-pull_request"
        }
      ],
      "id": "CE_lADODyNbyM608QYbzwAAAAQTlI5H"
    },
    {
      "type": "commit",
      "time": "2025-04-29T17:04:37Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "authored-by"
        },
        {
          "objectId": "6a4161d1cd73ac976c7542dc97997a7cef6beef0",
          "qualifier": "sha"
        },
        {
          "objectId": "355",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDZhNDE2MWQxY2Q3M2FjOTc2Yzc1NDJkYzk3OTk3YTdjZWY2YmVlZjA"
    },
    {
      "type": "comment_pull_request",
      "time": "2025-04-29T17:06:17Z",
      "attributes": [
        {
          "name": "comment",
          "value": "<!-- This is an auto-generated comment: summarize by coderabbit.ai -->\n<!-- walkthrough_start -->\n\n## Walkthrough\n\nThis update represents a major refactor and modernization of the project. The entire legacy codebase\u2014comprising Streamlit applications, data extraction scripts, classic NLP utilities, and related data processing modules\u2014has been removed. In its place, a new FastAPI-based backend is introduced, featuring modular architecture with asynchronous support, robust database integration, and modern LLM agent and embedding management. The new structure includes clearly defined models, schemas, services, and API routers, with comprehensive error handling and configuration management. The dependency set has been overhauled, shifting from data science and Streamlit-centric libraries to async web frameworks and LLM tooling. All legacy Docker and pre-commit configurations have also been removed.\n\n## Changes\n\n| Files/Paths                                           | Change Summary |\n|-------------------------------------------------------|---------------|\n| `.gitignore`, `.pre-commit-config.yaml`, `build.dockerfile`, `docker-compose.yml`, `requirements.txt` | Updated ignore rules, removed pre-commit config, Dockerfiles, and replaced requirements with new modern stack. |\n| `Demo/DemoData.py`, `resume_matcher/`, `run_first.py`, `scripts/`, `streamlit_app.py`, `streamlit_interactive.py`, `streamlit_second.py` | Entire legacy data, scripts, and Streamlit app code deleted. |\n| `app/agent/`, `app/api/`, `app/base.py`, `app/core/`, `app/main.py`, `app/models/`, `app/prompt/`, `app/schemas/`, `app/services/` | New modular FastAPI backend introduced: agent/provider/strategy abstractions, API routers, database models, config, and service layers. |\n| `README.md`                                           | Replaced all content with a single line: \"Veridis Quo\". |\n\n## Sequence Diagram(s)\n\n```mermaid\nsequenceDiagram\n    participant Client\n    participant FastAPI\n    participant Middleware\n    participant Router\n    participant Service\n    participant DB\n\n    Client->>FastAPI: HTTP Request (e.g., /api/v1/resumes/upload)\n    FastAPI->>Middleware: Process request (add request ID)\n    Middleware->>Router: Route to endpoint\n    Router->>Service: Call business logic (e.g., ResumeService)\n    Service->>DB: Async DB operations (store/retrieve/process)\n    Service-->>Router: Return result (e.g., resume ID)\n    Router-->>FastAPI: Build response\n    FastAPI-->>Client: JSON Response\n```\n\n```mermaid\nsequenceDiagram\n    participant Service\n    participant AgentManager\n    participant Provider (OpenAI/Ollama)\n    participant EmbeddingManager\n\n    Service->>AgentManager: Run LLM strategy with prompt\n    AgentManager->>Provider: Select and invoke provider (OpenAI/Ollama)\n    Provider-->>AgentManager: LLM response\n    AgentManager-->>Service: Structured result\n\n    Service->>EmbeddingManager: Request embedding for text\n    EmbeddingManager->>Provider: Select and invoke embedding provider\n    Provider-->>EmbeddingManager: Embedding vector\n    EmbeddingManager-->>Service: Return embedding\n```\n\n## Poem\n\n> In the warren, code anew,  \n> Old scripts retired, a fresh breeze blew.  \n> FastAPI hops in, swift and spry,  \n> Agents and schemas reaching for the sky.  \n> No more Streamlit burrows, just clean API trails\u2014  \n> The rabbit grins, thumps its tail.  \n> \"Veridis Quo,\" it whispers\u2014onward we sail!  \n> \ud83d\udc07\u2728\n\n<!-- walkthrough_end -->\n<!-- internal state start -->\n\n\n<!-- = -->\n\n<!-- internal state end -->\n<!-- finishing_touch_checkbox_start -->\n\n<details open=\"true\">\n<summary>\u2728 Finishing Touches</summary>\n\n- [ ] <!-- {\"checkboxId\": \"7962f53c-55bc-4827-bfbf-6a18da830691\"} --> \ud83d\udcdd Generate Docstrings\n\n</details>\n\n<!-- finishing_touch_checkbox_end -->\n<!-- tips_start -->\n\n---\n\n\n\n<details>\n<summary>\ud83e\udea7 Tips</summary>\n\n### Chat\n\nThere are 3 ways to chat with [CodeRabbit](https://coderabbit.ai?utm_source=oss&utm_medium=github&utm_campaign=srbhr/Resume-Matcher&utm_content=355):\n\n- Review comments: Directly reply to a review comment made by CodeRabbit. Example:\n  - `I pushed a fix in commit <commit_id>, please review it.`\n  - `Generate unit testing code for this file.`\n  - `Open a follow-up GitHub issue for this discussion.`\n- Files and specific lines of code (under the \"Files changed\" tab): Tag `@coderabbitai` in a new review comment at the desired location with your query. Examples:\n  - `@coderabbitai generate unit testing code for this file.`\n  -\t`@coderabbitai modularize this function.`\n- PR comments: Tag `@coderabbitai` in a new PR comment to ask questions about the PR branch. For the best results, please provide a very specific query, as very limited context is provided in this mode. Examples:\n  - `@coderabbitai gather interesting stats about this repository and render them as a table. Additionally, render a pie chart showing the language distribution in the codebase.`\n  - `@coderabbitai read src/utils.ts and generate unit testing code.`\n  - `@coderabbitai read the files in the src/scheduler package and generate a class diagram using mermaid and a README in the markdown format.`\n  - `@coderabbitai help me debug CodeRabbit configuration file.`\n\nNote: Be mindful of the bot's finite context window. It's strongly recommended to break down tasks such as reading entire modules into smaller chunks. For a focused discussion, use review comments to chat about specific files and their changes, instead of using the PR comments.\n\n### CodeRabbit Commands (Invoked using PR comments)\n\n- `@coderabbitai pause` to pause the reviews on a PR.\n- `@coderabbitai resume` to resume the paused reviews.\n- `@coderabbitai review` to trigger an incremental review. This is useful when automatic reviews are disabled for the repository.\n- `@coderabbitai full review` to do a full review from scratch and review all the files again.\n- `@coderabbitai summary` to regenerate the summary of the PR.\n- `@coderabbitai generate docstrings` to [generate docstrings](https://docs.coderabbit.ai/finishing-touches/docstrings) for this PR.\n- `@coderabbitai generate sequence diagram` to generate a sequence diagram of the changes in this PR.\n- `@coderabbitai resolve` resolve all the CodeRabbit review comments.\n- `@coderabbitai configuration` to show the current CodeRabbit configuration for the repository.\n- `@coderabbitai help` to get help.\n\n### Other keywords and placeholders\n\n- Add `@coderabbitai ignore` anywhere in the PR description to prevent this PR from being reviewed.\n- Add `@coderabbitai summary` to generate the high-level summary at a specific location in the PR description.\n- Add `@coderabbitai` anywhere in the PR title to generate the title automatically.\n\n### CodeRabbit Configuration File (`.coderabbit.yaml`)\n\n- You can programmatically configure CodeRabbit by adding a `.coderabbit.yaml` file to the root of your repository.\n- Please see the [configuration documentation](https://docs.coderabbit.ai/guides/configure-coderabbit) for more information.\n- If your editor has YAML language server enabled, you can add the path at the top of this file to enable auto-completion and validation: `# yaml-language-server: $schema=https://coderabbit.ai/integrations/schema.v2.json`\n\n### Documentation and Community\n\n- Visit our [Documentation](https://docs.coderabbit.ai) for detailed information on how to use CodeRabbit.\n- Join our [Discord Community](http://discord.gg/coderabbit) to get help, request features, and share feedback.\n- Follow us on [X/Twitter](https://twitter.com/coderabbitai) for updates and announcements.\n\n</details>\n\n<!-- tips_end -->"
        }
      ],
      "relationships": [
        {
          "objectId": "coderabbitai[bot]",
          "qualifier": "commented-by"
        },
        {
          "objectId": "355",
          "qualifier": "on"
        }
      ],
      "id": "IC_kwDODyNbyM6pQRHx"
    },
    {
      "type": "comment_review",
      "time": "2025-04-29T17:17:24Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "coderabbitai[bot]",
          "qualifier": "commented-by"
        },
        {
          "objectId": "355",
          "qualifier": "for-pull-request"
        }
      ],
      "id": "2804420597"
    },
    {
      "type": "merge_pull_request",
      "time": "2025-04-29T22:58:07Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "355",
          "qualifier": "merged-on-pull_request"
        }
      ],
      "id": "ME_lADODyNbyM60ivTUzwAAAAQQ65w8"
    },
    {
      "type": "close_pull_request",
      "time": "2025-04-29T22:58:07Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "355",
          "qualifier": "closed-on-pull_request"
        }
      ],
      "id": "CE_lADODyNbyM60ivTUzwAAAAQQ65xY"
    },
    {
      "type": "commit",
      "time": "2025-04-28T16:30:05Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "authored-by"
        },
        {
          "objectId": "615354ecada74e48925ea7f89bc1652e7d06b008",
          "qualifier": "sha"
        },
        {
          "objectId": "354",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDYxNTM1NGVjYWRhNzRlNDg5MjVlYTdmODliYzE2NTJlN2QwNmIwMDg"
    },
    {
      "type": "comment_pull_request",
      "time": "2025-04-28T16:30:52Z",
      "attributes": [
        {
          "name": "comment",
          "value": "<!-- This is an auto-generated comment: summarize by coderabbit.ai -->\n<!-- walkthrough_start -->\n\n## Walkthrough\n\nThis update represents a complete architectural overhaul of the project. The legacy codebase, which relied heavily on scripts, Streamlit applications, and ad hoc data extraction utilities, has been entirely removed. In its place, a modern, modular backend has been introduced, built around FastAPI, SQLAlchemy ORM, and Pydantic schemas. The new structure features clear separation of concerns with dedicated modules for API routing, database models, service layers, agent/provider abstractions for LLMs and embeddings, and prompt/schema factories. All previous data extraction, parsing, and Streamlit UI code has been deleted, and the dependency list has been replaced to reflect the new tech stack.\n\n## Changes\n\n| File(s) / Path(s)                                                                                 | Change Summary|\n|---------------------------------------------------------------------------------------------------||\n| `.gitignore`, `.pre-commit-config.yaml`, `build.dockerfile`, `docker-compose.yml`, `requirements.txt` | Updated `.gitignore` to adjust ignored paths, removed pre-commit config, Dockerfile, and docker-compose, and replaced `requirements.txt` with a new set of dependencies focused on FastAPI, async libraries, and modern Python tooling.                                                                                                                                                |\n| `Demo/DemoData.py`, `resume_matcher/`, `run_first.py`, `scripts/`, `streamlit_app.py`, `streamlit_interactive.py`, `streamlit_second.py` | Entire legacy codebase, including all data extraction, parsing, utility scripts, and Streamlit applications, has been deleted.                                                                                                                                                                                                                                                                                                                                                                                                                                                               |\n| `app/agent/`, `app/api/`, `app/base.py`, `app/core/`, `app/main.py`, `app/models/`, `app/prompt/`, `app/schemas/`, `app/services/`      | Introduced a new modular backend architecture: agent/provider abstractions for LLMs and embeddings, FastAPI app setup with routers and middleware, ORM models for resumes/jobs/users, prompt and schema factories, and service layers for business logic.                                                                                                                               |\n| `app/agent/manager.py`, `app/agent/providers/`, `app/agent/strategies/`                           | Added agent/provider abstractions for selecting and interfacing with OpenAI/Ollama for text generation and embeddings, with error handling and strategy wrappers for JSON/Markdown output.                                                                                                                                                                                                                                                                                                                                                                                                   |\n| `app/api/router/`, `app/api/middleware.py`                                                        | Implemented FastAPI routers for health checks, job and resume upload/improvement endpoints, and middleware for request ID tagging.                                                                                                                                                                                                                                                                                                                                                                                                                                                          |\n| `app/core/config.py`, `app/core/database.py`, `app/core/exceptions.py`                            | Added configuration management, async/sync database setup, and custom exception handlers for HTTP, validation, unhandled, and SQLAlchemy errors.                                                                                                                                                                                                                                                                                                                                                                                                    |\n| `app/models/base.py`, `app/models/job.py`, `app/models/resume.py`, `app/models/user.py`, `app/models/association.py`                   | Defined SQLAlchemy ORM models for jobs, resumes, users, and their associations with relationships and constraints.                                                                                                                                                                                                                                                                                                                                                                                                                                   |\n| `app/prompt/base.py`, `app/prompt/structured_job.py`, `app/prompt/structured_resume.py`, `app/prompt/resume_improvement.py`            | Added dynamic prompt factory and prompt templates for structured job/resume extraction and resume improvement.                                                                                                                                                                                                                                                                                                                                                                                                                                        |\n| `app/schemas/json/`, `app/schemas/pydantic/`                                                      | Introduced dynamic JSON schema factory and Pydantic models/enums for structured job and resume data, with validation and field aliasing.                                                                                                                                                                                                                                                                                                                                                                                                            |\n| `app/services/`                                                                                   | Added service classes for job creation, resume processing, and iterative resume improvement using LLMs and embeddings, with domain-specific exceptions.                                                                                                                                                                                                                                                                                                                                                                                             |\n\n## Sequence Diagram(s)\n\n```mermaid\nsequenceDiagram\n    participant User\n    participant FastAPI\n    participant Middleware\n    participant Service\n    participant DB\n    participant AgentManager\n    participant LLMProvider\n\n    User->>FastAPI: POST /api/v1/resumes/upload (file)\n    FastAPI->>Middleware: Add request_id\n    FastAPI->>Service: ResumeService.convert_and_store_resume(file)\n    Service->>DB: Store raw resume\n    Service->>AgentManager: Extract structured resume (LLM)\n    AgentManager->>LLMProvider: Generate structured JSON\n    LLMProvider-->>AgentManager: JSON result\n    AgentManager-->>Service: Parsed resume data\n    Service->>DB: Store processed resume\n    Service-->>FastAPI: Resume ID\n    FastAPI-->>User: Success response\n\n    User->>FastAPI: POST /api/v1/jobs/upload (JSON)\n    FastAPI->>Service: JobService.create_and_store_job(payload)\n    Service->>DB: Store job(s)\n    Service->>AgentManager: Extract structured job (LLM)\n    AgentManager->>LLMProvider: Generate structured JSON\n    LLMProvider-->>AgentManager: JSON result\n    AgentManager-->>Service: Parsed job data\n    Service->>DB: Store processed job\n    Service-->>FastAPI: Job IDs\n    FastAPI-->>User: Success response\n\n    User->>FastAPI: POST /api/v1/resumes/improvements (resume_id, job_id)\n    FastAPI->>Service: ScoreImprovementService.run(resume_id, job_id)\n    Service->>DB: Fetch resume/job\n    Service->>AgentManager: LLM improvement loop\n    AgentManager->>LLMProvider: Generate improved resume\n    LLMProvider-->>AgentManager: Improved resume\n    AgentManager-->>Service: Improved resume\n    Service->>DB: Update/return improved resume\n    Service-->>FastAPI: Improvement data\n    FastAPI-->>User: Improvement response\n```\n\n## Possibly related PRs\n\n- **srbhr/Resume-Matcher#343**: Also modifies `.gitignore` and `.pre-commit-config.yaml` with identical changes, indicating a direct overlap in configuration updates.\n\n## Poem\n\n> In the warren, code was scattered wide,  \n> Scripts and Streamlit, side by side.  \n> But now a new burrow, sleek and neat,  \n> FastAPI and models\u2014modular, complete!  \n> Old carrots cleared, new gardens grown,  \n> This bunny\u2019s backend stands alone.  \n> Hop, hop, hooray\u2014onward we go,  \n> With clean new code in every row! \ud83d\udc07\u2728\n\n<!-- walkthrough_end -->\n<!-- internal state start -->\n\n\n<!-- DwQgtGAEAqAWCWBnSTIEMB26CuAXA9mAOYCmGJATmriQCaQDG+Ats2bgFyQAOFk+AIwBWJBrngA3EsgEBPRvlqU0AgfFwA6NPEgQAfACgjoCEYDEZyAAUASpETZWaCrKNwSPbABsvkCiQBHbGlcSHFcLzpIACIASQBleIBVAFEwAGYAJgBWSAAfSDJHSAk0L3haanh8LAAzeAAPKPgsRFwKbDFsf3ohQR5ZSoxxBnsGWBJmNGjIAHc0ZAcBZnUaejkwichsREo/NFhvRBaiWEz0gHZ0ZFtIDEcBPfTsgBYULFwtm2lHEjAAWWo4z2/m4+GOBBcGkgsVCaFotH8iF2yCQDg8Ziy2Wh7kgSkQDAo8G44hq6Aw9CUuG0XmQvHwEgqzQ+W243l8/iCITCk24XmoHmcHmY4Ii8j5aAYJFg+C8SgoyFm6hleHs3FE8HqoxatXwFCmpKwKnwqs+HnGmFIyCmShxW3CkXetHgDAFyE+1E2wu0dXwDB2/FqXusdlQBEg9QahXuzBKZQqVTJSs+LWDbQ6XR6kD6AjGEymm09O2k1kGmBGEb1eOoaDj5UqhuhADl8OgEepqhgyu9dfrExgADT2Tqwa7Bru4boefBBs0RxpDphKewYYnq3CIIc0Nond7pzqGzf8PjAhgAa3KbQUGHqfcPQ/mdIoDKZ9FTc/xhOJjZgW1u2mYd1W3gZh6SkY8FAofwxGDUp637SAvHwIgXT8Eh+TWMJWyKQD3jTdoDynXp+isMthlQgl8zQIdeB+KYBC8eRwzIBx/B4Z91T4BtazghNDXJN9hhIIgiVwWQNCMfRjHAKAyHoGccAIYgyGUTCmFYdguF4fhhFEcQpBkeQl2UVR1C0HQpJMKA4FQVBMEUwhSHIKg1JYNhhi4KhZmHJwXEgDZjKoUzNG0XQwEMaTTAMDQUPEIgMD1EgOAMaJUoMCxIAAQViZTnIFegHF8+QFItDArTcLYAAMYo7eLEsq+dHUfbZuAbKJw38EVwLneA6qzepHUqgkiRJRAAHpjhWflRNkMamBvXqNFkZgvAazBBLaEh4Tbeha3IbzeoSrNnWgyF5Gq/0FT1DpIkQBrsApPY9pIbz1Pc0IJnhPZoksABhbpED1AByZAADF4Fu6JoUy9tDTKRit1ZfxGRNRBGJQPqom4ahYGQSqxoAERrMarGfKVkToMaACo1opSBKqpjQkNdLwNFa2oGtmSgPE6hk6DtDx2CJEtKoAfVF7hZFdYFxbG2n6DFiXZGx880CtcXOe5naok9Oc5MDYMBpIIcyk+E1Tnp8XJeliZZc5hZ0C8fx4XFJF2EKZxyj2d8tiNodAc2VApnkR50DQ2gHqGOFYc7AWFA04ZKz4AA1JBsG7eJJ2dVtfsUDwjcVB3StIehamfWNomTgk85ByBwchrCYj+gHgbBiHpBmDqSFqSIYLnfaMaOqITr0vVxMgAB5KQqB8RHzVgS0S3hIQdlCWYEHGRql7pkexD1eAl7Yw7EvWeRYqHXnGTK+wWGnOVB8S5B1p23cB5qEt/Aw9rW0uwG+Bu7e9BSJmywCrM8asPC70hAfRAEkjDpUsJlLwNAXKdiAsGJQDBpr9mQApEgDQwQUEwlWNkDFULsA7NIIwLZyASVStESSUU2b+DAG9dQrCaj1CIEtNAK1kr0IQVlHKTlVJREKlMPyJUF5lSoQYXEFC2LVVohw1g7D5pcJ4StBqRs5gOyUJENYdpUA6NoijHY6N1G9SIpAZg3hxB8g8MothH18D4DPMgXsChlxBHjGJASScDTiGvqedx0JYTvCwdgJQ9AZRuI8eXOMRJUZoTBBCfeJYHCbwdpVJxbl2GxPcdoqs7QaS7nXuoaQKseaTAZGUIcckwAzjADoyMJwhwAE1Mr/AADKMAmOeNpeISACGwEQew1IaDvSGTQMQnYhy0BNAxP4QR8A0HGUSa+rSypbm5F2FYwSahSHIjUI8z9OTYHgJ1dgHj27zgaCcMJcJaQ/04VYrMQ0SCTm4Kw2oRBmnMFwEUvgvZAm7l2F8jQDBflbyPJVBikozxAtLCArx+c9Sgu2fTJAepAVJxQKBHFN8iFlOVGHAAQvyc87EZztyHJVHuaAzwkAABxIvKORTFlUFlQvRdQFBSLuXpl3CCvlJLPgvzhr4JQ6pHoYAYDA/xliiB0uYMrWQSK2hVFGGJdUfTRBnjFaOfBkTjgnLpZLbA3ARJfSRcAmUrRZDDDQFGS11r8RhGcKQIJYy7VknSBoZlABqc1gw/RtFkJEAVYb2hgrEo6EJgzKrKGdK6GgArPl6V3G9dgdBGmqmMibOmlU0B4HwOqbgrK8VWBSFYZlATRVlWhCkSUo4Cm6LpC0cg9Bwy1kQOqeVWoSiUFNVgKsyMkCx1/NUrq3YFIphuY6dCIEWhukdr4M0uwHIGixiw5xerzxPzpiK3A3roy9ilO9OB5hEHINUmgxuH5RDYMPAbfBhDiF8FIeUUYFDxCyOslVZhfxnEcIWtw2QvDVpb3bfHBxNB0aXzoAAbjuNhAhOKogkOwGQn95E/3IE6j6OhaUDAQDAEYAmNTCY1KJtSNmsh+FpQytlXKoiCqOAkcVIMxdZHyPIooyjIpqMilo2gej2jbnNX0Rm2gRiF3mhqNSFo7VZitimKmbi6zCJIi4JVHMd1/GVSRL8O6cc9OCAM5eUILRInRJsXY4kjoU1w2FkeLam9QRuw5WM2sVIaRRBzEM4a35Ox4tKEkgMz5brDiyTcZ8EcYKAi7KQCgQ54hkGqHwUG7JICZwRZAFIZVlOUCHKDZ8idCv0EKyhcgJX/EACk0ClEgJRqQSFOJNpbdmfoQsjKKZ9FEdStEJgYGOOBHUvL+I2a8FErNLBsYYBDgikSJoKRDkC0iMEo34BqHKPhi+gQLlXOGEeR45B6gbnqT43wZb30PXUPITVkzrmFt2twPkLoEItH3LMk5cDcRGbotIBqVnrxKa7fZ5BjnIEuhczA+pXXPPSAodfXznz/P0GM2wPFzpai1G5onek+PkSdjKIsEcY5ss+Fy9SKlrX0Jlrq6TRQB5IBJYgaltnLblOQG6VtCgq5r7VeK5z/4KQbBNhp/l+n7W6vPzK4pgrdMZeM4oJ1jzQOIkzbs7sX7o3ELwCZdS4nI7uziOcLIf2BqfBHlUxQM8hQCGUAPnK42hQEv9kXJQcQWocGvepSIMQtvSV+fbpSaQX4ST3oUlF6QOzxgJSQihEsxZaD+8lENy8sB3qwOoS84YUWIxIVmPUqCVZpG0HZcqiCSfULNVorsROPtjG3IduoG+kR0a7AoFIXaT9xlaurNSFJ4J1BjzxYFz8I0X1nKB7n+BzHb2oJOQ+rYmDn3R6DG+jD8lP3Ye/dGcIMDJJK/EGxS+s7ZxbCIEhAQ3ZwvwBUINfTDUAAUtZQcKUnxH6foXnOk9cwAEoIwElKpBN8BhN8BRNxMJIoBCsz9p1akbsr8PAb9BB79nBH8ll6YsdgdIB38DcrwY9Nd/8ahMDpBgCy4WB6ZwDIDoDJZqoUoSMyMjAbAUhMoCYxcNBmBaBGMGFmNhEVIXIxEOMLcDYeNEAKpBZ+NBZ7kdxr42COCuCeCwd2AHwN5Rxpsolh50cw8A89IexJs5k9xqQfAvtRsCI9cjwdgIFIAiALl8RFxFMiQRl+J7CmR2U49/J4QrR/cFkJxQt2V3E8U5xohvhCoPBARcBgQKAZh6RA9cAhwF4ZASAyBYMDF0J5BENdo6ZQRKUohkxRxe0ThHRPCwcfRdw5waAGhQhK5ndnRkAABFbAfAKGLKanXXF9KfHbSopGfABIzwCgVJN3cFS1C+B6QXMZb7Sw+8FrP0JlPgGw0gB8YZdAd7b9BCBKbcIcAAcVcRvw8Fzn5FzGmIzFmOMnrRPUGVyVURcTiScILx2zwFCzICYG6AgXenj1HE1SpTv1oF8LxDIP4nORCFOTpnmhjVcKrARQSlmEiH+Jz0gAXnAkeDSOk0MXgUESQRQRwVX0gSfWcFxLwXQyIUwz3xw0P0oUkNI0gBbD6UXnQW31JN308ApN/RgRQw/E1CDBqHRhFFxwVTnEUM4JSG4MpD9F+CdX4h0QhPYGIwYVIyijQHezGggWGDGnFhaHUHFnoz4KxMELykwnN0kW42kXKgMEyjuBehsRZ0GmVO4FVKclwA1NFi1NwB1IYJQFRALxZylG7VbDAiZDDhESJFGAWEdXGHK2SWmlIEQktHTljP5PQnwO6W6X+GALVLXlJRLQIANFQkDPlHsHQkzRqDjlr21GQG6MeEEnjhzy4E1GDBZkiE/WfEZHdXsgnhlWyiyisFiEgCZXkBIGVCekPXQAoHsKmSrEZFrDIEZHKymQfyfy8LnEQFkE2ljGLHdC2E7LIGymZzbMoBQwbK2KHHb1qHhhkHyx7UQj9G7AnjMILCTK8CPKDHIGHL4DLSmyflKAhiXNPNCCoCQCXmsFbKZAoBSDLzVynRtIjkdBAnfTxkyidPZxS3lnphSGYGrOdDKhQsoG0QSTnGqimGSzwuHGWFtMFDpm3xRC9FjAdjnC/VQkyl7JKEf2DEVnhg1kIM0ExMXxxJfXDEfSwUJJfWJPfTJNZIP3ZP/VpOtP5O8A8GLRVMzJdLdI9PVUdwQvpiQvYFwooDQsqgwqwpOD0oamnMtlFk4tFkYIEUVPIwMHtMdPYDGmNRICjz+0lj1IENY2EPYyKnELNN4wQGQB43eHaF9JLFwFUytO8lcvcqwGEopm9PYscpUrisPHExgoUrjlvCvESthX3LAogufH0tPIwAmFEniWoMqhsAenEDYGKr1DQtsiEken9P8h5m0F2HoHXjSLnEjkoEYl3BjI8H5DKgTOFDzl8Ff1TPTOpQPL4FeNWxQX73PIhinDjl1xqHoHyrpUzmEKIFkEatKsdgDhaAqvUCqtjBqrqpAhIGOuasrOkEOm/g6v2CAp6pGzDnTAFEOojBpHQWxgVGnH/k+W6BZFkP7WITwDZE0EgDJVWVHHypLC0OXAEGFiDEFRjTKieuCzUGvjNEuUGOGP8lVAWVQ2jhyPkHhGdElRsU+RlFoFwT4D5RcLwBLEeFkG2uDDv03RuvIgasgu0Qej118XEl4pvX4vvUErXwJOX31zEp3wgkYtwyPxkphjs3yvpkKvlAeveAutPSoOutqoFvuqFrwiUodLSoaClHitgQYJpI1sG35GRHpn2t+qOvNvOud0NtAJNvqrNpKoalTEtqcvVPSrQXEyYIVJYIcuUqdLGmIo511Ojv1J8vyh8k4wCoZKMEtIHnkrtKdO4MwA52Du9PCoS0G36y1IJuivUwSpdpRF0x0uGFMsMyMroGwqIFMuhEqhbtwDbrdMf3KAAC8SxCjvqSkaA/qdUPBX8lBzyHMCbWx6t4gJ4mwAB1Kgd7SgDMumWsJ8u4XhOehektZBGIUgJwdIDgF4AQaIQAx5eapkUc8MuVWAKMgMNgM2BWUWL1CWUC+UBqD0UIXYXuDcDqqK1IrAHcjAbs5+e8/kAsAs4dbw7q/gCG9iZHV3A2Dsrsvs5ivsgciCOcJrGkFQCGB7A2Fc/tTUA+egBB3hA+qasJFAyeB8ph/RL0imkw+GOgf896mi2sSqHWygB6szDoDABqL+xm64CM9+moVGdGfBUQdmrc+ecENIn66e+QCe2sekUCOEOmZBznbGEnVHGOMg3wT1SUjcOBQyzCzukyku1C94DseMMexUbMoZRe8+yYYy6+Q+vZSimJB2eyV+yMhRz+hmxQS2P+vxxxsqf+l8QBwsEB5daaLvYsoPCBrmNImBuBumBhgseJ9sa+Yxy8tBskAh/skgV2LBqUCCQ+0h383bB7C+Lq3cYRgB0Rr21hopmchx0psZQ+oONEB5aCpNQZqR6JvvORj+tGYqAQcHZAEprujxaEuwyQPq/BUIHYXojwUBvSHdZJygOBBG8VJOlLAjTI9B6MOcmoBczApc5mzS79dvAcu3Xaccmx9Zvgapgcw9egQJ4+o8CvR0YxossBv/R1XhT7HwS3fxQCzdSgEq35mxMZ6+fpmC9CWBaC/EQ6dAAQH67JiF0PWkDqhAOmLR4SHR7eziQFwoQZrup++UNzLsMhTZSIe5bAu/c8fWJYkgK9LEpfXEmW/E4S+W3BLfEkj9SS8hPDY/R2hEZ2hYRC5C5x0iie6RxQRAZKSAXQCytS0WV/UB2of2KemlrgdMfIWk9+SAAAXltfICHCfKtfaAdYvsmCmGvtvvvt0D0CdZIEqgMH1agGLVXLlW8cgF/s+SSYWpNfQjNcgCpipjPHmHHN1aykW2APCjYcQbQBEb4AKHydiELeDdDfpnCajYkYTa8CTf0ZJDdc5xTbTc9Uzcymzf9Za1hwAG10whwO3ZAABdYNpVzWxu9Cplpxki/SuYUlbVpmvVg1xWI12tpN119ZD16IBKFYBgMAEpsAaozgAARkuGYDAAkGPY0GyGaW4GPYADY/Xc2aEg2Q3l2q2F7o24mp3EnjG12hwW302iB23O3c3+mO6hnC2bWS2IOu6y232w2P3u5GXqz/2eQaim2APU2gOQPZAc2A2rMe2e58BqAR3U67KjBUqE7ymxpebBXPLU7vKQyM7jSuN6SZFqS865KKLvGa6xkorWwVBiXQg6PGBG6vCumTnZ3n57H/GiAy2kiHZUSsAWgK7Oh+Z4bEaxPVWU9N1fUMBa5i0BAGApGePmIbw9QGn4LIh3oEIFJwn5GEoonv7kqlhkbcWAcy3tPXb18hQX6iWSkYIHP5mLKmyuKF3Un0AGBbbwG9Hy4SR1ldxn5nA1ASk/IPm9QvmJyXs0JJwBckvEvr5jNkEzNYOTgvOtbfOkRyRCXhPZG36QvJnqzpnv7IvqQmV+8j3CufNciwaBd+9P8gxiPqBrmG8Ud+OthVndwpA94oL3BN1RP3PChNUyFEAij61fBVPKBzyGnPEIXrPJh2BcSwXKidm7ChCEJn4pvr5mP+JgvImFmhW+K70V8xWhkJWiTpXxKWSVbKT8MT8nbdoAuqAYItbJOFrOZszgfJQ4QI3RgIvFYwvjXTWaJ4vOB1ksPbvOxLKM2uBB38P1lg6sBQ6VKaO6Oo6oBAfavAvQgweyuyovPdHoegu4f6bWumu6A0Oj2m2CfCPhvcAR2LaqPnKyeFh6P1VyPY7hf1SaPZR82U6BEmOLujTRCTT2PzSbJkAB4dFVP4t1P3Ror3O6V+mvOZPwOf35PumTrylN5u9wI28hIKAdvIrWw5wsXD7qnPEuuseyQruLfzvDTQtNtM02tx5KoTereie3HR7x6vHgXsdn5PzSdfAZQ2hFxnZT0Oz2GxOXdrMLDMApRH7kGX64fHPkkIvwxQdpjeGgWprDI/AJiCvS+QusFc/GB4Y8JaxPhnZaAwRZQ44mA2JvflfQtUAwWogNhe05mHv2JJABQ2eZGxZbuSBRY4egGF5aeLzgwsXW/2BDPl+WuZGJ6GK0f/Ek+zV2/ojKWxkI7XvWwk9ChIKGWkXBRtarexHoL7unO8ZxYkfD+YnaIQNEsD71HR20524qU+nYgZbSYiAq6cMEv2V4r81+nfTYD3z76swjA4fdhvT0t5Sco+4gdxhknSaewdG2ZLANd2GZTUz+8VbsKn0SKMAM+SXaBtn137DBH61FbePVwibf96YJTf/t2g37t8bcjZL2MMEM58CF+MTVMF33fpbRe+riddK2GX4ocEmwHPFC0Fhroc4ax1Sst0F3AUCA+L3I0GxCTwlx/EswOlsyDDjg8iqQtaEOcyRridkAxYdinL0YYaBfoog3FNU2fjj9rwl0fwHKhDhcZhuzLBiPMSzRb8ZaaAhQbi26TIQasUxZwWg08Qosx0blHFL0WfCjIVQPFBfJLSMHoIhKG+FfIrWZLK1988rNWtSUp7KsdqE7LAfmy84h17SWgIuuUw0BuCpgkPT4EuzDaalVw7pZHomxdZTVRYQTJtlu0vresb6d9JIqKC4CdlJUfbdoEOw9YvtAC5bZdgAAEnsLoCLlWz/rV8fAdAUWE+UQCv46BiwmgV4BWEUA1hjrDYV226RIBcAdwsjhWwQGGkkBEZNDg23R79t+AdtLgATF7aAjB2Q7AnumC2GIdWev/Kyn8LR6Ydk2VMEATj2A549QOAbaEQDzqHec8Y5vOTs0OJ6tDMyzCKTrAi6FoAehsAPoYa0GHiw0OFAs4VNUmGOtt2LAF0Pu0GaHsdmHAU9hcHPaXtr2t7B9tEHmFtBrhyw9MA8MDabCEOlbVniUy558j1kBPF4W0CI5IRSOwbWylL3joi8re40RnF2HgAK8mMiCA0mxkzpiEpEOdORMFRirQZdeEVA3j/CcHG88GpvItDBwt4Kc5gGhIsj3kFDl1tukoF3pPDwa1xPexSM7iAP8QGD4xwfWZKH3sFaclu5yS5JRR7KENam9Sd8jwB070A30bzMUBBEEDg4ogRtYMLOUuQPN3Yi5bAuH2rRNhsoosAhqLAADSKQdpJVH9wv9rBhbPWg2TnBENRmZjbhJgJLbEjo+8ADxjVxLY593Yz8BwO9hxSLBp+PA4foHzJDmU4uc/NZAjxjbfDV+EZdfp6CbJqNIxu5fBr2UM6bYTk0gSFBnyDbRh5BqncAetyfJlUfssxf4e8Fhrp4LGXYG7HbUfrj8VmNtNyi+g2AWD7S+zWMNILf5ScP+uILWnZGeRCDjijoL/oowRZ7Nr4oMBYLgAIb3iHorpDAKLG75yD0BQDVsBIzTCbjkk8YiLhPSVTvFsC8YoGsfRWoxYii7oXkKpCnBbgy0EsESdwFFhnh/cUwBoFRLcQsQ7GvookZH3sDECKA6MIeoQNHKLjWBoQVIf73jEESfMaoDUPUCiAGCnyRfbpiXyYkBgOetAfgZF0vHb88GOY8QRb1gSEgtoaaN8WCA/FITqJ8IdAQdjy6TEax/vGbpCBALUE5wD40bIKwKxP88Qeg6+ImJH6+82IroHIYY0xx/AX+feZCQtTEZGAHB+IksK8WVIOAv4OYsKsoD1yl4SqSJdaFXn9zzQAhrxeQJc0O6JxPEi4u3i6Fj4pgjQLLJ6Mz0bAS12iUtO/hgjlqfdNKStLDGyQVYyVPBqrbWLwXpjTiVJLQ97G0LlIdCTR2gGEZAFzgWEzieoXTAMO1LDC62JsbgPAEkm1NJhBQF9usPfijD9EbIi+iSDAAvBWi8oitplFZ5NlJBG08NhGSjbwifAjIlHtSgMbIiU2aIttpiLw5dscRFbUmAeIOYQyWJMzS6cv1PFypER82AEe0CHDn9RsIIsEWTKzbDsoR7QUdlAFWmu0aadAXTEpNUHEjK2u0skQdJlRHSFRp038RdPpHXS0OypB6QOWemBs3pzrFQUMxZGfTN27Io9tyLk5gB4QaAMAAAAZtZmQe+sdKBkQyLJeMxURDM/bKjYZ3PNUV2z57aiBeuo5gkqQNHqlqWyecaOTwY6K9LR6dFXv5TtEcdc6TooTjT1QbmgGh7tbRmXTCp68/SeEQiqSKLpuyYEGgOjqZ1goJTNe+I3juQH7zHAyoOEsaVwLL7OdF+UMrwFxWAYeoOuYcf8UKkxRCNiRmqV3OngoCpcqA6XWpp8zHLZcTseKLiYSS/rDo44EXFqjQDaqNxQ4fMKCBUCUBYANgbnJwY3AO5TI+0pkiiBa3dn9yR+RXSpI+Kuphwxq9hWwofWMaP1/AoU/vKQS7B+QISFRAmtfkQG5S+0j4/xJgGprATuwn8DOhNjvCTo0JE7MgOemArzRjgm0JvI72d54o3Z8gFeUdxglZFDslyfZqFysqOTwwocOBUJFmYNcHujEJ7gUMlZ4l3uJQhWl9wWnkkpKy0mobJW8ghyQetPCOZvI0qsyayltPaWwOTlPi05n4mrvQph5cDQZS7SqCIslggI32SHIMOXJhkjC4ZjbDHiNIoBcBC2mPdKZRORm0yCeoIsQHcIHaLYh2b7ERY7JjrOyraCdLheNDgk701cXsi0UIl9kiF/Zppe0VnO163IXRldN0XMEsF8AYFZU2FKvXXpb17SpFGTv8AJjBLrFfY/yFp29qiRhUCSWsKJ0qiRyaWDUfKurkcFrSsFsXI0M3xn6I80FoMtroymAp1zsa1eOLlJx4Yty35n83wPGOsY55oQmAwJZvR8UNRG8TNYMP+Le7GMDsUoLZleLim7BzWI0a0M4DPALJZgCVPOP5GZgO4JECxZAK/iMX+JogQgQGBgHvrp4T0vIcBuGCBqbo5wWCLaBDhGUhjIAbSlhoWIVDCoAa/DJPKOTSEs1ciXVYCikuYV60J6ZLJ+AIBNChA5wbS97ooHuXrV/AdjcJZEs4idK5IV43pa7z6ILV/ETynpaf1nwvz4p7A0bFOGGV7z4pXDKxeqBrJLLplsytGgspsSTKUGniUlfgBmX4EGoRilQhoFZX0wRF9MYAseVWSOwe+dTRvPQLNBYAL54NK8cekwh0qGV9c7hDCCDDvzHcMXULH6F/jJSNkE3VAPSHJhHh28qKvWJBURbvL+8nyg6p7SDpnMtORKlBi4NMGVF6JogTLmipJlFlhgc8RRbXAuXp5Fsty/OTfySlLU6q3MWTNBReVNSKQVea8NPHAZHLdwVYcVbuDRDBBy6rYY1R7T1q399c4YY4PFG7BrUZsR8DBn4uUb+hxp+QyaYUOIVVc5pTJWVr92ko0KqeYPNpdCs1ZkDi5jXaRTdPrZIiFFxjZRVb1UU7j1FuPTRV220VvDwR+ixyTtO4AcLNAFijQJav0qwEsoeIsHlCo6W8Kwm+SngYUuhmdrUeJM5Eb2pApScB1Rg9Ebhy0XUzOcEIqdSSJ5lJzN5KcxdTZSdn2VUq901SgyNFjmj+CPs5fn5SzoBzzSXHbyAXUUofr4AX666ZlTHmxz2ogg+CuuNQGpFYM78E7Lpkvaixsh/KaKbGEIo4bTml7TpdhnA10pPoyCWAKLBCT4UYpVUQjWrgo2fASN5FDOf7hqqHYQgsQTgrPMiDptXx1YwiisARB8ahQLG8DQLE3RIaiET8Ifl9RLEuh1ASjGVlEHMqEVxYRSqzC60ZQISellQ0YNUznRVRSR90hqGAggQEKy1RCt7pWtErkLyhi0qhdUJPxNhuOGc7mVbU/VXShhmVKrpFVZD6aapE9Dinuo9Y9togTGqjSEnFExAsNDGmLWEU41tBuN/wXjS9CFDRAR28pRhO+uUqfrhNledLRCtsV/r7FAGm0WrwkJBz86aW/jdnI41chktPGkTUVtfFwaIqaefWj7QSXVUyUYvAABLQBoAVgVLS1v43VQYQoQaeUSHdQkNt1ySLlEgGxhX90FwER3jFwiScjr4g24bWhEa22NoKBW0TWxB2YMKrxSQGwL0mW2wB/YH2cBu3gXku0JgYJXaHsoMboIL5wsbqPaAQAUACowkKZK/haBKAowmQYAuGBcGhMgxjIBptSDGS0RIwNyqor9v+1EApk+CV4dqrhA70KQ/eJgEhA+CtgQUaK7uI0BQyI1KASoUZSTsjBcN9l48cJEKsMHCF+892LkHtsTWhBuN/kPrHKgFABEH5qAfqbDrViYNadujGKujHK1JAkg3Gt4NKrkwc7uQ3OoXZCCsGxSktuAWuE9g8ADU+AgOfba6QcnQxagKCIslcUF2og55PuA+JzjnBHbWt1KKUHQHQQgz+4Z3cfnwB9jChatQoektIN66XzgwxXU9Bcss3Yly1Nm2aXZvmkObKFVQqkifmZlPw6humb4PtpS2+7/ARPDzaqXy1Z7xeNIvhazwR4NFlt4wNDiCUlGQB09nOxcJxXIA1F5Reo0xXnqg0MaxokW39WnXK2sds6gci0k6KIltBqmDGo+mwAViRbqN/SRFFww8XqceqXjH1Y6B2IpBoAvk/AB+Pxj3SyoQDNWGYIdjRB+tW0SjfujPBtEs5ckPyYTm27op+8kWs/TzrbV4L5AXIFwCgu4iicjJNXFoAkSiB904e6WEnDUAajSo5IHUnSJWNLigE/6tAAQKv2kAjoJtfGd8YnCLWqNvqB3XLI0V6Rv7zo8QFIN0hSC/R19x7OiUOiJC1B5An+sXteHIApiHsSOrYHgdy6iqw4Ie11TQc3RPYAwqAUEErUP3OwLQSyaIC+VQxoQqp1ma5qFL4YoApDI+coYfq2JoQW0S5NooOwVXQT70EcNVRghrCicWDfurKacHoHPw9VjUtgMiFsItVbM6utfPodoM8GPOk3CkNfoAp9d9ctYYFRcvKJ8cw4kYKIJYcQC2FKo0QLbEQGiBoUTl3QQIaEC4MHMJkOwcPSKwEqIrxWpCqVrHprWBa61Lm60mPur7YNKoU+mjVQ2ViKUCGNgAFaErxHTq29Y0DvV3oYLLrXNdC+bQGCv2b6epItfiDkhODz0BAePQA4gdCyOtKMMqJmq/lgPwGUQI6QApsPWmNxijJ+z4NPv1QNQCj96zze3uqMUBO9Kx2ADAUl6t6JZDR3Y2NEvbQafNJWnvU/Iq1scqtg+geMPpIksUx94GvFNU2ngjpIAx7OfT6UrpBrwkXk1dPZD7q9kqj7NWdoUYabH8kYpOqMPjFOPEb/EcO+mMRsV1j799/gWAduDCDRUlgYABjZmztaeJcC1oZajrFCD4xyTaFTABTuBRVh9MNpANa9vphjQX8I8njtWqvHqR8a/+uLbsaRQuDvdaxD7KmiD4AqwUYNGdRNIj3Wa0jJCkSpviyMSVa11Ck/MnCebYFWFmG49thqFNlHdU4J2IJCdw11HTjHey495vUrGKctlHPLTsahMXHj2HJwQN3qV7fDANto5xQPtA11xiJo+3Y/TBzAGmoT0c+fXHIl3L6PAVgCePEHX2dGt9Y0S1NqIcmRcM80E5AN/mCxgDUwwK49HHCTNoGnc2TPRmgAjQkcdqnCdFLavYr1ZBASQPkFWdr0hBOlwIAsMlzyW2TKyDh7gyMbJC/6jm9AcymAdlQMAGdoQXiG1HhVeYGmz8QfqdFzmZHCKp08ebgDADQByjDUT6PKBNg+B6VMajAOjEtobFDQHJrZRNtiCsNdz3sa0BizGRVgWg05/hi/37wvBdZkAHbVYEf4lUizrhro6EGX4vNPtB8AyOwc10wgCYeG4PZBZ10hEQeBqRtJNq9BYBNy1ghswIHSw94BpRPZubDsE7tGFmDA7ycE3GSJRgwk+GsPHPsPUhROGwUxj6pmnd5h6c4rGBWbTNNokpOh3cIFhBN3dMpJaEw1wB07EoyQLy65pIZQEfntZEhrbJujhOCx9VQRiBP7gZOaGwBIelAdkE/Nh7J4rQToFqtfMeH+83h/FZujvl+He0hlxA/TSsPLF8IJ8brLmG40vbYL+2tnprOHyo0UFVerndBcT5Egas3YbGJWfhDJGppGaxU7ZpVPVq1TORjU2O3/2hmGNa0UciabNOkUYTHgC05+qtOumcwRx2oXZlwkdGALH42oD0dCyVRUzVZ0WDmFfyhW0zXATC02bTOtm0+Su6vR1foFwGhjEZIAz8bGNuU4VUx2NnAYQPAGMA8x0A/at8q8LKo2wlK7sbZiihX80QFM82fhAGyhejps486cuOFXmjxx3Ldsf2soIXTDRoHB6f/V3G+9wG2RP6ZeNBmoTWVQaLgVg3l14N9APXbnstPnHLj5BvwbgSJPoQM61TYswdvCQL1lMXiuMwmY32qdM2+MWq/CAMpjR4KrZbqRuEYIOjFKm1tMw1EhtRcYu/eKwATFBgQQCYE8X6AAA0JDvwaDKjc63Tm4BvsW5LPX8QJQMA3IqPMubnhoWaKHGiIthZh2vjww80SNYbFuSykIF4YQEPbjJWXF/EbQCi+3lFPxHn93/fBShZFX9dvqNl12ipdjIS7ytflqC6ia2Cq2swuBKC1xdRaqrdwmqkY6jhMEJCdYvXKS6mG/OQAdLsli5Z43FQhrfl/2KqBjdAhY2c8RN8q4nEzOjQw4wKpq1Wd8NhTAcERI3QZVDMVByD1cNiM/Ext8wILERdALAOmJhwczkeH8OElZt4mT+9TacCgU3SuWBbWEvGPEEH4kBYgEdvmO9FFu4XG4nEYnSuUH5MC3w3dqQFMlKuPdcsNDQdOmpWXC3fgLYXAKDFWy0AHqdKTC8vdXuRwN79McIr8CsDOAfVD1DMoJeykor3bnWvW2FJ9t+3eF5hqsMbYSkaH1L89scqNSvsP2QewyfLLPlCnBkhCqEO+5+ZDXP3oQE8Ay9F0QPGWg9Gujy9zrMNbAC7E992NxHNVB2Y74DZQekJjQkB7eXV/yzBfgec6B8ayL3ohfGa4gPj6Fsc3PInPvAEioWcMBWJ9DF6ezQ+FQI4YHMYBoQ8QogIkK4ap5Hc48sbDc1SH6rAuSFsZBPUqvU5Auv9g9HAme4KmZpH3GPXFZ+4JXnNNJVozmMyte78+RR3AmGdw1+a2FkG865QEusfXjrUAPR1W2JuVW5UvR5m9hqByv4/LXAHq0OCNhcA2rVZ+uB4EdZBPX8rKjQIAXmSDGsowxqax63GOjXpjk1uYwsdYVLGTHqVlo9aUcdYOIwVVskENA7uWUKQrpceyQE8ea7vHmumiBxarNVOIiXdsCNjZ8d4honRsuVINdGMtYRruOsa+6QmuzHOwM1xY/AIydCnstFHOOg6U9kMZGOt1r0/cf70ganRHxmG7nMbKMDfe4JV5PYXlo4MAzI+livaTPOj8jHhfFC5Gc4FT2DcxOBbKoRqJUqZ2kXTSTHyvGa3KIkwJJVkUb4BN0cmmfi0qtaDUgiElqfxGXo0YrmtgOTmrNOFaCHBcAZKszPxZX72lhaLj0LOCmcHcAbyAjwZIUYIG12tgz1o5+9l4X+hVb+GpTWRe5Q2MEIF27pG5b5QtoSwDuurZ4kGdkgupnxE6RPBsDxAyXOzjiY6H3g1ZGXjAVeNQXNvc7WXQoc+cJFeEoNyXuZDS/xE91osfb89g7B5ZrsvEn+/uEMqhAejj9ixUEsCbKv8PlZx5lILMbN0HJyFLschlk33L2GjAC42wR6HwEIp57uAZmnGNDt3CDaekqhNgXXBXTwt+GqND+LsbRYP6QkDLb46Fj+MQ2sHKRXsNUlCkoL2JWYYl32XtI1LC+cplI9LWivR7YrKmrR0tJ0dQBss6L33qnrNmRtP25QW55gHfzvYuAObhY3UZmfBtq3+To0PW65TIdkXlld7K/gJ45uc9odHtydYdMOkO7Vx9Sl5XmfWj7rvp5ZwPBXbfrMqOiZqGk7e6h0O7vr1WKQEV068CUMmmpn1gJTkA+51YpYOBsDuUselCKCBFwE1svO5xl3Kljw8ecfF3YzjqwoyrUrnDol4MuVKLDIAwuwPSTjl5IzpR/04eosAZzw8qiRPrwXCd4vxHBTeoGWNq6+KMWxerKcPJwO6HSkI+ix8PRAND61Ilexh01oawrQqEZVKuWAosWACegknpr2PzUvCnSh1c1BIPprw0Dx7DV8f6YRr3j7QCE+KrBPnutD5JpysXvYucmtIgpvlRliWEmj1ijIMUoaa91IOV4dpuke0U5WWCamtA5JzYFeqKnZTz1uuqtCj3EVyPSW/UdlvvuFQyt4nt0duaFKuehdzaZ/WelLni+8VHOF1AHmlQZTHIzK11YKiPkFu4DsdMqgge6+yX8JpB6KzkBkvFHqj8l9g+of4viHiMsh5mOFfPhrH5gOx848yetDcn3j/pXi8CfKJ3H+T/F8k9ifpPrXhr3acmeOUF3SqG62Vruuq8HjgVTjk6KzcIQPjh7xKHNB2efWY5HW+ZKTrClCN0siXgzFrTo7yRieksKOC6AQObeNAfW3YBt9w/kGupYpk52SCm9V28+thm5OhG6WZJ+J2tGwBPHqzEHoAosVsWLjA+gwPvTYaACkCbAExRYVgTKNAH61gfMoqZCeBvRSDg/eXsQHYrECbDxBolmt+l0eDg9FkvJoQAcv7io+g2v4pcfkMBwfAh5u4Z9Kc2UETUJiMA9zDAI8yJBLlhwa4ohDp+sEaBZyEmSINDBU5nPFKJHnGtHORelwqwaBO/FY0s/z5qHPHMnK2DWfAUqP5u0F4B96O5eEh/RhY1XKzf+aeYriUIKYL2A1ApQQ4b/bWFAWygEjzsWMJ7v4Aw08Ap6TNdSApDOBix+qiegkAnhgBmU97bWX8YDqapQIlxb1GWWQiIR8HyZVAFSEoD7IJ+1NcgUz7rEs/3YovsZKstB/Jw0Pm67xrT8bhhHY5hoGYJEDawwgmwoMCeP7gJgpAyUSQHYtArh0xq+AzMbsLWPnLXIcq/bzBkcnAYRxxT8/NVygG4w19Ic9iR0CH+hj1KEYjrzF8GAf7l/kyniBKEgHkCm/mP5QI3ENACD8gvAHZ8SFB+UwGVsAMOvULw8zPIhyDG9TKBLnR9N+u4ldCg/8ohDi1hWkVoobLTc+lD7N2Rrz/9xJW9QmtIpKnyBd5da8SpsigEp3iQDnepHlO79ec3oN6ekWrA5gOIGHm8gIQZknKAMs9kJ2h7AlUKdJcI6ShOxryA6LICdMvPkz5pWNYqn5d+PUu3DLqVPNL4YEbPk2KZ+BmKExC++Fg3Zu0YAfAG7W87kgELedjiup2YmvtVba+uLmVDjuCASqQDeIgRpQS2grm7bSBYyI8DIkmWGHK7edzGn6ry/ATjQTO+okIH+AY0PEZDeLGL3qjeSzkFSoA+dDxyzepgeYGekxfGHBDY/gCNhiO6vti6eI/yuKhEWb8gEHxAOBkgiH+nDotw1A9BjPg/ucTly5ykKFir794vAFjKWwomHRxwBYvtnJVyaZr2Z0WtBjj6KoKgVgEU+B8p371iwwGAA7e5urh5lUtmGCg0M3YPNBRBoWE0rXIeKMEEvCNAFybuaBvsgAdBFSNGAwujJOyyOgW9BUhgAmULua84OvtfCv4t/t0h70xYhZwUAu3IlAEsRDKAolISNtz4x+icFZhCEuCLMoYAzQaWRuAhvMy6lwMPOPgSBK+Mi6IsHhqpIFynyGSABByXEEEhBB/vmCDkWXl4THOFAQ/IeA/QTQBgAZAbQyjAd3qFg2eaEOX7lgm1Bw7H+5ANsBC2I7giFBs6hBzZQuAQaiFIhIsCO4ZeqIbjadOZIDtzQIh8PiT1AEOL4FacrPKspEhGAPEIswefm8EQyqyu04MAdIQyFlAefgKxU+4qPaQcQbPmsh4+FMuTixYeIEgBP4SXKWg9wOwEUT70paHujsuEMnB7QCEoRyw38BCJch2csyrcR4ofgYcZnB+eKrJdS/2nE4QsNwZ4ZHwoEDZw5oYMsV4QeKHlNYNQFAc96dcVAKNgw8yfPYAcOePvr55I4DC8GG2IFnLyXkVKOJbCeaCPUg4quhiuS/uqAFggaMu0KbqU6nvihiVQBXk6FcMW6jjLK8VYC6FygTAlrbJIePhPSTQv5CeD+hZxj4C8sDuLsDEUIwPPjgwIEnP7ZhkbBaFYoDIqB5cMyDO1SfuY9OEG0GdFtFgbAEjGFIdBoQV8GeW/zps46hxFN0pT26MGSBzaxsj8F0GJZLw5GAU8MoCzwwYB8YVS3AFVKro2IQC41AaWDgbjBoIYOiTgkxP7C/uzbqIBSwjoHEEuq/iCMyDCrFiPRYBVYPqHehkbMyGNufZjlaO8noX9iFun/hWqluv/qqYVuTmt55MyE7LqapBgERkFJeggfN5OBgERTx1wvfohFiwBvqvx7+FSK/iohXAMLjkABPC+xyBJgSQBmBmEQ7R9utbgO7RIl0lMBMohMgwCZeMLuO5dsZEW1pbG6ETRHOBEvAxF6460ixGlKllEh6oh3EbmxshvEVRECRtEXkG7AWEVqZsBOEoO5SRPwaRE/BCkQu5CRvbpABqRWBBpHMRDbhxEkRMThGTyRaEfpF0RwkUZHampkWzJ8BU1pyFeAVrDw6sRlAD2x0hgvHUZ2RykYXo0kxkez64RbIRyG3kHkVwLJOnYN5EUAPbBFE8O/kfxGBRXDipH0R2EYxFiR9MPaEcRjoSOgyRAbDsS5hCUXSFDgL7BVHvwKUf55zeBkTSQ1uokbhEZhhUQTxshJUYaR6giUbE4joVUeQA1RjgYJH2RhkY1F3cg7ql76IFwjAFcAMARRHvwekXVHDRs7lM6KR89hYFWi81mu7q8j1is48cazlmh0eKrqFgj+niLWA5u13p9hfkS3oCaP0kbuszdARYQGAWh6CH4K44+OLEa/mVYASBkAmBOCC6YlXtV64AXHhGH1eYnrOzO2SVPTDfmKQCDGSM+bhzSIKGbqjhXKa9JLg+GilkdE1A2uokYhUcys/Bks+5jUAyOXjH5Yghs9qhAq6cqj+TYSCUpVDNetXvFSieTHjua8eeMD1Zam8EIaB60I4R4YFcLwJkCZAZDgGAXESDh4DNen0cx6imPhrLamGmEj5YAhhDnbYSe5VFJ4MxInvJ6X8wIMgAGuP6LDFHgN9gVz32sQI7wgSuWJQDTwiUo1JOG+fjrESxdlsEaxkosYrHcafDsRJz+u/vv6H+asdjwaxXUn0EfBYQZrYSWT+mr6P2fABPTm29LqiY/2NYS3YGxyMffbWxptkA6jAQccpaIGthE7FSuBMNDDU4I/qdoCKQjH5YZ2xDlsDm28FuGCRuNFtUiYqm6BQ7hi5DHtjv+16FZqisrnhkavo5bp56wRgASJFjRZkeB6pxw7nR6AxwMbJ6USnuhU77aVTvtr1INtFwDQxsMV26pRc3mtGZRo0S0GDukinWB8Q2PN15gxU8ZzozxdegqrHxIQBzG7xNQMdTLxtUaYFrxDkRvF1uA8dvEdehWl16wxTMc2SHxIQGfGdWxqKRFLxC0XfF6xWEY/FMRLkYPFRsiAHv5lAXsfvFMe38d1bVOp8dgbdIE4ZMCmqeoDfGDRLlCAkO0LeqdaJ0RGDcaemq7tYEPWE3gPC9YPAIBZjA0+CERQu6xJdGj8X1h1q3RynleKVQeIe9houokYJpbA7fr4BwoYvOnIKUlvjRTt4lcUY4EuHgCQxMJEpmSCCAAxJbTRKoscKoPQV4nm4T0SQOf4C4AYmp5NAxajrBXi9dNSjWozAHHA6JLoBf7Q6d5hgG7Or1PsGjoRoNTjkAAnPbi1STvOGJPwoQO+iQAzKLrKyWujKWik+ydj9FLIkvlxAx+7WFMiS2GWK8SCsYES55qOHcWUL/+PcYqzFWUQCwG+AjYnaQ8JrjAQIx8p8FhKdM3CdwCyBaEfXRR0BCXO6J0dfIu5Beszt7LDeCzltGPG/plu4wanpLu6hMeIge6OUXYeZqnuv4C3hwUHCUWTTw3YIfRLcXZtcCAw8qHZy6QMEPwlDkoNGQH6Qk1BnJPuopsMlJQ9MDAG0a11GnJ0ozOFqp0AB9mwAGUlyQJqgEuBGB5JA3eEckSeTyaclkwiBnQCYWBlF8kwW5mAICqJRaClZA4kkQsmP4hoM8nhsoKf2BXmgKvJoEIpYujCJB7FPp4Vy1lNxSNwl4UxDPaSnh55BMT8PCqBahmqwyh0Qya+4OWO3BQwTIc2D6QnCORNWZM+8SU3gTJRmsjh/cCqDiwvQFVEBHBgxzswmnBpavKZtxKScqZQR2no5oJ6vcbQpvWEGiqTnCjSbBoAmC+g/a+wcvIebRebJLF50ilUIcnxeNycl5nJHybQB6p8XgakUwtAF8nxejyXhTxeFqZ8JAp6dqqx+gYKZ2C9exgfUmTRqpMiBOp/YOtEOK3ppVrje1WtaTjhnwRgnzJ3qfxBDhHgEEwKw9qb8AgpEaS6n/GanHHLhgTTI86yAh7IQDEUiChhBoICANi6PAkDGkQQxaDMybPwpaVEDkmiulGlcMKvj9ZMWIaYf6Gc0AEuTpKJyDMT+Id0fiYvIM2MwCUy9MJWnSeWdumYycQ6e47p22dmmLio+Oo4CWhvAZzbGqJwGhR28lymm7rBtTNczvRrxCgp/JJcbOn9p1cYOnvJZqfVYWYe+jqZ0wBGsCnZ2CgH2lC+7FOOm0mHqEsgHYGyVsw62zaJvAHpKnE/CYSSysYm1yRIFnRE+0YKxC7gbOsEDLmVDFsA5goNsXbYwlyMlRzaUKZGlLkccLWmoAQRK9T26fztRYspYckqaoI4EGDyHJ+KB56rJN5CzD0wqciInSpznqo7FCIqWQrQR3cRKmZJUqTkmJIJkYpRxpbAAmmLJ4KUaaKUraUshrQtRvxFypjqYJmxwx1rUkrRcqTM7LurSWQlOK20ZQnWkonDMkTsMaQcl0Z7WoCZHpJKQ0k9uW8IrroS5VD7QHyYBKW5SAZGT2FP6TaV8G1wvLv8BmYZGehIbgibICQlgyhjTTkgH8rTRehrNE8R4mT9jMyIAR5CAzmxS8KtRr2/YN2AxWKJLQaeI+0Ziw2A/wNizksoprykKJG4QKlFu00kxlEKaSfFYABHGcno5R2qfpmWZkAWMjViNmW552ZNWbnqKZYvDUlvqdSXKlHWzSXYqWBI3mpmPGWcjTQdgg5oqnkwPaagnoJqqJPAZZWWQVQnp3VD8kycXyQdhjc3mM5ak+GdJphRpzhopSmpS2YIDpyyZFMAHhxCjkiLZpwi/gvpOEnTDdpP6WiyBYX9F5bWWYoXum3pjVsBliERDM/Drp8UFe5LG+mBoAjpNHiGaCAVElS5geQ2O/JJMRsGB7t+4KXShtQEsKKB0AYHryBIQy0OwBUS25nSihmrHACn/aUyb4AFmB8DgHN+ZxNYiaY2/opQDkE6fJY9Ee2DAhge12GCE4IUOfNgsQ/YMU7SeZ2BdhkeHmjd6USE2ITm8CNRAwqnCGXH9qmYKFkr5NSnXHdSh+2Lj+nHpfoIamWUuKBLqQC59O1KJwIftSBh+cycDr4I0IN8B5pJyAWnekthmHDvwWaY0iIhQROdk/Jh9OZRGYaALMBnp/yW/IZpduTmnhpMmUmCkoknOclGpQOOvzZCFsIRR8ZKLl6kB5cMVGmh2ilM7lUCp2V/68Z56TdlkWllp4ZC+09HsDJBIGbUxYoDkibDuu8AOzrvZJef4ZrB/2UQxp28abelBEdZvXmWGGgCY7Z26ePTAyxEmM94T4/QN0TxUWgo/Ry5yRNYIS+GuUAyK5Budi5a5NPnYjiuUEO7D65vCNi5G5j0A0Cm5YNoeCW5WuNoQ255AHbl2sNYaDbbp2DPAIHZnyUdnc+buR7mhm0mc6kgG3uTmm+58qt/Lb5xIAtZ6pqAubCjgLecDiJ582ctxDhSAKOB/ZWABsEdpgFH3JsSCwK6DMs6JOPRcpYpgKFgp1Lqt4eAagFAhehb+fmnEgwwez6uZR9IyC4moWEWm5MWAPpgHqIec5b6xc+P7hDpDNq3lJJjGd/6pJf/mVkZJ6tKuoNCF+ealX5dRt1numKAfOxoB8aLKBzpz/Fvm4FB4UwHcFIAT8kCFDST1lF6tiFDjoBD2fcHm5o2JblGBrenKm2OvWaVr9ZbSeQnrutgVrzWkOiEikCcU2aGkzZhBecK6YvBV/kyceqWZjOFYeVlkpIXmLFxO6hqRQY/G9nIwUeAsjmTndK7LtAgEeMxNYjAqmmK95jg9LJYycOc8ZxAu45MAeoJEuPtbi0gb6fzibwduFJJRcCADH4549SB7iGg/uAXFiAUQFLlM0t0XKja4wFMvlh+2AQrDjp1AEXpo4PjHT4zYC6VsC65gKlPkr5b8kL4g6O6CBDfZReX/klxVcv4Cn5E2demTp6ZqKZ/5BmLWkwFBIF9BDIGRBSxNYmWOwIrcWeMBS25SkHaw4FFuR/kYxi9lcleFruV5ATpvwHSY+5SkH7nnF2hZcVeMweYanJ5nDN3w/5xeqhnMO7PnukmO9+dCkAF1xa+KH01tob77A3kLbaaYoRa6F4oeAUJApYs/IXnnQHeWHCQZdvp0zt5VeRrrF2MsWOBHsDxOuZhA5Rp3knhHwEMVh+XCS+LSeHRfn7a5tPDEZL5dJTOoJB6Bf3gnFhAGcVSFFxYWlXkyah4UREZlGxQ35DxfxlglQmclzoMfwC8Wv5gpe8Uz5nxT8XJkfxTkJg5RLLja4gbxWtx4FH9v5AVANrpKhRhkodfBdgxBQhBkFUDHCX+IDBeSb+IdpWkTOlz8EDmHadfDiHIFZaIKFARIOqPZJwQ5LXlF5mwVAUHKamD6Dg4aEKflFJtUiJCUMifFHgrA/YW/opyzBUKnFZVal3HipqtHBFiBKrK7RfFZqV/mKFHqQYVF6D2bpgElYHokUgSyHjWDo5TuMLCu4AuRdn9EekO2WIA2Re2VuwzgOMCiwBRWB7c4JRdcjo55RS6l0oVRWsCPSsgJ8ztl7RYCgoYBpZbk1l7udKVohquSHme5pmEAH1aZZZJkNJlZQK73pyNtiXTFF5d3l0oMsTjnqgUOYyUT5K5SqWGlB4euUe5oJbHkP58HjqV7l8mYMkNJxYDYqGFtxiYWDZgaU8bBpAcZOEOFVAmDxWp0JqwmGZKxQBUepQFTu6MBoySFQTscSpdQwWSSrQakZdGc/Cp5FaoBGZ54+lEDRAQFYgBtE0NjyUoaCmGeW6Yt6VwEJl+eV9mdypAnyGjF+CNOXqYUGFDq4lZVGMWda3NmAD3AZhNgTSq7GkEw0Be0DUASV7IOz4K60FDohy52ebjEJwawHmi08cyntyrIFCDmp4AU4NCE4IO+efmXZoeeKWGYvBRqU5FToMwllMY1BDh8lYAK8UvlO+RsVwFu4AgW7FKMFBR0kC7C8wjZdNOWTGlOSnYZBwzDJmWpGwqSVnsFMEexlcF47CAEIVCkXKnoVwhWF4qpkXklwnobNNuBapFQFwBHEc6a/jGxeeSYycVsgHOX2s0AB0Bu4xuQ0D1VjVQDLLsnzhDClV4hf2mv4+1IMi4lrVcEAiV+CENVu4klTTH2sRErSAkA7VWGwTCJ0j1UYAfVRUpDgE1UuRTVZOLNWuprev8LypJCSu6bRpheplBpYGg4GOUe1YF6LeIXs84TJhFMzgGMREra4kBa0pRnVQPCg+4UUj9EzrIueciURARPAQbCScj1VcEuADULpkdlBjKLAkhY8GhQcCqILDxpgtvmZ41SBGR8ZqaVUCilcUVmIrqEejAELBaSJNrZZ9Kp/DDV+Q2Vnig7MlAKbE0VMGTKkzq/wse7gIp7rFXFu8VTmUeeeZWykyUejnkmKU/wtDWg1GlHOjlGyEiDXPVixnUaXVFEt0ksKVFF3Gu5WNdZS6FhCXtVKZcziplHV4FfaL+mM3hdVo8tHO1nBe42R8oPVJIE9VnQL1a7QjKO2I6CpZMLLuzww1BkgBMA08EGWXMTtqfz7RL6IUQoVu0ozWFiJ7glJNmY2c3IEuxhMDXm1Qte2aYA8KmSkw4p0NcFP2FFJBJ1BD8howD4xKNfC6MaFh6652INJRX0A0QOTwzAq9otRdY05tKkRud1VsAfGC5jPposjch97/AVgNABrQBVaFkJS15pWCRw/DDCWzmTqtKqd8uedTWJZsOAATyAA5En67hPHEEwD8E7K4E2Fv3MFW6YVmEkzvalSTfZvO49WQRq8HfA0Su1ganIoOuMnF6iv4QTAsagWMfnnLkxowP+IbAQTO0wToyMZVCditTN8peMZLIEYZxsZCOJ9EBjFwzKGuoJHAMZWZawXMZmRmKnx6+ZZKkNqPBWjwW1sNWhFq1RtRpQYxEXsXhO2gWivXxegXmuxzR2XvF5r1/whcKmsV6joqAiMovl6fIaHAtXpg9Mo17/lKpHtXt5ZTpegHVmtSxzHVHSU6K9KGOfPxD1ENbYATwLdW3UwYaTqKY6IodCw03pbDftLqoiuv+Jx+z1PFBVi0JOQItl7hsXZ0AY+K8rdoZQMuIMAQQBOjYeDQaDhdwjIJujW+60HxAkA7qprgYKYAU9DlA/2abZbMFBf3k/4IWFs4muNPAFj9AtRXtkmEZxNoZmlNYrTTFIP8EKByO6MCXSMQ/YXOAV2v+D41XuC5S3aWobULBbF2GwLyDJEc4ruCfw+DuWD2AvZQmItlaRV4QTg7xPCybaQxHqBVA18IE0HYFgh2DXw6Ql1DUpFJQ7C1Y0SNJLRl98sZJE4PDt2AEAiIYUQAqqTQ6ptA2AHjhUO/9Qlxy5/qlQBWgwYC4IKQPiORD1AYUeMBgW2NrgGiR08ESz1Fj3jwD5EMoHKA0qxSP0XslicEwD5yBzGpKUM+de0zeQSTd42DgIjhLnEQuYE00OluBJUXi5MPFWma4gTXHAAqmgqrqhkZYuUArAmEG9woOwLcXapgkqr6B3gn4hM3yqoVV6HZoTqJIiMmd4BH6s1RWeA0JVrGVzW5G+5c9DeQXGUPWbBxTcIzN1rdQpEyNk6XI1sCcmZ1krRe1b+JEQnub6lWB2tX6a8Np/JMgSgQoRUqF173iI1Mtyad9ZGZ+tSTITQ0RT0B8tPSZhVZySjWdIHgplqjH7sgLaJHYhygQylc+XkM5Y0J8hPxxncqnIJyJcMEAWaTYJNplx1mVSgeQFQHZmJjQUpxAeD3ouTQsBsWtrdHBcpZ+YqYfOBYOM2qgI2alKAt84MiUkIz4NTqZibEDOaTyaKAS2AZ0QO0iZt7SACD/AYAATAEwA4DMDPwBQUa1D2rYBdp9khZtBT/i6nkpryAvYJgWHo9bZNino8RQ7AK2UyvSpGgO8J8646TvkDGqgMeO7kox69Ogw62uIJq0nNEoFKDnNrLAwkeAwKqG21gTsYFipIrvmdyONfhWamgNcVdmUaOuZdA3c1NCno40tErXS2JwDLdK1iNEjfxHctyrVdlCFEvEw0Okd7ZTkqtBhcpnGFqmUBpmFGmd5DlKuhue2hAQjYy1iNBmUql+1L7QbU8t77ddZqtAvlhXH1daSo0Q4Uib+IJ2qMZ80gRKfjC6NwcSSa0ONVrcMA2tQqGICIp6BfQCLt7rXHA1t8KYppliUCFeKGtgnBICb6u0EMxYdMbeTlVgOLcC4IsyhuGDnk6NJdGUU8gHBCJqIkj6XRApMFgy4AMwJ4hExXRjfw7wboP7iCdDrfvWrooplm3Zt/wLm35tlxMPlyxWrdkx6wq4Sw7O+U2seZZEw7cCrhthjPIAdtStlWDqWcashYTtp/N2nTt0oLKBztXvFsBUdVEJbY1xjNmSUBiLoEURD8rYJgrxS5QrQAO1cLOO3zNoQHCr5+WxILCgQeTSPS9EnoLyRid8YJR2YdBoDs0Kx+CAIpLt9gCqD3wU8pZ07tbNXu3ueFCijUUtWSbtC7RGcmADL+vgEB1Stojcy3Qd97dJ4nl2eQVyqF4gJ1084Q9Xw3Wh8/J4jAqM5aFjVittkewq1dSUu3jQmyjUD7VIFaQla1P7SdWQVZ1e5qh063ReZbdV1cF5IVSqVXLSaBylVBtK7dlRCINYNdnJvVtGbsDiaX1ShY/VL4qOQU1RmvGE6Zx9LGlbKq/O62C1EtVdzoYEiYjUrkyNeqbhAbHPbo8cGNXp6WUBntxS41MpiNJ46hyIyn0CyiPi6oFlwba46QAxHN2YdFXari4kUIbd32egcHSDx1dXcS3pGEDZ3Gc1h7S12FltfB11dd3GcCWbdlEku0Q9ltYUkfhgGaiWA1CkJVAPd7rc90aUdRqd2C923TtWEJSvVsqG1GUTt2HVXDYK0buvnvkkOk6vVt2mZlzpwmy9T3dHX4i6IZvDxdeyIl3O11cN8aX28IMgCBdnzjnKjZ+uG9WtC63cDmXmgdczXB1W2GL3uMnuIbBC1YwLHUvuQddKkrKxqNri9EGdZqhZ1xMTxXuurLB3YQQumcXVi8frN/o5IZ4PYTiArMBUgUAisgpQy5ZdR7CbwldWRqOut3SYmK+4JA3UolbtL9D9aKQP8CZQ7dZCTs0Nyutn0C7eP3Vpg7rcPWeJpsdfKTFsgNPXI97mnPXQUWtIvXRUy9RFmr1rwuvWjQm9SZYYIO9TfJsc+9S7XTyYiO61uW6YTQ0X1Gxp8hfawFJeEUQY/Q/XH0T9UxZCMb9Zgmzss+Upjwk9sdYasMflif1BddgTyrANFIMz1RW7Nfu0c9zXYlbwRa0rhEW9nzvL0KRxvRgCa9wURWz/AMzFVl4NZDV2yURCopgOtcuEch5H908Pg14D80QQNYDuEcQ1o8pDYmzkN46jTJUNVA0QODuZ9bDJ0N7QAw2q9a3af1ndqAzB0PtAgPy0DZ+3Tw0Dw7vQWAQ18QB31d9PffLkdUaRDdXhgKvvhBvtajWi2nRZrWu1zNQumP139sJW+jDmXHfOFXpEwETQ7Z5Ri8zHoaLA/jJIQ2OhoBhcqma1WY4zOEjdpBAN8h89rRaKFvefybEBV5fydACQ5SOQKBWAqOemav44qum06dObXm0EwOyrwLWh+AFjnDAW5veXsaOYPECjeE2q5qbQ8kMskqe5IcpiRJXefNjvyzOHDn4EE9BTI5qYRcgA05ToKvAuAKxESwVIfhF43xU6HpVAI5SaUDoNFs2MEhtMZDm7hvEBeAiyz4IoDQB5Yk4IgA9DrOb7iHgb+M6CutYVHarGNWYBWlzFKLFEBWY8wzeWc5HoYaAdstAGSgqQ/OW/ilhZQBbg2Ai8N7mDcHVOdiXU6HjJy5Z/YMbG6gb+CN3XwMoLMDQA+AJlDrEkw8CMvCGAIUVzJdQ9139YYgBhQ0gD9FlBQQFZpkbSqsmrropCsag0MG4O/gOThEDOa0z4YLOenDNufKaNiGebQLChnYpOjjbsaM5XQBv9C5cgZW2Y/ehZD1e2NuHoIwOiJ2aUJg1YPqgDLFCOmDR4AWQFcpys4A8gM3eQ5fRg3Wa2aYSOAKo+pRLeAMNdoqQe3QDVbpxm34rATxlVZsg533d9yA/wPK9Qg8OmPts1hSEoKi7fe1t9q7aKAPIy0Y5QoDSrRoNDdcHdr2cNfsuIMQV/plIN7QwPe336jCg6PnKc10dd3K+6BeoPaYmgwaBt9H1tBQVd3abWC4lKANbq0MewKsoy63GkyF0weoLAKrg84giXUW1rZMnbhAOZ0RoIyisOhJFomEOAwxqRQklHgzOJkVpYvZUODhEeRaOAb0eoIUWZQOzWOUnYtY5OWnh/iDDF+N9AAyOZcuLF+nfE64SZIDo7KaWaYQvg8F2WD1FrPS4s1fWV3WhbuFYBVjpsaJgp2T3uTlNDuVLgBNgT/XGRtA542wD1IAlTRD2obuNhnYUNEDigRe1QMT63k/EK/hsSSZds51ULgAiN1jzuA2P+ITY12XGlzgFQBrkBsEongTZLLxaCAY0PEQGEd/QwB+DpJVS5Hg0OauBeEM5it65msxGYaiAsAInjIQCqKnjQg8QKU1+68o7aFjgYTEiNscsE9kwwF09OPgri2RdeMJS7YwOWdj3YyONDjrQOuFW5jRdMgY4h+K5gP2mE/MiqdBuOCNHgA+YRM5jZoKDQwhsdh3WuET4llB9jqDn3LPwo4182QAE49LkQTjEyiMVKuLLRj5wWIxg30qwYBm1Zt8Q/m3ydk2LyHfEt8GuhqpYyNJ0+FRbc8oUgVk7jUGDMWfiluB82B4EsQWzBKNitqbTvENgrfszoNNYyCaPBFnDmANp5RGRzVNdCPQWUntWo7klORgoIO56j8g4aNUQG3Rr0mjm5b5qreKCilO22vo6t0rRp3ft7lgLoNt2ftG0br1ejOte11+eJ3fwOtT5EAwAq9igyGMqDiGhMnANvimP3ucumK1ZbWoeftpge+1FGN8FAgP8BTUK04N03Jm0/oii5kJY06R27AD1bPJhNOslQ0UU59XbJ31XCnimdbTnKwlIWqinkjgKmhh+JG6GigPRRvFSomeZoLGAq0sTXL621IRV9QMU8dXPrKeGnFnKhUUoAXiE1PUMp5lNfiSyl6cZEBWAVd5wpTV+tT0OCSRAmAE9By+6UxBE/+LGVA3qjuUwb301E0INPoz7Uxd0aU1aigq2TUXsp3VCWqQtPtWmusl6rTmYBclA4e0+hA8zg3ZhaCzq0LqlA4R0z3YnT3Mw6MqkLU3TMjTPWZ1N+pizhQmnVpYAd6jAFXY2qNmi06dOytHWvK3yztM1rNumIg/B2ZyjopVwMVvmNRaH02g4FjM2isT8P8c0VL4O6YoZopNoI0SjbyaE/eIm17DrwgbCoj3hbJ0ITuYN7Mr4yLZMpK2x6Oxq1lpeYHP0AmY9BatFkXDsOBCE2bWBxjpUsuNVx3s+BDPZmmN/qkQWs4Zzgwz3rwmRpAZN0z3OeklOQFd37uKT+gtnPxBsgdTSiDEzUeqTOQNaozlOwNchcWWczLZtzNoRCs2bPKFyqWih5VmyA0NapXs10OHgXABqJMD9wsl4El/jrLoEwvA81OmzbUyNOsNTTuw3ujX7Xt0+mB3f6ZlzB83mAe9WtBDU3JUs7pO4ABs8GP2lIXuZk4VtWXhUNZMAWLNoU1hdFTJzQo57Pg5rFUWiJzMSmF7lGBUqnNTjXWOnOJjQWJXanOKaElPPO7hoP1Xy5FanOxlBOARbl2/QPKX/NcliHyZEQU4AOhiE8uGA121LhKRTIGgmTTUWb+a9S22CLVMh+W9fE3kAh+Gq2CoTZrRiqM20EJOPdz7cWz2lZSVTA0VZCEYO6PzbLS/NjzivfvPDTV1qy3Hz8jUXo2FuC8uOV5BlLWVNTjo8osjAzo2tOqtp811OejF8xIPWk188NO3zj5DxwRFLo7KNFjV3X6SP0gC1E27AYAN9iRTmydGCOAsKBhTNmaQ7gAZD91DGDXJNSDMM4xhWI4C+zgYtNpBk6misATiaKRXyCckXu3zeLvi9tj+L4nd6BX8QZQOJf1Xvg7ZjZldYwsHa6WMTmazN81jO0TicG9EE4sPFDSZGtYLaMWtumLnCgQlQ8+DVDr+NhPyAj9c0PpgCLFzDtDNAPhMoLNQD0OchQmYMsjDgo/BYLmy1K0NoQ0wwkbUAAYAX3fAmy7MM7AcS8wCg5lUM0TxgSwz7P4EwC8mV00COrsP0Aiw6SMHD9MD0syowRicMUg5w88M42+BMss3DfkO6GOxdMFSP853FK8NFoQI0P6Ggnw/gBv4go+8NTYJnbMRBErUjCMpdAlXFMZ0bFZ1W+A0qgiPUObDt+Ju0Is4ID/zJsAI44mbNqymODt7uAxIl5OZ4iBYDoGMMVDXqkTi0oVGeH26D18G1C3jIS1Mic2r+AX3BLmOe9DhLRy6DmBYrHEOBEMNtQSPw4kAI8t5ZR4IKNDYXOXdzArFw5dTkyNwhdF5ZhhJ3mPDdI/QCgtobr3nxgYvGiM4h7VKdnIo9qKhB4pjcMYPVFvjaPW+AALN0HJkSqNGDPMmK/xAbA6c0ExvypaHmSjA5SNuBVIiXO9j09qI6IsQDjXXHoUzg83Zg4Q9WiKupDYq+UYSrZLmLw+L8UnktRTBS1SpFL18EovlTSE4rMmLfM6aMWzDkVTyprYPHsuGVBy4gDZrGxX8C5LEIIWv0+hSyV1TE/ERPMHzVa3lzCDWEVTy2LFYIfSEBrK7IBVD7cEXoez5Q70uLY4wsfRgewOi0PqodKBMsQgW5UO4ETSaWWufO40ENPGLVU8oX7lE66hBTr8y0mn0ri7F3kPYYHjroc5/41us4E0S0gI4xZU8esVrZs+etmjl64rNeFpy8SNs5yw7wqLrBukdho55qJnM9AP61MAnrlawBu1rhkeOvAbU668vqrnYKcNfL1IwZj3ryNsEbTQtVYCt7rIK5dSIbCwH+tDrqG2Ot4iV6/DxUCfdPIkfDFnAuvzz9MH8NySo7nyDvrp5rVVBEHOU6hiAkHgJXUbyG/+uDdZi+ht4ipiUxsgbvMyOvrT/85Btcbe6cysc5y67VXsrkaHSh9DIBmEM0AKOQUPo5KQ6Et3le6/jm5DdKHTlyrlKczl0oSq+zmHDoEDhuCe60KLCUbNI4LmkjFEl8PTl+rbOWBNkm7RsqL9G/gmcthi+Wunr7U1VMftGtWfPdTVi96NOiim5jN7RtU1EXOLmmFjPaDttm/PKDJtUCYPejRdaCiFkCNRYZiblD4W+V3JC0v4+MejnNA4K85+PGEu41dAgSNYwVjlNCSUOBgTYgC2MQwXgG2PI4vE12P24g450Dh98pV4Odd0STTguju01QLYmwkOgufTaGrSvwLm8IfToWTG7XB/zVAkRuUlxKtQKSosTeUBi8Nq0CBGoi48yCaCHq5GJ00y4/jFz559GTUKofusI7hgfgqktMWVYPTrcU2sT/YxN48LiDKbRECtucMQCpZwlg4sQGthFlFQywxouEOGuVI4YrcxD1y43uKLVYGGOr4iFCx72riWlLnJGk97UeD7DalrqvcQFpeqF+AggKvDeqQZeLEKQ9UyQQ1gcayqNkz/c9o4FlcDSAG3rj+UetIb4W2esyblZfuVg8nW1splAomGFtxbI0wltujcm6lXFlQE62VSgCuyhsS7Ku1LvwNnZWIDa70my6PVTmUQLvFlVEyNvG7dG7rsREDG2rtsx42ysGwAk27Poi7NG4rvDrvLZLutdaa4JM27EW3bu/ADu0WVt2O0wLNbT480Yvxbwe2wAdZJimr3mxA0uNAMzKswK09TQrZu4Mz/PiEV9JdmAMnyzye+TBM1Fmoh3nuWlIRSYWfdlrt0oNyTXtblMnO3aJQT89jYN7VtTRSrJRNMmL+Lj7p+K7JTPbLlyxU0yaCLUsMf4pp6QONvZr2e9pCVH2dymVCz7W9qsg72FIHvYrZggPPsn25tG9Xz2oiQh0A4Sta9PIdFIa9S1tZYpil6aFJESkx9QfbUGJ9CsdRIHMxe+HI6cKOyqkPRDHj9OsRums0w0x6gkjNQh4M7H22QUM7JhKjGUzFaqjUAwPMcZejnrVF7OFuTCjTEvrwq1qmqYLJOC804IDt7de0Di4HbtB3at7vdi/vHSMMePHI2NydPu72QtHgcREW+ycBL7ggNQdr7tB/TCYWDB4vtC0cs0b0v740PfHp7Yg6lu9T9gcd2OjfB7gkUH11SVue9wSIdFf7S8p4gncBHrfV2xroDRQsL7VOSbrYFmLeNycbltGptNnEDghFmesbvnLgkJSwfr2bBzL3MHK+zPs2HOArPs3JnB0QDr7RaBwfH2jB3YIFYXWAofZK38+AzVi+nLXDJK5B3V5wxWtDcvJ8QM6TY/6qY2ZJ8AJrBTjZItZRBC6LiwW4GHR4Dua4JQP/b/VPgJzJ1pdFhfoXPCgP9Tla4xSK1EDf6PUAke26+iUaDUx6GcGpmHMJbBZqT1mPUcjkP+sL7oAGk+zR4olVkQgVUeC1nNWzilE4fm0UR9A7x2eXWHDP26LRG0qc3R3NyOiHxnDMlIrznbHKH9WVWALI9dGTHryrrjSC4qZlXC3K+5FUhBuIlqAyyGH8Opdnz4LcYKm7tJLVlOJrsBzzXWk/h8WVUH9hzQdB0ArkivQksx6eiCjl5RtJLCyfO8IGUz9lKLQnVDVk6xU4+7rMCAVhx/UzpkBQeAgniqkYd00lefCeWMMJ4Zhwnz2wierCjBPY7fHKJw0JTHgJ2xJYns3ETV82j5rquVQpJ9CJInmMQ3QgBLh14dcH9J6Sjhl2JyzSgnMamyebzZJ0SdUNJJxUeEnIEjCdcnPx3jCeHC+24fm0DJ8CeinuJ6yf4nI6fKdlAxJzJyknUJ9KcUnBi4gdi2G3eDnC64vIIdgVme/r3eQth1hakH2cuB2ppUZSRSbZmh0CLlqOdY9G5B6Uc/tTWVkicz94CPHiElOMJZ7nnicIKCfZm/eTWBDgbtWZJMd9rgkn7OmcwknPyvwP7gj9Y3dDiyjS8/ejZIPycIsmTE9MmNwL0IJuNdYbzfFT8MC4Xa408iwDKOBYv8nmRkgVvrPylAh4lgNiwM5avwybgvXGfR+UySs32Qs1CXbuwrIeqwzsefhLq+jSHYcrH2sibBmeNB62NnXktCwVAyjx6IyqQ7PQKLNbTCI93ULdgYdA4u6rqilOaYQus7iECdKeRZZgSEiWWHZXuRWf0AT48QoiuYbma0ux8Yy/vmHJYBMBeAnEKDKu6M+qlN/7jcb+PtUfgnrDBbLQVSyQgthGzvtnSZ3RitHNPKFgRcEEn6u6uDttahSgYOyHEzBPXLlJIxYyJVCUR0IGkG0G1PS+hVxkbWMgDwn50eAyhhpQ3LbOtxK77uhwRlYR8O5F0I5oMWpacATNglIhb/nBMMKOn8Msf7jixEllztvHkA9lN87ya2HvsHOB26eK9Eh/jkv7mVOg2qprMyjU4NnwjgOyKfVlZEdOPDnNXmRUbFGfSeMZw1awyXszWDvusOOqKvCMJ/uXJBfZyGIQywVRbTV7pB1qmukiAJuWWUzR0siV6N6RtL0NXbP8qygyXkJ408POcOeJQw56bsuXsiiOk6H8BlHOUS1svQ0pXQ5+etbKaHIvNbnRV6qIJXubGOq6KtMmsIvSlA8+0TQEhyY62nogw6fCHWe9aSQl7e+6duLr1MDaa4paWUjdjxHLMC4sHg++GE1AZ9c7vOv7vKUdtsIATBdt8MUMcy2ePXcrDjZQETHHAy4PZD90elPYnWIFPaO0Xngtk3yqHR8hNRZZI8mw6r97PPh3ukXmzGf3JzJ+AymtOiHIB4mJFXhnUgD4KJCwlOiNeSit9TX5CGbHza9cI1D6Gdyv4TnRtdVggbgsFIhu4Kte4A61zMr5nauleJHsxI8G558ehkFH0T+9p4WfnNsXcapzJumbrW2vlsO0kL7eM2dYd2TOzvF2mmBsDPmbiAVx+X8/BXyCC6FlOdpkYAIiDuNI7ZLhXXvpS2iK6Ut0Lcrn/DWsjyly513AeWt59RaUZ056j1ZQ858nTYXhk8CqoAu5yXY+gV4LWCKbh9LSER7ERP/Pgrb4EGAvmkY9WucOXDCxaPnKtmro1kjclZVf5mtp+duTQo3xIJFe44lnJnPI5rteEyE0HhW4I27QW7AvE3MDdjJsDpN7NZRTNsVFZTWOOTN0uZtRAX+FxDcdy9bTLb4z9wKvl0wqKoU2lAECsejGE8sWMiKXSUlD04XxIacdIgOVLchU122IOZPUKCIn7rA127cz/AsQGLinbsiXwuWofieTaU2z8NTZ02AEngBPHH/sknc7fczAfqXHGRbtO7ItjpcDrHV8CldX2VaODhexl1g0UkZl8uwWXt0q079WNl1NZ2XkCZ+yvX6Vx9ceOsMkbDebsgEVU862xFvBWbyIkbBcDnOLeWz0X0tEA8EBsjwftXSB9IA0zmV+wvY5B9+Yuqz7SRBWuK1pLad7URB/IsEHrgRaFi0GKVn352UtKHzkZWNruG3bOTPaUtbxdvKUNn/EN/oUCuAXGTjko1PGQnyVAjNRpkZ57Dw9m6MPjhX8HNFpymt2w2rlmp0F3TBUWw+NWJ2zQUc/31BxxxLGogmNK4vosE4hBAPQRytDNW2QFyzD+gX8LjH3NqklNCYEfiK6UYMjD53FZ3gWIE3BdqUySXhgGzT7hYpaydCFFNruLdNpEQt1gCzUot0SBHIM53rnAQxDzcwItWTaF0bta2iCbHKjomWHTQTzR3YhS7+tfCgu15FN7YEMkiBDFAMYI8Afkcqm9qjQccGX1VA42PIvvArHV4DgWWPMjH/iGMQMXBF+V8gvJNHzcavZ3TNPmePNfiM80N8xwSgrTnmZAPbwaP+mU65nN4/LLMs86KQ98wIz27iz4uj94AbbVth0+PYHdkwYHMWfQi0vMGuu0Ab+y6PIZCGEwJ1on8oj22dloQTaYlGYD0I5KWcz2haxqM3BjQBnZ/9mwa+Ye/WISuzwYL+emx+dsM9GP5YfE+Pwrqhk0Z0ttoELyggGSi1qdmIahmItjNh6X9Arlspes9pLeTOfHNCpVm4Rze/4DEH7AINe6X0D+ND51pTuovDACBtA9R05lzLVDCaHFZdJRU1tpqySV9ZmwfijrNkD3328TGzukuBLFdLFPPF2zQAqZiQA9sNyTayVRJ6iHnCvLV/1HperPJ+wcvnuZVdgL8V9wN8vArz2yYWIr+9Jiv3xf0CSvJAB8LLsj97AnzPJm3c3KYq/Es9MiwW8INzlC5eJtycXABgAzqHvoxNvp8aRQIOvTr5UCMTBPPzzSv5sshwItYPZleFElHl4DMA3L78DIixq5FeBNyIjmBRvVrzWs2vk40erjoqMNRqj45AOa/GPM0EG/+AXAPzxzxY457nJv0uXa+qCBb/bImw+T+jymnCp6pyyix7DwPxe28TWywykp4CL6nNsvVew4u8yMgQwsmNygLEfjklsWLjio6dBU+JBkT0A613yxO8tyPWlhTTqMphe6UwLGRVBZIPpyQA/qMexXsslmjAgQj9OCjBgBRfVuJ1fkPAJKRaAGNA3JAILduhKdMEC9wtrIBDP7D9RZqi0py3AKrD0pNAO9YQsoI2Of39qEMhtYZaFMi3mCoP7g7EZkNBSzvw77ciuoVAHZj3S3ALeFfIBAAB/+4vVOhAt2TAPdIIailIHPNKuADUS57Xafnyfvc4Fu90OO6SWD7BAgtzAtAj9Hh90MtAQgT6EMEFAjj4xYycrV0zkCkWJhNCVz7MoOlsez9iYTEL7R8dqy8GV2OBORKnjMBKG7NhCLMP2fIjZHx97AvWG4aNw/ICLTrc+1FtArQzN2xv+r3zj0/XwQ0O0CGfe2N0/rI1n9qStCx1gVngRPc2wVktnPYlYvsTU0O+UAKiMMRLQfCKO/IP3Dag8uG7H1yjzEvn44MqRy0FBi9JT1NO9nutyKYjVA5iNQYUdmBk8H+uDTBDUg2xXRVRMjz+9A8wYBvu1T9v98LWBwf3sGu/5wBFNc2L5TS2aXj4PZ1V/zvjoBDXlfg75F9tfQbOwLQ9WMISgifQfnuDJL/RRp96NVKjvRvgb00J+hAASbcxzgdAlSoldCUnSTqWtpy8wQhK+FzBsQg/UelGwiL5lOqXHx+vcyUAOD58UAfnxowBfcXwu/ZbE3IR9A47lfe+zstp7wqdf9c0OCtffsI6WEop2TvoyODsNkSUkn8OLTyZRH934kfnAEF8Z7vVxrz0aSCsdi2MUP2R/NQmeBmiLh08AvAKU19m5SUoBXCNTm6MExc1RJExrR9PuYcPtD+wh0GznDAiKQ1sfRx7wpB7JQTZ8/dgWmuF2bwkbkCzyqTYN0hWAMk8PgEgFTQpdpwYffxDlA6NOQTx9MUBoC3akoAiwGgzZhEA7YNTh764+8qAagbm+MwLhjK9n7LFKYFAOh7NQ2RHHADwVfCbVXyDP+7D46ULIolBgLP5WDkugRhRacuecHokTLIBMfQFFpyKzyS/HcgqvPwT76prDoKpln3PETOVpPL27PhfjZZgw8uB9oCv12ngM5wnr+QYzN71xk+kALLpbbOXCRXyqwvxQiDoQ2M8TXw/v9L9xwWLdHPx/+cMRISySRJx4NAlvrokfNiu2eFoJdhQiyRBDQBIwB0Oqz9HwACl79E7LJfVSQolrPPSDmJ+yFn7aA4IIRFTLAWe+Mrg3JNUAIjNS6WOO/yJLrqtQGdAm7bfpKPtB7AUwH0CqTW0DRTERsv2tWOAksJACZAGgHf9vAeRJKC7gV7DkAaAYn9SgEAIyEGD3sGgOkDay9/xSQ+P2vgLwHv+/qBeAa/w8mjv19OaaVjmG13GuqODpgqN2Z2u8lMSrhF4UwfxHMof1KEoNG86iJFfwjwBzImoCOAJoG4AbwEQ+X0E60KLSAB4YhKSh/z4Ae/xzyu0CXwARAMg+Ky2A5v2DmcuW7SuuD0EfiAXMLgBJAyEG3osAB2eUv0kmgy0EBBAGtQ3AFEBi4Fma6HjV8ZAGkQF6DaCgy1lAJ8CeUdt10C9AVCAz4TemAH3wICyHHkEgBogQH0UqxgNnICIy3CM8FG2jZECosZTAYecgQApujwgUdziMPTnocgpHpUnvgWOFFiTIuvy4E/uAIYvj3FuW7x+IDuCrOO/0wgjAMkKM6GQIGaWj8sAgYc+xxYAPoCOO841GA5f1cwh3ygOPOzXu5WR5qP8HG8Tq152hQMQAQMCO+96B2+3oCUAnJEdEb0THanUlBUaZ3YoEPxOwGgBR+QyDJ+QQkx6y0RMc+X2sc3EBnKeoEJgNYAMmoNW6u37Th+k722KMmGgwi7yEYomAmBs3A72QWBeo7VBnK3GWSQ64xDmMo07OWAQSQprTC6BeUwICGDnw9RVnEY9BKSYozCkPUEdepoDO4Ijy1U8aizIfITVAaAF+g8gGqwWeDjI41HYe+iHnqa0gcyQV2YgwW2SgNJDBG7iH8cTFhxM+CEbgFIRTml2lwCGjStc39Va4YINDkQRAPkEy2xgsZGQBJJQnoIal2OLRhBYACSzu9ZWR26NxUOnwNkAtcF0yv6EQUTAHigXvWXUcIwhgmbBWBmEBxWO0CRANFG/0cII3yNJCsAD4zuADwGHQ5IMMmsgLtY2TytUL/TQgpACjAy2hQQG4TgIfW1dwkoKBa3aAieTKH1wv1lCIGuwqaMwHLGZIA2A8flmQBHlnGEHwPkcXDoAGXxxqwoNHwGq3oAM/WcAmoJdW5rS96YQEwmgQWheLoP5wyQgKawkBNywoOcAIwHme4cRTevWyzuTnCYB1KHAusYMDBNIK+Btyg3MTSDXkxEw9QagTZB1CndBmEFIAZaFlAHYGoydajP445EwAX7hfQ3+kT+KYIZBeGCZByEHfC/KQAUa0mEc1vhYA+NDs4QYEFBhYj2U+thXE2MBTBfPx/M+OG2W1XFXOwNEzuDClceVdy0ajNnQcKFmNcijzwgnv0dyUt2Iu3cHZAwQk1i1/G5Odxw2Qp6DAcFRyCaEJELwU12Au03zvQbTQtiBAF1BaLBNBPNiqCUt1+yEMBQQ+gmoUIcRUA6ECBBrtH3Ch4UwgHfClu4VTYkOv2KUW3C8SE2XjiYyH2GEEFDmxJCzu6DggOJMzc+KL1O+NCngIWYmzk2RF0wywOC2TVAtoAwJe+V7xGBexlwhNPD1AY62pwz10ZomRjAI4wLwhs7GwhuDUpeMiivu9xWKu3A2S8Q52xB+DS4hwW0o8LQHcQqV3AMtAF4h8XiHOeKTEhnwiHOOK3oGdbHvuQ52lBWb1lBCoCkhHVX4hxgwjuakLDYikKdB2PFdBFAG0hYuTSuQNHDB00CHKk4yMhSaA0h1CjEh4P2BSgwL2MwwIYhY0Df60AAT8XIIohHDWS2liwDSLillo072dE243egOsHpgb/V7unkNnYNsyzUqHTQwociIYvdwPkxwLO43+kLO6ATKARAH3gnwFwg9dQegJnmCqj9Aj+bFgY+HwJTBPwJAK9NGdAxQEtuSaEokRTgmWZwgckmRznA7kJqISf2yBzbT4AVTRngfwOPksZAQBMqhbBrtGFOTJzjsmEGShDznlK3EiHk+LXHA4oNyeWEGxcCUIT8jJGC2DxEjUDN28gXXGLGvaEHB1BnoWcpCkI2chBBEWVKB8UKLyiUO0CtzGmm4oXkIQXC8AmUNEg2eEzYrUJfmmAEKK8QB2Idw3BG/sF+gmUG7E/uE6Q3YkyUxShvsoUMeGVRDLQAOUuhR0CmAxSRDiXrFrAIKCHAMLQqQJSWoY68m/g2Lklw4wzyEGtC96TtVdUFmVsMQLFOh4YGUEagHMSKOyCsVAFwglGTC6A0DfBbTVVAqthnyk4yv+DjEg+jpR6M6cBLUuIHUqmEmzyO6DtBp+3pSYdTRYb0DJAttgfBSJDkEw6AOwioN7BKoLRYOK3vGmr2fg2IL8ITXz8g12jRYPfCDKwRivgYyHdKEj03OMy1GwcCBsB8MFdUOiD/BxryrE/bnweniGWh+oFZuzoLuAxAFphfSDyh9PVtsTJjNhTTy0ElOxj8yzXqCtIP8Qr0IV+tcGfBD0Kyhz0NyBkEXyBal3KBJ+Awh5+BqQcEDpq9WnChHkIYhnRWpweFXPu/QhYh+6jhKVElquNMi8G4wlFgBSyZeicEdYmQG1k99z/oA5ESh3m2u2osEE8R7HdCZ4CshLcNqYbcJ28ncKF61qHBGfcNjYrcJWh7cO6ow8LB6pSnHh7pEnh+oAiuQ8ME8EGCZQVkLUAv9Fph4wDyhlACshMaG3hvCF3h4I33hZDUZkNegzhl+GlSC2wr8QHTi8nwjYIyQDFwosAIMJBliA69Ex8+BEeG0sKtBcsN8UFk0AIuqRSAq+lpsEPih8IPglwX8Pnorzz8gEcWDBSoL5Q1NRVhd4x4AD42J8gkPmGwCI4IosCfhSQBfhgPhEab+Cm6OMCARnwniAmUGTgKQFFgBMFNM33l5c7SFwRKQGfhKQGIRErWu0ZCOXYwpFFg9WAngZKBoRzCN+gNgFLY0AA/hTYFFghCP+AbCN0MHCPi8FCKoRNCLoRJBgYRPCL4RAiNkGwiNbqYiOkRTtlIR/QIchREOch5EL2Mr0M8EZylOY3kLHe/qTG8/kKne8wKkapiJLuFiI0oQsNLgjsKbieKFuBQZQGhWglu0xxydqHqAhgTljJMmuDhekcxLOZIAXB9FVFhh8mDmJUDcgUsM1wMsOtB9wUVhyoOQRy8gSOg5AEqwo1FBKkLcs2IPbucFBr+3aDrobDjmmRgCvYKIkcR5iIoAKbD7URRzIc16zJh7ojOUWgif0l8H0EOSJRhmCJogPMNm2KFzLQC5XnqZyk9qxz2tWCoPhBSwB3Ak4BfQ+kgBoKKl6RtjxrB8gGHBBuHEBTEGAgWSM8ALjl5hyFz3OQyMnGeKFj+I8lOhYMPqE5iKwBu1xYy9wM0EK3SMAd/xREucDqoZWE40QQnqRMIDmu8MOP4TwMfeaDBWRD6Hkk+YxyscNGBMlJhKhZcDeRKQNnAQKJB2pANn6Fg0/QYYMaQtQCOOmYLh0tBSouYcCn6fkH++u4HhsWYLTyRNFxh8vnZsOEkwki73vh6ggeBOUn7amgi4+kkxgBdqgiIDLDoekdGgo08g74p4NlAReDsm3NwqeOsGBGQYMVBlQQHuz8GHBoqLQYXiKiKblE5GNKPaRIjzbICSihRfWDqomRgJRGKPts5eGakZSDbw1oXo6B2CGobTVaAe0Nrgt4Iywn4XdhPYPy+hqAma5+25Of7kvoh0Oc+y9xUuCa3SSyVXQhMhGgw0xUchxEJchNSIJmwFVms07wOwHTTKgdIkqylUEDRzkBUKa/TfYnwkQw4mwBoAkPkmr+CPY7VQq8Jd3LhNRHTROzEzRy7CTRrMIXKeaKb0x0ijRzyOGAryK5AQQhpES7ArYQshmIVYC6SVLytk+aK2EGAwHOuMOhqIJCCERkMbR5YAfh+rC4RzCPwR1CLfhoiM/hb+EeGqI04Rj8JARKQDARkPiG04uAx8Kw1gRbHB7Bs6ITRI6JwReCIIRzdR0RZUDnRy7HkR1CNoRbBGURNgEYR+6NYR+BDxWO6LDY3CN4R/CLr8GiJERYiIkRh6PvRFShPRYbDPRiiMvR0ABURL6PURQiI/R69CPRRACAR9kPTsfqOqSliOC+evVmBCBVLgtyF9RREIQxLiI0+JUNMS1zxCAeznCqBW01wNqNRwJn0nQs1yuBew2EuW327aJrhUYAEO8CDO1L+YsUlKEjGhqSGVwAsgU2osn3j8+oFKGjZBuaa8G7GZ71HgfkH86jiGfAAxFWW1R3oAusIGexzxhelhn8QbKJXwmmAi8rLA8WGXyTGo/z8Q7YUr4wcwAeILBQEDKPB2Y312+i2WFQvfjTMUQFiKGtw2YKEH8ettjCRjT3eaRb0Mm501aeWE3N8/Ogzom2xsexY1RGqK1Ag7NAKgSzzGAj8GpBD31yisbHzq1c3/kZcR+AyCEVAWsGSC2CkdgB11G+0aWMxBGQYKBcB4x9CU+AwsVcQf2hXQ40LkE1xEsx3Fzda+8Daa3YKe+qmNAQ2gC5hE9F5oqEHBag7VYYpGOSmHdkXuKjjAaSL3eOHqKkWMlDTh1k3esBiIEeexiwxIaJkwYaJfACsRZmp9wPwz0S1Sf9CMxlhh7RbHhOgMCPPeeHGS8paQ4xt0AqcERHyuyHgiR01l3mhEKmxDRnk+nGKmB58z8hA+lxAqGJ9R12JiIt2MokCn09IriO+ovGJQ6r1FLS4j2+armMHy+WO5KMSPkxZJmHazwP8KmmAZRCqBwK3UEVM7gIZ2qyAKx34AvB/hl78XcC6ggoGpwbrmkec4zTG1rj2xinDDU+gm4sKUnqyd3wMQ+yJxcgjnlUCai0mHbFc6vfhNCjqheB2dUmuxeHrIjCn5wmGHvgeWPbgmKJv6aGMiAjq0oyprXhx2sIRYpvjkxz4BEgMDn8QS4JIYRLEzOCkDdcGwCUBjd3lqrTWixk/1phtZ0B2CCw5W6tmkSxPUHEi2XwhzEzeBR9zJRZFjwqs9Bbs3NyZQ03zxgpaX4E8yCW0/IH+CDx2EBtlgl0huNssd+DWO3oFTA7YQueX2M4xDUHwx1LAVxxz2FQ6QhZRKmIDh7zXr4TZBQUPiPbCujHewKBXn48mJfBU/msGCcN7m7PWThnBRoUYCQ2WUzxrKGcJX4vnSOx0gGiGIuIlgpCKnc72Iqon2I4xCoE0A68V782EO3KiBibxFwm4gbeM+AVBXVy12l8c7cCs22CU7x1jnYx32IfiA+PrxYMiXxnGMqSIdAXxexg3xveIT29pgMAO+Jpm0+HGgiHhWeiGNh+T2Ph+diKXG7imChdEzweHiOUCIWKVuvzzienTyz6ZjyLssL33oxZ2quUWODAjRERA5YE8EbfEikX0Q7GgwWUwWmJiRQjHPx9UDyc2USrkY0JUwfCwsmXAAFKg/V8smuBJKTsXUsiTTTxg+RliYSG2wy4AmeFoQjcXyOKhvR3cqNSD8gwBPdCuADAJahCJ+u0IUeFkg4e0QDJQmUGygtHFIAkqL+AZACSGyXH6SiWOLsQ9Sh0NLgFWNrVt+s4xz6SgBFAGbxOEeuDoqsKTSI6ZQQ08YTl4s4wxijWO64jcCvq4EFieJj0ewUBJD0tuEDE7eHORQlzUCMGB+2a2jQWayBXIwLlpR6P34gBGVzsYyK1UcCHxhF2wRY4Xm2uy7whwQjABi24FxQ+mMEEihMgKGdAFYHSIqx18FJy0WHeeLTxseROOcxf+MaxDxFTQP0Vd82KS8x6w264Bh1VYumngECBOz0ccBD0YKHCx+dRSxFmK24QalxABExgw6BlrSUOmbklQAJ0kmOEBvCHGI5n2ixXCRHi4RPixSYC+oruOHgZpXwUzx0KyyozdR0BwrxnqNTh3qKkax+IImZ+NixF+I0o2RHv2QwyIAdImrx5/XdI+dROx8aWlUcb3ByhVyyuJwF5eubFXmx0gOJYRJCAsgX0RcGKIhaxLGgm/gexKW2vxKGOLId+ImxrxJux7xM+JLgW6YbXTV8RUL8QHxirkiwPFcFLgZx1KUw8ezkI8xzUaKbXUjxf9DVcY51QOTzwFwaBIRJvwwa8mbHW8Vn14Q/Wh68zfnlAH5Es63uUqgQTnJJYMSRQLTVPQuqhI65MSrEmFVKkI/hqBZ1yzAbEjo8X7mwIavi66DLDbBcJOVcMQzVwR0MICdHjLqgSFIoWtE7udmF6G5Fw0AcpKQRs7B7QwIzvSeoA4QdmAf4ixzc66gQHuS4QESUfi66AdwaIQSFB4GgOY8niDr8Dfh2IQ4HR81fiHAt/nv8TYCdJBWBsAH3hsA/uHAxoiL+hvSBFJOVBbaZvhuE9P2CMESR1JFYXdQUIVDiROhFxABTrqmEgcyYJjUoVHgzeYGBGJLIE9AfYQI+aOJN87tnDiXjFE4wpOiS5MiWYA2BKhpX0Y8zZGsymJKJJouSZcwIAY+vC2D0xvgZxpzEQ6eNXhg9KirEXLBBmYOELw08gJJj5hpJ+ICCQfuHHOOLH9wRpPGQEaCfEm4WJydgLn6fnjthWfznARGMgJiXhagS7zAU65icISECJA1wLHJOgPKCduKLI3EjWQ3KJuwFsXUqKFypJZ5JFJOxPgKuhG/685OP4nJVx8o+124tyDxSGCMRC+SNLxKELKBleJPwlGEChFoV0wjZLBiFwg2xJAHtY0QFaESeBi0SZCQpswBi079y669rCo8GgAdJjfnNYVJMo80SVwpqpIIpOxHnxk2I+xwJOLJWEUgp8wPyo3S1lJYZMMheFPVJfYKopgJJopldnGgIJIciDFKXG/bhYqDIkzJSqAIBfrQ4iSeBIpbWDIp2YJdJNfi3gQTCQpKFOQgaFLzgGFKwps+JwpeFIopRFJRYMlPQgclMSE+FPr8jfi4p8aT9RtFIEcziKux1FK7x7xM0ewFXtO0wJ+J1JBexfxI5JTmG0xWEPMsQ5L24/JzGQ0hJy4pkJdAEYPOBLKLKobvmcWdmKwulGKKSNBIjiw7WCpeuV+R7uNHuuHycRJUK64Td0Mm9gwDAVeAuQO4DDIP7nrCqEFHBI6yTBwzEq2bsJ46TgkU8EYG8kZx25+krTrUMqy7k7MOhhK0KuhZIE+h30MKKagE9hvCCPAMaCGpgEHoKyKPTB6oEzBkKJrRDDhJRxuK4gB0L7kTIE2arHyB+dBUdcwxxUmbsKxgIdysYRjH6WwzSlQ75PQm3TRBYKRWAmtSlkhasKAp80LcsBkMyMqSC96yAFAujRP6KC9TBJCxywGL+Puk5KN8ALTzvOxHWxRG6NfJBXHK0yY1WpNujqwwjzxmlyN8Rb8mpwLTwqpuKgH4zhB5R54PmgQWUsYsTTxEINn4Wy43mOQBzXwy1MBUotWag0QA+sMwHkQSF05cp0OX8yzTEQblBEoshGMR/ijxQBdFMJYLRXJOLlQgfJgExXXGlR1eEZBbsOMItRUdK79FoMV11xuuW2osOnEwoGkmBpxRCy+bSj8+VQGwIOKObiS9xYKg2OO+w2KPaSxPY+0uzXOs7xsYAI3qwAfWB+DWVWJvFKQma52DRYNNLW4DBGhUUhbRGsBdYA5z/oVfwbK3EFFyCPD/obSlfUieyMANtNPxSE2txzlJh+QhzcpR0NexVhR8pb53whWtDlWdtTjaieNLW8qLdcc6Gio6408gc+FTx4SOquM1z0qsmPnuekmS+OMAqYmGAwYYN1FqU0J6AGX1MxWmD5mj12RaA51LSlSTjxFrFyk8IBQUVS2sAFNi3gNTjVOchiqOFJR2hEtzVp4gA1pG6MAJ9kCpqAuBCs9tKw+dWTCeUOESJmHR7Qo6BpJB3w5RO9PbgQaxsweoEIQfmIdxGVOPAvUD/O/dIQpneWTG3OmRpdX0cQa50pAnO2godnQdghsIKIpKD/gmEABYjpQvkfiGNyUpFOcmamZpwhHFC57wVQdDiPM0tmLx6oB/Br1Kk8e4MdsZTCqx6gVdgqnELCR4PssZFigh/hlbuWyzmGRSPxxZ1BKR2wF0xsCgmSMmPFhsh2ix/dMT4E5O1hCqBCRKeJcxhVz6xhCgGxVQPmJJ3xThNJDGx9WgOy+EKtpdyXsp1jkcpEdMyokAFYGNEJrxveEukJcLQ4VSybxM+MiAc+LrKi2XIGubCSuq0DpQ7jnhAjZWpAWjIDYzmDA8Q5RBu9VlB6RsGpeNYBIGYgA8uYgGb0nLVDp34HGgEf3toSDyvxNiOexAUPsR6GJcZo0BTMJfQ8Z7aWCJNRwoZSBKA8pwKJAfD0xGjoFXI65CIKvUHD6Zll7pmKCnu7SOlp/iDvp0FhAEqJO0I6JJxx9/E/Gr/A0xewEf62OA2AJSATcyT2xcXJD2xYQH8AtXzo05oCExid3twomNJ6t1HXQuVULIzUBAGLJFiknZJN+7mAOecj0QBdsW5UDcxAaWbDZx2UR74EtxhQ9gDQA+ODn8eDPnpBjGdqotD8gGsOEuwcQbI+sM2QGOGhAU9y2ymEEhJCqBapz0R0+wcwyZbriQkpmIOw20DShjoCnukEhwuBNDO41YlGZhYgcss+G2gytIOIA9MpsRsDNROzAap1zKXB79gYsB4MpxFhmPBM/mxpynzngbED3ckTJrmiUzfxuC0kJOY0RCBmKvACFOSoLzwaZCfV2J3oUSZbriaGUMAJg8QFfhaugv0Y32XAwjg6JvgOyBCqDbaeMHBAMHlvwYHlHO7GmwADhFFyhFElg7MEM8GyKrQg9IGhthMEczUGPeoLnQBwjnmO+Zkw6hzN9UqLG5p24WhGNKV5RB0CZ8soF7wchiME/AAtiCOMAQMKDni48TrJSeOBQtyEYukYVRMZ3CluwR0lZECA4ZrcVeOutPdRHBUWJ/DO9RsfyzhS2M2Q/bmsyATI3AQTI5B4mC1SiIPHxsAGiGvnUoAq6zYA99x74ljJqAjVnbx8XhTZLzJX47MBbxajOu0NxII4rwg3mcgnNeTwQlgtAFqAebJzZOMELZhPCK8sbHZgI+OrZMbLrZVmGoaJ4lxKRumeJnwnWxB9JBYW2Kq8O2NMxrbO7eRbLaAV2Lux++Mvx0dO8ZN+LmB/xMI+U7LaAhlw2ptcX8pLnRd2BGIWekmNq26dMfM9WNYZpsMLp5sJOeL5xNRCj1NZxdND68MLV8V3GjCBZIx04CgaYCkHoMGcT8gV7LxQDBQXBTRP+xMSMhJ9bWDZhhLkEizLdcZhjtUeOP4A98EJxCSEcxaJCYZXhF2Oy4J4sc828pdOMDy4qDwpR0NMSt5J1ZZT31ZwLTSZxsMZumuBg51BDRwMUIzoZTKAejAkWx8bK90QYH+2gyDqp/OBjUQuKsqSzIbIg/Ufo8uLMSfIITEerkdw+uMdU5iVH84hmdKPJIGZIMNts8Xy3aaDB7Oc+wjpawOyscCHiAakjn8w9noSS4P0JWuKMgM+n2Ylg1lx82KNhUHITx1BQLg/YgSJrF0sKSZJQsvHODiUPTRhYnLyOjWLqJX01AGvh03gOnMkwDsAYKCnMwslGGquQjKihX8x4CodgjyuQhvOsn2ZZMowTJChl8SiuP45V3EE5RDx5A/GInA5kkMSzxAw5jgn5wdsWfsSjw50WYkEg9KOoszUCY57nXZspsQNJFR0cqORPYwcvjkc6RE+Q9OIcANlIKG3TzW8ZFF2ANaNCABn3T+2OihWscCQhrn3EWiVTYyI2JoUfGHY+M3j3xK7JQCeiE8ptABQwHfGuZqyhTZfLI/WeOM7hcoBHx2Y39I3g0W2zth0MjQTmUPJNN+y0XeJkUK+JvkLnZvxKgp6GKu5DEMyov2Ot8DQjIhDCnwh+LFUamwOC22wIDAuwPQuziwOB0pCOBw7ROBnFQhgTEE9QLXN3kxJUUw8QXip4vRuBJdz7p8qJyph1P3ZjrgxiAKPKha3F6h910ski/U+pjSOzZotLppLnAhBOkP4h2IMqgMIOBaisME6wOi/MQ2isAY0G/M/LmfgswG55ck2CIUsXB54LJpI1kLSu2IOEhbVDp5WUBrer1H4eWSCMYa5zDguINsIROKjiopjC6C3TL+mCN4U/CwR0jQBLAlwk48DfyBiHFyBi2mlfB+ACHAUILoAxsV2I6gH602GCHA0AGTAKCHQ8SHOhZGDI2ySlyF5EkJBYEvK5Be1K623YEdW1YNNRWvH9GItOEWLIOlIgOw/BxxGLIRdWrQfLnXoUMC95GkJyREvKtSuUkZ5iZKooGKxpofIJRoGDHuR1PJMhD43GE91PT5aDB7BTPKMYeSPupxaz7Wtcg1JWAFqGuq1xht8jxidMHypiwDAZ1AD1AueGL5DCiE89Y1dwEvMygUvN+5ocgNB6oKlAxoNnG9MLO4C8ldA/RKwgd4NRMCQnDUSMIp8jR2jAuMOdwloNEiKSKJxtEEXeVmBQwchI9B5qP1w5SGKRNYmn5z+z1wy6mF5g/OepIngMhFfIZ58IOr5cmKb5EyhLWgzT0hS4SpclYEi809VrABkP2AMiAggxflk6yfIH5MPDbxxKD0ezgAsh0uV95ib1QwGiX/pquAwF3vUfp7SOD54cNMhKKLRRm8Dh0JlJT5aVzrUaAqzuBYLBATORLBH4NfwOxGrQmR1zGFYMtR96FfwvLkopgBIBRdYMR6aEGZBTYI+aeDOTGdagAKydKXQ1dKAyIsIExP8KSRf8K+gzHkri2yIfBU431USHPK5WpDhhqPAmKMTNgU5jxqIIkN555PKwAC7DRp2rPPBsrK2CJhl7A6bE60RIK6wEXF1A5LhgZ7BMyBpgo9QPZUAJPYK+ie0NpI/P0apY4KXJLqJ1p3DKThvDPApvrKNp73PohxiPzhm3BT+p0JGZeOOgM1VCe5xiKOM8mXeJAXIuxwXJu547xmB7lN8Zi7MembXUkF67OwIe3DQZ/+PNhMKEuBCVNPJAZ2vp/bIT42zlLpSMJyw12mORVnNqFgcLeZrdLMFMzDg2xz2iUXdPmsqrNSm6mLwFU93Wh3uFeBhRK8MurWhy09KcwoNPMEq9ImemtMbgSwtHaOvGGkhgwKgTWATqYmMnMdZMy5FByf0aWMPB6cRwZkhSxRSSgUEbSOtiXIwlMBHiDCEEFzUG1CMAlVTdWGnI+pa0gXgpSNrmKQSCuISKI5jpUCpwLJJMiIRYZJmDP4sIv9hJ7Kaep2C04DDyMFi9N8A9x3IZjmwjEr12BZRN0KJ9rTvAccGBUHWLXgH9OOFoXnW4CFOvAv4irEiSjF0C4GDALQolxF43lKkNNWOu1LSF+GhfewNBfpWF1xA79N+Y8pOpFRKF/pm6XI+1ultK3cAosjwDKQokHHkjcAaIZ4EthK5KJhgCj50B4XthJUIKK54OIIEIvNug9P0JyeLzOKAKmIefGipa0wlu+Zz2KCsQ4M730kpOxx1RiAPFxT9IuYGrEvQI3LEWyLzApPrNgG1tTXx2BwEAgXPNhwXKncOQsEAoYqae+QsyihAxkYg+LdppcOUZRsBviqJ2jF7zXDFNJHjFMTETFHdNwG2jIUEOenTFeQqU52YqwGiYv0ZroxZRxjPFCRuzwgJYqC5ZYqgAOYtykqQsukG3IuJEeFrFpjIbFDQlyFTYuOeTVHLFrXErFzJJX4gvSbxEb34ymtIcZuADTF/YqjFpYqHFjDU5a7xJzhy8K5BsmU8Zs7JsCxQtvxXlJKGIROzhA8Nzh8QvWBP3LOh04KXhdMMZFcHI+AKUKYsZPIyhccMAgDQuR5vCgmhtKPLMtMIzQvilnsfuLmhnMKoYUMJvFq0Jp4CDIjU3uALJX4sWFpUP2hrc3dgtRy2A0QDIAGb38AQ5WGQjUJmARPPCQJ0Jc4V4oEUYEp6pvoAeizSw+iL4qehgEC4Ar0P6paWC+h70N+h/0JSAgMOYlIMIi45yNiRRBFYYXgyvcMMN5Q8MO1xiMICQiLIJh4bhEEARxJhk2TBFPHUOA4IxQU20OBplMNph1MN6gKktUZTMPHJIDF4laTTFBnMIMO/SJ/A83HKOBEs4lMENfZY1PeZhk3n5NREglG5KxWSNNppWAHLIhqMAlppMUoR7AV+YrMLueoS04N4s8Fz8B5sonJPh0jhApY3Pc+Saw4yAjMkF7YrChp4v1AkUIjFttI3FgEC3FpZAdoDaMZOkIAUZq7HbeG5Q4hdulEklElrh9ZHrht/ybhx0lbF1zHbFj6Jixi8PilgEGnhpwi7hBcTHhBYoDYq8x8uw6OXY/cM/uU8NXhI8J7htYs6lLA26lYbF6lg8I7hgnk2KG8PalvOG8uo0uHR40onhDUpXhU0sok68PKcc0pGlFJ1qlcKAek5iRClZ8IYGzwgWlu0rGl9MEPhh0rklCxGGlZ0vXml3NtplvOwomFgBGU9wKF1iL3FsdKW5dCUxxr11Chz0uNiOgztG18BV5StIJFMpD4+KCkaxj9FPGCgFZMQnItaEMpFxJmJQ6VHPo5jcGUESY1XA7OgQpGOIS4MvIOelFn6A3K3h0thHMoPtlX06+nrq+qE0GBtka53gDksj4iL4z9ODAyAO/05wyIBcjniApAMIlfcA3OuYGZW5MnLB+Y02Ix9BqGpKHPI1YXywhzFm4zyxXaRBP4gJBOgo+hOQBxZERIPJLakvmMwgE9JjM3XDBaIssrBoWCDWLmOZWcwC1gwRnfCp5PU6rsKo+g9JvpnP00IZDL2gvwFDIw4FmaUYA3eGjVeEwqFs5v7MKxX1HK0RopBZeAtVl0ACDc3+gaAHHhWgmQHZgKtipFjrje4hwuAF8oGlZuqOSErCwyEXPkyQWqgggSl3jGsnyhZZh21xezN1xJrn1x0IA3oX1AYk7RPd8nRLtYhuN6Jjrn+EBZKAq3PlrAOxBz+zoH2u/HGwgjvGDAgMo8auYFJl2f0u0wXVAQHHLMg3ovjWPDP1pXPWrxiYqbcgkJ0aRV3wAFbKrZoZm6A0URKuFtHeJz0paAr0vwA70qi2wdIMA7xO+A8ICsAlbI+las1/a30oe54LC+pFzJLA4IuZYdzJRlyEv5qysErZ3kotw+TPECQHK7geDnAg78vBYldPwqEDNOFa/Ldh7SOdZlNjxBWkwBwf9CbZBcBzJrBjxJ4JLiRQYFAV7otxgECvvFkCttci4H05myH2OsuMRl48nnMdMFd5ICQmYWbMq268rQVRT2IQFsQ74OCqJZhCrOg/fzCkPzJ++kwo74CCrcwSF0+ZDzm+ZXWAQVqKxUJeRNkSRHWvIONUXBSDPfs4Fx++1wrhZ4WTuFYnMmFuai0ej3wMZMZkYV6LKVUMqFChespwV7mK1BsCoSQPzIkV/gm1lBZMUl15D1lMlXuCMhmm++5gDgNCsuFRINuFDsUQVjLPRG/+ivltQAvlKTC7g20DeZ/5GtEo5MEVgBKHIO1MOJTYEcAR9itAlSVPqnyGSV5TgWMVzX5qrrN76hVRme8tSzuXXGC0M5VehndP10Q5yPY3GMng6otgZ3RLWGbWNGAOCtuhh9R2ZV6UdZTkt4UxIJdFFFyMe6hXRpvgCmuYUt9FBQKiFcBGWJj3NtpISqCVNU1DRcjOZmJ9yDZjESHRy0vdIKCpFxLbILZY7O4oJbIMZ2bPXlmytrZ2yvbZmbNLZ+itzZ79y2VdV2xEDMkelYdJcOkjJnZPVxjpeNgXZh4rKF1ggeVK4rWBKdNimPiJk5tnKR57t2aFmdNaFWeSylBZJiavYKPuipgBVB+1rqT12wa7dM0ZqTnH5wHO2gRJTNFmjwb64MtiK6wq55IN2DAZIppJ15D4VvMWRiOjOeFOMTq56CxzltlljUBDNIJKoMJhlsBTZ5Jm36GKvEJjNmaVPZ1Auyiv7cw9NEuY31aoloptaVow0G7cu1oa5y/yTlMs5rit362zLMxWsD3cmEiEYVYpLen4EqSAt09AJhPUkiCgBZcvP5FhC2RF7zWBZiMH+K7eGagD0GEcoplMSQyomY5jIqQqbOjxkQC1VWAzdu8MMxV2OG2F15CSJ2WIn0+fh15TfxZFoKrZFozw5FOMuCAFtkoymjwFF1EGWZJnPbwv1go5h0G2ysuK1RfACQ5IdA7pCxmMMHHmQZKHONhvQqrAzJMqxmDNK6+qlxJYUmmqKkUX6cyhi560FZZO2AD+L8riZuCsecxIGNe9OMXaD51Hoio1CFXDLyBq9wWJk3KT0E7ETFXyq1U+EJDo58qBwsYocirYrkZECUvuSbBTF7cAXFvJznVzYrZwFYqDFQ+ORAtYp0ZxYoaEk6sQMw4pbFu6tilYsDZVc+B7Fvbz7Fm6voO26sXVlYs7FBV27Fc0t7FqYEbWW6u+VI4oTFe6rFg44udVU4vbewKVnFdYvnFx6sfVh9jLF2QttpMaOcRLlMexd3P3FbyrdFHyqEYiGpC5a0m+5sUMwYQONglVS3fFwKpJiAvIecOLP+0uzFXy5Fm4AC5SJ+/NLCkePO+IXg3o1FaUMloWAtAEuQVAkEuEcfP2gAnYkM4k21oArmlwAfOCcA4gDHos7E8QNnDzIHApSalUE+Yckl1BbFiRQl/KNlpZEO0hK2GFXeWzRR7GiU/0pKh/dK64lfH7JKwTF4IkhU1p5PUAGkqPqEl1hRmDAFUR6WLRRyPBQd0g+wew0RhkmoQgzEERwnVTuBQKMheaRD6AAtPtADmprCcEtuBYiAqUijUWyhQDxwZC3OBqQtrILwVY1RyPY1uyPD6sMOBVRyLFYRNFE4IKDcsnEpOUWVIVRf1Sy+CumnlK93LxkQv9Fp+EwhMUtrxumrWk2GrjRBEqTFlenyl7aMMwtwJzRXGLml0Il3lCGp2YZiKDRB+Mmc7xLT2UdOeVqGqOhUjUm1JcNXZCXxkwSX0fl+DlS+xFlXSBUnLMIB2oJUmtuqHnif2cfQggc03Jul8p/lm9iXFg4qnV0mtAIA4rDFjyvfWrhV/VN2ohSp6q9SwaPsElDPfQ+zGRY1CldUSYowq/1P7JbZJTaRNSs8awtOg6MGJpIvl4ppexNseqO+4lRKvhCQIoJHd1RhGXLueJwpggjfRGK4oHjqt8Nj8e2oQg4VXbwriOGVQ2O9Zo6ppIAODWJ8OujSxTJkQY+y0ogO36+Tu3O1HMEu1IYuXFr2uFl5NyfV3yu58eFUB1lsyamjlPtp40C32JAHu15tK2UN8pQetiPQ1CwJ8pxtOBo92rHODBQ6WisoxcErUxB04MCseY39aXfLkm7hGKpKtl7aFYBRpbd2z+IfT7C4fTJ1pWtuRjwJqI5io9B/ArH+FaTDBYVOmgXmKcIr+PYsRCGIFGYM3gs1Kgy81OWoblihpJOL4l3VP2u2dVJQg1NE5ZhiJAY1LQRVAH5BTFgXppsRIhcfUglaZOKUhxJ4RqMTHOnEpeeiqpTsBXE5FRf1t0rqjZ+B1IuRBMxBxhVwRpLTzapvupj1y8LWqlkv9wBKND1EBh/ZDQNnp1gucWqWS7a6YEM+OIR6RTKFiZACPqasZFjU3QB2pcTTXISAAp1etKp1BtOiFDWp4Ka53V1S6p5F9MHF1wNAVAJMF31V2oYAsuvSlC6s9psbDaUd6vrFIjOoIqut2Ae+pnVttKcpkurP13OoJAl+t4cJ8sPxR+u7wn+uBoNyV/18upC+iurjpd3zgJUqpANnhWihGwIUxuctyp5XX2BywS7OdQEZFy3SI6sNGhAIdUk+jQvt1/OMb1wehI5xdgx5DaUCMNVJz1fexUFRf2T8vjWnBxutLBHLOR2l1Ijut4weUaCJlB91KHAj1INgL/PtZnusQFEYK8xRnQDgJf0wgRAqmpqRBD1vaPD1aqKnBFiuIlPZ38lUt3r6ddxNKqeuT18AFT1sgPT188B9hlXNf2rtHz1/tNv1xeqck82D0IgEPQFQNOvImtMdpxkghpkao8A3GheaiqFK12Bpd13IqPa7VPnKnVIAp4dxF+5RE4+p1L4NAYK71VMLnJ8htVRHQMQ62wuagW3AnkniG2poxx8R0ozn1Ex15p2oD1ZAqKBYNVOckmILdWtVJPAS8iD+ETOeiAdzyO9qO6VFOII8fw14cdassFxeBgwP1F6gHHjsFnvlKlVwIQgg9nRQOsEclzdyBcsqKC1dUqL1kGNBhHhgLJa21xMML2Sxa+q9Zki031AYuqlTWuEY0qs8Kb+rDpH+tP1cBoiIYBrjFl6vWNK6tdebAB540GuLKUuuNSF6tHFgGoDpqMXv1uKG/VO+v2NjxTuVrjLtpx+tT2i2qeVrlNm1ryvm17+ol1o0ykwS3NW1u7LMQxFlu6+JKqNsBpf15+rOmtdQcCUupl1+AAtpj+Rk41xs8KlGRm82JoON6JsvMxnl/20V1TpY+2ZVvgBcEYl3txOSu+N9OuR18QJgyYyUFgGOqpWUmioZ5gwB5a+DCa1FFMqqMyfpI9OuZ2tz2S9IJBYVSEWNs8o31XPQV8x3TWJbMAl14NUZ16JR5M8Jul1iJt+SqJvP1v+spOXpVlNvFPlNdJvEMBOmVNsXlVNX+Qay+Jt+A2prF1ttN1VD2A6m02v+NX0teVUBsGg7xLtNYkBQOOGMy+QLNu6owwFWggi08XcSO1q2Ppg0bOu0MHlixSzzzejewgWpbKVQSJq2S/U0Q80Zrixiuj7JXMAY+dcUAV0XUFAwMxnpUOvraeAsKcp+I0AHpo0oeyWR24pugo/rIB68mEKArJsJcfBiEJMrGpSRyBCNbAArBAIWzNyyvswV4FhIb1BhNpOL0gfDxgMUZpzeD2BjNGxhxgewA9ALIAi57FHLN9Jqq1cxIiFc8pgGl8OS1QZpRmQ3CA59KGB0MbMjNRxNTNR7gTm8Zp2cEKTlN5Zo0AOew+NgTPLNY0HKJgrGJAjqEGMjppQ1zpo8pgUPqwlqD6lXUMMqSVwdwkVTa65Zoixuhj1FrRu/x1D1/xbXX0JPZwgJviigJukn/l4TMpSgHN7NpmpyJ1eRJ+R6SbpxRQ7k4wARYCzM6QQbloxSzO8VjUiQ5qRv/JwAzXsHSC6QV2ihFEln1cKcT3BlnO2gsRVJpFPxDUeFLrVbEEoJ4xrixZVCoxORHeAdBJFADBJAJicAQtRZATuukjQ+31FUOnBP0QJsDEJIXWxwOVKvkpNJ2Fd6Tt+HzWfgmhJrJOhNEiehO11S4QiekBjYcoFtqJZvwAtriAdwGlRUC1GLUCDxHpFGGvkxdvVhYTZG3B8dxd21rPYMnZOo5KMKrMwsKdKoSOPZoOP4gfqqEVWd1+aWsvHkp9MmAhRKCx5H1Y6buNH6tWPqy/blrOYbjn87eGuFBZOstWfRD0tlpoAgFpTsOhC/6zlsZxefF1AM5MUEjTMx2w9kytcnIlNa5qlNG5oXlgGvDNOMDjZJP0TZ21SG1YdIfNT5o0AL5owA/yQaiq+KvVKbPEpRsA4RSUuGtSz0fNGxMSgY1slgE1pGi01vWNKbO5Q6bM+A2CXdNy1tGt41smtfcSD49xtWt/gBOJ/GWcVVV3NhVxOPRi1s+NI1qutz5o2tk1vg1S1onNnptGtfxo/N6sxdNP0or2NoXSxvaFk+v1MGORVsix3+JNhTeouxVVLDgjBNAJXgiHQTJ18t4wBQtP1kqNOZs5Wb+NRx1HKf01TND+ZTCFAjX0gZXhGItDFt5JWARRlFFu1R9RsqUvXA4tmHRSp4DGCMqzKVVVKlTA0Nt0M7YXzJolpaA4lvHwyNuGALBJfCx73cFYITGeu4CJW+7i5VGlqeBWlsQlgTzCmUiuMIBluCAwsCMt6tpy5xMpNVg+RM1rYFYcPNpqJvWLTl2dSLgTlrKGIPK9CBXO/yOQgkufRB8JBcvoSjlrCZbXVMSrRNIKlKlmKIHMAEHHIyJ8NoAJ0Vtd1EooCN0uWyJditB1gWIsm/uHGJJUN5tVmMYiugo2ymKvXpPWMfgbVuHVtWup14yvY+QJu+tfz1+tb1syo2xPMOCytnm8OkC0q2Pi8PVs+AfVvlAA1ubeiaPPNYGGrZHCK7YzmAgg+A1btBjL2tndtzYpjIbZRxI7sN1q/WaqnOJ76uquj1r2J2yruJd5rDZr1uPNP1tqq+dXANyGLQ1rppxSoNsYxCTMmQeHXmwUNrNtMNs+Q5BWCKrKLMteoKYsMlose8pVFtU5jExslpd20BNoQFzjIZz8vQQCOW6JAxCvZTzPoAJFt6QZFos5LvUK6o7TZtJ4IosT+MoYzUHslOsuGkpyyktuAHSwvEw72NvSdlIlpqkukjRYucCQKcbMWoBkjUUmRwft+BE8QMlutsmcR/cvE3YBJhuuYOJMgAJDvP5/EAZOhjytJBfBMloZH3BpPJaRmLIy6+h2IcOzEt80QPXOHgEYdxluYdpKFtsCFoMOt+ldh1lo7GS8FLsFhGNVkVtCwCFozVVrMttT4Fk6eEB0QqrL0OqgkxZGtrpgJDrtZF/AnoavnriUoFguYkGhgA+A98XRMMVBThTNq9qnNNShkSNZMboQjragJUPIdaujlV4NCZpCdwsJ+MqeQEhu9NB9DYc3ttNBlKmiJZ0nQWkwrCtNDwitzetDtotMaaHVMjtUEtT6pnmippHnoKsLII8NRPMJSWNsYK5s9ZkpuWNXPQEZtZuJSD9pQdLuzWBWrHjRFL1ylsim0O2YFoAzcNjYFAhVEZaPa8wjtFgAQCQdVkIxtsbPPhNJCbWmcIIyGJPHNxdrXtY9s6uq1Wcs52JnteK0MiUzuvhAHKcdlMjrtB5uu0jdoTZl/VOVBjLmt7cAWtJzuk8A9ozZX1s+N7jJvecgiCcHjOQ13xIBNX5r8ZYhQ9tPpsdA2zsiJnoHo+a6CUpxmKQkyctMxhUKFV04GMOrbTXIB9vAhUCnxZcRnIVMsQ4ur4Ls1qoCFggpEEEPJKAaIuIBaUktCI+FNpZmcESg8nW2urAHmOAzNuYUwAYA8Zh788zOmNmCu4lQLuUxbAFh5D3wssINzZ8AsFRZ3TUE49SmdFjNpO182C5Yw5IxpkFtqY3NDR1S+HtGA6o9Z4Qpzt65o1GXVqvVn7D7ZYaukAg7JIGhkJHZVyuVeubHbZQ1rudwTIed8ICed42tjo7xPudanJzeG9oneW9uBtQRKgMOJRxt2UXZOt22xJR9qNIJ9uq43+JsKikthoslzogT+GpowOJUdhV3BdBZMqgR7DYdI/PWRPkolsRr2qkN0PIlGfnCxX9E4dLVgzwnvjSwAAA/AhI3g82gNIhwLnB7mv7hstfDCbAfyBsXNeap0HXFR9mBbx6FrBjhYzT2qPSBn/EjC/zrza3cH7MYMEzpNit/0NgMexPzFWqdFTs6RpCBabBZ0a9QPYLdEJsjFVunBNmkxAdmITdQLQFAOwX4YyeTG6GmJ2bWIAXzHFf9UeAJQBNjrYR17eU75XTVrFXQWVlXesbP2Pl9x7Wdj8QIdbbaVa61JOa6ooJa7jXUkBgmba6ihffKPnfUrXwDiKPEdcyFzIodYxA84fEaB7Rkck9YQcJBRDW+g+QaWdzBgcx/BWsiOoVjbsccgSlBIgIy8uzpXLIATU5qACJmK1rs5DOBt0qTCCJbjjC7DdTuDXdT9JYBTgiIJozuOZQt0dhgZkdlzRsIuAS7u0ieYuGjq7Zlqa5qvyo9WZISkisjLOZByXNSZMbJXDQAcJWiV7LEa1gRh8gLejzBHXJzmgJeSxPYUEEZeF5YjQIawwSiNpqZvBX8PDZwdGrBkMvaBVPeszINRPVJvgD9rAPGZCUXiRiURHq0acuBVcWdwhaU/pmFTGobwQ5rZ8NO0IMhgB5gOlj1ZXn8j0Lp7cYbuBJ+BSt1tqegCUcqobmuTALBeFRBla0bh9doBbBdO7s3bwoajXR0NPAK7K8AlM1ome6h1Re6OrUq7trfIyYsZ2zXDd2yn3WHT7nV+6I2ZlFKsomKSPdsajXRyCxoE17aQOS8DWC+rANUmjZIamj3EKWioNTIzcxYBretVUqM0ZVLjjVV7AcNtzJPZMZZvTSRWvYBq5PdWiw9Qr1ieB+6uvT16QmYLIspe00TjYoy20f07O0Xcar1d2i+9X2inGafK9vbSAHTS0kfIYUKXlfzDJlQ17jXTnsYMKhiITX34NtZkxgxNtrpUjey2LJ65JpodrZBNIRqhDBZjgPTs+9r7UMGCWbXGRoB3GfTqRKdqQxKRebfkpv4jzU3i8Upq6ToG9rHnSLiDpiR6Gsgd7CvuyatKDTk+Hs/89sBnQz/g0cr/GnlN0J/bt+cAcg+jBghzQ2bdgL1QIVDWaUdUyb6zUuh9kGybsde4Y9WghQPaV2aJuBeITkK7LIXLDrSzej7A+rYQlQK4klTeUzBQNgQe0HL4vQOz7dMZi6FzRM9NjjPAaCX6a3DNnayvVU6NzTKaFKITqOQC2aWdUGAUvKJTyLlmTiAgh5Y2ISyifZchyfSNqnER/0tYI/rrqI96fjUawshWuLn3ca7+KS87buZ+aShe8qUfYEz7nfxSzNF9SP8MJdtndCSoiSrrDomr48agydjyTQTyRf4gdELxbZrlJLOha67YKUx41ioIIcSYHpAncCKzyWq4RLMSt7fAyTmYpSSUWHSjljm106Se3Ae/c2QmSavTWSYpbMYW6Lp0q2giSebLMpNbayXAKTPwkKThLiKTsmWgxrfIdFJSRCV/oBS4OKbhpFSUYKJ5CqTswYf7SKFqT+NllAMfH2R8dDx084F/ao/PbavZV6AiaLsA3an4g+elCFyRa75FTDb5IgOiE1hVGTw1Pf67SW2qB/aCiPATEirSTZg9KseT7Fq2q+AHpTK/K6TIAO6SmwA/5axj6TeXP6ThEYGS4fPVaGWDENSYRoqpEtblmiqh9mXY+MecCpCPxtBDoksmTFfKmSs/cTwMyZ76EzWO6buntqYJZ2TN/Pn4yyev6KyZZbQtQpgwMNYgTomOb3SFiTdlLTgiZf9NiFJ8Seydj0MzQOSMdNgRcOaOS1fOX7JyWVj7WbYMFLpQBX/IwZlyZqybYR3ctRf+CTFTKN+QiRxSBcUy7CWRaS/bqTjIGLDkauX6i8Y4hQ/s+yRiBPdMhOYwV4IcVP7AwG2sAKMaSUmQ3WS8d6uquaFXeV6CygIzC7Z16nvRn70NcZzK7Zg11UpXj9ib35C9Wq5q2cpTkKbtJUKR9JEKdEBMKaoyV+DpTyKWZSvSW0BiKVUHswRRS7LhWiWKWm02KaqSL/Ub82tTRD60RfczvbIojYJtUZqgWiw2MehYroPwunfcScg+wG1Al77eoBJTjgFJTkIIZSvAMZSHkApSKgwUHVKREYSg5pSKgysG1g42gUA3UGDKQ0GTKU0Hd5hH6xoLgBagEbpagD+73vcn6MNa9ygPZQxI8QsgqJPUAf5ZFx+jfqAogNABQYGABuNJTYELRprnElxKptDCi7wRG6FYNAAvg7UBk4GJjwfZeaLwPzheHFbqV+FddOgTswi9NNC/xXjAZJMh5agPawAAdrJsgLCcWgESGSQxoBdZJkByDIzDZzd1TX/WzaQCCqiUNGtxfOkE12whdhYIEiH9tfC10ebCitwPxcQUAR9mAEFrUQR5jfYE1S2II6s80cvCuVN0d0YVsBQQ1JqcrcizHXMVr8iRiGqQSFqIcLrKD3UPVdgNeTp6on8kvWpVe/M6B6AMoY/BO/ZAdv8RzQJatXmPR0pibK7ogxU72rXb6NRlM6HYYxFdMJ+wPgzcGKgFWzL+fV6kg+NAbg3cG33fZRx9QNy+Ng8G3nU8HD9aSSjPm9d/ahpQQbdjZQof1zUw+bLcwAitmHFS4i6sK8oiDEQZgHhrXqCUSrwLTVUwEU0ZsOgs/hubLqcNBbscIMD+8DDKULLWTwZibYvGJV5vQREBHcfNBhLY0LqrYMh72bu7rQ6IB32asjukAJqV+RaiUGDySYLkshK/qS4MQ24iMLT/AXxJPRxRjIDRwJY0wNvJrR0FvgPwd/pRNQUV6bM/ArAEhAxQGp1sPd8JyQFsQ/MR7oOjS40OPLuAbHkj7UpkiLVHeZbbJUdC83DZinzmXpfcQHrK+Rzth8GwyEbTBZorc+crBPwsr2VZJZOkzSwGOz5zJVTEyGNgQ4bX0L08f7A/hroijVbcCW9egLfmvezqhNCBjJt0oeSQgBTgG+H4HcGBilUKdbSXqSPbE+GMqJ/xSXAeH3bq3qPwQ7wcSCmItlnwA9wyjtnmOngKUT7iKzO1AmmaRUFIC7C0dkxGEA/26QhdX1QLcvqwFK6o83IxrMubFbMneEU8BbLLysck7g7XULY7WqpvMf7qQLd670RlgyMRabEvCUsr6pGC4JIzP1E7Vn1nA5d9XA4yxZAX60q6ToFqJByGcAoU9IFJjsWqYddf7ItRd7RT8JigCQ/iACQNYZrzDlFJiDCEiBfyWayoUr4AJ9I/hVw9i5hHBtDqMmaGgyqsMwKGixfcRM0JWHBdx3WHBuCSKUYAGWgy/IJC8UNaVkmSWorYTuE5Eti4tuNag4WmdwBoSmcxfn2qM7iuJvXXWZkGL0d+I/4sMPoMrTRWwAwAPoTusQHc6jYV7SFXwAKub3KrNXsBNMCRVbSOKNfnUBzqLY6AkObszswSV7E4bEGvQ/EGJlW6aUw3th4w56RUMStyCcUBzn4HzUdksKo18U4atUiO4U+kfDZAefVH/elcuYB0aHXMyt77lGc2I6cIqlcoyziQoolNVZgV5vdKh2IWg2I52BkRGAGM3koALjZc7nVfkHj6Pfd1NWPRZ7QMNYaLPa7LjmGbPnm4vbVlylZWdzSUDn8aVm0Ejo+VTpo2RZ9CQZHjCCBGKzH1GHAOL9jHWFjV7WBb7RtkLro9qRwIZ6EpAAmGk/QeKMNcBaw4GTHLVasQCw2SAc+iWGXvuWGAcfBd0IDlGgDbBgaJvnS1YKbdQgK5zPjNAB+XK/hIVhsRE4A1UEULuB4gDC7JgMAQVhYzlGDChZ89W3K4XZjtPEMzZ8UfbKUZcQQj2cZGURf7A7RQ99YwIIkWwpjyucSHHACX2HsRXKaOI9i5Y1as1FpsPAuLXzLiDQ+KHnLTt29c/A5I/wdqFAAVFY3UAZQ1Qa1CsUjxo4Wt+o2CHoBNRZB+jggRLMcFVkM+GHnDRHYAHRH9BCRHdI7j5gXCCEF4Gds3EgUU7CCIDIGh+CJ6IDGTDOZIHQyNSVAKIaOY9BNZI53GVxgwCe1m5YrPp84zso0tT0AlCy0C6Br2cI5rw6sgZ9YPHlSBvB78JXGjwyiDwY9J4uuM7DdI0iRXw0DG5moKBSXI5aLI5gZ+Y/nVKHn1QFbSzGr7QUSezn2H7I1laU7bdCJQIBLmraiyFIy4G84KXBUiHAYEUKpzf3PBZ9AWBlrEPSBwLkhzNcQh9Fplw7I46MMgmnm4WqbtHezV7wgUfk0RFfQJJhW0ouPdB6gqQhy3LAC5EAZfGh8gorOvAEK5wylHugPOZormhan9GSo0zEGDNht/B1o5LFGOQ+ZLEn2RQo0yBQ8YYQ/5MONYo78Fy7przqhYbsEuSwBVkAljpwDzTcOeeCOcTohmbMKNAqVzHDwwMi+Y/M6BYxnScSt3hmkK2VK8AixNoHRqgKI85nIJuo88X6VUCgV6N+UehYEzWEbfRIsJuSsbg1N6iZvLGHUwxRJy4+LGFuctq1gGkHUcAXCgjk9G6YHLHBuTkanDaTRgOjypUYRcctUsH9YotNKJkOU5QMnBB77ggV/fYZD5rUcrrlTEpkrvF4vo8C4fo7GyEoPiAAYyGUOPCNSqXKDGXxMU5L431qiY3gBZ7ciJYY68J4Y5qIZREjHG44aBUY7aT0Y/skSrljHBejjGk2cl58YxPb+jFDHf0ehtqcEkmxTNn87/fNgnBgyw8fEgnPRTb8zuaH618WLrhY0cT7VKAN/ra87JY0rrMwyFC2ulsnPfoXH+w9/1EtMXZSwxVQ1YzFDKwyThqw9rHaw+J0EnXrGlHVeBXORh7oHX4hTNQarrXH2hfcd6olMT/GDbfxBphdQQ0nS3G241G0dIxHazBksFYfVb4G4/kntQQ853I14hH49smuI/DDVykaVv8bnHufCn0j47ICQqIyVeFOeHuxpeG6YPvHbw5V0vJqhh2yHTAx4xx4J4ys1NjnZqMGH7C+AB2HwkHLlB+u1Bp4z7rk9akRbVtSmq4wbBxabd75UCELcQO7HduMXGwsUoBpE01GSCnrbUcbbaUmlnr2fpgijOsXgajtrHQGWAwL7QXTfw7gLyOaSbxsbhNnIwZykUYRGEebHZClYZNTVriA83FimgY1XRyXeAUF47Da9Yyk6EbRh6biLDQQ/ujarIykRi0m9H/YzhG7aN7iEU5JGCpNImuNezalaIvzEoAHdIgE5BulMJ7AJVqA6aEvyrQ/Pw8UhIK5lKrjSE0eHACfxrOxKknrfFBdVBl200zEVzjoEWNRExOJYCQJiiE0B5X5buA0nfjHY0GZH0+N5ImBEwmwuhWkbw6ehhI3HA1U+fGJkTynD46LGBI/SRL3GYZnmNlGscaVH0XZFGg7nohJAMVH/EHlGzcCrB/LT3wbHePBWo6uSz6fnr3AtKBIpuNhgIvunKgGtx/lL4C4RTNG5o7dtDUBP4iztSmHWTURCbvTGOgSdGy8X4nyWhuaEg49zLkwgYsabMqZMA9HBlQknw8BaMX0ExCKvJ0nvo3uG/o00mvNsKngY+0nkvGDHxkxDGdmL0mjiRUoBk5lwBIdXodpfcIxk1SkagJMnjydMnMY33bh0hVcEKXjHW0ysmZAmsm1VPfdlfkSH56EmwQYztUIoFZA3xDgwQkuVpeOp5Bh2n3o13fKAVAKlxzIGFBDACpnnEEboIruOgXoKcIU+qEApIAYAVM/exj2NkBngC8BRAJrILgC5mXgMygAAJw5ALaAXAWoDeZ4zgPsbICZAEgAXAWgDaye9gCAXWR1oWzMmZ/0JmZ9xyMgSzNdeOmD6AIAA== -->\n\n<!-- internal state end -->\n<!-- finishing_touch_checkbox_start -->\n\n<details open=\"true\">\n<summary>\u2728 Finishing Touches</summary>\n\n- [ ] <!-- {\"checkboxId\": \"7962f53c-55bc-4827-bfbf-6a18da830691\"} --> \ud83d\udcdd Generate Docstrings\n\n</details>\n\n<!-- finishing_touch_checkbox_end -->\n<!-- tips_start -->\n\n---\n\n\n\n<details>\n<summary>\ud83e\udea7 Tips</summary>\n\n### Chat\n\nThere are 3 ways to chat with [CodeRabbit](https://coderabbit.ai?utm_source=oss&utm_medium=github&utm_campaign=srbhr/Resume-Matcher&utm_content=354):\n\n- Review comments: Directly reply to a review comment made by CodeRabbit. Example:\n  - `I pushed a fix in commit <commit_id>, please review it.`\n  - `Generate unit testing code for this file.`\n  - `Open a follow-up GitHub issue for this discussion.`\n- Files and specific lines of code (under the \"Files changed\" tab): Tag `@coderabbitai` in a new review comment at the desired location with your query. Examples:\n  - `@coderabbitai generate unit testing code for this file.`\n  -\t`@coderabbitai modularize this function.`\n- PR comments: Tag `@coderabbitai` in a new PR comment to ask questions about the PR branch. For the best results, please provide a very specific query, as very limited context is provided in this mode. Examples:\n  - `@coderabbitai gather interesting stats about this repository and render them as a table. Additionally, render a pie chart showing the language distribution in the codebase.`\n  - `@coderabbitai read src/utils.ts and generate unit testing code.`\n  - `@coderabbitai read the files in the src/scheduler package and generate a class diagram using mermaid and a README in the markdown format.`\n  - `@coderabbitai help me debug CodeRabbit configuration file.`\n\nNote: Be mindful of the bot's finite context window. It's strongly recommended to break down tasks such as reading entire modules into smaller chunks. For a focused discussion, use review comments to chat about specific files and their changes, instead of using the PR comments.\n\n### CodeRabbit Commands (Invoked using PR comments)\n\n- `@coderabbitai pause` to pause the reviews on a PR.\n- `@coderabbitai resume` to resume the paused reviews.\n- `@coderabbitai review` to trigger an incremental review. This is useful when automatic reviews are disabled for the repository.\n- `@coderabbitai full review` to do a full review from scratch and review all the files again.\n- `@coderabbitai summary` to regenerate the summary of the PR.\n- `@coderabbitai generate docstrings` to [generate docstrings](https://docs.coderabbit.ai/finishing-touches/docstrings) for this PR.\n- `@coderabbitai generate sequence diagram` to generate a sequence diagram of the changes in this PR.\n- `@coderabbitai resolve` resolve all the CodeRabbit review comments.\n- `@coderabbitai configuration` to show the current CodeRabbit configuration for the repository.\n- `@coderabbitai help` to get help.\n\n### Other keywords and placeholders\n\n- Add `@coderabbitai ignore` anywhere in the PR description to prevent this PR from being reviewed.\n- Add `@coderabbitai summary` to generate the high-level summary at a specific location in the PR description.\n- Add `@coderabbitai` anywhere in the PR title to generate the title automatically.\n\n### CodeRabbit Configuration File (`.coderabbit.yaml`)\n\n- You can programmatically configure CodeRabbit by adding a `.coderabbit.yaml` file to the root of your repository.\n- Please see the [configuration documentation](https://docs.coderabbit.ai/guides/configure-coderabbit) for more information.\n- If your editor has YAML language server enabled, you can add the path at the top of this file to enable auto-completion and validation: `# yaml-language-server: $schema=https://coderabbit.ai/integrations/schema.v2.json`\n\n### Documentation and Community\n\n- Visit our [Documentation](https://docs.coderabbit.ai) for detailed information on how to use CodeRabbit.\n- Join our [Discord Community](http://discord.gg/coderabbit) to get help, request features, and share feedback.\n- Follow us on [X/Twitter](https://twitter.com/coderabbitai) for updates and announcements.\n\n</details>\n\n<!-- tips_end -->"
        }
      ],
      "relationships": [
        {
          "objectId": "coderabbitai[bot]",
          "qualifier": "commented-by"
        },
        {
          "objectId": "354",
          "qualifier": "on"
        }
      ],
      "id": "IC_kwDODyNbyM6pB0tS"
    },
    {
      "type": "comment_review",
      "time": "2025-04-28T16:41:33Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "coderabbitai[bot]",
          "qualifier": "commented-by"
        },
        {
          "objectId": "354",
          "qualifier": "for-pull-request"
        }
      ],
      "id": "2799980074"
    },
    {
      "type": "merge_pull_request",
      "time": "2025-04-28T17:50:32Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "354",
          "qualifier": "merged-on-pull_request"
        }
      ],
      "id": "ME_lADODyNbyM60VZkOzwAAAAQPdQH0"
    },
    {
      "type": "close_pull_request",
      "time": "2025-04-28T17:50:33Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "354",
          "qualifier": "closed-on-pull_request"
        }
      ],
      "id": "CE_lADODyNbyM60VZkOzwAAAAQPdQIa"
    },
    {
      "type": "commit",
      "time": "2025-04-28T15:13:55Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "authored-by"
        },
        {
          "objectId": "cb963e61d6f17f72f928267632be78933e29c039",
          "qualifier": "sha"
        },
        {
          "objectId": "353",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKGNiOTYzZTYxZDZmMTdmNzJmOTI4MjY3NjMyYmU3ODkzM2UyOWMwMzk"
    },
    {
      "type": "comment_pull_request",
      "time": "2025-04-28T15:14:54Z",
      "attributes": [
        {
          "name": "comment",
          "value": "<!-- This is an auto-generated comment: summarize by coderabbit.ai -->\n<!-- walkthrough_start -->\n\n## Walkthrough\n\nThis change represents a full-scale rewrite and restructuring of the Resume Matcher project. The legacy codebase, which was primarily based on Streamlit apps, various scripts, and traditional NLP pipelines (spaCy, textacy, custom extractors), has been entirely removed. In its place, a new asynchronous FastAPI-based backend is introduced, featuring modular components for agent management, database models, service layers, and API routing. The new stack integrates modern libraries such as FastAPI, SQLAlchemy (async), Pydantic, OpenAI/Ollama LLM providers, and a dynamic prompt/schema management system. All legacy scripts, utilities, and Streamlit UIs are deleted, and the dependency list is overhauled to match the new architecture.\n\n## Changes\n\n| File(s) / Path(s)                                            | Change Summary |\n|--------------------------------------------------------------|---------------|\n| `.gitignore`, `.pre-commit-config.yaml`, `build.dockerfile`, `docker-compose.yml` | Clean up and update ignore rules; remove pre-commit config and Docker setup. |\n| `requirements.txt`                                           | Fully replaced dependency list to match new async FastAPI backend and LLM stack. |\n| `Demo/DemoData.py`, `README.md`, `run_first.py`, `streamlit_app.py`, `streamlit_interactive.py`, `streamlit_second.py` | Remove legacy demo data, documentation, and all Streamlit-based UI files. |\n| `resume_matcher/`, `scripts/` (all submodules and files)     | Remove all legacy NLP scripts, extractors, parsers, scoring utilities, and script initializers. |\n| `app/agent/` (all new files)                                 | Introduce modular, asynchronous LLM agent management with provider auto-selection, error handling, and strategy wrappers. |\n| `app/api/` (all new files)                                   | Add FastAPI routers, middleware for request IDs, and health check endpoints. |\n| `app/base.py`, `app/main.py`                                 | Add FastAPI app factory, application entry point, and app configuration. |\n| `app/core/` (all new files)                                  | Add centralized configuration, database setup (sync/async), logging, and exception handlers. |\n| `app/models/` (all new files)                                | Define SQLAlchemy models for users, resumes, jobs, and association tables. |\n| `app/prompt/` (all new files)                                | Add dynamic prompt discovery and management for LLM tasks. |\n| `app/schemas/json/` (all new files)                          | Add dynamic JSON schema discovery and management for structured data extraction. |\n| `app/schemas/pydantic/` (all new files)                      | Add Pydantic models for job, resume, and improvement request validation. |\n| `app/services/` (all new files)                              | Implement service layer for resume/job CRUD, LLM-based extraction, and scoring/improvement workflows. |\n\n## Sequence Diagram(s)\n\n```mermaid\nsequenceDiagram\n    participant User\n    participant FastAPI\n    participant Middleware\n    participant Router\n    participant Service\n    participant DB\n    participant AgentManager\n    participant Provider\n\n    User->>FastAPI: HTTP request (e.g., upload resume/job)\n    FastAPI->>Middleware: Assign request_id\n    Middleware->>Router: Route request (e.g., /api/v1/resumes/upload)\n    Router->>Service: Validate & process input\n    Service->>DB: Store/retrieve resume/job\n    Service->>AgentManager: Extract structured data / improve resume\n    AgentManager->>Provider: Select LLM provider (OpenAI/Ollama)\n    Provider-->>AgentManager: Generate LLM response\n    AgentManager-->>Service: Return structured data / improved resume\n    Service-->>Router: Return result (IDs, scores, etc.)\n    Router-->>User: HTTP response (JSON)\n```\n\n## Possibly related PRs\n\n- **srbhr/Resume-Matcher#343**: Also modifies `.gitignore` with similar changes to ignored entries and Python cache directories. The overlap is limited to `.gitignore` updates; the rest of the changes are unrelated.\n\n## Suggested reviewers\n\n- srbhr\n\n## Poem\n\n> In fields of code where resumes grew,  \n> The rabbits hopped and started anew.  \n> Old scripts and Streamlit apps took flight,  \n> As FastAPI dawned, shiny and bright.  \n> Agents now choose LLMs with flair,  \n> Prompts and schemas discovered with care.  \n> Hop, hop, hooray! The backend's reborn\u2014  \n> Let the matcher leap into a new dawn!  \n>\n>  (\\(\\  \n>  ( -.-)  \n>  o_(\")(\")\n\n<!-- walkthrough_end -->\n<!-- internal state start -->\n\n\n<!--  -->\n\n<!-- internal state end -->\n<!-- finishing_touch_checkbox_start -->\n\n<details open=\"true\">\n<summary>\u2728 Finishing Touches</summary>\n\n- [ ] <!-- {\"checkboxId\": \"7962f53c-55bc-4827-bfbf-6a18da830691\"} --> \ud83d\udcdd Generate Docstrings\n\n</details>\n\n<!-- finishing_touch_checkbox_end -->\n<!-- tips_start -->\n\n---\n\n\n\n<details>\n<summary>\ud83e\udea7 Tips</summary>\n\n### Chat\n\nThere are 3 ways to chat with [CodeRabbit](https://coderabbit.ai?utm_source=oss&utm_medium=github&utm_campaign=srbhr/Resume-Matcher&utm_content=353):\n\n- Review comments: Directly reply to a review comment made by CodeRabbit. Example:\n  - `I pushed a fix in commit <commit_id>, please review it.`\n  - `Generate unit testing code for this file.`\n  - `Open a follow-up GitHub issue for this discussion.`\n- Files and specific lines of code (under the \"Files changed\" tab): Tag `@coderabbitai` in a new review comment at the desired location with your query. Examples:\n  - `@coderabbitai generate unit testing code for this file.`\n  -\t`@coderabbitai modularize this function.`\n- PR comments: Tag `@coderabbitai` in a new PR comment to ask questions about the PR branch. For the best results, please provide a very specific query, as very limited context is provided in this mode. Examples:\n  - `@coderabbitai gather interesting stats about this repository and render them as a table. Additionally, render a pie chart showing the language distribution in the codebase.`\n  - `@coderabbitai read src/utils.ts and generate unit testing code.`\n  - `@coderabbitai read the files in the src/scheduler package and generate a class diagram using mermaid and a README in the markdown format.`\n  - `@coderabbitai help me debug CodeRabbit configuration file.`\n\nNote: Be mindful of the bot's finite context window. It's strongly recommended to break down tasks such as reading entire modules into smaller chunks. For a focused discussion, use review comments to chat about specific files and their changes, instead of using the PR comments.\n\n### CodeRabbit Commands (Invoked using PR comments)\n\n- `@coderabbitai pause` to pause the reviews on a PR.\n- `@coderabbitai resume` to resume the paused reviews.\n- `@coderabbitai review` to trigger an incremental review. This is useful when automatic reviews are disabled for the repository.\n- `@coderabbitai full review` to do a full review from scratch and review all the files again.\n- `@coderabbitai summary` to regenerate the summary of the PR.\n- `@coderabbitai generate docstrings` to [generate docstrings](https://docs.coderabbit.ai/finishing-touches/docstrings) for this PR.\n- `@coderabbitai generate sequence diagram` to generate a sequence diagram of the changes in this PR.\n- `@coderabbitai resolve` resolve all the CodeRabbit review comments.\n- `@coderabbitai configuration` to show the current CodeRabbit configuration for the repository.\n- `@coderabbitai help` to get help.\n\n### Other keywords and placeholders\n\n- Add `@coderabbitai ignore` anywhere in the PR description to prevent this PR from being reviewed.\n- Add `@coderabbitai summary` to generate the high-level summary at a specific location in the PR description.\n- Add `@coderabbitai` anywhere in the PR title to generate the title automatically.\n\n### CodeRabbit Configuration File (`.coderabbit.yaml`)\n\n- You can programmatically configure CodeRabbit by adding a `.coderabbit.yaml` file to the root of your repository.\n- Please see the [configuration documentation](https://docs.coderabbit.ai/guides/configure-coderabbit) for more information.\n- If your editor has YAML language server enabled, you can add the path at the top of this file to enable auto-completion and validation: `# yaml-language-server: $schema=https://coderabbit.ai/integrations/schema.v2.json`\n\n### Documentation and Community\n\n- Visit our [Documentation](https://docs.coderabbit.ai) for detailed information on how to use CodeRabbit.\n- Join our [Discord Community](http://discord.gg/coderabbit) to get help, request features, and share feedback.\n- Follow us on [X/Twitter](https://twitter.com/coderabbitai) for updates and announcements.\n\n</details>\n\n<!-- tips_end -->"
        }
      ],
      "relationships": [
        {
          "objectId": "coderabbitai[bot]",
          "qualifier": "commented-by"
        },
        {
          "objectId": "353",
          "qualifier": "on"
        }
      ],
      "id": "IC_kwDODyNbyM6pA8Of"
    },
    {
      "type": "rename_pull_request",
      "time": "2025-04-28T15:15:39Z",
      "attributes": [
        {
          "name": "renamed-to",
          "value": "Issue 325 | await added before async db commit"
        }
      ],
      "relationships": [
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "change-issued-by"
        },
        {
          "objectId": "353",
          "qualifier": "for-pr"
        }
      ],
      "id": "RTE_lADODyNbyM60UkECzwAAAAQPTwym"
    },
    {
      "type": "comment_review",
      "time": "2025-04-28T15:20:23Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "coderabbitai[bot]",
          "qualifier": "commented-by"
        },
        {
          "objectId": "353",
          "qualifier": "for-pull-request"
        }
      ],
      "id": "2799711743"
    },
    {
      "type": "merge_pull_request",
      "time": "2025-04-28T15:36:46Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "353",
          "qualifier": "merged-on-pull_request"
        }
      ],
      "id": "ME_lADODyNbyM60UkECzwAAAAQPVjSV"
    },
    {
      "type": "close_pull_request",
      "time": "2025-04-28T15:36:46Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "353",
          "qualifier": "closed-on-pull_request"
        }
      ],
      "id": "CE_lADODyNbyM60UkECzwAAAAQPVjS5"
    },
    {
      "type": "commit",
      "time": "2025-04-28T02:47:02Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "authored-by"
        },
        {
          "objectId": "cc6ef2a0d469f840109183e5d2454a24949cafb5",
          "qualifier": "sha"
        },
        {
          "objectId": "352",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKGNjNmVmMmEwZDQ2OWY4NDAxMDkxODNlNWQyNDU0YTI0OTQ5Y2FmYjU"
    },
    {
      "type": "comment_pull_request",
      "time": "2025-04-28T02:48:18Z",
      "attributes": [
        {
          "name": "comment",
          "value": "<!-- This is an auto-generated comment: summarize by coderabbit.ai -->\n<!-- This is an auto-generated comment: skip review by coderabbit.ai -->\n\n> [!IMPORTANT]\n> ## Review skipped\n> \n> Auto reviews are disabled on base/target branches other than the default branch.\n> \n> \n> \n> Please check the settings in the CodeRabbit UI or the `.coderabbit.yaml` file in this repository. To trigger a single review, invoke the `@coderabbitai review` command.\n> \n> You can disable this status message by setting the `reviews.review_status` to `false` in the CodeRabbit configuration file.\n\n<!-- end of auto-generated comment: skip review by coderabbit.ai -->\n<!-- tips_start -->\n\n---\n\n\n\n<details>\n<summary>\ud83e\udea7 Tips</summary>\n\n### Chat\n\nThere are 3 ways to chat with [CodeRabbit](https://coderabbit.ai?utm_source=oss&utm_medium=github&utm_campaign=srbhr/Resume-Matcher&utm_content=352):\n\n- Review comments: Directly reply to a review comment made by CodeRabbit. Example:\n  - `I pushed a fix in commit <commit_id>, please review it.`\n  - `Generate unit testing code for this file.`\n  - `Open a follow-up GitHub issue for this discussion.`\n- Files and specific lines of code (under the \"Files changed\" tab): Tag `@coderabbitai` in a new review comment at the desired location with your query. Examples:\n  - `@coderabbitai generate unit testing code for this file.`\n  -\t`@coderabbitai modularize this function.`\n- PR comments: Tag `@coderabbitai` in a new PR comment to ask questions about the PR branch. For the best results, please provide a very specific query, as very limited context is provided in this mode. Examples:\n  - `@coderabbitai gather interesting stats about this repository and render them as a table. Additionally, render a pie chart showing the language distribution in the codebase.`\n  - `@coderabbitai read src/utils.ts and generate unit testing code.`\n  - `@coderabbitai read the files in the src/scheduler package and generate a class diagram using mermaid and a README in the markdown format.`\n  - `@coderabbitai help me debug CodeRabbit configuration file.`\n\nNote: Be mindful of the bot's finite context window. It's strongly recommended to break down tasks such as reading entire modules into smaller chunks. For a focused discussion, use review comments to chat about specific files and their changes, instead of using the PR comments.\n\n### CodeRabbit Commands (Invoked using PR comments)\n\n- `@coderabbitai pause` to pause the reviews on a PR.\n- `@coderabbitai resume` to resume the paused reviews.\n- `@coderabbitai review` to trigger an incremental review. This is useful when automatic reviews are disabled for the repository.\n- `@coderabbitai full review` to do a full review from scratch and review all the files again.\n- `@coderabbitai summary` to regenerate the summary of the PR.\n- `@coderabbitai generate docstrings` to [generate docstrings](https://docs.coderabbit.ai/finishing-touches/docstrings) for this PR.\n- `@coderabbitai generate sequence diagram` to generate a sequence diagram of the changes in this PR.\n- `@coderabbitai resolve` resolve all the CodeRabbit review comments.\n- `@coderabbitai configuration` to show the current CodeRabbit configuration for the repository.\n- `@coderabbitai help` to get help.\n\n### Other keywords and placeholders\n\n- Add `@coderabbitai ignore` anywhere in the PR description to prevent this PR from being reviewed.\n- Add `@coderabbitai summary` to generate the high-level summary at a specific location in the PR description.\n- Add `@coderabbitai` anywhere in the PR title to generate the title automatically.\n\n### CodeRabbit Configuration File (`.coderabbit.yaml`)\n\n- You can programmatically configure CodeRabbit by adding a `.coderabbit.yaml` file to the root of your repository.\n- Please see the [configuration documentation](https://docs.coderabbit.ai/guides/configure-coderabbit) for more information.\n- If your editor has YAML language server enabled, you can add the path at the top of this file to enable auto-completion and validation: `# yaml-language-server: $schema=https://coderabbit.ai/integrations/schema.v2.json`\n\n### Documentation and Community\n\n- Visit our [Documentation](https://docs.coderabbit.ai) for detailed information on how to use CodeRabbit.\n- Join our [Discord Community](http://discord.gg/coderabbit) to get help, request features, and share feedback.\n- Follow us on [X/Twitter](https://twitter.com/coderabbitai) for updates and announcements.\n\n</details>\n\n<!-- tips_end -->"
        }
      ],
      "relationships": [
        {
          "objectId": "coderabbitai[bot]",
          "qualifier": "commented-by"
        },
        {
          "objectId": "352",
          "qualifier": "on"
        }
      ],
      "id": "IC_kwDODyNbyM6o6SJD"
    },
    {
      "type": "merge_pull_request",
      "time": "2025-04-28T04:12:17Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "352",
          "qualifier": "merged-on-pull_request"
        }
      ],
      "id": "ME_lADODyNbyM60N8hczwAAAAQOteau"
    },
    {
      "type": "close_pull_request",
      "time": "2025-04-28T04:12:18Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "352",
          "qualifier": "closed-on-pull_request"
        }
      ],
      "id": "CE_lADODyNbyM60N8hczwAAAAQOtea7"
    },
    {
      "type": "commit",
      "time": "2025-04-27T04:48:21Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "authored-by"
        },
        {
          "objectId": "1b09afcf548e2783fe0635093c39f0e675e684a8",
          "qualifier": "sha"
        },
        {
          "objectId": "351",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDFiMDlhZmNmNTQ4ZTI3ODNmZTA2MzUwOTNjMzlmMGU2NzVlNjg0YTg"
    },
    {
      "type": "comment_pull_request",
      "time": "2025-04-27T04:49:22Z",
      "attributes": [
        {
          "name": "comment",
          "value": "<!-- This is an auto-generated comment: summarize by coderabbit.ai -->\n<!-- This is an auto-generated comment: skip review by coderabbit.ai -->\n\n> [!IMPORTANT]\n> ## Review skipped\n> \n> Auto reviews are disabled on base/target branches other than the default branch.\n> \n> \n> \n> Please check the settings in the CodeRabbit UI or the `.coderabbit.yaml` file in this repository. To trigger a single review, invoke the `@coderabbitai review` command.\n> \n> You can disable this status message by setting the `reviews.review_status` to `false` in the CodeRabbit configuration file.\n\n<!-- end of auto-generated comment: skip review by coderabbit.ai -->\n<!-- tips_start -->\n\n---\n\n\n\n<details>\n<summary>\ud83e\udea7 Tips</summary>\n\n### Chat\n\nThere are 3 ways to chat with [CodeRabbit](https://coderabbit.ai?utm_source=oss&utm_medium=github&utm_campaign=srbhr/Resume-Matcher&utm_content=351):\n\n- Review comments: Directly reply to a review comment made by CodeRabbit. Example:\n  - `I pushed a fix in commit <commit_id>, please review it.`\n  - `Generate unit testing code for this file.`\n  - `Open a follow-up GitHub issue for this discussion.`\n- Files and specific lines of code (under the \"Files changed\" tab): Tag `@coderabbitai` in a new review comment at the desired location with your query. Examples:\n  - `@coderabbitai generate unit testing code for this file.`\n  -\t`@coderabbitai modularize this function.`\n- PR comments: Tag `@coderabbitai` in a new PR comment to ask questions about the PR branch. For the best results, please provide a very specific query, as very limited context is provided in this mode. Examples:\n  - `@coderabbitai gather interesting stats about this repository and render them as a table. Additionally, render a pie chart showing the language distribution in the codebase.`\n  - `@coderabbitai read src/utils.ts and generate unit testing code.`\n  - `@coderabbitai read the files in the src/scheduler package and generate a class diagram using mermaid and a README in the markdown format.`\n  - `@coderabbitai help me debug CodeRabbit configuration file.`\n\nNote: Be mindful of the bot's finite context window. It's strongly recommended to break down tasks such as reading entire modules into smaller chunks. For a focused discussion, use review comments to chat about specific files and their changes, instead of using the PR comments.\n\n### CodeRabbit Commands (Invoked using PR comments)\n\n- `@coderabbitai pause` to pause the reviews on a PR.\n- `@coderabbitai resume` to resume the paused reviews.\n- `@coderabbitai review` to trigger an incremental review. This is useful when automatic reviews are disabled for the repository.\n- `@coderabbitai full review` to do a full review from scratch and review all the files again.\n- `@coderabbitai summary` to regenerate the summary of the PR.\n- `@coderabbitai generate docstrings` to [generate docstrings](https://docs.coderabbit.ai/finishing-touches/docstrings) for this PR.\n- `@coderabbitai generate sequence diagram` to generate a sequence diagram of the changes in this PR.\n- `@coderabbitai resolve` resolve all the CodeRabbit review comments.\n- `@coderabbitai configuration` to show the current CodeRabbit configuration for the repository.\n- `@coderabbitai help` to get help.\n\n### Other keywords and placeholders\n\n- Add `@coderabbitai ignore` anywhere in the PR description to prevent this PR from being reviewed.\n- Add `@coderabbitai summary` to generate the high-level summary at a specific location in the PR description.\n- Add `@coderabbitai` anywhere in the PR title to generate the title automatically.\n\n### CodeRabbit Configuration File (`.coderabbit.yaml`)\n\n- You can programmatically configure CodeRabbit by adding a `.coderabbit.yaml` file to the root of your repository.\n- Please see the [configuration documentation](https://docs.coderabbit.ai/guides/configure-coderabbit) for more information.\n- If your editor has YAML language server enabled, you can add the path at the top of this file to enable auto-completion and validation: `# yaml-language-server: $schema=https://coderabbit.ai/integrations/schema.v2.json`\n\n### Documentation and Community\n\n- Visit our [Documentation](https://docs.coderabbit.ai) for detailed information on how to use CodeRabbit.\n- Join our [Discord Community](http://discord.gg/coderabbit) to get help, request features, and share feedback.\n- Follow us on [X/Twitter](https://twitter.com/coderabbitai) for updates and announcements.\n\n</details>\n\n<!-- tips_end -->"
        }
      ],
      "relationships": [
        {
          "objectId": "coderabbitai[bot]",
          "qualifier": "commented-by"
        },
        {
          "objectId": "351",
          "qualifier": "on"
        }
      ],
      "id": "IC_kwDODyNbyM6o3hHD"
    },
    {
      "type": "commit",
      "time": "2025-04-27T07:07:31Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "authored-by"
        },
        {
          "objectId": "0224dec3a44db45105035a2cf48cf7302a138d89",
          "qualifier": "sha"
        },
        {
          "objectId": "351",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDAyMjRkZWMzYTQ0ZGI0NTEwNTAzNWEyY2Y0OGNmNzMwMmExMzhkODk"
    },
    {
      "type": "commit",
      "time": "2025-04-27T17:22:40Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "authored-by"
        },
        {
          "objectId": "8ac9c1298baf3508dbf99126c3e27d1e3b7e45da",
          "qualifier": "sha"
        },
        {
          "objectId": "351",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDhhYzljMTI5OGJhZjM1MDhkYmY5OTEyNmMzZTI3ZDFlM2I3ZTQ1ZGE"
    },
    {
      "type": "commit",
      "time": "2025-04-27T19:52:51Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "authored-by"
        },
        {
          "objectId": "a6c58e0dc4daeb36bc2d410cfc26ad2786a591bd",
          "qualifier": "sha"
        },
        {
          "objectId": "351",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKGE2YzU4ZTBkYzRkYWViMzZiYzJkNDEwY2ZjMjZhZDI3ODZhNTkxYmQ"
    },
    {
      "type": "commit",
      "time": "2025-04-27T19:52:51Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "authored-by"
        },
        {
          "objectId": "e1b750448af329eb35fb355640af0f82e4e56486",
          "qualifier": "sha"
        },
        {
          "objectId": "351",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKGUxYjc1MDQ0OGFmMzI5ZWIzNWZiMzU1NjQwYWYwZjgyZTRlNTY0ODY"
    },
    {
      "type": "commit",
      "time": "2025-04-27T19:53:54Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "authored-by"
        },
        {
          "objectId": "6f615ecb7b71b478036191c50b6aa2d7aa0c6932",
          "qualifier": "sha"
        },
        {
          "objectId": "351",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDZmNjE1ZWNiN2I3MWI0NzgwMzYxOTFjNTBiNmFhMmQ3YWEwYzY5MzI"
    },
    {
      "type": "comment_pull_request",
      "time": "2025-04-27T19:55:11Z",
      "attributes": [
        {
          "name": "comment",
          "value": "Dev Test\r\n![image](https://github.com/user-attachments/assets/94f975cf-baac-4c6d-a4ae-ab2b45818fac)\r\n"
        }
      ],
      "relationships": [
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "commented-by"
        },
        {
          "objectId": "351",
          "qualifier": "on"
        }
      ],
      "id": "IC_kwDODyNbyM6o5Yr6"
    },
    {
      "type": "merge_pull_request",
      "time": "2025-04-27T20:14:33Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "351",
          "qualifier": "merged-on-pull_request"
        }
      ],
      "id": "ME_lADODyNbyM60KzqbzwAAAAQOmaHl"
    },
    {
      "type": "close_pull_request",
      "time": "2025-04-27T20:14:33Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "351",
          "qualifier": "closed-on-pull_request"
        }
      ],
      "id": "CE_lADODyNbyM60KzqbzwAAAAQOmaHo"
    },
    {
      "type": "commit",
      "time": "2025-04-26T17:13:49Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "authored-by"
        },
        {
          "objectId": "282aff8daa3dd6e509ea6592c2eef87376801ef7",
          "qualifier": "sha"
        },
        {
          "objectId": "350",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDI4MmFmZjhkYWEzZGQ2ZTUwOWVhNjU5MmMyZWVmODczNzY4MDFlZjc"
    },
    {
      "type": "comment_pull_request",
      "time": "2025-04-26T17:14:52Z",
      "attributes": [
        {
          "name": "comment",
          "value": "<!-- This is an auto-generated comment: summarize by coderabbit.ai -->\n<!-- This is an auto-generated comment: skip review by coderabbit.ai -->\n\n> [!IMPORTANT]\n> ## Review skipped\n> \n> Auto reviews are disabled on base/target branches other than the default branch.\n> \n> \n> \n> Please check the settings in the CodeRabbit UI or the `.coderabbit.yaml` file in this repository. To trigger a single review, invoke the `@coderabbitai review` command.\n> \n> You can disable this status message by setting the `reviews.review_status` to `false` in the CodeRabbit configuration file.\n\n<!-- end of auto-generated comment: skip review by coderabbit.ai -->\n<!-- walkthrough_start -->\n\n## Walkthrough\n\nThis update introduces a comprehensive overhaul of the codebase, replacing the previous Streamlit-based resume matcher application and its associated scripts with a new backend architecture built on FastAPI, SQLAlchemy, and modern Python async tooling. The new implementation features modular components for API routing, database management, prompt and schema factories, LLM agent orchestration, and resume/job processing services. All legacy files related to data extraction, Streamlit UI, and similarity scoring scripts have been removed. The requirements and configuration files have been updated to reflect the new dependencies and structure, and the documentation has been replaced with a placeholder.\n\n## Changes\n\n| Files/Paths                                           | Change Summary |\n|-------------------------------------------------------|---------------|\n| `.gitignore`, `.pre-commit-config.yaml`, `build.dockerfile`, `docker-compose.yml` | Updated ignore rules, removed pre-commit config, Dockerfile, and Compose files. |\n| `requirements.txt`                                    | Replaced all dependencies with a new set focused on FastAPI, SQLAlchemy, async, and LLM tooling. |\n| `README.md`                                           | Replaced full documentation with a single-line placeholder. |\n| `Demo/DemoData.py`                                    | Removed static demo job and resume data. |\n| `app/main.py`, `app/base.py`                          | Added new FastAPI app entrypoint and configuration with middleware, routers, and exception handling. |\n| `app/api/*`                                           | Introduced routers, health check, middleware for request IDs, and API versioning. |\n| `app/core/*`                                          | Added configuration, logging, database engine/session management, and exception handlers. |\n| `app/models/*`                                        | Defined SQLAlchemy ORM models for users, jobs, resumes, and their associations. |\n| `app/agent/*`                                         | Implemented pluggable LLM agent manager, provider base, OpenAI/Ollama providers, strategies, and exceptions. |\n| `app/prompt/*`, `app/schemas/json/*`                  | Added dynamic prompt and JSON schema factories, structured prompt templates, and schema definitions. |\n| `app/schemas/pydantic/*`                              | Introduced Pydantic models for job and resume data validation. |\n| `app/services/*`                                      | Added async services for resume and job processing, including LLM-based extraction and database storage. |\n| Legacy scripts and folders: `resume_matcher/*`, `scripts/*`, `run_first.py`, `streamlit_*.py` | Entirely removed all legacy data extraction, parsing, utility, and Streamlit UI scripts. |\n\n## Sequence Diagram(s)\n\n```mermaid\nsequenceDiagram\n    participant Client\n    participant FastAPI\n    participant Middleware\n    participant Router\n    participant Service\n    participant DB\n    participant LLM Agent\n\n    Client->>FastAPI: HTTP Request (e.g., upload resume/job)\n    FastAPI->>Middleware: Assign request ID\n    Middleware->>Router: Forward request\n    Router->>Service: Validate & process input\n    Service->>DB: Store raw data\n    Service->>LLM Agent: Extract structured data (async)\n    LLM Agent->>Provider: Select OpenAI/Ollama\n    Provider-->>LLM Agent: Structured JSON\n    LLM Agent-->>Service: Parsed data\n    Service->>DB: Store structured data\n    Service-->>Router: Success/Failure response\n    Router-->>Client: HTTP Response\n```\n\n## Possibly related PRs\n\n- **srbhr/Resume-Matcher#343**: Modifies the `.gitignore` file with similar changes, such as updating ignored paths and adding `.cursorrules`. Overlap is limited to ignore rules; the rest of the codebase changes are unrelated.\n\n## Poem\n\n> In the warren, code anew,\n> Old scripts gone, the backend grew.\n> FastAPI hops in with cheer,\n> Agents and schemas now appear.\n> No more Streamlit fields to till,\n> Just LLMs and async skill.\n> A rabbit\u2019s leap, a future bright\u2014  \n> Ship it fast, and ship it right! \ud83d\udc07\u2728\n\n<!-- walkthrough_end -->\n<!-- internal state start -->\n\n\n<!--  -->\n\n<!-- internal state end -->\n<!-- tips_start -->\n\n---\n\n\n\n<details>\n<summary>\ud83e\udea7 Tips</summary>\n\n### Chat\n\nThere are 3 ways to chat with [CodeRabbit](https://coderabbit.ai?utm_source=oss&utm_medium=github&utm_campaign=srbhr/Resume-Matcher&utm_content=350):\n\n- Review comments: Directly reply to a review comment made by CodeRabbit. Example:\n  - `I pushed a fix in commit <commit_id>, please review it.`\n  - `Generate unit testing code for this file.`\n  - `Open a follow-up GitHub issue for this discussion.`\n- Files and specific lines of code (under the \"Files changed\" tab): Tag `@coderabbitai` in a new review comment at the desired location with your query. Examples:\n  - `@coderabbitai generate unit testing code for this file.`\n  -\t`@coderabbitai modularize this function.`\n- PR comments: Tag `@coderabbitai` in a new PR comment to ask questions about the PR branch. For the best results, please provide a very specific query, as very limited context is provided in this mode. Examples:\n  - `@coderabbitai gather interesting stats about this repository and render them as a table. Additionally, render a pie chart showing the language distribution in the codebase.`\n  - `@coderabbitai read src/utils.ts and generate unit testing code.`\n  - `@coderabbitai read the files in the src/scheduler package and generate a class diagram using mermaid and a README in the markdown format.`\n  - `@coderabbitai help me debug CodeRabbit configuration file.`\n\nNote: Be mindful of the bot's finite context window. It's strongly recommended to break down tasks such as reading entire modules into smaller chunks. For a focused discussion, use review comments to chat about specific files and their changes, instead of using the PR comments.\n\n### CodeRabbit Commands (Invoked using PR comments)\n\n- `@coderabbitai pause` to pause the reviews on a PR.\n- `@coderabbitai resume` to resume the paused reviews.\n- `@coderabbitai review` to trigger an incremental review. This is useful when automatic reviews are disabled for the repository.\n- `@coderabbitai full review` to do a full review from scratch and review all the files again.\n- `@coderabbitai summary` to regenerate the summary of the PR.\n- `@coderabbitai generate docstrings` to [generate docstrings](https://docs.coderabbit.ai/finishing-touches/docstrings) for this PR.\n- `@coderabbitai generate sequence diagram` to generate a sequence diagram of the changes in this PR.\n- `@coderabbitai resolve` resolve all the CodeRabbit review comments.\n- `@coderabbitai configuration` to show the current CodeRabbit configuration for the repository.\n- `@coderabbitai help` to get help.\n\n### Other keywords and placeholders\n\n- Add `@coderabbitai ignore` anywhere in the PR description to prevent this PR from being reviewed.\n- Add `@coderabbitai summary` to generate the high-level summary at a specific location in the PR description.\n- Add `@coderabbitai` anywhere in the PR title to generate the title automatically.\n\n### CodeRabbit Configuration File (`.coderabbit.yaml`)\n\n- You can programmatically configure CodeRabbit by adding a `.coderabbit.yaml` file to the root of your repository.\n- Please see the [configuration documentation](https://docs.coderabbit.ai/guides/configure-coderabbit) for more information.\n- If your editor has YAML language server enabled, you can add the path at the top of this file to enable auto-completion and validation: `# yaml-language-server: $schema=https://coderabbit.ai/integrations/schema.v2.json`\n\n### Documentation and Community\n\n- Visit our [Documentation](https://docs.coderabbit.ai) for detailed information on how to use CodeRabbit.\n- Join our [Discord Community](http://discord.gg/coderabbit) to get help, request features, and share feedback.\n- Follow us on [X/Twitter](https://twitter.com/coderabbitai) for updates and announcements.\n\n</details>\n\n<!-- tips_end -->"
        }
      ],
      "relationships": [
        {
          "objectId": "coderabbitai[bot]",
          "qualifier": "commented-by"
        },
        {
          "objectId": "350",
          "qualifier": "on"
        }
      ],
      "id": "IC_kwDODyNbyM6o07iz"
    },
    {
      "type": "comment_review",
      "time": "2025-04-26T17:19:50Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "coderabbitai[bot]",
          "qualifier": "commented-by"
        },
        {
          "objectId": "350",
          "qualifier": "for-pull-request"
        }
      ],
      "id": "2796286361"
    },
    {
      "type": "commit",
      "time": "2025-04-26T17:23:36Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "authored-by"
        },
        {
          "objectId": "aaca47af7534970c1d20e7b19a5ec493172e5a2d",
          "qualifier": "sha"
        },
        {
          "objectId": "350",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKGFhY2E0N2FmNzUzNDk3MGMxZDIwZTdiMTlhNWVjNDkzMTcyZTVhMmQ"
    },
    {
      "type": "approve_review",
      "time": "2025-04-26T17:48:23Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "approved-by"
        },
        {
          "objectId": "350",
          "qualifier": "for-pull-request"
        }
      ],
      "id": "2796308429"
    },
    {
      "type": "merge_pull_request",
      "time": "2025-04-26T17:48:34Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "350",
          "qualifier": "merged-on-pull_request"
        }
      ],
      "id": "ME_lADODyNbyM60IjkKzwAAAAQOMFRB"
    },
    {
      "type": "close_pull_request",
      "time": "2025-04-26T17:48:34Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "350",
          "qualifier": "closed-on-pull_request"
        }
      ],
      "id": "CE_lADODyNbyM60IjkKzwAAAAQOMFRG"
    },
    {
      "type": "commit",
      "time": "2025-04-25T18:12:52Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "authored-by"
        },
        {
          "objectId": "a8a0935bb1bc93441fd8153cbb8960a0e79a400a",
          "qualifier": "sha"
        },
        {
          "objectId": "349",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKGE4YTA5MzViYjFiYzkzNDQxZmQ4MTUzY2JiODk2MGEwZTc5YTQwMGE"
    },
    {
      "type": "comment_pull_request",
      "time": "2025-04-25T18:13:50Z",
      "attributes": [
        {
          "name": "comment",
          "value": "<!-- This is an auto-generated comment: summarize by coderabbit.ai -->\n<!-- walkthrough_start -->\n\n## Walkthrough\n\nThis set of changes constitutes a complete architectural overhaul of the project. The previous implementation, which relied heavily on Streamlit, spaCy, and various custom scripts for resume and job description processing, has been entirely removed. In its place, a new FastAPI-based backend is introduced, featuring modular components for agent management, database models, API routing, and service layers. The new system leverages modern Python libraries such as Pydantic, SQLAlchemy, and OpenAI/Ollama integrations for LLM-based structured data extraction. All legacy data extraction, similarity scoring, and Streamlit UI code have been deleted, with the focus now on a robust, scalable API-driven backend architecture.\n\n## Changes\n\n| File(s) / Path(s)                                              | Change Summary                                                                                                                      |\n|---------------------------------------------------------------|-------------------------------------------------------------------------------------------------------------------------------------|\n| `.gitignore`, `.pre-commit-config.yaml`, `build.dockerfile`, `docker-compose.yml` | Updated or removed configuration files; Docker and pre-commit setup deleted; `.gitignore` reorganized.                              |\n| `requirements.txt`                                             | Replaced data science and Streamlit dependencies with FastAPI, SQLAlchemy, OpenAI, Ollama, and modern backend libraries.            |\n| `Demo/DemoData.py`, `README.md`                               | Deleted demo data and replaced README with a placeholder.                                                                           |\n| `app/agent/`, `app/api/`, `app/base.py`, `app/core/`, `app/models/`, `app/prompt/`, `app/schemas/`, `app/services/`, `app/utils/utils.py`, `app/main.py` | Introduced new backend architecture: agent/provider/strategy abstractions, API routers, database models, core config, and services.  |\n| `resume_matcher/`, `run_first.py`, `scripts/`, `streamlit_app.py`, `streamlit_interactive.py`, `streamlit_second.py` | Entire legacy codebase deleted: all Streamlit apps, NLP scripts, utility functions, and data extraction logic removed.              |\n\n## Sequence Diagram(s)\n\n```mermaid\nsequenceDiagram\n    participant Client\n    participant FastAPI\n    participant Middleware\n    participant Router\n    participant Service\n    participant AgentManager\n    participant Provider (OpenAI/Ollama)\n    participant DB\n\n    Client->>FastAPI: HTTP request (e.g., upload resume/job)\n    FastAPI->>Middleware: Process request (add request ID)\n    Middleware->>Router: Route to endpoint\n    Router->>Service: Validate & process input\n    Service->>AgentManager: Extract structured data (LLM)\n    AgentManager->>Provider: Generate structured JSON\n    Provider-->>AgentManager: Return LLM output\n    AgentManager-->>Service: Return structured data\n    Service->>DB: Store raw & structured data\n    DB-->>Service: Confirm storage\n    Service-->>Router: Return response data\n    Router-->>Client: JSON response\n```\n\n## Possibly related PRs\n\n- **srbhr/Resume-Matcher#343**: Modifies `.gitignore` and removes `.pre-commit-config.yaml`, similar to this PR's configuration cleanup, but does not include the full architectural rewrite.\n\n## Poem\n\n> In burrows deep, the code did sleep,  \n> Old scripts and Streamlit swept in a heap.  \n> Now, with FastAPI, the backend\u2019s reborn,  \n> Agents and models, a new age is sworn.  \n> No more Streamlit carrots or spaCy delight\u2014  \n> Just robust APIs, running swift and light!  \n> \ud83d\udc07\u2728\n\n<!-- walkthrough_end -->\n<!-- internal state start -->\n\n\n<!--  -->\n\n<!-- internal state end -->\n<!-- finishing_touch_checkbox_start -->\n\n<details open=\"true\">\n<summary>\u2728 Finishing Touches</summary>\n\n- [ ] <!-- {\"checkboxId\": \"7962f53c-55bc-4827-bfbf-6a18da830691\"} --> \ud83d\udcdd Generate Docstrings\n\n</details>\n\n<!-- finishing_touch_checkbox_end -->\n<!-- tips_start -->\n\n---\n\n\n\n<details>\n<summary>\ud83e\udea7 Tips</summary>\n\n### Chat\n\nThere are 3 ways to chat with [CodeRabbit](https://coderabbit.ai?utm_source=oss&utm_medium=github&utm_campaign=srbhr/Resume-Matcher&utm_content=349):\n\n- Review comments: Directly reply to a review comment made by CodeRabbit. Example:\n  - `I pushed a fix in commit <commit_id>, please review it.`\n  - `Generate unit testing code for this file.`\n  - `Open a follow-up GitHub issue for this discussion.`\n- Files and specific lines of code (under the \"Files changed\" tab): Tag `@coderabbitai` in a new review comment at the desired location with your query. Examples:\n  - `@coderabbitai generate unit testing code for this file.`\n  -\t`@coderabbitai modularize this function.`\n- PR comments: Tag `@coderabbitai` in a new PR comment to ask questions about the PR branch. For the best results, please provide a very specific query, as very limited context is provided in this mode. Examples:\n  - `@coderabbitai gather interesting stats about this repository and render them as a table. Additionally, render a pie chart showing the language distribution in the codebase.`\n  - `@coderabbitai read src/utils.ts and generate unit testing code.`\n  - `@coderabbitai read the files in the src/scheduler package and generate a class diagram using mermaid and a README in the markdown format.`\n  - `@coderabbitai help me debug CodeRabbit configuration file.`\n\nNote: Be mindful of the bot's finite context window. It's strongly recommended to break down tasks such as reading entire modules into smaller chunks. For a focused discussion, use review comments to chat about specific files and their changes, instead of using the PR comments.\n\n### CodeRabbit Commands (Invoked using PR comments)\n\n- `@coderabbitai pause` to pause the reviews on a PR.\n- `@coderabbitai resume` to resume the paused reviews.\n- `@coderabbitai review` to trigger an incremental review. This is useful when automatic reviews are disabled for the repository.\n- `@coderabbitai full review` to do a full review from scratch and review all the files again.\n- `@coderabbitai summary` to regenerate the summary of the PR.\n- `@coderabbitai generate docstrings` to [generate docstrings](https://docs.coderabbit.ai/finishing-touches/docstrings) for this PR.\n- `@coderabbitai generate sequence diagram` to generate a sequence diagram of the changes in this PR.\n- `@coderabbitai resolve` resolve all the CodeRabbit review comments.\n- `@coderabbitai configuration` to show the current CodeRabbit configuration for the repository.\n- `@coderabbitai help` to get help.\n\n### Other keywords and placeholders\n\n- Add `@coderabbitai ignore` anywhere in the PR description to prevent this PR from being reviewed.\n- Add `@coderabbitai summary` to generate the high-level summary at a specific location in the PR description.\n- Add `@coderabbitai` anywhere in the PR title to generate the title automatically.\n\n### CodeRabbit Configuration File (`.coderabbit.yaml`)\n\n- You can programmatically configure CodeRabbit by adding a `.coderabbit.yaml` file to the root of your repository.\n- Please see the [configuration documentation](https://docs.coderabbit.ai/guides/configure-coderabbit) for more information.\n- If your editor has YAML language server enabled, you can add the path at the top of this file to enable auto-completion and validation: `# yaml-language-server: $schema=https://coderabbit.ai/integrations/schema.v2.json`\n\n### Documentation and Community\n\n- Visit our [Documentation](https://docs.coderabbit.ai) for detailed information on how to use CodeRabbit.\n- Join our [Discord Community](http://discord.gg/coderabbit) to get help, request features, and share feedback.\n- Follow us on [X/Twitter](https://twitter.com/coderabbitai) for updates and announcements.\n\n</details>\n\n<!-- tips_end -->"
        }
      ],
      "relationships": [
        {
          "objectId": "coderabbitai[bot]",
          "qualifier": "commented-by"
        },
        {
          "objectId": "349",
          "qualifier": "on"
        }
      ],
      "id": "IC_kwDODyNbyM6ovy2D"
    },
    {
      "type": "comment_review",
      "time": "2025-04-25T18:22:45Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "coderabbitai[bot]",
          "qualifier": "commented-by"
        },
        {
          "objectId": "349",
          "qualifier": "for-pull-request"
        }
      ],
      "id": "2794941998"
    },
    {
      "type": "merge_pull_request",
      "time": "2025-04-25T20:00:30Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "349",
          "qualifier": "merged-on-pull_request"
        }
      ],
      "id": "ME_lADODyNbyM60DGeEzwAAAAQNz7P3"
    },
    {
      "type": "close_pull_request",
      "time": "2025-04-25T20:00:31Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "349",
          "qualifier": "closed-on-pull_request"
        }
      ],
      "id": "CE_lADODyNbyM60DGeEzwAAAAQNz7QT"
    },
    {
      "type": "commit",
      "time": "2025-04-24T17:41:52Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "authored-by"
        },
        {
          "objectId": "bc37099b67868a928132f63b6e2ad0e56e5c9b47",
          "qualifier": "sha"
        },
        {
          "objectId": "348",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKGJjMzcwOTliNjc4NjhhOTI4MTMyZjYzYjZlMmFkMGU1NmU1YzliNDc"
    },
    {
      "type": "commit",
      "time": "2025-04-25T07:37:29Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "authored-by"
        },
        {
          "objectId": "bc5004c96a45b00850aad311678665e7b7576427",
          "qualifier": "sha"
        },
        {
          "objectId": "348",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKGJjNTAwNGM5NmE0NWIwMDg1MGFhZDMxMTY3ODY2NWU3Yjc1NzY0Mjc"
    },
    {
      "type": "comment_pull_request",
      "time": "2025-04-25T07:38:39Z",
      "attributes": [
        {
          "name": "comment",
          "value": "<!-- This is an auto-generated comment: summarize by coderabbit.ai -->\n<!-- This is an auto-generated comment: skip review by coderabbit.ai -->\n\n> [!IMPORTANT]\n> ## Review skipped\n> \n> Auto reviews are disabled on base/target branches other than the default branch.\n> \n> \n> \n> Please check the settings in the CodeRabbit UI or the `.coderabbit.yaml` file in this repository. To trigger a single review, invoke the `@coderabbitai review` command.\n> \n> You can disable this status message by setting the `reviews.review_status` to `false` in the CodeRabbit configuration file.\n\n<!-- end of auto-generated comment: skip review by coderabbit.ai -->\n<!-- tips_start -->\n\n---\n\n\n\n<details>\n<summary>\ud83e\udea7 Tips</summary>\n\n### Chat\n\nThere are 3 ways to chat with [CodeRabbit](https://coderabbit.ai?utm_source=oss&utm_medium=github&utm_campaign=srbhr/Resume-Matcher&utm_content=348):\n\n- Review comments: Directly reply to a review comment made by CodeRabbit. Example:\n  - `I pushed a fix in commit <commit_id>, please review it.`\n  - `Generate unit testing code for this file.`\n  - `Open a follow-up GitHub issue for this discussion.`\n- Files and specific lines of code (under the \"Files changed\" tab): Tag `@coderabbitai` in a new review comment at the desired location with your query. Examples:\n  - `@coderabbitai generate unit testing code for this file.`\n  -\t`@coderabbitai modularize this function.`\n- PR comments: Tag `@coderabbitai` in a new PR comment to ask questions about the PR branch. For the best results, please provide a very specific query, as very limited context is provided in this mode. Examples:\n  - `@coderabbitai gather interesting stats about this repository and render them as a table. Additionally, render a pie chart showing the language distribution in the codebase.`\n  - `@coderabbitai read src/utils.ts and generate unit testing code.`\n  - `@coderabbitai read the files in the src/scheduler package and generate a class diagram using mermaid and a README in the markdown format.`\n  - `@coderabbitai help me debug CodeRabbit configuration file.`\n\nNote: Be mindful of the bot's finite context window. It's strongly recommended to break down tasks such as reading entire modules into smaller chunks. For a focused discussion, use review comments to chat about specific files and their changes, instead of using the PR comments.\n\n### CodeRabbit Commands (Invoked using PR comments)\n\n- `@coderabbitai pause` to pause the reviews on a PR.\n- `@coderabbitai resume` to resume the paused reviews.\n- `@coderabbitai review` to trigger an incremental review. This is useful when automatic reviews are disabled for the repository.\n- `@coderabbitai full review` to do a full review from scratch and review all the files again.\n- `@coderabbitai summary` to regenerate the summary of the PR.\n- `@coderabbitai generate docstrings` to [generate docstrings](https://docs.coderabbit.ai/finishing-touches/docstrings) for this PR.\n- `@coderabbitai generate sequence diagram` to generate a sequence diagram of the changes in this PR.\n- `@coderabbitai resolve` resolve all the CodeRabbit review comments.\n- `@coderabbitai configuration` to show the current CodeRabbit configuration for the repository.\n- `@coderabbitai help` to get help.\n\n### Other keywords and placeholders\n\n- Add `@coderabbitai ignore` anywhere in the PR description to prevent this PR from being reviewed.\n- Add `@coderabbitai summary` to generate the high-level summary at a specific location in the PR description.\n- Add `@coderabbitai` anywhere in the PR title to generate the title automatically.\n\n### CodeRabbit Configuration File (`.coderabbit.yaml`)\n\n- You can programmatically configure CodeRabbit by adding a `.coderabbit.yaml` file to the root of your repository.\n- Please see the [configuration documentation](https://docs.coderabbit.ai/guides/configure-coderabbit) for more information.\n- If your editor has YAML language server enabled, you can add the path at the top of this file to enable auto-completion and validation: `# yaml-language-server: $schema=https://coderabbit.ai/integrations/schema.v2.json`\n\n### Documentation and Community\n\n- Visit our [Documentation](https://docs.coderabbit.ai) for detailed information on how to use CodeRabbit.\n- Join our [Discord Community](http://discord.gg/coderabbit) to get help, request features, and share feedback.\n- Follow us on [X/Twitter](https://twitter.com/coderabbitai) for updates and announcements.\n\n</details>\n\n<!-- tips_end -->"
        }
      ],
      "relationships": [
        {
          "objectId": "coderabbitai[bot]",
          "qualifier": "commented-by"
        },
        {
          "objectId": "348",
          "qualifier": "on"
        }
      ],
      "id": "IC_kwDODyNbyM6oqINI"
    },
    {
      "type": "merge_pull_request",
      "time": "2025-04-25T14:24:37Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "348",
          "qualifier": "merged-on-pull_request"
        }
      ],
      "id": "ME_lADODyNbyM6z9iTSzwAAAAQNkLYp"
    },
    {
      "type": "close_pull_request",
      "time": "2025-04-25T14:24:38Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "348",
          "qualifier": "closed-on-pull_request"
        }
      ],
      "id": "CE_lADODyNbyM6z9iTSzwAAAAQNkLZs"
    },
    {
      "type": "commit",
      "time": "2025-04-22T19:32:56Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "authored-by"
        },
        {
          "objectId": "1bf36b27d6f1f9996c5fc6fbffde03f700b313a7",
          "qualifier": "sha"
        },
        {
          "objectId": "347",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDFiZjM2YjI3ZDZmMWY5OTk2YzVmYzZmYmZmZGUwM2Y3MDBiMzEzYTc"
    },
    {
      "type": "comment_pull_request",
      "time": "2025-04-22T19:33:56Z",
      "attributes": [
        {
          "name": "comment",
          "value": "<!-- This is an auto-generated comment: summarize by coderabbit.ai -->\n<!-- walkthrough_start -->\n\n## Walkthrough\n\nThe `requirements.txt` file was updated to upgrade the versions of nearly all listed Python packages to their newer releases. This includes a wide range of libraries across data processing, NLP, visualization, and utility packages. The Spacy language model URLs were also simplified by removing SHA256 hashes. No new packages were added or removed, and there were no changes to source code or exported entities\u2014only package version numbers and some URLs were modified.\n\n## Changes\n\n| File(s)                | Change Summary                                                                                         |\n|------------------------|-------------------------------------------------------------------------------------------------------|\n| requirements.txt       | Upgraded versions for all listed Python packages and simplified Spacy model URLs by removing SHA256 hashes. No packages were added or removed; only version numbers and URLs were updated. |\n\n## Poem\n\n> \ud83d\udc07\u2728\n> Packages hop to versions new,\n> Dependencies fresh as morning dew.\n> Spacy\u2019s models shed their hash,\n> URLs now a lighter stash.\n> No code was changed, just lists refined,\n> A modern touch for peace of mind.\n> The rabbit smiles\u2014upgrade complete!\n>\n\n<!-- walkthrough_end -->\n<!-- internal state start -->\n\n\n<!-- DwQgtGAEAqAWCWBnSTIEMB26CuAXA9mAOYCmGJATmriQCaQDG+Ats2bgFyQAOFk+AIwBWJBrngA3EsgEBPRvlqU0AgfFwA6NPEgQAfACgjoCEYDEZyAAUASpETZWaCrKNwSPbABsvkCiQBHbGlcSHFcLzpIACJ/IPh/NgxcRA1cAA9caMgAdzRkBwFmdRp6OTDYD2xESkgAOTQ8oSRYAEYABnRkW0gMRwFagGYAFgB2FCxcSsgbaUcSMABZagZKvn9ufER1fBcNGGnmbSxVzFIJitQe1Cmq7lpqD3wAM3QfCo8veAEqCnhpSBfRClC63PyBbAJEhJFJpTKQZ7wSJhfAfBKAx7AyBSCjbfAYVL1VFoWi0dTwfFoXxKRAMP7ccT4gA04K8j3oSAc0hZu3s3FE8ERDEgSlw2i8yBU+DwH0g2Hu7MB31+/2QOUoHl4+Ak8CUtH27msdlo+ABGHwoUQ/IYgvkYNwsn5/FepwwpBZWs2NXortIiBZNGB8DdE2BFGwYgpBJ5fFWogA1kDQkxmNxIoyMAa1h5nB5zfY6SQyIhYBb/QolPYMPBuPyUjGEdgKLc+MHnrsjhmJgwvNg9ZABrJ8fQweaaOgBNLQvKHuIQ18fs55Di8QSNEZ9MZwFAyPQXjgCMQyMoQSmYVxePxhKJxFIZPImEoqKp1FodJuTFA4KhUJgD4RSHIKhTxYc8/EaexHCOFwBwfRRlBfTRtF0MBDC3UwDDiSFEnYVIMk4AxoiIgwLEgABBABJI8gMVBwnBg/dfWkNxpgAAywqEYTwzJWIRJEPDyZAZ0VAg5W4IgqErchnC8eQqV8JMoisWQpnxHg0AYeM0HOFco2QUTyHVdYSEifJpCzH8MB7PsASYfwlUXP4AQcVYukgViqTFBJWJZDzcFwXEfPcgY0DwQVvEQaVuGGILWIEL4MHjShYvipBYoYDTKgIfAJXS6gqXwIhgnSyhxERdLYGcGpcDAc0KCOL4AC9kt8nt4E09L8WeG8o065JpQobhZHS2Qexa9yGFkNhmBG7KvEaoLMHoI4MHkC01nLfxnkiSMQ22IhqyFTBQl0tSBEcbhCUNABlbgNPkNk3WwbSPGYeCJXcsgwDshZ1QEMBmFoXils+jBvt2X6SH+xAZtyDUxNnKJngoFhsUoVdIEGDQADYNE6USsdGPHcnUWB7HgVMvkRKIAFUbAAGWQRJtWDIhIGugAJMiACYAFZscgSqS3M9mSBxKl1M0l6mZMkTUTqemrHQDB6FnNAeBRhhpG2ed4CS9yADE0CSihYu2iHcDN/F/PwHLEFioh1FoARYoAcXUZTVIwWKRB8WRERLH3BAXH3IoJOMjli+N4ByJAcpxWLHqIR9pET9JmC8WLlgoeMTRyb3fM7NMLRDwuIbAdRStt3LC6bZgmyF2BYvIXAcl2eN0mbi7ht8u6pcdt1YrulX8iH6hYAkKldUeMeph79yrCRLx8ByIfl4iefWN4aRKiB3uUYIc7niH2RnBR1fe9kJQOt85SiC4k/AZXsGSEyYs9Ni5TKfGrfHSq1mT73GPpfbglQC7uSGl7MAiMwqZ0vrgBat9ZAAE0yKLHprFLaGorIAN8v4Ugnc8EQhCPbPB7Um54PuIgMAQ1Yq0j1uoMApkKDgNYvQ2hvkYbOBqvgfkrCYZHG4HQqK2wxYkDoX3TeVp7pMMKqQQKnDcSyToTVTAY52RgBoDxThAUSBoAzuoFR/h9FfBqhlCge93Jhj0QYmqr8Aqjx0cY2xYBnjGx/tYkxjCKYvXBrsMkGBMRGJsaYsASVZDymCV4mqOJxAZS8GARAXwnyxRoIEm0DpUkICslk4xtBNg5TEHA9yc1EElICLQGavkHT8lNtUx0rMAD69j374lISUxqatUmNWXvE2K2AdR2VYU2Hw3xBixUnsk6gux2msUEioeAsU8i4FWCaIgsVGo1iESyEG7ESCbGbGyF2cN7LyTEhJEkUQDIkCMmjXEekWSRTYCTKYkAjhCF5KdLAwZCxcSzB4VibjgTQgGEDSWWlziCXOZJJGKNmDoDuRjJgBIHHBlCKxAAfu0DQ3McW8VEurRE6QoisWxVjbGrF/n8HFu8EgzxupiBQJKBQqZ/BgO2FIN58EWHwEatQKMzoRT7N3GQG0AJY6vPzMzSZyBeQkjJBmGQJAhwq0RQKpihI6aMwRLyW690uVKA+kZDw2xKaCn+GUeQ0rWaQFfmmdq6h2Zcz5gLRuIs6iokMuC6WJycykiiLyaVdAADc/AMCyTVWpPozABi4mVvQLVap4bCVKOuIwJFLBkS8DQYCekUSymvmyXNbTBV2t2CCXk3BsCpWFOwckzEDAevIFSjVYaI1oHpTeb1Ol0YCqtAKI6ir42QETaCNiHEcLJG4pbPikQWQ5AQK5VAY4EWRSbFrCsHhETIjLc2G1vJC3OBtXW8Q5lCLEQMJuAwn5bWqv3KFQ8gETxRDPOwLgVAciQXovIcoKdnxqCQu+VC17twsuKLgRpupECNP8DqG5dBGnAm4ShNCN7WgCGeIMbGAhuajFoNjZ4rRngAE5SPYwYLzZ4DACMYeeEodogxnijHaO0AQgxWiDDQOMK9N6zzqEg7QaDsH/jqloM01V+ggA -->\n\n<!-- internal state end -->\n<!-- tips_start -->\n\n---\n\n\n\n<details>\n<summary>\ud83e\udea7 Tips</summary>\n\n### Chat\n\nThere are 3 ways to chat with [CodeRabbit](https://coderabbit.ai?utm_source=oss&utm_medium=github&utm_campaign=srbhr/Resume-Matcher&utm_content=347):\n\n- Review comments: Directly reply to a review comment made by CodeRabbit. Example:\n  - `I pushed a fix in commit <commit_id>, please review it.`\n  - `Generate unit testing code for this file.`\n  - `Open a follow-up GitHub issue for this discussion.`\n- Files and specific lines of code (under the \"Files changed\" tab): Tag `@coderabbitai` in a new review comment at the desired location with your query. Examples:\n  - `@coderabbitai generate unit testing code for this file.`\n  -\t`@coderabbitai modularize this function.`\n- PR comments: Tag `@coderabbitai` in a new PR comment to ask questions about the PR branch. For the best results, please provide a very specific query, as very limited context is provided in this mode. Examples:\n  - `@coderabbitai gather interesting stats about this repository and render them as a table. Additionally, render a pie chart showing the language distribution in the codebase.`\n  - `@coderabbitai read src/utils.ts and generate unit testing code.`\n  - `@coderabbitai read the files in the src/scheduler package and generate a class diagram using mermaid and a README in the markdown format.`\n  - `@coderabbitai help me debug CodeRabbit configuration file.`\n\nNote: Be mindful of the bot's finite context window. It's strongly recommended to break down tasks such as reading entire modules into smaller chunks. For a focused discussion, use review comments to chat about specific files and their changes, instead of using the PR comments.\n\n### CodeRabbit Commands (Invoked using PR comments)\n\n- `@coderabbitai pause` to pause the reviews on a PR.\n- `@coderabbitai resume` to resume the paused reviews.\n- `@coderabbitai review` to trigger an incremental review. This is useful when automatic reviews are disabled for the repository.\n- `@coderabbitai full review` to do a full review from scratch and review all the files again.\n- `@coderabbitai summary` to regenerate the summary of the PR.\n- `@coderabbitai generate docstrings` to [generate docstrings](https://docs.coderabbit.ai/finishing-touches/docstrings) for this PR.\n- `@coderabbitai resolve` resolve all the CodeRabbit review comments.\n- `@coderabbitai configuration` to show the current CodeRabbit configuration for the repository.\n- `@coderabbitai help` to get help.\n\n### Other keywords and placeholders\n\n- Add `@coderabbitai ignore` anywhere in the PR description to prevent this PR from being reviewed.\n- Add `@coderabbitai summary` to generate the high-level summary at a specific location in the PR description.\n- Add `@coderabbitai` anywhere in the PR title to generate the title automatically.\n\n### CodeRabbit Configuration File (`.coderabbit.yaml`)\n\n- You can programmatically configure CodeRabbit by adding a `.coderabbit.yaml` file to the root of your repository.\n- Please see the [configuration documentation](https://docs.coderabbit.ai/guides/configure-coderabbit) for more information.\n- If your editor has YAML language server enabled, you can add the path at the top of this file to enable auto-completion and validation: `# yaml-language-server: $schema=https://coderabbit.ai/integrations/schema.v2.json`\n\n### Documentation and Community\n\n- Visit our [Documentation](https://docs.coderabbit.ai) for detailed information on how to use CodeRabbit.\n- Join our [Discord Community](http://discord.gg/coderabbit) to get help, request features, and share feedback.\n- Follow us on [X/Twitter](https://twitter.com/coderabbitai) for updates and announcements.\n\n</details>\n\n<!-- tips_end -->"
        }
      ],
      "relationships": [
        {
          "objectId": "coderabbitai[bot]",
          "qualifier": "commented-by"
        },
        {
          "objectId": "347",
          "qualifier": "on"
        }
      ],
      "id": "IC_kwDODyNbyM6oOMrN"
    },
    {
      "type": "comment_review",
      "time": "2025-04-22T19:35:40Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "coderabbitai[bot]",
          "qualifier": "commented-by"
        },
        {
          "objectId": "347",
          "qualifier": "for-pull-request"
        }
      ],
      "id": "2785141612"
    },
    {
      "type": "close_pull_request",
      "time": "2025-04-22T20:04:41Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Nawajish10",
          "qualifier": "authored-by"
        },
        {
          "objectId": "347",
          "qualifier": "closed-on-pull_request"
        }
      ],
      "id": "CE_lADODyNbyM6zhqf0zwAAAAQKtjQ9"
    },
    {
      "type": "commit",
      "time": "2025-04-20T18:54:08Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "authored-by"
        },
        {
          "objectId": "f72b58eb67965d5b4610c5b21f1a4ae9d59c1efb",
          "qualifier": "sha"
        },
        {
          "objectId": "345",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKGY3MmI1OGViNjc5NjVkNWI0NjEwYzViMjFmMWE0YWU5ZDU5YzFlZmI"
    },
    {
      "type": "comment_pull_request",
      "time": "2025-04-20T18:57:28Z",
      "attributes": [
        {
          "name": "comment",
          "value": "<!-- This is an auto-generated comment: summarize by coderabbit.ai -->\n<!-- This is an auto-generated comment: skip review by coderabbit.ai -->\n\n> [!IMPORTANT]\n> ## Review skipped\n> \n> Auto reviews are disabled on base/target branches other than the default branch.\n> \n> \n> \n> Please check the settings in the CodeRabbit UI or the `.coderabbit.yaml` file in this repository. To trigger a single review, invoke the `@coderabbitai review` command.\n> \n> You can disable this status message by setting the `reviews.review_status` to `false` in the CodeRabbit configuration file.\n\n<!-- end of auto-generated comment: skip review by coderabbit.ai -->\n<!-- tips_start -->\n\n---\n\n\n\n<details>\n<summary>\ud83e\udea7 Tips</summary>\n\n### Chat\n\nThere are 3 ways to chat with [CodeRabbit](https://coderabbit.ai?utm_source=oss&utm_medium=github&utm_campaign=srbhr/Resume-Matcher&utm_content=345):\n\n- Review comments: Directly reply to a review comment made by CodeRabbit. Example:\n  - `I pushed a fix in commit <commit_id>, please review it.`\n  - `Generate unit testing code for this file.`\n  - `Open a follow-up GitHub issue for this discussion.`\n- Files and specific lines of code (under the \"Files changed\" tab): Tag `@coderabbitai` in a new review comment at the desired location with your query. Examples:\n  - `@coderabbitai generate unit testing code for this file.`\n  -\t`@coderabbitai modularize this function.`\n- PR comments: Tag `@coderabbitai` in a new PR comment to ask questions about the PR branch. For the best results, please provide a very specific query, as very limited context is provided in this mode. Examples:\n  - `@coderabbitai gather interesting stats about this repository and render them as a table. Additionally, render a pie chart showing the language distribution in the codebase.`\n  - `@coderabbitai read src/utils.ts and generate unit testing code.`\n  - `@coderabbitai read the files in the src/scheduler package and generate a class diagram using mermaid and a README in the markdown format.`\n  - `@coderabbitai help me debug CodeRabbit configuration file.`\n\nNote: Be mindful of the bot's finite context window. It's strongly recommended to break down tasks such as reading entire modules into smaller chunks. For a focused discussion, use review comments to chat about specific files and their changes, instead of using the PR comments.\n\n### CodeRabbit Commands (Invoked using PR comments)\n\n- `@coderabbitai pause` to pause the reviews on a PR.\n- `@coderabbitai resume` to resume the paused reviews.\n- `@coderabbitai review` to trigger an incremental review. This is useful when automatic reviews are disabled for the repository.\n- `@coderabbitai full review` to do a full review from scratch and review all the files again.\n- `@coderabbitai summary` to regenerate the summary of the PR.\n- `@coderabbitai generate docstrings` to [generate docstrings](https://docs.coderabbit.ai/finishing-touches/docstrings) for this PR.\n- `@coderabbitai resolve` resolve all the CodeRabbit review comments.\n- `@coderabbitai configuration` to show the current CodeRabbit configuration for the repository.\n- `@coderabbitai help` to get help.\n\n### Other keywords and placeholders\n\n- Add `@coderabbitai ignore` anywhere in the PR description to prevent this PR from being reviewed.\n- Add `@coderabbitai summary` to generate the high-level summary at a specific location in the PR description.\n- Add `@coderabbitai` anywhere in the PR title to generate the title automatically.\n\n### CodeRabbit Configuration File (`.coderabbit.yaml`)\n\n- You can programmatically configure CodeRabbit by adding a `.coderabbit.yaml` file to the root of your repository.\n- Please see the [configuration documentation](https://docs.coderabbit.ai/guides/configure-coderabbit) for more information.\n- If your editor has YAML language server enabled, you can add the path at the top of this file to enable auto-completion and validation: `# yaml-language-server: $schema=https://coderabbit.ai/integrations/schema.v2.json`\n\n### Documentation and Community\n\n- Visit our [Documentation](https://docs.coderabbit.ai) for detailed information on how to use CodeRabbit.\n- Join our [Discord Community](http://discord.gg/coderabbit) to get help, request features, and share feedback.\n- Follow us on [X/Twitter](https://twitter.com/coderabbitai) for updates and announcements.\n\n</details>\n\n<!-- tips_end -->"
        }
      ],
      "relationships": [
        {
          "objectId": "coderabbitai[bot]",
          "qualifier": "commented-by"
        },
        {
          "objectId": "345",
          "qualifier": "on"
        }
      ],
      "id": "IC_kwDODyNbyM6n7IDc"
    },
    {
      "type": "commit",
      "time": "2025-04-20T18:57:45Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "authored-by"
        },
        {
          "objectId": "6d443bd9d2c50337b50b38226ba27728586d955c",
          "qualifier": "sha"
        },
        {
          "objectId": "345",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDZkNDQzYmQ5ZDJjNTAzMzdiNTBiMzgyMjZiYTI3NzI4NTg2ZDk1NWM"
    },
    {
      "type": "merge_pull_request",
      "time": "2025-04-20T19:04:45Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "345",
          "qualifier": "merged-on-pull_request"
        }
      ],
      "id": "ME_lADODyNbyM6zPdKczwAAAAQJEUGM"
    },
    {
      "type": "close_pull_request",
      "time": "2025-04-20T19:04:45Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "345",
          "qualifier": "closed-on-pull_request"
        }
      ],
      "id": "CE_lADODyNbyM6zPdKczwAAAAQJEUGQ"
    },
    {
      "type": "commit",
      "time": "2025-04-19T18:16:49Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "authored-by"
        },
        {
          "objectId": "fa2c02df0acf2d4fb807161b683970c2c9d38d26",
          "qualifier": "sha"
        },
        {
          "objectId": "344",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKGZhMmMwMmRmMGFjZjJkNGZiODA3MTYxYjY4Mzk3MGMyYzlkMzhkMjY"
    },
    {
      "type": "comment_pull_request",
      "time": "2025-04-19T18:18:05Z",
      "attributes": [
        {
          "name": "comment",
          "value": "<!-- This is an auto-generated comment: summarize by coderabbit.ai -->\n<!-- This is an auto-generated comment: skip review by coderabbit.ai -->\n\n> [!IMPORTANT]\n> ## Review skipped\n> \n> Auto reviews are disabled on base/target branches other than the default branch.\n> \n> \n> \n> Please check the settings in the CodeRabbit UI or the `.coderabbit.yaml` file in this repository. To trigger a single review, invoke the `@coderabbitai review` command.\n> \n> You can disable this status message by setting the `reviews.review_status` to `false` in the CodeRabbit configuration file.\n\n<!-- end of auto-generated comment: skip review by coderabbit.ai -->\n<!-- tips_start -->\n\n---\n\n\n\n<details>\n<summary>\ud83e\udea7 Tips</summary>\n\n### Chat\n\nThere are 3 ways to chat with [CodeRabbit](https://coderabbit.ai?utm_source=oss&utm_medium=github&utm_campaign=srbhr/Resume-Matcher&utm_content=344):\n\n- Review comments: Directly reply to a review comment made by CodeRabbit. Example:\n  - `I pushed a fix in commit <commit_id>, please review it.`\n  - `Generate unit testing code for this file.`\n  - `Open a follow-up GitHub issue for this discussion.`\n- Files and specific lines of code (under the \"Files changed\" tab): Tag `@coderabbitai` in a new review comment at the desired location with your query. Examples:\n  - `@coderabbitai generate unit testing code for this file.`\n  -\t`@coderabbitai modularize this function.`\n- PR comments: Tag `@coderabbitai` in a new PR comment to ask questions about the PR branch. For the best results, please provide a very specific query, as very limited context is provided in this mode. Examples:\n  - `@coderabbitai gather interesting stats about this repository and render them as a table. Additionally, render a pie chart showing the language distribution in the codebase.`\n  - `@coderabbitai read src/utils.ts and generate unit testing code.`\n  - `@coderabbitai read the files in the src/scheduler package and generate a class diagram using mermaid and a README in the markdown format.`\n  - `@coderabbitai help me debug CodeRabbit configuration file.`\n\nNote: Be mindful of the bot's finite context window. It's strongly recommended to break down tasks such as reading entire modules into smaller chunks. For a focused discussion, use review comments to chat about specific files and their changes, instead of using the PR comments.\n\n### CodeRabbit Commands (Invoked using PR comments)\n\n- `@coderabbitai pause` to pause the reviews on a PR.\n- `@coderabbitai resume` to resume the paused reviews.\n- `@coderabbitai review` to trigger an incremental review. This is useful when automatic reviews are disabled for the repository.\n- `@coderabbitai full review` to do a full review from scratch and review all the files again.\n- `@coderabbitai summary` to regenerate the summary of the PR.\n- `@coderabbitai generate docstrings` to [generate docstrings](https://docs.coderabbit.ai/finishing-touches/docstrings) for this PR.\n- `@coderabbitai resolve` resolve all the CodeRabbit review comments.\n- `@coderabbitai configuration` to show the current CodeRabbit configuration for the repository.\n- `@coderabbitai help` to get help.\n\n### Other keywords and placeholders\n\n- Add `@coderabbitai ignore` anywhere in the PR description to prevent this PR from being reviewed.\n- Add `@coderabbitai summary` to generate the high-level summary at a specific location in the PR description.\n- Add `@coderabbitai` anywhere in the PR title to generate the title automatically.\n\n### CodeRabbit Configuration File (`.coderabbit.yaml`)\n\n- You can programmatically configure CodeRabbit by adding a `.coderabbit.yaml` file to the root of your repository.\n- Please see the [configuration documentation](https://docs.coderabbit.ai/guides/configure-coderabbit) for more information.\n- If your editor has YAML language server enabled, you can add the path at the top of this file to enable auto-completion and validation: `# yaml-language-server: $schema=https://coderabbit.ai/integrations/schema.v2.json`\n\n### Documentation and Community\n\n- Visit our [Documentation](https://docs.coderabbit.ai) for detailed information on how to use CodeRabbit.\n- Join our [Discord Community](http://discord.gg/coderabbit) to get help, request features, and share feedback.\n- Follow us on [X/Twitter](https://twitter.com/coderabbitai) for updates and announcements.\n\n</details>\n\n<!-- tips_end -->"
        }
      ],
      "relationships": [
        {
          "objectId": "coderabbitai[bot]",
          "qualifier": "commented-by"
        },
        {
          "objectId": "344",
          "qualifier": "on"
        }
      ],
      "id": "IC_kwDODyNbyM6n5SiJ"
    },
    {
      "type": "commit",
      "time": "2025-04-20T07:14:20Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "authored-by"
        },
        {
          "objectId": "b3af62273e0a9bb9fa1dfcdd5132006a22dbd36e",
          "qualifier": "sha"
        },
        {
          "objectId": "344",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKGIzYWY2MjI3M2UwYTliYjlmYTFkZmNkZDUxMzIwMDZhMjJkYmQzNmU"
    },
    {
      "type": "commit",
      "time": "2025-04-20T08:57:26Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "authored-by"
        },
        {
          "objectId": "4b483740be309b68e842397b0cbb69753a0dea7b",
          "qualifier": "sha"
        },
        {
          "objectId": "344",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDRiNDgzNzQwYmUzMDliNjhlODQyMzk3YjBjYmI2OTc1M2EwZGVhN2I"
    },
    {
      "type": "commit",
      "time": "2025-04-20T12:38:41Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "authored-by"
        },
        {
          "objectId": "7ea5b50aa41ef40d111fc9260e11d50e4b5e8930",
          "qualifier": "sha"
        },
        {
          "objectId": "344",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDdlYTViNTBhYTQxZWY0MGQxMTFmYzkyNjBlMTFkNTBlNGI1ZTg5MzA"
    },
    {
      "type": "merge_pull_request",
      "time": "2025-04-20T18:51:15Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "344",
          "qualifier": "merged-on-pull_request"
        }
      ],
      "id": "ME_lADODyNbyM6zNO3rzwAAAAQJENU2"
    },
    {
      "type": "close_pull_request",
      "time": "2025-04-20T18:51:15Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "344",
          "qualifier": "closed-on-pull_request"
        }
      ],
      "id": "CE_lADODyNbyM6zNO3rzwAAAAQJENU7"
    },
    {
      "type": "commit",
      "time": "2025-04-19T16:32:36Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "authored-by"
        },
        {
          "objectId": "12848699494a28f76c34982ef872a824fb32036d",
          "qualifier": "sha"
        },
        {
          "objectId": "343",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDEyODQ4Njk5NDk0YTI4Zjc2YzM0OTgyZWY4NzJhODI0ZmIzMjAzNmQ"
    },
    {
      "type": "commit",
      "time": "2025-04-19T16:32:45Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "authored-by"
        },
        {
          "objectId": "8eea5e0838e87f843ee2617b39917e06e0050d26",
          "qualifier": "sha"
        },
        {
          "objectId": "343",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDhlZWE1ZTA4MzhlODdmODQzZWUyNjE3YjM5OTE3ZTA2ZTAwNTBkMjY"
    },
    {
      "type": "commit",
      "time": "2025-04-19T16:34:50Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "authored-by"
        },
        {
          "objectId": "b8b1bb497e266f586e8b0ad50a324d9704b0be9f",
          "qualifier": "sha"
        },
        {
          "objectId": "343",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKGI4YjFiYjQ5N2UyNjZmNTg2ZThiMGFkNTBhMzI0ZDk3MDRiMGJlOWY"
    },
    {
      "type": "comment_pull_request",
      "time": "2025-04-19T16:35:14Z",
      "attributes": [
        {
          "name": "comment",
          "value": "<!-- This is an auto-generated comment: summarize by coderabbit.ai -->\n<!-- walkthrough_start -->\n\n## Walkthrough\n\nThis update represents a major refactor and re-architecture of the project. The previous codebase, which was primarily structured around a Streamlit-based resume matcher application with numerous utility scripts and NLP processing modules, has been almost entirely removed. In its place, a new backend API is introduced, built using FastAPI, SQLAlchemy ORM models, and modern Python packaging practices. The new backend includes endpoints for health checks and resume uploads, database models for users, jobs, and resumes, and a service layer for file conversion and storage. All legacy scripts, Streamlit apps, and related utilities have been deleted.\n\n## Changes\n\n| Files/Paths                                     | Change Summary |\n|-------------------------------------------------|---------------|\n| `.gitignore`                                    | Updated ignored files and directories; removed some paths and added new ones for Python and Cursor. |\n| `.pre-commit-config.yaml`, `build.dockerfile`, `docker-compose.yml` | Removed pre-commit hooks and all Docker-related files/configuration. |\n| `requirements.txt`                              | Overhauled dependency list: removed data science/NLP/Streamlit packages, added modern web/API stack. |\n| `README.md`                                     | Replaced full documentation with a single line: \"Veridis Quo\". |\n| `Demo/DemoData.py`                              | Deleted static data source containing sample jobs and resumes. |\n| `run_first.py`, `resume_matcher/`, `scripts/`, `streamlit_app.py`, `streamlit_interactive.py`, `streamlit_second.py` | Deleted all legacy scripts, data extractors, processors, parsers, utilities, and all Streamlit-based applications. |\n| `app/main.py`, `app/base.py`                    | Added new FastAPI application entry point and app factory with middleware, exception handlers, and static file serving. |\n| `app/api/__init__.py`, `app/api/middleware.py`, `app/api/router/health.py`, `app/api/router/v1/__init__.py`, `app/api/router/v1/resume.py` | Introduced new API modules: health check, versioned routing, resume upload endpoint, and request ID middleware. |\n| `app/core/__init__.py`, `app/core/config.py`, `app/core/database.py`, `app/core/exceptions.py` | Added application core: configuration, singleton database connection, session provider, and exception handlers. |\n| `app/models/__init__.py`, `app/models/base.py`, `app/models/association.py`, `app/models/job.py`, `app/models/resume.py`, `app/models/user.py` | Introduced new SQLAlchemy ORM models for users, jobs, resumes, and their associations. |\n| `app/services/resume_service.py`                | Added service for converting uploaded resume files to Markdown and storing them in the database. |\n| `app/utils/utils.py`                            | Added utility for database session management. |\n\n## Sequence Diagram(s)\n\n```mermaid\nsequenceDiagram\n    participant Client\n    participant FastAPIApp\n    participant RequestIDMiddleware\n    participant ResumeService\n    participant Database\n\n    Client->>FastAPIApp: POST /api/v1/resume/upload (file)\n    FastAPIApp->>RequestIDMiddleware: Process request, generate request_id\n    RequestIDMiddleware->>FastAPIApp: Pass request with request_id\n    FastAPIApp->>ResumeService: convert_and_store_resume(file_bytes, file_type, filename)\n    ResumeService->>Database: Store resume content and metadata\n    Database-->>ResumeService: Confirm storage, return resume_id\n    ResumeService-->>FastAPIApp: Return resume_id\n    FastAPIApp-->>Client: Respond with status and resume_id\n```\n\n```mermaid\nsequenceDiagram\n    participant Client\n    participant FastAPIApp\n    participant Database\n\n    Client->>FastAPIApp: GET /ping\n    FastAPIApp->>Database: Execute SELECT 1\n    Database-->>FastAPIApp: Return result\n    FastAPIApp-->>Client: Respond with {\"message\": \"pong\", \"db_status\": \"...\"}\n```\n\n## Poem\n\n> ```\n> A new warren built, the old one swept,\n> Where Streamlit fields and scripts once slept.\n> Now FastAPI burrows deep,\n> With models, routes, and middleware to keep.\n> Old carrots gone, new seeds are sown,\n> The backend garden stands alone.\n> Veridis Quo, the journey\u2019s begun\u2014let\u2019s hop along, there\u2019s work to be done!\n> ```\n\n\n<!-- walkthrough_end -->\n\n<!-- announcements_start -->\n\n> [!TIP]\n> <details>\n> <summary>\u26a1\ud83d\udcac Agentic Chat (Pro Plan, General Availability)</summary>\n> \n> - We're introducing multi-step agentic chat in review comments and issue comments, within and outside of PR's. This feature enhances review and issue discussions with the CodeRabbit agentic chat by enabling advanced interactions, including the ability to create pull requests directly from comments and add commits to existing pull requests.\n> \n> </details>\n\n<!-- announcements_end -->\n<!-- internal state start -->\n\n\n<!--  -->\n\n<!-- internal state end -->\n<!-- finishing_touch_checkbox_start -->\n\n<details>\n<summary>\u2728 Finishing Touches</summary>\n\n- [ ] <!-- {\"checkboxId\": \"7962f53c-55bc-4827-bfbf-6a18da830691\"} --> \ud83d\udcdd Generate Docstrings\n\n</details>\n\n<!-- finishing_touch_checkbox_end -->\n<!-- tips_start -->\n\n---\n\n\n\n<details>\n<summary>\ud83e\udea7 Tips</summary>\n\n### Chat\n\nThere are 3 ways to chat with [CodeRabbit](https://coderabbit.ai?utm_source=oss&utm_medium=github&utm_campaign=srbhr/Resume-Matcher&utm_content=343):\n\n- Review comments: Directly reply to a review comment made by CodeRabbit. Example:\n  - `I pushed a fix in commit <commit_id>, please review it.`\n  - `Generate unit testing code for this file.`\n  - `Open a follow-up GitHub issue for this discussion.`\n- Files and specific lines of code (under the \"Files changed\" tab): Tag `@coderabbitai` in a new review comment at the desired location with your query. Examples:\n  - `@coderabbitai generate unit testing code for this file.`\n  -\t`@coderabbitai modularize this function.`\n- PR comments: Tag `@coderabbitai` in a new PR comment to ask questions about the PR branch. For the best results, please provide a very specific query, as very limited context is provided in this mode. Examples:\n  - `@coderabbitai gather interesting stats about this repository and render them as a table. Additionally, render a pie chart showing the language distribution in the codebase.`\n  - `@coderabbitai read src/utils.ts and generate unit testing code.`\n  - `@coderabbitai read the files in the src/scheduler package and generate a class diagram using mermaid and a README in the markdown format.`\n  - `@coderabbitai help me debug CodeRabbit configuration file.`\n\nNote: Be mindful of the bot's finite context window. It's strongly recommended to break down tasks such as reading entire modules into smaller chunks. For a focused discussion, use review comments to chat about specific files and their changes, instead of using the PR comments.\n\n### CodeRabbit Commands (Invoked using PR comments)\n\n- `@coderabbitai pause` to pause the reviews on a PR.\n- `@coderabbitai resume` to resume the paused reviews.\n- `@coderabbitai review` to trigger an incremental review. This is useful when automatic reviews are disabled for the repository.\n- `@coderabbitai full review` to do a full review from scratch and review all the files again.\n- `@coderabbitai summary` to regenerate the summary of the PR.\n- `@coderabbitai generate docstrings` to [generate docstrings](https://docs.coderabbit.ai/finishing-touches/docstrings) for this PR.\n- `@coderabbitai resolve` resolve all the CodeRabbit review comments.\n- `@coderabbitai configuration` to show the current CodeRabbit configuration for the repository.\n- `@coderabbitai help` to get help.\n\n### Other keywords and placeholders\n\n- Add `@coderabbitai ignore` anywhere in the PR description to prevent this PR from being reviewed.\n- Add `@coderabbitai summary` to generate the high-level summary at a specific location in the PR description.\n- Add `@coderabbitai` anywhere in the PR title to generate the title automatically.\n\n### CodeRabbit Configuration File (`.coderabbit.yaml`)\n\n- You can programmatically configure CodeRabbit by adding a `.coderabbit.yaml` file to the root of your repository.\n- Please see the [configuration documentation](https://docs.coderabbit.ai/guides/configure-coderabbit) for more information.\n- If your editor has YAML language server enabled, you can add the path at the top of this file to enable auto-completion and validation: `# yaml-language-server: $schema=https://coderabbit.ai/integrations/schema.v2.json`\n\n### Documentation and Community\n\n- Visit our [Documentation](https://docs.coderabbit.ai) for detailed information on how to use CodeRabbit.\n- Join our [Discord Community](http://discord.gg/coderabbit) to get help, request features, and share feedback.\n- Follow us on [X/Twitter](https://twitter.com/coderabbitai) for updates and announcements.\n\n</details>\n\n<!-- tips_end -->"
        }
      ],
      "relationships": [
        {
          "objectId": "coderabbitai[bot]",
          "qualifier": "commented-by"
        },
        {
          "objectId": "343",
          "qualifier": "on"
        }
      ],
      "id": "IC_kwDODyNbyM6n5JO3"
    },
    {
      "type": "comment_review",
      "time": "2025-04-19T16:38:55Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "coderabbitai[bot]",
          "qualifier": "commented-by"
        },
        {
          "objectId": "343",
          "qualifier": "for-pull-request"
        }
      ],
      "id": "2780028146"
    },
    {
      "type": "merge_pull_request",
      "time": "2025-04-19T16:52:01Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "343",
          "qualifier": "merged-on-pull_request"
        }
      ],
      "id": "ME_lADODyNbyM6zNBILzwAAAAQI5eMa"
    },
    {
      "type": "close_pull_request",
      "time": "2025-04-19T16:52:01Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "343",
          "qualifier": "closed-on-pull_request"
        }
      ],
      "id": "CE_lADODyNbyM6zNBILzwAAAAQI5eMd"
    },
    {
      "type": "commit",
      "time": "2025-04-17T14:10:00Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "srbhr",
          "qualifier": "authored-by"
        },
        {
          "objectId": "3670c6ce485967fd099a5862a5d7eca0ab5bde01",
          "qualifier": "sha"
        },
        {
          "objectId": "342",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDM2NzBjNmNlNDg1OTY3ZmQwOTlhNTg2MmE1ZDdlY2EwYWI1YmRlMDE"
    },
    {
      "type": "commit",
      "time": "2025-04-17T14:10:07Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "srbhr",
          "qualifier": "authored-by"
        },
        {
          "objectId": "2b60122a85fe8fa29514882e12af006f6cc4ceb5",
          "qualifier": "sha"
        },
        {
          "objectId": "342",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDJiNjAxMjJhODVmZThmYTI5NTE0ODgyZTEyYWYwMDZmNmNjNGNlYjU"
    },
    {
      "type": "comment_pull_request",
      "time": "2025-04-19T02:41:54Z",
      "attributes": [
        {
          "name": "comment",
          "value": "<!-- This is an auto-generated comment: summarize by coderabbit.ai -->\n<!-- This is an auto-generated comment: skip review by coderabbit.ai -->\n\n> [!IMPORTANT]\n> ## Review skipped\n> \n> Auto reviews are disabled on base/target branches other than the default branch.\n> \n> \n> \n> Please check the settings in the CodeRabbit UI or the `.coderabbit.yaml` file in this repository. To trigger a single review, invoke the `@coderabbitai review` command.\n> \n> You can disable this status message by setting the `reviews.review_status` to `false` in the CodeRabbit configuration file.\n\n<!-- end of auto-generated comment: skip review by coderabbit.ai -->\n<!-- tips_start -->\n\n---\n\n\n\n<details>\n<summary>\ud83e\udea7 Tips</summary>\n\n### Chat\n\nThere are 3 ways to chat with [CodeRabbit](https://coderabbit.ai?utm_source=oss&utm_medium=github&utm_campaign=srbhr/Resume-Matcher&utm_content=342):\n\n- Review comments: Directly reply to a review comment made by CodeRabbit. Example:\n  - `I pushed a fix in commit <commit_id>, please review it.`\n  - `Generate unit testing code for this file.`\n  - `Open a follow-up GitHub issue for this discussion.`\n- Files and specific lines of code (under the \"Files changed\" tab): Tag `@coderabbitai` in a new review comment at the desired location with your query. Examples:\n  - `@coderabbitai generate unit testing code for this file.`\n  -\t`@coderabbitai modularize this function.`\n- PR comments: Tag `@coderabbitai` in a new PR comment to ask questions about the PR branch. For the best results, please provide a very specific query, as very limited context is provided in this mode. Examples:\n  - `@coderabbitai gather interesting stats about this repository and render them as a table. Additionally, render a pie chart showing the language distribution in the codebase.`\n  - `@coderabbitai read src/utils.ts and generate unit testing code.`\n  - `@coderabbitai read the files in the src/scheduler package and generate a class diagram using mermaid and a README in the markdown format.`\n  - `@coderabbitai help me debug CodeRabbit configuration file.`\n\nNote: Be mindful of the bot's finite context window. It's strongly recommended to break down tasks such as reading entire modules into smaller chunks. For a focused discussion, use review comments to chat about specific files and their changes, instead of using the PR comments.\n\n### CodeRabbit Commands (Invoked using PR comments)\n\n- `@coderabbitai pause` to pause the reviews on a PR.\n- `@coderabbitai resume` to resume the paused reviews.\n- `@coderabbitai review` to trigger an incremental review. This is useful when automatic reviews are disabled for the repository.\n- `@coderabbitai full review` to do a full review from scratch and review all the files again.\n- `@coderabbitai summary` to regenerate the summary of the PR.\n- `@coderabbitai generate docstrings` to [generate docstrings](https://docs.coderabbit.ai/finishing-touches/docstrings) for this PR.\n- `@coderabbitai resolve` resolve all the CodeRabbit review comments.\n- `@coderabbitai configuration` to show the current CodeRabbit configuration for the repository.\n- `@coderabbitai help` to get help.\n\n### Other keywords and placeholders\n\n- Add `@coderabbitai ignore` anywhere in the PR description to prevent this PR from being reviewed.\n- Add `@coderabbitai summary` to generate the high-level summary at a specific location in the PR description.\n- Add `@coderabbitai` anywhere in the PR title to generate the title automatically.\n\n### CodeRabbit Configuration File (`.coderabbit.yaml`)\n\n- You can programmatically configure CodeRabbit by adding a `.coderabbit.yaml` file to the root of your repository.\n- Please see the [configuration documentation](https://docs.coderabbit.ai/guides/configure-coderabbit) for more information.\n- If your editor has YAML language server enabled, you can add the path at the top of this file to enable auto-completion and validation: `# yaml-language-server: $schema=https://coderabbit.ai/integrations/schema.v2.json`\n\n### Documentation and Community\n\n- Visit our [Documentation](https://docs.coderabbit.ai) for detailed information on how to use CodeRabbit.\n- Join our [Discord Community](http://discord.gg/coderabbit) to get help, request features, and share feedback.\n- Follow us on [X/Twitter](https://twitter.com/coderabbitai) for updates and announcements.\n\n</details>\n\n<!-- tips_end -->"
        }
      ],
      "relationships": [
        {
          "objectId": "coderabbitai[bot]",
          "qualifier": "commented-by"
        },
        {
          "objectId": "342",
          "qualifier": "on"
        }
      ],
      "id": "IC_kwDODyNbyM6n4BNS"
    },
    {
      "type": "merge_pull_request",
      "time": "2025-04-19T02:42:43Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "342",
          "qualifier": "merged-on-pull_request"
        }
      ],
      "id": "ME_lADODyNbyM6zLZE_zwAAAAQIx6_D"
    },
    {
      "type": "close_pull_request",
      "time": "2025-04-19T02:42:43Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "342",
          "qualifier": "closed-on-pull_request"
        }
      ],
      "id": "CE_lADODyNbyM6zLZE_zwAAAAQIx6_J"
    },
    {
      "type": "commit",
      "time": "2025-04-15T15:07:49Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "srbhr",
          "qualifier": "authored-by"
        },
        {
          "objectId": "64045941650aeed8386e039757e63df6d19f5f6f",
          "qualifier": "sha"
        },
        {
          "objectId": "341",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDY0MDQ1OTQxNjUwYWVlZDgzODZlMDM5NzU3ZTYzZGY2ZDE5ZjVmNmY"
    },
    {
      "type": "merge_pull_request",
      "time": "2025-04-15T15:08:55Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "341",
          "qualifier": "merged-on-pull_request"
        }
      ],
      "id": "ME_lADODyNbyM6ynyrIzwAAAAQFdZ7u"
    },
    {
      "type": "close_pull_request",
      "time": "2025-04-15T15:08:55Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "341",
          "qualifier": "closed-on-pull_request"
        }
      ],
      "id": "CE_lADODyNbyM6ynyrIzwAAAAQFdZ8q"
    },
    {
      "type": "commit",
      "time": "2025-04-15T11:38:57Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "authored-by"
        },
        {
          "objectId": "078b93cae58db0da361f33d6a4e62c61477f0fef",
          "qualifier": "sha"
        },
        {
          "objectId": "340",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDA3OGI5M2NhZTU4ZGIwZGEzNjFmMzNkNmE0ZTYyYzYxNDc3ZjBmZWY"
    },
    {
      "type": "approve_review",
      "time": "2025-04-15T14:35:18Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "approved-by"
        },
        {
          "objectId": "340",
          "qualifier": "for-pull-request"
        }
      ],
      "id": "2768654130"
    },
    {
      "type": "merge_pull_request",
      "time": "2025-04-15T14:35:27Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "340",
          "qualifier": "merged-on-pull_request"
        }
      ],
      "id": "ME_lADODyNbyM6ylVfhzwAAAAQFbCE0"
    },
    {
      "type": "close_pull_request",
      "time": "2025-04-15T14:35:27Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "340",
          "qualifier": "closed-on-pull_request"
        }
      ],
      "id": "CE_lADODyNbyM6ylVfhzwAAAAQFbCFc"
    },
    {
      "type": "commit",
      "time": "2025-05-30T19:54:23Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "justin",
          "qualifier": "authored-by"
        },
        {
          "objectId": "d012fb3aab85a0b2722a875e7bc3398f578733b7",
          "qualifier": "sha"
        },
        {
          "objectId": "376",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKGQwMTJmYjNhYWI4NWEwYjI3MjJhODc1ZTdiYzMzOThmNTc4NzMzYjc"
    },
    {
      "type": "comment_pull_request",
      "time": "2025-05-30T20:10:45Z",
      "attributes": [
        {
          "name": "comment",
          "value": "<!-- This is an auto-generated comment: summarize by coderabbit.ai -->\n<!-- walkthrough_start -->\n\n## Walkthrough\n\nThe code updates the post-upload redirection URL in the file upload component. After a successful file upload, the user is now redirected to `/jobs?resume_id=...` instead of `/jobs/upload?resume_id=...`. No other logic or control flow is changed.\n\n## Changes\n\n| File(s)                                 | Change Summary                                             |\n|------------------------------------------|-----------------------------------------------------------|\n| apps/frontend/components/common/file-upload.tsx | Changed redirection URL after file upload success          |\n\n## Poem\n\n> A file is sent, a hop, a leap,  \n> The upload done, no need to weep.  \n> Now to `/jobs` we bound with glee,  \n> Resume in tow, as quick as can be!  \n> \ud83d\udc07\u2728\n\n<!-- walkthrough_end -->\n<!-- internal state start -->\n\n\n<!-- DwQgtGAEAqAWCWBnSTIEMB26CuAXA9mAOYCmGJATmriQCaQDG+Ats2bgFyQAOFk+AIwBWJBrngA3EsgEBPRvlqU0AgfFwA6NPEgQAfACgjoCEYDEZyAAUASpETZWaCrKNwSPbABsvkCiQBHbGlcSHFcLzpIACIAM3gADy5cWA80bm4veAZqeHwsRFh8AHd4DCJIABYABkr0WJo+BwYGaURY7y95bEz8NFoyiv8HNmj0WlphxGl0SAFsCuLU/zDU9AysnPF8yAHETLRZKLQq2shKCnw+NAbKWeHHD2K0ZB6vPqV6ZtbEds7ZDQwNZIBweVBZDAAayiBFWHn8XmoURBwUgZgAzAB2ABMgPckHiCRQGAk+C8Ule3FouXKcL8+Dwg3Gkzac3k/mY+AkTJSHgABm8PogAPR8+wkIhsDChWKXZh0q7wIhlNC+S54Eh4hDIBiwTCkBQUfxiZC8+mM2ncaiwML4Hj+KTSuk1OoXK5ajzcTp+QLBRChMoMLzYJTIE6IBj+MiFfABnzYf1UcS0s2E9AYei8LnwUNhEJMsqJ7BiPIYRBcCjYDAYHlrdKZbK5HalFKQPkYbjyytYJQSPkAGkggv6TJODzYg8w9CkFHgsVkteozrObr4GDt73Kd3wLWwFEQHoUSkYeq3OpY3HgkUgLaKeHORquyCuN+cNfKiEHeqkcxIZDz/rHBmkAznO8B0JOwGxGS7zFHSWYiGIADk54DLSRDYDmJAQtIh5ej4PpBCEKDIBC0L0LCZoIki9AomkwGBsGuahpG8DcOIP5MKw6iQGwvxoKQB5GPoxjgFAZD0PgsQ4AQxBkMoND0FxUqcPa/DCKIHEzHIR7KKo6haDoIkmFAcCoKgmAyYQpDkEmUTKewFZoHBIzMM48g6UwShUPpmjaLoYCGKJpgGPWIqyvkNAZsKXHcPk7Aisp+TCvEkRgMOtAaLgiBJAY0T5QYFiQAAggAknJtk0fYjhuS4/DSbq+rSG4ayNVuvGKGBMxmgAqjYAAyPoDMa2xYDcjSzN8bQdL4qUeBlgJWA6eQJl0g5mlaBr+MNmkwnafLCkIggihlAD844kAA+jmAC8Gj3WKCa1h4ZBeVEF2QKVAAiBJynSGU+vs+TTIePTUopuknk1prakN8AjaWtptodx3ndIjzXbQd0PYOHLZimawHRlYpWq20ySuwv0sHSfX9YCABydqxsskDvMqDCDqukCnrQEJEIOL5MNKlyzbBJH1LEu2ZUY5iWMVXiNE2ZZI2aShBs4SvPtJJAJHFFAQy+XoCJs5zSuo4GIEYjPkBoeUFQYIkGCZpuSdJaB4NZ8l2UpLAqU5Lk1e5bK6T5ah+UZgVO2JCjcbgmOIJdy0kMUdCXf6zihI7zu0NUACM2KxAI6JoCoAAcACsaDVAI2I4tiaCl5i5ckJiAgMOi6IAJyl7E5eYo3HcCJiAVBc7ynqPHickNyyepxJI9AA=== -->\n\n<!-- internal state end -->\n<!-- finishing_touch_checkbox_start -->\n\n<details open=\"true\">\n<summary>\u2728 Finishing Touches</summary>\n\n- [ ] <!-- {\"checkboxId\": \"7962f53c-55bc-4827-bfbf-6a18da830691\"} --> \ud83d\udcdd Generate Docstrings\n\n</details>\n\n<!-- finishing_touch_checkbox_end -->\n<!-- tips_start -->\n\n---\n\nThanks for using CodeRabbit! It's free for OSS, and your support helps us grow. If you like it, consider giving us a shout-out.\n\n<details>\n<summary>\u2764\ufe0f Share</summary>\n\n- [X](https://twitter.com/intent/tweet?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A&url=https%3A//coderabbit.ai)\n- [Mastodon](https://mastodon.social/share?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A%20https%3A%2F%2Fcoderabbit.ai)\n- [Reddit](https://www.reddit.com/submit?title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&text=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code.%20Check%20it%20out%3A%20https%3A//coderabbit.ai)\n- [LinkedIn](https://www.linkedin.com/sharing/share-offsite/?url=https%3A%2F%2Fcoderabbit.ai&mini=true&title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&summary=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code)\n\n</details>\n\n<details>\n<summary>\ud83e\udea7 Tips</summary>\n\n### Chat\n\nThere are 3 ways to chat with [CodeRabbit](https://coderabbit.ai?utm_source=oss&utm_medium=github&utm_campaign=srbhr/Resume-Matcher&utm_content=376):\n\n- Review comments: Directly reply to a review comment made by CodeRabbit. Example:\n  - `I pushed a fix in commit <commit_id>, please review it.`\n  - `Explain this complex logic.`\n  - `Open a follow-up GitHub issue for this discussion.`\n- Files and specific lines of code (under the \"Files changed\" tab): Tag `@coderabbitai` in a new review comment at the desired location with your query. Examples:\n  - `@coderabbitai explain this code block.`\n  -\t`@coderabbitai modularize this function.`\n- PR comments: Tag `@coderabbitai` in a new PR comment to ask questions about the PR branch. For the best results, please provide a very specific query, as very limited context is provided in this mode. Examples:\n  - `@coderabbitai gather interesting stats about this repository and render them as a table. Additionally, render a pie chart showing the language distribution in the codebase.`\n  - `@coderabbitai read src/utils.ts and explain its main purpose.`\n  - `@coderabbitai read the files in the src/scheduler package and generate a class diagram using mermaid and a README in the markdown format.`\n  - `@coderabbitai help me debug CodeRabbit configuration file.`\n\n### Support\n\nNeed help? Create a ticket on our [support page](https://www.coderabbit.ai/contact-us/support) for assistance with any issues or questions.\n\nNote: Be mindful of the bot's finite context window. It's strongly recommended to break down tasks such as reading entire modules into smaller chunks. For a focused discussion, use review comments to chat about specific files and their changes, instead of using the PR comments.\n\n### CodeRabbit Commands (Invoked using PR comments)\n\n- `@coderabbitai pause` to pause the reviews on a PR.\n- `@coderabbitai resume` to resume the paused reviews.\n- `@coderabbitai review` to trigger an incremental review. This is useful when automatic reviews are disabled for the repository.\n- `@coderabbitai full review` to do a full review from scratch and review all the files again.\n- `@coderabbitai summary` to regenerate the summary of the PR.\n- `@coderabbitai generate docstrings` to [generate docstrings](https://docs.coderabbit.ai/finishing-touches/docstrings) for this PR.\n- `@coderabbitai generate sequence diagram` to generate a sequence diagram of the changes in this PR.\n- `@coderabbitai resolve` resolve all the CodeRabbit review comments.\n- `@coderabbitai configuration` to show the current CodeRabbit configuration for the repository.\n- `@coderabbitai help` to get help.\n\n### Other keywords and placeholders\n\n- Add `@coderabbitai ignore` anywhere in the PR description to prevent this PR from being reviewed.\n- Add `@coderabbitai summary` to generate the high-level summary at a specific location in the PR description.\n- Add `@coderabbitai` anywhere in the PR title to generate the title automatically.\n\n### CodeRabbit Configuration File (`.coderabbit.yaml`)\n\n- You can programmatically configure CodeRabbit by adding a `.coderabbit.yaml` file to the root of your repository.\n- Please see the [configuration documentation](https://docs.coderabbit.ai/guides/configure-coderabbit) for more information.\n- If your editor has YAML language server enabled, you can add the path at the top of this file to enable auto-completion and validation: `# yaml-language-server: $schema=https://coderabbit.ai/integrations/schema.v2.json`\n\n### Documentation and Community\n\n- Visit our [Documentation](https://docs.coderabbit.ai) for detailed information on how to use CodeRabbit.\n- Join our [Discord Community](http://discord.gg/coderabbit) to get help, request features, and share feedback.\n- Follow us on [X/Twitter](https://twitter.com/coderabbitai) for updates and announcements.\n\n</details>\n\n<!-- tips_end -->"
        }
      ],
      "relationships": [
        {
          "objectId": "coderabbitai[bot]",
          "qualifier": "commented-by"
        },
        {
          "objectId": "376",
          "qualifier": "on"
        }
      ],
      "id": "IC_kwDODyNbyM6uP00p"
    },
    {
      "type": "comment_review",
      "time": "2025-05-30T20:11:35Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "coderabbitai[bot]",
          "qualifier": "commented-by"
        },
        {
          "objectId": "376",
          "qualifier": "for-pull-request"
        }
      ],
      "id": "2882411456"
    },
    {
      "type": "comment_pull_request",
      "time": "2025-05-31T04:46:59Z",
      "attributes": [
        {
          "name": "comment",
          "value": "Thanks for the PR @JustinXre2020 \r\n\r\n@rrvrs can you please go through this?"
        }
      ],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "commented-by"
        },
        {
          "objectId": "376",
          "qualifier": "on"
        }
      ],
      "id": "IC_kwDODyNbyM6uTMID"
    },
    {
      "type": "approve_review",
      "time": "2025-05-31T05:07:27Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "approved-by"
        },
        {
          "objectId": "376",
          "qualifier": "for-pull-request"
        }
      ],
      "id": "2883392433"
    },
    {
      "type": "merge_pull_request",
      "time": "2025-05-31T05:17:56Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "376",
          "qualifier": "merged-on-pull_request"
        }
      ],
      "id": "ME_lADODyNbyM65BfWEzwAAAAQquQ27"
    },
    {
      "type": "close_pull_request",
      "time": "2025-05-31T05:17:56Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "376",
          "qualifier": "closed-on-pull_request"
        }
      ],
      "id": "CE_lADODyNbyM65BfWEzwAAAAQquQ33"
    },
    {
      "type": "commit",
      "time": "2025-05-29T20:05:20Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "SoorajSNBlaze333",
          "qualifier": "authored-by"
        },
        {
          "objectId": "6bdac93c8704008fd42ad9a8bd037463518b3516",
          "qualifier": "sha"
        },
        {
          "objectId": "375",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDZiZGFjOTNjODcwNDAwOGZkNDJhZDlhOGJkMDM3NDYzNTE4YjM1MTY"
    },
    {
      "type": "commit",
      "time": "2025-05-29T20:07:50Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "SoorajSNBlaze333",
          "qualifier": "authored-by"
        },
        {
          "objectId": "24bf1eb8818112fb0a0ecb0511fee667672bd29f",
          "qualifier": "sha"
        },
        {
          "objectId": "375",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDI0YmYxZWI4ODE4MTEyZmIwYTBlY2IwNTExZmVlNjY3NjcyYmQyOWY"
    },
    {
      "type": "commit",
      "time": "2025-05-29T20:18:43Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "SoorajSNBlaze333",
          "qualifier": "authored-by"
        },
        {
          "objectId": "99e422ac9dc2c24396ada9a68c1ef8a59e2ffba8",
          "qualifier": "sha"
        },
        {
          "objectId": "375",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDk5ZTQyMmFjOWRjMmMyNDM5NmFkYTlhNjhjMWVmOGE1OWUyZmZiYTg"
    },
    {
      "type": "commit",
      "time": "2025-05-29T20:19:02Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "SoorajSNBlaze333",
          "qualifier": "authored-by"
        },
        {
          "objectId": "a2eaaeb75c9ec715463ef3ea0fcd30f2dc9ded54",
          "qualifier": "sha"
        },
        {
          "objectId": "375",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKGEyZWFhZWI3NWM5ZWM3MTU0NjNlZjNlYTBmY2QzMGYyZGM5ZGVkNTQ"
    },
    {
      "type": "comment_pull_request",
      "time": "2025-05-29T20:20:46Z",
      "attributes": [
        {
          "name": "comment",
          "value": "<!-- This is an auto-generated comment: summarize by coderabbit.ai -->\n<!-- walkthrough_start -->\n\n## Walkthrough\n\nA new `.editorconfig` and Prettier configuration were introduced to standardize code formatting across the project, particularly in the frontend. ESLint was updated to enforce Prettier rules, and scripts for linting and formatting were added or modified. Documentation was updated for clarity, including setup steps and frontend formatting guidelines. Minor frontend layout components were refactored for cleaner structure and updated styling. The backend `.gitignore` was extended to ignore additional SQLite database files.\n\n## Changes\n\n| File(s)                                         | Change Summary                                                                                                   |\n|------------------------------------------------|------------------------------------------------------------------------------------------------------------------|\n| `.editorconfig`                                 | New file added to enforce consistent editor settings (indentation, EOL, charset, trailing whitespace, newline).  |\n| `apps/frontend/.prettierrc`                     | New Prettier config added to define code formatting rules (quotes, semicolons, line length, etc.).               |\n| `apps/frontend/eslint.config.mjs`               | ESLint config updated to add Prettier plugin and enforce formatting as errors; imports changed to single quotes. |\n| `apps/frontend/package.json`                    | Lint script changed to use ESLint directly, new format script added, Prettier and related dependencies introduced and ESLint version updated. |\n| `SETUP.md`                                      | Improved formatting, clarified setup steps, added frontend formatting section advising format-on-save or npm format. |\n| `apps/frontend/app/layout.tsx`                  | Updated global CSS import path; font configs enhanced with display swap; keywords changed to array; added text-gray-900 class; reformatted JSX with 2-space indentation. |\n| `apps/frontend/app/(default)/layout.tsx`        | Renamed default layout function; removed html/body wrappers and font styling classes; simplified JSX structure to a main container wrapped by ResumePreviewProvider. |\n| `apps/backend/.gitignore`                        | Added entries to ignore SQLite shared memory and write-ahead log files (`app.db-shm`, `app.db-wal`).             |\n\n## Sequence Diagram(s)\n\n```mermaid\nsequenceDiagram\n  participant Developer\n  participant Editor/IDE\n  participant Prettier\n  participant ESLint\n\n  Developer->>Editor/IDE: Save file (with format-on-save enabled)\n  Editor/IDE->>Prettier: Format code per .prettierrc\n  Prettier-->>Editor/IDE: Returns formatted code\n\n  Developer->>ESLint: Run lint script (eslint .)\n  ESLint->>Prettier: Apply Prettier rules via eslint-plugin-prettier\n  Prettier-->>ESLint: Report formatting issues as errors\n  ESLint-->>Developer: Displays lint results\n```\n\n## Poem\n\n> In burrows deep, the code now shines,  \n> With spaces neat and tidy lines.  \n> Prettier hops, ESLint keeps guard,  \n> Formatting rules are never hard.  \n> A rabbit\u2019s joy\u2014setup\u2019s clear,  \n> Frontend code, we now revere!  \n> \ud83d\udc07\u2728\n\n<!-- walkthrough_end -->\n\n\n---\n\n<details>\n<summary>\ud83d\udcdc Recent review details</summary>\n\n**Configuration used: CodeRabbit UI**\n**Review profile: CHILL**\n**Plan: Pro**\n\n\n<details>\n<summary>\ud83d\udce5 Commits</summary>\n\nReviewing files that changed from the base of the PR and between 024e9ff4776318313008c5873fa3bd5cb073b52e and 0e7ddd3064548edc69f9be84ec9158c1301cb244.\n\n</details>\n\n<details>\n<summary>\ud83d\udcd2 Files selected for processing (1)</summary>\n\n* `apps/backend/.gitignore` (1 hunks)\n\n</details>\n\n<details>\n<summary>\u2705 Files skipped from review due to trivial changes (1)</summary>\n\n* apps/backend/.gitignore\n\n</details>\n\n</details>\n<!-- internal state start -->\n\n\n<!-- DwQgtGAEAqAWCWBnSTIEMB26CuAXA9mAOYCmGJATmriQCaQDG+Ats2bgFyQAOFk+AIwBWJBrngA3EsgEBPRvlqU0AgfFwA6NPEgQAfACgjoCEYDEZyAAUASpETZWaCrKNxU3bABsvkCiQBHbGlcSHFcLzpIACIAM3gADy4AUUQveAxQhlhRAGtkTHoAMXwKZmpIbEQMomt/XHFKaMg5SsRKSABlfFK0IU6AOQAhLzQALxIAZmnIAApbSDNJgHYAVgBKFEyKRWwGaUhY0vKGmpRmXnwpNkyCjHomDHiibCpxfCxsblpqA4IwnKQGzSRwkMAAWWo2Q6lxEYg0MEBuRI8mymFIyAyDC82CU6FotDOuEBKng6Vw8n+RzKFSYeKqZys9UafAA7upYOg6iRTh1Hs9XtR4B9DmSSAAaPyiFg3JT0f4CEhtKLs4mQACSABFkodjtQwB8wIg0FJDiRqK9pAjOjyvltELgKHt3hhkNSAahYCalYqyPi5WF8AClQADTrJaAAVSsGmYtBDosiCIAggT1MKMGgfLJJZhICGNHR1KV+fAiAn4pFIF6ZCQ/WgCVF/mQHP4FK6kDRMgpCRhag7ZJECgwdohkITYrFKOxlXwyBJ4DsMDdcIgEXAlQss4gg/EEn9AV58AwhSL8LFg/mGGOE4T/GJSjnIKyENln2hkLwSAv8FUvPJmCuKJf1XeA8WJJUmAoe9QiOLwlD4B0nTES110BNE+wOZxIN+IhSngCZ6A/FpsFqPdpElWhj1BTJT0+b5fkQXN7h7JV/FiNAHwoGo0KVNA8FgUp23iMpkGJCoINYhQLjFZAHAYfYx1ibx/2fDkQMgSgdgoZAhNZZwMBqJjq2I30sBoB0okKSApG4+I6GY+UvVCKiGBo3A6JM2s/S+H4aCIhTSl7Ih/14yBAIneATxdN18B8fBWUvWFRFwAByZA6TOF4wJIdJyDuehFQdHgqDEKKKPQFimFYdRwukY0MXQNslEQEd4G4cRTWshscjbf5krEewPPuZxaDXRFNzsVAMHwUI8uReUg0weR/FGfyUDHYJHJQUJptm+xuFEeB7PoF8eV69AfDCEJPw/OS9kUxBlOzDRzEsABhGV2HupwXDcQEPlU6qV34cyEE/FSpSCEINsOHZmEvKoOmiaCJB08VmhfIMHV+JyJJyeR2Su/wFxIRLJIWEgOQ6AhDKIWBQiEyS4KPdk+3C0pDPZjINXueA806YafgoehoHgNg5nVTpoHWXi22wyAZsOV4IL4YHvslaGHQzYyhMJVqqmqD5kHvIKon8IhRqJcHrBsBEBl3OtaAETjcklBwiAxGLJSEtBuEuCRtxM00zJKq4cvoWQeTC9XuwyQlooPfG2O/eAybDx7YcOvn2es8TQkkkm09ZDoMi7MbA00wOcV+S8MMancPlegx9GMcAoDIehzxwAhiDIZR1tjzgSv4YQUskA5WjpZRVHULQdFbkwoHcTE7h7whSHIN4oiHrgqEShxfvkKfFBntRNG0XQwEMNvTAMQtCQIChSyIDgDGiD+DAsSBk3VPut9xvYRw5QXD8AvPXaQRhkyK3TgWIsT8X4VjFLDMuOxaB7BVByPwPRQjtALkGR0wQETqhciQeI+VNKPyEng8QfZYp8CzL4SsFVECHQYMdWQ1slRIzAQdTiBx3Tx3YJ5VUnI8xCO7NUCYvCABMYVO4GliGAPKkEvSlRoHwVAeDK4ABkiiSkkmidRHQyCZW5sgSM0AihgAABwGKoGSM4L51DSG4Pw2GjpxZsFoNtNAopMy+HIKyFRKDXSUHWsnTSLFu7MLXEYN6P8vAaLomJAhgIlDYmcCk3hJAEjcFKOtISngBDpAYFE8IadEBGAduQd+n8W533DFGGMcY34f2iF/Swv9/4DyiIfEB8hu4QKqQYDc4VnC5CoqycyKgqzYHuMjT6rARQADVnD8xKdITGxF2J6gaE2IM/hAKmkdNoPK/Y3GKUqkRdIRAsBMBxMwV0HM2zVUuREQm6k8CMC9H2M4jwuyaEgCMTAuRIAqOQCXeWjZCpkNKJBU+LQjwMHyFsS80R1Sug8j4TygsSDcEQM0doZURT/HFgHFODZSTklkGFFqbUOoZl4ZJPBdpWrcQ6uldAJLnloFiBovw8yua1ALAAelZdwDQiBYAJn0sgXJbiFmnSwX4gQKkeRRHSMVJQHlHHsxZTQAlPBKDUm8VwWyHCaiioyDjHwZwvz+CCEgFxxlPB2v1YCEMpAnCTA4AAFgEAmCKuUbL80gAAeRxeUSUAgcFIT9twM4cCMASCQUOSUNrsXnMgA7JQGghDjnxZ3UxlT0ChB2PtaysQlzl22ogWQGB2HsysLIYkIolDZyUI20tPNJIuxRZ3MK+BGUfCzJAJQUgjzcBBjjCgu0sXIRis+acfD9j0GqMwMkzhVLWUyXZNOyq1R+JmjQUGkAiClTId4ewsA8BTKwAuPxIZ3qOi8AAanegWCaYQdjYE2dKnBZxiUunfCbOFNJ9mHrETCpFoLwUZEnuBpU5o3xqp8DyXUatjadlMbSyARQMiMKfMe9O0Qig1s7kS8eIo5X+isgXQEndcy0AXNUdmSMdKVzILMpUpr9SGmNKaXtORFyUOLHwISTosAhgwNOwVWA+O4ATFSPZQ00CkAeL8jE9tdzzJ5WOoSiovQ/ioL4YZy62zlHAmkpUEqM71X4HOFNi4Pgg0DtxHjcT4nf2TEkgeOtK6SQyaMN4AXu4KoKcBPgxTSnlPTJAgwNSSCvXaUYCAYAjAJsQKK6tHxy6io0F+Xk0EGBtM/j5v+m9enruAc4QZ4CtMJegUE7kxXhJlkFCB5h+ZCvMjTiV2VxEGwBn+JJEMWWcsUfuLeRcKVHxoVQC/TrTKyDUiuczOKrN/mIsU7Q2oTohxcHaJuh5xsmopydf4IiDHkPRIvDjGgK5kCzBDMd+AXBCEkBDOsd2NQqxBFmlhNsSN6DuiQkZOYr2/skAAIrYEBx9p0X2fuXnKAkcWjh4PkHBWQIgaotEYf+AARgAAwk5+VksQlBnshl4GXAA6mBYkXBSck++xmhZtEQNI2QDI1dBxDp8A8gISHwvGe0GZ5AGR7Prk/rOdtpwBRoUBjOm2auYE0XJE6KsewDaPIJFFw485SzyhcGiNIVY0RvvNwSb55JS7RvpNECF7J4W8mRa7tFv9sX2DxZGUlupHSGkZYMBN3LmRO6ioTaK0YsgQIaFXEkQPnSf6Vf7tvGrR9eHDP+kqclBSeDUE5O6SSIVBBjvep0ToiY88ZUa6D+G+ZUoaFFdebLZeXZeDXG31Kymgwhmb6K2YSgOLeFwOsVvY5RUd+3BoHvX6xlHG7Et0LZ4x5iHofmTolySAAH0ADiOwLK5ATNZEM++qYOlP8Dhi60yWNpxOBT1+tuCx64OlfS3Be9h0FxSWXEFRMJEPIQNUAGwhAqg78gw+dWF+FxoxkQw2API/I0AExBA4Q0pkAQxkRZBWQgpEAExLhf95BFt684YWAuRgY0AjR8Usl1pwd9UlosBnAqB6shpuI6FiEwZQwbAcEdE0A488AEw3kPh2ADFAQAApToAADSlFwFeCwFQF2Qg3WlESlyNB3y2C7WAIzDENDFjVoFkATFyhIBXC5UyTHAGDQAllQF8kAX+B4TGw0Hcw2UiAIJ2CIOZUBCX0ZnX1XHtBoAbE8KVDQJSjEhyGYHaC8CkGMjznQlGDHHg2KlQFyXLiiFaGGyTRoASFwGIBYLAAAE4ycCxbc/NV9nlHclRgtaCwsLwIs50oseBvcoo4tGh/cRCUt6l0tMt/Zstw98tpA8pNAX5YwC0ysOkKsekM8gEs8hlGsRkxktcdEy52sXgyjQNKhb8DkthsRcQlQKY+sYQcQiAeZrJVsSxNwDi+BdszgDssJ5VoJShxpt8jp4gTxsxcx+UTFsjO4uEYhyBsjW94UwAS4BAwAFxsVCVZdoh/jcBRUKRDp2V2pcBmgV9slH18M1olk3FcBcwYFEpUSQMQjBpaNhsmxnJx0G0rCooiNzh8k50wilRzc0gy4wBX9SIMhWTLjmg2TjimCWI8EGTBUqxogisWRRVRT+tmh/hzcHiKBogUw0wXQiMM0LgC8HsTDvoLNVF0QohcsEYqJvclQAcLJK42MQojT4cLIY1vliRUAqIDgT10BJwUplZG0lSaVm4fNSjskKjx1ndqizs3c6TCkvcSlmjfdWi0sc0gxzNmx3d6jPdGiwyykIz5AqiyjEAABuS8Oo0hUfJJXhEMAYsuT6J4MsBMI5bQZ5PTUgnmaoO5C0fwDooPLo0PHoybPLSPS5XIdTZLAtD4MYlPbpKrKY/pOrbPOY3PLHPbewBledS8PozuQvFFXs/NHcLAWjCBBvcghkD1JUAYFItckiMkHInmQY6ScoFiWYaElI6c6ITYf4O8FKVSDICQfAXIM4RY5Y0lQEAaFyWbLiT5NUVhF4g9TSb4jsM7a84s7sCAW8tc8UNchIRC1cFCxAA3DQe8lMPE2cjlUIOIPZbZAoGDf4KTVrFkTDKSa49ma8iUjoCAVkbiU9TC2Wb9L87sDtYtRteQWyI2Dc4iWw9aPUrkEc5o6IAAPXyKlKWgOlArKQkvyI0BkWWA0BJ3lJ/kVIzGVIBH8CVBawnVymHRBk4s53YQOFWjsKDCZB5AorLhIAvRERXVJNoDNxgpyJfk5JsslLmEfKQB40gHYvLW8CTiyA+FiFKVCFUOsuKxRyZMGNZKOI5LorlJ8sOXmXIv63QDXkCqFJIBR2shFK5J2kiIvAqF4qZQksmA0FWA0EmHUo3HaAp0wkxG2F2H2HAtfyilqmiooocH9gL2snaDcW3mnLOCrT2RnMoPuC8xKPtwC19PTNd1qPjJDKTJ90yD9yjM6DnI5kijoC4BDGiEGKtzRVeznPwPsGoywG7nG3bMXPuHFNdlXP7IwCENIOEsOphLvL73zDiuWLguyMgAQqQrQrQowqtxbi6B2ucoOoIogxOp5jOrwouuAyZRurDym1oEepXNIDXI+FlSwWrmCF+uSqvkYpcSBohqgE1CLVMp4upyZUEv2t+rcoRukwnRps7RLWkDep1O3IRkOskpOv+EFsUuUtUrZvzAxs7Ieu7OevXJDEhs5q4rMuIoDERo5tpq7VVtQIvFuoJQ7Ij1lqetxpepDDfkgF0BZuZMyDAA8uSuiDN3EtJw0CJ2qohstqgEOrcoSvZIwE8uK0dpiHEpqr9QlsVs9pJq5KdqqpqrqsVtS2D26INvuqxuj2HzIX4iSQn1j3j0T0HImJHMATHNAVmJ1PmPQhYHyXIG7Fo38EzG8TIIFp4Nmj4IEKU0rhDBpvzNwDbpAgX0Yw2rbAAAloBwQdE2DnRLRtjH8k1gAGZmAvA9BT8WIQxgB9DZBl6wh1MCpgxRNqBPE1UTS66TCgJaAwp98ehzTdQ45VT6TJRvDwV8AGwzgjxjiGBfExxjx+Z1pK9q9nDPNZdzD2gCh/Z0gtixt17FBN6jDIgQYoVkN0hN1Mx/IwpECqUPIOqC8R8Mh7Veywh1BIhKJpA5ydD0AwHqSQMG6JRZdsDcCRZIUhsu9DlT6pBz7v1hCa7QgZpEonyxBVJ6h5CCh8xgBgRD4SBrLSZWQmRw4EIt7GKE0xqRHygMgt7jD4GsFc7vlgGKoAUqzfjsgyRaB66UwrpvCwALK6CKRs1rIZ9fA/7aSClIUV0jkz7fsLh0hYhOE9zwV+CNJOGZx/hAZ5AA4cp2wsjQhupxkeY9GEMKBPSulvSHcbM/S90lqsGEzHM1rwyNrIzIaig9MQN6yUHp6tyDrcy/Se7XSeUgReC/G8BZgABvH5Ix+uyAAAXy4GacMfgnrq4GBE4k0AGbEFzSVHafWATEACTCfMCpkfLO2CQpplbu+Zvuhp7phAXpv0TpyAdZ1psgfplDIZw50ZjpiZ066Wo2tO/2IfOZsfHO+pzQRPRWqAZIFaqUY5Zmost5x4YqdB5ArgcEHkDBlA85u6zGqPa5jOnu+59uhPdChOzou+CbftZEB6jQY48QO5eFAurpNPABOg2rUuhrcuqcgsDFssGafwNNXjJmQEFFpchNdYpmxaGe3Y/0dMUdXwZAl2doCx3KQBWJSuRUFALFq7FoeQffOeLoNhY6ak94sIXAnC9gbiCqfWjQZ2I0WAZgFe+gNVjV/SLwEMSUBBujegeZBCLkFrIeS6mp0YRUSIXVywZ2Ae6QXjWSc7MIWQRNN41SToGHJY09aVbCegNgQCUBaycmmgMANAHIQIt+mvYyfwECsqSdYjFiBWHh8CnYgMYS8qkUAFHYXwLMD4IgaoPEXJTsM4Cl+Fegblj8N1ocG3IcpJ+alJxapdIMj3LJmLHJipBLAPRO1uAwJeKJLuUqvADedPQBXePwNAA+Ql4+VEU+KgWeC+Bea+Yd9uC89QXfMCRAXfIuMmOgXfWdUIIdkdtAGRc0NAEgAQNYBgfI0QZYInVYP1AANkmDIU/bQBJ1iAYFoEmF/ZkVoAfblFfavkMAvYYGWDfYDRsSJ0mHyJkRsT/ZA+WGQ5ID9T9WWEvZJxkVJxkXyIEEKNWD5TveWAg83YgEgBsXyJvZg5J2WAJDffyJsUmA4iQ5kTfYEADTJ1WCmBWFiHyNWBkRJwbBJwEBsUo5Ha479VWBJ1oCJ3Q8VAA5sRw7fdiD9RJyJx4+WFiBsXNDfdWBsQYDk+M5Jz9TY+k63bw79RIHyMnGw5g8mCJzY4Q7JxM+M+WHY7QEmAEFoFWAYAEEY785E6VEXhs5ICY4JEA9g9fYM5A5Y6E8VBsTs4fZfZM/c6JyC5kSw8o6o6gGBh3b3YPdTiPdoF3yXP0CAA -->\n\n<!-- internal state end -->\n<!-- tips_start -->\n\n---\n\nThanks for using CodeRabbit! It's free for OSS, and your support helps us grow. If you like it, consider giving us a shout-out.\n\n<details>\n<summary>\u2764\ufe0f Share</summary>\n\n- [X](https://twitter.com/intent/tweet?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A&url=https%3A//coderabbit.ai)\n- [Mastodon](https://mastodon.social/share?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A%20https%3A%2F%2Fcoderabbit.ai)\n- [Reddit](https://www.reddit.com/submit?title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&text=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code.%20Check%20it%20out%3A%20https%3A//coderabbit.ai)\n- [LinkedIn](https://www.linkedin.com/sharing/share-offsite/?url=https%3A%2F%2Fcoderabbit.ai&mini=true&title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&summary=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code)\n\n</details>\n\n<details>\n<summary>\ud83e\udea7 Tips</summary>\n\n### Chat\n\nThere are 3 ways to chat with [CodeRabbit](https://coderabbit.ai?utm_source=oss&utm_medium=github&utm_campaign=srbhr/Resume-Matcher&utm_content=375):\n\n- Review comments: Directly reply to a review comment made by CodeRabbit. Example:\n  - `I pushed a fix in commit <commit_id>, please review it.`\n  - `Explain this complex logic.`\n  - `Open a follow-up GitHub issue for this discussion.`\n- Files and specific lines of code (under the \"Files changed\" tab): Tag `@coderabbitai` in a new review comment at the desired location with your query. Examples:\n  - `@coderabbitai explain this code block.`\n  -\t`@coderabbitai modularize this function.`\n- PR comments: Tag `@coderabbitai` in a new PR comment to ask questions about the PR branch. For the best results, please provide a very specific query, as very limited context is provided in this mode. Examples:\n  - `@coderabbitai gather interesting stats about this repository and render them as a table. Additionally, render a pie chart showing the language distribution in the codebase.`\n  - `@coderabbitai read src/utils.ts and explain its main purpose.`\n  - `@coderabbitai read the files in the src/scheduler package and generate a class diagram using mermaid and a README in the markdown format.`\n  - `@coderabbitai help me debug CodeRabbit configuration file.`\n\n### Support\n\nNeed help? Create a ticket on our [support page](https://www.coderabbit.ai/contact-us/support) for assistance with any issues or questions.\n\nNote: Be mindful of the bot's finite context window. It's strongly recommended to break down tasks such as reading entire modules into smaller chunks. For a focused discussion, use review comments to chat about specific files and their changes, instead of using the PR comments.\n\n### CodeRabbit Commands (Invoked using PR comments)\n\n- `@coderabbitai pause` to pause the reviews on a PR.\n- `@coderabbitai resume` to resume the paused reviews.\n- `@coderabbitai review` to trigger an incremental review. This is useful when automatic reviews are disabled for the repository.\n- `@coderabbitai full review` to do a full review from scratch and review all the files again.\n- `@coderabbitai summary` to regenerate the summary of the PR.\n- `@coderabbitai generate docstrings` to [generate docstrings](https://docs.coderabbit.ai/finishing-touches/docstrings) for this PR.\n- `@coderabbitai generate sequence diagram` to generate a sequence diagram of the changes in this PR.\n- `@coderabbitai resolve` resolve all the CodeRabbit review comments.\n- `@coderabbitai configuration` to show the current CodeRabbit configuration for the repository.\n- `@coderabbitai help` to get help.\n\n### Other keywords and placeholders\n\n- Add `@coderabbitai ignore` anywhere in the PR description to prevent this PR from being reviewed.\n- Add `@coderabbitai summary` to generate the high-level summary at a specific location in the PR description.\n- Add `@coderabbitai` anywhere in the PR title to generate the title automatically.\n\n### CodeRabbit Configuration File (`.coderabbit.yaml`)\n\n- You can programmatically configure CodeRabbit by adding a `.coderabbit.yaml` file to the root of your repository.\n- Please see the [configuration documentation](https://docs.coderabbit.ai/guides/configure-coderabbit) for more information.\n- If your editor has YAML language server enabled, you can add the path at the top of this file to enable auto-completion and validation: `# yaml-language-server: $schema=https://coderabbit.ai/integrations/schema.v2.json`\n\n### Documentation and Community\n\n- Visit our [Documentation](https://docs.coderabbit.ai) for detailed information on how to use CodeRabbit.\n- Join our [Discord Community](http://discord.gg/coderabbit) to get help, request features, and share feedback.\n- Follow us on [X/Twitter](https://twitter.com/coderabbitai) for updates and announcements.\n\n</details>\n\n<!-- tips_end -->"
        }
      ],
      "relationships": [
        {
          "objectId": "coderabbitai[bot]",
          "qualifier": "commented-by"
        },
        {
          "objectId": "375",
          "qualifier": "on"
        }
      ],
      "id": "IC_kwDODyNbyM6uExu-"
    },
    {
      "type": "rename_pull_request",
      "time": "2025-05-29T20:20:57Z",
      "attributes": [
        {
          "name": "renamed-to",
          "value": "fix: Eslint checks and Format using Prettier"
        }
      ],
      "relationships": [
        {
          "objectId": "Sooraj Sivadasan Nair",
          "qualifier": "change-issued-by"
        },
        {
          "objectId": "375",
          "qualifier": "for-pr"
        }
      ],
      "id": "RTE_lADODyNbyM64244TzwAAAAQpag1j"
    },
    {
      "type": "comment_review",
      "time": "2025-05-29T20:24:00Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "coderabbitai[bot]",
          "qualifier": "commented-by"
        },
        {
          "objectId": "375",
          "qualifier": "for-pull-request"
        }
      ],
      "id": "2879519512"
    },
    {
      "type": "commit",
      "time": "2025-05-29T20:26:58Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "SoorajSNBlaze333",
          "qualifier": "authored-by"
        },
        {
          "objectId": "ac764b813928fcdc728e447a2021029b905afb77",
          "qualifier": "sha"
        },
        {
          "objectId": "375",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKGFjNzY0YjgxMzkyOGZjZGM3MjhlNDQ3YTIwMjEwMjliOTA1YWZiNzc"
    },
    {
      "type": "commit",
      "time": "2025-05-29T20:29:29Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "SoorajSNBlaze333",
          "qualifier": "authored-by"
        },
        {
          "objectId": "89ae7607dd6983fa9226b4b005e337f9520ad0b8",
          "qualifier": "sha"
        },
        {
          "objectId": "375",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDg5YWU3NjA3ZGQ2OTgzZmE5MjI2YjRiMDA1ZTMzN2Y5NTIwYWQwYjg"
    },
    {
      "type": "comment_pull_request",
      "time": "2025-05-30T08:04:14Z",
      "attributes": [
        {
          "name": "comment",
          "value": "Hi, I will review this tonight or tomorrow morning IST. "
        }
      ],
      "relationships": [
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "commented-by"
        },
        {
          "objectId": "375",
          "qualifier": "on"
        }
      ],
      "id": "IC_kwDODyNbyM6uI1E8"
    },
    {
      "type": "suggest_changes_as_review",
      "time": "2025-05-30T16:49:18Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "requested-by"
        },
        {
          "objectId": "375",
          "qualifier": "for-pull-request"
        }
      ],
      "id": "2881875703"
    },
    {
      "type": "commit",
      "time": "2025-05-30T17:17:56Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "SoorajSNBlaze333",
          "qualifier": "authored-by"
        },
        {
          "objectId": "26450d172bed387a6f401b47f8ea658c45580483",
          "qualifier": "sha"
        },
        {
          "objectId": "375",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDI2NDUwZDE3MmJlZDM4N2E2ZjQwMWI0N2Y4ZWE2NThjNDU1ODA0ODM"
    },
    {
      "type": "add_review_request",
      "time": "2025-05-30T17:25:58Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "for"
        },
        {
          "objectId": "Sooraj Sivadasan Nair",
          "qualifier": "by"
        },
        {
          "objectId": "375",
          "qualifier": "in"
        }
      ],
      "id": "RRE_lADODyNbyM64244TzwAAAAQqRM2P"
    },
    {
      "type": "suggest_changes_as_review",
      "time": "2025-05-30T17:46:18Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "requested-by"
        },
        {
          "objectId": "375",
          "qualifier": "for-pull-request"
        }
      ],
      "id": "2882012043"
    },
    {
      "type": "commit",
      "time": "2025-05-30T17:47:21Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "SoorajSNBlaze333",
          "qualifier": "authored-by"
        },
        {
          "objectId": "024e9ff4776318313008c5873fa3bd5cb073b52e",
          "qualifier": "sha"
        },
        {
          "objectId": "375",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDAyNGU5ZmY0Nzc2MzE4MzEzMDA4YzU4NzNmYTNiZDVjYjA3M2I1MmU"
    },
    {
      "type": "add_review_request",
      "time": "2025-05-30T17:47:50Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "for"
        },
        {
          "objectId": "Sooraj Sivadasan Nair",
          "qualifier": "by"
        },
        {
          "objectId": "375",
          "qualifier": "in"
        }
      ],
      "id": "RRE_lADODyNbyM64244TzwAAAAQqSVkn"
    },
    {
      "type": "commit",
      "time": "2025-05-30T18:10:06Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "SoorajSNBlaze333",
          "qualifier": "authored-by"
        },
        {
          "objectId": "0e7ddd3064548edc69f9be84ec9158c1301cb244",
          "qualifier": "sha"
        },
        {
          "objectId": "375",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDBlN2RkZDMwNjQ1NDhlZGM2OWY5YmU4NGVjOTE1OGMxMzAxY2IyNDQ"
    },
    {
      "type": "approve_review",
      "time": "2025-05-30T18:13:28Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "approved-by"
        },
        {
          "objectId": "375",
          "qualifier": "for-pull-request"
        }
      ],
      "id": "2882072401"
    },
    {
      "type": "comment_pull_request",
      "time": "2025-05-30T18:21:07Z",
      "attributes": [
        {
          "name": "comment",
          "value": "Okay thanks for the PR @SoorajSNBlaze333 & checking it out @rrvrs \r\n"
        }
      ],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "commented-by"
        },
        {
          "objectId": "375",
          "qualifier": "on"
        }
      ],
      "id": "IC_kwDODyNbyM6uOts0"
    },
    {
      "type": "merge_pull_request",
      "time": "2025-05-30T18:21:15Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "375",
          "qualifier": "merged-on-pull_request"
        }
      ],
      "id": "ME_lADODyNbyM64244TzwAAAAQqT8LG"
    },
    {
      "type": "close_pull_request",
      "time": "2025-05-30T18:21:16Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "375",
          "qualifier": "closed-on-pull_request"
        }
      ],
      "id": "CE_lADODyNbyM64244TzwAAAAQqT8Lb"
    },
    {
      "type": "commit",
      "time": "2025-05-28T15:23:55Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "authored-by"
        },
        {
          "objectId": "cab845e52531a83a4c6c36a95444436f2500cd53",
          "qualifier": "sha"
        },
        {
          "objectId": "373",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKGNhYjg0NWU1MjUzMWE4M2E0YzZjMzZhOTU0NDQ0MzZmMjUwMGNkNTM"
    },
    {
      "type": "comment_pull_request",
      "time": "2025-05-28T15:24:35Z",
      "attributes": [
        {
          "name": "comment",
          "value": "<!-- This is an auto-generated comment: summarize by coderabbit.ai -->\n<!-- walkthrough_start -->\n\n## Walkthrough\n\nThe changes introduce several backend and frontend updates to support resume preview and improvement features. Backend modifications refactor score improvement logic for efficiency and update schema requirements. The frontend adds a context for resume preview data, refactors dashboard and layout components, introduces new API functions, and implements a two-step flow for uploading job descriptions and improving resumes with enhanced feedback and concurrency.\n\n## Changes\n\n| File(s)                                                                                      | Change Summary                                                                                                                                                                                                                   |\n|----------------------------------------------------------------------------------------------|---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| `apps/backend/app/schemas/pydantic/structured_job.py`                                        | Made the `city` attribute in the `Location` model optional (`Optional[str] = None`).                                                                                                     |\n| `apps/backend/app/services/score_improvement_service.py`                                     | Refactored score improvement method from recursive to iterative, updated embedding parameter types, parallelized embedding calls, changed JSON schema key, added logging and garbage collection.                                 |\n| `apps/frontend/app/(default)/dashboard/page.tsx`                                             | Refactored to use resume preview context, updated layout to CSS grid, simplified job upload handler, and adjusted resume and analysis component integration.                              |\n| `apps/frontend/app/(default)/layout.tsx`                                                     | Renamed and expanded layout to include HTML structure, font loading, metadata, and wrapped content in a resume preview context provider.                                                  |\n| `apps/frontend/components/common/resume_previewer_context.tsx`                               | Introduced a new context module to manage and provide structured resume preview data and improvement results across components.                                                          |\n| `apps/frontend/components/dashboard/resume-analysis.tsx`                                     | Refactored to accept analysis data via props, exported prop interface, removed internal sample data, and made minor formatting changes.                                                  |\n| `apps/frontend/components/dashboard/resume-component.tsx`                                    | Removed mock resume data and wrapper component; now exports the `Resume` component directly, with added logging of received props.                                                       |\n| `apps/frontend/components/jd-upload/text-area.tsx`                                           | Refactored to add two-step upload/improve flow, improved state and error handling, integrated with new API and context, and updated UI and accessibility.                                |\n| `apps/frontend/lib/api/resume.ts`                                                            | Added new module with `uploadJobDescriptions` and `improveResume` functions for backend API interaction, including error handling and logging.                                            |\n\n## Sequence Diagram(s)\n\n```mermaid\nsequenceDiagram\n    participant User\n    participant JDTextArea as JobDescriptionUploadTextArea\n    participant API as resume.ts API\n    participant Context as ResumePreviewContext\n    participant Dashboard\n\n    User->>JDTextArea: Enter job description & submit\n    JDTextArea->>API: uploadJobDescriptions([desc], resumeId)\n    API-->>JDTextArea: jobId\n    JDTextArea->>User: Show success message, enable \"Improve\" button\n    User->>JDTextArea: Click \"Improve\"\n    JDTextArea->>API: improveResume(resumeId, jobId)\n    API-->>JDTextArea: improvedData\n    JDTextArea->>Context: setImprovedData(improvedData)\n    JDTextArea->>Dashboard: Navigate to dashboard\n    Dashboard->>Context: useResumePreview()\n    Context-->>Dashboard: improvedData\n    Dashboard->>User: Show resume preview & analysis\n```\n\n## Poem\n\n> \ud83d\udc07  \n> A hop, a leap, a shiny new flow,  \n> Resume gets better\u2014just upload and go!  \n> Contexts now share what rabbits preview,  \n> Analysis and scores, all shiny and new.  \n> With code refactored, async and bright,  \n> This bunny\u2019s resume is looking just right!  \n>\n\n<!-- walkthrough_end -->\n<!-- internal state start -->\n\n\n<!--  -->\n\n<!-- internal state end -->\n<!-- finishing_touch_checkbox_start -->\n\n<details open=\"true\">\n<summary>\u2728 Finishing Touches</summary>\n\n- [ ] <!-- {\"checkboxId\": \"7962f53c-55bc-4827-bfbf-6a18da830691\"} --> \ud83d\udcdd Generate Docstrings\n\n</details>\n\n<!-- finishing_touch_checkbox_end -->\n<!-- tips_start -->\n\n---\n\nThanks for using CodeRabbit! It's free for OSS, and your support helps us grow. If you like it, consider giving us a shout-out.\n\n<details>\n<summary>\u2764\ufe0f Share</summary>\n\n- [X](https://twitter.com/intent/tweet?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A&url=https%3A//coderabbit.ai)\n- [Mastodon](https://mastodon.social/share?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A%20https%3A%2F%2Fcoderabbit.ai)\n- [Reddit](https://www.reddit.com/submit?title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&text=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code.%20Check%20it%20out%3A%20https%3A//coderabbit.ai)\n- [LinkedIn](https://www.linkedin.com/sharing/share-offsite/?url=https%3A%2F%2Fcoderabbit.ai&mini=true&title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&summary=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code)\n\n</details>\n\n<details>\n<summary>\ud83e\udea7 Tips</summary>\n\n### Chat\n\nThere are 3 ways to chat with [CodeRabbit](https://coderabbit.ai?utm_source=oss&utm_medium=github&utm_campaign=srbhr/Resume-Matcher&utm_content=373):\n\n- Review comments: Directly reply to a review comment made by CodeRabbit. Example:\n  - `I pushed a fix in commit <commit_id>, please review it.`\n  - `Explain this complex logic.`\n  - `Open a follow-up GitHub issue for this discussion.`\n- Files and specific lines of code (under the \"Files changed\" tab): Tag `@coderabbitai` in a new review comment at the desired location with your query. Examples:\n  - `@coderabbitai explain this code block.`\n  -\t`@coderabbitai modularize this function.`\n- PR comments: Tag `@coderabbitai` in a new PR comment to ask questions about the PR branch. For the best results, please provide a very specific query, as very limited context is provided in this mode. Examples:\n  - `@coderabbitai gather interesting stats about this repository and render them as a table. Additionally, render a pie chart showing the language distribution in the codebase.`\n  - `@coderabbitai read src/utils.ts and explain its main purpose.`\n  - `@coderabbitai read the files in the src/scheduler package and generate a class diagram using mermaid and a README in the markdown format.`\n  - `@coderabbitai help me debug CodeRabbit configuration file.`\n\n### Support\n\nNeed help? Create a ticket on our [support page](https://www.coderabbit.ai/contact-us/support) for assistance with any issues or questions.\n\nNote: Be mindful of the bot's finite context window. It's strongly recommended to break down tasks such as reading entire modules into smaller chunks. For a focused discussion, use review comments to chat about specific files and their changes, instead of using the PR comments.\n\n### CodeRabbit Commands (Invoked using PR comments)\n\n- `@coderabbitai pause` to pause the reviews on a PR.\n- `@coderabbitai resume` to resume the paused reviews.\n- `@coderabbitai review` to trigger an incremental review. This is useful when automatic reviews are disabled for the repository.\n- `@coderabbitai full review` to do a full review from scratch and review all the files again.\n- `@coderabbitai summary` to regenerate the summary of the PR.\n- `@coderabbitai generate docstrings` to [generate docstrings](https://docs.coderabbit.ai/finishing-touches/docstrings) for this PR.\n- `@coderabbitai generate sequence diagram` to generate a sequence diagram of the changes in this PR.\n- `@coderabbitai resolve` resolve all the CodeRabbit review comments.\n- `@coderabbitai configuration` to show the current CodeRabbit configuration for the repository.\n- `@coderabbitai help` to get help.\n\n### Other keywords and placeholders\n\n- Add `@coderabbitai ignore` anywhere in the PR description to prevent this PR from being reviewed.\n- Add `@coderabbitai summary` to generate the high-level summary at a specific location in the PR description.\n- Add `@coderabbitai` anywhere in the PR title to generate the title automatically.\n\n### CodeRabbit Configuration File (`.coderabbit.yaml`)\n\n- You can programmatically configure CodeRabbit by adding a `.coderabbit.yaml` file to the root of your repository.\n- Please see the [configuration documentation](https://docs.coderabbit.ai/guides/configure-coderabbit) for more information.\n- If your editor has YAML language server enabled, you can add the path at the top of this file to enable auto-completion and validation: `# yaml-language-server: $schema=https://coderabbit.ai/integrations/schema.v2.json`\n\n### Documentation and Community\n\n- Visit our [Documentation](https://docs.coderabbit.ai) for detailed information on how to use CodeRabbit.\n- Join our [Discord Community](http://discord.gg/coderabbit) to get help, request features, and share feedback.\n- Follow us on [X/Twitter](https://twitter.com/coderabbitai) for updates and announcements.\n\n</details>\n\n<!-- tips_end -->"
        }
      ],
      "relationships": [
        {
          "objectId": "coderabbitai[bot]",
          "qualifier": "commented-by"
        },
        {
          "objectId": "373",
          "qualifier": "on"
        }
      ],
      "id": "IC_kwDODyNbyM6t2h8y"
    },
    {
      "type": "comment_review",
      "time": "2025-05-28T15:29:28Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "coderabbitai[bot]",
          "qualifier": "commented-by"
        },
        {
          "objectId": "373",
          "qualifier": "for-pull-request"
        }
      ],
      "id": "2875554822"
    },
    {
      "type": "merge_pull_request",
      "time": "2025-05-28T15:48:43Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "373",
          "qualifier": "merged-on-pull_request"
        }
      ],
      "id": "ME_lADODyNbyM64pBsDzwAAAAQoKyjh"
    },
    {
      "type": "close_pull_request",
      "time": "2025-05-28T15:48:43Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "373",
          "qualifier": "closed-on-pull_request"
        }
      ],
      "id": "CE_lADODyNbyM64pBsDzwAAAAQoKyj3"
    },
    {
      "type": "commit",
      "time": "2025-05-26T09:21:34Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "authored-by"
        },
        {
          "objectId": "732a920c7e900d90355f99f1add2d55173819e41",
          "qualifier": "sha"
        },
        {
          "objectId": "371",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDczMmE5MjBjN2U5MDBkOTAzNTVmOTlmMWFkZDJkNTUxNzM4MTllNDE"
    },
    {
      "type": "comment_pull_request",
      "time": "2025-05-26T09:24:04Z",
      "attributes": [
        {
          "name": "comment",
          "value": "<!-- This is an auto-generated comment: summarize by coderabbit.ai -->\n<!-- walkthrough_start -->\n\n## Walkthrough\n\nA new JSON schema and Pydantic data models for resume previews are introduced, alongside a method to generate and validate structured resume preview data within the resume scoring service. The resume preview is now integrated into the main workflow for dashboard display. Additionally, a dependency version is updated in the requirements file.\n\n## Changes\n\n| File(s)                                                                                  | Change Summary                                                                                  |\n|------------------------------------------------------------------------------------------|------------------------------------------------------------------------------------------------|\n| `apps/backend/app/schemas/json/resume_preview.py`                                        | Added a JSON schema (`SCHEMA`) defining the structure for resume preview data.                 |\n| `apps/backend/app/schemas/pydantic/resume_preview.py`                                    | Introduced Pydantic models for resume preview: `PersonalInfo`, `ExperienceItem`, `EducationItem`, `ResumePreviewerModel`. |\n| `apps/backend/app/schemas/pydantic/__init__.py`                                          | Imported `ResumePreviewerModel` and added it to `__all__` for public API exposure.             |\n| `apps/backend/app/services/score_improvement_service.py`                                 | Added `get_resume_for_previewer` method; integrated resume preview generation and validation into workflow. |\n| `apps/backend/requirements.txt`                                                          | Downgraded `h11` package version from `0.16.0` to `0.14.0`.                                   |\n\n## Sequence Diagram(s)\n\n```mermaid\nsequenceDiagram\n    participant User\n    participant ScoreImprovementService\n    participant json_agent_manager\n    participant ResumePreviewerModel\n\n    User->>ScoreImprovementService: run(updated_resume)\n    ScoreImprovementService->>json_agent_manager: Format resume with JSON schema prompt\n    json_agent_manager-->>ScoreImprovementService: Raw JSON output\n    ScoreImprovementService->>ResumePreviewerModel: Validate and parse output\n    ResumePreviewerModel-->>ScoreImprovementService: Validated model or error\n    ScoreImprovementService-->>User: Return improved resume, score, and resume_preview\n```\n\n## Poem\n\n> In the meadow of code, a schema appears,  \n> For resumes to shine and calm all fears.  \n> With Pydantic friends, they validate and check,  \n> Ensuring your preview is perfect\u2014oh heck!  \n> Now dashboards can gleam,  \n> With structured resume dreams.  \n> \ud83d\udc07\u2728\n\n<!-- walkthrough_end -->\n<!-- internal state start -->\n\n\n<!-- DwQgtGAEAqAWCWBnSTIEMB26CuAXA9mAOYCmGJATmriQCaQDG+Ats2bgFyQAOFk+AIwBWJBrngA3EsgEBPRvlqU0AgfFwA6NPEgQAfACgjoCEYDEZyAAUASpADK2VmgqyjcVN2wAbb5AokAI7Y0rgANJDiuN50kABENtJOJJC0aIiwAvgu9FYBEvAkAO6UYXGQRemMAdSxcpDYiJT+FBIUyJj0qOmI+AzwtfRF6rA8Pn4BwaGQGE4CzQDMAOwAjBowsCm26PDMyAQoGLgUitgMKfh8zIrwAGbytyTU2AHIAd6Dkfjo/klsqelMtkKPReCQCsVSuhvLhYPhsERRohuKI7vAGKkSLhtN4Olk8JFNoxYJhSB0AjN8LhICQAB7cbzo9TeeS8fAFJRdLCwlJKRAMCjwbjifAYdZwFI0ZgM2qHBjebCcw6ErZ2RAIsm4fYk6k8hRHQUCPCXQ40DC0fbfeHReDkFVjCjcfBNCLvT5IdXSCLI1G3dHE0leyKhW1EQ6IY5nEUYRARTrE0QAa0ZEZQUtjkCNus2TUgTTE8FF5JSDBeASOLJ4H3OcO8Sna4qJ21t8sV0jzomjyFuJv5ATIGSpyBNTCUeYwQpRWpQt3Q3AZ6JUMTjyBKvnQyFtEYoUcLMcgPb4NAjoft5CK/CuNz9sUez1ejZLmwYyaQ1NttEXx8J1HtTAN8BZr2cI+PQUiCvcChjkw0rwB80YRMe4gYEQES0H0yRHNQe4NNwaTHnGtCbOW5xfFBp4Rp0OQZvG3A9KeSEyCQh4pGwFBEKGj7WHYqCMhgiaxAceoAOLqAAEtgAi/E6iDqJc8i/rAuC4NwiAcAA9OpHGwpJGgwepiAUAIsAUOpiTqmwYAALLUAwxHqV4vjqcsaxGPoxjgFAZD0Pgs5oMaxBkMoND0DBbBHFwvD8MInaSO29SjsoqjqFoOjuSYUAeJuHRYP5BCBeQVAhQorDsFwVAXhZzAuPICWKElaiaNouhgIYHmmAYaDzog6kCGgL7eepXXcAZdkkNVPVCL0GDqa8yQAPpghCRQaNwsgcAYcRbQYFiQAAggAkgVwWxFVNX8LOdmBog7gIMgV0oSktrHKc5wdDMxTWLIsKipA1y0D4vLMbap5oJAABS9gAPIAHJ5mN1UzGgbD0AABvYADCYkAKJWXtqMHiaYNzf8S2FCtGwpPymyIz6/Q3tqVORmILwpPG+Fg7gsgot2JoSC4haNL8FkliwTrkEcGYtgqn4oZAqMou0opoN4B0YD2qMRKjZ2uJr8t0orhQYOceuo3QZzYaKevxtriZwbiqNcQrlDTSrasa9FIhiPq2JbgehR1sg6p2Ru8sYMjJCm1EMSm+NOKm9wcLkNb5r8MKe4qz7/XUnxibIAAFKj3h9JbGCmyUAiyTQpu53Qtqm9psCSajACUFQjHmxyniaszrlzPNOzrsgE90neCihTsG5QRsm+gqdmwDDClwTN6B+gFIptOvme52GZPCHwywiq8B8K8KIFlIKBKEcaIu3P9B8gKQriJfq8WhEh+jGb9LT2Qs/S4qU8qN4C0CjsySOWsYJ0QwMPLWxcl7RlNrIJ47QU70DBpvC68tH6CnTlbMeoZEAAG59aL2XnKGW7ZgGgK1luKIeA9ymyUEQfsSCUGIDQT8VGODn6MIIRPSm8tEB218Bw/2JA6woHepg7e25CFcWpnHHgJwOTtjBtuKMrN6BShlDQQmp8/i8moGgCItx+pwXUNhOW/NGT4Rwr2aeKt4AAC9S5YJJikMmxREAaCMOYSwe0YTBT3Jae0Sh5QuFLsOWcBtLjFRNF4AQjIMTsHUIUG6BgoB7VoEqMG559SUSOPLTGOM8YE0/j8T8BZlauEgDYkImI/QTjlnqSGsN4Y0zBoeYWyRlHgnJgCbEvitpxDch1YaPU+oDXNENeco1Ok9TWmkG+DB1LzXmiDXA6zVrrU2ttXah1jpFVOk4aqtTt4PTJLdUWY5sB4VlGgHJOUUDSjiZ3Wo4VqTdNRuZZIeR+mQgoFZeq3gV4nGYPaR2HjFr5HJgTf6gN74ULbNqVA+T/oSOVHqVG6yVbeHWQTTeH8EAhyUE09sepEnJP2lYA6WC9QIpiI2VAlyUgDlZtqX8PzDH/OWpQYFShQVSPQAwN6skkkpCKJsbkRJGVPU3K8igxUJFNClZQNmqdPAuGpNvBlpwYgAHJkCxKVadWQzAsi4i4nSN8p5dhOiVTlNGuLfAEsgJglwFweQUGGLmbAxsSSPVoB/DuopKx6keZ+aM9KiTopBZmEgdrjaXAde6I43xKWSWpc9SgZjzi+L8QcoJRUQlkT1OEj4JaixYJNfEvgVL/SpPENINy+0cmxG5SLXl5N+UgoJkJIkOL5p4rdZg208sJm9X6gJGZw15lx0WbIZZ4hVnrM2dstaqNMmQAOoq4qna/mwsBQKiRYKWDyw0NCrxRQR5YFRpOqZM7aCzJGooiaDkl2YBXWsjZE4tnzR2VukZYywBGAfdOwac633pA/cu9Es1DEwoBStNaG1gMHKOqQQqnwh5YNZRkrKqQ7izmeicReaiPoXisJ+lZHSlFysaSDOWHM/ogt5gYkWfTlqDLQOsA675jaUPeqjKwLtlaq3VvgeF8al7CheKeRWrs/BKF9riduR98B4PDn4f82Jva5xone7GP9BR/xIPx8a0nBXSVeKkuWH5JAgOwJnIolxEw0hMzPdsFS37scgEIQQkRwERCgZgWQER4GlzQi8KLSKeFafdW+OMqdMDy2xmQ6MFnmBWcxd082CCM5+EfSw+EqcKl0PUAw0UaESAsJICQCIyCXCGYftIJ+WmuLVXHQetg3bj19vQEQOrRBaiM1zBi3EEQAGyzDIp8ThwexxjzKc86ciUIRCnqZ42Gr6D5bcZvFrPxhH22QJvTrbGaSSYoKRfuKQbEgLcfGTT0ZM6+e9MzXA8m5YeK4wMlj3SmiCica46NJo9q0uFuLJoPi/E7SLTQKt+4B1AwiYj6JHmHV1rGEkxtN9m03Sye20KHxEDIBE2J7T7spPqdGL5rgqNw5sC4NuMB0QSBcChlplWABtbcABdWOXXvDM+OAnJO7Ox41xLtGDnXPvC8+OALrWFcq4S85y9+X/Oa62gErLWXGuFcUCV/LRukl9eFcNwL3xhOlQRNJ2lzzZmsvlI7nT+WICuDPVZzEEXFBTahZgb7qXBXRTm/E5bthzWg9a3izLyAAAZN8EfrdtttyTsn6WLaZalC7o+bvqGe6OKbCrn248s5j7V/s0f5ZNfaNX7hbXcFl9Fyn7Jaeejy1+b1o9JQgUDZ8wHC09O5uU8k1wUTStR8ay1kPevm2vNcETxGbnxnDZO6lMbheWe9yL6T5nkPGAsub+O6I3fy+tfDO2pk8Z3Up3TOfVBygBQ3qjUuCQDZ0oVHjXYPNQHz+SA7Job7IBKYZBTHL0C4YXKBpXIGAShQRPQGivQUb5INoYhsA/RoykBbLQqHhIZ8p+5YqDr2BMABC7pshSCfL2BP7oiRyMDp7Eroi06XDVTTipZ3L4SxA/bPTfDqIfZaIQzQxwyHgsHLaWISr6IAgZBZA5BEbIgfCyDMrIDoFwihRFgfbvRsjSjUiNCgwCHtLQZIp6jsGfAeKITSr+D+qbjZgnAIijB5KfRoBYbUjVThykB8CoxTSijDpOHzQuGOGUCOw7rUj3YcGMz+BoAXjWheDUiOHaAxjUg9YkB9a94nqgoRCBq0B8RhghFuKUAnDtCZjyABCfYUDNJhiowwyigQJIpUjES+opDFEvD7hgxVIva1IAzSgxqsQgoFpqyQo7hlx/RYgqFxi3AI7RS+xlH2j2pf70A/bxj8hv5mE3IpAYD4AXhLyiIm5YjzQ4GXB4E9oEEVJGH3LFSmGdyXAMREhzQwjKioxXo96BGEbXrCqRqCQZrXFYhNGxCtEZy1L+r1j2gCTyCoxxAPHIZxCOxGD2C7BwQuAshTZ3ozHsjv6LEBDzSfzzS+DZbLHwHSTVgUpEhkzwgdBOF/SYD+HuH+FHC+EUluG55fzMC0DeE/5+H0kSEDFTGaHCg+KCLKGKCUgXg9iljQ78BYDIkFAtKfGcZol3YDAJ7x5WTJbaKxqfSoxYG7GIa4HXoBFDEYHCqNCxDwTNDdYDH9rfBYYnRHZ8EBCgg95dG4QcFzGGIFpwH3H+rDrmi/7HBPDZZ6kqG/Bdb7iVqkCVj+qsrBqZgEh6golUDri3DFwXhrEXjTbtiWklpyzEyGK/afTdLlqAjSEgjoBjHNB6hcEKrkF0ARAJR4pAIal7EUAHGApPF3Q5kpmbiCZthcj2hNKZzbi+mxBRF4AFpQzgR4q4lBkBiPTCoRo5JpK/TbwtF1wIKxD8n0DdLplWJhi8E7gsy2k9Kkw94RA5HRoZFZHKmmiV5uK6qtkvHcH2iTk/ZomniuYUCJgJnrGugkAyj9ByzElCyfgBDeyND+EOnUnOF0nNB5m3kvAyQAGw7w7BLVrI6Yio5RI1r0hxKDn1pZq45RDpKtoN6zj1lan7E6kUD5xNDeC3ARDGEhSakiy+5tytSQAAAi6IuAt6xSJB5mn+KJlB1Bs8duN0wG1+oGnUt+j6g0kw2AJ83+ksGguAtInAeyoyGGRyOGK25yl00BLasBRIYa8grKhBqAn4twJGYRdFFws42KsAKwKwBMdEL4oF4Eskv0tw4K8sAADBoCsAAGwaBeXmneW+UAAsgVXF2KMlclnyPiSlnF/sTKGwqA/0t8YRSgKI5of88gmC9QAQP5VxVM58t8YELs9is4qMdlDlEQToZo4geKCk5lsUcsoW4gagjIXMl4CaJIBQJoboxUBwYk0A0AVg6kawKwkAZ5L5Iw46Ea84ySpc6wlR/A3q0ICO6FBwxcHEDAIWooL0fgH5RQEQJoeRJoU1mZFIYITQRwBa/i+0xaG1HxKOla6F28ta2F2O1KTaBFBgy1+GZE71PkOFOOKSeO6S68nitmRSs1rZZltwl+oy1+bUGUl2PkfkAUm5xUYUZU4RlUWltURl9UVAyUTUaUrUBgKNYU6gGyFompfKzJlESqLUyNnkkASwCwAATGgAAJwc1eUMBLAkDc1eVeW0DC0LAACsEttw3N3NtwKwkaHNtAUtKw7NAAHCsNzSQKFRNe5BTazVTVsiAogHTT2syd5MzUAA=== -->\n\n<!-- internal state end -->\n\n---\n\n<details>\n<summary>\ud83d\udcdc Recent review details</summary>\n\n**Configuration used: CodeRabbit UI**\n**Review profile: CHILL**\n**Plan: Pro**\n\n\n<details>\n<summary>\ud83d\udce5 Commits</summary>\n\nReviewing files that changed from the base of the PR and between 3748cf831770a689c4bd16a26f34a48ff6a704fa and 732a920c7e900d90355f99f1add2d55173819e41.\n\n</details>\n\n<details>\n<summary>\ud83d\udcd2 Files selected for processing (5)</summary>\n\n* `apps/backend/app/schemas/json/resume_preview.py` (1 hunks)\n* `apps/backend/app/schemas/pydantic/__init__.py` (1 hunks)\n* `apps/backend/app/schemas/pydantic/resume_preview.py` (1 hunks)\n* `apps/backend/app/services/score_improvement_service.py` (5 hunks)\n* `apps/backend/requirements.txt` (1 hunks)\n\n</details>\n\n<details>\n<summary>\ud83d\udd07 Additional comments (5)</summary><blockquote>\n\n<details>\n<summary>apps/backend/app/schemas/pydantic/resume_preview.py (1)</summary>\n\n`5-13`: <details>\n<summary>\u274c Incorrect review comment</summary>\n\n**Inconsistency between JSON schema and Pydantic model for title field.**\n\nThe JSON schema defines `title` as a required string field, but the Pydantic model has it as `Optional[str]`. This inconsistency could cause validation issues.\n\n\nPlease ensure consistency between the JSON schema and Pydantic models. Either make `title` required in both or optional in both.\n\n---\n\nThis will locate the relevant JSON schema and show whether `title` is declared in `required`. Once we have that, we can confirm if the Pydantic model\u2019s `Optional[str]` aligns or needs adjustment.\n\n---\n\n\ud83c\udfc1 Script executed:\n\n```shell\n#!/bin/bash\necho \"Listing all JSON files in the repo:\"\nfd -e json\n\necho\necho \"Looking for JSON schema files that mention 'resume_preview':\"\nfd -e json | xargs rg -l '\"resume_preview\"' || echo \"No direct match for 'resume_preview'\"\n\necho\necho \"Searching across all JSON schemas for a 'PersonalInfo' definition or embedded 'title' property:\"\ngrep -R --include '*.json' -n '\"PersonalInfo\"' .\ngrep -R --include '*.json' -n '\"title\"' .\n\necho\necho \"If any resume-related schema file is identified above, inspect its 'required' array and 'properties' block to confirm whether 'title' is marked required.\"\n```\n\nLength of output: 1180\n\n---\n\n\n\n</details>\n\n**No JSON schema found to compare against**\n\nI can\u2019t locate any JSON schema defining a `PersonalInfo` type or marking `title` as required\u2014only the Pydantic model exists at `apps/backend/app/schemas/pydantic/resume_preview.py`. If there\u2019s a separate JSON schema we should align with, please point me to its file. \n\n> Likely an incorrect or invalid review comment.\n\n</details>\n<details>\n<summary>apps/backend/app/schemas/pydantic/__init__.py (1)</summary>\n\n`3-3`: **LGTM! The new model import and export are correctly added.**\n\nThe import follows the existing pattern and the model is properly added to the exports.\n\n\n\nAlso applies to: 9-9\n\n</details>\n<details>\n<summary>apps/backend/app/services/score_improvement_service.py (3)</summary>\n\n`8-8`: **LGTM! The new imports are correctly added.**\n\nThe imports for `ValidationError`, `json_schema_factory`, and `ResumePreviewerModel` are appropriate for the new functionality.\n\n\n\nAlso applies to: 13-14\n\n---\n\n`38-39`: **Good separation of concerns with specialized agent managers.**\n\nCreating separate agent managers for markdown and JSON output is a clean design choice that improves code clarity.\n\n---\n\n`146-150`: <details>\n<summary>\u2753 Verification inconclusive</summary>\n\n**Verify JSON schema availability and format.**\n\nThe code retrieves a JSON schema for \"structured_resume\". Ensure this schema exists and is properly formatted.\n\n---\n\n\ud83c\udfc1 Script executed:\n\n```shell\n#!/bin/bash\n# Description: Verify the structured_resume JSON schema exists\n\n# Search for json_schema_factory implementation\nrg -A 5 \"json_schema_factory\" --glob \"**/*schema*\"\n\n# Look for structured_resume schema definition\nfd -e py -e json | xargs rg \"structured_resume\" -A 5\n```\n\nLength of output: 7371\n\n---\n\n\n\n</details>\n\n**JSON Schema Factory and \u201cstructured_resume\u201d Schema Verification**\n\nI wasn\u2019t able to locate a definition for `json_schema_factory` or a `\"structured_resume\"` schema in the repo. Please confirm that:\n\n- A `json_schema_factory` implementation exists and is imported where used.\n- It exposes a `\"structured_resume\"` entry.\n- The JSON schema returned by `json_schema_factory.get(\"structured_resume\")` is valid JSON and matches your `StructuredResumeModel`.\n- Calls to `json.dumps(json_schema_factory.get(\"structured_resume\"), indent=2)` won\u2019t error at runtime.\n\nAffected locations:  \n- `apps/backend/app/services/score_improvement_service.py` (lines 146\u2013150)  \n- `apps/backend/app/services/resume_service.py` (prompt construction)\n\n</details>\n\n</blockquote></details>\n\n</details>\n<!-- finishing_touch_checkbox_start -->\n\n<details open=\"true\">\n<summary>\u2728 Finishing Touches</summary>\n\n- [ ] <!-- {\"checkboxId\": \"7962f53c-55bc-4827-bfbf-6a18da830691\"} --> \ud83d\udcdd Generate Docstrings\n\n</details>\n\n<!-- finishing_touch_checkbox_end -->\n<!-- tips_start -->\n\n---\n\nThanks for using CodeRabbit! It's free for OSS, and your support helps us grow. If you like it, consider giving us a shout-out.\n\n<details>\n<summary>\u2764\ufe0f Share</summary>\n\n- [X](https://twitter.com/intent/tweet?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A&url=https%3A//coderabbit.ai)\n- [Mastodon](https://mastodon.social/share?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A%20https%3A%2F%2Fcoderabbit.ai)\n- [Reddit](https://www.reddit.com/submit?title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&text=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code.%20Check%20it%20out%3A%20https%3A//coderabbit.ai)\n- [LinkedIn](https://www.linkedin.com/sharing/share-offsite/?url=https%3A%2F%2Fcoderabbit.ai&mini=true&title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&summary=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code)\n\n</details>\n\n<details>\n<summary>\ud83e\udea7 Tips</summary>\n\n### Chat\n\nThere are 3 ways to chat with [CodeRabbit](https://coderabbit.ai?utm_source=oss&utm_medium=github&utm_campaign=srbhr/Resume-Matcher&utm_content=371):\n\n- Review comments: Directly reply to a review comment made by CodeRabbit. Example:\n  - `I pushed a fix in commit <commit_id>, please review it.`\n  - `Explain this complex logic.`\n  - `Open a follow-up GitHub issue for this discussion.`\n- Files and specific lines of code (under the \"Files changed\" tab): Tag `@coderabbitai` in a new review comment at the desired location with your query. Examples:\n  - `@coderabbitai explain this code block.`\n  -\t`@coderabbitai modularize this function.`\n- PR comments: Tag `@coderabbitai` in a new PR comment to ask questions about the PR branch. For the best results, please provide a very specific query, as very limited context is provided in this mode. Examples:\n  - `@coderabbitai gather interesting stats about this repository and render them as a table. Additionally, render a pie chart showing the language distribution in the codebase.`\n  - `@coderabbitai read src/utils.ts and explain its main purpose.`\n  - `@coderabbitai read the files in the src/scheduler package and generate a class diagram using mermaid and a README in the markdown format.`\n  - `@coderabbitai help me debug CodeRabbit configuration file.`\n\n### Support\n\nNeed help? Create a ticket on our [support page](https://www.coderabbit.ai/contact-us/support) for assistance with any issues or questions.\n\nNote: Be mindful of the bot's finite context window. It's strongly recommended to break down tasks such as reading entire modules into smaller chunks. For a focused discussion, use review comments to chat about specific files and their changes, instead of using the PR comments.\n\n### CodeRabbit Commands (Invoked using PR comments)\n\n- `@coderabbitai pause` to pause the reviews on a PR.\n- `@coderabbitai resume` to resume the paused reviews.\n- `@coderabbitai review` to trigger an incremental review. This is useful when automatic reviews are disabled for the repository.\n- `@coderabbitai full review` to do a full review from scratch and review all the files again.\n- `@coderabbitai summary` to regenerate the summary of the PR.\n- `@coderabbitai generate docstrings` to [generate docstrings](https://docs.coderabbit.ai/finishing-touches/docstrings) for this PR.\n- `@coderabbitai generate sequence diagram` to generate a sequence diagram of the changes in this PR.\n- `@coderabbitai resolve` resolve all the CodeRabbit review comments.\n- `@coderabbitai configuration` to show the current CodeRabbit configuration for the repository.\n- `@coderabbitai help` to get help.\n\n### Other keywords and placeholders\n\n- Add `@coderabbitai ignore` anywhere in the PR description to prevent this PR from being reviewed.\n- Add `@coderabbitai summary` to generate the high-level summary at a specific location in the PR description.\n- Add `@coderabbitai` anywhere in the PR title to generate the title automatically.\n\n### CodeRabbit Configuration File (`.coderabbit.yaml`)\n\n- You can programmatically configure CodeRabbit by adding a `.coderabbit.yaml` file to the root of your repository.\n- Please see the [configuration documentation](https://docs.coderabbit.ai/guides/configure-coderabbit) for more information.\n- If your editor has YAML language server enabled, you can add the path at the top of this file to enable auto-completion and validation: `# yaml-language-server: $schema=https://coderabbit.ai/integrations/schema.v2.json`\n\n### Documentation and Community\n\n- Visit our [Documentation](https://docs.coderabbit.ai) for detailed information on how to use CodeRabbit.\n- Join our [Discord Community](http://discord.gg/coderabbit) to get help, request features, and share feedback.\n- Follow us on [X/Twitter](https://twitter.com/coderabbitai) for updates and announcements.\n\n</details>\n\n<!-- tips_end -->"
        }
      ],
      "relationships": [
        {
          "objectId": "coderabbitai[bot]",
          "qualifier": "commented-by"
        },
        {
          "objectId": "371",
          "qualifier": "on"
        }
      ],
      "id": "IC_kwDODyNbyM6tZIlE"
    },
    {
      "type": "comment_review",
      "time": "2025-05-26T09:31:14Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "coderabbitai[bot]",
          "qualifier": "commented-by"
        },
        {
          "objectId": "371",
          "qualifier": "for-pull-request"
        }
      ],
      "id": "2867823681"
    },
    {
      "type": "comment_review",
      "time": "2025-05-26T09:32:02Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "coderabbitai[bot]",
          "qualifier": "commented-by"
        },
        {
          "objectId": "371",
          "qualifier": "for-pull-request"
        }
      ],
      "id": "2867826491"
    },
    {
      "type": "merge_pull_request",
      "time": "2025-05-26T10:47:54Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "371",
          "qualifier": "merged-on-pull_request"
        }
      ],
      "id": "ME_lADODyNbyM64Ng4gzwAAAAQlsqL7"
    },
    {
      "type": "close_pull_request",
      "time": "2025-05-26T10:47:54Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "371",
          "qualifier": "closed-on-pull_request"
        }
      ],
      "id": "CE_lADODyNbyM64Ng4gzwAAAAQlsqMT"
    },
    {
      "type": "commit",
      "time": "2025-05-26T08:17:55Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "srbhr",
          "qualifier": "authored-by"
        },
        {
          "objectId": "d2de9324c17c1a037af820fe267fc36209e6f613",
          "qualifier": "sha"
        },
        {
          "objectId": "370",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKGQyZGU5MzI0YzE3YzFhMDM3YWY4MjBmZTI2N2ZjMzYyMDllNmY2MTM"
    },
    {
      "type": "merge_pull_request",
      "time": "2025-05-26T08:43:34Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "370",
          "qualifier": "merged-on-pull_request"
        }
      ],
      "id": "ME_lADODyNbyM64NLOyzwAAAAQll05i"
    },
    {
      "type": "close_pull_request",
      "time": "2025-05-26T08:43:34Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "370",
          "qualifier": "closed-on-pull_request"
        }
      ],
      "id": "CE_lADODyNbyM64NLOyzwAAAAQll05z"
    },
    {
      "type": "comment_pull_request",
      "time": "2025-05-26T08:43:38Z",
      "attributes": [
        {
          "name": "comment",
          "value": "<!-- This is an auto-generated comment: summarize by coderabbit.ai -->\n<!-- This is an auto-generated comment: failure by coderabbit.ai -->\n\n> [!CAUTION]\n> ## Review failed\n> \n> The pull request is closed.\n\n<!-- end of auto-generated comment: failure by coderabbit.ai -->\n<!-- walkthrough_start -->\n\n## Walkthrough\n\nThe `README.md` file has been updated to revise the contact and contribution sections. Changes include rewording headings, expanding contribution invitations, updating Discord link text, and enhancing the donation section with more details and additional support options. No functional or code logic was modified.\n\n## Changes\n\n| File         | Change Summary                                                                                   |\n|--------------|-------------------------------------------------------------------------------------------------|\n| README.md    | Updated contribution and contact sections, reworded headings, expanded donation/support options, clarified instructions, and improved presentation. |\n\n## Poem\n\n> A README refreshed, with kindness and care,  \n> Invites all to join, to build and to share.  \n> New badges and links, a welcoming tone\u2014  \n> For rabbits and coders, you\u2019re never alone!  \n> Hop in, contribute, or buy us a treat,  \n> In this cozy warren, our community\u2019s complete. \ud83d\udc07\u2728\n\n<!-- walkthrough_end -->\n<!-- internal state start -->\n\n\n<!-- DwQgtGAEAqAWCWBnSTIEMB26CuAXA9mAOYCmGJATmriQCaQDG+Ats2bgFyQAOFk+AIwBWJBrngA3EsgEBPRvlqU0AgfFwA6NPEgQAfACgjoCEYDEZyAAUASpETZWaCrKNxU3bABsvkCiQBHbGlcABpIcVwvOkgAIgAxeAAPSC94DABrZHTIGwBRAEEAEQBZPPQMemxuWmoSe1FxfCxI6MgAM3w+Bi9ndVlQ2MgAdzRkBn86+jlIbERKewoBWD5MelQMRwFKGIBmAHYABg0YWHqlRAn4biasdJ7sC/QIkmZuXpoOrshafAZHdjpIiMWCYUgyPA/fDSSAYfC4ezcUTwdryXBnSAkJJoMSQZiKFHwBjUeDNZDMNBKE5weqterpWhEurIdHUCIY2zoWi0fyIebZPnBZD+D4xAipdJZEbqBAtDH5YplDrwNprFAYCT4LxSZDVWriDDAtANMSklrqNri+BvCj4KSMXoUfrUjl2VBpTJi/Ds+oAcXUAAlsAJIABVGwAGS4sFwuG4iA4AHpE0QZcGNExmInEEsVombNIAWAStQGGcKInPD5Ewdjqd6rw7fAlPQaG9RfZsERwbgWaCEej6mWwTCKfJ0prtfV2skgZABLaMmR+Hx7l1/LiPVK1T0+qi5/NTc1IGdKUDEOEBJC4T8SLhtNF6BcrjczSvEciZwwQSPkM56RgDwtuqPqdk4LgaEY+jGOAUBkPQ+DtDgBDEGQyg0PQmZsBgnA8HwggiKaOrzvITBKFQqjqFoOjQSYUDuAKFTIYQpDkFQGEKKw7BcFQwxgRSLgkQo5EqGomjaLoYCGDBpgGAqpR5BozC0BwBixOpBgWJABQAJKoWxUz8c48iIT+hrSG4GKMu0SH4tZ8AwoOkAAAbyWUSm0M5Ql6iShqgUwOE4giO7NLgTpXrcJq3CcADKSIMISxI+AMoFbi8SQIp0fBOUUSBMBQmEsMw2AYP0KDjKC5n0O0trMHEABS+A5KGyAAGSQAAwqF4V4CQQzirEjXNX+lSdd18ARSQgzoGkRClX5wwyqBp6Mn5iC4LI0QnAU3LqGaaDJeETncM4aBEFQ3CwLelzhXOAVhRNeBviQNldL25WYkkJ2VF66pAfUxoLvglILBO6gkseWUKDhPW3BeeKAs0c6sgi92w10f7+BK60xMeTnDCQAiIOoAOjf6uBBgI4RqmQTDYFQqZ+e0JDUPT9T+EEIQjU+eVzMTZL8FguWXF0tAuvUsQxdU3BvaBRQkFIXj4Nw2EIjMRTNL5RBDIekWoP4GBoGw1W1Q1TVYC1kDtV1MOPTQ/XepL0uyzlCskErKvsEJGuGwaRDTYt6LPPlvIy5Ud2VaQIFOStQLi1CvtvsrcPoFjWLfcBVqAV4jx+oGwaQHFZIYxU9AAELYPIJQA2NNkkPUAiUuC4SB1dTmUoykWmcaSj3iqYoqG0aTrcjZzzDwHxZcwiDx3ayg+PYYXYGIbMffiWO9w+MRqnMlBgDVDmVF4KWvJdYzwAAXndRUlWVE5alIqvhGjdtmtTo0ONwMsUGE0pBz0LN/CrgwOtCgy8U5qnXg2Wq6QvZbhnvWMy4IoSwnhDNGgqwMDyHaCVI8htfBK1TN+CKKAbRzwdH0Daz8yRIBoIBFKapeDSHYBDLApknIvwim+NUn9v4InSFPVhkEjCaUsAULwGDWEsm9E5JQu52JmmQKZdOb1cZ8E8AINI35ATiAsgYKAAA5b0w5zLSM+nwtRPBgxaMxDhMqcjHRSMgupWIUEpIyTgqNbueAWJoXYjELC3E/BoD4g4cC8gZhkWUJRcSNEpJAA=== -->\n\n<!-- internal state end -->\n\n---\n\n<details>\n<summary>\ud83d\udcdc Recent review details</summary>\n\n**Configuration used: CodeRabbit UI**\n**Review profile: CHILL**\n**Plan: Pro**\n\n\n<details>\n<summary>\ud83d\udce5 Commits</summary>\n\nReviewing files that changed from the base of the PR and between f2ae4f00836484f7d9f48589a9fa4c5ebc20c3e3 and d2de9324c17c1a037af820fe267fc36209e6f613.\n\n</details>\n\n<details>\n<summary>\ud83d\udcd2 Files selected for processing (1)</summary>\n\n* `README.md` (2 hunks)\n\n</details>\n\n</details>\n<!-- tips_start -->\n\n---\n\nThanks for using CodeRabbit! It's free for OSS, and your support helps us grow. If you like it, consider giving us a shout-out.\n\n<details>\n<summary>\u2764\ufe0f Share</summary>\n\n- [X](https://twitter.com/intent/tweet?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A&url=https%3A//coderabbit.ai)\n- [Mastodon](https://mastodon.social/share?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A%20https%3A%2F%2Fcoderabbit.ai)\n- [Reddit](https://www.reddit.com/submit?title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&text=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code.%20Check%20it%20out%3A%20https%3A//coderabbit.ai)\n- [LinkedIn](https://www.linkedin.com/sharing/share-offsite/?url=https%3A%2F%2Fcoderabbit.ai&mini=true&title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&summary=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code)\n\n</details>\n\n<details>\n<summary>\ud83e\udea7 Tips</summary>\n\n### Chat\n\nThere are 3 ways to chat with [CodeRabbit](https://coderabbit.ai?utm_source=oss&utm_medium=github&utm_campaign=srbhr/Resume-Matcher&utm_content=370):\n\n- Review comments: Directly reply to a review comment made by CodeRabbit. Example:\n  - `I pushed a fix in commit <commit_id>, please review it.`\n  - `Explain this complex logic.`\n  - `Open a follow-up GitHub issue for this discussion.`\n- Files and specific lines of code (under the \"Files changed\" tab): Tag `@coderabbitai` in a new review comment at the desired location with your query. Examples:\n  - `@coderabbitai explain this code block.`\n  -\t`@coderabbitai modularize this function.`\n- PR comments: Tag `@coderabbitai` in a new PR comment to ask questions about the PR branch. For the best results, please provide a very specific query, as very limited context is provided in this mode. Examples:\n  - `@coderabbitai gather interesting stats about this repository and render them as a table. Additionally, render a pie chart showing the language distribution in the codebase.`\n  - `@coderabbitai read src/utils.ts and explain its main purpose.`\n  - `@coderabbitai read the files in the src/scheduler package and generate a class diagram using mermaid and a README in the markdown format.`\n  - `@coderabbitai help me debug CodeRabbit configuration file.`\n\n### Support\n\nNeed help? Create a ticket on our [support page](https://www.coderabbit.ai/contact-us/support) for assistance with any issues or questions.\n\nNote: Be mindful of the bot's finite context window. It's strongly recommended to break down tasks such as reading entire modules into smaller chunks. For a focused discussion, use review comments to chat about specific files and their changes, instead of using the PR comments.\n\n### CodeRabbit Commands (Invoked using PR comments)\n\n- `@coderabbitai pause` to pause the reviews on a PR.\n- `@coderabbitai resume` to resume the paused reviews.\n- `@coderabbitai review` to trigger an incremental review. This is useful when automatic reviews are disabled for the repository.\n- `@coderabbitai full review` to do a full review from scratch and review all the files again.\n- `@coderabbitai summary` to regenerate the summary of the PR.\n- `@coderabbitai generate docstrings` to [generate docstrings](https://docs.coderabbit.ai/finishing-touches/docstrings) for this PR.\n- `@coderabbitai generate sequence diagram` to generate a sequence diagram of the changes in this PR.\n- `@coderabbitai resolve` resolve all the CodeRabbit review comments.\n- `@coderabbitai configuration` to show the current CodeRabbit configuration for the repository.\n- `@coderabbitai help` to get help.\n\n### Other keywords and placeholders\n\n- Add `@coderabbitai ignore` anywhere in the PR description to prevent this PR from being reviewed.\n- Add `@coderabbitai summary` to generate the high-level summary at a specific location in the PR description.\n- Add `@coderabbitai` anywhere in the PR title to generate the title automatically.\n\n### CodeRabbit Configuration File (`.coderabbit.yaml`)\n\n- You can programmatically configure CodeRabbit by adding a `.coderabbit.yaml` file to the root of your repository.\n- Please see the [configuration documentation](https://docs.coderabbit.ai/guides/configure-coderabbit) for more information.\n- If your editor has YAML language server enabled, you can add the path at the top of this file to enable auto-completion and validation: `# yaml-language-server: $schema=https://coderabbit.ai/integrations/schema.v2.json`\n\n### Documentation and Community\n\n- Visit our [Documentation](https://docs.coderabbit.ai) for detailed information on how to use CodeRabbit.\n- Join our [Discord Community](http://discord.gg/coderabbit) to get help, request features, and share feedback.\n- Follow us on [X/Twitter](https://twitter.com/coderabbitai) for updates and announcements.\n\n</details>\n\n<!-- tips_end -->"
        }
      ],
      "relationships": [
        {
          "objectId": "coderabbitai[bot]",
          "qualifier": "commented-by"
        },
        {
          "objectId": "370",
          "qualifier": "on"
        }
      ],
      "id": "IC_kwDODyNbyM6tY41P"
    },
    {
      "type": "commit",
      "time": "2025-05-26T07:13:26Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "authored-by"
        },
        {
          "objectId": "542206e0fd30cf32769a9ba5c9fd06c2404f282f",
          "qualifier": "sha"
        },
        {
          "objectId": "369",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDU0MjIwNmUwZmQzMGNmMzI3NjlhOWJhNWM5ZmQwNmMyNDA0ZjI4MmY"
    },
    {
      "type": "comment_pull_request",
      "time": "2025-05-26T07:16:35Z",
      "attributes": [
        {
          "name": "comment",
          "value": "<!-- This is an auto-generated comment: summarize by coderabbit.ai -->\n<!-- This is an auto-generated comment: failure by coderabbit.ai -->\n\n> [!CAUTION]\n> ## Review failed\n> \n> The pull request is closed.\n\n<!-- end of auto-generated comment: failure by coderabbit.ai -->\n<!-- walkthrough_start -->\n\n## Walkthrough\n\nThe version of the `h11` package in the backend requirements file was updated from 0.14.0 to 0.16.0. No other dependencies or files were modified.\n\n## Changes\n\n| File(s)                          | Change Summary                              |\n|-----------------------------------|---------------------------------------------|\n| apps/backend/requirements.txt     | Updated `h11` version from 0.14.0 to 0.16.0 |\n\n## Poem\n\n> A hop, a skip, a version bump,\n> From fourteen to sixteen, over the hump.\n> Dependencies fresh, the code will run,\n> With h11 shining like the sun.\n> \ud83d\udc07\u2728\n\n<!-- walkthrough_end -->\n<!-- internal state start -->\n\n\n<!-- DwQgtGAEAqAWCWBnSTIEMB26CuAXA9mAOYCmGJATmriQCaQDG+Ats2bgFyQAOFk+AIwBWJBrngA3EsgEBPRvlqU0AgfFwA6NPEgQAfACgjoCEYDEZyAAUASpETZWaCrKNwSPbABsvkCiQBHbGlcSHFcLzpIACIAVW5aag8BNAYAazJ6JW5MsgZ5fAAzSFgARlKw/EgABg1SgDZoyAB3NGQHAWZ1Gno5MNgPbERKewoBWD426zsMRwERgGZ6gE4ULFwByBtpRxIwAFlqBgG+f258RHV8Fw0YTaVEBgp4bnF8LGGxeHf+Yo2PbjeXz+IIhBQYXDaDDINBhEjMbheJKQQrXHgUfASeC0eAYIiQJSQ+BedrYY7oZD+JE9FCIBzSAA0BOkTxebywRUYsEwpEQTNwshyvy5PJITN4+HOw3ox1FfPsTxIZEQsHwuGQaKYSnsGBeOXV/JCuPxuMQuAoZPZ8uOojSXiQoXU8PlmHoaFoOPZaF8uNRFGY1G+GFuAAl8M0SFIKEyMO8PJz/sMUfASF5aMhuVJIPMyMmfFF8HgWupYPYcgx4IV4Aw1n6A+y/CQiM4cXj+oMEklbu5+BgvPISAAPRHV9TMom+NASbRIgSRWn9ajt7OpDIYLIkHLrvLyP3L7irtCkErlBfzY2QbCdmkESBRy4/WoNW4AOSqhWwFH+fF913rQfQARC1Cf5IAwahP3jP5NivRIaCZdRkHgBFUlwJk0RoM0LwlBg6EgpDkAlLElHoXF9yBRtQTNZlHmeV4gw0Ix9GMcAoEyYU0DwQhSHIKgaSYVh2C4Xh+GEURxCkGR5C1ZRVHULQdGYkwoDgVBUEwHACGIMhlH4lg2AhLgqGaexHADFxs2kxRZLUTRtF0MBDBY0wDDQbhuEQAB6FJ0kyTyQWweB/AM9UNFwQdOAMaJooMCxIAAQQASW03iknoBwnAszlZTxaQ3E2e8AITTYAAMylKEqeEPY8yNAny13oAKgvhdhkFaZBYLSlEMWYGo6gAFg0apKj659akgN9+G/ZktyUDAK2kfg+EK942soDwctIWhGKMWLLHirwaD4oNkFvUClAYJFjtW4Uh3OL8Cz4QE52rSB2HUFNECMN9yEY6LoiYxznLY9cOK4lLdKiASQqMtATIy8z5D6GSqDkuzFMcoA= -->\n\n<!-- internal state end -->\n\n---\n\n<details>\n<summary>\ud83d\udcdc Recent review details</summary>\n\n**Configuration used: CodeRabbit UI**\n**Review profile: CHILL**\n**Plan: Pro**\n\n\n<details>\n<summary>\ud83d\udce5 Commits</summary>\n\nReviewing files that changed from the base of the PR and between 794f5a58026c3fa65d4f3f9a7fdee537dafa0ef8 and 542206e0fd30cf32769a9ba5c9fd06c2404f282f.\n\n</details>\n\n<details>\n<summary>\ud83d\udcd2 Files selected for processing (1)</summary>\n\n* `apps/backend/requirements.txt` (1 hunks)\n\n</details>\n\n</details>\n<!-- tips_start -->\n\n---\n\nThanks for using CodeRabbit! It's free for OSS, and your support helps us grow. If you like it, consider giving us a shout-out.\n\n<details>\n<summary>\u2764\ufe0f Share</summary>\n\n- [X](https://twitter.com/intent/tweet?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A&url=https%3A//coderabbit.ai)\n- [Mastodon](https://mastodon.social/share?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A%20https%3A%2F%2Fcoderabbit.ai)\n- [Reddit](https://www.reddit.com/submit?title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&text=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code.%20Check%20it%20out%3A%20https%3A//coderabbit.ai)\n- [LinkedIn](https://www.linkedin.com/sharing/share-offsite/?url=https%3A%2F%2Fcoderabbit.ai&mini=true&title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&summary=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code)\n\n</details>\n\n<details>\n<summary>\ud83e\udea7 Tips</summary>\n\n### Chat\n\nThere are 3 ways to chat with [CodeRabbit](https://coderabbit.ai?utm_source=oss&utm_medium=github&utm_campaign=srbhr/Resume-Matcher&utm_content=369):\n\n- Review comments: Directly reply to a review comment made by CodeRabbit. Example:\n  - `I pushed a fix in commit <commit_id>, please review it.`\n  - `Explain this complex logic.`\n  - `Open a follow-up GitHub issue for this discussion.`\n- Files and specific lines of code (under the \"Files changed\" tab): Tag `@coderabbitai` in a new review comment at the desired location with your query. Examples:\n  - `@coderabbitai explain this code block.`\n  -\t`@coderabbitai modularize this function.`\n- PR comments: Tag `@coderabbitai` in a new PR comment to ask questions about the PR branch. For the best results, please provide a very specific query, as very limited context is provided in this mode. Examples:\n  - `@coderabbitai gather interesting stats about this repository and render them as a table. Additionally, render a pie chart showing the language distribution in the codebase.`\n  - `@coderabbitai read src/utils.ts and explain its main purpose.`\n  - `@coderabbitai read the files in the src/scheduler package and generate a class diagram using mermaid and a README in the markdown format.`\n  - `@coderabbitai help me debug CodeRabbit configuration file.`\n\n### Support\n\nNeed help? Create a ticket on our [support page](https://www.coderabbit.ai/contact-us/support) for assistance with any issues or questions.\n\nNote: Be mindful of the bot's finite context window. It's strongly recommended to break down tasks such as reading entire modules into smaller chunks. For a focused discussion, use review comments to chat about specific files and their changes, instead of using the PR comments.\n\n### CodeRabbit Commands (Invoked using PR comments)\n\n- `@coderabbitai pause` to pause the reviews on a PR.\n- `@coderabbitai resume` to resume the paused reviews.\n- `@coderabbitai review` to trigger an incremental review. This is useful when automatic reviews are disabled for the repository.\n- `@coderabbitai full review` to do a full review from scratch and review all the files again.\n- `@coderabbitai summary` to regenerate the summary of the PR.\n- `@coderabbitai generate docstrings` to [generate docstrings](https://docs.coderabbit.ai/finishing-touches/docstrings) for this PR.\n- `@coderabbitai generate sequence diagram` to generate a sequence diagram of the changes in this PR.\n- `@coderabbitai resolve` resolve all the CodeRabbit review comments.\n- `@coderabbitai configuration` to show the current CodeRabbit configuration for the repository.\n- `@coderabbitai help` to get help.\n\n### Other keywords and placeholders\n\n- Add `@coderabbitai ignore` anywhere in the PR description to prevent this PR from being reviewed.\n- Add `@coderabbitai summary` to generate the high-level summary at a specific location in the PR description.\n- Add `@coderabbitai` anywhere in the PR title to generate the title automatically.\n\n### CodeRabbit Configuration File (`.coderabbit.yaml`)\n\n- You can programmatically configure CodeRabbit by adding a `.coderabbit.yaml` file to the root of your repository.\n- Please see the [configuration documentation](https://docs.coderabbit.ai/guides/configure-coderabbit) for more information.\n- If your editor has YAML language server enabled, you can add the path at the top of this file to enable auto-completion and validation: `# yaml-language-server: $schema=https://coderabbit.ai/integrations/schema.v2.json`\n\n### Documentation and Community\n\n- Visit our [Documentation](https://docs.coderabbit.ai) for detailed information on how to use CodeRabbit.\n- Join our [Discord Community](http://discord.gg/coderabbit) to get help, request features, and share feedback.\n- Follow us on [X/Twitter](https://twitter.com/coderabbitai) for updates and announcements.\n\n</details>\n\n<!-- tips_end -->"
        }
      ],
      "relationships": [
        {
          "objectId": "coderabbitai[bot]",
          "qualifier": "commented-by"
        },
        {
          "objectId": "369",
          "qualifier": "on"
        }
      ],
      "id": "IC_kwDODyNbyM6tYK0f"
    },
    {
      "type": "merge_pull_request",
      "time": "2025-05-26T07:16:50Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "369",
          "qualifier": "merged-on-pull_request"
        }
      ],
      "id": "ME_lADODyNbyM64MaK_zwAAAAQlhaQA"
    },
    {
      "type": "close_pull_request",
      "time": "2025-05-26T07:16:50Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "369",
          "qualifier": "closed-on-pull_request"
        }
      ],
      "id": "CE_lADODyNbyM64MaK_zwAAAAQlhaQY"
    },
    {
      "type": "commit",
      "time": "2025-05-26T06:52:02Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "authored-by"
        },
        {
          "objectId": "82cd46a4ccc1c559151825055fd45b610d4bb6f5",
          "qualifier": "sha"
        },
        {
          "objectId": "368",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDgyY2Q0NmE0Y2NjMWM1NTkxNTE4MjUwNTVmZDQ1YjYxMGQ0YmI2ZjU"
    },
    {
      "type": "add_label",
      "time": "2025-05-26T06:52:04Z",
      "attributes": [
        {
          "name": "label",
          "value": "dependencies"
        }
      ],
      "relationships": [
        {
          "objectId": "dependabot[bot]",
          "qualifier": "authored-by"
        },
        {
          "objectId": "368",
          "qualifier": "labeled-on-pull_request"
        }
      ],
      "id": "LE_lADODyNbyM64MPxHzwAAAAQlgVyz"
    },
    {
      "type": "add_label",
      "time": "2025-05-26T06:52:04Z",
      "attributes": [
        {
          "name": "label",
          "value": "python"
        }
      ],
      "relationships": [
        {
          "objectId": "dependabot[bot]",
          "qualifier": "authored-by"
        },
        {
          "objectId": "368",
          "qualifier": "labeled-on-pull_request"
        }
      ],
      "id": "LE_lADODyNbyM64MPxHzwAAAAQlgVzD"
    },
    {
      "type": "comment_pull_request",
      "time": "2025-05-26T06:52:09Z",
      "attributes": [
        {
          "name": "comment",
          "value": "<!-- This is an auto-generated comment: summarize by coderabbit.ai -->\n<!-- This is an auto-generated comment: skip review by coderabbit.ai -->\n\n> [!IMPORTANT]\n> ## Review skipped\n> \n> Bot user detected.\n> \n> To trigger a single review, invoke the `@coderabbitai review` command.\n> \n> You can disable this status message by setting the `reviews.review_status` to `false` in the CodeRabbit configuration file.\n\n<!-- end of auto-generated comment: skip review by coderabbit.ai -->\n<!-- tips_start -->\n\n---\n\n\n\n<details>\n<summary>\ud83e\udea7 Tips</summary>\n\n### Chat\n\nThere are 3 ways to chat with [CodeRabbit](https://coderabbit.ai?utm_source=oss&utm_medium=github&utm_campaign=srbhr/Resume-Matcher&utm_content=368):\n\n- Review comments: Directly reply to a review comment made by CodeRabbit. Example:\n  - `I pushed a fix in commit <commit_id>, please review it.`\n  - `Explain this complex logic.`\n  - `Open a follow-up GitHub issue for this discussion.`\n- Files and specific lines of code (under the \"Files changed\" tab): Tag `@coderabbitai` in a new review comment at the desired location with your query. Examples:\n  - `@coderabbitai explain this code block.`\n  -\t`@coderabbitai modularize this function.`\n- PR comments: Tag `@coderabbitai` in a new PR comment to ask questions about the PR branch. For the best results, please provide a very specific query, as very limited context is provided in this mode. Examples:\n  - `@coderabbitai gather interesting stats about this repository and render them as a table. Additionally, render a pie chart showing the language distribution in the codebase.`\n  - `@coderabbitai read src/utils.ts and explain its main purpose.`\n  - `@coderabbitai read the files in the src/scheduler package and generate a class diagram using mermaid and a README in the markdown format.`\n  - `@coderabbitai help me debug CodeRabbit configuration file.`\n\n### Support\n\nNeed help? Join our [Discord community](https://discord.gg/coderabbit) for assistance with any issues or questions.\n\nNote: Be mindful of the bot's finite context window. It's strongly recommended to break down tasks such as reading entire modules into smaller chunks. For a focused discussion, use review comments to chat about specific files and their changes, instead of using the PR comments.\n\n### CodeRabbit Commands (Invoked using PR comments)\n\n- `@coderabbitai pause` to pause the reviews on a PR.\n- `@coderabbitai resume` to resume the paused reviews.\n- `@coderabbitai review` to trigger an incremental review. This is useful when automatic reviews are disabled for the repository.\n- `@coderabbitai full review` to do a full review from scratch and review all the files again.\n- `@coderabbitai summary` to regenerate the summary of the PR.\n- `@coderabbitai generate sequence diagram` to generate a sequence diagram of the changes in this PR.\n- `@coderabbitai resolve` resolve all the CodeRabbit review comments.\n- `@coderabbitai configuration` to show the current CodeRabbit configuration for the repository.\n- `@coderabbitai help` to get help.\n\n### Other keywords and placeholders\n\n- Add `@coderabbitai ignore` anywhere in the PR description to prevent this PR from being reviewed.\n- Add `@coderabbitai summary` to generate the high-level summary at a specific location in the PR description.\n- Add `@coderabbitai` anywhere in the PR title to generate the title automatically.\n\n### CodeRabbit Configuration File (`.coderabbit.yaml`)\n\n- You can programmatically configure CodeRabbit by adding a `.coderabbit.yaml` file to the root of your repository.\n- Please see the [configuration documentation](https://docs.coderabbit.ai/guides/configure-coderabbit) for more information.\n- If your editor has YAML language server enabled, you can add the path at the top of this file to enable auto-completion and validation: `# yaml-language-server: $schema=https://coderabbit.ai/integrations/schema.v2.json`\n\n### Documentation and Community\n\n- Visit our [Documentation](https://docs.coderabbit.ai) for detailed information on how to use CodeRabbit.\n- Join our [Discord Community](http://discord.gg/coderabbit) to get help, request features, and share feedback.\n- Follow us on [X/Twitter](https://twitter.com/coderabbitai) for updates and announcements.\n\n</details>\n\n<!-- tips_end -->"
        }
      ],
      "relationships": [
        {
          "objectId": "coderabbitai[bot]",
          "qualifier": "commented-by"
        },
        {
          "objectId": "368",
          "qualifier": "on"
        }
      ],
      "id": "IC_kwDODyNbyM6tYAaq"
    },
    {
      "type": "comment_pull_request",
      "time": "2025-05-26T07:08:26Z",
      "attributes": [
        {
          "name": "comment",
          "value": "Dependabot couldn't find any dependency files in the directory. Because of this, Dependabot cannot update this pull request."
        }
      ],
      "relationships": [
        {
          "objectId": "dependabot[bot]",
          "qualifier": "commented-by"
        },
        {
          "objectId": "368",
          "qualifier": "on"
        }
      ],
      "id": "IC_kwDODyNbyM6tYILP"
    },
    {
      "type": "comment_pull_request",
      "time": "2025-05-26T07:40:34Z",
      "attributes": [
        {
          "name": "comment",
          "value": "Dependabot couldn't find any dependency files in the directory. Because of this, Dependabot cannot update this pull request."
        }
      ],
      "relationships": [
        {
          "objectId": "dependabot[bot]",
          "qualifier": "commented-by"
        },
        {
          "objectId": "368",
          "qualifier": "on"
        }
      ],
      "id": "IC_kwDODyNbyM6tYaii"
    },
    {
      "type": "close_pull_request",
      "time": "2025-05-26T07:50:20Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "368",
          "qualifier": "closed-on-pull_request"
        }
      ],
      "id": "CE_lADODyNbyM64MPxHzwAAAAQljRxT"
    },
    {
      "type": "comment_pull_request",
      "time": "2025-05-26T07:50:24Z",
      "attributes": [
        {
          "name": "comment",
          "value": "OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`.\n\nIf you change your mind, just re-open this PR and I'll resolve any conflicts on it."
        }
      ],
      "relationships": [
        {
          "objectId": "dependabot[bot]",
          "qualifier": "commented-by"
        },
        {
          "objectId": "368",
          "qualifier": "on"
        }
      ],
      "id": "IC_kwDODyNbyM6tYhnR"
    },
    {
      "type": "commit",
      "time": "2025-04-09T11:45:52Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "srbhr",
          "qualifier": "authored-by"
        },
        {
          "objectId": "ff4d7e9f78f7a74538d3ade7e850f7416a770ce9",
          "qualifier": "sha"
        },
        {
          "objectId": "367",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKGZmNGQ3ZTlmNzhmN2E3NDUzOGQzYWRlN2U4NTBmNzQxNmE3NzBjZTk"
    },
    {
      "type": "commit",
      "time": "2025-04-09T17:22:50Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "rahulsingh237",
          "qualifier": "authored-by"
        },
        {
          "objectId": "cebefe928fd23e0461fcf998dca749f2aec25d8c",
          "qualifier": "sha"
        },
        {
          "objectId": "336",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKGNlYmVmZTkyOGZkMjNlMDQ2MWZjZjk5OGRjYTc0OWYyYWVjMjVkOGM"
    },
    {
      "type": "commit",
      "time": "2025-04-09T17:29:01Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "authored-by"
        },
        {
          "objectId": "e2156c2115b04eb91d445f5283482a8f81cec7bd",
          "qualifier": "sha"
        },
        {
          "objectId": "367",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKGUyMTU2YzIxMTViMDRlYjkxZDQ0NWY1MjgzNDgyYThmODFjZWM3YmQ"
    },
    {
      "type": "commit",
      "time": "2025-04-09T19:16:14Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "rahulsingh237",
          "qualifier": "authored-by"
        },
        {
          "objectId": "f415013aeeac86ddd5fb97c7a8e39b3a77ba12ec",
          "qualifier": "sha"
        },
        {
          "objectId": "337",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKGY0MTUwMTNhZWVhYzg2ZGRkNWZiOTdjN2E4ZTM5YjNhNzdiYTEyZWM"
    },
    {
      "type": "commit",
      "time": "2025-04-09T19:20:56Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "authored-by"
        },
        {
          "objectId": "c8b0d00a5469a7702a3ce968c69e40535cfcfdb9",
          "qualifier": "sha"
        },
        {
          "objectId": "367",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKGM4YjBkMDBhNTQ2OWE3NzAyYTNjZTk2OGM2OWU0MDUzNWNmY2ZkYjk"
    },
    {
      "type": "commit",
      "time": "2025-04-09T19:32:20Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "rahulsingh237",
          "qualifier": "authored-by"
        },
        {
          "objectId": "48d058d29c7b6db98e196832137c69cd61e98968",
          "qualifier": "sha"
        },
        {
          "objectId": "338",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDQ4ZDA1OGQyOWM3YjZkYjk4ZTE5NjgzMjEzN2M2OWNkNjFlOTg5Njg"
    },
    {
      "type": "commit",
      "time": "2025-04-09T19:33:56Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "authored-by"
        },
        {
          "objectId": "894985747aae8c72c989822c1acae3cca8ae3683",
          "qualifier": "sha"
        },
        {
          "objectId": "367",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDg5NDk4NTc0N2FhZThjNzJjOTg5ODIyYzFhY2FlM2NjYThhZTM2ODM"
    },
    {
      "type": "commit",
      "time": "2025-04-13T16:20:31Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Rahul Veer Singh",
          "qualifier": "authored-by"
        },
        {
          "objectId": "fd104cc26df1420ac2707e5db27f93cd950bb8ef",
          "qualifier": "sha"
        },
        {
          "objectId": "339",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKGZkMTA0Y2MyNmRmMTQyMGFjMjcwN2U1ZGIyN2Y5M2NkOTUwYmI4ZWY"
    },
    {
      "type": "commit",
      "time": "2025-04-13T17:28:10Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "authored-by"
        },
        {
          "objectId": "c747e8208f42f226ef3ea0f0430416b89b020e8d",
          "qualifier": "sha"
        },
        {
          "objectId": "367",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKGM3NDdlODIwOGY0MmYyMjZlZjNlYTBmMDQzMDQxNmI4OWIwMjBlOGQ"
    },
    {
      "type": "commit",
      "time": "2025-04-15T14:35:26Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "authored-by"
        },
        {
          "objectId": "a84809acc42454f84d3b7fb1a62180e8141cd185",
          "qualifier": "sha"
        },
        {
          "objectId": "367",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKGE4NDgwOWFjYzQyNDU0Zjg0ZDNiN2ZiMWE2MjE4MGU4MTQxY2QxODU"
    },
    {
      "type": "commit",
      "time": "2025-04-15T15:08:55Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "authored-by"
        },
        {
          "objectId": "4e1616ac12b126c77761a47cf70c517a4adeb0f5",
          "qualifier": "sha"
        },
        {
          "objectId": "367",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDRlMTYxNmFjMTJiMTI2Yzc3NzYxYTQ3Y2Y3MGM1MTdhNGFkZWIwZjU"
    },
    {
      "type": "commit",
      "time": "2025-04-19T02:42:43Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "authored-by"
        },
        {
          "objectId": "638c41f37930637a8f891eb13c59a224906805fe",
          "qualifier": "sha"
        },
        {
          "objectId": "367",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDYzOGM0MWYzNzkzMDYzN2E4Zjg5MWViMTNjNTlhMjI0OTA2ODA1ZmU"
    },
    {
      "type": "commit",
      "time": "2025-04-19T16:52:01Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "authored-by"
        },
        {
          "objectId": "6816ac238638f06e3234c53192a1a0d71ef85877",
          "qualifier": "sha"
        },
        {
          "objectId": "367",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDY4MTZhYzIzODYzOGYwNmUzMjM0YzUzMTkyYTFhMGQ3MWVmODU4Nzc"
    },
    {
      "type": "commit",
      "time": "2025-04-20T18:51:15Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "authored-by"
        },
        {
          "objectId": "d835b4614bfe1516dc188eee0d30ec3ff2978d41",
          "qualifier": "sha"
        },
        {
          "objectId": "367",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKGQ4MzViNDYxNGJmZTE1MTZkYzE4OGVlZTBkMzBlYzNmZjI5NzhkNDE"
    },
    {
      "type": "commit",
      "time": "2025-04-20T19:04:45Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "authored-by"
        },
        {
          "objectId": "5455337a6909c7db1d2b2313ebd9ceafbf509d93",
          "qualifier": "sha"
        },
        {
          "objectId": "367",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDU0NTUzMzdhNjkwOWM3ZGIxZDJiMjMxM2ViZDljZWFmYmY1MDlkOTM"
    },
    {
      "type": "commit",
      "time": "2025-05-26T06:03:31Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "srbhr",
          "qualifier": "authored-by"
        },
        {
          "objectId": "90db53d231094a5be07f2115d14cee78b1f35f51",
          "qualifier": "sha"
        },
        {
          "objectId": "365",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDkwZGI1M2QyMzEwOTRhNWJlMDdmMjExNWQxNGNlZTc4YjFmMzVmNTE"
    },
    {
      "type": "comment_pull_request",
      "time": "2025-05-26T06:12:05Z",
      "attributes": [
        {
          "name": "comment",
          "value": "<!-- This is an auto-generated comment: summarize by coderabbit.ai -->\n<!-- This is an auto-generated comment: skip review by coderabbit.ai -->\n\n> [!IMPORTANT]\n> ## Review skipped\n> \n> Auto reviews are disabled on base/target branches other than the default branch.\n> \n> \n> \n> Please check the settings in the CodeRabbit UI or the `.coderabbit.yaml` file in this repository. To trigger a single review, invoke the `@coderabbitai review` command.\n> \n> You can disable this status message by setting the `reviews.review_status` to `false` in the CodeRabbit configuration file.\n\n<!-- end of auto-generated comment: skip review by coderabbit.ai -->\n<!-- tips_start -->\n\n---\n\nThanks for using CodeRabbit! It's free for OSS, and your support helps us grow. If you like it, consider giving us a shout-out.\n\n<details>\n<summary>\u2764\ufe0f Share</summary>\n\n- [X](https://twitter.com/intent/tweet?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A&url=https%3A//coderabbit.ai)\n- [Mastodon](https://mastodon.social/share?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A%20https%3A%2F%2Fcoderabbit.ai)\n- [Reddit](https://www.reddit.com/submit?title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&text=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code.%20Check%20it%20out%3A%20https%3A//coderabbit.ai)\n- [LinkedIn](https://www.linkedin.com/sharing/share-offsite/?url=https%3A%2F%2Fcoderabbit.ai&mini=true&title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&summary=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code)\n\n</details>\n\n<details>\n<summary>\ud83e\udea7 Tips</summary>\n\n### Chat\n\nThere are 3 ways to chat with [CodeRabbit](https://coderabbit.ai?utm_source=oss&utm_medium=github&utm_campaign=srbhr/Resume-Matcher&utm_content=365):\n\n- Review comments: Directly reply to a review comment made by CodeRabbit. Example:\n  - `I pushed a fix in commit <commit_id>, please review it.`\n  - `Explain this complex logic.`\n  - `Open a follow-up GitHub issue for this discussion.`\n- Files and specific lines of code (under the \"Files changed\" tab): Tag `@coderabbitai` in a new review comment at the desired location with your query. Examples:\n  - `@coderabbitai explain this code block.`\n  -\t`@coderabbitai modularize this function.`\n- PR comments: Tag `@coderabbitai` in a new PR comment to ask questions about the PR branch. For the best results, please provide a very specific query, as very limited context is provided in this mode. Examples:\n  - `@coderabbitai gather interesting stats about this repository and render them as a table. Additionally, render a pie chart showing the language distribution in the codebase.`\n  - `@coderabbitai read src/utils.ts and explain its main purpose.`\n  - `@coderabbitai read the files in the src/scheduler package and generate a class diagram using mermaid and a README in the markdown format.`\n  - `@coderabbitai help me debug CodeRabbit configuration file.`\n\n### Support\n\nNeed help? Create a ticket on our [support page](https://www.coderabbit.ai/contact-us/support) for assistance with any issues or questions.\n\nNote: Be mindful of the bot's finite context window. It's strongly recommended to break down tasks such as reading entire modules into smaller chunks. For a focused discussion, use review comments to chat about specific files and their changes, instead of using the PR comments.\n\n### CodeRabbit Commands (Invoked using PR comments)\n\n- `@coderabbitai pause` to pause the reviews on a PR.\n- `@coderabbitai resume` to resume the paused reviews.\n- `@coderabbitai review` to trigger an incremental review. This is useful when automatic reviews are disabled for the repository.\n- `@coderabbitai full review` to do a full review from scratch and review all the files again.\n- `@coderabbitai summary` to regenerate the summary of the PR.\n- `@coderabbitai generate docstrings` to [generate docstrings](https://docs.coderabbit.ai/finishing-touches/docstrings) for this PR.\n- `@coderabbitai generate sequence diagram` to generate a sequence diagram of the changes in this PR.\n- `@coderabbitai resolve` resolve all the CodeRabbit review comments.\n- `@coderabbitai configuration` to show the current CodeRabbit configuration for the repository.\n- `@coderabbitai help` to get help.\n\n### Other keywords and placeholders\n\n- Add `@coderabbitai ignore` anywhere in the PR description to prevent this PR from being reviewed.\n- Add `@coderabbitai summary` to generate the high-level summary at a specific location in the PR description.\n- Add `@coderabbitai` anywhere in the PR title to generate the title automatically.\n\n### CodeRabbit Configuration File (`.coderabbit.yaml`)\n\n- You can programmatically configure CodeRabbit by adding a `.coderabbit.yaml` file to the root of your repository.\n- Please see the [configuration documentation](https://docs.coderabbit.ai/guides/configure-coderabbit) for more information.\n- If your editor has YAML language server enabled, you can add the path at the top of this file to enable auto-completion and validation: `# yaml-language-server: $schema=https://coderabbit.ai/integrations/schema.v2.json`\n\n### Documentation and Community\n\n- Visit our [Documentation](https://docs.coderabbit.ai) for detailed information on how to use CodeRabbit.\n- Join our [Discord Community](http://discord.gg/coderabbit) to get help, request features, and share feedback.\n- Follow us on [X/Twitter](https://twitter.com/coderabbitai) for updates and announcements.\n\n</details>\n\n<!-- tips_end -->"
        }
      ],
      "relationships": [
        {
          "objectId": "coderabbitai[bot]",
          "qualifier": "commented-by"
        },
        {
          "objectId": "365",
          "qualifier": "on"
        }
      ],
      "id": "IC_kwDODyNbyM6tXnuU"
    },
    {
      "type": "merge_pull_request",
      "time": "2025-05-26T06:12:50Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "365",
          "qualifier": "merged-on-pull_request"
        }
      ],
      "id": "ME_lADODyNbyM64L40HzwAAAAQleM4Y"
    },
    {
      "type": "close_pull_request",
      "time": "2025-05-26T06:12:50Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "365",
          "qualifier": "closed-on-pull_request"
        }
      ],
      "id": "CE_lADODyNbyM64L40HzwAAAAQleM6_"
    },
    {
      "type": "approve_review",
      "time": "2025-04-13T17:28:05Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "approved-by"
        },
        {
          "objectId": "339",
          "qualifier": "for-pull-request"
        }
      ],
      "id": "2762805233"
    },
    {
      "type": "merge_pull_request",
      "time": "2025-04-13T17:28:10Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "339",
          "qualifier": "merged-on-pull_request"
        }
      ],
      "id": "ME_lADODyNbyM6yTFRxzwAAAAQDiMwF"
    },
    {
      "type": "close_pull_request",
      "time": "2025-04-13T17:28:10Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "339",
          "qualifier": "closed-on-pull_request"
        }
      ],
      "id": "CE_lADODyNbyM6yTFRxzwAAAAQDiMwJ"
    },
    {
      "type": "merge_pull_request",
      "time": "2025-04-09T19:33:56Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "338",
          "qualifier": "merged-on-pull_request"
        }
      ],
      "id": "ME_lADODyNbyM6x2BVLzwAAAAQA6C_L"
    },
    {
      "type": "close_pull_request",
      "time": "2025-04-09T19:33:56Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "338",
          "qualifier": "closed-on-pull_request"
        }
      ],
      "id": "CE_lADODyNbyM6x2BVLzwAAAAQA6C_t"
    },
    {
      "type": "approve_review",
      "time": "2025-04-09T19:20:51Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "approved-by"
        },
        {
          "objectId": "337",
          "qualifier": "for-pull-request"
        }
      ],
      "id": "2754547228"
    },
    {
      "type": "merge_pull_request",
      "time": "2025-04-09T19:20:56Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "337",
          "qualifier": "merged-on-pull_request"
        }
      ],
      "id": "ME_lADODyNbyM6x159_zwAAAAQA5YD4"
    },
    {
      "type": "close_pull_request",
      "time": "2025-04-09T19:20:56Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "337",
          "qualifier": "closed-on-pull_request"
        }
      ],
      "id": "CE_lADODyNbyM6x159_zwAAAAQA5YEL"
    },
    {
      "type": "approve_review",
      "time": "2025-04-09T17:28:52Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "approved-by"
        },
        {
          "objectId": "336",
          "qualifier": "for-pull-request"
        }
      ],
      "id": "2754226438"
    },
    {
      "type": "merge_pull_request",
      "time": "2025-04-09T17:29:01Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "336",
          "qualifier": "merged-on-pull_request"
        }
      ],
      "id": "ME_lADODyNbyM6x08i8zwAAAAQAzxFU"
    },
    {
      "type": "close_pull_request",
      "time": "2025-04-09T17:29:01Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "336",
          "qualifier": "closed-on-pull_request"
        }
      ],
      "id": "CE_lADODyNbyM6x08i8zwAAAAQAzxFv"
    },
    {
      "type": "commit",
      "time": "2025-04-06T13:12:18Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "athulsivan",
          "qualifier": "authored-by"
        },
        {
          "objectId": "287d524e1eee74048528e69a828036e516fda3af",
          "qualifier": "sha"
        },
        {
          "objectId": "321",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDI4N2Q1MjRlMWVlZTc0MDQ4NTI4ZTY5YTgyODAzNmU1MTZmZGEzYWY"
    },
    {
      "type": "commit",
      "time": "2025-04-06T13:17:54Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "athulsivan",
          "qualifier": "authored-by"
        },
        {
          "objectId": "6dbe84b28e5a332b6f07df341334fc1440c0f818",
          "qualifier": "sha"
        },
        {
          "objectId": "321",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDZkYmU4NGIyOGU1YTMzMmI2ZjA3ZGYzNDEzMzRmYzE0NDBjMGY4MTg"
    },
    {
      "type": "commit",
      "time": "2025-04-07T11:30:29Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "athulsivan",
          "qualifier": "authored-by"
        },
        {
          "objectId": "5f465ec18ae131a94c3ab9b3396eca526410a9e6",
          "qualifier": "sha"
        },
        {
          "objectId": "321",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDVmNDY1ZWMxOGFlMTMxYTk0YzNhYjliMzM5NmVjYTUyNjQxMGE5ZTY"
    },
    {
      "type": "commit",
      "time": "2025-04-07T14:00:39Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "athulsivan",
          "qualifier": "authored-by"
        },
        {
          "objectId": "53a07dce725c21459b24b719f95a8b647d075a0c",
          "qualifier": "sha"
        },
        {
          "objectId": "321",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDUzYTA3ZGNlNzI1YzIxNDU5YjI0YjcxOWY5NWE4YjY0N2QwNzVhMGM"
    },
    {
      "type": "close_pull_request",
      "time": "2025-04-07T14:17:45Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "athulsivan",
          "qualifier": "authored-by"
        },
        {
          "objectId": "321",
          "qualifier": "closed-on-pull_request"
        }
      ],
      "id": "CE_lADODyNbyM6xccTfzwAAAAP-gFLV"
    },
    {
      "type": "commit",
      "time": "2025-03-06T04:52:10Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "authored-by"
        },
        {
          "objectId": "a85b3f0391962d08fb56c4ce7351f2d72dbd5815",
          "qualifier": "sha"
        },
        {
          "objectId": "319",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKGE4NWIzZjAzOTE5NjJkMDhmYjU2YzRjZTczNTFmMmQ3MmRiZDU4MTU"
    },
    {
      "type": "add_label",
      "time": "2025-03-06T04:52:13Z",
      "attributes": [
        {
          "name": "label",
          "value": "dependencies"
        }
      ],
      "relationships": [
        {
          "objectId": "dependabot[bot]",
          "qualifier": "authored-by"
        },
        {
          "objectId": "319",
          "qualifier": "labeled-on-pull_request"
        }
      ],
      "id": "LE_lADODyNbyM6s0FORzwAAAAPeF0ZT"
    },
    {
      "type": "add_label",
      "time": "2025-03-06T04:52:13Z",
      "attributes": [
        {
          "name": "label",
          "value": "python"
        }
      ],
      "relationships": [
        {
          "objectId": "dependabot[bot]",
          "qualifier": "authored-by"
        },
        {
          "objectId": "319",
          "qualifier": "labeled-on-pull_request"
        }
      ],
      "id": "LE_lADODyNbyM6s0FORzwAAAAPeF0ZX"
    },
    {
      "type": "remove_label",
      "time": "2025-04-08T22:16:53Z",
      "attributes": [
        {
          "name": "label",
          "value": "python"
        }
      ],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "319",
          "qualifier": "unlabeled-on-pull_request"
        }
      ],
      "id": "UNLE_lADODyNbyM6s0FORzwAAAAP_7QPo"
    },
    {
      "type": "close_pull_request",
      "time": "2025-05-26T06:18:41Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "319",
          "qualifier": "closed-on-pull_request"
        }
      ],
      "id": "CE_lADODyNbyM6s0FORzwAAAAQlekf8"
    },
    {
      "type": "comment_pull_request",
      "time": "2025-05-26T06:18:43Z",
      "attributes": [
        {
          "name": "comment",
          "value": "OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`.\n\nIf you change your mind, just re-open this PR and I'll resolve any conflicts on it."
        }
      ],
      "relationships": [
        {
          "objectId": "dependabot[bot]",
          "qualifier": "commented-by"
        },
        {
          "objectId": "319",
          "qualifier": "on"
        }
      ],
      "id": "IC_kwDODyNbyM6tXs3L"
    },
    {
      "type": "commit",
      "time": "2025-01-08T10:42:05Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "authored-by"
        },
        {
          "objectId": "7f6dc2688437269f7812310a5ce2c9dcc7b02d85",
          "qualifier": "sha"
        },
        {
          "objectId": "301",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDdmNmRjMjY4ODQzNzI2OWY3ODEyMzEwYTVjZTJjOWRjYzdiMDJkODU"
    },
    {
      "type": "add_label",
      "time": "2025-01-08T10:42:06Z",
      "attributes": [
        {
          "name": "label",
          "value": "dependencies"
        }
      ],
      "relationships": [
        {
          "objectId": "dependabot[bot]",
          "qualifier": "authored-by"
        },
        {
          "objectId": "301",
          "qualifier": "labeled-on-pull_request"
        }
      ],
      "id": "LE_lADODyNbyM6lZ8x4zwAAAAOw2ljK"
    },
    {
      "type": "add_label",
      "time": "2025-01-08T10:42:06Z",
      "attributes": [
        {
          "name": "label",
          "value": "python"
        }
      ],
      "relationships": [
        {
          "objectId": "dependabot[bot]",
          "qualifier": "authored-by"
        },
        {
          "objectId": "301",
          "qualifier": "labeled-on-pull_request"
        }
      ],
      "id": "LE_lADODyNbyM6lZ8x4zwAAAAOw2ljQ"
    },
    {
      "type": "merge_pull_request",
      "time": "2025-01-08T10:57:07Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "301",
          "qualifier": "merged-on-pull_request"
        }
      ],
      "id": "ME_lADODyNbyM6lZ8x4zwAAAAOw3oF9"
    },
    {
      "type": "close_pull_request",
      "time": "2025-01-08T10:57:07Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "301",
          "qualifier": "closed-on-pull_request"
        }
      ],
      "id": "CE_lADODyNbyM6lZ8x4zwAAAAOw3oGP"
    },
    {
      "type": "commit",
      "time": "2025-01-08T10:24:14Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "authored-by"
        },
        {
          "objectId": "f53791888d7d31ee14716e590dc49bc33b7d49cb",
          "qualifier": "sha"
        },
        {
          "objectId": "300",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKGY1Mzc5MTg4OGQ3ZDMxZWUxNDcxNmU1OTBkYzQ5YmMzM2I3ZDQ5Y2I"
    },
    {
      "type": "comment_pull_request",
      "time": "2025-01-08T10:28:42Z",
      "attributes": [
        {
          "name": "comment",
          "value": "Thanks for the PR. Let me test it and update it. \r\n@aslafy-z "
        }
      ],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "commented-by"
        },
        {
          "objectId": "300",
          "qualifier": "on"
        }
      ],
      "id": "IC_kwDODyNbyM6Znulz"
    },
    {
      "type": "rename_pull_request",
      "time": "2025-01-08T10:35:01Z",
      "attributes": [
        {
          "name": "renamed-to",
          "value": "fix: upgrading nltk dependency to fix wordnet/punkt download"
        }
      ],
      "relationships": [
        {
          "objectId": "Zadkiel AHARONIAN",
          "qualifier": "change-issued-by"
        },
        {
          "objectId": "300",
          "qualifier": "for-pr"
        }
      ],
      "id": "RTE_lADODyNbyM6lZw1xzwAAAAOw2CY9"
    },
    {
      "type": "commit",
      "time": "2025-01-08T10:35:24Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "authored-by"
        },
        {
          "objectId": "731201ab4fd1c4ff30b0010460f9979ab5505a29",
          "qualifier": "sha"
        },
        {
          "objectId": "300",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDczMTIwMWFiNGZkMWM0ZmYzMGIwMDEwNDYwZjk5NzlhYjU1MDVhMjk"
    },
    {
      "type": "commit",
      "time": "2025-01-08T10:36:47Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "authored-by"
        },
        {
          "objectId": "88f14b8b121337a82c5c70d68e03d28bb3ddac4d",
          "qualifier": "sha"
        },
        {
          "objectId": "300",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDg4ZjE0YjhiMTIxMzM3YTgyYzVjNzBkNjhlMDNkMjhiYjNkZGFjNGQ"
    },
    {
      "type": "commit",
      "time": "2025-01-08T10:37:33Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "authored-by"
        },
        {
          "objectId": "7e60d1a1fae2b8387a90c7474209a61e83503376",
          "qualifier": "sha"
        },
        {
          "objectId": "300",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDdlNjBkMWExZmFlMmI4Mzg3YTkwYzc0NzQyMDlhNjFlODM1MDMzNzY"
    },
    {
      "type": "comment_pull_request",
      "time": "2025-01-08T10:38:20Z",
      "attributes": [
        {
          "name": "comment",
          "value": "@srbhr I just added the fix for https://github.com/nltk/nltk/issues/3293"
        }
      ],
      "relationships": [
        {
          "objectId": "Zadkiel AHARONIAN",
          "qualifier": "commented-by"
        },
        {
          "objectId": "300",
          "qualifier": "on"
        }
      ],
      "id": "IC_kwDODyNbyM6ZnzPP"
    },
    {
      "type": "merge_pull_request",
      "time": "2025-01-08T10:41:09Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "300",
          "qualifier": "merged-on-pull_request"
        }
      ],
      "id": "ME_lADODyNbyM6lZw1xzwAAAAOw2gh1"
    },
    {
      "type": "close_pull_request",
      "time": "2025-01-08T10:41:09Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "300",
          "qualifier": "closed-on-pull_request"
        }
      ],
      "id": "CE_lADODyNbyM6lZw1xzwAAAAOw2gjD"
    },
    {
      "type": "commit",
      "time": "2024-12-31T11:13:12Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "689f35d9c88c756617bda804f9fdfbf24101dcee",
          "qualifier": "sha"
        },
        {
          "objectId": "299",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDY4OWYzNWQ5Yzg4Yzc1NjYxN2JkYTgwNGY5ZmRmYmYyNDEwMWRjZWU"
    },
    {
      "type": "close_pull_request",
      "time": "2025-05-26T06:13:25Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "299",
          "qualifier": "closed-on-pull_request"
        }
      ],
      "id": "CE_lADODyNbyM6kw0GKzwAAAAQlePVm"
    },
    {
      "type": "commit",
      "time": "2024-12-03T11:23:56Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "authored-by"
        },
        {
          "objectId": "9628cf5199e7aed607f57a84811172b3ff1c8c91",
          "qualifier": "sha"
        },
        {
          "objectId": "297",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDk2MjhjZjUxOTllN2FlZDYwN2Y1N2E4NDgxMTE3MmIzZmYxYzhjOTE"
    },
    {
      "type": "add_label",
      "time": "2024-12-03T11:23:58Z",
      "attributes": [
        {
          "name": "label",
          "value": "dependencies"
        }
      ],
      "relationships": [
        {
          "objectId": "dependabot[bot]",
          "qualifier": "authored-by"
        },
        {
          "objectId": "297",
          "qualifier": "labeled-on-pull_request"
        }
      ],
      "id": "LE_lADODyNbyM6hz6TKzwAAAAOcWa8r"
    },
    {
      "type": "add_label",
      "time": "2024-12-03T11:23:58Z",
      "attributes": [
        {
          "name": "label",
          "value": "python"
        }
      ],
      "relationships": [
        {
          "objectId": "dependabot[bot]",
          "qualifier": "authored-by"
        },
        {
          "objectId": "297",
          "qualifier": "labeled-on-pull_request"
        }
      ],
      "id": "LE_lADODyNbyM6hz6TKzwAAAAOcWa80"
    },
    {
      "type": "merge_pull_request",
      "time": "2024-12-03T11:27:16Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "297",
          "qualifier": "merged-on-pull_request"
        }
      ],
      "id": "ME_lADODyNbyM6hz6TKzwAAAAOcWlGb"
    },
    {
      "type": "close_pull_request",
      "time": "2024-12-03T11:27:16Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "297",
          "qualifier": "closed-on-pull_request"
        }
      ],
      "id": "CE_lADODyNbyM6hz6TKzwAAAAOcWlGz"
    },
    {
      "type": "commit",
      "time": "2024-12-03T11:23:53Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "authored-by"
        },
        {
          "objectId": "88c33b5054ac196fb3fa95159b403e04a9db0b15",
          "qualifier": "sha"
        },
        {
          "objectId": "296",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDg4YzMzYjUwNTRhYzE5NmZiM2ZhOTUxNTliNDAzZTA0YTlkYjBiMTU"
    },
    {
      "type": "add_label",
      "time": "2024-12-03T11:23:55Z",
      "attributes": [
        {
          "name": "label",
          "value": "dependencies"
        }
      ],
      "relationships": [
        {
          "objectId": "dependabot[bot]",
          "qualifier": "authored-by"
        },
        {
          "objectId": "296",
          "qualifier": "labeled-on-pull_request"
        }
      ],
      "id": "LE_lADODyNbyM6hz6RyzwAAAAOcWay8"
    },
    {
      "type": "add_label",
      "time": "2024-12-03T11:23:55Z",
      "attributes": [
        {
          "name": "label",
          "value": "python"
        }
      ],
      "relationships": [
        {
          "objectId": "dependabot[bot]",
          "qualifier": "authored-by"
        },
        {
          "objectId": "296",
          "qualifier": "labeled-on-pull_request"
        }
      ],
      "id": "LE_lADODyNbyM6hz6RyzwAAAAOcWazG"
    },
    {
      "type": "merge_pull_request",
      "time": "2024-12-03T11:27:44Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "296",
          "qualifier": "merged-on-pull_request"
        }
      ],
      "id": "ME_lADODyNbyM6hz6RyzwAAAAOcWmhS"
    },
    {
      "type": "close_pull_request",
      "time": "2024-12-03T11:27:44Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "296",
          "qualifier": "closed-on-pull_request"
        }
      ],
      "id": "CE_lADODyNbyM6hz6RyzwAAAAOcWmhy"
    },
    {
      "type": "commit",
      "time": "2024-12-03T11:23:51Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "authored-by"
        },
        {
          "objectId": "9e12f3cf1aeae8636db38bfe230df4f31aa336a0",
          "qualifier": "sha"
        },
        {
          "objectId": "295",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDllMTJmM2NmMWFlYWU4NjM2ZGIzOGJmZTIzMGRmNGYzMWFhMzM2YTA"
    },
    {
      "type": "add_label",
      "time": "2024-12-03T11:23:53Z",
      "attributes": [
        {
          "name": "label",
          "value": "dependencies"
        }
      ],
      "relationships": [
        {
          "objectId": "dependabot[bot]",
          "qualifier": "authored-by"
        },
        {
          "objectId": "295",
          "qualifier": "labeled-on-pull_request"
        }
      ],
      "id": "LE_lADODyNbyM6hz6QtzwAAAAOcWasD"
    },
    {
      "type": "add_label",
      "time": "2024-12-03T11:23:53Z",
      "attributes": [
        {
          "name": "label",
          "value": "python"
        }
      ],
      "relationships": [
        {
          "objectId": "dependabot[bot]",
          "qualifier": "authored-by"
        },
        {
          "objectId": "295",
          "qualifier": "labeled-on-pull_request"
        }
      ],
      "id": "LE_lADODyNbyM6hz6QtzwAAAAOcWasR"
    },
    {
      "type": "merge_pull_request",
      "time": "2024-12-03T11:27:27Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "295",
          "qualifier": "merged-on-pull_request"
        }
      ],
      "id": "ME_lADODyNbyM6hz6QtzwAAAAOcWlq5"
    },
    {
      "type": "close_pull_request",
      "time": "2024-12-03T11:27:27Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "295",
          "qualifier": "closed-on-pull_request"
        }
      ],
      "id": "CE_lADODyNbyM6hz6QtzwAAAAOcWlrf"
    },
    {
      "type": "commit",
      "time": "2024-12-03T11:23:49Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "authored-by"
        },
        {
          "objectId": "0b852b4c8d55108c1771cf56cf90a93d36bf9fc1",
          "qualifier": "sha"
        },
        {
          "objectId": "294",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDBiODUyYjRjOGQ1NTEwOGMxNzcxY2Y1NmNmOTBhOTNkMzZiZjlmYzE"
    },
    {
      "type": "add_label",
      "time": "2024-12-03T11:23:51Z",
      "attributes": [
        {
          "name": "label",
          "value": "dependencies"
        }
      ],
      "relationships": [
        {
          "objectId": "dependabot[bot]",
          "qualifier": "authored-by"
        },
        {
          "objectId": "294",
          "qualifier": "labeled-on-pull_request"
        }
      ],
      "id": "LE_lADODyNbyM6hz6PTzwAAAAOcWaj3"
    },
    {
      "type": "add_label",
      "time": "2024-12-03T11:23:51Z",
      "attributes": [
        {
          "name": "label",
          "value": "python"
        }
      ],
      "relationships": [
        {
          "objectId": "dependabot[bot]",
          "qualifier": "authored-by"
        },
        {
          "objectId": "294",
          "qualifier": "labeled-on-pull_request"
        }
      ],
      "id": "LE_lADODyNbyM6hz6PTzwAAAAOcWakC"
    },
    {
      "type": "merge_pull_request",
      "time": "2024-12-03T11:27:35Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "294",
          "qualifier": "merged-on-pull_request"
        }
      ],
      "id": "ME_lADODyNbyM6hz6PTzwAAAAOcWmFJ"
    },
    {
      "type": "close_pull_request",
      "time": "2024-12-03T11:27:35Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "294",
          "qualifier": "closed-on-pull_request"
        }
      ],
      "id": "CE_lADODyNbyM6hz6PTzwAAAAOcWmFd"
    },
    {
      "type": "commit",
      "time": "2024-11-01T12:49:50Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "atita arora",
          "qualifier": "authored-by"
        },
        {
          "objectId": "d390587bcbf6f5e489ff8cf0c39bf4af15228505",
          "qualifier": "sha"
        },
        {
          "objectId": "292",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKGQzOTA1ODdiY2JmNmY1ZTQ4OWZmOGNmMGMzOWJmNGFmMTUyMjg1MDU"
    },
    {
      "type": "comment_pull_request",
      "time": "2024-11-01T15:45:05Z",
      "attributes": [
        {
          "name": "comment",
          "value": "Interesting observation @atarora \r\nIs Qdrant monitoring repositories or it was just a check on your end?"
        }
      ],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "commented-by"
        },
        {
          "objectId": "292",
          "qualifier": "on"
        }
      ],
      "id": "IC_kwDODyNbyM6SKBKB"
    },
    {
      "type": "merge_pull_request",
      "time": "2024-11-01T15:45:09Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "292",
          "qualifier": "merged-on-pull_request"
        }
      ],
      "id": "ME_lADODyNbyM6cswONzwAAAAOCVLTD"
    },
    {
      "type": "close_pull_request",
      "time": "2024-11-01T15:45:09Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "292",
          "qualifier": "closed-on-pull_request"
        }
      ],
      "id": "CE_lADODyNbyM6cswONzwAAAAOCVLTc"
    },
    {
      "type": "commit",
      "time": "2024-10-16T19:44:48Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "abdulkhalek",
          "qualifier": "authored-by"
        },
        {
          "objectId": "7b6a44b8c8b9297bcaf5ee2e0fc7d8b44f8bdc1f",
          "qualifier": "sha"
        },
        {
          "objectId": "290",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDdiNmE0NGI4YzhiOTI5N2JjYWY1ZWUyZTBmYzdkOGI0NGY4YmRjMWY"
    },
    {
      "type": "merge_pull_request",
      "time": "2024-10-22T17:39:24Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "290",
          "qualifier": "merged-on-pull_request"
        }
      ],
      "id": "ME_lADODyNbyM6ajJVDzwAAAANxjDvE"
    },
    {
      "type": "close_pull_request",
      "time": "2024-10-22T17:39:24Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "290",
          "qualifier": "closed-on-pull_request"
        }
      ],
      "id": "CE_lADODyNbyM6ajJVDzwAAAANxjDvj"
    },
    {
      "type": "commit",
      "time": "2024-09-21T00:22:35Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Hemanth-Thaluru",
          "qualifier": "authored-by"
        },
        {
          "objectId": "4af34e01b303c1ff337cf443aea44887d185e047",
          "qualifier": "sha"
        },
        {
          "objectId": "288",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDRhZjM0ZTAxYjMwM2MxZmYzMzdjZjQ0M2FlYTQ0ODg3ZDE4NWUwNDc"
    },
    {
      "type": "comment_pull_request",
      "time": "2024-09-22T04:03:53Z",
      "attributes": [
        {
          "name": "comment",
          "value": "I was working on the same to improve the docker image rebuild times.\r\nWe can reduce the image size by telling pip to not cache stuff using `ARG PIP_NO_CACHE_DIR=1` as suggested [here](https://stackoverflow.com/a/57490475) and [here](https://stackoverflow.com/a/60270281)."
        }
      ],
      "relationships": [
        {
          "objectId": "Ketan Mate",
          "qualifier": "commented-by"
        },
        {
          "objectId": "288",
          "qualifier": "on"
        }
      ],
      "id": "IC_kwDODyNbyM6M_fH6"
    },
    {
      "type": "comment_pull_request",
      "time": "2024-09-22T04:41:50Z",
      "attributes": [
        {
          "name": "comment",
          "value": "Hey @Hemanth-Thaluru and @KetanM94 \r\nYou'll have to wait and re-raise the PR again. I'm making some changes to the way Resume Matcher is working. So please wait and let me know.\r\n\r\n"
        }
      ],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "commented-by"
        },
        {
          "objectId": "288",
          "qualifier": "on"
        }
      ],
      "id": "IC_kwDODyNbyM6M_hzh"
    },
    {
      "type": "comment_pull_request",
      "time": "2024-09-23T17:46:41Z",
      "attributes": [
        {
          "name": "comment",
          "value": "Can't wait to see the restructured Resume Matcher in action,  it's such a great product! I use this daily for my applications, and it's been a game-changer for me. Thank you @srbhr for such an awesome product.\r\n\r\nLet me know when you were ready to go!"
        }
      ],
      "relationships": [
        {
          "objectId": "Hemanth",
          "qualifier": "commented-by"
        },
        {
          "objectId": "288",
          "qualifier": "on"
        }
      ],
      "id": "IC_kwDODyNbyM6NM3ID"
    },
    {
      "type": "merge_pull_request",
      "time": "2024-10-22T17:40:46Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "288",
          "qualifier": "merged-on-pull_request"
        }
      ],
      "id": "ME_lADODyNbyM6XYwbnzwAAAANxjISs"
    },
    {
      "type": "close_pull_request",
      "time": "2024-10-22T17:40:46Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "288",
          "qualifier": "closed-on-pull_request"
        }
      ],
      "id": "CE_lADODyNbyM6XYwbnzwAAAANxjITF"
    },
    {
      "type": "commit",
      "time": "2024-09-20T23:29:12Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Hemanth-Thaluru",
          "qualifier": "authored-by"
        },
        {
          "objectId": "aaf90a58fbbc6b1b1a2373cf5a54878778c49c2d",
          "qualifier": "sha"
        },
        {
          "objectId": "287",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKGFhZjkwYTU4ZmJiYzZiMWIxYTIzNzNjZjVhNTQ4Nzg3NzhjNDljMmQ"
    },
    {
      "type": "rename_pull_request",
      "time": "2024-09-20T23:48:53Z",
      "attributes": [
        {
          "name": "renamed-to",
          "value": "Solves #272 and #282 by creating Processed folder if not present already"
        }
      ],
      "relationships": [
        {
          "objectId": "Hemanth",
          "qualifier": "change-issued-by"
        },
        {
          "objectId": "287",
          "qualifier": "for-pr"
        }
      ],
      "id": "RTE_lADODyNbyM6XYpknzwAAAANXIq41"
    },
    {
      "type": "rename_pull_request",
      "time": "2024-09-20T23:49:02Z",
      "attributes": [
        {
          "name": "renamed-to",
          "value": "Solves #272 and #286 by creating Processed folder if not present already"
        }
      ],
      "relationships": [
        {
          "objectId": "Hemanth",
          "qualifier": "change-issued-by"
        },
        {
          "objectId": "287",
          "qualifier": "for-pr"
        }
      ],
      "id": "RTE_lADODyNbyM6XYpknzwAAAANXIq_m"
    },
    {
      "type": "merge_pull_request",
      "time": "2024-10-22T17:39:51Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "287",
          "qualifier": "merged-on-pull_request"
        }
      ],
      "id": "ME_lADODyNbyM6XYpknzwAAAANxjFCb"
    },
    {
      "type": "close_pull_request",
      "time": "2024-10-22T17:39:51Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "287",
          "qualifier": "closed-on-pull_request"
        }
      ],
      "id": "CE_lADODyNbyM6XYpknzwAAAANxjFCz"
    },
    {
      "type": "commit",
      "time": "2024-08-30T15:26:02Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "KamalMahanna",
          "qualifier": "authored-by"
        },
        {
          "objectId": "70722b57a9bd13193593b37f53242936d94431cc",
          "qualifier": "sha"
        },
        {
          "objectId": "284",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDcwNzIyYjU3YTliZDEzMTkzNTkzYjM3ZjUzMjQyOTM2ZDk0NDMxY2M"
    },
    {
      "type": "merge_pull_request",
      "time": "2024-12-03T11:28:03Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "284",
          "qualifier": "merged-on-pull_request"
        }
      ],
      "id": "ME_lADODyNbyM6U3s1IzwAAAAOcWnhX"
    },
    {
      "type": "close_pull_request",
      "time": "2024-12-03T11:28:03Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "284",
          "qualifier": "closed-on-pull_request"
        }
      ],
      "id": "CE_lADODyNbyM6U3s1IzwAAAAOcWniC"
    },
    {
      "type": "commit",
      "time": "2024-07-03T12:06:25Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "kxchourouk",
          "qualifier": "authored-by"
        },
        {
          "objectId": "bdee44bdd74cd7bcaf09b44b1c57d1e56b7df189",
          "qualifier": "sha"
        },
        {
          "objectId": "281",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKGJkZWU0NGJkZDc0Y2Q3YmNhZjA5YjQ0YjFjNTdkMWU1NmI3ZGYxODk"
    },
    {
      "type": "commit",
      "time": "2024-07-04T07:10:49Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "kxchourouk",
          "qualifier": "authored-by"
        },
        {
          "objectId": "e779f9940870ca1abaefb3d0430207cfe6d72ace",
          "qualifier": "sha"
        },
        {
          "objectId": "281",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKGU3NzlmOTk0MDg3MGNhMWFiYWVmYjNkMDQzMDIwN2NmZTZkNzJhY2U"
    },
    {
      "type": "commit",
      "time": "2024-07-04T07:21:57Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "kxchourouk",
          "qualifier": "authored-by"
        },
        {
          "objectId": "0704c9101ef2171c43a33584ff84e3f22b39f704",
          "qualifier": "sha"
        },
        {
          "objectId": "281",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDA3MDRjOTEwMWVmMjE3MWM0M2EzMzU4NGZmODRlM2YyMmIzOWY3MDQ"
    },
    {
      "type": "commit",
      "time": "2024-07-04T07:27:21Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "kxchourouk",
          "qualifier": "authored-by"
        },
        {
          "objectId": "e46de5c228a6cb5b439d80a05190fbff6a921c18",
          "qualifier": "sha"
        },
        {
          "objectId": "281",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKGU0NmRlNWMyMjhhNmNiNWI0MzlkODBhMDUxOTBmYmZmNmE5MjFjMTg"
    },
    {
      "type": "commit",
      "time": "2024-07-04T07:56:04Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "kxchourouk",
          "qualifier": "authored-by"
        },
        {
          "objectId": "1c865bc5212d32be5f6fb68971d640ff67bf4aa9",
          "qualifier": "sha"
        },
        {
          "objectId": "281",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDFjODY1YmM1MjEyZDMyYmU1ZjZmYjY4OTcxZDY0MGZmNjdiZjRhYTk"
    },
    {
      "type": "commit",
      "time": "2024-07-04T11:46:05Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "kxchourouk",
          "qualifier": "authored-by"
        },
        {
          "objectId": "024b450c0d704b466a20359702ce00bd6d49e273",
          "qualifier": "sha"
        },
        {
          "objectId": "281",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDAyNGI0NTBjMGQ3MDRiNDY2YTIwMzU5NzAyY2UwMGJkNmQ0OWUyNzM"
    },
    {
      "type": "commit",
      "time": "2024-07-04T11:51:33Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "kxchourouk",
          "qualifier": "authored-by"
        },
        {
          "objectId": "5aa984c51192aa8229d54836944a20b9d1870cc0",
          "qualifier": "sha"
        },
        {
          "objectId": "281",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDVhYTk4NGM1MTE5MmFhODIyOWQ1NDgzNjk0NGEyMGI5ZDE4NzBjYzA"
    },
    {
      "type": "commit",
      "time": "2024-07-05T07:21:10Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "kxchourouk",
          "qualifier": "authored-by"
        },
        {
          "objectId": "b567ce8de21fbcf7451529db5b321a02079fee0f",
          "qualifier": "sha"
        },
        {
          "objectId": "281",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKGI1NjdjZThkZTIxZmJjZjc0NTE1MjlkYjViMzIxYTAyMDc5ZmVlMGY"
    },
    {
      "type": "commit",
      "time": "2024-07-05T07:32:54Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "kxchourouk",
          "qualifier": "authored-by"
        },
        {
          "objectId": "1fdd9b626e1e21b7969020848c9d2fecd0c13d06",
          "qualifier": "sha"
        },
        {
          "objectId": "281",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDFmZGQ5YjYyNmUxZTIxYjc5NjkwMjA4NDhjOWQyZmVjZDBjMTNkMDY"
    },
    {
      "type": "commit",
      "time": "2024-07-05T11:49:59Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "kxchourouk",
          "qualifier": "authored-by"
        },
        {
          "objectId": "944e87c16d8aac212c56e33a36981f0e7446c551",
          "qualifier": "sha"
        },
        {
          "objectId": "281",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDk0NGU4N2MxNmQ4YWFjMjEyYzU2ZTMzYTM2OTgxZjBlNzQ0NmM1NTE"
    },
    {
      "type": "commit",
      "time": "2024-07-05T11:57:36Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "kxchourouk",
          "qualifier": "authored-by"
        },
        {
          "objectId": "1c5d3b5c9af34c95e19a6a462e1f75287c571aab",
          "qualifier": "sha"
        },
        {
          "objectId": "281",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDFjNWQzYjVjOWFmMzRjOTVlMTlhNmE0NjJlMWY3NTI4N2M1NzFhYWI"
    },
    {
      "type": "commit",
      "time": "2024-07-05T12:13:34Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "kxchourouk",
          "qualifier": "authored-by"
        },
        {
          "objectId": "a7266224724bc23f4b5473365c93f48b53c57c45",
          "qualifier": "sha"
        },
        {
          "objectId": "281",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKGE3MjY2MjI0NzI0YmMyM2Y0YjU0NzMzNjVjOTNmNDhiNTNjNTdjNDU"
    },
    {
      "type": "commit",
      "time": "2024-07-05T12:25:16Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "kxchourouk",
          "qualifier": "authored-by"
        },
        {
          "objectId": "b0e196e0425135a4a950d66457f045448cafade4",
          "qualifier": "sha"
        },
        {
          "objectId": "281",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKGIwZTE5NmUwNDI1MTM1YTRhOTUwZDY2NDU3ZjA0NTQ0OGNhZmFkZTQ"
    },
    {
      "type": "commit",
      "time": "2024-07-05T12:25:38Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "kxchourouk",
          "qualifier": "authored-by"
        },
        {
          "objectId": "69eafbf80156ea5dd2124d570f0be6add84fad29",
          "qualifier": "sha"
        },
        {
          "objectId": "281",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDY5ZWFmYmY4MDE1NmVhNWRkMjEyNGQ1NzBmMGJlNmFkZDg0ZmFkMjk"
    },
    {
      "type": "commit",
      "time": "2024-07-05T13:09:02Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "kxchourouk",
          "qualifier": "authored-by"
        },
        {
          "objectId": "d3dbd7bcce861895473ca5d132144841c8b6ff99",
          "qualifier": "sha"
        },
        {
          "objectId": "281",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKGQzZGJkN2JjY2U4NjE4OTU0NzNjYTVkMTMyMTQ0ODQxYzhiNmZmOTk"
    },
    {
      "type": "commit",
      "time": "2024-07-05T13:24:30Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "kxchourouk",
          "qualifier": "authored-by"
        },
        {
          "objectId": "ec3b8c4b1d650a349c52ae1aba0efdedc3d59ba3",
          "qualifier": "sha"
        },
        {
          "objectId": "281",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKGVjM2I4YzRiMWQ2NTBhMzQ5YzUyYWUxYWJhMGVmZGVkYzNkNTliYTM"
    },
    {
      "type": "commit",
      "time": "2024-07-08T08:44:15Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "kxchourouk",
          "qualifier": "authored-by"
        },
        {
          "objectId": "625696e21ab7c430b6ab26cb539b3f94578bd125",
          "qualifier": "sha"
        },
        {
          "objectId": "281",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDYyNTY5NmUyMWFiN2M0MzBiNmFiMjZjYjUzOWIzZjk0NTc4YmQxMjU"
    },
    {
      "type": "commit",
      "time": "2024-07-11T08:23:19Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "kxchourouk",
          "qualifier": "authored-by"
        },
        {
          "objectId": "97fd0ce51f9ca5b016c05c88603df53ec527aa5c",
          "qualifier": "sha"
        },
        {
          "objectId": "281",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDk3ZmQwY2U1MWY5Y2E1YjAxNmMwNWM4ODYwM2RmNTNlYzUyN2FhNWM"
    },
    {
      "type": "commit",
      "time": "2024-07-11T08:53:39Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "kxchourouk",
          "qualifier": "authored-by"
        },
        {
          "objectId": "6e4795ff5089ea30bc6807cdebdf1f1c799caa9d",
          "qualifier": "sha"
        },
        {
          "objectId": "281",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDZlNDc5NWZmNTA4OWVhMzBiYzY4MDdjZGViZGYxZjFjNzk5Y2FhOWQ"
    },
    {
      "type": "commit",
      "time": "2024-07-11T09:26:25Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "kxchourouk",
          "qualifier": "authored-by"
        },
        {
          "objectId": "00790e7a6416eec42f2e89e44e7a9197d58e6645",
          "qualifier": "sha"
        },
        {
          "objectId": "281",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDAwNzkwZTdhNjQxNmVlYzQyZjJlODllNDRlN2E5MTk3ZDU4ZTY2NDU"
    },
    {
      "type": "commit",
      "time": "2024-07-11T15:06:49Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "kxchourouk",
          "qualifier": "authored-by"
        },
        {
          "objectId": "6c0f9d1f25f95fc0e00a90768b55027a16950fb8",
          "qualifier": "sha"
        },
        {
          "objectId": "281",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDZjMGY5ZDFmMjVmOTVmYzBlMDBhOTA3NjhiNTUwMjdhMTY5NTBmYjg"
    },
    {
      "type": "commit",
      "time": "2024-07-12T08:11:58Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "kxchourouk",
          "qualifier": "authored-by"
        },
        {
          "objectId": "3034944d46ae7a36df5c26d046b8ce9e64749005",
          "qualifier": "sha"
        },
        {
          "objectId": "281",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDMwMzQ5NDRkNDZhZTdhMzZkZjVjMjZkMDQ2YjhjZTllNjQ3NDkwMDU"
    },
    {
      "type": "commit",
      "time": "2024-07-12T08:17:08Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "kxchourouk",
          "qualifier": "authored-by"
        },
        {
          "objectId": "e537a5860b96f89cbd126f2af4ae1235239a1f8e",
          "qualifier": "sha"
        },
        {
          "objectId": "281",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKGU1MzdhNTg2MGI5NmY4OWNiZDEyNmYyYWY0YWUxMjM1MjM5YTFmOGU"
    },
    {
      "type": "commit",
      "time": "2024-07-12T08:24:54Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "kxchourouk",
          "qualifier": "authored-by"
        },
        {
          "objectId": "8f2b43b55ad75decb96d140d6eb16ec10e23c2d3",
          "qualifier": "sha"
        },
        {
          "objectId": "281",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDhmMmI0M2I1NWFkNzVkZWNiOTZkMTQwZDZlYjE2ZWMxMGUyM2MyZDM"
    },
    {
      "type": "commit",
      "time": "2024-07-12T09:29:30Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "kxchourouk",
          "qualifier": "authored-by"
        },
        {
          "objectId": "c6476b6dc6cd7b12d0ab2229c1324b65c6edd1a7",
          "qualifier": "sha"
        },
        {
          "objectId": "281",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKGM2NDc2YjZkYzZjZDdiMTJkMGFiMjIyOWMxMzI0YjY1YzZlZGQxYTc"
    },
    {
      "type": "commit",
      "time": "2024-07-12T10:18:22Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "kxchourouk",
          "qualifier": "authored-by"
        },
        {
          "objectId": "ab67d529ad2944c638be72f96568ffe3e5526fce",
          "qualifier": "sha"
        },
        {
          "objectId": "281",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKGFiNjdkNTI5YWQyOTQ0YzYzOGJlNzJmOTY1NjhmZmUzZTU1MjZmY2U"
    },
    {
      "type": "commit",
      "time": "2024-07-12T13:33:53Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "kxchourouk",
          "qualifier": "authored-by"
        },
        {
          "objectId": "546b7959ba9ded7bc8096330a9a8147ec61f07bf",
          "qualifier": "sha"
        },
        {
          "objectId": "281",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDU0NmI3OTU5YmE5ZGVkN2JjODA5NjMzMGE5YTgxNDdlYzYxZjA3YmY"
    },
    {
      "type": "commit",
      "time": "2024-07-15T11:26:26Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "kxchourouk",
          "qualifier": "authored-by"
        },
        {
          "objectId": "c876227a7a644c090b3eb9a38c60ec92686bfc1e",
          "qualifier": "sha"
        },
        {
          "objectId": "281",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKGM4NzYyMjdhN2E2NDRjMDkwYjNlYjlhMzhjNjBlYzkyNjg2YmZjMWU"
    },
    {
      "type": "commit",
      "time": "2024-07-15T11:30:46Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "kxchourouk",
          "qualifier": "authored-by"
        },
        {
          "objectId": "531ced7b4663ba8896d3dc13d728f7e2666a9ebe",
          "qualifier": "sha"
        },
        {
          "objectId": "281",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDUzMWNlZDdiNDY2M2JhODg5NmQzZGMxM2Q3MjhmN2UyNjY2YTllYmU"
    },
    {
      "type": "commit",
      "time": "2024-07-15T14:46:29Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "kxchourouk",
          "qualifier": "authored-by"
        },
        {
          "objectId": "3baa3aaae2e7e9a8cdbfa6c04a6d523d7b8f5819",
          "qualifier": "sha"
        },
        {
          "objectId": "281",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDNiYWEzYWFhZTJlN2U5YThjZGJmYTZjMDRhNmQ1MjNkN2I4ZjU4MTk"
    },
    {
      "type": "commit",
      "time": "2024-07-09T18:38:17Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "authored-by"
        },
        {
          "objectId": "d3f51d5415b5003994b6a2a967f8cda469b7cd17",
          "qualifier": "sha"
        },
        {
          "objectId": "280",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKGQzZjUxZDU0MTViNTAwMzk5NGI2YTJhOTY3ZjhjZGE0NjliN2NkMTc"
    },
    {
      "type": "add_label",
      "time": "2024-07-09T18:38:20Z",
      "attributes": [
        {
          "name": "label",
          "value": "dependencies"
        }
      ],
      "relationships": [
        {
          "objectId": "dependabot[bot]",
          "qualifier": "authored-by"
        },
        {
          "objectId": "280",
          "qualifier": "labeled-on-pull_request"
        }
      ],
      "id": "LE_lADODyNbyM6O_DFBzwAAAAMhXmWf"
    },
    {
      "type": "add_label",
      "time": "2024-07-09T18:38:20Z",
      "attributes": [
        {
          "name": "label",
          "value": "python"
        }
      ],
      "relationships": [
        {
          "objectId": "dependabot[bot]",
          "qualifier": "authored-by"
        },
        {
          "objectId": "280",
          "qualifier": "labeled-on-pull_request"
        }
      ],
      "id": "LE_lADODyNbyM6O_DFBzwAAAAMhXmWk"
    },
    {
      "type": "merge_pull_request",
      "time": "2024-12-03T11:23:01Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "280",
          "qualifier": "merged-on-pull_request"
        }
      ],
      "id": "ME_lADODyNbyM6O_DFBzwAAAAOcWX3W"
    },
    {
      "type": "close_pull_request",
      "time": "2024-12-03T11:23:01Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "280",
          "qualifier": "closed-on-pull_request"
        }
      ],
      "id": "CE_lADODyNbyM6O_DFBzwAAAAOcWX35"
    },
    {
      "type": "commit",
      "time": "2024-07-06T00:37:30Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "authored-by"
        },
        {
          "objectId": "5cd04c693df2c14cc5367f22dd5c61659e8f087c",
          "qualifier": "sha"
        },
        {
          "objectId": "279",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDVjZDA0YzY5M2RmMmMxNGNjNTM2N2YyMmRkNWM2MTY1OWU4ZjA4N2M"
    },
    {
      "type": "add_label",
      "time": "2024-07-06T00:37:31Z",
      "attributes": [
        {
          "name": "label",
          "value": "dependencies"
        }
      ],
      "relationships": [
        {
          "objectId": "dependabot[bot]",
          "qualifier": "authored-by"
        },
        {
          "objectId": "279",
          "qualifier": "labeled-on-pull_request"
        }
      ],
      "id": "LE_lADODyNbyM6Opm3KzwAAAAMfTs9t"
    },
    {
      "type": "add_label",
      "time": "2024-07-06T00:37:31Z",
      "attributes": [
        {
          "name": "label",
          "value": "python"
        }
      ],
      "relationships": [
        {
          "objectId": "dependabot[bot]",
          "qualifier": "authored-by"
        },
        {
          "objectId": "279",
          "qualifier": "labeled-on-pull_request"
        }
      ],
      "id": "LE_lADODyNbyM6Opm3KzwAAAAMfTs9y"
    },
    {
      "type": "merge_pull_request",
      "time": "2024-12-03T11:23:26Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "279",
          "qualifier": "merged-on-pull_request"
        }
      ],
      "id": "ME_lADODyNbyM6Opm3KzwAAAAOcWZRR"
    },
    {
      "type": "close_pull_request",
      "time": "2024-12-03T11:23:26Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "279",
          "qualifier": "closed-on-pull_request"
        }
      ],
      "id": "CE_lADODyNbyM6Opm3KzwAAAAOcWZRq"
    },
    {
      "type": "commit",
      "time": "2024-06-18T00:43:15Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "authored-by"
        },
        {
          "objectId": "d6260e9e9b0cf5646fff1de8c18f58cead8a8dbf",
          "qualifier": "sha"
        },
        {
          "objectId": "274",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKGQ2MjYwZTllOWIwY2Y1NjQ2ZmZmMWRlOGMxOGY1OGNlYWQ4YThkYmY"
    },
    {
      "type": "add_label",
      "time": "2024-06-18T00:43:16Z",
      "attributes": [
        {
          "name": "label",
          "value": "dependencies"
        }
      ],
      "relationships": [
        {
          "objectId": "dependabot[bot]",
          "qualifier": "authored-by"
        },
        {
          "objectId": "274",
          "qualifier": "labeled-on-pull_request"
        }
      ],
      "id": "LE_lADODyNbyM6MlOgGzwAAAAMSYWPj"
    },
    {
      "type": "add_label",
      "time": "2024-06-18T00:43:16Z",
      "attributes": [
        {
          "name": "label",
          "value": "python"
        }
      ],
      "relationships": [
        {
          "objectId": "dependabot[bot]",
          "qualifier": "authored-by"
        },
        {
          "objectId": "274",
          "qualifier": "labeled-on-pull_request"
        }
      ],
      "id": "LE_lADODyNbyM6MlOgGzwAAAAMSYWPr"
    },
    {
      "type": "merge_pull_request",
      "time": "2024-12-03T11:23:11Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "274",
          "qualifier": "merged-on-pull_request"
        }
      ],
      "id": "ME_lADODyNbyM6MlOgGzwAAAAOcWYfC"
    },
    {
      "type": "close_pull_request",
      "time": "2024-12-03T11:23:12Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "274",
          "qualifier": "closed-on-pull_request"
        }
      ],
      "id": "CE_lADODyNbyM6MlOgGzwAAAAOcWYfe"
    },
    {
      "type": "commit",
      "time": "2024-06-06T23:27:01Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "authored-by"
        },
        {
          "objectId": "54c134e26616ef1d7118881cacfae21bfe19ac65",
          "qualifier": "sha"
        },
        {
          "objectId": "268",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDU0YzEzNGUyNjYxNmVmMWQ3MTE4ODgxY2FjZmFlMjFiZmUxOWFjNjU"
    },
    {
      "type": "add_label",
      "time": "2024-06-06T23:27:03Z",
      "attributes": [
        {
          "name": "label",
          "value": "dependencies"
        }
      ],
      "relationships": [
        {
          "objectId": "dependabot[bot]",
          "qualifier": "authored-by"
        },
        {
          "objectId": "268",
          "qualifier": "labeled-on-pull_request"
        }
      ],
      "id": "LE_lADODyNbyM6LbtelzwAAAAMLOQry"
    },
    {
      "type": "add_label",
      "time": "2024-06-06T23:27:03Z",
      "attributes": [
        {
          "name": "label",
          "value": "python"
        }
      ],
      "relationships": [
        {
          "objectId": "dependabot[bot]",
          "qualifier": "authored-by"
        },
        {
          "objectId": "268",
          "qualifier": "labeled-on-pull_request"
        }
      ],
      "id": "LE_lADODyNbyM6LbtelzwAAAAMLOQr1"
    },
    {
      "type": "comment_pull_request",
      "time": "2024-12-03T11:23:59Z",
      "attributes": [
        {
          "name": "comment",
          "value": "Superseded by #297."
        }
      ],
      "relationships": [
        {
          "objectId": "dependabot[bot]",
          "qualifier": "commented-by"
        },
        {
          "objectId": "268",
          "qualifier": "on"
        }
      ],
      "id": "IC_kwDODyNbyM6V3M82"
    },
    {
      "type": "close_pull_request",
      "time": "2024-12-03T11:24:00Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "dependabot[bot]",
          "qualifier": "authored-by"
        },
        {
          "objectId": "268",
          "qualifier": "closed-on-pull_request"
        }
      ],
      "id": "CE_lADODyNbyM6LbtelzwAAAAOcWbDZ"
    },
    {
      "type": "commit",
      "time": "2024-06-04T17:53:31Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "authored-by"
        },
        {
          "objectId": "696168e09a30c656c555db03937441f9adef9adf",
          "qualifier": "sha"
        },
        {
          "objectId": "267",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDY5NjE2OGUwOWEzMGM2NTZjNTU1ZGIwMzkzNzQ0MWY5YWRlZjlhZGY"
    },
    {
      "type": "add_label",
      "time": "2024-06-04T17:53:32Z",
      "attributes": [
        {
          "name": "label",
          "value": "dependencies"
        }
      ],
      "relationships": [
        {
          "objectId": "dependabot[bot]",
          "qualifier": "authored-by"
        },
        {
          "objectId": "267",
          "qualifier": "labeled-on-pull_request"
        }
      ],
      "id": "LE_lADODyNbyM6LHyXDzwAAAAMJPuG7"
    },
    {
      "type": "add_label",
      "time": "2024-06-04T17:53:32Z",
      "attributes": [
        {
          "name": "label",
          "value": "python"
        }
      ],
      "relationships": [
        {
          "objectId": "dependabot[bot]",
          "qualifier": "authored-by"
        },
        {
          "objectId": "267",
          "qualifier": "labeled-on-pull_request"
        }
      ],
      "id": "LE_lADODyNbyM6LHyXDzwAAAAMJPuHC"
    },
    {
      "type": "merge_pull_request",
      "time": "2024-12-03T11:50:29Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "267",
          "qualifier": "merged-on-pull_request"
        }
      ],
      "id": "ME_lADODyNbyM6LHyXDzwAAAAOcX0Wy"
    },
    {
      "type": "close_pull_request",
      "time": "2024-12-03T11:50:30Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "267",
          "qualifier": "closed-on-pull_request"
        }
      ],
      "id": "CE_lADODyNbyM6LHyXDzwAAAAOcX0XP"
    },
    {
      "type": "commit",
      "time": "2024-05-21T05:56:21Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "authored-by"
        },
        {
          "objectId": "eee24bb97da2f5c30ff4be22b03fb3162a857fc0",
          "qualifier": "sha"
        },
        {
          "objectId": "265",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKGVlZTI0YmI5N2RhMmY1YzMwZmY0YmUyMmIwM2ZiMzE2MmE4NTdmYzA"
    },
    {
      "type": "add_label",
      "time": "2024-05-21T05:56:23Z",
      "attributes": [
        {
          "name": "label",
          "value": "dependencies"
        }
      ],
      "relationships": [
        {
          "objectId": "dependabot[bot]",
          "qualifier": "authored-by"
        },
        {
          "objectId": "265",
          "qualifier": "labeled-on-pull_request"
        }
      ],
      "id": "LE_lADODyNbyM6Jh8WVzwAAAAL_XoI8"
    },
    {
      "type": "add_label",
      "time": "2024-05-21T05:56:23Z",
      "attributes": [
        {
          "name": "label",
          "value": "python"
        }
      ],
      "relationships": [
        {
          "objectId": "dependabot[bot]",
          "qualifier": "authored-by"
        },
        {
          "objectId": "265",
          "qualifier": "labeled-on-pull_request"
        }
      ],
      "id": "LE_lADODyNbyM6Jh8WVzwAAAAL_XoJJ"
    },
    {
      "type": "merge_pull_request",
      "time": "2024-12-03T11:50:43Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "265",
          "qualifier": "merged-on-pull_request"
        }
      ],
      "id": "ME_lADODyNbyM6Jh8WVzwAAAAOcX1Ic"
    },
    {
      "type": "close_pull_request",
      "time": "2024-12-03T11:50:43Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "265",
          "qualifier": "closed-on-pull_request"
        }
      ],
      "id": "CE_lADODyNbyM6Jh8WVzwAAAAOcX1I4"
    },
    {
      "type": "commit",
      "time": "2024-05-20T18:15:14Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "SubramanyamChalla24",
          "qualifier": "authored-by"
        },
        {
          "objectId": "58eb00c082424cf82eedade9098cd153f9aa7413",
          "qualifier": "sha"
        },
        {
          "objectId": "264",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDU4ZWIwMGMwODI0MjRjZjgyZWVkYWRlOTA5OGNkMTUzZjlhYTc0MTM"
    },
    {
      "type": "commit",
      "time": "2024-05-20T18:29:25Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "SubramanyamChalla24",
          "qualifier": "authored-by"
        },
        {
          "objectId": "dd43cf007c34ad2492132528bc18b41e39d26b61",
          "qualifier": "sha"
        },
        {
          "objectId": "264",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKGRkNDNjZjAwN2MzNGFkMjQ5MjEzMjUyOGJjMThiNDFlMzlkMjZiNjE"
    },
    {
      "type": "commit",
      "time": "2024-05-20T18:30:05Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "SubramanyamChalla24",
          "qualifier": "authored-by"
        },
        {
          "objectId": "13f830fb30a7f14fe53aa4d6b8480a361de01a71",
          "qualifier": "sha"
        },
        {
          "objectId": "264",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDEzZjgzMGZiMzBhN2YxNGZlNTNhYTRkNmI4NDgwYTM2MWRlMDFhNzE"
    },
    {
      "type": "commit",
      "time": "2024-05-20T18:34:58Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "SubramanyamChalla24",
          "qualifier": "authored-by"
        },
        {
          "objectId": "82e544004b71085327baf2723d70dbaec415246d",
          "qualifier": "sha"
        },
        {
          "objectId": "264",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDgyZTU0NDAwNGI3MTA4NTMyN2JhZjI3MjNkNzBkYmFlYzQxNTI0NmQ"
    },
    {
      "type": "commit",
      "time": "2024-05-20T18:51:03Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "SubramanyamChalla24",
          "qualifier": "authored-by"
        },
        {
          "objectId": "66c5242fb027a8f4f9d6e5b13d04a2489ccbb980",
          "qualifier": "sha"
        },
        {
          "objectId": "264",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDY2YzUyNDJmYjAyN2E4ZjRmOWQ2ZTViMTNkMDRhMjQ4OWNjYmI5ODA"
    },
    {
      "type": "commit",
      "time": "2024-05-20T18:52:56Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "authored-by"
        },
        {
          "objectId": "9482c40ae142a2000e4d84d5f98e5e1a0e711b45",
          "qualifier": "sha"
        },
        {
          "objectId": "264",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDk0ODJjNDBhZTE0MmEyMDAwZTRkODRkNWY5OGU1ZTFhMGU3MTFiNDU"
    },
    {
      "type": "commit",
      "time": "2024-06-05T15:09:28Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "SubramanyamChalla24",
          "qualifier": "authored-by"
        },
        {
          "objectId": "488e3fc52909b24b1b5fc1c1bad9820cc0e1cf6f",
          "qualifier": "sha"
        },
        {
          "objectId": "264",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDQ4OGUzZmM1MjkwOWIyNGIxYjVmYzFjMWJhZDk4MjBjYzBlMWNmNmY"
    },
    {
      "type": "commit",
      "time": "2024-06-05T15:23:49Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "SubramanyamChalla24",
          "qualifier": "authored-by"
        },
        {
          "objectId": "2e0af6a28219298fd81a959763d40fa2237d2c15",
          "qualifier": "sha"
        },
        {
          "objectId": "264",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDJlMGFmNmEyODIxOTI5OGZkODFhOTU5NzYzZDQwZmEyMjM3ZDJjMTU"
    },
    {
      "type": "commit",
      "time": "2024-06-05T15:27:10Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "SubramanyamChalla24",
          "qualifier": "authored-by"
        },
        {
          "objectId": "3bd2b60dbe1269daf45b44cc434a13be609fc50e",
          "qualifier": "sha"
        },
        {
          "objectId": "264",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDNiZDJiNjBkYmUxMjY5ZGFmNDViNDRjYzQzNGExM2JlNjA5ZmM1MGU"
    },
    {
      "type": "merge_pull_request",
      "time": "2024-06-07T07:15:43Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "264",
          "qualifier": "merged-on-pull_request"
        }
      ],
      "id": "ME_lADODyNbyM6Je44FzwAAAAMLZuX2"
    },
    {
      "type": "close_pull_request",
      "time": "2024-06-07T07:15:43Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "264",
          "qualifier": "closed-on-pull_request"
        }
      ],
      "id": "CE_lADODyNbyM6Je44FzwAAAAMLZuYF"
    },
    {
      "type": "commit",
      "time": "2024-05-14T22:43:40Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "SubramanyamChalla24",
          "qualifier": "authored-by"
        },
        {
          "objectId": "3c59fd55d404a1d0ede195493b4d7f9dcca0ebc4",
          "qualifier": "sha"
        },
        {
          "objectId": "261",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDNjNTlmZDU1ZDQwNGExZDBlZGUxOTU0OTNiNGQ3ZjlkY2NhMGViYzQ"
    },
    {
      "type": "merge_pull_request",
      "time": "2024-05-15T07:56:27Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "261",
          "qualifier": "merged-on-pull_request"
        }
      ],
      "id": "ME_lADODyNbyM6I4mdRzwAAAAL7tU_E"
    },
    {
      "type": "close_pull_request",
      "time": "2024-05-15T07:56:27Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "261",
          "qualifier": "closed-on-pull_request"
        }
      ],
      "id": "CE_lADODyNbyM6I4mdRzwAAAAL7tU_Z"
    },
    {
      "type": "commit",
      "time": "2024-05-06T21:15:54Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "authored-by"
        },
        {
          "objectId": "d9c4ad5103ab36d0a16886a88fefc7b73ed8369b",
          "qualifier": "sha"
        },
        {
          "objectId": "258",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKGQ5YzRhZDUxMDNhYjM2ZDBhMTY4ODZhODhmZWZjN2I3M2VkODM2OWI"
    },
    {
      "type": "add_label",
      "time": "2024-05-06T21:15:55Z",
      "attributes": [
        {
          "name": "label",
          "value": "dependencies"
        }
      ],
      "relationships": [
        {
          "objectId": "dependabot[bot]",
          "qualifier": "authored-by"
        },
        {
          "objectId": "258",
          "qualifier": "labeled-on-pull_request"
        }
      ],
      "id": "LE_lADODyNbyM6IAVb9zwAAAAL2NU7L"
    },
    {
      "type": "add_label",
      "time": "2024-05-06T21:15:55Z",
      "attributes": [
        {
          "name": "label",
          "value": "python"
        }
      ],
      "relationships": [
        {
          "objectId": "dependabot[bot]",
          "qualifier": "authored-by"
        },
        {
          "objectId": "258",
          "qualifier": "labeled-on-pull_request"
        }
      ],
      "id": "LE_lADODyNbyM6IAVb9zwAAAAL2NU7R"
    },
    {
      "type": "merge_pull_request",
      "time": "2024-12-03T11:23:38Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "258",
          "qualifier": "merged-on-pull_request"
        }
      ],
      "id": "ME_lADODyNbyM6IAVb9zwAAAAOcWZ37"
    },
    {
      "type": "close_pull_request",
      "time": "2024-12-03T11:23:38Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "258",
          "qualifier": "closed-on-pull_request"
        }
      ],
      "id": "CE_lADODyNbyM6IAVb9zwAAAAOcWZ4d"
    },
    {
      "type": "commit",
      "time": "2024-04-20T21:02:33Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "srbhr",
          "qualifier": "authored-by"
        },
        {
          "objectId": "706ca0935dabfb3bd0ac6af83a382d6b46ca3f8f",
          "qualifier": "sha"
        },
        {
          "objectId": "256",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDcwNmNhMDkzNWRhYmZiM2JkMGFjNmFmODNhMzgyZDZiNDZjYTNmOGY"
    },
    {
      "type": "merge_pull_request",
      "time": "2024-04-20T21:02:57Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "256",
          "qualifier": "merged-on-pull_request"
        }
      ],
      "id": "ME_lADODyNbyM6GZE5RzwAAAALr9IOS"
    },
    {
      "type": "close_pull_request",
      "time": "2024-04-20T21:02:57Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "256",
          "qualifier": "closed-on-pull_request"
        }
      ],
      "id": "CE_lADODyNbyM6GZE5RzwAAAALr9IOU"
    },
    {
      "type": "commit",
      "time": "2024-04-20T20:39:14Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "srbhr",
          "qualifier": "authored-by"
        },
        {
          "objectId": "75d1b56c7dd7856961c990d582cb7f126f851fbb",
          "qualifier": "sha"
        },
        {
          "objectId": "255",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDc1ZDFiNTZjN2RkNzg1Njk2MWM5OTBkNTgyY2I3ZjEyNmY4NTFmYmI"
    },
    {
      "type": "merge_pull_request",
      "time": "2024-04-20T20:43:55Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "255",
          "qualifier": "merged-on-pull_request"
        }
      ],
      "id": "ME_lADODyNbyM6GZCVxzwAAAALr9CW5"
    },
    {
      "type": "close_pull_request",
      "time": "2024-04-20T20:43:55Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "255",
          "qualifier": "closed-on-pull_request"
        }
      ],
      "id": "CE_lADODyNbyM6GZCVxzwAAAALr9CW8"
    },
    {
      "type": "commit",
      "time": "2024-04-17T23:21:49Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Brendan Andresen",
          "qualifier": "authored-by"
        },
        {
          "objectId": "99ee39905dce42b2546f4e5f93f270057d19b297",
          "qualifier": "sha"
        },
        {
          "objectId": "254",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDk5ZWUzOTkwNWRjZTQyYjI1NDZmNGU1ZjkzZjI3MDA1N2QxOWIyOTc"
    },
    {
      "type": "approve_review",
      "time": "2024-04-20T10:44:30Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "approved-by"
        },
        {
          "objectId": "254",
          "qualifier": "for-pull-request"
        }
      ],
      "id": "2013068974"
    },
    {
      "type": "merge_pull_request",
      "time": "2024-04-20T10:44:42Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "254",
          "qualifier": "merged-on-pull_request"
        }
      ],
      "id": "ME_lADODyNbyM6GE859zwAAAALr5AAk"
    },
    {
      "type": "close_pull_request",
      "time": "2024-04-20T10:44:43Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "254",
          "qualifier": "closed-on-pull_request"
        }
      ],
      "id": "CE_lADODyNbyM6GE859zwAAAALr5AAp"
    },
    {
      "type": "commit",
      "time": "2024-04-12T02:48:42Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "authored-by"
        },
        {
          "objectId": "cf7a78affa171ea722b029461aeb099755907b44",
          "qualifier": "sha"
        },
        {
          "objectId": "253",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKGNmN2E3OGFmZmExNzFlYTcyMmIwMjk0NjFhZWIwOTk3NTU5MDdiNDQ"
    },
    {
      "type": "add_label",
      "time": "2024-04-12T02:48:43Z",
      "attributes": [
        {
          "name": "label",
          "value": "dependencies"
        }
      ],
      "relationships": [
        {
          "objectId": "dependabot[bot]",
          "qualifier": "authored-by"
        },
        {
          "objectId": "253",
          "qualifier": "labeled-on-pull_request"
        }
      ],
      "id": "LE_lADODyNbyM6Fc4aszwAAAALltF60"
    },
    {
      "type": "add_label",
      "time": "2024-04-12T02:48:44Z",
      "attributes": [
        {
          "name": "label",
          "value": "python"
        }
      ],
      "relationships": [
        {
          "objectId": "dependabot[bot]",
          "qualifier": "authored-by"
        },
        {
          "objectId": "253",
          "qualifier": "labeled-on-pull_request"
        }
      ],
      "id": "LE_lADODyNbyM6Fc4aszwAAAALltF63"
    },
    {
      "type": "merge_pull_request",
      "time": "2024-04-20T10:45:57Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "253",
          "qualifier": "merged-on-pull_request"
        }
      ],
      "id": "ME_lADODyNbyM6Fc4aszwAAAALr5Af8"
    },
    {
      "type": "close_pull_request",
      "time": "2024-04-20T10:45:57Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "253",
          "qualifier": "closed-on-pull_request"
        }
      ],
      "id": "CE_lADODyNbyM6Fc4aszwAAAALr5Af_"
    },
    {
      "type": "commit",
      "time": "2024-04-03T16:36:33Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "authored-by"
        },
        {
          "objectId": "528d7df2b315b94742fe7c20e02868431c112f56",
          "qualifier": "sha"
        },
        {
          "objectId": "252",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDUyOGQ3ZGYyYjMxNWI5NDc0MmZlN2MyMGUwMjg2ODQzMWMxMTJmNTY"
    },
    {
      "type": "add_label",
      "time": "2024-04-03T16:36:35Z",
      "attributes": [
        {
          "name": "label",
          "value": "dependencies"
        }
      ],
      "relationships": [
        {
          "objectId": "dependabot[bot]",
          "qualifier": "authored-by"
        },
        {
          "objectId": "252",
          "qualifier": "labeled-on-pull_request"
        }
      ],
      "id": "LE_lADODyNbyM6Ehl6DzwAAAALf03zx"
    },
    {
      "type": "add_label",
      "time": "2024-04-03T16:36:35Z",
      "attributes": [
        {
          "name": "label",
          "value": "python"
        }
      ],
      "relationships": [
        {
          "objectId": "dependabot[bot]",
          "qualifier": "authored-by"
        },
        {
          "objectId": "252",
          "qualifier": "labeled-on-pull_request"
        }
      ],
      "id": "LE_lADODyNbyM6Ehl6DzwAAAALf03z6"
    },
    {
      "type": "merge_pull_request",
      "time": "2024-04-20T10:46:05Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "252",
          "qualifier": "merged-on-pull_request"
        }
      ],
      "id": "ME_lADODyNbyM6Ehl6DzwAAAALr5Ajx"
    },
    {
      "type": "close_pull_request",
      "time": "2024-04-20T10:46:05Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "252",
          "qualifier": "closed-on-pull_request"
        }
      ],
      "id": "CE_lADODyNbyM6Ehl6DzwAAAALr5Aj1"
    },
    {
      "type": "commit",
      "time": "2024-03-29T06:22:48Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "authored-by"
        },
        {
          "objectId": "af806baa48852c4cf352c05dc19a9060b9a8b867",
          "qualifier": "sha"
        },
        {
          "objectId": "251",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKGFmODA2YmFhNDg4NTJjNGNmMzUyYzA1ZGMxOWE5MDYwYjlhOGI4Njc"
    },
    {
      "type": "comment_pull_request",
      "time": "2024-03-29T08:37:51Z",
      "attributes": [
        {
          "name": "comment",
          "value": "@srbhr I think this PR was raised accidentally and we should close it "
        }
      ],
      "relationships": [
        {
          "objectId": "Devasy Patel",
          "qualifier": "commented-by"
        },
        {
          "objectId": "251",
          "qualifier": "on"
        }
      ],
      "id": "IC_kwDODyNbyM54z7zF"
    },
    {
      "type": "comment_pull_request",
      "time": "2024-03-29T12:49:43Z",
      "attributes": [
        {
          "name": "comment",
          "value": "Yeah @Devasy23 "
        }
      ],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "commented-by"
        },
        {
          "objectId": "251",
          "qualifier": "on"
        }
      ],
      "id": "IC_kwDODyNbyM541JO9"
    },
    {
      "type": "close_pull_request",
      "time": "2024-03-29T12:49:43Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "251",
          "qualifier": "closed-on-pull_request"
        }
      ],
      "id": "CE_lADODyNbyM6EAkiizwAAAALc03Cq"
    },
    {
      "type": "commit",
      "time": "2024-03-25T18:30:21Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Devasy Patel",
          "qualifier": "authored-by"
        },
        {
          "objectId": "3442bf5c34738d3ef4ad2551dffd272ae5e4160d",
          "qualifier": "sha"
        },
        {
          "objectId": "250",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDM0NDJiZjVjMzQ3MzhkM2VmNGFkMjU1MWRmZmQyNzJhZTVlNDE2MGQ"
    },
    {
      "type": "commit",
      "time": "2024-03-25T18:40:59Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Devasy Patel",
          "qualifier": "authored-by"
        },
        {
          "objectId": "13ecfba350b7c7f1ce28d4729b59056a7b464548",
          "qualifier": "sha"
        },
        {
          "objectId": "250",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDEzZWNmYmEzNTBiN2M3ZjFjZTI4ZDQ3MjliNTkwNTZhN2I0NjQ1NDg"
    },
    {
      "type": "commit",
      "time": "2024-03-25T18:42:00Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Devasy Patel",
          "qualifier": "authored-by"
        },
        {
          "objectId": "2843afa2a644911df1ea93d6f8c1395c965e951e",
          "qualifier": "sha"
        },
        {
          "objectId": "250",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDI4NDNhZmEyYTY0NDkxMWRmMWVhOTNkNmY4YzEzOTVjOTY1ZTk1MWU"
    },
    {
      "type": "commit",
      "time": "2024-03-25T18:42:50Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Devasy Patel",
          "qualifier": "authored-by"
        },
        {
          "objectId": "cc1d6ec0ae1e34c583bafe39fea1f3a4a79ad1f1",
          "qualifier": "sha"
        },
        {
          "objectId": "250",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKGNjMWQ2ZWMwYWUxZTM0YzU4M2JhZmUzOWZlYTFmM2E0YTc5YWQxZjE"
    },
    {
      "type": "merge_pull_request",
      "time": "2024-03-29T12:49:58Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "250",
          "qualifier": "merged-on-pull_request"
        }
      ],
      "id": "ME_lADODyNbyM6Dg2R5zwAAAALc03Zr"
    },
    {
      "type": "close_pull_request",
      "time": "2024-03-29T12:49:58Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "250",
          "qualifier": "closed-on-pull_request"
        }
      ],
      "id": "CE_lADODyNbyM6Dg2R5zwAAAALc03Zw"
    },
    {
      "type": "commit",
      "time": "2024-03-25T14:54:54Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "srbhr",
          "qualifier": "authored-by"
        },
        {
          "objectId": "18a19b5f7759279e2b867e2fe5d628f6f9b33879",
          "qualifier": "sha"
        },
        {
          "objectId": "248",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDE4YTE5YjVmNzc1OTI3OWUyYjg2N2UyZmU1ZDYyOGY2ZjliMzM4Nzk"
    },
    {
      "type": "commit",
      "time": "2024-03-25T15:10:51Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "srbhr",
          "qualifier": "authored-by"
        },
        {
          "objectId": "bdee68cf9abcd30d8cbeecda473178fc5a10ca94",
          "qualifier": "sha"
        },
        {
          "objectId": "249",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKGJkZWU2OGNmOWFiY2QzMGQ4Y2JlZWNkYTQ3MzE3OGZjNWExMGNhOTQ"
    },
    {
      "type": "close_pull_request",
      "time": "2024-03-25T15:11:46Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "249",
          "qualifier": "closed-on-pull_request"
        }
      ],
      "id": "CE_lADODyNbyM6DfMx_zwAAAALZVj-D"
    },
    {
      "type": "merge_pull_request",
      "time": "2024-03-25T15:09:58Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "248",
          "qualifier": "merged-on-pull_request"
        }
      ],
      "id": "ME_lADODyNbyM6DfJonzwAAAALZVdnu"
    },
    {
      "type": "close_pull_request",
      "time": "2024-03-25T15:09:58Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "248",
          "qualifier": "closed-on-pull_request"
        }
      ],
      "id": "CE_lADODyNbyM6DfJonzwAAAALZVdoR"
    },
    {
      "type": "commit",
      "time": "2024-03-25T13:46:23Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "srbhr",
          "qualifier": "authored-by"
        },
        {
          "objectId": "453d93c1ff2c1dd09dbbfd50e5e63628a958c643",
          "qualifier": "sha"
        },
        {
          "objectId": "247",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDQ1M2Q5M2MxZmYyYzFkZDA5ZGJiZmQ1MGU1ZTYzNjI4YTk1OGM2NDM"
    },
    {
      "type": "merge_pull_request",
      "time": "2024-03-25T13:53:36Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "247",
          "qualifier": "merged-on-pull_request"
        }
      ],
      "id": "ME_lADODyNbyM6DeXJPzwAAAALZRBUk"
    },
    {
      "type": "close_pull_request",
      "time": "2024-03-25T13:53:36Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "247",
          "qualifier": "closed-on-pull_request"
        }
      ],
      "id": "CE_lADODyNbyM6DeXJPzwAAAALZRBVG"
    },
    {
      "type": "commit",
      "time": "2024-03-22T19:51:05Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Devasy23",
          "qualifier": "authored-by"
        },
        {
          "objectId": "73f7ef3f87c4cc5b2db22c151416980069eaf928",
          "qualifier": "sha"
        },
        {
          "objectId": "245",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDczZjdlZjNmODdjNGNjNWIyZGIyMmMxNTE0MTY5ODAwNjllYWY5Mjg"
    },
    {
      "type": "comment_pull_request",
      "time": "2024-03-22T20:08:23Z",
      "attributes": [
        {
          "name": "comment",
          "value": "@srbhr you can see GPT4 enable code review on this commit here : https://github.com/Devasy23/Resume-Matcher/pull/2\r\n\r\nAlso, i need to commit after linting it with black and isort"
        }
      ],
      "relationships": [
        {
          "objectId": "Devasy Patel",
          "qualifier": "commented-by"
        },
        {
          "objectId": "245",
          "qualifier": "on"
        }
      ],
      "id": "IC_kwDODyNbyM54JxZI"
    },
    {
      "type": "comment_pull_request",
      "time": "2024-03-23T13:13:52Z",
      "attributes": [
        {
          "name": "comment",
          "value": "GPT-4 enabled code review ? "
        }
      ],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "commented-by"
        },
        {
          "objectId": "245",
          "qualifier": "on"
        }
      ],
      "id": "IC_kwDODyNbyM54MTo3"
    },
    {
      "type": "comment_pull_request",
      "time": "2024-03-23T15:13:39Z",
      "attributes": [
        {
          "name": "comment",
          "value": "> GPT-4 enabled code review ?\r\n\r\nyes, by github app called [`senior-dev`](https://app.seniordev.ai/)"
        }
      ],
      "relationships": [
        {
          "objectId": "Devasy Patel",
          "qualifier": "commented-by"
        },
        {
          "objectId": "245",
          "qualifier": "on"
        }
      ],
      "id": "IC_kwDODyNbyM54MazY"
    },
    {
      "type": "commit",
      "time": "2024-03-23T15:32:46Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Devasy Patel",
          "qualifier": "authored-by"
        },
        {
          "objectId": "6aff3e93ce76662d3e465dd18664e3dd9a45601a",
          "qualifier": "sha"
        },
        {
          "objectId": "245",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDZhZmYzZTkzY2U3NjY2MmQzZTQ2NWRkMTg2NjRlM2RkOWE0NTYwMWE"
    },
    {
      "type": "commit",
      "time": "2024-03-23T16:16:28Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "authored-by"
        },
        {
          "objectId": "5ce05a743d9585f3cde8537ad2f6b63bf134fbc2",
          "qualifier": "sha"
        },
        {
          "objectId": "245",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDVjZTA1YTc0M2Q5NTg1ZjNjZGU4NTM3YWQyZjZiNjNiZjEzNGZiYzI"
    },
    {
      "type": "comment_pull_request",
      "time": "2024-03-25T05:12:43Z",
      "attributes": [
        {
          "name": "comment",
          "value": "@Devasy23 is this PR good to merge?"
        }
      ],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "commented-by"
        },
        {
          "objectId": "245",
          "qualifier": "on"
        }
      ],
      "id": "IC_kwDODyNbyM54PINv"
    },
    {
      "type": "comment_pull_request",
      "time": "2024-03-25T05:44:08Z",
      "attributes": [
        {
          "name": "comment",
          "value": "> @Devasy23 is this PR good to merge?\n\nYes it's good to merge but for extra surety just check it once.\n\nThe major changes are in utils.logger where I modularised the functions and also added docstrings, streamlit_interactive where I added the similarity score without api changes and added coloured rounded view of similarity score in streamlit_app.py\n\nEverything else are formatting changes done by black and isort."
        }
      ],
      "relationships": [
        {
          "objectId": "Devasy Patel",
          "qualifier": "commented-by"
        },
        {
          "objectId": "245",
          "qualifier": "on"
        }
      ],
      "id": "IC_kwDODyNbyM54PSGP"
    },
    {
      "type": "comment_pull_request",
      "time": "2024-03-25T06:10:55Z",
      "attributes": [
        {
          "name": "comment",
          "value": "Okay, so we have black as a formatter. This needs to go in the readme, which needs updating and a separate PR. "
        }
      ],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "commented-by"
        },
        {
          "objectId": "245",
          "qualifier": "on"
        }
      ],
      "id": "IC_kwDODyNbyM54PYFt"
    },
    {
      "type": "merge_pull_request",
      "time": "2024-03-25T13:43:40Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "245",
          "qualifier": "merged-on-pull_request"
        }
      ],
      "id": "ME_lADODyNbyM6DUnXZzwAAAALZQeyq"
    },
    {
      "type": "close_pull_request",
      "time": "2024-03-25T13:43:40Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "245",
          "qualifier": "closed-on-pull_request"
        }
      ],
      "id": "CE_lADODyNbyM6DUnXZzwAAAALZQezE"
    },
    {
      "type": "commit",
      "time": "2023-10-07T04:43:29Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "SubramanyamChalla24",
          "qualifier": "authored-by"
        },
        {
          "objectId": "115eaaeb1cdc119cc46104dcf5dee248c52de416",
          "qualifier": "sha"
        },
        {
          "objectId": "243",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDExNWVhYWViMWNkYzExOWNjNDYxMDRkY2Y1ZGVlMjQ4YzUyZGU0MTY"
    },
    {
      "type": "commit",
      "time": "2023-10-07T04:45:22Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "SubramanyamChalla24",
          "qualifier": "authored-by"
        },
        {
          "objectId": "028681ebc52584c4f9847bd012d68180db1037f4",
          "qualifier": "sha"
        },
        {
          "objectId": "243",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDAyODY4MWViYzUyNTg0YzRmOTg0N2JkMDEyZDY4MTgwZGIxMDM3ZjQ"
    },
    {
      "type": "commit",
      "time": "2023-10-07T04:45:28Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "SubramanyamChalla24",
          "qualifier": "authored-by"
        },
        {
          "objectId": "9110f31db6d1b143e4570dd0f1ffb2dea3504c48",
          "qualifier": "sha"
        },
        {
          "objectId": "243",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDkxMTBmMzFkYjZkMWIxNDNlNDU3MGRkMGYxZmZiMmRlYTM1MDRjNDg"
    },
    {
      "type": "commit",
      "time": "2024-03-01T05:57:34Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "SubramanyamChalla24",
          "qualifier": "authored-by"
        },
        {
          "objectId": "145003f170044db2a40168d1d9ba1d95bdaab9d5",
          "qualifier": "sha"
        },
        {
          "objectId": "243",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDE0NTAwM2YxNzAwNDRkYjJhNDAxNjhkMWQ5YmExZDk1YmRhYWI5ZDU"
    },
    {
      "type": "commit",
      "time": "2024-03-13T07:44:27Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "SubramanyamChalla24",
          "qualifier": "authored-by"
        },
        {
          "objectId": "f4db040fffaee03e153c95b5c54430bc30da9b7e",
          "qualifier": "sha"
        },
        {
          "objectId": "243",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKGY0ZGIwNDBmZmZhZWUwM2UxNTNjOTViNWM1NDQzMGJjMzBkYTliN2U"
    },
    {
      "type": "rename_pull_request",
      "time": "2024-03-13T15:34:56Z",
      "attributes": [
        {
          "name": "renamed-to",
          "value": "Removed Vector Databases"
        }
      ],
      "relationships": [
        {
          "objectId": "Subramanyam Challa",
          "qualifier": "change-issued-by"
        },
        {
          "objectId": "243",
          "qualifier": "for-pr"
        }
      ],
      "id": "RTE_lADODyNbyM6CIutdzwAAAALRiqfq"
    },
    {
      "type": "rename_pull_request",
      "time": "2024-03-13T15:35:16Z",
      "attributes": [
        {
          "name": "renamed-to",
          "value": "No Api Keys"
        }
      ],
      "relationships": [
        {
          "objectId": "Subramanyam Challa",
          "qualifier": "change-issued-by"
        },
        {
          "objectId": "243",
          "qualifier": "for-pr"
        }
      ],
      "id": "RTE_lADODyNbyM6CIutdzwAAAALRisGA"
    },
    {
      "type": "comment_pull_request",
      "time": "2024-03-13T19:17:44Z",
      "attributes": [
        {
          "name": "comment",
          "value": "Thanks a lot, @SubramanyamChalla24, for this PR. It's much needed, as it'll ease the process of knowing the % match score of the resumes and the JDs. \r\n\r\nBefore merging, I will be testing out this PR on:\r\n\r\n1. Mac OS 14\r\n2. Unbuntu 22.04 on WSL\r\n\r\nPython Version will be 3.11 (the one with GIL)"
        }
      ],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "commented-by"
        },
        {
          "objectId": "243",
          "qualifier": "on"
        }
      ],
      "id": "IC_kwDODyNbyM528FXc"
    },
    {
      "type": "comment_pull_request",
      "time": "2024-03-13T19:20:28Z",
      "attributes": [
        {
          "name": "comment",
          "value": "@Devasy23 @imhalcyon @Sayvai Please can you help me in testing this on:\r\n\r\n- Windows\r\n- Docker\r\n- Different versions of Python 3.10 to 3.12 (I'm doing 3.11)"
        }
      ],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "commented-by"
        },
        {
          "objectId": "243",
          "qualifier": "on"
        }
      ],
      "id": "IC_kwDODyNbyM528HWj"
    },
    {
      "type": "comment_pull_request",
      "time": "2024-03-18T20:05:23Z",
      "attributes": [
        {
          "name": "comment",
          "value": "@SubramanyamChalla24, the changes are working smoothly on MacOS!\r\n\r\n<img width=\"888\" alt=\"image\" src=\"https://github.com/srbhr/Resume-Matcher/assets/54472864/7156d7c0-5ccd-4c6a-b079-0f7ac5d111fb\">\r\n\r\nI'll keep this PR open if anyone wants to test it on Windows, and Linux. Else, by Friday I will merge it. \r\n"
        }
      ],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "commented-by"
        },
        {
          "objectId": "243",
          "qualifier": "on"
        }
      ],
      "id": "IC_kwDODyNbyM53f4h7"
    },
    {
      "type": "comment_pull_request",
      "time": "2024-03-19T03:16:10Z",
      "attributes": [
        {
          "name": "comment",
          "value": "> @Devasy23 @imhalcyon @Sayvai Please can you help me in testing this on:\n> \n> - Windows\n> - Docker\n> - Different versions of Python 3.10 to 3.12 (I'm doing 3.11)\n\nI'll review before Friday, but the dependencies weren't working for me on Linux with python 3.10, but they are working for 3.11.5 specified in doc"
        }
      ],
      "relationships": [
        {
          "objectId": "Devasy Patel",
          "qualifier": "commented-by"
        },
        {
          "objectId": "243",
          "qualifier": "on"
        }
      ],
      "id": "IC_kwDODyNbyM53jDaH"
    },
    {
      "type": "comment_pull_request",
      "time": "2024-03-19T03:33:37Z",
      "attributes": [
        {
          "name": "comment",
          "value": "Okay then we make sure that we'll mention Python 3.11 specifically "
        }
      ],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "commented-by"
        },
        {
          "objectId": "243",
          "qualifier": "on"
        }
      ],
      "id": "IC_kwDODyNbyM53jGeK"
    },
    {
      "type": "comment_pull_request",
      "time": "2024-03-19T03:34:50Z",
      "attributes": [
        {
          "name": "comment",
          "value": "Also, we'll have to clean the Requirements.txt file as well "
        }
      ],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "commented-by"
        },
        {
          "objectId": "243",
          "qualifier": "on"
        }
      ],
      "id": "IC_kwDODyNbyM53jGrZ"
    },
    {
      "type": "comment_review",
      "time": "2024-03-19T18:04:20Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Devasy Patel",
          "qualifier": "commented-by"
        },
        {
          "objectId": "243",
          "qualifier": "for-pull-request"
        }
      ],
      "id": "1947007929"
    },
    {
      "type": "commit",
      "time": "2024-02-06T19:40:25Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "authored-by"
        },
        {
          "objectId": "2d68aa0ee567394a4cb124c9ef8fbbac638ea1d7",
          "qualifier": "sha"
        },
        {
          "objectId": "240",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDJkNjhhYTBlZTU2NzM5NGE0Y2IxMjRjOWVmOGZiYmFjNjM4ZWExZDc"
    },
    {
      "type": "commit",
      "time": "2024-02-29T17:18:49Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "ChristianLD",
          "qualifier": "authored-by"
        },
        {
          "objectId": "5fef66176a3010a0db94dcd4b14307ad75cf88e6",
          "qualifier": "sha"
        },
        {
          "objectId": "240",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDVmZWY2NjE3NmEzMDEwYTBkYjk0ZGNkNGIxNDMwN2FkNzVjZjg4ZTY"
    },
    {
      "type": "commit",
      "time": "2024-02-29T19:37:44Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "ChristianLD",
          "qualifier": "authored-by"
        },
        {
          "objectId": "a7e24218873210d0c51963e2af7eb8c7a9635752",
          "qualifier": "sha"
        },
        {
          "objectId": "240",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKGE3ZTI0MjE4ODczMjEwZDBjNTE5NjNlMmFmN2ViOGM3YTk2MzU3NTI"
    },
    {
      "type": "commit",
      "time": "2024-02-29T19:41:02Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "ChristianLD",
          "qualifier": "authored-by"
        },
        {
          "objectId": "a50fd09010ff032734ed60c9feefb9a5882b66cb",
          "qualifier": "sha"
        },
        {
          "objectId": "240",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKGE1MGZkMDkwMTBmZjAzMjczNGVkNjBjOWZlZWZiOWE1ODgyYjY2Y2I"
    },
    {
      "type": "commit",
      "time": "2024-02-29T19:43:00Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "ChristianLD",
          "qualifier": "authored-by"
        },
        {
          "objectId": "774eeec5416c4dbe2cef2eb34b4b07bb0ffcd220",
          "qualifier": "sha"
        },
        {
          "objectId": "240",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDc3NGVlZWM1NDE2YzRkYmUyY2VmMmViMzRiNGIwN2JiMGZmY2QyMjA"
    },
    {
      "type": "commit",
      "time": "2024-02-29T20:05:26Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "authored-by"
        },
        {
          "objectId": "7f79e15de1448bf2517da8fab583273a60bd3be6",
          "qualifier": "sha"
        },
        {
          "objectId": "240",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDdmNzllMTVkZTE0NDhiZjI1MTdkYThmYWI1ODMyNzNhNjBiZDNiZTY"
    },
    {
      "type": "commit",
      "time": "2024-02-29T20:24:34Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "authored-by"
        },
        {
          "objectId": "631db7a36b30e944497de0fdf5f52af11b63413b",
          "qualifier": "sha"
        },
        {
          "objectId": "240",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDYzMWRiN2EzNmIzMGU5NDQ0OTdkZTBmZGY1ZjUyYWYxMWI2MzQxM2I"
    },
    {
      "type": "commit",
      "time": "2024-02-29T20:24:55Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "authored-by"
        },
        {
          "objectId": "fabb5488b493ad4ac67dfb2c38f12cfc53750ab1",
          "qualifier": "sha"
        },
        {
          "objectId": "240",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKGZhYmI1NDg4YjQ5M2FkNGFjNjdkZmIyYzM4ZjEyY2ZjNTM3NTBhYjE"
    },
    {
      "type": "commit",
      "time": "2024-02-29T20:25:11Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "authored-by"
        },
        {
          "objectId": "9ac26772865f6733c8093a50122a6d4e03ee5ea8",
          "qualifier": "sha"
        },
        {
          "objectId": "240",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDlhYzI2NzcyODY1ZjY3MzNjODA5M2E1MDEyMmE2ZDRlMDNlZTVlYTg"
    },
    {
      "type": "commit",
      "time": "2024-02-29T20:25:36Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "authored-by"
        },
        {
          "objectId": "6275b97943da56fdbcbd4433998463ce0d5d6a9f",
          "qualifier": "sha"
        },
        {
          "objectId": "240",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDYyNzViOTc5NDNkYTU2ZmRiY2JkNDQzMzk5ODQ2M2NlMGQ1ZDZhOWY"
    },
    {
      "type": "commit",
      "time": "2024-02-29T20:25:57Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "authored-by"
        },
        {
          "objectId": "6c5fa1f7fea5c8a0d5df3281368749fec4bde45d",
          "qualifier": "sha"
        },
        {
          "objectId": "240",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDZjNWZhMWY3ZmVhNWM4YTBkNWRmMzI4MTM2ODc0OWZlYzRiZGU0NWQ"
    },
    {
      "type": "commit",
      "time": "2024-02-29T20:26:07Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "authored-by"
        },
        {
          "objectId": "47c90951038745a4ee1cf9e9aa551598d344c43e",
          "qualifier": "sha"
        },
        {
          "objectId": "240",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDQ3YzkwOTUxMDM4NzQ1YTRlZTFjZjllOWFhNTUxNTk4ZDM0NGM0M2U"
    },
    {
      "type": "commit",
      "time": "2024-02-29T20:26:17Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "authored-by"
        },
        {
          "objectId": "ad701813712c00a2583539d8f192c4aa7313b656",
          "qualifier": "sha"
        },
        {
          "objectId": "240",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKGFkNzAxODEzNzEyYzAwYTI1ODM1MzlkOGYxOTJjNGFhNzMxM2I2NTY"
    },
    {
      "type": "commit",
      "time": "2024-02-29T20:26:30Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "authored-by"
        },
        {
          "objectId": "9eeeca23cac0566a07b2e6ca445281ccda5f0832",
          "qualifier": "sha"
        },
        {
          "objectId": "240",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDllZWVjYTIzY2FjMDU2NmEwN2IyZTZjYTQ0NTI4MWNjZGE1ZjA4MzI"
    },
    {
      "type": "commit",
      "time": "2024-02-29T20:30:43Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "authored-by"
        },
        {
          "objectId": "fe2bb7924f2b001bd7919bf4949f13c50780b5fd",
          "qualifier": "sha"
        },
        {
          "objectId": "240",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKGZlMmJiNzkyNGYyYjAwMWJkNzkxOWJmNDk0OWYxM2M1MDc4MGI1ZmQ"
    },
    {
      "type": "commit",
      "time": "2024-02-29T20:31:04Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "authored-by"
        },
        {
          "objectId": "0afb3fa965c0e8d4cc76d6a04735fa9b43bf667f",
          "qualifier": "sha"
        },
        {
          "objectId": "240",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDBhZmIzZmE5NjVjMGU4ZDRjYzc2ZDZhMDQ3MzVmYTliNDNiZjY2N2Y"
    },
    {
      "type": "commit",
      "time": "2024-02-29T20:31:12Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "authored-by"
        },
        {
          "objectId": "45d6861b20dbef1fcd8ef4fe5b0d3c81cc2f5e8a",
          "qualifier": "sha"
        },
        {
          "objectId": "240",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDQ1ZDY4NjFiMjBkYmVmMWZjZDhlZjRmZTViMGQzYzgxY2MyZjVlOGE"
    },
    {
      "type": "commit",
      "time": "2024-02-29T20:31:19Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "authored-by"
        },
        {
          "objectId": "9569d2dc299264630a506b5a9024bd7c019866f4",
          "qualifier": "sha"
        },
        {
          "objectId": "240",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDk1NjlkMmRjMjk5MjY0NjMwYTUwNmI1YTkwMjRiZDdjMDE5ODY2ZjQ"
    },
    {
      "type": "commit",
      "time": "2024-02-29T20:33:09Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "authored-by"
        },
        {
          "objectId": "d71e528cd25a05d5385aa4d39128185299321e74",
          "qualifier": "sha"
        },
        {
          "objectId": "240",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKGQ3MWU1MjhjZDI1YTA1ZDUzODVhYTRkMzkxMjgxODUyOTkzMjFlNzQ"
    },
    {
      "type": "commit",
      "time": "2024-02-29T20:52:35Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "authored-by"
        },
        {
          "objectId": "44c69f1ee73d4bc10b778a13a1aedb39425cc9f3",
          "qualifier": "sha"
        },
        {
          "objectId": "240",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDQ0YzY5ZjFlZTczZDRiYzEwYjc3OGExM2ExYWVkYjM5NDI1Y2M5ZjM"
    },
    {
      "type": "commit",
      "time": "2024-02-29T21:01:37Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "nickTparedes",
          "qualifier": "authored-by"
        },
        {
          "objectId": "94b571b1d07b91fd68946b5743d5d503cbc58312",
          "qualifier": "sha"
        },
        {
          "objectId": "240",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDk0YjU3MWIxZDA3YjkxZmQ2ODk0NmI1NzQzZDVkNTAzY2JjNTgzMTI"
    },
    {
      "type": "commit",
      "time": "2024-02-29T21:02:05Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "nickTparedes",
          "qualifier": "authored-by"
        },
        {
          "objectId": "66f5e8eaaa25d812d2f3528003c425c861f609e5",
          "qualifier": "sha"
        },
        {
          "objectId": "240",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDY2ZjVlOGVhYWEyNWQ4MTJkMmYzNTI4MDAzYzQyNWM4NjFmNjA5ZTU"
    },
    {
      "type": "commit",
      "time": "2024-02-29T21:02:16Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "authored-by"
        },
        {
          "objectId": "004c88ba302cc13e1b67c19d793a5100660df1bb",
          "qualifier": "sha"
        },
        {
          "objectId": "240",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDAwNGM4OGJhMzAyY2MxM2UxYjY3YzE5ZDc5M2E1MTAwNjYwZGYxYmI"
    },
    {
      "type": "comment_pull_request",
      "time": "2024-03-01T04:50:32Z",
      "attributes": [
        {
          "name": "comment",
          "value": "What exactly are these changes?"
        }
      ],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "commented-by"
        },
        {
          "objectId": "240",
          "qualifier": "on"
        }
      ],
      "id": "IC_kwDODyNbyM51kgVS"
    },
    {
      "type": "close_pull_request",
      "time": "2024-03-01T07:15:06Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Katherine Ambrocio",
          "qualifier": "authored-by"
        },
        {
          "objectId": "240",
          "qualifier": "closed-on-pull_request"
        }
      ],
      "id": "CE_lADODyNbyM6A3j8hzwAAAALJzAX-"
    },
    {
      "type": "commit",
      "time": "2024-02-17T19:50:57Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "srbhr",
          "qualifier": "authored-by"
        },
        {
          "objectId": "bee706eba82fc5de19f2a0112f5db7e201202ec1",
          "qualifier": "sha"
        },
        {
          "objectId": "238",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKGJlZTcwNmViYTgyZmM1ZGUxOWYyYTAxMTJmNWRiN2UyMDEyMDJlYzE"
    },
    {
      "type": "merge_pull_request",
      "time": "2024-02-17T19:54:53Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "238",
          "qualifier": "merged-on-pull_request"
        }
      ],
      "id": "ME_lADODyNbyM5_lduZzwAAAALBjI8s"
    },
    {
      "type": "close_pull_request",
      "time": "2024-02-17T19:54:53Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "238",
          "qualifier": "closed-on-pull_request"
        }
      ],
      "id": "CE_lADODyNbyM5_lduZzwAAAALBjI8v"
    },
    {
      "type": "commit",
      "time": "2024-02-12T17:45:10Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "authored-by"
        },
        {
          "objectId": "861270fe9d126d8dfc1c3d38f0f54f68d8143003",
          "qualifier": "sha"
        },
        {
          "objectId": "237",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDg2MTI3MGZlOWQxMjZkOGRmYzFjM2QzOGYwZjU0ZjY4ZDgxNDMwMDM"
    },
    {
      "type": "add_label",
      "time": "2024-02-12T17:45:11Z",
      "attributes": [
        {
          "name": "label",
          "value": "dependencies"
        }
      ],
      "relationships": [
        {
          "objectId": "dependabot[bot]",
          "qualifier": "authored-by"
        },
        {
          "objectId": "237",
          "qualifier": "labeled-on-pull_request"
        }
      ],
      "id": "LE_lADODyNbyM5-_wLBzwAAAAK-A7EP"
    },
    {
      "type": "add_label",
      "time": "2024-02-12T17:45:11Z",
      "attributes": [
        {
          "name": "label",
          "value": "python"
        }
      ],
      "relationships": [
        {
          "objectId": "dependabot[bot]",
          "qualifier": "authored-by"
        },
        {
          "objectId": "237",
          "qualifier": "labeled-on-pull_request"
        }
      ],
      "id": "LE_lADODyNbyM5-_wLBzwAAAAK-A7ES"
    },
    {
      "type": "merge_pull_request",
      "time": "2024-02-16T04:59:40Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "237",
          "qualifier": "merged-on-pull_request"
        }
      ],
      "id": "ME_lADODyNbyM5-_wLBzwAAAALAyVNn"
    },
    {
      "type": "close_pull_request",
      "time": "2024-02-16T04:59:41Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "237",
          "qualifier": "closed-on-pull_request"
        }
      ],
      "id": "CE_lADODyNbyM5-_wLBzwAAAALAyVN7"
    },
    {
      "type": "add_label",
      "time": "2024-02-12T17:43:46Z",
      "attributes": [
        {
          "name": "label",
          "value": "dependencies"
        }
      ],
      "relationships": [
        {
          "objectId": "dependabot[bot]",
          "qualifier": "authored-by"
        },
        {
          "objectId": "236",
          "qualifier": "labeled-on-pull_request"
        }
      ],
      "id": "LE_lADODyNbyM5-_vjNzwAAAAK-A3tx"
    },
    {
      "type": "add_label",
      "time": "2024-02-12T17:43:46Z",
      "attributes": [
        {
          "name": "label",
          "value": "python"
        }
      ],
      "relationships": [
        {
          "objectId": "dependabot[bot]",
          "qualifier": "authored-by"
        },
        {
          "objectId": "236",
          "qualifier": "labeled-on-pull_request"
        }
      ],
      "id": "LE_lADODyNbyM5-_vjNzwAAAAK-A3t3"
    },
    {
      "type": "commit",
      "time": "2024-02-16T05:01:28Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "authored-by"
        },
        {
          "objectId": "8f73177340b422aa483f702a3a3ceb524892e05f",
          "qualifier": "sha"
        },
        {
          "objectId": "236",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDhmNzMxNzczNDBiNDIyYWE0ODNmNzAyYTNhM2NlYjUyNDg5MmUwNWY"
    },
    {
      "type": "merge_pull_request",
      "time": "2024-02-17T19:55:10Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "236",
          "qualifier": "merged-on-pull_request"
        }
      ],
      "id": "ME_lADODyNbyM5-_vjNzwAAAALBjJCH"
    },
    {
      "type": "close_pull_request",
      "time": "2024-02-17T19:55:10Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "236",
          "qualifier": "closed-on-pull_request"
        }
      ],
      "id": "CE_lADODyNbyM5-_vjNzwAAAALBjJCM"
    },
    {
      "type": "add_label",
      "time": "2024-02-05T17:10:40Z",
      "attributes": [
        {
          "name": "label",
          "value": "dependencies"
        }
      ],
      "relationships": [
        {
          "objectId": "dependabot[bot]",
          "qualifier": "authored-by"
        },
        {
          "objectId": "235",
          "qualifier": "labeled-on-pull_request"
        }
      ],
      "id": "LE_lADODyNbyM5-TihJzwAAAAK5z3wS"
    },
    {
      "type": "add_label",
      "time": "2024-02-05T17:10:40Z",
      "attributes": [
        {
          "name": "label",
          "value": "python"
        }
      ],
      "relationships": [
        {
          "objectId": "dependabot[bot]",
          "qualifier": "authored-by"
        },
        {
          "objectId": "235",
          "qualifier": "labeled-on-pull_request"
        }
      ],
      "id": "LE_lADODyNbyM5-TihJzwAAAAK5z3we"
    },
    {
      "type": "commit",
      "time": "2024-02-17T19:57:05Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "authored-by"
        },
        {
          "objectId": "f7894b207634827605205ccfaec06d6fc69cbf2b",
          "qualifier": "sha"
        },
        {
          "objectId": "235",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKGY3ODk0YjIwNzYzNDgyNzYwNTIwNWNjZmFlYzA2ZDZmYzY5Y2JmMmI"
    },
    {
      "type": "merge_pull_request",
      "time": "2024-03-01T04:51:10Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "235",
          "qualifier": "merged-on-pull_request"
        }
      ],
      "id": "ME_lADODyNbyM5-TihJzwAAAALJvT3z"
    },
    {
      "type": "close_pull_request",
      "time": "2024-03-01T04:51:10Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "235",
          "qualifier": "closed-on-pull_request"
        }
      ],
      "id": "CE_lADODyNbyM5-TihJzwAAAALJvT35"
    },
    {
      "type": "add_label",
      "time": "2024-02-05T17:10:20Z",
      "attributes": [
        {
          "name": "label",
          "value": "dependencies"
        }
      ],
      "relationships": [
        {
          "objectId": "dependabot[bot]",
          "qualifier": "authored-by"
        },
        {
          "objectId": "234",
          "qualifier": "labeled-on-pull_request"
        }
      ],
      "id": "LE_lADODyNbyM5-TiYSzwAAAAK5z2zn"
    },
    {
      "type": "add_label",
      "time": "2024-02-05T17:10:20Z",
      "attributes": [
        {
          "name": "label",
          "value": "python"
        }
      ],
      "relationships": [
        {
          "objectId": "dependabot[bot]",
          "qualifier": "authored-by"
        },
        {
          "objectId": "234",
          "qualifier": "labeled-on-pull_request"
        }
      ],
      "id": "LE_lADODyNbyM5-TiYSzwAAAAK5z2zw"
    },
    {
      "type": "commit",
      "time": "2024-03-01T04:52:09Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "authored-by"
        },
        {
          "objectId": "0f2ed22fc92382f7b152a06851bfbc2139a33190",
          "qualifier": "sha"
        },
        {
          "objectId": "234",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDBmMmVkMjJmYzkyMzgyZjdiMTUyYTA2ODUxYmZiYzIxMzlhMzMxOTA"
    },
    {
      "type": "merge_pull_request",
      "time": "2024-03-22T04:53:48Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "234",
          "qualifier": "merged-on-pull_request"
        }
      ],
      "id": "ME_lADODyNbyM5-TiYSzwAAAALX0rcg"
    },
    {
      "type": "close_pull_request",
      "time": "2024-03-22T04:53:48Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "234",
          "qualifier": "closed-on-pull_request"
        }
      ],
      "id": "CE_lADODyNbyM5-TiYSzwAAAALX0rcz"
    },
    {
      "type": "commit",
      "time": "2024-01-23T03:33:18Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "authored-by"
        },
        {
          "objectId": "3ce2989d0619c6092bf690e1236d9ab6bbe30845",
          "qualifier": "sha"
        },
        {
          "objectId": "233",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDNjZTI5ODlkMDYxOWM2MDkyYmY2OTBlMTIzNmQ5YWI2YmJlMzA4NDU"
    },
    {
      "type": "add_label",
      "time": "2024-01-23T03:33:20Z",
      "attributes": [
        {
          "name": "label",
          "value": "dependencies"
        }
      ],
      "relationships": [
        {
          "objectId": "dependabot[bot]",
          "qualifier": "authored-by"
        },
        {
          "objectId": "233",
          "qualifier": "labeled-on-pull_request"
        }
      ],
      "id": "LE_lADODyNbyM584c-4zwAAAAKxS9vJ"
    },
    {
      "type": "add_label",
      "time": "2024-01-23T03:33:20Z",
      "attributes": [
        {
          "name": "label",
          "value": "python"
        }
      ],
      "relationships": [
        {
          "objectId": "dependabot[bot]",
          "qualifier": "authored-by"
        },
        {
          "objectId": "233",
          "qualifier": "labeled-on-pull_request"
        }
      ],
      "id": "LE_lADODyNbyM584c-4zwAAAAKxS9vL"
    },
    {
      "type": "comment_pull_request",
      "time": "2024-02-17T19:57:36Z",
      "attributes": [
        {
          "name": "comment",
          "value": "Looks like pillow is up-to-date now, so this is no longer needed."
        }
      ],
      "relationships": [
        {
          "objectId": "dependabot[bot]",
          "qualifier": "commented-by"
        },
        {
          "objectId": "233",
          "qualifier": "on"
        }
      ],
      "id": "IC_kwDODyNbyM50PyT2"
    },
    {
      "type": "close_pull_request",
      "time": "2024-02-17T19:57:37Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "dependabot[bot]",
          "qualifier": "authored-by"
        },
        {
          "objectId": "233",
          "qualifier": "closed-on-pull_request"
        }
      ],
      "id": "CE_lADODyNbyM584c-4zwAAAALBjJzp"
    },
    {
      "type": "commit",
      "time": "2024-01-22T22:06:01Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "authored-by"
        },
        {
          "objectId": "1a5985108d82ff52916e23e8f593bab0f080be3f",
          "qualifier": "sha"
        },
        {
          "objectId": "232",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDFhNTk4NTEwOGQ4MmZmNTI5MTZlMjNlOGY1OTNiYWIwZjA4MGJlM2Y"
    },
    {
      "type": "add_label",
      "time": "2024-01-22T22:06:02Z",
      "attributes": [
        {
          "name": "label",
          "value": "dependencies"
        }
      ],
      "relationships": [
        {
          "objectId": "dependabot[bot]",
          "qualifier": "authored-by"
        },
        {
          "objectId": "232",
          "qualifier": "labeled-on-pull_request"
        }
      ],
      "id": "LE_lADODyNbyM583Mr6zwAAAAKxLlCN"
    },
    {
      "type": "add_label",
      "time": "2024-01-22T22:06:02Z",
      "attributes": [
        {
          "name": "label",
          "value": "python"
        }
      ],
      "relationships": [
        {
          "objectId": "dependabot[bot]",
          "qualifier": "authored-by"
        },
        {
          "objectId": "232",
          "qualifier": "labeled-on-pull_request"
        }
      ],
      "id": "LE_lADODyNbyM583Mr6zwAAAAKxLlCU"
    },
    {
      "type": "merge_pull_request",
      "time": "2024-02-17T19:56:50Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "232",
          "qualifier": "merged-on-pull_request"
        }
      ],
      "id": "ME_lADODyNbyM583Mr6zwAAAALBjJjq"
    },
    {
      "type": "close_pull_request",
      "time": "2024-02-17T19:56:51Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "232",
          "qualifier": "closed-on-pull_request"
        }
      ],
      "id": "CE_lADODyNbyM583Mr6zwAAAALBjJju"
    },
    {
      "type": "commit",
      "time": "2024-01-12T18:11:49Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "authored-by"
        },
        {
          "objectId": "ce8681edd00d54848c0707557d2e7bd70d7b1e29",
          "qualifier": "sha"
        },
        {
          "objectId": "231",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKGNlODY4MWVkZDAwZDU0ODQ4YzA3MDc1NTdkMmU3YmQ3MGQ3YjFlMjk"
    },
    {
      "type": "add_label",
      "time": "2024-01-12T18:11:51Z",
      "attributes": [
        {
          "name": "label",
          "value": "dependencies"
        }
      ],
      "relationships": [
        {
          "objectId": "dependabot[bot]",
          "qualifier": "authored-by"
        },
        {
          "objectId": "231",
          "qualifier": "labeled-on-pull_request"
        }
      ],
      "id": "LE_lADODyNbyM578XsSzwAAAAKrzjG8"
    },
    {
      "type": "add_label",
      "time": "2024-01-12T18:11:51Z",
      "attributes": [
        {
          "name": "label",
          "value": "python"
        }
      ],
      "relationships": [
        {
          "objectId": "dependabot[bot]",
          "qualifier": "authored-by"
        },
        {
          "objectId": "231",
          "qualifier": "labeled-on-pull_request"
        }
      ],
      "id": "LE_lADODyNbyM578XsSzwAAAAKrzjHH"
    },
    {
      "type": "merge_pull_request",
      "time": "2024-02-17T19:56:07Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "231",
          "qualifier": "merged-on-pull_request"
        }
      ],
      "id": "ME_lADODyNbyM578XsSzwAAAALBjJUq"
    },
    {
      "type": "close_pull_request",
      "time": "2024-02-17T19:56:07Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "231",
          "qualifier": "closed-on-pull_request"
        }
      ],
      "id": "CE_lADODyNbyM578XsSzwAAAALBjJUt"
    },
    {
      "type": "commit",
      "time": "2024-01-12T18:08:10Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "authored-by"
        },
        {
          "objectId": "b9fa266be4dda734533d22b6e05c40213160f611",
          "qualifier": "sha"
        },
        {
          "objectId": "230",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKGI5ZmEyNjZiZTRkZGE3MzQ1MzNkMjJiNmUwNWM0MDIxMzE2MGY2MTE"
    },
    {
      "type": "add_label",
      "time": "2024-01-12T18:08:12Z",
      "attributes": [
        {
          "name": "label",
          "value": "dependencies"
        }
      ],
      "relationships": [
        {
          "objectId": "dependabot[bot]",
          "qualifier": "authored-by"
        },
        {
          "objectId": "230",
          "qualifier": "labeled-on-pull_request"
        }
      ],
      "id": "LE_lADODyNbyM578WGTzwAAAAKrzbJc"
    },
    {
      "type": "add_label",
      "time": "2024-01-12T18:08:12Z",
      "attributes": [
        {
          "name": "label",
          "value": "python"
        }
      ],
      "relationships": [
        {
          "objectId": "dependabot[bot]",
          "qualifier": "authored-by"
        },
        {
          "objectId": "230",
          "qualifier": "labeled-on-pull_request"
        }
      ],
      "id": "LE_lADODyNbyM578WGTzwAAAAKrzbJk"
    },
    {
      "type": "merge_pull_request",
      "time": "2024-03-22T04:54:29Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "230",
          "qualifier": "merged-on-pull_request"
        }
      ],
      "id": "ME_lADODyNbyM578WGTzwAAAALX0sf-"
    },
    {
      "type": "close_pull_request",
      "time": "2024-03-22T04:54:29Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "230",
          "qualifier": "closed-on-pull_request"
        }
      ],
      "id": "CE_lADODyNbyM578WGTzwAAAALX0sgI"
    },
    {
      "type": "commit",
      "time": "2024-01-11T21:41:14Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "authored-by"
        },
        {
          "objectId": "7f483620347a98c1466b26e6c0b6c2d3d9769159",
          "qualifier": "sha"
        },
        {
          "objectId": "229",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDdmNDgzNjIwMzQ3YTk4YzE0NjZiMjZlNmMwYjZjMmQzZDk3NjkxNTk"
    },
    {
      "type": "add_label",
      "time": "2024-01-11T21:41:16Z",
      "attributes": [
        {
          "name": "label",
          "value": "dependencies"
        }
      ],
      "relationships": [
        {
          "objectId": "dependabot[bot]",
          "qualifier": "authored-by"
        },
        {
          "objectId": "229",
          "qualifier": "labeled-on-pull_request"
        }
      ],
      "id": "LE_lADODyNbyM571kbBzwAAAAKrLvbL"
    },
    {
      "type": "add_label",
      "time": "2024-01-11T21:41:16Z",
      "attributes": [
        {
          "name": "label",
          "value": "python"
        }
      ],
      "relationships": [
        {
          "objectId": "dependabot[bot]",
          "qualifier": "authored-by"
        },
        {
          "objectId": "229",
          "qualifier": "labeled-on-pull_request"
        }
      ],
      "id": "LE_lADODyNbyM571kbBzwAAAAKrLvbV"
    },
    {
      "type": "merge_pull_request",
      "time": "2024-03-23T14:11:43Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "229",
          "qualifier": "merged-on-pull_request"
        }
      ],
      "id": "ME_lADODyNbyM571kbBzwAAAALYow2O"
    },
    {
      "type": "close_pull_request",
      "time": "2024-03-23T14:11:43Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "229",
          "qualifier": "closed-on-pull_request"
        }
      ],
      "id": "CE_lADODyNbyM571kbBzwAAAALYow2V"
    },
    {
      "type": "commit",
      "time": "2024-01-11T21:09:08Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "authored-by"
        },
        {
          "objectId": "ddd0b20510cbe517ebbdf2cd0fc0c157c8e0208e",
          "qualifier": "sha"
        },
        {
          "objectId": "228",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKGRkZDBiMjA1MTBjYmU1MTdlYmJkZjJjZDBmYzBjMTU3YzhlMDIwOGU"
    },
    {
      "type": "add_label",
      "time": "2024-01-11T21:09:10Z",
      "attributes": [
        {
          "name": "label",
          "value": "dependencies"
        }
      ],
      "relationships": [
        {
          "objectId": "dependabot[bot]",
          "qualifier": "authored-by"
        },
        {
          "objectId": "228",
          "qualifier": "labeled-on-pull_request"
        }
      ],
      "id": "LE_lADODyNbyM571YJRzwAAAAKrKmg3"
    },
    {
      "type": "add_label",
      "time": "2024-01-11T21:09:10Z",
      "attributes": [
        {
          "name": "label",
          "value": "python"
        }
      ],
      "relationships": [
        {
          "objectId": "dependabot[bot]",
          "qualifier": "authored-by"
        },
        {
          "objectId": "228",
          "qualifier": "labeled-on-pull_request"
        }
      ],
      "id": "LE_lADODyNbyM571YJRzwAAAAKrKmhA"
    },
    {
      "type": "merge_pull_request",
      "time": "2024-03-01T04:51:21Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "228",
          "qualifier": "merged-on-pull_request"
        }
      ],
      "id": "ME_lADODyNbyM571YJRzwAAAALJvUHZ"
    },
    {
      "type": "close_pull_request",
      "time": "2024-03-01T04:51:21Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "228",
          "qualifier": "closed-on-pull_request"
        }
      ],
      "id": "CE_lADODyNbyM571YJRzwAAAALJvUHl"
    },
    {
      "type": "commit",
      "time": "2024-01-10T16:45:17Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "authored-by"
        },
        {
          "objectId": "ee182756bfb2cbaf6a2c003a9d24b6ddcd440e30",
          "qualifier": "sha"
        },
        {
          "objectId": "227",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKGVlMTgyNzU2YmZiMmNiYWY2YTJjMDAzYTlkMjRiNmRkY2Q0NDBlMzA"
    },
    {
      "type": "add_label",
      "time": "2024-01-10T16:45:18Z",
      "attributes": [
        {
          "name": "label",
          "value": "dependencies"
        }
      ],
      "relationships": [
        {
          "objectId": "dependabot[bot]",
          "qualifier": "authored-by"
        },
        {
          "objectId": "227",
          "qualifier": "labeled-on-pull_request"
        }
      ],
      "id": "LE_lADODyNbyM57qmdnzwAAAAKqN5ay"
    },
    {
      "type": "add_label",
      "time": "2024-01-10T16:45:18Z",
      "attributes": [
        {
          "name": "label",
          "value": "python"
        }
      ],
      "relationships": [
        {
          "objectId": "dependabot[bot]",
          "qualifier": "authored-by"
        },
        {
          "objectId": "227",
          "qualifier": "labeled-on-pull_request"
        }
      ],
      "id": "LE_lADODyNbyM57qmdnzwAAAAKqN5a4"
    },
    {
      "type": "merge_pull_request",
      "time": "2024-03-23T14:13:54Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "227",
          "qualifier": "merged-on-pull_request"
        }
      ],
      "id": "ME_lADODyNbyM57qmdnzwAAAALYoxyW"
    },
    {
      "type": "close_pull_request",
      "time": "2024-03-23T14:13:55Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "227",
          "qualifier": "closed-on-pull_request"
        }
      ],
      "id": "CE_lADODyNbyM57qmdnzwAAAALYoxyd"
    },
    {
      "type": "commit",
      "time": "2024-01-10T16:41:19Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "authored-by"
        },
        {
          "objectId": "bef9d9023cfc3fa2baa65e50e2a4239f36b5acfa",
          "qualifier": "sha"
        },
        {
          "objectId": "226",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKGJlZjlkOTAyM2NmYzNmYTJiYWE2NWU1MGUyYTQyMzlmMzZiNWFjZmE"
    },
    {
      "type": "add_label",
      "time": "2024-01-10T16:41:21Z",
      "attributes": [
        {
          "name": "label",
          "value": "dependencies"
        }
      ],
      "relationships": [
        {
          "objectId": "dependabot[bot]",
          "qualifier": "authored-by"
        },
        {
          "objectId": "226",
          "qualifier": "labeled-on-pull_request"
        }
      ],
      "id": "LE_lADODyNbyM57qkxbzwAAAAKqNuxQ"
    },
    {
      "type": "add_label",
      "time": "2024-01-10T16:41:21Z",
      "attributes": [
        {
          "name": "label",
          "value": "python"
        }
      ],
      "relationships": [
        {
          "objectId": "dependabot[bot]",
          "qualifier": "authored-by"
        },
        {
          "objectId": "226",
          "qualifier": "labeled-on-pull_request"
        }
      ],
      "id": "LE_lADODyNbyM57qkxbzwAAAAKqNuxb"
    },
    {
      "type": "merge_pull_request",
      "time": "2024-03-22T04:53:59Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "226",
          "qualifier": "merged-on-pull_request"
        }
      ],
      "id": "ME_lADODyNbyM57qkxbzwAAAALX0rxg"
    },
    {
      "type": "close_pull_request",
      "time": "2024-03-22T04:54:00Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "226",
          "qualifier": "closed-on-pull_request"
        }
      ],
      "id": "CE_lADODyNbyM57qkxbzwAAAALX0rxu"
    },
    {
      "type": "commit",
      "time": "2024-01-09T16:54:33Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "authored-by"
        },
        {
          "objectId": "b927bb3359bfcac9039823fca7ac6cb3d8c95938",
          "qualifier": "sha"
        },
        {
          "objectId": "225",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKGI5MjdiYjMzNTliZmNhYzkwMzk4MjNmY2E3YWM2Y2IzZDhjOTU5Mzg"
    },
    {
      "type": "add_label",
      "time": "2024-01-09T16:54:35Z",
      "attributes": [
        {
          "name": "label",
          "value": "dependencies"
        }
      ],
      "relationships": [
        {
          "objectId": "dependabot[bot]",
          "qualifier": "authored-by"
        },
        {
          "objectId": "225",
          "qualifier": "labeled-on-pull_request"
        }
      ],
      "id": "LE_lADODyNbyM57jAptzwAAAAKpd0CR"
    },
    {
      "type": "add_label",
      "time": "2024-01-09T16:54:35Z",
      "attributes": [
        {
          "name": "label",
          "value": "python"
        }
      ],
      "relationships": [
        {
          "objectId": "dependabot[bot]",
          "qualifier": "authored-by"
        },
        {
          "objectId": "225",
          "qualifier": "labeled-on-pull_request"
        }
      ],
      "id": "LE_lADODyNbyM57jAptzwAAAAKpd0Cb"
    },
    {
      "type": "merge_pull_request",
      "time": "2024-03-01T04:51:00Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "225",
          "qualifier": "merged-on-pull_request"
        }
      ],
      "id": "ME_lADODyNbyM57jAptzwAAAALJvTpz"
    },
    {
      "type": "close_pull_request",
      "time": "2024-03-01T04:51:00Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "225",
          "qualifier": "closed-on-pull_request"
        }
      ],
      "id": "CE_lADODyNbyM57jAptzwAAAALJvTp-"
    },
    {
      "type": "commit",
      "time": "2024-01-09T16:53:17Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "authored-by"
        },
        {
          "objectId": "608f62f60140b986236eae6a3085a1dfb5d47d98",
          "qualifier": "sha"
        },
        {
          "objectId": "224",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDYwOGY2MmY2MDE0MGI5ODYyMzZlYWU2YTMwODVhMWRmYjVkNDdkOTg"
    },
    {
      "type": "add_label",
      "time": "2024-01-09T16:53:19Z",
      "attributes": [
        {
          "name": "label",
          "value": "dependencies"
        }
      ],
      "relationships": [
        {
          "objectId": "dependabot[bot]",
          "qualifier": "authored-by"
        },
        {
          "objectId": "224",
          "qualifier": "labeled-on-pull_request"
        }
      ],
      "id": "LE_lADODyNbyM57jAEszwAAAAKpdwHk"
    },
    {
      "type": "add_label",
      "time": "2024-01-09T16:53:19Z",
      "attributes": [
        {
          "name": "label",
          "value": "python"
        }
      ],
      "relationships": [
        {
          "objectId": "dependabot[bot]",
          "qualifier": "authored-by"
        },
        {
          "objectId": "224",
          "qualifier": "labeled-on-pull_request"
        }
      ],
      "id": "LE_lADODyNbyM57jAEszwAAAAKpdwHz"
    },
    {
      "type": "merge_pull_request",
      "time": "2024-02-17T19:55:37Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "224",
          "qualifier": "merged-on-pull_request"
        }
      ],
      "id": "ME_lADODyNbyM57jAEszwAAAALBjJKz"
    },
    {
      "type": "close_pull_request",
      "time": "2024-02-17T19:55:37Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "224",
          "qualifier": "closed-on-pull_request"
        }
      ],
      "id": "CE_lADODyNbyM57jAEszwAAAALBjJK2"
    },
    {
      "type": "commit",
      "time": "2023-11-09T22:39:05Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "authored-by"
        },
        {
          "objectId": "377a02320e44485f372c223b617b037c4686adb6",
          "qualifier": "sha"
        },
        {
          "objectId": "220",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDM3N2EwMjMyMGU0NDQ4NWYzNzJjMjIzYjYxN2IwMzdjNDY4NmFkYjY"
    },
    {
      "type": "add_label",
      "time": "2023-11-09T22:39:06Z",
      "attributes": [
        {
          "name": "label",
          "value": "dependencies"
        }
      ],
      "relationships": [
        {
          "objectId": "dependabot[bot]",
          "qualifier": "authored-by"
        },
        {
          "objectId": "220",
          "qualifier": "labeled-on-pull_request"
        }
      ],
      "id": "LE_lADODyNbyM52Z-TQzwAAAAKKzoOF"
    },
    {
      "type": "add_label",
      "time": "2023-11-09T22:39:06Z",
      "attributes": [
        {
          "name": "label",
          "value": "python"
        }
      ],
      "relationships": [
        {
          "objectId": "dependabot[bot]",
          "qualifier": "authored-by"
        },
        {
          "objectId": "220",
          "qualifier": "labeled-on-pull_request"
        }
      ],
      "id": "LE_lADODyNbyM52Z-TQzwAAAAKKzoOI"
    },
    {
      "type": "merge_pull_request",
      "time": "2023-12-06T15:07:04Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "220",
          "qualifier": "merged-on-pull_request"
        }
      ],
      "id": "ME_lADODyNbyM52Z-TQzwAAAAKZw2hj"
    },
    {
      "type": "close_pull_request",
      "time": "2023-12-06T15:07:04Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "220",
          "qualifier": "closed-on-pull_request"
        }
      ],
      "id": "CE_lADODyNbyM52Z-TQzwAAAAKZw2iJ"
    },
    {
      "type": "commit",
      "time": "2023-11-06T13:37:37Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "sandipkarmokar",
          "qualifier": "authored-by"
        },
        {
          "objectId": "f75143052e29841f819060b178dbdf906fae6082",
          "qualifier": "sha"
        },
        {
          "objectId": "219",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKGY3NTE0MzA1MmUyOTg0MWY4MTkwNjBiMTc4ZGJkZjkwNmZhZTYwODI"
    },
    {
      "type": "approve_review",
      "time": "2023-11-06T13:41:05Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "approved-by"
        },
        {
          "objectId": "219",
          "qualifier": "for-pull-request"
        }
      ],
      "id": "1715200429"
    },
    {
      "type": "merge_pull_request",
      "time": "2023-11-06T13:41:14Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "219",
          "qualifier": "merged-on-pull_request"
        }
      ],
      "id": "ME_lADODyNbyM519_JLzwAAAAKIFq5d"
    },
    {
      "type": "close_pull_request",
      "time": "2023-11-06T13:41:14Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "219",
          "qualifier": "closed-on-pull_request"
        }
      ],
      "id": "CE_lADODyNbyM519_JLzwAAAAKIFq53"
    },
    {
      "type": "commit",
      "time": "2023-10-31T22:23:42Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "authored-by"
        },
        {
          "objectId": "661057b3b7535e6eae75ea83a0cd70204585d956",
          "qualifier": "sha"
        },
        {
          "objectId": "218",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDY2MTA1N2IzYjc1MzVlNmVhZTc1ZWE4M2EwY2Q3MDIwNDU4NWQ5NTY"
    },
    {
      "type": "add_label",
      "time": "2023-10-31T22:23:44Z",
      "attributes": [
        {
          "name": "label",
          "value": "dependencies"
        }
      ],
      "relationships": [
        {
          "objectId": "dependabot[bot]",
          "qualifier": "authored-by"
        },
        {
          "objectId": "218",
          "qualifier": "labeled-on-pull_request"
        }
      ],
      "id": "LE_lADODyNbyM51gOdPzwAAAAKFTz6j"
    },
    {
      "type": "add_label",
      "time": "2023-10-31T22:23:44Z",
      "attributes": [
        {
          "name": "label",
          "value": "python"
        }
      ],
      "relationships": [
        {
          "objectId": "dependabot[bot]",
          "qualifier": "authored-by"
        },
        {
          "objectId": "218",
          "qualifier": "labeled-on-pull_request"
        }
      ],
      "id": "LE_lADODyNbyM51gOdPzwAAAAKFTz6m"
    },
    {
      "type": "merge_pull_request",
      "time": "2024-02-17T19:55:53Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "218",
          "qualifier": "merged-on-pull_request"
        }
      ],
      "id": "ME_lADODyNbyM51gOdPzwAAAALBjJQS"
    },
    {
      "type": "close_pull_request",
      "time": "2024-02-17T19:55:53Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "218",
          "qualifier": "closed-on-pull_request"
        }
      ],
      "id": "CE_lADODyNbyM51gOdPzwAAAALBjJQf"
    },
    {
      "type": "commit",
      "time": "2023-10-31T22:23:37Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "authored-by"
        },
        {
          "objectId": "1fa5592604f95787408b02b74cd1b26030bd2f03",
          "qualifier": "sha"
        },
        {
          "objectId": "217",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDFmYTU1OTI2MDRmOTU3ODc0MDhiMDJiNzRjZDFiMjYwMzBiZDJmMDM"
    },
    {
      "type": "add_label",
      "time": "2023-10-31T22:23:38Z",
      "attributes": [
        {
          "name": "label",
          "value": "dependencies"
        }
      ],
      "relationships": [
        {
          "objectId": "dependabot[bot]",
          "qualifier": "authored-by"
        },
        {
          "objectId": "217",
          "qualifier": "labeled-on-pull_request"
        }
      ],
      "id": "LE_lADODyNbyM51gObnzwAAAAKFTzw_"
    },
    {
      "type": "add_label",
      "time": "2023-10-31T22:23:38Z",
      "attributes": [
        {
          "name": "label",
          "value": "python"
        }
      ],
      "relationships": [
        {
          "objectId": "dependabot[bot]",
          "qualifier": "authored-by"
        },
        {
          "objectId": "217",
          "qualifier": "labeled-on-pull_request"
        }
      ],
      "id": "LE_lADODyNbyM51gObnzwAAAAKFTzxH"
    },
    {
      "type": "merge_pull_request",
      "time": "2024-03-22T04:54:11Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "217",
          "qualifier": "merged-on-pull_request"
        }
      ],
      "id": "ME_lADODyNbyM51gObnzwAAAALX0sEY"
    },
    {
      "type": "close_pull_request",
      "time": "2024-03-22T04:54:11Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "217",
          "qualifier": "closed-on-pull_request"
        }
      ],
      "id": "CE_lADODyNbyM51gObnzwAAAALX0sEg"
    },
    {
      "type": "commit",
      "time": "2023-10-31T18:12:11Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "authored-by"
        },
        {
          "objectId": "56b5e57150c0523f1f62d716508277c85e7c2214",
          "qualifier": "sha"
        },
        {
          "objectId": "216",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDU2YjVlNTcxNTBjMDUyM2YxZjYyZDcxNjUwODI3N2M4NWU3YzIyMTQ"
    },
    {
      "type": "close_pull_request",
      "time": "2024-03-23T14:22:01Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "216",
          "qualifier": "closed-on-pull_request"
        }
      ],
      "id": "CE_lADODyNbyM51e-ddzwAAAALYo1ff"
    },
    {
      "type": "commit",
      "time": "2023-10-31T13:27:07Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "sandipkarmokar",
          "qualifier": "authored-by"
        },
        {
          "objectId": "d367b33a5bd62b51dbb1a414c61692fc07695194",
          "qualifier": "sha"
        },
        {
          "objectId": "215",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKGQzNjdiMzNhNWJkNjJiNTFkYmIxYTQxNGM2MTY5MmZjMDc2OTUxOTQ"
    },
    {
      "type": "comment_pull_request",
      "time": "2023-10-31T13:28:19Z",
      "attributes": [
        {
          "name": "comment",
          "value": "@srbhr please review it"
        }
      ],
      "relationships": [
        {
          "objectId": "Sandip Karmokar",
          "qualifier": "commented-by"
        },
        {
          "objectId": "215",
          "qualifier": "on"
        }
      ],
      "id": "IC_kwDODyNbyM5qhtAm"
    },
    {
      "type": "merge_pull_request",
      "time": "2023-10-31T17:52:41Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "215",
          "qualifier": "merged-on-pull_request"
        }
      ],
      "id": "ME_lADODyNbyM51cxD3zwAAAAKFLbn0"
    },
    {
      "type": "close_pull_request",
      "time": "2023-10-31T17:52:42Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "215",
          "qualifier": "closed-on-pull_request"
        }
      ],
      "id": "CE_lADODyNbyM51cxD3zwAAAAKFLboV"
    },
    {
      "type": "commit",
      "time": "2023-10-31T04:47:20Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "authored-by"
        },
        {
          "objectId": "43ec992c92fcab19607e64894fd17b8867858b37",
          "qualifier": "sha"
        },
        {
          "objectId": "214",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDQzZWM5OTJjOTJmY2FiMTk2MDdlNjQ4OTRmZDE3Yjg4Njc4NThiMzc"
    },
    {
      "type": "add_label",
      "time": "2023-10-31T04:47:21Z",
      "attributes": [
        {
          "name": "label",
          "value": "dependencies"
        }
      ],
      "relationships": [
        {
          "objectId": "dependabot[bot]",
          "qualifier": "authored-by"
        },
        {
          "objectId": "214",
          "qualifier": "labeled-on-pull_request"
        }
      ],
      "id": "LE_lADODyNbyM51Zj-zzwAAAAKEqTUv"
    },
    {
      "type": "add_label",
      "time": "2023-10-31T04:47:21Z",
      "attributes": [
        {
          "name": "label",
          "value": "python"
        }
      ],
      "relationships": [
        {
          "objectId": "dependabot[bot]",
          "qualifier": "authored-by"
        },
        {
          "objectId": "214",
          "qualifier": "labeled-on-pull_request"
        }
      ],
      "id": "LE_lADODyNbyM51Zj-zzwAAAAKEqTU4"
    },
    {
      "type": "comment_pull_request",
      "time": "2024-01-23T03:33:22Z",
      "attributes": [
        {
          "name": "comment",
          "value": "Superseded by #233."
        }
      ],
      "relationships": [
        {
          "objectId": "dependabot[bot]",
          "qualifier": "commented-by"
        },
        {
          "objectId": "214",
          "qualifier": "on"
        }
      ],
      "id": "IC_kwDODyNbyM5xj5DE"
    },
    {
      "type": "close_pull_request",
      "time": "2024-01-23T03:33:23Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "dependabot[bot]",
          "qualifier": "authored-by"
        },
        {
          "objectId": "214",
          "qualifier": "closed-on-pull_request"
        }
      ],
      "id": "CE_lADODyNbyM51Zj-zzwAAAAKxS9yH"
    },
    {
      "type": "commit",
      "time": "2023-10-31T04:37:30Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "authored-by"
        },
        {
          "objectId": "8da460e4ad9345f118d5957adb529f7bd223d76f",
          "qualifier": "sha"
        },
        {
          "objectId": "213",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDhkYTQ2MGU0YWQ5MzQ1ZjExOGQ1OTU3YWRiNTI5ZjdiZDIyM2Q3NmY"
    },
    {
      "type": "add_label",
      "time": "2023-10-31T04:37:32Z",
      "attributes": [
        {
          "name": "label",
          "value": "dependencies"
        }
      ],
      "relationships": [
        {
          "objectId": "dependabot[bot]",
          "qualifier": "authored-by"
        },
        {
          "objectId": "213",
          "qualifier": "labeled-on-pull_request"
        }
      ],
      "id": "LE_lADODyNbyM51ZiI4zwAAAAKEqIYu"
    },
    {
      "type": "add_label",
      "time": "2023-10-31T04:37:32Z",
      "attributes": [
        {
          "name": "label",
          "value": "python"
        }
      ],
      "relationships": [
        {
          "objectId": "dependabot[bot]",
          "qualifier": "authored-by"
        },
        {
          "objectId": "213",
          "qualifier": "labeled-on-pull_request"
        }
      ],
      "id": "LE_lADODyNbyM51ZiI4zwAAAAKEqIY4"
    },
    {
      "type": "comment_pull_request",
      "time": "2024-01-10T16:45:20Z",
      "attributes": [
        {
          "name": "comment",
          "value": "Superseded by #227."
        }
      ],
      "relationships": [
        {
          "objectId": "dependabot[bot]",
          "qualifier": "commented-by"
        },
        {
          "objectId": "213",
          "qualifier": "on"
        }
      ],
      "id": "IC_kwDODyNbyM5wXh_C"
    },
    {
      "type": "close_pull_request",
      "time": "2024-01-10T16:45:21Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "dependabot[bot]",
          "qualifier": "authored-by"
        },
        {
          "objectId": "213",
          "qualifier": "closed-on-pull_request"
        }
      ],
      "id": "CE_lADODyNbyM51ZiI4zwAAAAKqN5jj"
    },
    {
      "type": "commit",
      "time": "2023-10-28T05:54:24Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "sandipkarmokar",
          "qualifier": "authored-by"
        },
        {
          "objectId": "315367ae2bb0261eef18e98f348a9adc06846eaa",
          "qualifier": "sha"
        },
        {
          "objectId": "211",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDMxNTM2N2FlMmJiMDI2MWVlZjE4ZTk4ZjM0OGE5YWRjMDY4NDZlYWE"
    },
    {
      "type": "commit",
      "time": "2023-10-28T06:06:10Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "sandipkarmokar",
          "qualifier": "authored-by"
        },
        {
          "objectId": "224bb7c2a481eb0b4b99484be3da4908c0b1a288",
          "qualifier": "sha"
        },
        {
          "objectId": "212",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDIyNGJiN2MyYTQ4MWViMGI0Yjk5NDg0YmUzZGE0OTA4YzBiMWEyODg"
    },
    {
      "type": "comment_pull_request",
      "time": "2023-10-28T11:41:37Z",
      "attributes": [
        {
          "name": "comment",
          "value": "@Sayvai @srbhr please review it, thanks @Sayvai for guiding me\ud83d\ude4f"
        }
      ],
      "relationships": [
        {
          "objectId": "Sandip Karmokar",
          "qualifier": "commented-by"
        },
        {
          "objectId": "212",
          "qualifier": "on"
        }
      ],
      "id": "IC_kwDODyNbyM5qUmzu"
    },
    {
      "type": "comment_review",
      "time": "2023-10-28T16:21:03Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Sayvai",
          "qualifier": "commented-by"
        },
        {
          "objectId": "212",
          "qualifier": "for-pull-request"
        }
      ],
      "id": "1702811602"
    },
    {
      "type": "commit",
      "time": "2023-10-28T18:25:43Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "sandipkarmokar",
          "qualifier": "authored-by"
        },
        {
          "objectId": "7c563af9a1bf6ade1435ee5203137136a29cbcbe",
          "qualifier": "sha"
        },
        {
          "objectId": "212",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDdjNTYzYWY5YTFiZjZhZGUxNDM1ZWU1MjAzMTM3MTM2YTI5Y2JjYmU"
    },
    {
      "type": "comment_review",
      "time": "2023-10-28T19:27:28Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Sayvai",
          "qualifier": "commented-by"
        },
        {
          "objectId": "212",
          "qualifier": "for-pull-request"
        }
      ],
      "id": "1702841201"
    },
    {
      "type": "suggest_changes_as_review",
      "time": "2023-10-28T19:28:51Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Sayvai",
          "qualifier": "requested-by"
        },
        {
          "objectId": "212",
          "qualifier": "for-pull-request"
        }
      ],
      "id": "1702843517"
    },
    {
      "type": "commit",
      "time": "2023-10-29T17:56:19Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "sandipkarmokar",
          "qualifier": "authored-by"
        },
        {
          "objectId": "5c6d4783195b0b0735fee7dfd495e6652f7408f4",
          "qualifier": "sha"
        },
        {
          "objectId": "212",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDVjNmQ0NzgzMTk1YjBiMDczNWZlZTdkZmQ0OTVlNjY1MmY3NDA4ZjQ"
    },
    {
      "type": "comment_pull_request",
      "time": "2023-10-29T18:15:17Z",
      "attributes": [
        {
          "name": "comment",
          "value": "@Sayvai fixed changes as suggested by you and moved the social media icons to the right."
        }
      ],
      "relationships": [
        {
          "objectId": "Sandip Karmokar",
          "qualifier": "commented-by"
        },
        {
          "objectId": "212",
          "qualifier": "on"
        }
      ],
      "id": "IC_kwDODyNbyM5qWIq1"
    },
    {
      "type": "comment_review",
      "time": "2023-10-29T19:05:04Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Sayvai",
          "qualifier": "commented-by"
        },
        {
          "objectId": "212",
          "qualifier": "for-pull-request"
        }
      ],
      "id": "1703020747"
    },
    {
      "type": "commit",
      "time": "2023-10-30T08:11:36Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "sandipkarmokar",
          "qualifier": "authored-by"
        },
        {
          "objectId": "144b58600c3626b375dcdbe40a78001bcddf67bf",
          "qualifier": "sha"
        },
        {
          "objectId": "212",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDE0NGI1ODYwMGMzNjI2YjM3NWRjZGJlNDBhNzgwMDFiY2RkZjY3YmY"
    },
    {
      "type": "comment_pull_request",
      "time": "2023-10-30T08:12:34Z",
      "attributes": [
        {
          "name": "comment",
          "value": "@Sayvai fixed changes, also removed a redundant div which was part of the footer, since there is only one div with icons now. Directly added the styles to it"
        }
      ],
      "relationships": [
        {
          "objectId": "Sandip Karmokar",
          "qualifier": "commented-by"
        },
        {
          "objectId": "212",
          "qualifier": "on"
        }
      ],
      "id": "IC_kwDODyNbyM5qYA0R"
    },
    {
      "type": "suggest_changes_as_review",
      "time": "2023-10-30T09:23:36Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Sayvai",
          "qualifier": "requested-by"
        },
        {
          "objectId": "212",
          "qualifier": "for-pull-request"
        }
      ],
      "id": "1703623015"
    },
    {
      "type": "commit",
      "time": "2023-10-30T12:18:32Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "sandipkarmokar",
          "qualifier": "authored-by"
        },
        {
          "objectId": "0f1442aa4689edb64d6a93deea4d82370ac91efe",
          "qualifier": "sha"
        },
        {
          "objectId": "212",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDBmMTQ0MmFhNDY4OWVkYjY0ZDZhOTNkZWVhNGQ4MjM3MGFjOTFlZmU"
    },
    {
      "type": "commit",
      "time": "2023-10-30T12:32:20Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "sandipkarmokar",
          "qualifier": "authored-by"
        },
        {
          "objectId": "f894d4117d796e0bb1da997f983b902aa71b5312",
          "qualifier": "sha"
        },
        {
          "objectId": "212",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKGY4OTRkNDExN2Q3OTZlMGJiMWRhOTk3Zjk4M2I5MDJhYTcxYjUzMTI"
    },
    {
      "type": "commit",
      "time": "2023-10-30T12:34:09Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "authored-by"
        },
        {
          "objectId": "c71e6808b52db01d70eb529803dbd6d3a352ad25",
          "qualifier": "sha"
        },
        {
          "objectId": "212",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKGM3MWU2ODA4YjUyZGIwMWQ3MGViNTI5ODAzZGJkNmQzYTM1MmFkMjU"
    },
    {
      "type": "commit",
      "time": "2023-10-30T12:35:56Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "sandipkarmokar",
          "qualifier": "authored-by"
        },
        {
          "objectId": "d0de46f702bf5c0bfef63c8d89ceeb9fac5adc77",
          "qualifier": "sha"
        },
        {
          "objectId": "212",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKGQwZGU0NmY3MDJiZjVjMGJmZWY2M2M4ZDg5Y2VlYjlmYWM1YWRjNzc"
    },
    {
      "type": "approve_review",
      "time": "2023-10-30T12:38:13Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Sayvai",
          "qualifier": "approved-by"
        },
        {
          "objectId": "212",
          "qualifier": "for-pull-request"
        }
      ],
      "id": "1704017365"
    },
    {
      "type": "comment_pull_request",
      "time": "2023-10-30T12:56:58Z",
      "attributes": [
        {
          "name": "comment",
          "value": "@Sayvai thanks for the review\ud83d\ude4f"
        }
      ],
      "relationships": [
        {
          "objectId": "Sandip Karmokar",
          "qualifier": "commented-by"
        },
        {
          "objectId": "212",
          "qualifier": "on"
        }
      ],
      "id": "IC_kwDODyNbyM5qZw7V"
    },
    {
      "type": "approve_review",
      "time": "2023-10-31T04:31:43Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "approved-by"
        },
        {
          "objectId": "212",
          "qualifier": "for-pull-request"
        }
      ],
      "id": "1705428920"
    },
    {
      "type": "close_pull_request",
      "time": "2023-10-28T11:32:54Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Sandip Karmokar",
          "qualifier": "authored-by"
        },
        {
          "objectId": "211",
          "qualifier": "closed-on-pull_request"
        }
      ],
      "id": "CE_lADODyNbyM51N0ubzwAAAAKDl4PA"
    },
    {
      "type": "commit",
      "time": "2023-10-25T14:31:13Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "authored-by"
        },
        {
          "objectId": "80e9105ebdbe16be2c4e133caf5373dbbc2f7fac",
          "qualifier": "sha"
        },
        {
          "objectId": "210",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDgwZTkxMDVlYmRiZTE2YmUyYzRlMTMzY2FmNTM3M2RiYmMyZjdmYWM"
    },
    {
      "type": "close_pull_request",
      "time": "2023-10-31T04:58:36Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Vivek Kumar",
          "qualifier": "authored-by"
        },
        {
          "objectId": "210",
          "qualifier": "closed-on-pull_request"
        }
      ],
      "id": "CE_lADODyNbyM506zmtzwAAAAKEqg-M"
    },
    {
      "type": "commit",
      "time": "2023-10-25T03:46:00Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Devasy Patel",
          "qualifier": "authored-by"
        },
        {
          "objectId": "e1775ce5c875d56b93b1d3d13842cd72a2c333bf",
          "qualifier": "sha"
        },
        {
          "objectId": "209",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKGUxNzc1Y2U1Yzg3NWQ1NmI5M2IxZDNkMTM4NDJjZDcyYTJjMzMzYmY"
    },
    {
      "type": "commit",
      "time": "2023-10-25T04:54:51Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Devasy Patel",
          "qualifier": "authored-by"
        },
        {
          "objectId": "ca1c9b00b76ce594768fb4240d16659e5e5a4d88",
          "qualifier": "sha"
        },
        {
          "objectId": "209",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKGNhMWM5YjAwYjc2Y2U1OTQ3NjhmYjQyNDBkMTY2NTllNWU1YTRkODg"
    },
    {
      "type": "commit",
      "time": "2023-10-25T14:04:15Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Devasy Patel",
          "qualifier": "authored-by"
        },
        {
          "objectId": "ebd8d2e6f0e5f7df874400514f637e6d91a6304d",
          "qualifier": "sha"
        },
        {
          "objectId": "209",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKGViZDhkMmU2ZjBlNWY3ZGY4NzQ0MDA1MTRmNjM3ZTZkOTFhNjMwNGQ"
    },
    {
      "type": "comment_pull_request",
      "time": "2023-10-25T14:13:12Z",
      "attributes": [
        {
          "name": "comment",
          "value": "@srbhr Now the star-graph is also working....\r\n![image](https://github.com/srbhr/Resume-Matcher/assets/110348311/40398941-90af-43ba-b722-bf371dca9fed)\r\n\r\nhttps://github.com/srbhr/Resume-Matcher/assets/110348311/e8ef847e-240e-4f85-8440-5b07cb5b9e84\r\n\r\n"
        }
      ],
      "relationships": [
        {
          "objectId": "Devasy Patel",
          "qualifier": "commented-by"
        },
        {
          "objectId": "209",
          "qualifier": "on"
        }
      ],
      "id": "IC_kwDODyNbyM5qDyLv"
    },
    {
      "type": "comment_pull_request",
      "time": "2023-10-25T14:22:18Z",
      "attributes": [
        {
          "name": "comment",
          "value": "Really awesome work @Devasy23 "
        }
      ],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "commented-by"
        },
        {
          "objectId": "209",
          "qualifier": "on"
        }
      ],
      "id": "IC_kwDODyNbyM5qD2wd"
    },
    {
      "type": "approve_review",
      "time": "2023-10-25T14:22:25Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "approved-by"
        },
        {
          "objectId": "209",
          "qualifier": "for-pull-request"
        }
      ],
      "id": "1697510160"
    },
    {
      "type": "merge_pull_request",
      "time": "2023-10-25T14:22:31Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "209",
          "qualifier": "merged-on-pull_request"
        }
      ],
      "id": "ME_lADODyNbyM5026D6zwAAAAKB11kU"
    },
    {
      "type": "close_pull_request",
      "time": "2023-10-25T14:22:31Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "209",
          "qualifier": "closed-on-pull_request"
        }
      ],
      "id": "CE_lADODyNbyM5026D6zwAAAAKB11kv"
    },
    {
      "type": "commit",
      "time": "2023-10-24T14:50:42Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Sayvai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "b283d9ccb5d1e532eddb183f6b17b90071193f96",
          "qualifier": "sha"
        },
        {
          "objectId": "208",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKGIyODNkOWNjYjVkMWU1MzJlZGRiMTgzZjZiMTdiOTAwNzExOTNmOTY"
    },
    {
      "type": "comment_review",
      "time": "2023-10-24T15:09:18Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Sayvai",
          "qualifier": "commented-by"
        },
        {
          "objectId": "208",
          "qualifier": "for-pull-request"
        }
      ],
      "id": "1695175321"
    },
    {
      "type": "approve_review",
      "time": "2023-10-25T14:23:33Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "approved-by"
        },
        {
          "objectId": "208",
          "qualifier": "for-pull-request"
        }
      ],
      "id": "1697513421"
    },
    {
      "type": "merge_pull_request",
      "time": "2023-10-25T14:23:43Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "208",
          "qualifier": "merged-on-pull_request"
        }
      ],
      "id": "ME_lADODyNbyM50yzm3zwAAAAKB15ef"
    },
    {
      "type": "close_pull_request",
      "time": "2023-10-25T14:23:43Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "208",
          "qualifier": "closed-on-pull_request"
        }
      ],
      "id": "CE_lADODyNbyM50yzm3zwAAAAKB15fG"
    },
    {
      "type": "commit",
      "time": "2023-10-20T05:00:40Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "sandip",
          "qualifier": "authored-by"
        },
        {
          "objectId": "0eea84825d4912f0f45351129e27e50b5698619e",
          "qualifier": "sha"
        },
        {
          "objectId": "206",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDBlZWE4NDgyNWQ0OTEyZjBmNDUzNTExMjllMjdlNTBiNTY5ODYxOWU"
    },
    {
      "type": "commit",
      "time": "2023-10-21T08:41:17Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "sandip",
          "qualifier": "authored-by"
        },
        {
          "objectId": "ce3d38ecab079f963b5229565626a2a2f71c0857",
          "qualifier": "sha"
        },
        {
          "objectId": "206",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKGNlM2QzOGVjYWIwNzlmOTYzYjUyMjk1NjU2MjZhMmEyZjcxYzA4NTc"
    },
    {
      "type": "commit",
      "time": "2023-10-21T08:55:31Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "sandip",
          "qualifier": "authored-by"
        },
        {
          "objectId": "45d6f78d9256332862316e35b340623f9c73014d",
          "qualifier": "sha"
        },
        {
          "objectId": "206",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDQ1ZDZmNzhkOTI1NjMzMjg2MjMxNmUzNWIzNDA2MjNmOWM3MzAxNGQ"
    },
    {
      "type": "commit",
      "time": "2023-10-21T09:17:03Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "sandip",
          "qualifier": "authored-by"
        },
        {
          "objectId": "17eb5661c7338e62ba2a42437ac028c1a72a301b",
          "qualifier": "sha"
        },
        {
          "objectId": "206",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDE3ZWI1NjYxYzczMzhlNjJiYTJhNDI0MzdhYzAyOGMxYTcyYTMwMWI"
    },
    {
      "type": "commit",
      "time": "2023-10-24T06:12:09Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "sandip",
          "qualifier": "authored-by"
        },
        {
          "objectId": "51da4af8503ad9d75fea731adb90881a9f9885d0",
          "qualifier": "sha"
        },
        {
          "objectId": "206",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDUxZGE0YWY4NTAzYWQ5ZDc1ZmVhNzMxYWRiOTA4ODFhOWY5ODg1ZDA"
    },
    {
      "type": "comment_pull_request",
      "time": "2023-10-24T06:15:46Z",
      "attributes": [
        {
          "name": "comment",
          "value": "@srbhr @Sayvai please review the PR.\r\n"
        }
      ],
      "relationships": [
        {
          "objectId": "Sandip Karmokar",
          "qualifier": "commented-by"
        },
        {
          "objectId": "206",
          "qualifier": "on"
        }
      ],
      "id": "IC_kwDODyNbyM5p5K75"
    },
    {
      "type": "comment_pull_request",
      "time": "2023-10-24T06:17:05Z",
      "attributes": [
        {
          "name": "comment",
          "value": "Okay I'll take a look @sandipkarmokar "
        }
      ],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "commented-by"
        },
        {
          "objectId": "206",
          "qualifier": "on"
        }
      ],
      "id": "IC_kwDODyNbyM5p5LNd"
    },
    {
      "type": "approve_review",
      "time": "2023-10-24T10:52:12Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Sayvai",
          "qualifier": "approved-by"
        },
        {
          "objectId": "206",
          "qualifier": "for-pull-request"
        }
      ],
      "id": "1694549253"
    },
    {
      "type": "comment_pull_request",
      "time": "2023-10-24T11:29:26Z",
      "attributes": [
        {
          "name": "comment",
          "value": "@srbhr Please remember to `Squash and Merge` this PR to keep the changes to one commit on the upstream `main` branch \ud83e\udd13 "
        }
      ],
      "relationships": [
        {
          "objectId": "Sayvai",
          "qualifier": "commented-by"
        },
        {
          "objectId": "206",
          "qualifier": "on"
        }
      ],
      "id": "IC_kwDODyNbyM5p60PB"
    },
    {
      "type": "approve_review",
      "time": "2023-10-25T14:22:57Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "approved-by"
        },
        {
          "objectId": "206",
          "qualifier": "for-pull-request"
        }
      ],
      "id": "1697511453"
    },
    {
      "type": "merge_pull_request",
      "time": "2023-10-25T14:23:10Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "206",
          "qualifier": "merged-on-pull_request"
        }
      ],
      "id": "ME_lADODyNbyM50vapFzwAAAAKB13q0"
    },
    {
      "type": "close_pull_request",
      "time": "2023-10-25T14:23:10Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "206",
          "qualifier": "closed-on-pull_request"
        }
      ],
      "id": "CE_lADODyNbyM50vapFzwAAAAKB13rh"
    },
    {
      "type": "commit",
      "time": "2023-10-14T06:25:53Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Devasy Patel",
          "qualifier": "authored-by"
        },
        {
          "objectId": "df25508ab78a8c52e237006389aa24be46fa48c2",
          "qualifier": "sha"
        },
        {
          "objectId": "198",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKGRmMjU1MDhhYjc4YThjNTJlMjM3MDA2Mzg5YWEyNGJlNDZmYTQ4YzI"
    },
    {
      "type": "commit",
      "time": "2023-10-14T06:32:39Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Devasy Patel",
          "qualifier": "authored-by"
        },
        {
          "objectId": "8d863fcfc82c1929ce569b42deb95d4f47f886b9",
          "qualifier": "sha"
        },
        {
          "objectId": "198",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDhkODYzZmNmYzgyYzE5MjljZTU2OWI0MmRlYjk1ZDRmNDdmODg2Yjk"
    },
    {
      "type": "commit",
      "time": "2023-10-14T14:42:43Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Devasy Patel",
          "qualifier": "authored-by"
        },
        {
          "objectId": "fe67a33de33c1346788060cf3089b4d17f543dea",
          "qualifier": "sha"
        },
        {
          "objectId": "205",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKGZlNjdhMzNkZTMzYzEzNDY3ODgwNjBjZjMwODliNGQxN2Y1NDNkZWE"
    },
    {
      "type": "commit",
      "time": "2023-10-19T04:57:39Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Devasy Patel",
          "qualifier": "authored-by"
        },
        {
          "objectId": "1fec89ce56b114adf65914369bbb6ebaf076bc81",
          "qualifier": "sha"
        },
        {
          "objectId": "205",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDFmZWM4OWNlNTZiMTE0YWRmNjU5MTQzNjliYmI2ZWJhZjA3NmJjODE"
    },
    {
      "type": "commit",
      "time": "2023-10-23T12:01:42Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Devasy Patel",
          "qualifier": "authored-by"
        },
        {
          "objectId": "330fd603b378f081e41e654e31a6b68aabb432d3",
          "qualifier": "sha"
        },
        {
          "objectId": "205",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDMzMGZkNjAzYjM3OGYwODFlNDFlNjU0ZTMxYTZiNjhhYWJiNDMyZDM"
    },
    {
      "type": "approve_review",
      "time": "2023-10-23T15:12:33Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "approved-by"
        },
        {
          "objectId": "205",
          "qualifier": "for-pull-request"
        }
      ],
      "id": "1692838528"
    },
    {
      "type": "comment_pull_request",
      "time": "2023-10-23T15:13:03Z",
      "attributes": [
        {
          "name": "comment",
          "value": "@Devasy23  this PR has merge conflicts please resolve them."
        }
      ],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "commented-by"
        },
        {
          "objectId": "205",
          "qualifier": "on"
        }
      ],
      "id": "IC_kwDODyNbyM5p0utW"
    },
    {
      "type": "commit",
      "time": "2023-10-24T19:03:23Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Devasy Patel",
          "qualifier": "authored-by"
        },
        {
          "objectId": "03b39fbeaba41be1ddc06b132bed8b1e8eeeb0f7",
          "qualifier": "sha"
        },
        {
          "objectId": "205",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDAzYjM5ZmJlYWJhNDFiZTFkZGMwNmIxMzJiZWQ4YjFlOGVlZWIwZjc"
    },
    {
      "type": "commit",
      "time": "2023-10-24T19:03:23Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Devasy Patel",
          "qualifier": "authored-by"
        },
        {
          "objectId": "cd09a99c3c369ae97baa0eb155752a67345640b3",
          "qualifier": "sha"
        },
        {
          "objectId": "205",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKGNkMDlhOTljM2MzNjlhZTk3YmFhMGViMTU1NzUyYTY3MzQ1NjQwYjM"
    },
    {
      "type": "commit",
      "time": "2023-10-24T19:03:23Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Devasy Patel",
          "qualifier": "authored-by"
        },
        {
          "objectId": "c17ac0d6937eb5075b97329259115b1f841f17a6",
          "qualifier": "sha"
        },
        {
          "objectId": "205",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKGMxN2FjMGQ2OTM3ZWI1MDc1Yjk3MzI5MjU5MTE1YjFmODQxZjE3YTY"
    },
    {
      "type": "commit",
      "time": "2023-10-24T19:21:24Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Devasy Patel",
          "qualifier": "authored-by"
        },
        {
          "objectId": "68cc06c8f17591e05f5aed80c0502e2f512eff8c",
          "qualifier": "sha"
        },
        {
          "objectId": "205",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDY4Y2MwNmM4ZjE3NTkxZTA1ZjVhZWQ4MGMwNTAyZTJmNTEyZWZmOGM"
    },
    {
      "type": "close_pull_request",
      "time": "2023-10-25T03:27:39Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Devasy Patel",
          "qualifier": "authored-by"
        },
        {
          "objectId": "205",
          "qualifier": "closed-on-pull_request"
        }
      ],
      "id": "CE_lADODyNbyM50qezfzwAAAAKBcrgL"
    },
    {
      "type": "commit",
      "time": "2023-10-22T07:52:34Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "srbhr",
          "qualifier": "authored-by"
        },
        {
          "objectId": "3208bc5d135ef56ae2c026f163c05cc5ae5c326b",
          "qualifier": "sha"
        },
        {
          "objectId": "203",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDMyMDhiYzVkMTM1ZWY1NmFlMmMwMjZmMTYzYzA1Y2M1YWU1YzMyNmI"
    },
    {
      "type": "merge_pull_request",
      "time": "2023-10-22T07:55:31Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "203",
          "qualifier": "merged-on-pull_request"
        }
      ],
      "id": "ME_lADODyNbyM50kysOzwAAAAJ_uWxC"
    },
    {
      "type": "close_pull_request",
      "time": "2023-10-22T07:55:31Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "203",
          "qualifier": "closed-on-pull_request"
        }
      ],
      "id": "CE_lADODyNbyM50kysOzwAAAAJ_uWxI"
    },
    {
      "type": "commit",
      "time": "2023-10-18T17:07:55Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "MarkTinega",
          "qualifier": "authored-by"
        },
        {
          "objectId": "37c9d4190b48ee1e7cd4f7f59092faa72f9744a2",
          "qualifier": "sha"
        },
        {
          "objectId": "201",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDM3YzlkNDE5MGI0OGVlMWU3Y2Q0ZjdmNTkwOTJmYWE3MmY5NzQ0YTI"
    },
    {
      "type": "approve_review",
      "time": "2023-10-18T17:15:19Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "approved-by"
        },
        {
          "objectId": "201",
          "qualifier": "for-pull-request"
        }
      ],
      "id": "1685683393"
    },
    {
      "type": "merge_pull_request",
      "time": "2023-10-18T17:15:31Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "201",
          "qualifier": "merged-on-pull_request"
        }
      ],
      "id": "ME_lADODyNbyM50PooszwAAAAJ9k_rc"
    },
    {
      "type": "close_pull_request",
      "time": "2023-10-18T17:15:31Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "201",
          "qualifier": "closed-on-pull_request"
        }
      ],
      "id": "CE_lADODyNbyM50PooszwAAAAJ9k_ry"
    },
    {
      "type": "comment_pull_request",
      "time": "2023-10-18T17:15:57Z",
      "attributes": [
        {
          "name": "comment",
          "value": "Thanks @Markkimotho, this marks your first contribution towards Resume Matcher. "
        }
      ],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "commented-by"
        },
        {
          "objectId": "201",
          "qualifier": "on"
        }
      ],
      "id": "IC_kwDODyNbyM5pcLYI"
    },
    {
      "type": "comment_pull_request",
      "time": "2023-10-18T17:25:10Z",
      "attributes": [
        {
          "name": "comment",
          "value": "First of many towards an amazing product."
        }
      ],
      "relationships": [
        {
          "objectId": "Tinega",
          "qualifier": "commented-by"
        },
        {
          "objectId": "201",
          "qualifier": "on"
        }
      ],
      "id": "IC_kwDODyNbyM5pcOsF"
    },
    {
      "type": "commit",
      "time": "2023-09-30T16:18:07Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Ramon Arambula",
          "qualifier": "authored-by"
        },
        {
          "objectId": "d475778b6b3b8114d94b20ac3f575ccbf9a224b5",
          "qualifier": "sha"
        },
        {
          "objectId": "199",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKGQ0NzU3NzhiNmIzYjgxMTRkOTRiMjBhYzNmNTc1Y2NiZjlhMjI0YjU"
    },
    {
      "type": "commit",
      "time": "2023-09-30T16:20:12Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Ramon Arambula",
          "qualifier": "authored-by"
        },
        {
          "objectId": "905b7644fd20fed2034b868c307875218e89ea54",
          "qualifier": "sha"
        },
        {
          "objectId": "199",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDkwNWI3NjQ0ZmQyMGZlZDIwMzRiODY4YzMwNzg3NTIxOGU4OWVhNTQ"
    },
    {
      "type": "commit",
      "time": "2023-09-30T17:29:37Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Ramon Arambula",
          "qualifier": "authored-by"
        },
        {
          "objectId": "498e439c3d9f75d2b80e06eaa0459c0886ee32fb",
          "qualifier": "sha"
        },
        {
          "objectId": "199",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDQ5OGU0MzljM2Q5Zjc1ZDJiODBlMDZlYWEwNDU5YzA4ODZlZTMyZmI"
    },
    {
      "type": "commit",
      "time": "2023-09-30T17:49:58Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Ramon Arambula",
          "qualifier": "authored-by"
        },
        {
          "objectId": "d825421875f5eb1de50d4f9dabb00b1e6cedf0c5",
          "qualifier": "sha"
        },
        {
          "objectId": "199",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKGQ4MjU0MjE4NzVmNWViMWRlNTBkNGY5ZGFiYjAwYjFlNmNlZGYwYzU"
    },
    {
      "type": "commit",
      "time": "2023-09-30T18:05:21Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Ramon Arambula",
          "qualifier": "authored-by"
        },
        {
          "objectId": "df659395ff477ad7f739bf199fa28be7ed8ad599",
          "qualifier": "sha"
        },
        {
          "objectId": "199",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKGRmNjU5Mzk1ZmY0NzdhZDdmNzM5YmYxOTlmYTI4YmU3ZWQ4YWQ1OTk"
    },
    {
      "type": "commit",
      "time": "2023-09-30T18:12:29Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Ramon Arambula",
          "qualifier": "authored-by"
        },
        {
          "objectId": "d340257a0c528903325ae4d129a89d72d384d8bc",
          "qualifier": "sha"
        },
        {
          "objectId": "199",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKGQzNDAyNTdhMGM1Mjg5MDMzMjVhZTRkMTI5YTg5ZDcyZDM4NGQ4YmM"
    },
    {
      "type": "commit",
      "time": "2023-09-30T18:12:29Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Ramon Arambula",
          "qualifier": "authored-by"
        },
        {
          "objectId": "c9184099eba6a59d7b367585c8d6b755f32160e8",
          "qualifier": "sha"
        },
        {
          "objectId": "199",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKGM5MTg0MDk5ZWJhNmE1OWQ3YjM2NzU4NWM4ZDZiNzU1ZjMyMTYwZTg"
    },
    {
      "type": "commit",
      "time": "2023-09-30T20:44:31Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Ramon Arambula",
          "qualifier": "authored-by"
        },
        {
          "objectId": "b504a67e660e215a0ee253719be4f7182fa49811",
          "qualifier": "sha"
        },
        {
          "objectId": "199",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKGI1MDRhNjdlNjYwZTIxNWEwZWUyNTM3MTliZTRmNzE4MmZhNDk4MTE"
    },
    {
      "type": "commit",
      "time": "2023-10-01T05:03:07Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Ramon Arambula",
          "qualifier": "authored-by"
        },
        {
          "objectId": "257f9528eca97840bd001c9af3d36cd3a20cb4bd",
          "qualifier": "sha"
        },
        {
          "objectId": "199",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDI1N2Y5NTI4ZWNhOTc4NDBiZDAwMWM5YWYzZDM2Y2QzYTIwY2I0YmQ"
    },
    {
      "type": "commit",
      "time": "2023-10-01T05:55:59Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Ramon Arambula",
          "qualifier": "authored-by"
        },
        {
          "objectId": "b974c00395af6099093321b0ffe6446144cb601e",
          "qualifier": "sha"
        },
        {
          "objectId": "199",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKGI5NzRjMDAzOTVhZjYwOTkwOTMzMjFiMGZmZTY0NDYxNDRjYjYwMWU"
    },
    {
      "type": "commit",
      "time": "2023-10-01T06:01:39Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Ramon Arambula",
          "qualifier": "authored-by"
        },
        {
          "objectId": "35f4c90192b74389f37bb345ddadf78892623eda",
          "qualifier": "sha"
        },
        {
          "objectId": "199",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDM1ZjRjOTAxOTJiNzQzODlmMzdiYjM0NWRkYWRmNzg4OTI2MjNlZGE"
    },
    {
      "type": "commit",
      "time": "2023-10-15T21:10:43Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Thomas Lau",
          "qualifier": "authored-by"
        },
        {
          "objectId": "fa7d5d33fd2f5c9224c7b45784cc3b756bf4bc4a",
          "qualifier": "sha"
        },
        {
          "objectId": "199",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKGZhN2Q1ZDMzZmQyZjVjOTIyNGM3YjQ1Nzg0Y2MzYjc1NmJmNGJjNGE"
    },
    {
      "type": "close_pull_request",
      "time": "2023-10-16T16:43:44Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Thomas Lau",
          "qualifier": "authored-by"
        },
        {
          "objectId": "199",
          "qualifier": "closed-on-pull_request"
        }
      ],
      "id": "CE_lADODyNbyM5z-HCXzwAAAAJ73joJ"
    },
    {
      "type": "comment_pull_request",
      "time": "2023-10-14T08:11:56Z",
      "attributes": [
        {
          "name": "comment",
          "value": "Looks good \ud83d\udc4d"
        }
      ],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "commented-by"
        },
        {
          "objectId": "198",
          "qualifier": "on"
        }
      ],
      "id": "IC_kwDODyNbyM5pEM_L"
    },
    {
      "type": "merge_pull_request",
      "time": "2023-10-14T08:12:03Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "198",
          "qualifier": "merged-on-pull_request"
        }
      ],
      "id": "ME_lADODyNbyM5z0DsAzwAAAAJ66xb-"
    },
    {
      "type": "close_pull_request",
      "time": "2023-10-14T08:12:04Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "198",
          "qualifier": "closed-on-pull_request"
        }
      ],
      "id": "CE_lADODyNbyM5z0DsAzwAAAAJ66xcG"
    },
    {
      "type": "add_label",
      "time": "2023-10-15T09:38:59Z",
      "attributes": [
        {
          "name": "label",
          "value": "hacktoberfest-accepted"
        }
      ],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "198",
          "qualifier": "labeled-on-pull_request"
        }
      ],
      "id": "LE_lADODyNbyM5z0DsAzwAAAAJ7OZVy"
    },
    {
      "type": "add_label",
      "time": "2023-10-10T20:39:38Z",
      "attributes": [
        {
          "name": "label",
          "value": "dependencies"
        }
      ],
      "relationships": [
        {
          "objectId": "dependabot[bot]",
          "qualifier": "authored-by"
        },
        {
          "objectId": "196",
          "qualifier": "labeled-on-pull_request"
        }
      ],
      "id": "LE_lADODyNbyM5zZ8lRzwAAAAJ4Xzuq"
    },
    {
      "type": "add_label",
      "time": "2023-10-10T20:39:38Z",
      "attributes": [
        {
          "name": "label",
          "value": "python"
        }
      ],
      "relationships": [
        {
          "objectId": "dependabot[bot]",
          "qualifier": "authored-by"
        },
        {
          "objectId": "196",
          "qualifier": "labeled-on-pull_request"
        }
      ],
      "id": "LE_lADODyNbyM5zZ8lRzwAAAAJ4XzvD"
    },
    {
      "type": "commit",
      "time": "2023-10-11T08:51:06Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "authored-by"
        },
        {
          "objectId": "a74db7d34127fece33afa4ca0d17b5cc94387851",
          "qualifier": "sha"
        },
        {
          "objectId": "196",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKGE3NGRiN2QzNDEyN2ZlY2UzM2FmYTRjYTBkMTdiNWNjOTQzODc4NTE"
    },
    {
      "type": "comment_pull_request",
      "time": "2024-01-10T16:41:23Z",
      "attributes": [
        {
          "name": "comment",
          "value": "Superseded by #226."
        }
      ],
      "relationships": [
        {
          "objectId": "dependabot[bot]",
          "qualifier": "commented-by"
        },
        {
          "objectId": "196",
          "qualifier": "on"
        }
      ],
      "id": "IC_kwDODyNbyM5wXgT1"
    },
    {
      "type": "close_pull_request",
      "time": "2024-01-10T16:41:23Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "dependabot[bot]",
          "qualifier": "authored-by"
        },
        {
          "objectId": "196",
          "qualifier": "closed-on-pull_request"
        }
      ],
      "id": "CE_lADODyNbyM5zZ8lRzwAAAAKqNu4f"
    },
    {
      "type": "commit",
      "time": "2023-10-07T17:11:41Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "imhalcyon",
          "qualifier": "authored-by"
        },
        {
          "objectId": "6fbcd17e15c19a53eef6969506ccf568bdc98a7d",
          "qualifier": "sha"
        },
        {
          "objectId": "194",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDZmYmNkMTdlMTVjMTlhNTNlZWY2OTY5NTA2Y2NmNTY4YmRjOThhN2Q"
    },
    {
      "type": "commit",
      "time": "2023-10-07T17:11:49Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "imhalcyon",
          "qualifier": "authored-by"
        },
        {
          "objectId": "d3169e4cfe1c02569d0e00d686f456a8a766e503",
          "qualifier": "sha"
        },
        {
          "objectId": "194",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKGQzMTY5ZTRjZmUxYzAyNTY5ZDBlMDBkNjg2ZjQ1NmE4YTc2NmU1MDM"
    },
    {
      "type": "add_label",
      "time": "2023-10-11T08:48:58Z",
      "attributes": [
        {
          "name": "label",
          "value": "hacktoberfest"
        }
      ],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "194",
          "qualifier": "labeled-on-pull_request"
        }
      ],
      "id": "LE_lADODyNbyM5zH0OmzwAAAAJ4uUOz"
    },
    {
      "type": "add_label",
      "time": "2023-10-11T08:49:10Z",
      "attributes": [
        {
          "name": "label",
          "value": "hacktoberfest-accepted"
        }
      ],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "194",
          "qualifier": "labeled-on-pull_request"
        }
      ],
      "id": "LE_lADODyNbyM5zH0OmzwAAAAJ4uVEf"
    },
    {
      "type": "approve_review",
      "time": "2023-10-11T08:49:37Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "approved-by"
        },
        {
          "objectId": "194",
          "qualifier": "for-pull-request"
        }
      ],
      "id": "1670465149"
    },
    {
      "type": "comment_pull_request",
      "time": "2023-10-11T08:49:41Z",
      "attributes": [
        {
          "name": "comment",
          "value": "Thanks @imhalcyon for this PR. Changes look good to me. "
        }
      ],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "commented-by"
        },
        {
          "objectId": "194",
          "qualifier": "on"
        }
      ],
      "id": "IC_kwDODyNbyM5ovExU"
    },
    {
      "type": "merge_pull_request",
      "time": "2023-10-11T08:49:47Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "194",
          "qualifier": "merged-on-pull_request"
        }
      ],
      "id": "ME_lADODyNbyM5zH0OmzwAAAAJ4uXYk"
    },
    {
      "type": "close_pull_request",
      "time": "2023-10-11T08:49:48Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "194",
          "qualifier": "closed-on-pull_request"
        }
      ],
      "id": "CE_lADODyNbyM5zH0OmzwAAAAJ4uXZG"
    },
    {
      "type": "commit",
      "time": "2023-10-07T04:51:30Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "SubramanyamChalla24",
          "qualifier": "authored-by"
        },
        {
          "objectId": "ea6f8a333eef6b00d046e7b92bcfffc0db773516",
          "qualifier": "sha"
        },
        {
          "objectId": "193",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKGVhNmY4YTMzM2VlZjZiMDBkMDQ2ZTdiOTJiY2ZmZmMwZGI3NzM1MTY"
    },
    {
      "type": "commit",
      "time": "2023-10-07T04:51:51Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "SubramanyamChalla24",
          "qualifier": "authored-by"
        },
        {
          "objectId": "203edeb06c68735f53b9191eae6f301ce9b3efc0",
          "qualifier": "sha"
        },
        {
          "objectId": "193",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDIwM2VkZWIwNmM2ODczNWY1M2I5MTkxZWFlNmYzMDFjZTliM2VmYzA"
    },
    {
      "type": "commit",
      "time": "2023-10-07T04:52:10Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "SubramanyamChalla24",
          "qualifier": "authored-by"
        },
        {
          "objectId": "a7cb5a113bcb16b1ac19b82e1733349ef5469ece",
          "qualifier": "sha"
        },
        {
          "objectId": "193",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKGE3Y2I1YTExM2JjYjE2YjFhYzE5YjgyZTE3MzMzNDllZjU0NjllY2U"
    },
    {
      "type": "commit",
      "time": "2023-10-07T04:52:18Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "SubramanyamChalla24",
          "qualifier": "authored-by"
        },
        {
          "objectId": "5f735956b81aae8a0b18476bcc6287355e4159b6",
          "qualifier": "sha"
        },
        {
          "objectId": "193",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDVmNzM1OTU2YjgxYWFlOGEwYjE4NDc2YmNjNjI4NzM1NWU0MTU5YjY"
    },
    {
      "type": "commit",
      "time": "2023-10-07T04:57:35Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "SubramanyamChalla24",
          "qualifier": "authored-by"
        },
        {
          "objectId": "947a4d4693eede3ae88a68df379fb1b77468c34b",
          "qualifier": "sha"
        },
        {
          "objectId": "193",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDk0N2E0ZDQ2OTNlZWRlM2FlODhhNjhkZjM3OWZiMWI3NzQ2OGMzNGI"
    },
    {
      "type": "commit",
      "time": "2023-10-18T03:48:18Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "authored-by"
        },
        {
          "objectId": "acc9830e8bfcc078a6b84a1ae37cba93c5a5bba7",
          "qualifier": "sha"
        },
        {
          "objectId": "193",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKGFjYzk4MzBlOGJmY2MwNzhhNmI4NGExYWUzN2NiYTkzYzVhNWJiYTc"
    },
    {
      "type": "commit",
      "time": "2023-10-20T01:05:59Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "authored-by"
        },
        {
          "objectId": "3ebb08201a8c6a32063b6da05e2ef28ee8cb06eb",
          "qualifier": "sha"
        },
        {
          "objectId": "193",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDNlYmIwODIwMWE4YzZhMzIwNjNiNmRhMDVlMmVmMjhlZThjYjA2ZWI"
    },
    {
      "type": "commit",
      "time": "2023-10-23T06:00:55Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "authored-by"
        },
        {
          "objectId": "0b2becf709ffc506c31357afcc23fd361d19603e",
          "qualifier": "sha"
        },
        {
          "objectId": "193",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDBiMmJlY2Y3MDlmZmM1MDZjMzEzNTdhZmNjMjNmZDM2MWQxOTYwM2U"
    },
    {
      "type": "commit",
      "time": "2023-10-28T03:27:14Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "authored-by"
        },
        {
          "objectId": "f7602471f64a68bc7929b0807ee1b47392e07bde",
          "qualifier": "sha"
        },
        {
          "objectId": "193",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKGY3NjAyNDcxZjY0YTY4YmM3OTI5YjA4MDdlZTFiNDczOTJlMDdiZGU"
    },
    {
      "type": "approve_review",
      "time": "2023-10-31T04:34:34Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "approved-by"
        },
        {
          "objectId": "193",
          "qualifier": "for-pull-request"
        }
      ],
      "id": "1705430866"
    },
    {
      "type": "add_label",
      "time": "2023-10-31T04:35:06Z",
      "attributes": [
        {
          "name": "label",
          "value": "hacktoberfest"
        }
      ],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "193",
          "qualifier": "labeled-on-pull_request"
        }
      ],
      "id": "LE_lADODyNbyM5zG5_GzwAAAAKEqFtr"
    },
    {
      "type": "add_label",
      "time": "2023-10-31T04:35:06Z",
      "attributes": [
        {
          "name": "label",
          "value": "hacktoberfest-accepted"
        }
      ],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "193",
          "qualifier": "labeled-on-pull_request"
        }
      ],
      "id": "LE_lADODyNbyM5zG5_GzwAAAAKEqFtv"
    },
    {
      "type": "comment_pull_request",
      "time": "2023-10-31T04:36:19Z",
      "attributes": [
        {
          "name": "comment",
          "value": "Great work on fixing this out @SubramanyamChalla24 "
        }
      ],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "commented-by"
        },
        {
          "objectId": "193",
          "qualifier": "on"
        }
      ],
      "id": "IC_kwDODyNbyM5qes-o"
    },
    {
      "type": "merge_pull_request",
      "time": "2023-10-31T04:36:23Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "193",
          "qualifier": "merged-on-pull_request"
        }
      ],
      "id": "ME_lADODyNbyM5zG5_GzwAAAAKEqHFw"
    },
    {
      "type": "close_pull_request",
      "time": "2023-10-31T04:36:23Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "193",
          "qualifier": "closed-on-pull_request"
        }
      ],
      "id": "CE_lADODyNbyM5zG5_GzwAAAAKEqHF_"
    },
    {
      "type": "close_pull_request",
      "time": "2023-10-07T04:49:41Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Subramanyam Challa",
          "qualifier": "authored-by"
        },
        {
          "objectId": "192",
          "qualifier": "closed-on-pull_request"
        }
      ],
      "id": "CE_lADODyNbyM5zG1AzzwAAAAJ2r9nl"
    },
    {
      "type": "commit",
      "time": "2023-10-06T10:12:16Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "authored-by"
        },
        {
          "objectId": "3e0978d867f0730fe8800d47b4911ed98cb9402b",
          "qualifier": "sha"
        },
        {
          "objectId": "191",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDNlMDk3OGQ4NjdmMDczMGZlODgwMGQ0N2I0OTExZWQ5OGNiOTQwMmI"
    },
    {
      "type": "add_label",
      "time": "2023-10-06T10:12:17Z",
      "attributes": [
        {
          "name": "label",
          "value": "dependencies"
        }
      ],
      "relationships": [
        {
          "objectId": "dependabot[bot]",
          "qualifier": "authored-by"
        },
        {
          "objectId": "191",
          "qualifier": "labeled-on-pull_request"
        }
      ],
      "id": "LE_lADODyNbyM5zBxb3zwAAAAJ2NuwT"
    },
    {
      "type": "add_label",
      "time": "2023-10-06T10:12:17Z",
      "attributes": [
        {
          "name": "label",
          "value": "javascript"
        }
      ],
      "relationships": [
        {
          "objectId": "dependabot[bot]",
          "qualifier": "authored-by"
        },
        {
          "objectId": "191",
          "qualifier": "labeled-on-pull_request"
        }
      ],
      "id": "LE_lADODyNbyM5zBxb3zwAAAAJ2Nuwa"
    },
    {
      "type": "close_pull_request",
      "time": "2024-03-23T14:21:43Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "191",
          "qualifier": "closed-on-pull_request"
        }
      ],
      "id": "CE_lADODyNbyM5zBxb3zwAAAALYo1WI"
    },
    {
      "type": "comment_pull_request",
      "time": "2024-03-23T14:21:45Z",
      "attributes": [
        {
          "name": "comment",
          "value": "OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`.\n\nIf you change your mind, just re-open this PR and I'll resolve any conflicts on it."
        }
      ],
      "relationships": [
        {
          "objectId": "dependabot[bot]",
          "qualifier": "commented-by"
        },
        {
          "objectId": "191",
          "qualifier": "on"
        }
      ],
      "id": "IC_kwDODyNbyM54MXnz"
    },
    {
      "type": "add_label",
      "time": "2023-10-06T10:11:49Z",
      "attributes": [
        {
          "name": "label",
          "value": "dependencies"
        }
      ],
      "relationships": [
        {
          "objectId": "dependabot[bot]",
          "qualifier": "authored-by"
        },
        {
          "objectId": "190",
          "qualifier": "labeled-on-pull_request"
        }
      ],
      "id": "LE_lADODyNbyM5zBxL_zwAAAAJ2Ntnj"
    },
    {
      "type": "add_label",
      "time": "2023-10-06T10:11:49Z",
      "attributes": [
        {
          "name": "label",
          "value": "javascript"
        }
      ],
      "relationships": [
        {
          "objectId": "dependabot[bot]",
          "qualifier": "authored-by"
        },
        {
          "objectId": "190",
          "qualifier": "labeled-on-pull_request"
        }
      ],
      "id": "LE_lADODyNbyM5zBxL_zwAAAAJ2Ntnp"
    },
    {
      "type": "commit",
      "time": "2023-10-11T08:51:24Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "authored-by"
        },
        {
          "objectId": "f02c6dc8507fb23bb5c68a40f75cee7170d40c98",
          "qualifier": "sha"
        },
        {
          "objectId": "190",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKGYwMmM2ZGM4NTA3ZmIyM2JiNWM2OGE0MGY3NWNlZTcxNzBkNDBjOTg"
    },
    {
      "type": "close_pull_request",
      "time": "2024-03-23T14:21:52Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "190",
          "qualifier": "closed-on-pull_request"
        }
      ],
      "id": "CE_lADODyNbyM5zBxL_zwAAAALYo1aZ"
    },
    {
      "type": "comment_pull_request",
      "time": "2024-03-23T14:21:54Z",
      "attributes": [
        {
          "name": "comment",
          "value": "OK, I won't notify you again about this release, but will get in touch when a new version is available.\n\nIf you change your mind, just re-open this PR and I'll resolve any conflicts on it."
        }
      ],
      "relationships": [
        {
          "objectId": "dependabot[bot]",
          "qualifier": "commented-by"
        },
        {
          "objectId": "190",
          "qualifier": "on"
        }
      ],
      "id": "IC_kwDODyNbyM54MXoX"
    },
    {
      "type": "commit",
      "time": "2023-10-03T10:07:01Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "sandip",
          "qualifier": "authored-by"
        },
        {
          "objectId": "5074669877ae8bcf0aca9be9385940b6d5b28a75",
          "qualifier": "sha"
        },
        {
          "objectId": "186",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDUwNzQ2Njk4NzdhZThiY2YwYWNhOWJlOTM4NTk0MGI2ZDViMjhhNzU"
    },
    {
      "type": "commit",
      "time": "2023-10-03T11:34:42Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "sandip",
          "qualifier": "authored-by"
        },
        {
          "objectId": "151fc4e099c775fcd58550e7882e650e07fd5837",
          "qualifier": "sha"
        },
        {
          "objectId": "186",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDE1MWZjNGUwOTljNzc1ZmNkNTg1NTBlNzg4MmU2NTBlMDdmZDU4Mzc"
    },
    {
      "type": "commit",
      "time": "2023-10-03T11:42:17Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "sandip",
          "qualifier": "authored-by"
        },
        {
          "objectId": "664ab5294092a71d681502dfc2e0225f4afba3a3",
          "qualifier": "sha"
        },
        {
          "objectId": "186",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDY2NGFiNTI5NDA5MmE3MWQ2ODE1MDJkZmMyZTAyMjVmNGFmYmEzYTM"
    },
    {
      "type": "commit",
      "time": "2023-10-03T14:20:15Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "sandip",
          "qualifier": "authored-by"
        },
        {
          "objectId": "c3ffb552b0c3e55ee6b2b4759d4882a3edaaad55",
          "qualifier": "sha"
        },
        {
          "objectId": "186",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKGMzZmZiNTUyYjBjM2U1NWVlNmIyYjQ3NTlkNDg4MmEzZWRhYWFkNTU"
    },
    {
      "type": "commit",
      "time": "2023-10-03T14:54:05Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "sandip",
          "qualifier": "authored-by"
        },
        {
          "objectId": "0f5c5181309fde286a752f3eea0c362788caa94e",
          "qualifier": "sha"
        },
        {
          "objectId": "186",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDBmNWM1MTgxMzA5ZmRlMjg2YTc1MmYzZWVhMGMzNjI3ODhjYWE5NGU"
    },
    {
      "type": "commit",
      "time": "2023-10-03T15:05:15Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "sandip",
          "qualifier": "authored-by"
        },
        {
          "objectId": "6d75c17fc54c6376bde1003af651b09a1e85769f",
          "qualifier": "sha"
        },
        {
          "objectId": "189",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDZkNzVjMTdmYzU0YzYzNzZiZGUxMDAzYWY2NTFiMDlhMWU4NTc2OWY"
    },
    {
      "type": "commit",
      "time": "2023-10-03T15:14:05Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "sandip",
          "qualifier": "authored-by"
        },
        {
          "objectId": "911f809a5b3b72be5b500fd87d6a670adf2ded28",
          "qualifier": "sha"
        },
        {
          "objectId": "189",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDkxMWY4MDlhNWIzYjcyYmU1YjUwMGZkODdkNmE2NzBhZGYyZGVkMjg"
    },
    {
      "type": "commit",
      "time": "2023-10-03T15:15:53Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "sandip",
          "qualifier": "authored-by"
        },
        {
          "objectId": "b508c9b77a39ba5c02a9a88ac393d0a264c6d5c0",
          "qualifier": "sha"
        },
        {
          "objectId": "189",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKGI1MDhjOWI3N2EzOWJhNWMwMmE5YTg4YWMzOTNkMGEyNjRjNmQ1YzA"
    },
    {
      "type": "commit",
      "time": "2023-10-03T15:16:42Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "sandip",
          "qualifier": "authored-by"
        },
        {
          "objectId": "299bba7e8fc15683f68f0956aba052140e55bd64",
          "qualifier": "sha"
        },
        {
          "objectId": "189",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDI5OWJiYTdlOGZjMTU2ODNmNjhmMDk1NmFiYTA1MjE0MGU1NWJkNjQ"
    },
    {
      "type": "commit",
      "time": "2023-10-03T15:17:28Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "sandip",
          "qualifier": "authored-by"
        },
        {
          "objectId": "ed95b846e5525ea4b76ed80aa55d61aff2078e9c",
          "qualifier": "sha"
        },
        {
          "objectId": "189",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKGVkOTViODQ2ZTU1MjVlYTRiNzZlZDgwYWE1NWQ2MWFmZjIwNzhlOWM"
    },
    {
      "type": "commit",
      "time": "2023-10-03T15:20:40Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "sandip",
          "qualifier": "authored-by"
        },
        {
          "objectId": "a1cceedc6592a84c172e02b2790991529261599f",
          "qualifier": "sha"
        },
        {
          "objectId": "189",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKGExY2NlZWRjNjU5MmE4NGMxNzJlMDJiMjc5MDk5MTUyOTI2MTU5OWY"
    },
    {
      "type": "commit",
      "time": "2023-10-03T15:23:38Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "sandip",
          "qualifier": "authored-by"
        },
        {
          "objectId": "d77f3f14462f06a2f3df058be5a4a96f48587f79",
          "qualifier": "sha"
        },
        {
          "objectId": "189",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKGQ3N2YzZjE0NDYyZjA2YTJmM2RmMDU4YmU1YTRhOTZmNDg1ODdmNzk"
    },
    {
      "type": "commit",
      "time": "2023-10-03T15:24:48Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "sandip",
          "qualifier": "authored-by"
        },
        {
          "objectId": "b6058e9895135d1bac70fdffcb5feaabc0d4da7c",
          "qualifier": "sha"
        },
        {
          "objectId": "189",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKGI2MDU4ZTk4OTUxMzVkMWJhYzcwZmRmZmNiNWZlYWFiYzBkNGRhN2M"
    },
    {
      "type": "commit",
      "time": "2023-10-03T15:26:47Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "sandip",
          "qualifier": "authored-by"
        },
        {
          "objectId": "378878f8562e5bc65b96b603a380907583dca4a5",
          "qualifier": "sha"
        },
        {
          "objectId": "189",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDM3ODg3OGY4NTYyZTViYzY1Yjk2YjYwM2EzODA5MDc1ODNkY2E0YTU"
    },
    {
      "type": "commit",
      "time": "2023-10-04T06:52:17Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "sandip",
          "qualifier": "authored-by"
        },
        {
          "objectId": "05f252c8f3224525a4cb643733ede4385dc28d16",
          "qualifier": "sha"
        },
        {
          "objectId": "189",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDA1ZjI1MmM4ZjMyMjQ1MjVhNGNiNjQzNzMzZWRlNDM4NWRjMjhkMTY"
    },
    {
      "type": "commit",
      "time": "2023-10-04T06:56:16Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "sandip",
          "qualifier": "authored-by"
        },
        {
          "objectId": "20b3f0067112cdf453a851e2a8b01b1452fa0fc9",
          "qualifier": "sha"
        },
        {
          "objectId": "189",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDIwYjNmMDA2NzExMmNkZjQ1M2E4NTFlMmE4YjAxYjE0NTJmYTBmYzk"
    },
    {
      "type": "commit",
      "time": "2023-10-04T07:04:46Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "sandip",
          "qualifier": "authored-by"
        },
        {
          "objectId": "2ea06b114e3870f816cca0b55bb3450f41ab8d8d",
          "qualifier": "sha"
        },
        {
          "objectId": "189",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDJlYTA2YjExNGUzODcwZjgxNmNjYTBiNTViYjM0NTBmNDFhYjhkOGQ"
    },
    {
      "type": "commit",
      "time": "2023-10-04T07:06:02Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "sandip",
          "qualifier": "authored-by"
        },
        {
          "objectId": "b77a9ead60845e931dded27b0d511421059c7860",
          "qualifier": "sha"
        },
        {
          "objectId": "189",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKGI3N2E5ZWFkNjA4NDVlOTMxZGRlZDI3YjBkNTExNDIxMDU5Yzc4NjA"
    },
    {
      "type": "commit",
      "time": "2023-10-04T07:07:48Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "sandip",
          "qualifier": "authored-by"
        },
        {
          "objectId": "a69353bbc17a1cf2655e2128675cefa2f0e1b749",
          "qualifier": "sha"
        },
        {
          "objectId": "189",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKGE2OTM1M2JiYzE3YTFjZjI2NTVlMjEyODY3NWNlZmEyZjBlMWI3NDk"
    },
    {
      "type": "commit",
      "time": "2023-10-04T07:12:46Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "sandip",
          "qualifier": "authored-by"
        },
        {
          "objectId": "918a6ec5e1d3b0d1b3e6d777eb39795d9abe34b4",
          "qualifier": "sha"
        },
        {
          "objectId": "189",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDkxOGE2ZWM1ZTFkM2IwZDFiM2U2ZDc3N2ViMzk3OTVkOWFiZTM0YjQ"
    },
    {
      "type": "commit",
      "time": "2023-10-04T07:16:19Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "sandip",
          "qualifier": "authored-by"
        },
        {
          "objectId": "e5be1fe3fd32ff592523d250b209641e3ac5b9f9",
          "qualifier": "sha"
        },
        {
          "objectId": "189",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKGU1YmUxZmUzZmQzMmZmNTkyNTIzZDI1MGIyMDk2NDFlM2FjNWI5Zjk"
    },
    {
      "type": "commit",
      "time": "2023-10-04T07:19:31Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "sandip",
          "qualifier": "authored-by"
        },
        {
          "objectId": "30ced12b03580b2222816c340faa4fb45219a03a",
          "qualifier": "sha"
        },
        {
          "objectId": "189",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDMwY2VkMTJiMDM1ODBiMjIyMjgxNmMzNDBmYWE0ZmI0NTIxOWEwM2E"
    },
    {
      "type": "commit",
      "time": "2023-10-04T07:22:04Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "sandip",
          "qualifier": "authored-by"
        },
        {
          "objectId": "46cf79cc5042762db9a4b5a00062ddb94f8f0a4a",
          "qualifier": "sha"
        },
        {
          "objectId": "189",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDQ2Y2Y3OWNjNTA0Mjc2MmRiOWE0YjVhMDAwNjJkZGI5NGY4ZjBhNGE"
    },
    {
      "type": "comment_pull_request",
      "time": "2023-10-04T09:21:08Z",
      "attributes": [
        {
          "name": "comment",
          "value": "@sandipkarmokar - I noticed quite a lot of unnecessary code syntax formatting changes for converting double quotes to single quotes which skews the GitHub diffing of Pull Requests making it difficult to isolate and review actual changes over the additional code syntax re-formatting changes.\r\n\r\nI believe you may have overridden the default Prettier settings to convert to single quotes.\r\n\r\nAre you able to deselect / revert / disable the option selection for `Prettier: Single Quote`? See screenshot below:\r\n\r\n<img width=\"645\" alt=\"Screenshot of Prettier config setting for SIngle Quote conversion (disabled)\" src=\"https://github.com/srbhr/Resume-Matcher/assets/7581546/c0f9ad5a-0782-4cff-ad6c-0a568849b976\">\r\n"
        }
      ],
      "relationships": [
        {
          "objectId": "Sayvai",
          "qualifier": "commented-by"
        },
        {
          "objectId": "189",
          "qualifier": "on"
        }
      ],
      "id": "IC_kwDODyNbyM5oGSIW"
    },
    {
      "type": "commit",
      "time": "2023-10-04T11:10:48Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "sandip",
          "qualifier": "authored-by"
        },
        {
          "objectId": "d85cf54ea93ce6ef3e33ef134aceca57eff5f95e",
          "qualifier": "sha"
        },
        {
          "objectId": "189",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKGQ4NWNmNTRlYTkzY2U2ZWYzZTMzZWYxMzRhY2VjYTU3ZWZmNWY5NWU"
    },
    {
      "type": "comment_pull_request",
      "time": "2023-10-04T11:22:54Z",
      "attributes": [
        {
          "name": "comment",
          "value": "@Sayvai managed to fix the quotes issue in the .tsx files looking into solutions for the .ts files\r\n"
        }
      ],
      "relationships": [
        {
          "objectId": "Sandip Karmokar",
          "qualifier": "commented-by"
        },
        {
          "objectId": "189",
          "qualifier": "on"
        }
      ],
      "id": "IC_kwDODyNbyM5oHCPA"
    },
    {
      "type": "add_label",
      "time": "2023-10-04T01:52:12Z",
      "attributes": [
        {
          "name": "label",
          "value": "dependencies"
        }
      ],
      "relationships": [
        {
          "objectId": "dependabot[bot]",
          "qualifier": "authored-by"
        },
        {
          "objectId": "188",
          "qualifier": "labeled-on-pull_request"
        }
      ],
      "id": "LE_lADODyNbyM5ywO8CzwAAAAJ0ifmd"
    },
    {
      "type": "comment_pull_request",
      "time": "2023-10-07T10:43:28Z",
      "attributes": [
        {
          "name": "comment",
          "value": "Please don't merge this PR. Tried it in forked repo and faced issues.\r\n\r\nThe user requested Pillow==10.0.1\r\n  matplotlib 3.7.2 depends on pillow>=6.2.0\r\n  streamlit 1.27.0 depends on pillow<10 and >=7.1.0"
        }
      ],
      "relationships": [
        {
          "objectId": "Abhishek Mathur",
          "qualifier": "commented-by"
        },
        {
          "objectId": "188",
          "qualifier": "on"
        }
      ],
      "id": "IC_kwDODyNbyM5oaH9f"
    },
    {
      "type": "comment_pull_request",
      "time": "2023-10-08T07:52:00Z",
      "attributes": [
        {
          "name": "comment",
          "value": "@srbhr , streamlit 1.27.1 includes the fix. I've made the changes in this PR: #183 "
        }
      ],
      "relationships": [
        {
          "objectId": "Abhishek Mathur",
          "qualifier": "commented-by"
        },
        {
          "objectId": "188",
          "qualifier": "on"
        }
      ],
      "id": "IC_kwDODyNbyM5obKxV"
    },
    {
      "type": "commit",
      "time": "2023-10-11T08:51:12Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "authored-by"
        },
        {
          "objectId": "36fdbe08b0b3efb3477d718a2e18b8d8063f6b25",
          "qualifier": "sha"
        },
        {
          "objectId": "188",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDM2ZmRiZTA4YjBiM2VmYjM0NzdkNzE4YTJlMThiOGQ4MDYzZjZiMjU"
    },
    {
      "type": "comment_pull_request",
      "time": "2023-10-11T08:56:30Z",
      "attributes": [
        {
          "name": "comment",
          "value": "Looks like pillow is up-to-date now, so this is no longer needed."
        }
      ],
      "relationships": [
        {
          "objectId": "dependabot[bot]",
          "qualifier": "commented-by"
        },
        {
          "objectId": "188",
          "qualifier": "on"
        }
      ],
      "id": "IC_kwDODyNbyM5ovHnt"
    },
    {
      "type": "close_pull_request",
      "time": "2023-10-11T08:56:33Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "dependabot[bot]",
          "qualifier": "authored-by"
        },
        {
          "objectId": "188",
          "qualifier": "closed-on-pull_request"
        }
      ],
      "id": "CE_lADODyNbyM5ywO8CzwAAAAJ4u7TM"
    },
    {
      "type": "close_pull_request",
      "time": "2023-10-03T14:55:53Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Sandip Karmokar",
          "qualifier": "authored-by"
        },
        {
          "objectId": "186",
          "qualifier": "closed-on-pull_request"
        }
      ],
      "id": "CE_lADODyNbyM5yrTqXzwAAAAJ0NkhO"
    },
    {
      "type": "commit",
      "time": "2023-10-03T10:00:56Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "imhalcyon",
          "qualifier": "authored-by"
        },
        {
          "objectId": "a232b513a7d56aabe1c668ed800bfd2725311810",
          "qualifier": "sha"
        },
        {
          "objectId": "185",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKGEyMzJiNTEzYTdkNTZhYWJlMWM2NjhlZDgwMGJmZDI3MjUzMTE4MTA"
    },
    {
      "type": "comment_review",
      "time": "2023-10-03T10:19:14Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Sayvai",
          "qualifier": "commented-by"
        },
        {
          "objectId": "185",
          "qualifier": "for-pull-request"
        }
      ],
      "id": "1654854057"
    },
    {
      "type": "commit",
      "time": "2023-10-03T14:38:03Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "authored-by"
        },
        {
          "objectId": "85570c2e50962e43ca6c72fd8045252b68cf73ec",
          "qualifier": "sha"
        },
        {
          "objectId": "185",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDg1NTcwYzJlNTA5NjJlNDNjYTZjNzJmZDgwNDUyNTJiNjhjZjczZWM"
    },
    {
      "type": "commit",
      "time": "2023-10-03T14:38:11Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "authored-by"
        },
        {
          "objectId": "7439cef47ebe36b068376181ade4abba4f8101be",
          "qualifier": "sha"
        },
        {
          "objectId": "185",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDc0MzljZWY0N2ViZTM2YjA2ODM3NjE4MWFkZTRhYmJhNGY4MTAxYmU"
    },
    {
      "type": "comment_pull_request",
      "time": "2023-10-03T14:39:04Z",
      "attributes": [
        {
          "name": "comment",
          "value": "> Just a couple of minor addition suggestions to the README. Good spot on the additional spelling mistakes (thanks \ud83d\ude05)\r\n\r\nForgot about Mac OS part - thanks for the suggestions! \ud83d\ude04 "
        }
      ],
      "relationships": [
        {
          "objectId": "Abhishek Mathur",
          "qualifier": "commented-by"
        },
        {
          "objectId": "185",
          "qualifier": "on"
        }
      ],
      "id": "IC_kwDODyNbyM5oBGZZ"
    },
    {
      "type": "approve_review",
      "time": "2023-10-03T14:42:19Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Sayvai",
          "qualifier": "approved-by"
        },
        {
          "objectId": "185",
          "qualifier": "for-pull-request"
        }
      ],
      "id": "1655407264"
    },
    {
      "type": "comment_pull_request",
      "time": "2023-10-03T14:44:44Z",
      "attributes": [
        {
          "name": "comment",
          "value": "> > Just a couple of minor addition suggestions to the README. Good spot on the additional spelling mistakes (thanks \ud83d\ude05)\r\n> \r\n> Forgot about Mac OS part - thanks for the suggestions! \ud83d\ude04\r\n\r\nHa, no worries!\r\n\r\nNow, only @srbhr have the privileges to merge into the base `main` branch. So it'll be up to him to merge these changes in when ready. He may also like to test this on his Windows machine too \ud83d\ude05"
        }
      ],
      "relationships": [
        {
          "objectId": "Sayvai",
          "qualifier": "commented-by"
        },
        {
          "objectId": "185",
          "qualifier": "on"
        }
      ],
      "id": "IC_kwDODyNbyM5oBJEk"
    },
    {
      "type": "commit",
      "time": "2023-10-06T14:15:08Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "authored-by"
        },
        {
          "objectId": "8c08c9e6f46bb843206874911d56985cdcbe56b4",
          "qualifier": "sha"
        },
        {
          "objectId": "185",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDhjMDhjOWU2ZjQ2YmI4NDMyMDY4NzQ5MTFkNTY5ODVjZGNiZTU2YjQ"
    },
    {
      "type": "add_label",
      "time": "2023-10-11T08:50:08Z",
      "attributes": [
        {
          "name": "label",
          "value": "hacktoberfest"
        }
      ],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "185",
          "qualifier": "labeled-on-pull_request"
        }
      ],
      "id": "LE_lADODyNbyM5yqp8XzwAAAAJ4uYr9"
    },
    {
      "type": "add_label",
      "time": "2023-10-11T08:50:08Z",
      "attributes": [
        {
          "name": "label",
          "value": "hacktoberfest-accepted"
        }
      ],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "185",
          "qualifier": "labeled-on-pull_request"
        }
      ],
      "id": "LE_lADODyNbyM5yqp8XzwAAAAJ4uYsK"
    },
    {
      "type": "merge_pull_request",
      "time": "2023-10-11T08:50:31Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "185",
          "qualifier": "merged-on-pull_request"
        }
      ],
      "id": "ME_lADODyNbyM5yqp8XzwAAAAJ4uaKs"
    },
    {
      "type": "close_pull_request",
      "time": "2023-10-11T08:50:31Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "185",
          "qualifier": "closed-on-pull_request"
        }
      ],
      "id": "CE_lADODyNbyM5yqp8XzwAAAAJ4uaLM"
    },
    {
      "type": "commit",
      "time": "2023-10-02T06:59:36Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "imhalcyon",
          "qualifier": "authored-by"
        },
        {
          "objectId": "d2bce7dc444640609d4d106155a419c5c65a12c1",
          "qualifier": "sha"
        },
        {
          "objectId": "184",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKGQyYmNlN2RjNDQ0NjQwNjA5ZDRkMTA2MTU1YTQxOWM1YzY1YTEyYzE"
    },
    {
      "type": "commit",
      "time": "2023-10-02T06:59:40Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "imhalcyon",
          "qualifier": "authored-by"
        },
        {
          "objectId": "7c7edbe960400b839cf3b104270fa5043a08d202",
          "qualifier": "sha"
        },
        {
          "objectId": "184",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDdjN2VkYmU5NjA0MDBiODM5Y2YzYjEwNDI3MGZhNTA0M2EwOGQyMDI"
    },
    {
      "type": "commit",
      "time": "2023-10-02T06:59:44Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "imhalcyon",
          "qualifier": "authored-by"
        },
        {
          "objectId": "f86abd4ca5937373f8d6c20402f8d308469e8c50",
          "qualifier": "sha"
        },
        {
          "objectId": "184",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKGY4NmFiZDRjYTU5MzczNzNmOGQ2YzIwNDAyZjhkMzA4NDY5ZThjNTA"
    },
    {
      "type": "commit",
      "time": "2023-10-02T06:59:47Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "imhalcyon",
          "qualifier": "authored-by"
        },
        {
          "objectId": "b81e67bb4cdcc034c34c400ddfa3ccdcf7267b24",
          "qualifier": "sha"
        },
        {
          "objectId": "184",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKGI4MWU2N2JiNGNkY2MwMzRjMzRjNDAwZGRmYTNjY2RjZjcyNjdiMjQ"
    },
    {
      "type": "commit",
      "time": "2023-10-02T06:59:57Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "imhalcyon",
          "qualifier": "authored-by"
        },
        {
          "objectId": "75e44541abceba61fb35375ce19f851623bda2c4",
          "qualifier": "sha"
        },
        {
          "objectId": "184",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDc1ZTQ0NTQxYWJjZWJhNjFmYjM1Mzc1Y2UxOWY4NTE2MjNiZGEyYzQ"
    },
    {
      "type": "commit",
      "time": "2023-10-02T07:00:00Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "imhalcyon",
          "qualifier": "authored-by"
        },
        {
          "objectId": "1987c10c65d1cb87d12895f9f36f3c6d6ae7efc4",
          "qualifier": "sha"
        },
        {
          "objectId": "184",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDE5ODdjMTBjNjVkMWNiODdkMTI4OTVmOWYzNmYzYzZkNmFlN2VmYzQ"
    },
    {
      "type": "commit",
      "time": "2023-10-02T07:00:03Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "imhalcyon",
          "qualifier": "authored-by"
        },
        {
          "objectId": "0b514c96f0a171ad85a451962d4a70f69750b83a",
          "qualifier": "sha"
        },
        {
          "objectId": "184",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDBiNTE0Yzk2ZjBhMTcxYWQ4NWE0NTE5NjJkNGE3MGY2OTc1MGI4M2E"
    },
    {
      "type": "commit",
      "time": "2023-10-02T07:00:07Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "imhalcyon",
          "qualifier": "authored-by"
        },
        {
          "objectId": "302f764d767681b86122b6020de1b556860b9ec8",
          "qualifier": "sha"
        },
        {
          "objectId": "184",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDMwMmY3NjRkNzY3NjgxYjg2MTIyYjYwMjBkZTFiNTU2ODYwYjllYzg"
    },
    {
      "type": "commit",
      "time": "2023-10-02T07:00:16Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "imhalcyon",
          "qualifier": "authored-by"
        },
        {
          "objectId": "013bbe72da49b3416d409dd64c5449a9d7d06c73",
          "qualifier": "sha"
        },
        {
          "objectId": "184",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDAxM2JiZTcyZGE0OWIzNDE2ZDQwOWRkNjRjNTQ0OWE5ZDdkMDZjNzM"
    },
    {
      "type": "commit",
      "time": "2023-10-02T07:00:20Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "imhalcyon",
          "qualifier": "authored-by"
        },
        {
          "objectId": "625c12c28c5277858e044c48eac9f4fac6825f10",
          "qualifier": "sha"
        },
        {
          "objectId": "184",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDYyNWMxMmMyOGM1Mjc3ODU4ZTA0NGM0OGVhYzlmNGZhYzY4MjVmMTA"
    },
    {
      "type": "commit",
      "time": "2023-10-02T07:00:24Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "imhalcyon",
          "qualifier": "authored-by"
        },
        {
          "objectId": "9e59007f89fcce453d91080104008a38a1354d10",
          "qualifier": "sha"
        },
        {
          "objectId": "184",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDllNTkwMDdmODlmY2NlNDUzZDkxMDgwMTA0MDA4YTM4YTEzNTRkMTA"
    },
    {
      "type": "commit",
      "time": "2023-10-02T07:01:12Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "imhalcyon",
          "qualifier": "authored-by"
        },
        {
          "objectId": "f5e194d4a9ad718884f595912e9bf4c4ba19a4a2",
          "qualifier": "sha"
        },
        {
          "objectId": "184",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKGY1ZTE5NGQ0YTlhZDcxODg4NGY1OTU5MTJlOWJmNGM0YmExOWE0YTI"
    },
    {
      "type": "commit",
      "time": "2023-10-02T07:04:14Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "imhalcyon",
          "qualifier": "authored-by"
        },
        {
          "objectId": "472530df40d2132b8d770b70744426a57d313c9a",
          "qualifier": "sha"
        },
        {
          "objectId": "184",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDQ3MjUzMGRmNDBkMjEzMmI4ZDc3MGI3MDc0NDQyNmE1N2QzMTNjOWE"
    },
    {
      "type": "commit",
      "time": "2023-10-02T07:26:39Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "imhalcyon",
          "qualifier": "authored-by"
        },
        {
          "objectId": "cf3f1c73d8fa91f48b50eef2f669e68e9cbe80fa",
          "qualifier": "sha"
        },
        {
          "objectId": "184",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKGNmM2YxYzczZDhmYTkxZjQ4YjUwZWVmMmY2NjllNjhlOWNiZTgwZmE"
    },
    {
      "type": "commit",
      "time": "2023-10-02T07:32:02Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "imhalcyon",
          "qualifier": "authored-by"
        },
        {
          "objectId": "7a6c280526fc16aa5bbb144d66456187df6635a5",
          "qualifier": "sha"
        },
        {
          "objectId": "184",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDdhNmMyODA1MjZmYzE2YWE1YmJiMTQ0ZDY2NDU2MTg3ZGY2NjM1YTU"
    },
    {
      "type": "commit",
      "time": "2023-10-02T07:32:38Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "imhalcyon",
          "qualifier": "authored-by"
        },
        {
          "objectId": "91e1f4e4a9b9f8d01450e621e00573f5a3a28362",
          "qualifier": "sha"
        },
        {
          "objectId": "184",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDkxZTFmNGU0YTliOWY4ZDAxNDUwZTYyMWUwMDU3M2Y1YTNhMjgzNjI"
    },
    {
      "type": "commit",
      "time": "2023-10-02T07:41:19Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "imhalcyon",
          "qualifier": "authored-by"
        },
        {
          "objectId": "c659d53aa1e400ef21f25dd4885204314728587e",
          "qualifier": "sha"
        },
        {
          "objectId": "184",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKGM2NTlkNTNhYTFlNDAwZWYyMWYyNWRkNDg4NTIwNDMxNDcyODU4N2U"
    },
    {
      "type": "comment_pull_request",
      "time": "2023-10-02T14:55:47Z",
      "attributes": [
        {
          "name": "comment",
          "value": "Hi there! Firstly, huge thanks for your contributions and effort! I've gone through the recent commit, and I noticed a few things that might need some adjustments:\r\n\r\n1. The extracted entities graphs seem a bit stretched. I wonder if setting the layout to \"wide\" might enhance the visualization. You can check the screenshot ![image](https://github.com/srbhr/Resume-Matcher/assets/110348311/d1192543-1d55-4cac-836b-b8db7abd5e10).\r\n\r\n2. I observed that the key topics are currently being extracted only from the job description and not from the resume. Ideally, having key topics from both sources would provide a more comprehensive analysis. Although keywords and values are accurately extracted from the resume, the same isn't happening for the JD.\r\n![image](https://github.com/srbhr/Resume-Matcher/assets/110348311/5800841f-a668-474b-bd42-ce9c89eada0b)\r\n![image](https://github.com/srbhr/Resume-Matcher/assets/110348311/d4dd650d-052a-40d8-b372-0eca65db35bd)\r\n\r\n\r\n4. One thing I noticed during my run was that the score wasn't displayed. Understanding the match score is crucial, so I'm wondering if there's a reason why it's not visible.\r\n\r\nYour work is greatly appreciated, and I'm looking forward to your insights on these observations! \ud83c\udf1f"
        }
      ],
      "relationships": [
        {
          "objectId": "Devasy Patel",
          "qualifier": "commented-by"
        },
        {
          "objectId": "184",
          "qualifier": "on"
        }
      ],
      "id": "IC_kwDODyNbyM5n5r0e"
    },
    {
      "type": "commit",
      "time": "2023-10-02T14:59:23Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "imhalcyon",
          "qualifier": "authored-by"
        },
        {
          "objectId": "3913187e9417a22f831316ec635c9971adef37bb",
          "qualifier": "sha"
        },
        {
          "objectId": "184",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDM5MTMxODdlOTQxN2EyMmY4MzEzMTZlYzYzNWM5OTcxYWRlZjM3YmI"
    },
    {
      "type": "comment_review",
      "time": "2023-10-02T15:06:57Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Devasy Patel",
          "qualifier": "commented-by"
        },
        {
          "objectId": "184",
          "qualifier": "for-pull-request"
        }
      ],
      "id": "1652949398"
    },
    {
      "type": "commit",
      "time": "2023-10-06T14:17:12Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "authored-by"
        },
        {
          "objectId": "b1f6917a7eda69869dbe49db659ea28a906906c3",
          "qualifier": "sha"
        },
        {
          "objectId": "184",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKGIxZjY5MTdhN2VkYTY5ODY5ZGJlNDlkYjY1OWVhMjhhOTA2OTA2YzM"
    },
    {
      "type": "comment_pull_request",
      "time": "2023-10-07T15:36:23Z",
      "attributes": [
        {
          "name": "comment",
          "value": "@imhalcyon I need those resume jsons for the streamlit cloud file to run the demo properly. "
        }
      ],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "commented-by"
        },
        {
          "objectId": "184",
          "qualifier": "on"
        }
      ],
      "id": "IC_kwDODyNbyM5oaW-v"
    },
    {
      "type": "commit",
      "time": "2023-10-07T15:50:54Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "imhalcyon",
          "qualifier": "authored-by"
        },
        {
          "objectId": "844bcb374c9578e8703af7e8cde2ebe92d032afd",
          "qualifier": "sha"
        },
        {
          "objectId": "184",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDg0NGJjYjM3NGM5NTc4ZTg3MDNhZjdlOGNkZTJlYmU5MmQwMzJhZmQ"
    },
    {
      "type": "comment_pull_request",
      "time": "2023-10-07T15:52:28Z",
      "attributes": [
        {
          "name": "comment",
          "value": "@srbhr , sure. I've reverted that commit. Please check now."
        }
      ],
      "relationships": [
        {
          "objectId": "Abhishek Mathur",
          "qualifier": "commented-by"
        },
        {
          "objectId": "184",
          "qualifier": "on"
        }
      ],
      "id": "IC_kwDODyNbyM5oaXyR"
    },
    {
      "type": "commit",
      "time": "2023-10-12T17:00:02Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "authored-by"
        },
        {
          "objectId": "d412a4b75f86ae33369256659c1ca1aed146bb78",
          "qualifier": "sha"
        },
        {
          "objectId": "184",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKGQ0MTJhNGI3NWY4NmFlMzMzNjkyNTY2NTljMWNhMWFlZDE0NmJiNzg"
    },
    {
      "type": "commit",
      "time": "2023-10-20T05:10:20Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "authored-by"
        },
        {
          "objectId": "e77cbffe38e68db21013950630e67e3fd0dd47b0",
          "qualifier": "sha"
        },
        {
          "objectId": "184",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKGU3N2NiZmZlMzhlNjhkYjIxMDEzOTUwNjMwZTY3ZTNmZDBkZDQ3YjA"
    },
    {
      "type": "commit",
      "time": "2023-10-02T06:44:16Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "imhalcyon",
          "qualifier": "authored-by"
        },
        {
          "objectId": "4c6246510978ac5a4e2e2f91050ec63d8e4473be",
          "qualifier": "sha"
        },
        {
          "objectId": "183",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDRjNjI0NjUxMDk3OGFjNWE0ZTJlMmY5MTA1MGVjNjNkOGU0NDczYmU"
    },
    {
      "type": "commit",
      "time": "2023-10-06T14:16:11Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "authored-by"
        },
        {
          "objectId": "7a0bc0bd87ff994186b9afc457c163af528fa4c8",
          "qualifier": "sha"
        },
        {
          "objectId": "183",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDdhMGJjMGJkODdmZjk5NDE4NmI5YWZjNDU3YzE2M2FmNTI4ZmE0Yzg"
    },
    {
      "type": "commit",
      "time": "2023-10-08T07:47:43Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "authored-by"
        },
        {
          "objectId": "4411c363603942584e039b0648599a37eb9d329c",
          "qualifier": "sha"
        },
        {
          "objectId": "183",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDQ0MTFjMzYzNjAzOTQyNTg0ZTAzOWIwNjQ4NTk5YTM3ZWI5ZDMyOWM"
    },
    {
      "type": "commit",
      "time": "2023-10-08T07:50:32Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "authored-by"
        },
        {
          "objectId": "e0027b3a92ead1072ceea947891dd859f0693932",
          "qualifier": "sha"
        },
        {
          "objectId": "183",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKGUwMDI3YjNhOTJlYWQxMDcyY2VlYTk0Nzg5MWRkODU5ZjA2OTM5MzI"
    },
    {
      "type": "rename_pull_request",
      "time": "2023-10-08T07:50:57Z",
      "attributes": [
        {
          "name": "renamed-to",
          "value": "Upgrade: streamlit to 1.27.1, streamlit-extras to 0.3.2, htbuilder to 0.6.2, Pillow to 10.0.1"
        }
      ],
      "relationships": [
        {
          "objectId": "Abhishek Mathur",
          "qualifier": "change-issued-by"
        },
        {
          "objectId": "183",
          "qualifier": "for-pr"
        }
      ],
      "id": "RTE_lADODyNbyM5yhWQfzwAAAAJ2012b"
    },
    {
      "type": "comment_pull_request",
      "time": "2023-10-10T05:51:31Z",
      "attributes": [
        {
          "name": "comment",
          "value": "@imhalcyon which OS did you test this on? It's working for me in WSL. I think we need a mac user to test and share their results. "
        }
      ],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "commented-by"
        },
        {
          "objectId": "183",
          "qualifier": "on"
        }
      ],
      "id": "IC_kwDODyNbyM5okoxw"
    },
    {
      "type": "add_label",
      "time": "2023-10-10T05:51:44Z",
      "attributes": [
        {
          "name": "label",
          "value": "hacktoberfest"
        }
      ],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "183",
          "qualifier": "labeled-on-pull_request"
        }
      ],
      "id": "LE_lADODyNbyM5yhWQfzwAAAAJ3wyRM"
    },
    {
      "type": "add_label",
      "time": "2023-10-10T05:51:44Z",
      "attributes": [
        {
          "name": "label",
          "value": "hacktoberfest-accepted"
        }
      ],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "183",
          "qualifier": "labeled-on-pull_request"
        }
      ],
      "id": "LE_lADODyNbyM5yhWQfzwAAAAJ3wyRO"
    },
    {
      "type": "comment_pull_request",
      "time": "2023-10-10T05:58:06Z",
      "attributes": [
        {
          "name": "comment",
          "value": "@srbhr , I've tested this on Windows, non-WSL mode."
        }
      ],
      "relationships": [
        {
          "objectId": "Abhishek Mathur",
          "qualifier": "commented-by"
        },
        {
          "objectId": "183",
          "qualifier": "on"
        }
      ],
      "id": "IC_kwDODyNbyM5okqXj"
    },
    {
      "type": "approve_review",
      "time": "2023-10-11T08:52:19Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "approved-by"
        },
        {
          "objectId": "183",
          "qualifier": "for-pull-request"
        }
      ],
      "id": "1670474671"
    },
    {
      "type": "comment_review",
      "time": "2023-10-11T08:53:04Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "commented-by"
        },
        {
          "objectId": "183",
          "qualifier": "for-pull-request"
        }
      ],
      "id": "1670476219"
    },
    {
      "type": "commit",
      "time": "2023-10-11T08:55:08Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "authored-by"
        },
        {
          "objectId": "23d2fb131e8f982ba39ffb0243f04c0fca5ba3dc",
          "qualifier": "sha"
        },
        {
          "objectId": "183",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDIzZDJmYjEzMWU4Zjk4MmJhMzlmZmIwMjQzZjA0YzBmY2E1YmEzZGM"
    },
    {
      "type": "comment_pull_request",
      "time": "2023-10-11T08:55:27Z",
      "attributes": [
        {
          "name": "comment",
          "value": " @imhalcyon I've fixed the merge conflict. "
        }
      ],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "commented-by"
        },
        {
          "objectId": "183",
          "qualifier": "on"
        }
      ],
      "id": "IC_kwDODyNbyM5ovHMy"
    },
    {
      "type": "merge_pull_request",
      "time": "2023-10-11T08:55:33Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "183",
          "qualifier": "merged-on-pull_request"
        }
      ],
      "id": "ME_lADODyNbyM5yhWQfzwAAAAJ4uzAy"
    },
    {
      "type": "close_pull_request",
      "time": "2023-10-11T08:55:33Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "183",
          "qualifier": "closed-on-pull_request"
        }
      ],
      "id": "CE_lADODyNbyM5yhWQfzwAAAAJ4uzCX"
    },
    {
      "type": "commit",
      "time": "2023-10-01T16:23:13Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "imhalcyon",
          "qualifier": "authored-by"
        },
        {
          "objectId": "c5b90c3806c383f5a109ede10d288dbf9b9de488",
          "qualifier": "sha"
        },
        {
          "objectId": "182",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKGM1YjkwYzM4MDZjMzgzZjVhMTA5ZWRlMTBkMjg4ZGJmOWI5ZGU0ODg"
    },
    {
      "type": "commit",
      "time": "2023-10-01T16:24:24Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "imhalcyon",
          "qualifier": "authored-by"
        },
        {
          "objectId": "2d28cab6d38083b5a9cff6ea06a23dc3194a2d29",
          "qualifier": "sha"
        },
        {
          "objectId": "182",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDJkMjhjYWI2ZDM4MDgzYjVhOWNmZjZlYTA2YTIzZGMzMTk0YTJkMjk"
    },
    {
      "type": "commit",
      "time": "2023-10-01T16:24:59Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "imhalcyon",
          "qualifier": "authored-by"
        },
        {
          "objectId": "9fb5f9f04d23e3e47fbf859f7ab3a5a365b4f729",
          "qualifier": "sha"
        },
        {
          "objectId": "182",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDlmYjVmOWYwNGQyM2UzZTQ3ZmJmODU5ZjdhYjNhNWEzNjViNGY3Mjk"
    },
    {
      "type": "commit",
      "time": "2023-10-01T16:31:16Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "imhalcyon",
          "qualifier": "authored-by"
        },
        {
          "objectId": "dae1dd7ecd7fe68272b9fb7136fe55260f3a8421",
          "qualifier": "sha"
        },
        {
          "objectId": "182",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKGRhZTFkZDdlY2Q3ZmU2ODI3MmI5ZmI3MTM2ZmU1NTI2MGYzYTg0MjE"
    },
    {
      "type": "approve_review",
      "time": "2023-10-02T04:41:19Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Devasy Patel",
          "qualifier": "approved-by"
        },
        {
          "objectId": "182",
          "qualifier": "for-pull-request"
        }
      ],
      "id": "1652095864"
    },
    {
      "type": "commit",
      "time": "2023-10-06T14:16:02Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "authored-by"
        },
        {
          "objectId": "2843908a00ae32be5a9f4d0d275d7a2c307877fa",
          "qualifier": "sha"
        },
        {
          "objectId": "182",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDI4NDM5MDhhMDBhZTMyYmU1YTlmNGQwZDI3NWQ3YTJjMzA3ODc3ZmE"
    },
    {
      "type": "commit",
      "time": "2023-10-07T17:03:11Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "authored-by"
        },
        {
          "objectId": "d37e5c30f199f813338d54ada39dbeb6ddb50b72",
          "qualifier": "sha"
        },
        {
          "objectId": "182",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKGQzN2U1YzMwZjE5OWY4MTMzMzhkNTRhZGEzOWRiZWI2ZGRiNTBiNzI"
    },
    {
      "type": "commit",
      "time": "2023-10-12T16:55:55Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "authored-by"
        },
        {
          "objectId": "0bbb4e9ab48e28b653958bffbccba3fc9e551a0e",
          "qualifier": "sha"
        },
        {
          "objectId": "182",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDBiYmI0ZTlhYjQ4ZTI4YjY1Mzk1OGJmZmJjY2JhM2ZjOWU1NTFhMGU"
    },
    {
      "type": "comment_pull_request",
      "time": "2023-10-13T19:25:35Z",
      "attributes": [
        {
          "name": "comment",
          "value": "@imhalcyon please mention this change in the issue that you're working on. "
        }
      ],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "commented-by"
        },
        {
          "objectId": "182",
          "qualifier": "on"
        }
      ],
      "id": "IC_kwDODyNbyM5pBxn4"
    },
    {
      "type": "comment_pull_request",
      "time": "2023-10-14T04:28:36Z",
      "attributes": [
        {
          "name": "comment",
          "value": "@srbhr , added reference to #195 "
        }
      ],
      "relationships": [
        {
          "objectId": "Abhishek Mathur",
          "qualifier": "commented-by"
        },
        {
          "objectId": "182",
          "qualifier": "on"
        }
      ],
      "id": "IC_kwDODyNbyM5pDwYt"
    },
    {
      "type": "commit",
      "time": "2023-10-20T05:09:39Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "authored-by"
        },
        {
          "objectId": "3609d03925f8ca57a5e522507124eb0e2e927c3e",
          "qualifier": "sha"
        },
        {
          "objectId": "182",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDM2MDlkMDM5MjVmOGNhNTdhNWU1MjI1MDcxMjRlYjBlMmU5MjdjM2U"
    },
    {
      "type": "commit",
      "time": "2023-10-29T13:54:52Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "authored-by"
        },
        {
          "objectId": "76f10195598573a4720882ce28da464c410a912e",
          "qualifier": "sha"
        },
        {
          "objectId": "182",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDc2ZjEwMTk1NTk4NTczYTQ3MjA4ODJjZTI4ZGE0NjRjNDEwYTkxMmU"
    },
    {
      "type": "approve_review",
      "time": "2023-10-30T19:54:48Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Devasy Patel",
          "qualifier": "approved-by"
        },
        {
          "objectId": "182",
          "qualifier": "for-pull-request"
        }
      ],
      "id": "1704961595"
    },
    {
      "type": "comment_pull_request",
      "time": "2023-10-31T04:33:01Z",
      "attributes": [
        {
          "name": "comment",
          "value": "Thanks @Devasy23 for checking this PR. I've tested it and it's also going in well. Great work @imhalcyon \r\n"
        }
      ],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "commented-by"
        },
        {
          "objectId": "182",
          "qualifier": "on"
        }
      ],
      "id": "IC_kwDODyNbyM5qescN"
    },
    {
      "type": "add_label",
      "time": "2023-10-31T04:33:12Z",
      "attributes": [
        {
          "name": "label",
          "value": "hacktoberfest"
        }
      ],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "182",
          "qualifier": "labeled-on-pull_request"
        }
      ],
      "id": "LE_lADODyNbyM5yfetIzwAAAAKEqDjR"
    },
    {
      "type": "add_label",
      "time": "2023-10-31T04:33:12Z",
      "attributes": [
        {
          "name": "label",
          "value": "hacktoberfest-accepted"
        }
      ],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "182",
          "qualifier": "labeled-on-pull_request"
        }
      ],
      "id": "LE_lADODyNbyM5yfetIzwAAAAKEqDjV"
    },
    {
      "type": "approve_review",
      "time": "2023-10-31T04:33:26Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "approved-by"
        },
        {
          "objectId": "182",
          "qualifier": "for-pull-request"
        }
      ],
      "id": "1705430072"
    },
    {
      "type": "merge_pull_request",
      "time": "2023-10-31T04:33:32Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "182",
          "qualifier": "merged-on-pull_request"
        }
      ],
      "id": "ME_lADODyNbyM5yfetIzwAAAAKEqD5m"
    },
    {
      "type": "close_pull_request",
      "time": "2023-10-31T04:33:32Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "182",
          "qualifier": "closed-on-pull_request"
        }
      ],
      "id": "CE_lADODyNbyM5yfetIzwAAAAKEqD5z"
    },
    {
      "type": "commit",
      "time": "2023-09-29T14:02:53Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Tanya",
          "qualifier": "authored-by"
        },
        {
          "objectId": "95b3d008335edd7499ce6cdfd111c88892e028da",
          "qualifier": "sha"
        },
        {
          "objectId": "180",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDk1YjNkMDA4MzM1ZWRkNzQ5OWNlNmNkZmQxMTFjODg4OTJlMDI4ZGE"
    },
    {
      "type": "commit",
      "time": "2023-10-01T15:11:07Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Tanya",
          "qualifier": "authored-by"
        },
        {
          "objectId": "8b3474cec5dc9ea7437e9683656e2ea423912785",
          "qualifier": "sha"
        },
        {
          "objectId": "180",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDhiMzQ3NGNlYzVkYzllYTc0MzdlOTY4MzY1NmUyZWE0MjM5MTI3ODU"
    },
    {
      "type": "commit",
      "time": "2023-10-01T15:11:07Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Tanya",
          "qualifier": "authored-by"
        },
        {
          "objectId": "ad493ac8f6306195e2bb4889a2286546a9013e06",
          "qualifier": "sha"
        },
        {
          "objectId": "180",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKGFkNDkzYWM4ZjYzMDYxOTVlMmJiNDg4OWEyMjg2NTQ2YTkwMTNlMDY"
    },
    {
      "type": "commit",
      "time": "2023-10-01T15:11:08Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Tanya",
          "qualifier": "authored-by"
        },
        {
          "objectId": "56e96f2b884d259aad95ec7b09d9d927a5dcfd68",
          "qualifier": "sha"
        },
        {
          "objectId": "180",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDU2ZTk2ZjJiODg0ZDI1OWFhZDk1ZWM3YjA5ZDlkOTI3YTVkY2ZkNjg"
    },
    {
      "type": "commit",
      "time": "2023-10-01T15:11:08Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Tanya",
          "qualifier": "authored-by"
        },
        {
          "objectId": "92ae024cd7dd6217947ea8ad1c413c92bda1f59d",
          "qualifier": "sha"
        },
        {
          "objectId": "180",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDkyYWUwMjRjZDdkZDYyMTc5NDdlYThhZDFjNDEzYzkyYmRhMWY1OWQ"
    },
    {
      "type": "commit",
      "time": "2023-10-01T15:11:08Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Tanya",
          "qualifier": "authored-by"
        },
        {
          "objectId": "edd754bdb5534a99e1d9d329e6903e26fa6c3dbe",
          "qualifier": "sha"
        },
        {
          "objectId": "180",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKGVkZDc1NGJkYjU1MzRhOTllMWQ5ZDMyOWU2OTAzZTI2ZmE2YzNkYmU"
    },
    {
      "type": "commit",
      "time": "2023-10-01T15:33:33Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Tanya",
          "qualifier": "authored-by"
        },
        {
          "objectId": "c266308942450547857401533f23ad2d35d81314",
          "qualifier": "sha"
        },
        {
          "objectId": "180",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKGMyNjYzMDg5NDI0NTA1NDc4NTc0MDE1MzNmMjNhZDJkMzVkODEzMTQ"
    },
    {
      "type": "commit",
      "time": "2023-10-01T15:36:56Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "authored-by"
        },
        {
          "objectId": "7e306f19811842f1057078ce7674444039a81875",
          "qualifier": "sha"
        },
        {
          "objectId": "180",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDdlMzA2ZjE5ODExODQyZjEwNTcwNzhjZTc2NzQ0NDQwMzlhODE4NzU"
    },
    {
      "type": "close_pull_request",
      "time": "2023-10-01T15:37:31Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Tanya Kemkar",
          "qualifier": "authored-by"
        },
        {
          "objectId": "180",
          "qualifier": "closed-on-pull_request"
        }
      ],
      "id": "CE_lADODyNbyM5yfYTBzwAAAAJzCO5G"
    },
    {
      "type": "commit",
      "time": "2023-10-01T14:11:18Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Sayvai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "f2df366e1f4739b1207946be431f18181d41bb9c",
          "qualifier": "sha"
        },
        {
          "objectId": "179",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKGYyZGYzNjZlMWY0NzM5YjEyMDc5NDZiZTQzMWYxODE4MWQ0MWJiOWM"
    },
    {
      "type": "merge_pull_request",
      "time": "2023-10-06T10:11:30Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "179",
          "qualifier": "merged-on-pull_request"
        }
      ],
      "id": "ME_lADODyNbyM5yfPg5zwAAAAJ2Ns9B"
    },
    {
      "type": "close_pull_request",
      "time": "2023-10-06T10:11:31Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "179",
          "qualifier": "closed-on-pull_request"
        }
      ],
      "id": "CE_lADODyNbyM5yfPg5zwAAAAJ2Ns95"
    },
    {
      "type": "add_label",
      "time": "2023-10-10T05:46:57Z",
      "attributes": [
        {
          "name": "label",
          "value": "hacktoberfest"
        }
      ],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "179",
          "qualifier": "labeled-on-pull_request"
        }
      ],
      "id": "LE_lADODyNbyM5yfPg5zwAAAAJ3wrb1"
    },
    {
      "type": "add_label",
      "time": "2023-10-10T05:46:57Z",
      "attributes": [
        {
          "name": "label",
          "value": "hacktoberfest-accepted"
        }
      ],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "179",
          "qualifier": "labeled-on-pull_request"
        }
      ],
      "id": "LE_lADODyNbyM5yfPg5zwAAAAJ3wrb4"
    },
    {
      "type": "commit",
      "time": "2023-09-29T18:14:58Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "authored-by"
        },
        {
          "objectId": "9293bec58ce64748dbfb3f14d3f224fd4ae0455c",
          "qualifier": "sha"
        },
        {
          "objectId": "176",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDkyOTNiZWM1OGNlNjQ3NDhkYmZiM2YxNGQzZjIyNGZkNGFlMDQ1NWM"
    },
    {
      "type": "approve_review",
      "time": "2023-10-04T13:49:45Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "approved-by"
        },
        {
          "objectId": "176",
          "qualifier": "for-pull-request"
        }
      ],
      "id": "1657589043"
    },
    {
      "type": "merge_pull_request",
      "time": "2023-10-04T13:50:05Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "176",
          "qualifier": "merged-on-pull_request"
        }
      ],
      "id": "ME_lADODyNbyM5ybKKOzwAAAAJ06ec4"
    },
    {
      "type": "close_pull_request",
      "time": "2023-10-04T13:50:05Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "176",
          "qualifier": "closed-on-pull_request"
        }
      ],
      "id": "CE_lADODyNbyM5ybKKOzwAAAAJ06edl"
    },
    {
      "type": "comment_pull_request",
      "time": "2023-10-04T16:57:34Z",
      "attributes": [
        {
          "name": "comment",
          "value": "No prob @srbhr! Happy to help :)"
        }
      ],
      "relationships": [
        {
          "objectId": "Nathan \ud83d\udd36 Tarbert",
          "qualifier": "commented-by"
        },
        {
          "objectId": "176",
          "qualifier": "on"
        }
      ],
      "id": "IC_kwDODyNbyM5oJaJq"
    },
    {
      "type": "add_label",
      "time": "2023-10-10T05:47:03Z",
      "attributes": [
        {
          "name": "label",
          "value": "hacktoberfest"
        }
      ],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "176",
          "qualifier": "labeled-on-pull_request"
        }
      ],
      "id": "LE_lADODyNbyM5ybKKOzwAAAAJ3wrnu"
    },
    {
      "type": "add_label",
      "time": "2023-10-10T05:47:03Z",
      "attributes": [
        {
          "name": "label",
          "value": "hacktoberfest-accepted"
        }
      ],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "176",
          "qualifier": "labeled-on-pull_request"
        }
      ],
      "id": "LE_lADODyNbyM5ybKKOzwAAAAJ3wrn2"
    },
    {
      "type": "commit",
      "time": "2023-09-29T15:31:40Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Sayvai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "35b639aed431b933dd1240fb32b55915beb782f6",
          "qualifier": "sha"
        },
        {
          "objectId": "172",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDM1YjYzOWFlZDQzMWI5MzNkZDEyNDBmYjMyYjU1OTE1YmViNzgyZjY"
    },
    {
      "type": "merge_pull_request",
      "time": "2023-10-06T10:11:08Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "172",
          "qualifier": "merged-on-pull_request"
        }
      ],
      "id": "ME_lADODyNbyM5yaX2WzwAAAAJ2Nr83"
    },
    {
      "type": "close_pull_request",
      "time": "2023-10-06T10:11:08Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "172",
          "qualifier": "closed-on-pull_request"
        }
      ],
      "id": "CE_lADODyNbyM5yaX2WzwAAAAJ2Nr9J"
    },
    {
      "type": "commit",
      "time": "2023-09-29T15:37:44Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "authored-by"
        },
        {
          "objectId": "fbbeecedb0f4a56fd37ced8441e5a527a46613bc",
          "qualifier": "sha"
        },
        {
          "objectId": "171",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKGZiYmVlY2VkYjBmNGE1NmZkMzdjZWQ4NDQxZTVhNTI3YTQ2NjEzYmM"
    },
    {
      "type": "comment_pull_request",
      "time": "2023-09-29T15:46:43Z",
      "attributes": [
        {
          "name": "comment",
          "value": "closes issue-:https://github.com/srbhr/Resume-Matcher/issues/170"
        }
      ],
      "relationships": [
        {
          "objectId": "Nathan \ud83d\udd36 Tarbert",
          "qualifier": "commented-by"
        },
        {
          "objectId": "171",
          "qualifier": "on"
        }
      ],
      "id": "IC_kwDODyNbyM5nxx3g"
    },
    {
      "type": "comment_review",
      "time": "2023-09-29T17:44:09Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Sayvai",
          "qualifier": "commented-by"
        },
        {
          "objectId": "171",
          "qualifier": "for-pull-request"
        }
      ],
      "id": "1651242205"
    },
    {
      "type": "rename_pull_request",
      "time": "2023-09-29T18:03:54Z",
      "attributes": [
        {
          "name": "renamed-to",
          "value": "Create a SECURITY.md"
        }
      ],
      "relationships": [
        {
          "objectId": "Nathan \ud83d\udd36 Tarbert",
          "qualifier": "change-issued-by"
        },
        {
          "objectId": "171",
          "qualifier": "for-pr"
        }
      ],
      "id": "RTE_lADODyNbyM5yaV_WzwAAAAJysLv7"
    },
    {
      "type": "approve_review",
      "time": "2023-10-04T13:52:56Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "approved-by"
        },
        {
          "objectId": "171",
          "qualifier": "for-pull-request"
        }
      ],
      "id": "1657596935"
    },
    {
      "type": "merge_pull_request",
      "time": "2023-10-04T13:53:04Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "171",
          "qualifier": "merged-on-pull_request"
        }
      ],
      "id": "ME_lADODyNbyM5yaV_WzwAAAAJ06oRD"
    },
    {
      "type": "close_pull_request",
      "time": "2023-10-04T13:53:04Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "171",
          "qualifier": "closed-on-pull_request"
        }
      ],
      "id": "CE_lADODyNbyM5yaV_WzwAAAAJ06oRk"
    },
    {
      "type": "add_label",
      "time": "2023-10-10T05:47:11Z",
      "attributes": [
        {
          "name": "label",
          "value": "hacktoberfest"
        }
      ],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "171",
          "qualifier": "labeled-on-pull_request"
        }
      ],
      "id": "LE_lADODyNbyM5yaV_WzwAAAAJ3wrzt"
    },
    {
      "type": "add_label",
      "time": "2023-10-10T05:47:11Z",
      "attributes": [
        {
          "name": "label",
          "value": "hacktoberfest-accepted"
        }
      ],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "171",
          "qualifier": "labeled-on-pull_request"
        }
      ],
      "id": "LE_lADODyNbyM5yaV_WzwAAAAJ3wrzz"
    },
    {
      "type": "comment_review",
      "time": "2023-09-29T14:51:28Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Sayvai",
          "qualifier": "commented-by"
        },
        {
          "objectId": "169",
          "qualifier": "for-pull-request"
        }
      ],
      "id": "1650946144"
    },
    {
      "type": "commit",
      "time": "2023-09-29T15:07:05Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Sayvai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "8997838a9050dee48c5df8c74c4c12a857f70884",
          "qualifier": "sha"
        },
        {
          "objectId": "169",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDg5OTc4MzhhOTA1MGRlZTQ4YzVkZjhjNzRjNGMxMmE4NTdmNzA4ODQ"
    },
    {
      "type": "merge_pull_request",
      "time": "2023-10-06T09:49:12Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "169",
          "qualifier": "merged-on-pull_request"
        }
      ],
      "id": "ME_lADODyNbyM5yZ_DrzwAAAAJ2M4yT"
    },
    {
      "type": "close_pull_request",
      "time": "2023-10-06T09:49:13Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "169",
          "qualifier": "closed-on-pull_request"
        }
      ],
      "id": "CE_lADODyNbyM5yZ_DrzwAAAAJ2M4yy"
    },
    {
      "type": "add_label",
      "time": "2023-10-10T05:51:53Z",
      "attributes": [
        {
          "name": "label",
          "value": "hacktoberfest"
        }
      ],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "169",
          "qualifier": "labeled-on-pull_request"
        }
      ],
      "id": "LE_lADODyNbyM5yZ_DrzwAAAAJ3wyd-"
    },
    {
      "type": "add_label",
      "time": "2023-10-10T05:51:53Z",
      "attributes": [
        {
          "name": "label",
          "value": "hacktoberfest-accepted"
        }
      ],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "169",
          "qualifier": "labeled-on-pull_request"
        }
      ],
      "id": "LE_lADODyNbyM5yZ_DrzwAAAAJ3wyeG"
    },
    {
      "type": "commit",
      "time": "2023-09-28T16:08:02Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Hiren Thakore",
          "qualifier": "authored-by"
        },
        {
          "objectId": "31bbcb18e014cb58ba594793fe8265c8ce248819",
          "qualifier": "sha"
        },
        {
          "objectId": "168",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDMxYmJjYjE4ZTAxNGNiNThiYTU5NDc5M2ZlODI2NWM4Y2UyNDg4MTk"
    },
    {
      "type": "comment_pull_request",
      "time": "2023-09-28T16:10:50Z",
      "attributes": [
        {
          "name": "comment",
          "value": "We still have to look into adding \"How to install on Mac, Ubuntu, and Windows with screenshots.\""
        }
      ],
      "relationships": [
        {
          "objectId": "Hiren Thakore",
          "qualifier": "commented-by"
        },
        {
          "objectId": "168",
          "qualifier": "on"
        }
      ],
      "id": "IC_kwDODyNbyM5nsJvD"
    },
    {
      "type": "comment_pull_request",
      "time": "2023-09-28T17:55:19Z",
      "attributes": [
        {
          "name": "comment",
          "value": "This is not what I want to have. Better to have a discussion this Sunday. When we're having the meetup. \r\n"
        }
      ],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "commented-by"
        },
        {
          "objectId": "168",
          "qualifier": "on"
        }
      ],
      "id": "IC_kwDODyNbyM5nstnX"
    },
    {
      "type": "close_pull_request",
      "time": "2023-10-25T14:24:12Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "168",
          "qualifier": "closed-on-pull_request"
        }
      ],
      "id": "CE_lADODyNbyM5yUCNTzwAAAAKB17Ej"
    },
    {
      "type": "commit",
      "time": "2023-09-28T13:58:17Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "authored-by"
        },
        {
          "objectId": "b61e88cb92583200f2f2d73f110fb73bf1fde5a6",
          "qualifier": "sha"
        },
        {
          "objectId": "167",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKGI2MWU4OGNiOTI1ODMyMDBmMmYyZDczZjExMGZiNzNiZjFmZGU1YTY"
    },
    {
      "type": "comment_pull_request",
      "time": "2023-09-29T06:43:29Z",
      "attributes": [
        {
          "name": "comment",
          "value": "Thanks @Devasy23 for the PR I will test it out and let you know. "
        }
      ],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "commented-by"
        },
        {
          "objectId": "167",
          "qualifier": "on"
        }
      ],
      "id": "IC_kwDODyNbyM5nvC0T"
    },
    {
      "type": "commit",
      "time": "2023-09-30T19:55:46Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Devasy23",
          "qualifier": "authored-by"
        },
        {
          "objectId": "ac860942fc9e2a321ecb5f322d70a55a49df0e54",
          "qualifier": "sha"
        },
        {
          "objectId": "167",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKGFjODYwOTQyZmM5ZTJhMzIxZWNiNWYzMjJkNzBhNTVhNDlkZjBlNTQ"
    },
    {
      "type": "commit",
      "time": "2023-10-02T04:56:16Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Devasy23",
          "qualifier": "authored-by"
        },
        {
          "objectId": "dc93bab65c6fb3da9cb4233739c60fe2c8e82e85",
          "qualifier": "sha"
        },
        {
          "objectId": "167",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKGRjOTNiYWI2NWM2ZmIzZGE5Y2I0MjMzNzM5YzYwZmUyYzhlODJlODU"
    },
    {
      "type": "commit",
      "time": "2023-10-05T04:03:43Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "authored-by"
        },
        {
          "objectId": "df5df2c98594d14d2ecaeba01f2c6988443a2975",
          "qualifier": "sha"
        },
        {
          "objectId": "167",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKGRmNWRmMmM5ODU5NGQxNGQyZWNhZWJhMDFmMmM2OTg4NDQzYTI5NzU"
    },
    {
      "type": "commit",
      "time": "2023-10-06T12:23:17Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "authored-by"
        },
        {
          "objectId": "4cf0547b80bf40240de45a54dd85ecb941ccb165",
          "qualifier": "sha"
        },
        {
          "objectId": "167",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDRjZjA1NDdiODBiZjQwMjQwZGU0NWE1NGRkODVlY2I5NDFjY2IxNjU"
    },
    {
      "type": "comment_pull_request",
      "time": "2023-10-07T16:02:15Z",
      "attributes": [
        {
          "name": "comment",
          "value": "Changes look good @Devasy23 \r\n![image](https://github.com/srbhr/Resume-Matcher/assets/54472864/0844fe5c-d5f0-4c1b-90b6-eb1d6d8f9304)\r\n"
        }
      ],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "commented-by"
        },
        {
          "objectId": "167",
          "qualifier": "on"
        }
      ],
      "id": "IC_kwDODyNbyM5oaYTe"
    },
    {
      "type": "approve_review",
      "time": "2023-10-07T16:02:34Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "approved-by"
        },
        {
          "objectId": "167",
          "qualifier": "for-pull-request"
        }
      ],
      "id": "1663071286"
    },
    {
      "type": "merge_pull_request",
      "time": "2023-10-07T16:02:51Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "167",
          "qualifier": "merged-on-pull_request"
        }
      ],
      "id": "ME_lADODyNbyM5yTKKjzwAAAAJ2v7iD"
    },
    {
      "type": "close_pull_request",
      "time": "2023-10-07T16:02:51Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "167",
          "qualifier": "closed-on-pull_request"
        }
      ],
      "id": "CE_lADODyNbyM5yTKKjzwAAAAJ2v7iI"
    },
    {
      "type": "comment_pull_request",
      "time": "2023-10-07T16:23:16Z",
      "attributes": [
        {
          "name": "comment",
          "value": "Thanks a lot for merging my PR! \ud83d\ude4c \r\n\r\nAnd a big shoutout to @hal for pointing out the issues in the code. I'm already working to recreate it in reflex.dev for the interactive version that @Hal pushed. \ud83d\ude80\r\n\r\nAppreciate your help and guidance!\r\n"
        }
      ],
      "relationships": [
        {
          "objectId": "Devasy Patel",
          "qualifier": "commented-by"
        },
        {
          "objectId": "167",
          "qualifier": "on"
        }
      ],
      "id": "IC_kwDODyNbyM5oaZZH"
    },
    {
      "type": "add_label",
      "time": "2023-10-10T05:48:24Z",
      "attributes": [
        {
          "name": "label",
          "value": "hacktoberfest"
        }
      ],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "167",
          "qualifier": "labeled-on-pull_request"
        }
      ],
      "id": "LE_lADODyNbyM5yTKKjzwAAAAJ3wths"
    },
    {
      "type": "add_label",
      "time": "2023-10-10T05:48:24Z",
      "attributes": [
        {
          "name": "label",
          "value": "hacktoberfest-accepted"
        }
      ],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "167",
          "qualifier": "labeled-on-pull_request"
        }
      ],
      "id": "LE_lADODyNbyM5yTKKjzwAAAAJ3wthv"
    },
    {
      "type": "commit",
      "time": "2023-09-25T01:37:41Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Hiren Thakore",
          "qualifier": "authored-by"
        },
        {
          "objectId": "67d877cd7307d17605218bdb8b2cb2495db2155c",
          "qualifier": "sha"
        },
        {
          "objectId": "158",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDY3ZDg3N2NkNzMwN2QxNzYwNTIxOGJkYjhiMmNiMjQ5NWRiMjE1NWM"
    },
    {
      "type": "commit",
      "time": "2023-09-25T21:30:11Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Hiren Thakore",
          "qualifier": "authored-by"
        },
        {
          "objectId": "3c5377a87035f00592b6c617613719e1230b7726",
          "qualifier": "sha"
        },
        {
          "objectId": "164",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDNjNTM3N2E4NzAzNWYwMDU5MmI2YzYxNzYxMzcxOWUxMjMwYjc3MjY"
    },
    {
      "type": "comment_pull_request",
      "time": "2023-09-26T17:20:08Z",
      "attributes": [
        {
          "name": "comment",
          "value": "@thakoreh can you please check if the issue still persists? \r\n"
        }
      ],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "commented-by"
        },
        {
          "objectId": "164",
          "qualifier": "on"
        }
      ],
      "id": "IC_kwDODyNbyM5neMjp"
    },
    {
      "type": "commit",
      "time": "2023-09-26T17:53:59Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "authored-by"
        },
        {
          "objectId": "2099d5622f505c6ce69cdf6b7436e6d2eb12fd70",
          "qualifier": "sha"
        },
        {
          "objectId": "164",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDIwOTlkNTYyMmY1MDVjNmNlNjljZGY2Yjc0MzZlNmQyZWIxMmZkNzA"
    },
    {
      "type": "comment_pull_request",
      "time": "2023-09-26T17:57:26Z",
      "attributes": [
        {
          "name": "comment",
          "value": "@srbhr Yes it has been fixed now"
        }
      ],
      "relationships": [
        {
          "objectId": "Hiren Thakore",
          "qualifier": "commented-by"
        },
        {
          "objectId": "164",
          "qualifier": "on"
        }
      ],
      "id": "IC_kwDODyNbyM5neZTc"
    },
    {
      "type": "close_pull_request",
      "time": "2023-09-28T15:19:32Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Hiren Thakore",
          "qualifier": "authored-by"
        },
        {
          "objectId": "164",
          "qualifier": "closed-on-pull_request"
        }
      ],
      "id": "CE_lADODyNbyM5x-5QQzwAAAAJx6BbM"
    },
    {
      "type": "commit",
      "time": "2023-09-25T14:38:45Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "saurabhraidev",
          "qualifier": "authored-by"
        },
        {
          "objectId": "0ae12874c16096502757948afe68dd073093b58b",
          "qualifier": "sha"
        },
        {
          "objectId": "163",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDBhZTEyODc0YzE2MDk2NTAyNzU3OTQ4YWZlNjhkZDA3MzA5M2I1OGI"
    },
    {
      "type": "merge_pull_request",
      "time": "2023-09-25T14:39:15Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "163",
          "qualifier": "merged-on-pull_request"
        }
      ],
      "id": "ME_lADODyNbyM5x8aCWzwAAAAJvrp-b"
    },
    {
      "type": "close_pull_request",
      "time": "2023-09-25T14:39:15Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "163",
          "qualifier": "closed-on-pull_request"
        }
      ],
      "id": "CE_lADODyNbyM5x8aCWzwAAAAJvrp-9"
    },
    {
      "type": "commit",
      "time": "2023-09-25T10:43:41Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "saurabhraidev",
          "qualifier": "authored-by"
        },
        {
          "objectId": "dfbb49502332962f54265b5a9ecbb5598ce1d240",
          "qualifier": "sha"
        },
        {
          "objectId": "160",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKGRmYmI0OTUwMjMzMjk2MmY1NDI2NWI1YTllY2JiNTU5OGNlMWQyNDA"
    },
    {
      "type": "merge_pull_request",
      "time": "2023-09-25T10:48:28Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "160",
          "qualifier": "merged-on-pull_request"
        }
      ],
      "id": "ME_lADODyNbyM5x6qTmzwAAAAJvhQrH"
    },
    {
      "type": "close_pull_request",
      "time": "2023-09-25T10:48:28Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "160",
          "qualifier": "closed-on-pull_request"
        }
      ],
      "id": "CE_lADODyNbyM5x6qTmzwAAAAJvhQr1"
    },
    {
      "type": "commit",
      "time": "2023-09-25T10:28:01Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "saurabhraidev",
          "qualifier": "authored-by"
        },
        {
          "objectId": "1ddb88222ea30d4e4d01f99f4df810c8a7db26d3",
          "qualifier": "sha"
        },
        {
          "objectId": "159",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDFkZGI4ODIyMmVhMzBkNGU0ZDAxZjk5ZjRkZjgxMGM4YTdkYjI2ZDM"
    },
    {
      "type": "merge_pull_request",
      "time": "2023-09-25T10:28:31Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "159",
          "qualifier": "merged-on-pull_request"
        }
      ],
      "id": "ME_lADODyNbyM5x6jt7zwAAAAJvgfRI"
    },
    {
      "type": "close_pull_request",
      "time": "2023-09-25T10:28:31Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "159",
          "qualifier": "closed-on-pull_request"
        }
      ],
      "id": "CE_lADODyNbyM5x6jt7zwAAAAJvgfRc"
    },
    {
      "type": "rename_pull_request",
      "time": "2023-09-25T01:38:22Z",
      "attributes": [
        {
          "name": "renamed-to",
          "value": "added header_image.jpg file in assets/img"
        }
      ],
      "relationships": [
        {
          "objectId": "Hiren Thakore",
          "qualifier": "change-issued-by"
        },
        {
          "objectId": "158",
          "qualifier": "for-pr"
        }
      ],
      "id": "RTE_lADODyNbyM5x3_WqzwAAAAJvQxsb"
    },
    {
      "type": "comment_pull_request",
      "time": "2023-09-25T01:38:55Z",
      "attributes": [
        {
          "name": "comment",
          "value": "Resolving FileNotFound Error here. There's still formatting in web app , working on it."
        }
      ],
      "relationships": [
        {
          "objectId": "Hiren Thakore",
          "qualifier": "commented-by"
        },
        {
          "objectId": "158",
          "qualifier": "on"
        }
      ],
      "id": "IC_kwDODyNbyM5nSAoW"
    },
    {
      "type": "close_pull_request",
      "time": "2023-09-25T01:44:51Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Hiren Thakore",
          "qualifier": "authored-by"
        },
        {
          "objectId": "158",
          "qualifier": "closed-on-pull_request"
        }
      ],
      "id": "CE_lADODyNbyM5x3_WqzwAAAAJvQ43Z"
    },
    {
      "type": "commit",
      "time": "2023-09-24T19:40:59Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "saurabhraidev",
          "qualifier": "authored-by"
        },
        {
          "objectId": "f99c08e2c4aa1dab18069b49549672957e02ec64",
          "qualifier": "sha"
        },
        {
          "objectId": "157",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKGY5OWMwOGUyYzRhYTFkYWIxODA2OWI0OTU0OTY3Mjk1N2UwMmVjNjQ"
    },
    {
      "type": "merge_pull_request",
      "time": "2023-09-24T19:45:26Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "157",
          "qualifier": "merged-on-pull_request"
        }
      ],
      "id": "ME_lADODyNbyM5x3bX4zwAAAAJvN3oa"
    },
    {
      "type": "close_pull_request",
      "time": "2023-09-24T19:45:26Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "157",
          "qualifier": "closed-on-pull_request"
        }
      ],
      "id": "CE_lADODyNbyM5x3bX4zwAAAAJvN3ob"
    },
    {
      "type": "commit",
      "time": "2023-09-23T12:19:30Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Sayvai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "ad9d209255526e65bf0d3a7cde39acd33f4ad439",
          "qualifier": "sha"
        },
        {
          "objectId": "155",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKGFkOWQyMDkyNTU1MjZlNjViZjBkM2E3Y2RlMzlhY2QzM2Y0YWQ0Mzk"
    },
    {
      "type": "approve_review",
      "time": "2023-09-25T10:48:49Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "approved-by"
        },
        {
          "objectId": "155",
          "qualifier": "for-pull-request"
        }
      ],
      "id": "1641861189"
    },
    {
      "type": "merge_pull_request",
      "time": "2023-09-25T10:49:02Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "155",
          "qualifier": "merged-on-pull_request"
        }
      ],
      "id": "ME_lADODyNbyM5x1gDszwAAAAJvhSDI"
    },
    {
      "type": "close_pull_request",
      "time": "2023-09-25T10:49:02Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "155",
          "qualifier": "closed-on-pull_request"
        }
      ],
      "id": "CE_lADODyNbyM5x1gDszwAAAAJvhSDq"
    },
    {
      "type": "commit",
      "time": "2023-09-22T20:45:05Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Sayvai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "b43e55f1f9c06402865eced8cca9fb67e7b6f315",
          "qualifier": "sha"
        },
        {
          "objectId": "154",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKGI0M2U1NWYxZjljMDY0MDI4NjVlY2VkOGNjYTlmYjY3ZTdiNmYzMTU"
    },
    {
      "type": "approve_review",
      "time": "2023-09-22T21:02:39Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "approved-by"
        },
        {
          "objectId": "154",
          "qualifier": "for-pull-request"
        }
      ],
      "id": "1640639432"
    },
    {
      "type": "merge_pull_request",
      "time": "2023-09-22T21:02:44Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "154",
          "qualifier": "merged-on-pull_request"
        }
      ],
      "id": "ME_lADODyNbyM5x0NkYzwAAAAJu8woK"
    },
    {
      "type": "close_pull_request",
      "time": "2023-09-22T21:02:44Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "154",
          "qualifier": "closed-on-pull_request"
        }
      ],
      "id": "CE_lADODyNbyM5x0NkYzwAAAAJu8woj"
    },
    {
      "type": "commit",
      "time": "2023-09-20T15:31:34Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "authored-by"
        },
        {
          "objectId": "6453c7dfad6b376e523a548f07f55d35d2f88045",
          "qualifier": "sha"
        },
        {
          "objectId": "151",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDY0NTNjN2RmYWQ2YjM3NmU1MjNhNTQ4ZjA3ZjU1ZDM1ZDJmODgwNDU"
    },
    {
      "type": "merge_pull_request",
      "time": "2023-09-20T15:34:37Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "151",
          "qualifier": "merged-on-pull_request"
        }
      ],
      "id": "ME_lADODyNbyM5xj895zwAAAAJtXwAy"
    },
    {
      "type": "close_pull_request",
      "time": "2023-09-20T15:34:37Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "151",
          "qualifier": "closed-on-pull_request"
        }
      ],
      "id": "CE_lADODyNbyM5xj895zwAAAAJtXwBI"
    },
    {
      "type": "commit",
      "time": "2023-08-28T15:59:18Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "authored-by"
        },
        {
          "objectId": "cad7f88c5a1d7f0b39b4db13c2b4cd27bb5b4146",
          "qualifier": "sha"
        },
        {
          "objectId": "149",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKGNhZDdmODhjNWExZDdmMGIzOWI0ZGIxM2MyYjRjZDI3YmI1YjQxNDY"
    },
    {
      "type": "commit",
      "time": "2023-09-10T12:29:23Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "authored-by"
        },
        {
          "objectId": "f01e30d04a62cc4075cfa97f55e9eb48f9f11c69",
          "qualifier": "sha"
        },
        {
          "objectId": "149",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKGYwMWUzMGQwNGE2MmNjNDA3NWNmYTk3ZjU1ZTllYjQ4ZjlmMTFjNjk"
    },
    {
      "type": "commit",
      "time": "2023-09-13T13:48:23Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "authored-by"
        },
        {
          "objectId": "ceffc6efcf6392b1b9b1729cc336f0ab42134ebd",
          "qualifier": "sha"
        },
        {
          "objectId": "149",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKGNlZmZjNmVmY2Y2MzkyYjFiOWIxNzI5Y2MzMzZmMGFiNDIxMzRlYmQ"
    },
    {
      "type": "commit",
      "time": "2023-09-16T08:52:11Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "authored-by"
        },
        {
          "objectId": "8e1d64883bc6a6c54c835bbc4963c95bec344fe7",
          "qualifier": "sha"
        },
        {
          "objectId": "149",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDhlMWQ2NDg4M2JjNmE2YzU0YzgzNWJiYzQ5NjNjOTViZWMzNDRmZTc"
    },
    {
      "type": "merge_pull_request",
      "time": "2023-09-16T08:59:25Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "149",
          "qualifier": "merged-on-pull_request"
        }
      ],
      "id": "ME_lADODyNbyM5xNdsDzwAAAAJrQKE0"
    },
    {
      "type": "close_pull_request",
      "time": "2023-09-16T08:59:25Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "149",
          "qualifier": "closed-on-pull_request"
        }
      ],
      "id": "CE_lADODyNbyM5xNdsDzwAAAAJrQKE3"
    },
    {
      "type": "commit",
      "time": "2023-09-16T03:44:17Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "imhalcyon",
          "qualifier": "authored-by"
        },
        {
          "objectId": "cbc8cc35603772045df30d4bf572d9e2416f8910",
          "qualifier": "sha"
        },
        {
          "objectId": "148",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKGNiYzhjYzM1NjAzNzcyMDQ1ZGYzMGQ0YmY1NzJkOWUyNDE2Zjg5MTA"
    },
    {
      "type": "comment_pull_request",
      "time": "2023-09-16T08:20:00Z",
      "attributes": [
        {
          "name": "comment",
          "value": "@imhalcyon this is not a bug. \r\nIt's the intended use for this project. Please check [how to install](https://github.com/srbhr/Resume-Matcher#how-to-install) for more information. \r\n"
        }
      ],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "commented-by"
        },
        {
          "objectId": "148",
          "qualifier": "on"
        }
      ],
      "id": "IC_kwDODyNbyM5mpksq"
    },
    {
      "type": "comment_pull_request",
      "time": "2023-09-16T08:36:13Z",
      "attributes": [
        {
          "name": "comment",
          "value": "Closing  - this is as per design"
        }
      ],
      "relationships": [
        {
          "objectId": "Abhishek Mathur",
          "qualifier": "commented-by"
        },
        {
          "objectId": "148",
          "qualifier": "on"
        }
      ],
      "id": "IC_kwDODyNbyM5mplh2"
    },
    {
      "type": "close_pull_request",
      "time": "2023-09-16T08:36:13Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Abhishek Mathur",
          "qualifier": "authored-by"
        },
        {
          "objectId": "148",
          "qualifier": "closed-on-pull_request"
        }
      ],
      "id": "CE_lADODyNbyM5xNLlBzwAAAAJrQCHR"
    },
    {
      "type": "commit",
      "time": "2023-09-11T14:55:37Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "authored-by"
        },
        {
          "objectId": "e0da0889868435337d8634fa961e335559f47266",
          "qualifier": "sha"
        },
        {
          "objectId": "145",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKGUwZGEwODg5ODY4NDM1MzM3ZDg2MzRmYTk2MWUzMzU1NTlmNDcyNjY"
    },
    {
      "type": "approve_review",
      "time": "2023-09-11T16:43:06Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Devasy Patel",
          "qualifier": "approved-by"
        },
        {
          "objectId": "145",
          "qualifier": "for-pull-request"
        }
      ],
      "id": "1620421880"
    },
    {
      "type": "comment_pull_request",
      "time": "2023-09-12T18:42:49Z",
      "attributes": [
        {
          "name": "comment",
          "value": "Thanks @admalekar  and @Devasy23  it's working for me as well."
        }
      ],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "commented-by"
        },
        {
          "objectId": "145",
          "qualifier": "on"
        }
      ],
      "id": "IC_kwDODyNbyM5mS8A1"
    },
    {
      "type": "approve_review",
      "time": "2023-09-12T18:43:01Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "approved-by"
        },
        {
          "objectId": "145",
          "qualifier": "for-pull-request"
        }
      ],
      "id": "1622906577"
    },
    {
      "type": "merge_pull_request",
      "time": "2023-09-12T18:43:07Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "145",
          "qualifier": "merged-on-pull_request"
        }
      ],
      "id": "ME_lADODyNbyM5wshN8zwAAAAJo7eh7"
    },
    {
      "type": "close_pull_request",
      "time": "2023-09-12T18:43:08Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "145",
          "qualifier": "closed-on-pull_request"
        }
      ],
      "id": "CE_lADODyNbyM5wshN8zwAAAAJo7eiP"
    },
    {
      "type": "commit",
      "time": "2023-09-11T13:34:53Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Sayvai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "d960f148b16fc43815f1b8a93b7d20d7eec9db24",
          "qualifier": "sha"
        },
        {
          "objectId": "141",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKGQ5NjBmMTQ4YjE2ZmM0MzgxNWYxYjhhOTNiN2QyMGQ3ZWVjOWRiMjQ"
    },
    {
      "type": "approve_review",
      "time": "2023-09-13T13:48:16Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "approved-by"
        },
        {
          "objectId": "141",
          "qualifier": "for-pull-request"
        }
      ],
      "id": "1624600797"
    },
    {
      "type": "merge_pull_request",
      "time": "2023-09-13T13:48:23Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "141",
          "qualifier": "merged-on-pull_request"
        }
      ],
      "id": "ME_lADODyNbyM5wnFtzzwAAAAJpgLTy"
    },
    {
      "type": "close_pull_request",
      "time": "2023-09-13T13:48:23Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "141",
          "qualifier": "closed-on-pull_request"
        }
      ],
      "id": "CE_lADODyNbyM5wnFtzzwAAAAJpgLUZ"
    },
    {
      "type": "comment_pull_request",
      "time": "2023-09-13T13:48:41Z",
      "attributes": [
        {
          "name": "comment",
          "value": "@Sayvai  I have merged your changes. "
        }
      ],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "commented-by"
        },
        {
          "objectId": "141",
          "qualifier": "on"
        }
      ],
      "id": "IC_kwDODyNbyM5mYZwz"
    },
    {
      "type": "comment_pull_request",
      "time": "2023-09-13T13:49:20Z",
      "attributes": [
        {
          "name": "comment",
          "value": "Now once we solve the ongoing dependency issues with the main. After that I will merge it with the main repo. "
        }
      ],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "commented-by"
        },
        {
          "objectId": "141",
          "qualifier": "on"
        }
      ],
      "id": "IC_kwDODyNbyM5mYaDn"
    },
    {
      "type": "commit",
      "time": "2023-09-10T12:24:53Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "authored-by"
        },
        {
          "objectId": "eb97fad9e4af4cc7b0c52a045727e52c46e1fc87",
          "qualifier": "sha"
        },
        {
          "objectId": "140",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKGViOTdmYWQ5ZTRhZjRjYzdiMGM1MmEwNDU3MjdlNTJjNDZlMWZjODc"
    },
    {
      "type": "add_label",
      "time": "2023-09-10T12:24:55Z",
      "attributes": [
        {
          "name": "label",
          "value": "dependencies"
        }
      ],
      "relationships": [
        {
          "objectId": "dependabot[bot]",
          "qualifier": "authored-by"
        },
        {
          "objectId": "140",
          "qualifier": "labeled-on-pull_request"
        }
      ],
      "id": "LE_lADODyNbyM5wmceWzwAAAAJnfmmG"
    },
    {
      "type": "comment_pull_request",
      "time": "2023-10-10T20:39:40Z",
      "attributes": [
        {
          "name": "comment",
          "value": "Superseded by #196."
        }
      ],
      "relationships": [
        {
          "objectId": "dependabot[bot]",
          "qualifier": "commented-by"
        },
        {
          "objectId": "140",
          "qualifier": "on"
        }
      ],
      "id": "IC_kwDODyNbyM5orX_I"
    },
    {
      "type": "close_pull_request",
      "time": "2023-10-10T20:39:41Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "dependabot[bot]",
          "qualifier": "authored-by"
        },
        {
          "objectId": "140",
          "qualifier": "closed-on-pull_request"
        }
      ],
      "id": "CE_lADODyNbyM5wmceWzwAAAAJ4X0KL"
    },
    {
      "type": "commit",
      "time": "2023-09-06T18:34:38Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "authored-by"
        },
        {
          "objectId": "8cd5e5da0f909c6d409725a4ba2127a825efa711",
          "qualifier": "sha"
        },
        {
          "objectId": "136",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDhjZDVlNWRhMGY5MDljNmQ0MDk3MjVhNGJhMjEyN2E4MjVlZmE3MTE"
    },
    {
      "type": "add_label",
      "time": "2023-09-06T18:34:40Z",
      "attributes": [
        {
          "name": "label",
          "value": "dependencies"
        }
      ],
      "relationships": [
        {
          "objectId": "dependabot[bot]",
          "qualifier": "authored-by"
        },
        {
          "objectId": "136",
          "qualifier": "labeled-on-pull_request"
        }
      ],
      "id": "LE_lADODyNbyM5wU-qpzwAAAAJl40wb"
    },
    {
      "type": "comment_pull_request",
      "time": "2023-09-10T12:24:56Z",
      "attributes": [
        {
          "name": "comment",
          "value": "Superseded by #140."
        }
      ],
      "relationships": [
        {
          "objectId": "dependabot[bot]",
          "qualifier": "commented-by"
        },
        {
          "objectId": "136",
          "qualifier": "on"
        }
      ],
      "id": "IC_kwDODyNbyM5mF0NP"
    },
    {
      "type": "close_pull_request",
      "time": "2023-09-10T12:24:57Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "dependabot[bot]",
          "qualifier": "authored-by"
        },
        {
          "objectId": "136",
          "qualifier": "closed-on-pull_request"
        }
      ],
      "id": "CE_lADODyNbyM5wU-qpzwAAAAJnfmmu"
    },
    {
      "type": "commit",
      "time": "2023-09-05T16:17:21Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Sayvai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "d5c42e93fcfd4f99e2ec7f5a7eb61c300d0ef204",
          "qualifier": "sha"
        },
        {
          "objectId": "135",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKGQ1YzQyZTkzZmNmZDRmOTllMmVjN2Y1YTdlYjYxYzMwMGQwZWYyMDQ"
    },
    {
      "type": "commit",
      "time": "2023-09-09T19:23:02Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Sayvai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "9a46767052b879618f3584bd0639c0a8af7ba43c",
          "qualifier": "sha"
        },
        {
          "objectId": "135",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDlhNDY3NjcwNTJiODc5NjE4ZjM1ODRiZDA2MzljMGE4YWY3YmE0M2M"
    },
    {
      "type": "commit",
      "time": "2023-09-09T20:06:40Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Sayvai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "0830d6bbe1dd9977531e5946bafbb3552d05dad2",
          "qualifier": "sha"
        },
        {
          "objectId": "135",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDA4MzBkNmJiZTFkZDk5Nzc1MzFlNTk0NmJhZmJiMzU1MmQwNWRhZDI"
    },
    {
      "type": "commit",
      "time": "2023-09-10T10:32:55Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Sayvai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "58ea0868f2137937e54b4bd07b459992156502f4",
          "qualifier": "sha"
        },
        {
          "objectId": "135",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDU4ZWEwODY4ZjIxMzc5MzdlNTRiNGJkMDdiNDU5OTkyMTU2NTAyZjQ"
    },
    {
      "type": "commit",
      "time": "2023-09-10T10:53:58Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Sayvai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "60b70b03cec03e70be3b9c1da34d1576c6f73a26",
          "qualifier": "sha"
        },
        {
          "objectId": "135",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDYwYjcwYjAzY2VjMDNlNzBiZTNiOWMxZGEzNGQxNTc2YzZmNzNhMjY"
    },
    {
      "type": "approve_review",
      "time": "2023-09-10T12:29:02Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "approved-by"
        },
        {
          "objectId": "135",
          "qualifier": "for-pull-request"
        }
      ],
      "id": "1618818795"
    },
    {
      "type": "merge_pull_request",
      "time": "2023-09-10T12:29:24Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "135",
          "qualifier": "merged-on-pull_request"
        }
      ],
      "id": "ME_lADODyNbyM5wMsGyzwAAAAJnfoOR"
    },
    {
      "type": "close_pull_request",
      "time": "2023-09-10T12:29:24Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "135",
          "qualifier": "closed-on-pull_request"
        }
      ],
      "id": "CE_lADODyNbyM5wMsGyzwAAAAJnfoOT"
    },
    {
      "type": "commit",
      "time": "2023-09-04T16:30:00Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "dxxky",
          "qualifier": "authored-by"
        },
        {
          "objectId": "5bff3d3fc86d4aab50e4e064178c4e803fda0a8e",
          "qualifier": "sha"
        },
        {
          "objectId": "134",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDViZmYzZDNmYzg2ZDRhYWI1MGU0ZTA2NDE3OGM0ZTgwM2ZkYTBhOGU"
    },
    {
      "type": "commit",
      "time": "2023-09-04T16:45:03Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "dxxky",
          "qualifier": "authored-by"
        },
        {
          "objectId": "83f677fbfb422f187e37c7d36a711253655e2dcc",
          "qualifier": "sha"
        },
        {
          "objectId": "134",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDgzZjY3N2ZiZmI0MjJmMTg3ZTM3YzdkMzZhNzExMjUzNjU1ZTJkY2M"
    },
    {
      "type": "commit",
      "time": "2023-09-04T16:54:45Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "dxxky",
          "qualifier": "authored-by"
        },
        {
          "objectId": "7a4d2a20fc583278a28d79d82fb9a82e9cfc1b29",
          "qualifier": "sha"
        },
        {
          "objectId": "134",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDdhNGQyYTIwZmM1ODMyNzhhMjhkNzlkODJmYjlhODJlOWNmYzFiMjk"
    },
    {
      "type": "commit",
      "time": "2023-09-04T17:51:22Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "dxxky",
          "qualifier": "authored-by"
        },
        {
          "objectId": "2a236e78805698a5397c1535f26c070339598ea4",
          "qualifier": "sha"
        },
        {
          "objectId": "134",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDJhMjM2ZTc4ODA1Njk4YTUzOTdjMTUzNWYyNmMwNzAzMzk1OThlYTQ"
    },
    {
      "type": "rename_pull_request",
      "time": "2023-09-04T17:54:53Z",
      "attributes": [
        {
          "name": "renamed-to",
          "value": "Adding FastAPI and amending the comments & errors message in run_first.py"
        }
      ],
      "relationships": [
        {
          "objectId": "dxxky",
          "qualifier": "change-issued-by"
        },
        {
          "objectId": "134",
          "qualifier": "for-pr"
        }
      ],
      "id": "RTE_lADODyNbyM5wGCazzwAAAAJkgyx_"
    },
    {
      "type": "comment_pull_request",
      "time": "2023-09-14T07:53:40Z",
      "attributes": [
        {
          "name": "comment",
          "value": "Hey @dxxky thanks for the PR. I'll take a look at it. \nWe have a webapp coming as a new Feature. "
        }
      ],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "commented-by"
        },
        {
          "objectId": "134",
          "qualifier": "on"
        }
      ],
      "id": "IC_kwDODyNbyM5mdQTb"
    },
    {
      "type": "close_pull_request",
      "time": "2024-02-05T06:56:17Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "dxxky",
          "qualifier": "authored-by"
        },
        {
          "objectId": "134",
          "qualifier": "closed-on-pull_request"
        }
      ],
      "id": "CE_lADODyNbyM5wGCazzwAAAAK5V3cy"
    },
    {
      "type": "commit",
      "time": "2023-09-04T00:42:55Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "SubramanyamChalla24",
          "qualifier": "authored-by"
        },
        {
          "objectId": "57b8733ace4de8953be53d55b58de9346e89e74c",
          "qualifier": "sha"
        },
        {
          "objectId": "133",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDU3Yjg3MzNhY2U0ZGU4OTUzYmU1M2Q1NWI1OGRlOTM0NmU4OWU3NGM"
    },
    {
      "type": "commit",
      "time": "2023-09-04T00:53:19Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "SubramanyamChalla24",
          "qualifier": "authored-by"
        },
        {
          "objectId": "b17532f9ed1b5f3dda543e3a016bc44eba24a816",
          "qualifier": "sha"
        },
        {
          "objectId": "133",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKGIxNzUzMmY5ZWQxYjVmM2RkYTU0M2UzYTAxNmJjNDRlYmEyNGE4MTY"
    },
    {
      "type": "commit",
      "time": "2023-09-04T01:05:08Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "authored-by"
        },
        {
          "objectId": "3b38dc02e2c511a845b6fb12076f08e929c4633c",
          "qualifier": "sha"
        },
        {
          "objectId": "133",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDNiMzhkYzAyZTJjNTExYTg0NWI2ZmIxMjA3NmYwOGU5MjljNDYzM2M"
    },
    {
      "type": "commit",
      "time": "2023-09-04T01:05:46Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "SubramanyamChalla24",
          "qualifier": "authored-by"
        },
        {
          "objectId": "bc3e5f00885e92a01cc5d36a010f6929ad9ec71e",
          "qualifier": "sha"
        },
        {
          "objectId": "133",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKGJjM2U1ZjAwODg1ZTkyYTAxY2M1ZDM2YTAxMGY2OTI5YWQ5ZWM3MWU"
    },
    {
      "type": "commit",
      "time": "2023-09-04T01:06:06Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "SubramanyamChalla24",
          "qualifier": "authored-by"
        },
        {
          "objectId": "25e00d38adeaffd3f3ee1212fc119a5af9aadb03",
          "qualifier": "sha"
        },
        {
          "objectId": "133",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDI1ZTAwZDM4YWRlYWZmZDNmM2VlMTIxMmZjMTE5YTVhZjlhYWRiMDM"
    },
    {
      "type": "suggest_changes_as_review",
      "time": "2023-09-04T05:52:16Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "requested-by"
        },
        {
          "objectId": "133",
          "qualifier": "for-pull-request"
        }
      ],
      "id": "1608799233"
    },
    {
      "type": "commit",
      "time": "2023-09-05T04:06:55Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "SubramanyamChalla24",
          "qualifier": "authored-by"
        },
        {
          "objectId": "df137a0ba05c2ea3e25286916eb544309629f462",
          "qualifier": "sha"
        },
        {
          "objectId": "133",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKGRmMTM3YTBiYTA1YzJlYTNlMjUyODY5MTZlYjU0NDMwOTYyOWY0NjI"
    },
    {
      "type": "commit",
      "time": "2023-09-05T04:07:49Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "SubramanyamChalla24",
          "qualifier": "authored-by"
        },
        {
          "objectId": "b5eaf42c9deb83435739d61aecf4ab6cca6bd333",
          "qualifier": "sha"
        },
        {
          "objectId": "133",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKGI1ZWFmNDJjOWRlYjgzNDM1NzM5ZDYxYWVjZjRhYjZjY2E2YmQzMzM"
    },
    {
      "type": "comment_pull_request",
      "time": "2023-09-05T04:12:05Z",
      "attributes": [
        {
          "name": "comment",
          "value": "I've made the changes, I could install qdrant_client by keeping the version > 1.2 . If anyone gets an issue I think its better to install using pip and specifying the version \r\n```\r\npip install 'qdrant-client>=1.2' --force-reinstall\r\n```"
        }
      ],
      "relationships": [
        {
          "objectId": "Subramanyam Challa",
          "qualifier": "commented-by"
        },
        {
          "objectId": "133",
          "qualifier": "on"
        }
      ],
      "id": "IC_kwDODyNbyM5lrkL9"
    },
    {
      "type": "comment_pull_request",
      "time": "2023-09-07T03:11:52Z",
      "attributes": [
        {
          "name": "comment",
          "value": "There are still JSON changes being proposed here for some reason "
        }
      ],
      "relationships": [
        {
          "objectId": "Andrew",
          "qualifier": "commented-by"
        },
        {
          "objectId": "133",
          "qualifier": "on"
        }
      ],
      "id": "IC_kwDODyNbyM5l45HD"
    },
    {
      "type": "comment_pull_request",
      "time": "2023-09-07T03:31:35Z",
      "attributes": [
        {
          "name": "comment",
          "value": "> There are still JSON changes being proposed here for some reason\r\n\r\nThat shouldn't be a problem, you can take reference from the README.md in the commit ."
        }
      ],
      "relationships": [
        {
          "objectId": "Subramanyam Challa",
          "qualifier": "commented-by"
        },
        {
          "objectId": "133",
          "qualifier": "on"
        }
      ],
      "id": "IC_kwDODyNbyM5l47-v"
    },
    {
      "type": "approve_review",
      "time": "2023-09-10T12:26:16Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "approved-by"
        },
        {
          "objectId": "133",
          "qualifier": "for-pull-request"
        }
      ],
      "id": "1618818367"
    },
    {
      "type": "commit",
      "time": "2023-09-10T12:26:55Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "GitHub",
          "qualifier": "authored-by"
        },
        {
          "objectId": "485682519d8586bd557056c103a1b2b8a9c96c58",
          "qualifier": "sha"
        },
        {
          "objectId": "133",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDQ4NTY4MjUxOWQ4NTg2YmQ1NTcwNTZjMTAzYTFiMmI4YTljOTZjNTg"
    },
    {
      "type": "merge_pull_request",
      "time": "2023-09-10T12:28:03Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "133",
          "qualifier": "merged-on-pull_request"
        }
      ],
      "id": "ME_lADODyNbyM5wBEBjzwAAAAJnfnw-"
    },
    {
      "type": "close_pull_request",
      "time": "2023-09-10T12:28:03Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "133",
          "qualifier": "closed-on-pull_request"
        }
      ],
      "id": "CE_lADODyNbyM5wBEBjzwAAAAJnfnxC"
    },
    {
      "type": "commit",
      "time": "2023-09-03T09:04:35Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "dxxky",
          "qualifier": "authored-by"
        },
        {
          "objectId": "f1a7ff4d8918894309d5ec9073eb01d7a8cd1ab6",
          "qualifier": "sha"
        },
        {
          "objectId": "132",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKGYxYTdmZjRkODkxODg5NDMwOWQ1ZWM5MDczZWIwMWQ3YThjZDFhYjY"
    },
    {
      "type": "approve_review",
      "time": "2023-09-03T10:21:11Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "approved-by"
        },
        {
          "objectId": "132",
          "qualifier": "for-pull-request"
        }
      ],
      "id": "1608496994"
    },
    {
      "type": "merge_pull_request",
      "time": "2023-09-03T10:22:09Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "132",
          "qualifier": "merged-on-pull_request"
        }
      ],
      "id": "ME_lADODyNbyM5v_1lozwAAAAJj43E4"
    },
    {
      "type": "close_pull_request",
      "time": "2023-09-03T10:22:09Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "132",
          "qualifier": "closed-on-pull_request"
        }
      ],
      "id": "CE_lADODyNbyM5v_1lozwAAAAJj43FE"
    },
    {
      "type": "commit",
      "time": "2023-08-31T10:11:54Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "yichao-cai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "e4269c6b0fc8bdd72f26377803bdf13052f5a527",
          "qualifier": "sha"
        },
        {
          "objectId": "131",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKGU0MjY5YzZiMGZjOGJkZDcyZjI2Mzc3ODAzYmRmMTMwNTJmNWE1Mjc"
    },
    {
      "type": "approve_review",
      "time": "2023-08-31T15:03:37Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "approved-by"
        },
        {
          "objectId": "131",
          "qualifier": "for-pull-request"
        }
      ],
      "id": "1604980372"
    },
    {
      "type": "merge_pull_request",
      "time": "2023-08-31T15:03:51Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "131",
          "qualifier": "merged-on-pull_request"
        }
      ],
      "id": "ME_lADODyNbyM5vxf1HzwAAAAJituMb"
    },
    {
      "type": "close_pull_request",
      "time": "2023-08-31T15:03:52Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "131",
          "qualifier": "closed-on-pull_request"
        }
      ],
      "id": "CE_lADODyNbyM5vxf1HzwAAAAJituNI"
    },
    {
      "type": "commit",
      "time": "2023-08-30T14:20:02Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Sriram R",
          "qualifier": "authored-by"
        },
        {
          "objectId": "e129e2ad6e6187a19804c5a054efb6df7988752b",
          "qualifier": "sha"
        },
        {
          "objectId": "129",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKGUxMjllMmFkNmU2MTg3YTE5ODA0YzVhMDU0ZWZiNmRmNzk4ODc1MmI"
    },
    {
      "type": "comment_pull_request",
      "time": "2023-08-30T14:32:24Z",
      "attributes": [
        {
          "name": "comment",
          "value": "Hey @sriramr244  I think you have added the RM package in this PR. Can you remove it?"
        }
      ],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "commented-by"
        },
        {
          "objectId": "129",
          "qualifier": "on"
        }
      ],
      "id": "IC_kwDODyNbyM5lSUkd"
    },
    {
      "type": "comment_pull_request",
      "time": "2023-08-30T14:36:38Z",
      "attributes": [
        {
          "name": "comment",
          "value": "Oops sorry I will remove it. Its a venv\r\n\r\nOn Wed, Aug 30, 2023 at 10:32\u202fAM Saurabh Rai ***@***.***>\r\nwrote:\r\n\r\n> Hey @sriramr244 <https://github.com/sriramr244> I think you have added\r\n> the RM package in this PR. Can you remove it?\r\n>\r\n> \u2014\r\n> Reply to this email directly, view it on GitHub\r\n> <https://github.com/srbhr/Resume-Matcher/pull/129#issuecomment-1699301661>,\r\n> or unsubscribe\r\n> <https://github.com/notifications/unsubscribe-auth/AMA3736EYR2VEBKZEC3BE53XX5FIHANCNFSM6AAAAAA4ETUYFA>\r\n> .\r\n> You are receiving this because you were mentioned.Message ID:\r\n> ***@***.***>\r\n>\r\n"
        }
      ],
      "relationships": [
        {
          "objectId": "sriramr244",
          "qualifier": "commented-by"
        },
        {
          "objectId": "129",
          "qualifier": "on"
        }
      ],
      "id": "IC_kwDODyNbyM5lSWT3"
    },
    {
      "type": "commit",
      "time": "2023-08-30T14:42:25Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Sriram R",
          "qualifier": "authored-by"
        },
        {
          "objectId": "41ffed2fba371cc032c251ca394262b2f38bbaac",
          "qualifier": "sha"
        },
        {
          "objectId": "129",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKDQxZmZlZDJmYmEzNzFjYzAzMmMyNTFjYTM5NDI2MmIyZjM4YmJhYWM"
    },
    {
      "type": "comment_pull_request",
      "time": "2023-08-30T14:44:21Z",
      "attributes": [
        {
          "name": "comment",
          "value": "The thing is that adding `qdrant-client` in the requirements.txt installs version <1. Which doesn't contains the URL parameter.  I think I need to add that into the README or some other file. "
        }
      ],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "commented-by"
        },
        {
          "objectId": "129",
          "qualifier": "on"
        }
      ],
      "id": "IC_kwDODyNbyM5lSZlA"
    },
    {
      "type": "merge_pull_request",
      "time": "2023-08-30T14:44:31Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "129",
          "qualifier": "merged-on-pull_request"
        }
      ],
      "id": "ME_lADODyNbyM5vr-oJzwAAAAJh_13e"
    },
    {
      "type": "close_pull_request",
      "time": "2023-08-30T14:44:31Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "129",
          "qualifier": "closed-on-pull_request"
        }
      ],
      "id": "CE_lADODyNbyM5vr-oJzwAAAAJh_14G"
    },
    {
      "type": "commit",
      "time": "2023-08-28T11:14:12Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "srbhr",
          "qualifier": "authored-by"
        },
        {
          "objectId": "a845626f20b5e598341369f1cb1758d1829287ef",
          "qualifier": "sha"
        },
        {
          "objectId": "127",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKGE4NDU2MjZmMjBiNWU1OTgzNDEzNjlmMWNiMTc1OGQxODI5Mjg3ZWY"
    },
    {
      "type": "merge_pull_request",
      "time": "2023-08-28T11:19:08Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "127",
          "qualifier": "merged-on-pull_request"
        }
      ],
      "id": "ME_lADODyNbyM5vbx51zwAAAAJgcaQN"
    },
    {
      "type": "close_pull_request",
      "time": "2023-08-28T11:19:08Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "127",
          "qualifier": "closed-on-pull_request"
        }
      ],
      "id": "CE_lADODyNbyM5vbx51zwAAAAJgcaQf"
    },
    {
      "type": "commit",
      "time": "2023-08-28T09:47:51Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Israel",
          "qualifier": "authored-by"
        },
        {
          "objectId": "f2b39756dedf3e877a0ec40646fcc9384d0dac18",
          "qualifier": "sha"
        },
        {
          "objectId": "126",
          "qualifier": "committed-to-pull_request"
        }
      ],
      "id": "C_kwDODyNbyNoAKGYyYjM5NzU2ZGVkZjNlODc3YTBlYzQwNjQ2ZmNjOTM4NGQwZGFjMTg"
    },
    {
      "type": "comment_review",
      "time": "2023-09-04T17:46:35Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "commented-by"
        },
        {
          "objectId": "126",
          "qualifier": "for-pull-request"
        }
      ],
      "id": "1609860896"
    },
    {
      "type": "merge_pull_request",
      "time": "2023-09-10T12:28:40Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "126",
          "qualifier": "merged-on-pull_request"
        }
      ],
      "id": "ME_lADODyNbyM5vbS9AzwAAAAJnfn-b"
    },
    {
      "type": "close_pull_request",
      "time": "2023-09-10T12:28:40Z",
      "attributes": [],
      "relationships": [
        {
          "objectId": "Saurabh Rai",
          "qualifier": "authored-by"
        },
        {
          "objectId": "126",
          "qualifier": "closed-on-pull_request"
        }
      ],
      "id": "CE_lADODyNbyM5vbS9AzwAAAAJnfn-h"
    }
  ]
}